<Type Name="CheckedListBox" FullName="System.Windows.Forms.CheckedListBox">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d2ba0042838fdb654d01656bb60fa077b0072088" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30703988" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CheckedListBox : System.Windows.Forms.ListBox" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi CheckedListBox extends System.Windows.Forms.ListBox" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.CheckedListBox" />
  <TypeSignature Language="VB.NET" Value="Public Class CheckedListBox&#xA;Inherits ListBox" />
  <TypeSignature Language="C++ CLI" Value="public ref class CheckedListBox : System::Windows::Forms::ListBox" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ListBox</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.LookupBindingProperties</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wyświetla <see cref="T:System.Windows.Forms.ListBox" /> , w którym zostanie wyświetlone okno wyboru z lewej strony każdego elementu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten formant zawiera listę elementów, które użytkownik może przejść za pomocą klawiatury lub pasek przewijania po prawej stronie formantu. Użytkownik może zaznaczyć przez jedną lub więcej elementów i zaznaczonych elementów może zostać przesłane z <xref:System.Windows.Forms.CheckedListBox.CheckedItemCollection> i <xref:System.Windows.Forms.CheckedListBox.CheckedIndexCollection>.  
  
 Aby dodać obiekty do listy w czasie wykonywania, przypisywania tablicą odwołania do obiektów z <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> metody. Na liście zostaną wyświetlone następnie domyślną wartość ciągu dla każdego obiektu. Można dodać elementy do listy z <xref:System.Windows.Forms.CheckedListBox.ObjectCollection.Add%2A> metody.  
  
 <xref:System.Windows.Forms.CheckedListBox> Obiekt obsługuje trzy stany za pośrednictwem <xref:System.Windows.Forms.CheckState> wyliczenie: <xref:System.Windows.Forms.CheckState.Checked>, <xref:System.Windows.Forms.CheckState.Indeterminate>, i <xref:System.Windows.Forms.CheckState.Unchecked>. Należy ustawić stan <xref:System.Windows.Forms.CheckState.Indeterminate> w kodzie, ponieważ interfejs użytkownika dla <xref:System.Windows.Forms.CheckedListBox> nie udostępniają mechanizm Aby to zrobić.  
  
 Jeśli <xref:System.Windows.Forms.ListBox.UseTabStops%2A> jest `true`, <xref:System.Windows.Forms.CheckedListBox> rozpozna i rozszerzy znaki tabulacji w tekście elementu, tworzenie kolumn. Te tabulatorów są zdefiniowane i nie można zmienić. Aby użyć niestandardowej tabulatorów, ustaw <xref:System.Windows.Forms.ListBox.UseTabStops%2A> do `false`ustaw <xref:System.Windows.Forms.ListBox.UseCustomTabOffsets%2A> do `true`i Dodaj wartości niestandardowych w celu <xref:System.Windows.Forms.ListBox.CustomTabOffsets%2A> kolekcji.  
  
> [!NOTE]
>  Jeśli <xref:System.Windows.Forms.CheckedListBox.UseCompatibleTextRendering%2A> właściwość jest `false`, <xref:System.Windows.Forms.ListBox.CustomTabOffsets%2A> właściwość zostanie zignorowana i zastąpione standardową kartę przesunięcia.  
  
 <xref:System.Windows.Forms.CheckedListBox> Klasa obsługuje następujące trzy indeksowane kolekcje:  
  
|Kolekcja|Zawieranie — klasa|  
|----------------|-------------------------|  
|Wszystkie elementy zawarte w <xref:System.Windows.Forms.CheckedListBox> formantu.|<xref:System.Windows.Forms.CheckedListBox.ObjectCollection>|  
|Zaznaczone elementy (w tym elementy w stanie nieokreślonym), który podzbiór elementy zawarte w <xref:System.Windows.Forms.CheckedListBox> formantu.|<xref:System.Windows.Forms.CheckedListBox.CheckedItemCollection>|  
|Zaznaczone indeksów, która jest podzbiorem indeksy w kolekcji elementów. Indeksy te elementy należy określić w stanie zaznaczone lub nieokreślony.|<xref:System.Windows.Forms.CheckedListBox.CheckedIndexCollection>|  
  
 Poniższe trzy tabele przedstawiono trzy indeksowane kolekcje który <xref:System.Windows.Forms.CheckedListBox> obsługuje klasy.  
  
 Pierwsza tabela zawiera przykład indeksowanej kolekcji elementów w formancie (wszystkie elementy zawarte w formancie).  
  
|Indeks|Element|Sprawdzanie stanu|  
|-----------|----------|-----------------|  
|0|obiekt 1|<xref:System.Windows.Forms.CheckState.Unchecked>|  
|1|Obiekt 2|<xref:System.Windows.Forms.CheckState.Checked>|  
|2|Obiekt 3|<xref:System.Windows.Forms.CheckState.Unchecked>|  
|3|Obiekt 4|<xref:System.Windows.Forms.CheckState.Indeterminate>|  
|4|Obiekt 5|<xref:System.Windows.Forms.CheckState.Checked>|  
  
 Druga tabela zawiera przykład indeksowanej kolekcji zaznaczonych elementów.  
  
|Indeks|Element|  
|-----------|----------|  
|0|Obiekt 2|  
|1|Obiekt 4|  
|2|Obiekt 5|  
  
 Trzeci tabeli przedstawiono przykład indeksowanej kolekcji indeksów zaznaczonych elementów.  
  
|Indeks|Indeks elementu|  
|-----------|-------------------|  
|0|1|  
|1|3|  
|2|4|  
  
   
  
## Examples  
 Poniższy przykład przedstawia, jak można użyć metody, właściwości i kolekcje <xref:System.Windows.Forms.CheckedListBox>. Jest to kompletnego przykładu gotowy do uruchomienia po skopiowaniu do projektu. Można sprawdzić i usuń zaznaczenie pola wyboru elementów, użyj pola tekstowego do dodawania elementów i po kliknięciu przycisku Zapisz przycisku, wyczyść pole wyboru zaznaczonych elementów.  
  
 [!code-cpp[Classic CheckedListBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CheckedListBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CheckedListBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CheckedListBox Example/CS/source.cs#1)]
 [!code-vb[Classic CheckedListBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CheckedListBox Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListBox" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CheckedListBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CheckedListBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.CheckedListBox" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie <xref:System.Windows.Forms.CheckedListBox> używa <xref:System.Windows.Forms.Control.SetStyle%2A> i `ResizeRedraw` wartość <xref:System.Windows.Forms.ControlStyles> do określenia, czy formant jest narysowany ponownie podczas zmiany rozmiaru.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckedIndices">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.CheckedListBox.CheckedIndexCollection CheckedIndices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CheckedListBox/CheckedIndexCollection CheckedIndices" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.CheckedIndices" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckedIndices As CheckedListBox.CheckedIndexCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::CheckedListBox::CheckedIndexCollection ^ CheckedIndices { System::Windows::Forms::CheckedListBox::CheckedIndexCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CheckedListBox+CheckedIndexCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Kolekcja zaznaczonych indeksów w tym <see cref="T:System.Windows.Forms.CheckedListBox" />.</summary>
        <value>
          <see cref="T:System.Windows.Forms.CheckedListBox.CheckedIndexCollection" /> Kolekcji <see cref="T:System.Windows.Forms.CheckedListBox" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kolekcja zaznaczonych indeksów jest podzbiorem indeksów do wszystkich elementów w kolekcji <xref:System.Windows.Forms.CheckedListBox> formantu. Indeksy te elementy należy określić w stanie zaznaczone lub nieokreślony.  
  
   
  
## Examples  
 Poniższy przykład wylicza zaznaczonych elementów w <xref:System.Windows.Forms.CheckedListBox.CheckedIndexCollection> aby zobaczyć, jakie Sprawdź stan elementu w. W przykładzie pokazano, za pomocą <xref:System.Windows.Forms.CheckedListBox.CheckedIndices%2A> właściwości do pobrania <xref:System.Windows.Forms.CheckedListBox.CheckedIndexCollection>i <xref:System.Windows.Forms.CheckedListBox.CheckedItems%2A> właściwości do pobrania <xref:System.Windows.Forms.CheckedListBox.CheckedItemCollection>.  
  
 Używa pierwszego pętli <xref:System.Windows.Forms.CheckedListBox.GetItemCheckState%2A> metodę, aby pobrać <xref:System.Windows.Forms.CheckState> poszczególnych zaznaczonych elementów Podany indeks elementu. Druga również pętli używa <xref:System.Windows.Forms.CheckedListBox.GetItemCheckState%2A>, ale używa <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A?displayProperty=nameWithType> metoda pobierania indeksu dla elementu.  
  
 [!code-cpp[CheckedListBox#2](~/samples/snippets/cpp/VS_Snippets_Winforms/CheckedListBox/CPP/source.cpp#2)]
 [!code-csharp[CheckedListBox#2](~/samples/snippets/csharp/VS_Snippets_Winforms/CheckedListBox/CS/source.cs#2)]
 [!code-vb[CheckedListBox#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CheckedListBox/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.CheckedListBox.CheckedIndexCollection" />
      </Docs>
    </Member>
    <Member MemberName="CheckedItems">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.CheckedListBox.CheckedItemCollection CheckedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CheckedListBox/CheckedItemCollection CheckedItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.CheckedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckedItems As CheckedListBox.CheckedItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::CheckedListBox::CheckedItemCollection ^ CheckedItems { System::Windows::Forms::CheckedListBox::CheckedItemCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CheckedListBox+CheckedItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Kolekcja zaznaczonych elementów w tym <see cref="T:System.Windows.Forms.CheckedListBox" />.</summary>
        <value>
          <see cref="T:System.Windows.Forms.CheckedListBox.CheckedItemCollection" /> Kolekcji <see cref="T:System.Windows.Forms.CheckedListBox" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kolekcja jest podzbiór obiektów w <xref:System.Windows.Forms.CheckedListBox.Items%2A> kolekcję reprezentującą tylko te elementy, których <xref:System.Windows.Forms.CheckState?displayProperty=nameWithType> jest `Checked` lub `Indeterminate`. Indeksy w tej kolekcji znajdują się w kolejności rosnącej.  
  
   
  
## Examples  
 Poniższy przykład wylicza zaznaczonych elementów w <xref:System.Windows.Forms.CheckedListBox.CheckedIndexCollection> aby zobaczyć, jakie Sprawdź stan elementu w. W przykładzie pokazano, za pomocą <xref:System.Windows.Forms.CheckedListBox.CheckedIndices%2A> właściwości do pobrania <xref:System.Windows.Forms.CheckedListBox.CheckedIndexCollection>i <xref:System.Windows.Forms.CheckedListBox.CheckedItems%2A> właściwości do pobrania <xref:System.Windows.Forms.CheckedListBox.CheckedItemCollection>.  
  
 Używa pierwszego pętli <xref:System.Windows.Forms.CheckedListBox.GetItemCheckState%2A> metodę, aby pobrać <xref:System.Windows.Forms.CheckState> poszczególnych zaznaczonych elementów Podany indeks elementu. Druga również pętli używa <xref:System.Windows.Forms.CheckedListBox.GetItemCheckState%2A>, ale używa <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A?displayProperty=nameWithType> metoda pobierania indeksu dla elementu.  
  
 Aby uruchomić ten przykład, wykonaj następujące czynności:  
  
1.  Tworzenie nowej aplikacji formularzy systemu Windows.  
  
2.  Dodaj <xref:System.Windows.Forms.CheckedListBox> i <xref:System.Windows.Forms.Button> do formularza.  
  
3.  Nazwa przycisku `WhatIsChecked`, Dodaj program obsługi dla jego <xref:System.Windows.Forms.Control.Click> zdarzeń, a następnie skopiuj kod z treści następujące procedury obsługi.  
  
4.  Niektóre elementy, aby dodać <xref:System.Windows.Forms.CheckedListBox>.  
  
5.  Uruchomić przykład i sprawdź niektóre pola wyboru w polu listy.  
  
6.  Kliknij przycisk.  
  
     Zostanie wyświetlone szereg pola komunikatów, wskazujące elementy, które zostały zaznaczone.  
  
 [!code-cpp[CheckedListBox#2](~/samples/snippets/cpp/VS_Snippets_Winforms/CheckedListBox/CPP/source.cpp#2)]
 [!code-csharp[CheckedListBox#2](~/samples/snippets/csharp/VS_Snippets_Winforms/CheckedListBox/CS/source.cs#2)]
 [!code-vb[CheckedListBox#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CheckedListBox/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.CheckedListBox.CheckedItemCollection" />
      </Docs>
    </Member>
    <Member MemberName="CheckOnClick">
      <MemberSignature Language="C#" Value="public bool CheckOnClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckOnClick" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.CheckOnClick" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckOnClick As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckOnClick { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy pole wyboru powinno być przełączane w przypadku, gdy element jest zaznaczony.</summary>
        <value>
          <see langword="true" /> Jeśli zaznaczenie jest stosowany od razu; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.CheckedListBox.CheckOnClick%2A> Wskazuje, czy pole wyboru powinno być przełączane zawsze, gdy element jest zaznaczony. Domyślnym zachowaniem jest zmienić wybór, kliknij pierwszy, a następnie kliknij ponownie, aby zastosować znacznik wyboru użytkownika. W niektórych przypadkach, jednak można wybrać ma zaznaczony element natychmiast po kliknięciu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje inicjowanie <xref:System.Windows.Forms.CheckedListBox> kontroli przez ustawienie <xref:System.Windows.Forms.CheckedListBox.CheckOnClick%2A>, <xref:System.Windows.Forms.CheckedListBox.SelectionMode%2A>, i <xref:System.Windows.Forms.CheckedListBox.ThreeDCheckBoxes%2A> właściwości. Przykład wypełnia <xref:System.Windows.Forms.CheckedListBox> z formantami i zestawy <xref:System.Windows.Forms.CheckedListBox.DisplayMember%2A> do <xref:System.Windows.Forms.Control.Name%2A?displayProperty=nameWithType> właściwości formantu.  
  
 Aby uruchomić przykład, wklej następujący kod w nadrzędnym formularza <xref:System.Windows.Forms.CheckedListBox> o nazwie `CheckedListBox1` i Wywołaj `InitializeCheckListBox` metody z konstruktora lub metody Load formularza.  
  
 [!code-cpp[System.Windows.Forms.PropertyGridExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.PropertyGridExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.PropertyGridExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckedListBox.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Click;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy użytkownik kliknie <see cref="T:System.Windows.Forms.CheckedListBox" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.CheckedListBox.Click> Przekazuje zdarzenia <xref:System.EventArgs> do jego obsługi zdarzeń, więc tylko oznacza wystąpił kliknięcie. Jeśli potrzebujesz bardziej szczegółowych informacji myszy (np. przycisk Liczba kliknięć, obracanie kółka lub lokalizacji), użyj <xref:System.Windows.Forms.Control.MouseDown> i <xref:System.Windows.Forms.Control.MouseUp> zdarzenia, które przechodzą <xref:System.Windows.Forms.MouseEventArgs> do obsługi zdarzeń.  
  
 Dwukrotnie kliknięcie konfiguruje się w ustawieniach myszy w systemie operacyjnym użytkownika. Użytkownik może dostosować ilość czasu, jaki może upłynąć między kliknięciami podczas podwójne kliknięcie przycisku myszy. <xref:System.Windows.Forms.CheckedListBox.Click> Zdarzenie jest wywoływane za każdym razem, gdy użytkownik kliknie dwukrotnie formantu. Na przykład, jeśli masz metody obsługi zdarzeń dla <xref:System.Windows.Forms.CheckedListBox.Click> i <xref:System.Windows.Forms.Control.DoubleClick> zdarzenia formularza, zdarzenia są wywoływane, gdy formularz zostanie dwukrotnie kliknięty i są nazywane obie metody obsługi zdarzeń. Jeśli użytkownik kliknie dwukrotnie formant, który nie obsługuje <xref:System.Windows.Forms.Control.DoubleClick> zdarzenia <xref:System.Windows.Forms.CheckedListBox.Click> może zostać dwukrotnie wywołane zdarzenie.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.CheckedListBox.Click> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.CheckedListBox> o nazwie `CheckedListBox1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.CheckedListBox.Click> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#157](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#157)]
 [!code-vb[System.Windows.Forms.EventExamples#157](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#157)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nowy obiekt ułatwień dostępu dla <see cref="T:System.Windows.Forms.CheckedListBox" /> formantu.</summary>
        <returns>Nowy <see cref="T:System.Windows.Forms.AccessibleObject" /> dla formantu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie zostanie jawnie wywołana <xref:System.Windows.Forms.CheckedListBox.CreateAccessibilityInstance%2A> metody, będzie ona wywoływana podczas <xref:System.Windows.Forms.Control.AccessibilityObject%2A> odwołuje się do właściwości.  
  
> [!NOTE]
>  Można pobrać lub ustawić <xref:System.Windows.Forms.Control.AccessibilityObject%2A> właściwość, należy dodać odwołanie do `Accessibility` zestawie zainstalowanym w środowisku .NET Framework.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.CheckedListBox.CreateAccessibilityInstance" /> w klasie pochodnej nie należy wywoływać klasy podstawowej <see cref="M:System.Windows.Forms.CheckedListBox.CreateAccessibilityInstance" /> metody.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateItemCollection">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.ListBox.ObjectCollection CreateItemCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.ListBox/ObjectCollection CreateItemCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.CreateItemCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateItemCollection () As ListBox.ObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::ListBox::ObjectCollection ^ CreateItemCollection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListBox+ObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie kolekcji elementów.</summary>
        <returns>A <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> reprezentujący nowej kolekcji elementów.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.CreateItemCollection" />
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera parametry tworzenia wymagane, gdy zostanie utworzony uchwyt formantu.</summary>
        <value>A <see cref="T:System.Windows.Forms.CreateParams" /> zawierający wymaganych parametrów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control.CreateParams%2A> Właściwości nie powinny być zastąpione i używane do dostosowywania właściwości formantu pochodnych. Właściwości, takie jak <xref:System.Windows.Forms.CreateParams.Caption%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.CreateParams.Width%2A?displayProperty=nameWithType>, i <xref:System.Windows.Forms.CreateParams.Height%2A?displayProperty=nameWithType> powinien być ustawiony przez odpowiednie właściwości formantu takich jak <xref:System.Windows.Forms.Control.Text%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.Width%2A?displayProperty=nameWithType> i <xref:System.Windows.Forms.Control.Height%2A?displayProperty=nameWithType>. <xref:System.Windows.Forms.CreateParams> Powinny być rozszerzony tylko są zawijania standardowe Klasa sterowania systemu Windows lub ustawić style nie został dostarczony przez obszar nazw formularzy systemu Windows. Aby uzyskać więcej informacji o tworzeniu parametrów sterujących, zobacz `CreateWindow` i `CreateWindowEx` funkcje i `CREATESTRUCT` dokumentacji struktury w odwołaniu do zestawu SDK platformy Windows znajdujący się w bibliotece MSDN pod http://msdn.microsoft.com/library.  
  
   
  
## Examples  
 Poniższy przykład kodu rozszerza <xref:System.Windows.Forms.Control.CreateParams%2A> właściwość <xref:System.Windows.Forms.Button> klasy. <xref:System.Windows.Forms.CreateParams.Style%2A?displayProperty=nameWithType> Właściwości została zmieniona, co powoduje, że przycisk, aby wyświetlić <xref:System.Drawing.Icon> zamiast <xref:System.Drawing.Image>. W tym przykładzie wymaga klasy, która dziedziczy <xref:System.Windows.Forms.Button> klasy.  
  
 [!code-cpp[CreateParams#3](~/samples/snippets/cpp/VS_Snippets_Winforms/CreateParams/CPP/createparams.cpp#3)]
 [!code-csharp[CreateParams#3](~/samples/snippets/csharp/VS_Snippets_Winforms/CreateParams/CS/createparams.cs#3)]
 [!code-vb[CreateParams#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CreateParams/VB/createparams.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem niezarządzanym. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="P:System.Windows.Forms.Control.CreateParams" /> właściwości w klasie pochodnej, użyj klasy podstawowej <see cref="P:System.Windows.Forms.Control.CreateParams" /> właściwości do rozszerzania implementacji podstawowej. W przeciwnym razie musisz podać wszystkie wdrożenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia źródło danych dla formantu.</summary>
        <value>Obiekt reprezentujący źródło danych.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckedListBox.DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataSourceChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="P:System.Windows.Forms.CheckedListBox.DataSource" /> zmiany właściwości.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayMember">
      <MemberSignature Language="C#" Value="public string DisplayMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayMember" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.DisplayMember" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który określa, że właściwości obiektów zawartych w polu listy, którego zawartość ma być wyświetlany.</summary>
        <value>Ciąg określający nazwę właściwości obiektów zawartych w polu listy. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie <xref:System.Windows.Forms.CheckedListBox> Wyświetla domyślny ciąg dla elementów zawiera. Jednak <xref:System.Windows.Forms.CheckedListBox> mogą wyświetlać różne typy obiektów i chcesz zmienić, określając wyświetlanego ciągu <xref:System.Windows.Forms.CheckedListBox.DisplayMember%2A> właściwości. Jeśli określona właściwość nie istnieje, lub wartość <xref:System.Windows.Forms.CheckedListBox.DisplayMember%2A> właściwości to ciąg pusty (""), wyniki obiektu <xref:System.Windows.Forms.ListBox.ToString%2A> metody są wyświetlane w zamian.  
  
 Jeśli nowa wartość <xref:System.Windows.Forms.CheckedListBox.DisplayMember%2A> nie można ustawiać utrzymywana jest poprzednia wartość.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje inicjowanie <xref:System.Windows.Forms.CheckedListBox> kontroli przez ustawienie <xref:System.Windows.Forms.CheckedListBox.CheckOnClick%2A>, <xref:System.Windows.Forms.CheckedListBox.SelectionMode%2A>, i <xref:System.Windows.Forms.CheckedListBox.ThreeDCheckBoxes%2A> właściwości. Przykład wypełnia <xref:System.Windows.Forms.CheckedListBox> z formantami i zestawy <xref:System.Windows.Forms.CheckedListBox.DisplayMember%2A> do <xref:System.Windows.Forms.Control.Name%2A?displayProperty=nameWithType> właściwości formantu.  
  
 Aby uruchomić przykład, wklej następujący kod w nadrzędnym formularza <xref:System.Windows.Forms.CheckedListBox> o nazwie `CheckedListBox1` i Wywołaj `InitializeCheckListBox` metody z konstruktora lub metody Load formularza.  
  
 [!code-cpp[System.Windows.Forms.PropertyGridExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.PropertyGridExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.PropertyGridExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayMemberChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DisplayMemberChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DisplayMemberChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckedListBox.DisplayMemberChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DisplayMemberChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DisplayMemberChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="P:System.Windows.Forms.CheckedListBox.DisplayMember" /> zmiany właściwości.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawItemEventHandler DrawItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawItemEventHandler DrawItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckedListBox.DrawItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawItem As DrawItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawItemEventHandler ^ DrawItem;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy visual aspektów rysowanych przez właściciela <see cref="T:System.Windows.Forms.CheckedListBox" /> zmiany. To zdarzenie nie jest ważna dla tej klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest używany przez rysowanych przez właściciela <xref:System.Windows.Forms.CheckedListBox>. Zdarzenie jest wywoływane tylko wtedy, gdy <xref:System.Windows.Forms.CheckedListBox.DrawMode%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.DrawMode.OwnerDrawFixed?displayProperty=nameWithType> lub <xref:System.Windows.Forms.DrawMode.OwnerDrawVariable?displayProperty=nameWithType>. To zdarzenie służy do wykonywania zadań potrzebne do rysowania elementów <xref:System.Windows.Forms.CheckedListBox>. Jeśli masz elementu o zmiennej długości (to znaczy <xref:System.Windows.Forms.CheckedListBox.DrawMode%2A> ma ustawioną wartość <xref:System.Windows.Forms.DrawMode.OwnerDrawVariable?displayProperty=nameWithType>), <xref:System.Windows.Forms.CheckedListBox.MeasureItem> zdarzenie jest wywoływane przed narysowaniem elementu. Można utworzyć programu obsługi zdarzeń dla <xref:System.Windows.Forms.CheckedListBox.MeasureItem> zdarzeń, aby określić rozmiar elementu, który ma do rysowania programu obsługi zdarzeń dla <xref:System.Windows.Forms.CheckedListBox.DrawItem> zdarzeń.  
  
 To zdarzenie nie jest ważna dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawMode">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.DrawMode DrawMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DrawMode DrawMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.DrawMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DrawMode As DrawMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DrawMode DrawMode { System::Windows::Forms::DrawMode get(); void set(System::Windows::Forms::DrawMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, tryb rysowania elementy <see cref="T:System.Windows.Forms.CheckedListBox" />. Ta właściwość nie jest ważna dla tej klasy.</summary>
        <value>Zawsze <see cref="T:System.Windows.Forms.DrawMode" /> z <see langword="Normal" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość nie jest ważna dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemChecked">
      <MemberSignature Language="C#" Value="public bool GetItemChecked (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetItemChecked(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.GetItemChecked(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemChecked (index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetItemChecked(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeks elementu.</param>
        <summary>Zwraca wartość wskazującą, czy określony element jest zaznaczony.</summary>
        <returns>
          <see langword="true" /> Jeśli element jest wyewidencjonowany; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.CheckedListBox.GetItemChecked%2A> Zwraca `true` Jeśli wartość <xref:System.Windows.Forms.CheckState> jest `Checked` lub `Indeterminate` dla elementu. Aby określić z określonym stanem jest element, użyj <xref:System.Windows.Forms.CheckedListBox.GetItemCheckState%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="index" /> Określony jest mniejsza od zera.  
  
 —lub—  
  
 <paramref name="index" /> Jest mniejsza niż liczba elementów na liście.</exception>
        <altmember cref="M:System.Windows.Forms.CheckedListBox.GetItemCheckState(System.Int32)" />
        <altmember cref="T:System.Windows.Forms.CheckState" />
      </Docs>
    </Member>
    <Member MemberName="GetItemCheckState">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.CheckState GetItemCheckState (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.CheckState GetItemCheckState(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.GetItemCheckState(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemCheckState (index As Integer) As CheckState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::CheckState GetItemCheckState(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CheckState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeks elementu można pobrać z wartością zaznaczenia.</param>
        <summary>Zwraca wartość wskazującą, sprawdź stan bieżącego elementu.</summary>
        <returns>Jeden z <see cref="T:System.Windows.Forms.CheckState" /> wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.CheckedListBox.GetItemCheckState%2A> Metoda pozwala, aby pobrać <xref:System.Windows.Forms.CheckState> wartość elementu danego indeksu. Jeśli nigdy nie ustawić stan wyboru elementu do `Indeterminate`, następnie użyć <xref:System.Windows.Forms.CheckedListBox.GetItemChecked%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład wylicza zaznaczonych elementów w <xref:System.Windows.Forms.CheckedListBox.CheckedIndexCollection> aby zobaczyć, jakie Sprawdź stan elementu w. W przykładzie pokazano, przy użyciu <xref:System.Windows.Forms.CheckedListBox.GetItemCheckState%2A> metodę, aby ustawić stan wyboru elementu. W przykładzie pokazano, za pomocą <xref:System.Windows.Forms.CheckedListBox.CheckedIndices%2A> właściwości do pobrania <xref:System.Windows.Forms.CheckedListBox.CheckedIndexCollection> i <xref:System.Windows.Forms.CheckedListBox.CheckedItems%2A> właściwości do pobrania <xref:System.Windows.Forms.CheckedListBox.CheckedItemCollection>.  
  
 Używa pierwszego pętli <xref:System.Windows.Forms.CheckedListBox.GetItemCheckState%2A> metodę, aby pobrać <xref:System.Windows.Forms.CheckState> poszczególnych zaznaczonych elementów Podany indeks elementu. Druga również pętli używa <xref:System.Windows.Forms.CheckedListBox.GetItemCheckState%2A>, ale używa <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A?displayProperty=nameWithType> metoda pobierania indeksu dla elementu.  
  
 [!code-cpp[CheckedListBox#2](~/samples/snippets/cpp/VS_Snippets_Winforms/CheckedListBox/CPP/source.cpp#2)]
 [!code-csharp[CheckedListBox#2](~/samples/snippets/csharp/VS_Snippets_Winforms/CheckedListBox/CS/source.cs#2)]
 [!code-vb[CheckedListBox#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CheckedListBox/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> Określony jest mniejsza od zera.  
  
 —lub—  
  
 <paramref name="index" /> Jest mniejsza niż liczba elementów na liście.</exception>
        <altmember cref="M:System.Windows.Forms.CheckedListBox.GetItemChecked(System.Int32)" />
        <altmember cref="T:System.Windows.Forms.CheckState" />
      </Docs>
    </Member>
    <Member MemberName="ItemCheck">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ItemCheckEventHandler ItemCheck;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ItemCheckEventHandler ItemCheck" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckedListBox.ItemCheck" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCheck As ItemCheckEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ItemCheckEventHandler ^ ItemCheck;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemCheckEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zmianie stanu zaznaczenia elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stan wyboru jest aktualizowana dopiero po <xref:System.Windows.Forms.CheckedListBox.ItemCheck> zdarzenie.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.CheckedListBox.ItemCheck> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.CheckedListBox> o nazwie `CheckedListBox1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.CheckedListBox.ItemCheck> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#156](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#156)]
 [!code-vb[System.Windows.Forms.EventExamples#156](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#156)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemHeight">
      <MemberSignature Language="C#" Value="public override int ItemHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ItemHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.ItemHeight" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ItemHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ItemHeight { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wysokość obszaru elementu.</summary>
        <value>Wysokość w pikselach obszaru elementu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten pomiar jest oparta na wysokość czcionki oraz małych margines zapewnienie biały znak wokół elementu.  
  
 Extender znaków, takiego jak "g" i "y" nie są wyświetlane prawidłowo po zmianie czcionki do Arial 9.75 punktu. Aby rozwiązać ten problem, klasa wyprowadzona z <xref:System.Windows.Forms.CheckedListBox> i zastąpić <xref:System.Windows.Forms.CheckedListBox.ItemHeight%2A> do zwrócenia `base.ItemHeight+2`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.CheckedListBox.ObjectCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CheckedListBox/ObjectCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As CheckedListBox.ObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::CheckedListBox::ObjectCollection ^ Items { System::Windows::Forms::CheckedListBox::ObjectCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListControlStringCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CheckedListBox+ObjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję elementów w tym <see cref="T:System.Windows.Forms.CheckedListBox" />.</summary>
        <value>
          <see cref="T:System.Windows.Forms.CheckedListBox.ObjectCollection" /> Kolekcję reprezentującą elementy <see cref="T:System.Windows.Forms.CheckedListBox" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.CheckedListBox.Items%2A> Właściwości pozwala uzyskać odwołania do listy elementów, które są obecnie przechowywane w <xref:System.Windows.Forms.CheckedListBox> formantu. Z tym odwołaniem można dodawać elementów, usuń elementy i uzyskać liczbę elementów w kolekcji. Aby uzyskać więcej informacji o zadaniach wykonanych z kolekcji elementów, zobacz <xref:System.Windows.Forms.CheckedListBox.ObjectCollection> klasy tematy dokumentacji.  
  
   
  
## Examples  
 Poniższy przykład wylicza zaznaczonych elementów w <xref:System.Windows.Forms.CheckedListBox.CheckedIndexCollection> aby zobaczyć, jakie Sprawdź stan elementu w. W przykładzie użyto <xref:System.Windows.Forms.CheckedListBox.Items%2A> właściwości do pobrania <xref:System.Windows.Forms.CheckedListBox.ObjectCollection> pobrać indeksu przy użyciu elementu <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A?displayProperty=nameWithType> metody. W przykładzie pokazano, za pomocą <xref:System.Windows.Forms.CheckedListBox.CheckedIndices%2A> właściwości do pobrania <xref:System.Windows.Forms.CheckedListBox.CheckedIndexCollection>i <xref:System.Windows.Forms.CheckedListBox.CheckedItems%2A> właściwości do pobrania <xref:System.Windows.Forms.CheckedListBox.CheckedItemCollection>.  
  
 Używa pierwszego pętli <xref:System.Windows.Forms.CheckedListBox.GetItemCheckState%2A> metodę, aby pobrać <xref:System.Windows.Forms.CheckState> poszczególnych zaznaczonych elementów Podany indeks elementu. Druga również pętli używa <xref:System.Windows.Forms.CheckedListBox.GetItemCheckState%2A>, ale używa <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A?displayProperty=nameWithType> metoda pobierania indeksu dla elementu.  
  
 [!code-cpp[CheckedListBox#2](~/samples/snippets/cpp/VS_Snippets_Winforms/CheckedListBox/CPP/source.cpp#2)]
 [!code-csharp[CheckedListBox#2](~/samples/snippets/csharp/VS_Snippets_Winforms/CheckedListBox/CS/source.cs#2)]
 [!code-vb[CheckedListBox#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CheckedListBox/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CheckedListBox.CheckedItems" />
        <altmember cref="P:System.Windows.Forms.CheckedListBox.CheckedIndices" />
      </Docs>
    </Member>
    <Member MemberName="MeasureItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MeasureItemEventHandler MeasureItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MeasureItemEventHandler MeasureItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckedListBox.MeasureItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MeasureItem As MeasureItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MeasureItemEventHandler ^ MeasureItem;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MeasureItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy rysowane przez właściciela <see cref="T:System.Windows.Forms.ListBox" /> jest tworzony i rozmiary elementów listy. To zdarzenie nie jest ważna dla tej klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można utworzyć program obsługi zdarzeń dla tego zdarzenia określić rozmiar elementu przed jest rysowana <xref:System.Windows.Forms.CheckedListBox.DrawItem> zdarzeń. Zdarzenie jest wywoływane tylko wtedy, gdy <xref:System.Windows.Forms.CheckedListBox.DrawMode%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.DrawMode.OwnerDrawVariable>.  
  
 Maksymalna wysokość <xref:System.Windows.Forms.ListBox> element jest 255 pikseli.  
  
 To zdarzenie nie jest ważna dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckedListBox.MouseClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseClick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy użytkownik kliknie <see cref="T:System.Windows.Forms.CheckedListBox" /> formantu przy użyciu myszy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.CheckedListBox.MouseClick> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.CheckedListBox> o nazwie `CheckedListBox1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.CheckedListBox.MouseClick> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#158](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#158)]
 [!code-vb[System.Windows.Forms.EventExamples#158](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#158)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBackColorChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.OnBackColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBackColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBackColorChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected override void OnClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.OnClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClick(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.CheckedListBox.Click" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.CheckedListBox.OnClick%2A> Metody wybiera lub wyczyszczenie pola wyboru elementu, który zostanie kliknięty. Jeśli <xref:System.Windows.Forms.CheckedListBox.CheckOnClick%2A> właściwość jest ustawiona na `true`, pole wyboru jest włączane z czasu stan zaznaczony lub wyczyszczone pierwszy element zostanie kliknięty. W przeciwnym razie pole wyboru jest włączane tylko wtedy, gdy element jest zaznaczony.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.CheckedListBox.OnClick%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.CheckedListBox.OnClick(System.EventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.CheckedListBox.OnClick(System.EventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDrawItem">
      <MemberSignature Language="C#" Value="protected override void OnDrawItem (System.Windows.Forms.DrawItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDrawItem(class System.Windows.Forms.DrawItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDrawItem (e As DrawItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDrawItem(System::Windows::Forms::DrawItemEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DrawItemEventArgs" /> Obiektu o szczegóły</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.CheckedListBox.DrawItem" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.CheckedListBox.OnDrawItem%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.CheckedListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.CheckedListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.Control.FontChanged" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.CheckedListBox.OnFontChanged%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.CheckedListBox.OnFontChanged(System.EventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.CheckedListBox.OnFontChanged(System.EventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.Control.HandleCreated" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.CheckedListBox.OnHandleCreated%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.CheckedListBox.OnHandleCreated(System.EventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.CheckedListBox.OnHandleCreated(System.EventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemCheck">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCheck (System.Windows.Forms.ItemCheckEventArgs ice);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCheck(class System.Windows.Forms.ItemCheckEventArgs ice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCheck (ice As ItemCheckEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCheck(System::Windows::Forms::ItemCheckEventArgs ^ ice);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ice" Type="System.Windows.Forms.ItemCheckEventArgs" />
      </Parameters>
      <Docs>
        <param name="ice">
          <see cref="T:System.Windows.Forms.ItemCheckEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.CheckedListBox.ItemCheck" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.CheckedListBox.OnItemCheck%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.CheckedListBox.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.CheckedListBox.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyPress">
      <MemberSignature Language="C#" Value="protected override void OnKeyPress (System.Windows.Forms.KeyPressEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyPress(class System.Windows.Forms.KeyPressEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyPress (e As KeyPressEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyPress(System::Windows::Forms::KeyPressEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyPressEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> Który został zgłoszony.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.Control.KeyPress" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli zostanie naciśnięty klawisz spacji i <xref:System.Windows.Forms.CheckedListBox.SelectionMode%2A> nie ustawiono właściwości <xref:System.Windows.Forms.SelectionMode.None?displayProperty=nameWithType>, <xref:System.Windows.Forms.CheckedListBox.OnKeyPress%2A> przełączniki metody aktualnie wybrany stan wyboru elementu.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.CheckedListBox.OnKeyPress%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.CheckedListBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.CheckedListBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMeasureItem">
      <MemberSignature Language="C#" Value="protected override void OnMeasureItem (System.Windows.Forms.MeasureItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMeasureItem(class System.Windows.Forms.MeasureItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMeasureItem (e As MeasureItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMeasureItem(System::Windows::Forms::MeasureItemEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MeasureItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.MeasureItemEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.CheckedListBox.MeasureItem" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.CheckedListBox.OnMeasureItem%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.CheckedListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.CheckedListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanged">
      <MemberSignature Language="C#" Value="protected override void OnSelectedIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSelectedIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.OnSelectedIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSelectedIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSelectedIndexChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.ListBox.SelectedIndexChanged" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.CheckedListBox.OnSelectedIndexChanged%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.CheckedListBox.OnSelectedIndexChanged(System.EventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.CheckedListBox.OnSelectedIndexChanged(System.EventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia dopełnienie w <see cref="T:System.Windows.Forms.CheckedListBox" />. Ta właściwość nie jest ważna dla tej klasy.</summary>
        <value>A <see cref="T:System.Windows.Forms.Padding" /> reprezentujący właściwości wewnętrzne odstępy formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formanty odbierania wartości domyślne dla <xref:System.Windows.Forms.Control.Padding%2A> będących rozsądnych bliski dotyczące interfejsu użytkownika systemu Windows. Pewnych zmian nadal może być konieczne dla określonej aplikacji.  
  
 Ta właściwość nie jest ważna dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshItems">
      <MemberSignature Language="C#" Value="protected override void RefreshItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RefreshItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.RefreshItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RefreshItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RefreshItems();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Analizuje wszystkie <see cref="T:System.Windows.Forms.CheckedListBox" /> elementy ponownie i pobiera nowe ciągów tekstowych dla elementów.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionMode">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.SelectionMode SelectionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.SelectionMode SelectionMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.SelectionMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SelectionMode As SelectionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::SelectionMode SelectionMode { System::Windows::Forms::SelectionMode get(); void set(System::Windows::Forms::SelectionMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SelectionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą tryb zaznaczania.</summary>
        <value>Albo <see langword="One" /> lub <see langword="None" /> wartość <see cref="T:System.Windows.Forms.SelectionMode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.CheckedListBox.SelectionMode%2A> Właściwość określa, czy można wybrać jeden element w polu listy lub można wybrać żadnych elementów. Aby uzyskać <xref:System.Windows.Forms.CheckedListBox> obiekty, wybór wielokrotny nie jest obsługiwane. Można ustawić trybu jednego elementu lub elementów.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje inicjowanie <xref:System.Windows.Forms.CheckedListBox> kontroli przez ustawienie <xref:System.Windows.Forms.CheckedListBox.SelectionMode%2A> Aby zezwolić na liście, należy wybrać jeden element.  
  
 Aby uruchomić przykład, wklej następujący kod w nadrzędnym formularza <xref:System.Windows.Forms.CheckedListBox> o nazwie `CheckedListBox1` i Wywołaj `InitializeCheckListBox` metody z konstruktora lub metody Load formularza.  
  
 [!code-cpp[System.Windows.Forms.PropertyGridExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.PropertyGridExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.PropertyGridExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Nastąpiła próba można przypisać wartość, która nie jest <see cref="T:System.Windows.Forms.SelectionMode" /> wartość <see langword="One" /> lub <see langword="None" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Nastąpiła próba można przypisać <see langword="MultiExtended" /> wartość <see cref="T:System.Windows.Forms.SelectionMode" /> do formantu.</exception>
        <altmember cref="T:System.Windows.Forms.SelectionMode" />
      </Docs>
    </Member>
    <Member MemberName="SetItemChecked">
      <MemberSignature Language="C#" Value="public void SetItemChecked (int index, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetItemChecked(int32 index, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.SetItemChecked(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetItemChecked (index As Integer, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetItemChecked(int index, bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="index">Indeks elementu można ustawić stan wyboru.</param>
        <param name="value">
          <see langword="true" /> Aby ustawić element jako zaznaczone; w przeciwnym razie <see langword="false" />.</param>
        <summary>Ustawia <see cref="T:System.Windows.Forms.CheckState" /> dla elementu pod określonym indeksem do <see langword="Checked" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wartość `true` jest przekazywana, ta metoda ustawia <xref:System.Windows.Forms.CheckState> do wartości `Checked`. Wartość `false` ustawia <xref:System.Windows.Forms.CheckState> do `Unchecked`.  
  
   
  
## Examples  
 Poniższy przykład wylicza elementy <xref:System.Windows.Forms.CheckedListBox> i sprawdza co inny element na liście. W przykładzie pokazano, za pomocą <xref:System.Windows.Forms.CheckedListBox.SetItemCheckState%2A> i <xref:System.Windows.Forms.CheckedListBox.SetItemChecked%2A> metody służące do sprawdzania stanu elementu. Dla każdego elementu, który ma być sprawdzony <xref:System.Windows.Forms.CheckedListBox.SetItemCheckState%2A> jest wywoływana, aby ustawić <xref:System.Windows.Forms.CheckState> do `Indeterminate`, podczas gdy <xref:System.Windows.Forms.CheckedListBox.SetItemChecked%2A> jest wywoływana na inny element, aby ustawić stan zaznaczenia `Checked`.  
  
 W przykładzie pokazano, za pomocą <xref:System.Windows.Forms.CheckedListBox.Items%2A> właściwości do pobrania <xref:System.Windows.Forms.CheckedListBox.ObjectCollection> uzyskanie <xref:System.Windows.Forms.ListBox.ObjectCollection.Count%2A> elementów.  
  
 [!code-cpp[CheckedListBox#3](~/samples/snippets/cpp/VS_Snippets_Winforms/CheckedListBox/CPP/source.cpp#3)]
 [!code-csharp[CheckedListBox#3](~/samples/snippets/csharp/VS_Snippets_Winforms/CheckedListBox/CS/source.cs#3)]
 [!code-vb[CheckedListBox#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CheckedListBox/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Określony indeks jest mniejszy od zera.  
  
 —lub—  
  
 W indeksie jest większa niż liczba elementów na liście.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetItemCheckState">
      <MemberSignature Language="C#" Value="public void SetItemCheckState (int index, System.Windows.Forms.CheckState value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetItemCheckState(int32 index, valuetype System.Windows.Forms.CheckState value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.SetItemCheckState(System.Int32,System.Windows.Forms.CheckState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetItemCheckState (index As Integer, value As CheckState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetItemCheckState(int index, System::Windows::Forms::CheckState value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Windows.Forms.CheckState" />
      </Parameters>
      <Docs>
        <param name="index">Indeks elementu można ustawić stanu.</param>
        <param name="value">Jeden z <see cref="T:System.Windows.Forms.CheckState" /> wartości.</param>
        <summary>Ustawia stan wyboru elementu pod określonym indeksem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.CheckedListBox.SetItemCheckState%2A> Metoda zgłasza <xref:System.Windows.Forms.CheckedListBox.ItemCheck> zdarzeń.  
  
 Elementy, których <xref:System.Windows.Forms.CheckState> ustawiono `Indeterminate` wyświetlany ze zaznaczone pole wyboru, ale pole jest niedostępne, aby wskazać nieokreślony stan zaznaczenia elementu.  
  
   
  
## Examples  
 Poniższy przykład wylicza elementy <xref:System.Windows.Forms.CheckedListBox> i sprawdza co inny element na liście. W przykładzie pokazano, za pomocą <xref:System.Windows.Forms.CheckedListBox.SetItemCheckState%2A> i <xref:System.Windows.Forms.CheckedListBox.SetItemChecked%2A> metody służące do sprawdzania stanu elementu. Dla każdego elementu, który ma być sprawdzony <xref:System.Windows.Forms.CheckedListBox.SetItemCheckState%2A> jest wywoływana, aby ustawić <xref:System.Windows.Forms.CheckState> do `Indeterminate`, podczas gdy <xref:System.Windows.Forms.CheckedListBox.SetItemChecked%2A> jest wywoływana na inny element, aby ustawić stan zaznaczenia `Checked`.  
  
 W przykładzie pokazano, za pomocą <xref:System.Windows.Forms.CheckedListBox.Items%2A> właściwości do pobrania <xref:System.Windows.Forms.CheckedListBox.ObjectCollection> uzyskanie <xref:System.Windows.Forms.ListBox.ObjectCollection.Count%2A> elementów.  
  
 [!code-cpp[CheckedListBox#3](~/samples/snippets/cpp/VS_Snippets_Winforms/CheckedListBox/CPP/source.cpp#3)]
 [!code-csharp[CheckedListBox#3](~/samples/snippets/csharp/VS_Snippets_Winforms/CheckedListBox/CS/source.cs#3)]
 [!code-vb[CheckedListBox#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CheckedListBox/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> Określony jest mniejsza od zera.  
  
 —lub—  
  
 <paramref name="index" /> Jest większa niż lub równa Liczba elementów na liście.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="value" /> Nie jest jednym z <see cref="T:System.Windows.Forms.CheckState" /> wartości.</exception>
        <altmember cref="T:System.Windows.Forms.CheckState" />
      </Docs>
    </Member>
    <Member MemberName="ThreeDCheckBoxes">
      <MemberSignature Language="C#" Value="public bool ThreeDCheckBoxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThreeDCheckBoxes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.ThreeDCheckBoxes" />
      <MemberSignature Language="VB.NET" Value="Public Property ThreeDCheckBoxes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ThreeDCheckBoxes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy pola wyboru mają <see cref="T:System.Windows.Forms.ButtonState" /> z <see langword="Flat" /> lub <see langword="Normal" />.</summary>
        <value>
          <see langword="true" /> Jeśli pole wyboru ma wygląd płaski; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje inicjowanie <xref:System.Windows.Forms.CheckedListBox> kontroli przez ustawienie <xref:System.Windows.Forms.CheckedListBox.CheckOnClick%2A>, <xref:System.Windows.Forms.CheckedListBox.SelectionMode%2A>, i <xref:System.Windows.Forms.CheckedListBox.ThreeDCheckBoxes%2A> właściwości. Przykład wypełnia <xref:System.Windows.Forms.CheckedListBox> z formantami i zestawy <xref:System.Windows.Forms.CheckedListBox.DisplayMember%2A> do <xref:System.Windows.Forms.Control.Name%2A?displayProperty=nameWithType> właściwości formantu.  
  
 Aby uruchomić przykład, wklej następujący kod w nadrzędnym formularza <xref:System.Windows.Forms.CheckedListBox> o nazwie `CheckedListBox1` i Wywołaj `InitializeCheckListBox` metody z konstruktora lub metody Load formularza.  
  
 [!code-cpp[System.Windows.Forms.PropertyGridExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.PropertyGridExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.PropertyGridExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ButtonState" />
      </Docs>
    </Member>
    <Member MemberName="UseCompatibleTextRendering">
      <MemberSignature Language="C#" Value="public bool UseCompatibleTextRendering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCompatibleTextRendering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.UseCompatibleTextRendering" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCompatibleTextRendering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCompatibleTextRendering { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy używać <see cref="T:System.Drawing.Graphics" /> klasy ([!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]) lub <see cref="T:System.Windows.Forms.TextRenderer" /> klasy ([!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]) do renderowania tekstu.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Drawing.Graphics" /> klasy powinny być używane do przeprowadzenia renderowanie tekstu zgodność z wersjami 1.0 i 1.1. programu .NET Framework; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `UseCompatibleTextRendering` Właściwości mają na celu dostarczenie visual zgodność formanty formularzy systemu Windows w tym renderowania tekstu przy użyciu <xref:System.Windows.Forms.TextRenderer> klasy i [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] i [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)] aplikacji, które wykonują renderowanie tekstu niestandardowego za pomocą <xref:System.Drawing.Graphics>klasy. W większości przypadków, jeśli aplikacja nie jest uaktualniany z [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] lub [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)], zaleca się pozostawienie `UseCompatibleTextRendering` ustawioną wartość domyślną `false`.  
  
 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] Na podstawie <xref:System.Windows.Forms.TextRenderer> klasy została wprowadzona w systemie [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] zwiększyć wydajność, aby tekst wygląd i lepszą obsługę międzynarodowe czcionki. W starszych wersjach [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] na podstawie <xref:System.Drawing.Graphics> klasa została użyta do wykonania wszystkich renderowanie tekstu. [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] oblicza odstępy i zawijanie zależy od [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]. W aplikacji formularzy systemu Windows, która używa <xref:System.Drawing.Graphics> klasy do renderowania tekstu, może to spowodować tekstu dla kontrolek, które używają <xref:System.Windows.Forms.TextRenderer> się pojawić różne od innego tekstu w aplikacji. Aby rozwiązać ten niezgodności, można ustawić `UseCompatibleTextRendering` właściwości `true` dla określonego formantu. Aby ustawić `UseCompatibleTextRendering` do `true` dla wszystkich obsługiwanych formantów w aplikacji, należy wywołać <xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A?displayProperty=nameWithType> metody z parametrem `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)" />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering" />
      </Docs>
    </Member>
    <Member MemberName="ValueMember">
      <MemberSignature Language="C#" Value="public string ValueMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValueMember" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.ValueMember" />
      <MemberSignature Language="VB.NET" Value="Public Property ValueMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValueMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który określa właściwości źródła danych, z którego ma zostać narysowany wartość.</summary>
        <value>Ciąg, który określa właściwość źródła danych, z którego ma zostać narysowany wartość.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Określ zawartość <xref:System.Windows.Forms.CheckedListBox.ValueMember%2A> właściwości w przypadkach, gdy powiązanie danych.  
  
 Możesz wyczyścić <xref:System.Windows.Forms.CheckedListBox.ValueMember%2A> właściwości przez ustawienie właściwości na ciąg pusty ("") lub `null`.  
  
 Ustawienie nowego <xref:System.Windows.Forms.CheckedListBox.ValueMember%2A> zgłasza właściwości <xref:System.Windows.Forms.CheckedListBox.ValueMemberChanged> i <xref:System.Windows.Forms.ListControl.SelectedValueChanged> zdarzenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Nie można odnaleźć określonej właściwości na obiekt określony przez <see cref="P:System.Windows.Forms.CheckedListBox.DataSource" /> właściwości.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValueMemberChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ValueMemberChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ValueMemberChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckedListBox.ValueMemberChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ValueMemberChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ValueMemberChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="P:System.Windows.Forms.CheckedListBox.ValueMember" /> zmiany właściwości.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WmReflectCommand">
      <MemberSignature Language="C#" Value="protected override void WmReflectCommand (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WmReflectCommand(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.WmReflectCommand(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WmReflectCommand (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WmReflectCommand(System::Windows::Forms::Message % m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <see cref="T:System.Windows.Forms.Message" /> Okien najwyższego poziomu, wysyłane do <see cref="T:System.Windows.Forms.CheckedListBox" /> formantu.</param>
        <summary>Przetwarza komunikat polecenia <see cref="T:System.Windows.Forms.CheckedListBox" /> formant uzyskuje z okna najwyższego poziomu.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem niezarządzanym. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">Systemu Windows <see cref="T:System.Windows.Forms.Message" /> do procesu.</param>
        <summary>Przetwarza wiadomości systemu Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje zastępowanie <xref:System.Windows.Forms.Control.WndProc%2A> metody do obsługi komunikatów systemu operacyjnego określone w <xref:System.Windows.Forms.Message> struktury. Komunikat WM_ACTIVATEAPP system operacyjny jest obsługiwany w tym przykładzie, aby dowiedzieć się, gdy inna aplikacja, staje się aktywny. Można znaleźć w dokumentacji zestawu SDK platformy, znajduje się w bibliotece MSDN pod http://msdn.microsoft.com/library zrozumienie dostępnych <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Message.LParam%2A?displayProperty=nameWithType>, i <xref:System.Windows.Forms.Message.WParam%2A?displayProperty=nameWithType> wartości. Rzeczywiste wartości stałych można znaleźć w pliku nagłówka Windows.h objęte pobierania zestawu SDK platformy (sekcja Core SDK), która jest również dostępna w bibliotece MSDN pod http://msdn.microsoft.com/library.  
  
 [!code-cpp[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem niezarządzanym. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>