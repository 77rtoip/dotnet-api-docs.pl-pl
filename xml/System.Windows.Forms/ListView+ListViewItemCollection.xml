<Type Name="ListView+ListViewItemCollection" FullName="System.Windows.Forms.ListView+ListViewItemCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1703597fc576595b4b4bbf9c2aca327d80773b84" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48643550" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListView.ListViewItemCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ListView/ListViewItemCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListView.ListViewItemCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListView.ListViewItemCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ListView::ListViewItemCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ListView.ListViewItemCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje kolekcję elementów na liście <see cref="T:System.Windows.Forms.ListView" /> kontrolować lub przypisane do <see cref="T:System.Windows.Forms.ListViewGroup" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.Forms.ListView.ListViewItemCollection> przechowuje elementy wyświetlane w <xref:System.Windows.Forms.ListView> kontrolować lub przypisane do <xref:System.Windows.Forms.ListViewGroup>. Istnieją dwie inne kolekcje zdefiniowane <xref:System.Windows.Forms.ListView> klasy, które umożliwiają określenie, jakie elementy są zaznaczone w ramach <xref:System.Windows.Forms.ListView> kontroli. <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection> Klasa udostępnia właściwości i metod do określania, jakie elementy są zaznaczone w <xref:System.Windows.Forms.ListView> control, podczas <xref:System.Windows.Forms.ListView.SelectedIndexCollection> klasy umożliwia określenie, jakie indeksy w ramach <xref:System.Windows.Forms.ListView.ListViewItemCollection> z <xref:System.Windows.Forms.ListView> sterowania stanowią wybrany. Oprócz klas kolekcji, dostępne są także dwóch klas, które umożliwiają określenie, jakie elementy są zaznaczone (gdy <xref:System.Windows.Forms.ListView.CheckBoxes%2A> właściwość <xref:System.Windows.Forms.ListView> kontrolki jest ustawiona na `true`) w tej kolekcji.  
  
 Istnieją różne sposoby, aby dodać elementy do kolekcji. <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> Metoda dodaje jeden element do kolekcji. Aby dodać wiele elementów w kolekcji, utworzyć tablicę elementów i przekazać ją do <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> metody. Jeśli chcesz wstawić element w określonym miejscu w kolekcji, można użyć <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> metody. Aby usunąć elementy, można użyć albo <xref:System.Windows.Forms.ListView.ListViewItemCollection.Remove%2A> metody lub <xref:System.Windows.Forms.ListView.ListViewItemCollection.RemoveAt%2A> metodę, jeśli wiesz, gdzie element znajduje się w kolekcji. <xref:System.Windows.Forms.ListView.ListViewItemCollection.Clear%2A> Metoda umożliwia usunięcie wszystkich elementów z kolekcji zamiast <xref:System.Windows.Forms.ListView.ListViewItemCollection.Remove%2A> metodę, aby usunąć pojedynczy element w danym momencie.  
  
 Oprócz metod i właściwości do dodawania i usuwania elementów <xref:System.Windows.Forms.ListView.ListViewItemCollection> zapewnia także metody, aby znaleźć elementy w kolekcji. <xref:System.Windows.Forms.ListView.ListViewItemCollection.Contains%2A> Metody umożliwia określenie, czy element jest elementem członkowskim kolekcji. Gdy wiesz, że element znajduje się w kolekcji, możesz użyć <xref:System.Windows.Forms.ListView.ListViewItemCollection.IndexOf%2A> metodę, aby określić, gdzie element znajduje się w kolekcji.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób dodawania elementów do <xref:System.Windows.Forms.ListView.ListViewItemCollection>. Należy pamiętać, że <xref:System.Windows.Forms.ListView.Items%2A> właściwość `ListView1` typu <xref:System.Windows.Forms.ListView.ListViewItemCollection>. Aby uruchomić ten przykład, wklej następujący kod do formularza, który zawiera <xref:System.Windows.Forms.ListView> obiektu o nazwie `ListView1` i <xref:System.Windows.Forms.TextBox> o nazwie `TextBox1`. Wywołaj `InitializeListView` metody z konstruktora formularza lub <xref:System.Windows.Forms.Form.Load> programu obsługi zdarzeń.  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" />
    <altmember cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItemCollection (System.Windows.Forms.ListView owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListView owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.#ctor(System.Windows.Forms.ListView)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItemCollection(System::Windows::Forms::ListView ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ListView.ListViewItemCollection : System.Windows.Forms.ListView -&gt; System.Windows.Forms.ListView.ListViewItemCollection" Usage="new System.Windows.Forms.ListView.ListViewItemCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListView" />
      </Parameters>
      <Docs>
        <param name="owner">
          <see cref="T:System.Windows.Forms.ListView" /> , Który jest właścicielem kolekcji.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy unikać używania tego konstruktora. Zamiast tego dostępu <xref:System.Windows.Forms.ListView.ListViewItemCollection> za pośrednictwem <xref:System.Windows.Forms.ListView.Items%2A> właściwość <xref:System.Windows.Forms.ListView> kontroli.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje element do kolekcji elementów.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Add (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Add(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (text As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Add(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member Add : string -&gt; System.Windows.Forms.ListViewItem&#xA;override this.Add : string -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Add text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do wyświetlenia dla elementu.</param>
        <summary>Tworzy element z określonym tekstem i dodaje go do kolekcji.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.ListViewItem" /> Który został dodany do kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć tej wersji <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> metodę, aby utworzyć nową <xref:System.Windows.Forms.ListViewItem> do dodania do <xref:System.Windows.Forms.ListView> kontroli. Tekst nowego <xref:System.Windows.Forms.ListViewItem> dodane do kontroli opiera się na `text` parametru. Jeśli chcesz określić obraz dla elementu, użyj wersji <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> metodę akceptującą indeks obrazu, jako parametr. Jeśli masz istniejącą <xref:System.Windows.Forms.ListViewItem> przewidziane do dodania do kolekcji, użyj wersji <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> metodę akceptującą <xref:System.Windows.Forms.ListViewItem> jako parametr.  
  
 Jeśli <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> właściwości jest równa wartości innych niż <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> lub jeśli <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> właściwość jest ustawiona, lista jest sortowana, po dodaniu elementu. W przeciwnym razie element jest wstawiany na końcu listy. Jeśli lista nie jest sortowana, możesz użyć <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> metodę, aby wstawić element do <xref:System.Windows.Forms.ListView> na określonej pozycji. Aby dodać zestaw elementów do formantu w ramach jednej operacji, użyj <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> metody. Jeśli chcesz używać <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> metodę, aby dodać dużą liczbę elementów do formantu, użyj <xref:System.Windows.Forms.ListView.BeginUpdate%2A> i <xref:System.Windows.Forms.ListView.EndUpdate%2A> metody, aby zapobiec <xref:System.Windows.Forms.ListView> z odświeżenie, dopóki wszystkie elementy są dodawane. Podczas dodawania elementów do <xref:System.Windows.Forms.ListView>, jest bardziej wydajne elementy można sortować najpierw, a następnie dodaj nowe elementy.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem)" />
        <altmember cref="P:System.Windows.Forms.ListView.Sorting" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Add (System.Windows.Forms.ListViewItem value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Add(class System.Windows.Forms.ListViewItem value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.Windows.Forms.ListViewItem)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (value As ListViewItem) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Add(System::Windows::Forms::ListViewItem ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Windows.Forms.ListViewItem -&gt; System.Windows.Forms.ListViewItem&#xA;override this.Add : System.Windows.Forms.ListViewItem -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListViewItem" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Windows.Forms.ListViewItem" /> Do dodania do kolekcji.</param>
        <summary>Dodaje istniejący <see cref="T:System.Windows.Forms.ListViewItem" /> do kolekcji.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.ListViewItem" /> Który został dodany do kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć tej wersji <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> metodę, aby dodać istniejące <xref:System.Windows.Forms.ListViewItem> do kolekcji. Ta wersja <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> metoda jest zwykle używana do ponownego użycia elementów z innych <xref:System.Windows.Forms.ListView> kontrolki lub, jeśli <xref:System.Windows.Forms.ListViewItem> została utworzona ręcznie, przed dodaniem go do kolekcji. Jeśli chcesz utworzyć nowy <xref:System.Windows.Forms.ListViewItem> zamiast przy użyciu istniejącego elementu, należy użyć innych wersji <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> metody.  
  
 Jeśli <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> właściwości jest równa wartości innych niż <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> lub jeśli <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> właściwość jest ustawiona, lista jest sortowana, po dodaniu elementu. W przeciwnym razie element jest wstawiany na końcu listy. Jeśli lista nie jest sortowana, możesz użyć <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> metodę, aby wstawić element do <xref:System.Windows.Forms.ListView> na określonej pozycji. Aby dodać zestaw elementów do formantu w ramach jednej operacji, użyj <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> metody. Jeśli chcesz używać <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> metodę, aby dodać dużą liczbę elementów do formantu, użyj <xref:System.Windows.Forms.ListView.BeginUpdate%2A> i <xref:System.Windows.Forms.ListView.EndUpdate%2A> metody, aby zapobiec <xref:System.Windows.Forms.ListView> z odświeżenie, dopóki wszystkie elementy są dodawane. Podczas dodawania elementów do <xref:System.Windows.Forms.ListView>, jest bardziej wydajne elementy można sortować najpierw, a następnie dodaj nowe elementy.  
  
 Ta wersja <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> metoda umożliwia również przypisać <xref:System.Windows.Forms.ListViewItem> do <xref:System.Windows.Forms.ListViewGroup>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem)" />
        <altmember cref="P:System.Windows.Forms.ListView.Sorting" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Add (string text, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Add(string text, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (text As String, imageIndex As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Add(System::String ^ text, int imageIndex);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * int -&gt; System.Windows.Forms.ListViewItem&#xA;override this.Add : string * int -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Add (text, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">Tekst elementu.</param>
        <param name="imageIndex">Indeks obrazu do wyświetlania elementu.</param>
        <summary>Tworzy element z określony tekst i obraz i dodaje go do kolekcji.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.ListViewItem" /> Który został dodany do kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć tej wersji <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> metodę, aby utworzyć nową <xref:System.Windows.Forms.ListViewItem> do dodania do <xref:System.Windows.Forms.ListView> kontroli. Tekst nowego <xref:System.Windows.Forms.ListViewItem> dodane do kontroli opiera się na `text` parametru. Można również określić obraz dla elementu, przekazując indeks <xref:System.Windows.Forms.ImageList> przypisane do <xref:System.Windows.Forms.ListView.LargeImageList%2A?displayProperty=nameWithType> i <xref:System.Windows.Forms.ListView.SmallImageList%2A?displayProperty=nameWithType> właściwości `imageIndex` parametru. (Zazwyczaj <xref:System.Windows.Forms.ListView.LargeImageList%2A?displayProperty=nameWithType> i <xref:System.Windows.Forms.ListView.SmallImageList%2A?displayProperty=nameWithType> właściwości Użyj tej samej pozycji indeksu, aby wyświetlić powiązane obrazów.) Jeśli chcesz określić indeks obrazu dla elementu, użyj wersji <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> metodę, która akceptuje tylko ciąg jako parametr. Jeśli masz istniejącą <xref:System.Windows.Forms.ListViewItem> przewidziane do dodania do kolekcji, użyj wersji <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> metodę akceptującą <xref:System.Windows.Forms.ListViewItem> jako parametr.  
  
 Jeśli <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> właściwości jest równa wartości innych niż <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> lub jeśli <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> właściwość jest ustawiona, lista jest sortowana, po dodaniu elementu. W przeciwnym razie element jest wstawiany na końcu listy. Jeśli lista nie jest sortowana, możesz użyć <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> metodę, aby wstawić element do <xref:System.Windows.Forms.ListView> na określonej pozycji. Aby dodać zestaw elementów do formantu w ramach jednej operacji, użyj <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> metody. Jeśli chcesz używać <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> metodę, aby dodać dużą liczbę elementów do formantu, użyj <xref:System.Windows.Forms.ListView.BeginUpdate%2A> i <xref:System.Windows.Forms.ListView.EndUpdate%2A> metody, aby zapobiec <xref:System.Windows.Forms.ListView> z odświeżenie, dopóki wszystkie elementy są dodawane. Podczas dodawania elementów do <xref:System.Windows.Forms.ListView>, jest bardziej wydajne elementy można sortować najpierw, a następnie dodaj nowe elementy.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem)" />
        <altmember cref="P:System.Windows.Forms.ListView.Sorting" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Add (string text, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Add(string text, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (text As String, imageKey As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Add(System::String ^ text, System::String ^ imageKey);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * string -&gt; System.Windows.Forms.ListViewItem&#xA;override this.Add : string * string -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Add (text, imageKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst elementu.</param>
        <param name="imageKey">Klucz obraz do wyświetlania elementu.</param>
        <summary>Tworzy element z określony tekst i obraz i dodaje go do kolekcji.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.ListViewItem" /> Dodawane do kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Windows.Forms.ListView> jest sortowana, element jest dodawany prawidłowo posortowane; w przeciwnym razie zostanie dodany na końcu kolekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Add (string key, string text, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Add(string key, string text, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, text As String, imageIndex As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Add(System::String ^ key, System::String ^ text, int imageIndex);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * string * int -&gt; System.Windows.Forms.ListViewItem&#xA;override this.Add : string * string * int -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Add (key, text, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="key">Nazwa elementu.</param>
        <param name="text">Tekst elementu.</param>
        <param name="imageIndex">Indeks obrazu do wyświetlania elementu.</param>
        <summary>Tworzy element z określonym kluczem, tekstu i obrazów, a następnie dodaje element do kolekcji.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.ListViewItem" /> Dodawane do kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Windows.Forms.ListView> jest sortowana, element jest dodawany prawidłowo posortowane; w przeciwnym razie zostanie dodany na końcu kolekcji. <xref:System.Windows.Forms.ListViewItem.Name%2A> Właściwość odnosi się do klucza dla <xref:System.Windows.Forms.ListViewItem> w <xref:System.Windows.Forms.ListView.ListViewItemCollection>.  
  
 <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> Metody ustawia <xref:System.Windows.Forms.ListViewItem.Name%2A> właściwości określony klucz, dzięki czemu można pobrać elementu według jego indeksu lub klucza.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Zawierający <see cref="T:System.Windows.Forms.ListView" /> jest w trybie wirtualnym.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Add (string key, string text, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Add(string key, string text, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, text As String, imageKey As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Add(System::String ^ key, System::String ^ text, System::String ^ imageKey);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * string * string -&gt; System.Windows.Forms.ListViewItem&#xA;override this.Add : string * string * string -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Add (key, text, imageKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nazwa elementu.</param>
        <param name="text">Tekst elementu.</param>
        <param name="imageKey">Klucz obraz do wyświetlania elementu.</param>
        <summary>Tworzy element z określonym kluczem, tekst i obraz i dodaje go do kolekcji.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.ListViewItem" /> Dodawane do kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.Name%2A> Właściwość odnosi się do klucza dla <xref:System.Windows.Forms.ListViewItem> w <xref:System.Windows.Forms.ListView.ListViewItemCollection>.  
  
 Jeśli <xref:System.Windows.Forms.ListView> jest sortowana, element jest dodawany prawidłowo posortowane; w przeciwnym razie zostanie dodany na końcu kolekcji. <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> Metody ustawia <xref:System.Windows.Forms.ListViewItem.Name%2A> właściwość elementu z określonym kluczem, dzięki czemu można pobrać elementu według jego indeksu lub klucza.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tablica elementów są dodawane do kolekcji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListView.ListViewItemCollection items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListView/ListViewItemCollection items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListView.ListViewItemCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As ListView.ListViewItemCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Windows::Forms::ListView::ListViewItemCollection ^ items);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListView.ListViewItemCollection -&gt; unit" Usage="listViewItemCollection.AddRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Windows.Forms.ListView+ListViewItemCollection" />
      </Parameters>
      <Docs>
        <param name="items">
          <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> Do dodania do kolekcji.</param>
        <summary>Kolekcja elementów są dodawane do kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli zawierający <xref:System.Windows.Forms.ListView> jest sortowana <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> metoda doda elementy w kolejności posortowanej; w przeciwnym razie to doda je do końca kolekcji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="items" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Zawierający <see cref="T:System.Windows.Forms.ListView" /> jest w trybie wirtualnym.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListViewItem[] values);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListViewItem[] values) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (values As ListViewItem())" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Windows::Forms::ListViewItem ^&gt; ^ values);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListViewItem[] -&gt; unit" Usage="listViewItemCollection.AddRange values" FrameworkAlternate="netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListViewItem[] items);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListViewItem[] items) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As ListViewItem())" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Windows::Forms::ListViewItem ^&gt; ^ items);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListViewItem[] -&gt; unit" Usage="listViewItemCollection.AddRange items" FrameworkAlternate="netframework-2.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Windows.Forms.ListViewItem[]" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="items" Type="System.Windows.Forms.ListViewItem[]" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="items">Tablica <see cref="T:System.Windows.Forms.ListViewItem" /> obiekty do dodania do kolekcji.</param>
        <param name="values">To be added.</param>
        <summary>Dodaje tablicę <see cref="T:System.Windows.Forms.ListViewItem" /> obiekty do kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do ponownego użycia elementów z innego <xref:System.Windows.Forms.ListView> kontroli. Jeśli chcesz dodać jeden <xref:System.Windows.Forms.ListViewItem>, użyj <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> metody. Można również użyć <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> metody, jeśli chcesz dodać jeden <xref:System.Windows.Forms.ListViewItem> na określonej pozycji w kolekcji.  
  
 Można również użyć tej metody można przypisać wiele <xref:System.Windows.Forms.ListViewItem> obiekty do <xref:System.Windows.Forms.ListViewGroup>.  
  
 Jeśli <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> właściwości jest równa wartości innych niż <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> lub jeśli <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> właściwość jest ustawiona, lista jest sortowana, po dodaniu elementów. W przeciwnym razie elementy są wstawiane na końcu listy. Jeśli lista nie jest sortowana, możesz użyć <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> metodę, aby wstawić elementy <xref:System.Windows.Forms.ListView> w określonych pozycji.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Windows.Forms.ListView> kontrolki z trzema <xref:System.Windows.Forms.ListViewItem> obiekty określone i trzy <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiekty określone dla każdego elementu. W przykładzie jest tworzony również <xref:System.Windows.Forms.ColumnHeader> obiektów do wyświetlenia elementy podrzędne w widoku szczegółów. Dwa <xref:System.Windows.Forms.ImageList> obiekty są również tworzone w przykładzie kodu, aby zapewnić obrazów <xref:System.Windows.Forms.ListViewItem> obiektów. Te <xref:System.Windows.Forms.ImageList> obiekty są dodawane do <xref:System.Windows.Forms.ListView.LargeImageList%2A> i <xref:System.Windows.Forms.ListView.SmallImageList%2A> właściwości. W przykładzie użyto następujących właściwości w tworzeniu <xref:System.Windows.Forms.ListView> sterowania:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 W tym przykładzie wymaga, że dodano kod, aby <xref:System.Windows.Forms.Form> i wywołać metodę utworzony w przykładzie z konstruktora lub innej metody w formularzu. Przykład wymaga także, że obrazy o nazwie `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, i `MyLargeImage2` znajdują się w katalogu głównym dysku C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="items" /> jest <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem)" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="listViewItemCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa wszystkie elementy z kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po usunięciu elementów z kolekcji wszystkie informacje o usuniętych elementów zostaną utracone. Aby usunąć pojedynczy element z kolekcji, użyj <xref:System.Windows.Forms.ListView.ListViewItemCollection.Remove%2A> lub <xref:System.Windows.Forms.ListView.ListViewItemCollection.RemoveAt%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Remove(System.Windows.Forms.ListViewItem)" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.ListViewItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.ListViewItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Contains(System.Windows.Forms.ListViewItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As ListViewItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::ListViewItem ^ item);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Forms.ListViewItem -&gt; bool" Usage="listViewItemCollection.Contains item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem" />
      </Parameters>
      <Docs>
        <param name="item">A <see cref="T:System.Windows.Forms.ListViewItem" /> reprezentujący element do zlokalizowania w kolekcji.</param>
        <summary>Określa, czy określony element znajduje się w kolekcji.</summary>
        <returns>
          <see langword="true" /> Jeśli element znajduje się w kolekcji; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.ListViewItemCollection.Contains%2A> Metody umożliwia określenie czy <xref:System.Windows.Forms.ListViewItem> jest elementem członkowskim kolekcji. Gdy wiesz, że element znajduje się w kolekcji, możesz użyć <xref:System.Windows.Forms.ListView.ListViewItemCollection.IndexOf%2A> metodę, aby określały położenie elementu w kolekcji.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.IndexOf(System.Windows.Forms.ListViewItem)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : string -&gt; bool&#xA;override this.ContainsKey : string -&gt; bool" Usage="listViewItemCollection.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nazwa elementu do wyszukania.</param>
        <summary>Określa, czy kolekcja zawiera element z określonym kluczem.</summary>
        <returns>
          <see langword="true" /> Aby wskazać, Kolekcja zawiera element z określonym kluczem; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Porównanie klucza nie jest rozróżniana wielkość liter. <xref:System.Windows.Forms.ListViewItem.Name%2A> Właściwość odnosi się do klucza dla <xref:System.Windows.Forms.ListViewItem> w <xref:System.Windows.Forms.ListView.ListViewItemCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (dest As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ dest, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="listViewItemCollection.CopyTo (dest, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest">
          <see cref="T:System.Array" /> Reprezentująca tablicę, aby skopiować zawartość kolekcji.</param>
        <param name="index">Lokalizacja, w tablicy docelowej, aby skopiować elementy z kolekcji.</param>
        <summary>Kopiuje całą kolekcję do istniejącej tablicy w określonej lokalizacji w tablicy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia łączenie wybrane elementy z wieloma kolekcjami w jedną.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.ListView.ListViewItemCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę elementów w kolekcji.</summary>
        <value>Liczba elementów w kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia określenie liczby elementów w <xref:System.Windows.Forms.ListView>. Następnie można użyć tej wartości, gdy są pętli wartości kolekcji należy podać liczbę iteracji do wykonania pętli.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem[] Find (string key, bool searchAllSubItems);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem[] Find(string key, bool searchAllSubItems) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Find(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (key As String, searchAllSubItems As Boolean) As ListViewItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Forms::ListViewItem ^&gt; ^ Find(System::String ^ key, bool searchAllSubItems);" />
      <MemberSignature Language="F#" Value="member this.Find : string * bool -&gt; System.Windows.Forms.ListViewItem[]" Usage="listViewItemCollection.Find (key, searchAllSubItems)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="searchAllSubItems" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">Nazwa elementu do wyszukania.</param>
        <param name="searchAllSubItems">
          <see langword="true" /> Aby wyszukać podelementy; w przeciwnym razie <see langword="false" />.</param>
        <summary>Wyszukiwanie elementów, którego nazwa odpowiada określonym kluczem, opcjonalnie wyszukiwanie podrzędnych.</summary>
        <returns>Tablica <see cref="T:System.Windows.Forms.ListViewItem" /> obiektów zawierających dopasowywania elementów lub pusta tablica, jeśli żadne elementy nie pasuje.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Porównanie klucza nie jest rozróżniana wielkość liter. <xref:System.Windows.Forms.ListViewItem.Name%2A> Właściwość odnosi się do klucza dla <xref:System.Windows.Forms.ListViewItem> w <xref:System.Windows.Forms.ListView.ListViewItemCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="listViewItemCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca moduł wyliczający służące do iterowania po kolekcji elementów.</summary>
        <returns>
          <see cref="T:System.Collections.IEnumerator" /> Reprezentujący kolekcji elementów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy właściciel <xref:System.Windows.Forms.ListView> jest w trybie wirtualnym, nie można wyliczyć <xref:System.Windows.Forms.ListView.ListViewItemCollection> przy użyciu modułu wyliczającego lub wywołanie <xref:System.Windows.Forms.ListView.ListViewItemCollection.GetEnumerator%2A>. Zamiast tego należy użyć <xref:System.Windows.Forms.ListView.Items%2A?displayProperty=nameWithType> właściwość dostęp do elementu według wartości indeksu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Właściciel <see cref="T:System.Windows.Forms.ListView" /> jest w trybie wirtualnym.</exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.ListViewItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.ListViewItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.IndexOf(System.Windows.Forms.ListViewItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As ListViewItem) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::ListViewItem ^ item);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Forms.ListViewItem -&gt; int" Usage="listViewItemCollection.IndexOf item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem" />
      </Parameters>
      <Docs>
        <param name="item">A <see cref="T:System.Windows.Forms.ListViewItem" /> reprezentujący element do zlokalizowania w kolekcji.</param>
        <summary>Zwraca indeks w kolekcji określonego elementu.</summary>
        <returns>Liczony od zera indeks lokalizacji elementu w kolekcji; w przeciwnym razie, -1, jeśli element nie znajduje się w kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.ListViewItemCollection.IndexOf%2A> Metody pozwalają na określenie położenie elementu w kolekcji. Aby określić, czy element znajduje się w kolekcji przed wywołaniem tej metody, należy użyć <xref:System.Windows.Forms.ListView.ListViewItemCollection.Contains%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Contains(System.Windows.Forms.ListViewItem)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.IndexOfKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member IndexOfKey : string -&gt; int&#xA;override this.IndexOfKey : string -&gt; int" Usage="listViewItemCollection.IndexOfKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nazwa elementu można znaleźć w kolekcji.</param>
        <summary>Pobiera indeks elementu z określonym kluczem.</summary>
        <returns>Liczony od zera indeks pierwszego wystąpienia elementu z określonym kluczem, jeśli znaleziono; w przeciwnym razie, wartość -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Windows.Forms.ListView.ListViewItemCollection.IndexOfKey%2A> nazywa się kolejno, ostatni zwrócony indeksu będą sprawdzane pod kątem dopasowania klucza najpierw, a jeśli nie zostanie odnaleziony odpowiednik, wyszukiwanie rozpoczyna się na początku kolekcji.  
  
 <xref:System.Windows.Forms.ListViewItem.Name%2A> Właściwość odnosi się do klucza dla <xref:System.Windows.Forms.ListViewItem> w <xref:System.Windows.Forms.ListView.ListViewItemCollection>.  
  
 Porównanie klucza nie jest rozróżniana wielkość liter. Jeśli `key` parametr jest `null` ani być pustym ciągiem <xref:System.Windows.Forms.ListView.ListViewItemCollection.IndexOfKey%2A> zwraca wartość -1`.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Insert">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wstawia element do kolekcji pod określonym indeksem.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem Insert (int index, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem Insert(int32 index, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, text As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ Insert(int index, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Insert (index, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">Lokalizacja liczony od zera indeks polegający na wstawieniu elementu.</param>
        <param name="text">Tekst do wyświetlenia dla elementu.</param>
        <summary>Tworzy nowy element i wstawia je do kolekcji pod określonym indeksem.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.ListViewItem" /> , Został wstawiony do kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wersja <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> metoda umożliwia wstawianie nowego elementu na określonej pozycji w <xref:System.Windows.Forms.ListView.ListViewItemCollection>. Tekst określony w `text` parametr jest używany do tworzenia nowego <xref:System.Windows.Forms.ListViewItem> , zostanie wstawiony na <xref:System.Windows.Forms.ListView.ListViewItemCollection> w określonej lokalizacji.  
  
> [!NOTE]
>  Jeśli <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> właściwości jest równa wartości innych niż <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> lub jeśli <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> właściwość jest ustawiona, lista jest sortowana po wstawieniu elementu.  
  
 Aby dodać element bez określenia na określonej pozycji w kolekcji, należy użyć <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> metody. Aby dodać tablicę elementów do kolekcji, należy użyć <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> metody. Można użyć tej metody, jeśli chcesz wstawić nowy element do istniejącej kolekcji elementów.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> Parametr jest mniejszy niż 0 lub większa niż wartość <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> właściwość <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem Insert (int index, System.Windows.Forms.ListViewItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem Insert(int32 index, class System.Windows.Forms.ListViewItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, item As ListViewItem) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ Insert(int index, System::Windows::Forms::ListViewItem ^ item);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Windows.Forms.ListViewItem -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem" />
      </Parameters>
      <Docs>
        <param name="index">Lokalizacja liczony od zera indeks polegający na wstawieniu elementu.</param>
        <param name="item">
          <see cref="T:System.Windows.Forms.ListViewItem" /> Reprezentujący element do wstawienia.</param>
        <summary>Wstawia istniejące <see cref="T:System.Windows.Forms.ListViewItem" /> do kolekcji pod określonym indeksem.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.ListViewItem" /> , Został wstawiony do kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wersja <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> metoda umożliwia wstawianie istniejące <xref:System.Windows.Forms.ListViewItem> na określonej pozycji w <xref:System.Windows.Forms.ListView.ListViewItemCollection>.  
  
> [!NOTE]
>  Jeśli <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> właściwości jest równa wartości innych niż <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> lub jeśli <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> właściwość jest ustawiona, lista jest sortowana po wstawieniu elementu.  
  
 Aby dodać element bez określenia na określonej pozycji w kolekcji, aby dodać element, należy użyć <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> metody. Aby dodać tablicę elementów do kolekcji, należy użyć <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> metody. Można użyć tej metody, jeśli chcesz wstawić nowy element do istniejącej kolekcji elementów.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> Parametr jest mniejszy niż 0 lub większa niż wartość <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> właściwość <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem Insert (int index, string text, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem Insert(int32 index, string text, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, text As String, imageIndex As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ Insert(int index, System::String ^ text, int imageIndex);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string * int -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Insert (index, text, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Lokalizacja liczony od zera indeks polegający na wstawieniu elementu.</param>
        <param name="text">Tekst do wyświetlenia dla elementu.</param>
        <param name="imageIndex">Indeks obrazu do wyświetlania elementu.</param>
        <summary>Tworzy nowy element z indeksem określonym obrazie i wstawia je do kolekcji pod określonym indeksem.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.ListViewItem" /> , Został wstawiony do kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wersja <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> metoda umożliwia wstawianie nowego elementu na określonej pozycji w <xref:System.Windows.Forms.ListView.ListViewItemCollection>. Tekst określony w `text` parametr jest używany do tworzenia nowego <xref:System.Windows.Forms.ListViewItem> , zostanie wstawiony na <xref:System.Windows.Forms.ListView.ListViewItemCollection> w określonej lokalizacji.  
  
> [!NOTE]
>  Jeśli <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> właściwości jest równa wartości innych niż <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> lub jeśli <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> właściwość jest ustawiona, lista jest sortowana po wstawieniu elementu.  
  
 Można również użyć tej wersji <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> metodę, aby wskazać obraz dla elementu, przekazując indeks <xref:System.Windows.Forms.ImageList> przypisane do <xref:System.Windows.Forms.ListView.LargeImageList%2A?displayProperty=nameWithType> i <xref:System.Windows.Forms.ListView.SmallImageList%2A?displayProperty=nameWithType> właściwości `imageIndex` parametru. (Zazwyczaj <xref:System.Windows.Forms.ListView.LargeImageList%2A?displayProperty=nameWithType> i <xref:System.Windows.Forms.ListView.SmallImageList%2A?displayProperty=nameWithType> właściwości Użyj tej samej pozycji indeksu, aby wyświetlić powiązane obrazów.) Jeśli nie chcesz określać indeks obrazu dla elementu, użyj inna wersja <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> metodę, która akceptuje ciąg jako parametr.  
  
 Aby dodać element bez określenia na określonej pozycji w kolekcji, należy użyć <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> metody. Aby dodać tablicę elementów do kolekcji, należy użyć <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> Parametr jest mniejszy niż 0 lub większa niż wartość <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> właściwość <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem Insert (int index, string text, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem Insert(int32 index, string text, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, text As String, imageKey As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ Insert(int index, System::String ^ text, System::String ^ imageKey);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string * string -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Insert (index, text, imageKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">Lokalizacja liczony od zera indeks polegający na wstawieniu elementu.</param>
        <param name="text">Tekst <see cref="T:System.Windows.Forms.ListViewItem" />.</param>
        <param name="imageKey">Klucz obraz do wyświetlania elementu.</param>
        <summary>Tworzy nowy element z określony tekst i obraz i wstawia go w kolekcji pod określonym indeksem.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.ListViewItem" /> Dodawane do kolekcji.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> Parametr jest mniejszy niż 0 lub większa niż wartość <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> właściwość <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Insert (int index, string key, string text, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Insert(int32 index, string key, string text, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Insert (index As Integer, key As String, text As String, imageIndex As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Insert(int index, System::String ^ key, System::String ^ text, int imageIndex);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * string * string * int -&gt; System.Windows.Forms.ListViewItem&#xA;override this.Insert : int * string * string * int -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Insert (index, key, text, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Lokalizacja liczony od zera indeks polegający na wstawieniu elementu</param>
        <param name="key">
          <see cref="P:System.Windows.Forms.ListViewItem.Name" /> Elementu.</param>
        <param name="text">Tekst elementu.</param>
        <param name="imageIndex">Indeks obrazu do wyświetlania elementu.</param>
        <summary>Tworzy nowy element z określonym kluczem, tekst i obraz i wstawia go w kolekcji pod określonym indeksem.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.ListViewItem" /> Dodawane do kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> Metody ustawia <xref:System.Windows.Forms.ListViewItem.Name%2A> właściwość elementu z określonym kluczem, dzięki czemu można pobrać elementu według jego indeksu lub klucza.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> Parametr jest mniejszy niż 0 lub większa niż wartość <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> właściwość <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Insert (int index, string key, string text, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Insert(int32 index, string key, string text, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Insert (index As Integer, key As String, text As String, imageKey As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Insert(int index, System::String ^ key, System::String ^ text, System::String ^ imageKey);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * string * string * string -&gt; System.Windows.Forms.ListViewItem&#xA;override this.Insert : int * string * string * string -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Insert (index, key, text, imageKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">Lokalizacja liczony od zera indeks polegający na wstawieniu elementu.</param>
        <param name="key">
          <see cref="P:System.Windows.Forms.ListViewItem.Name" /> Elementu.</param>
        <param name="text">Tekst elementu.</param>
        <param name="imageKey">Klucz obraz do wyświetlania elementu.</param>
        <summary>Tworzy nowy element z określonym kluczem, tekst i obraz i dodaje je do kolekcji pod określonym indeksem.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.ListViewItem" /> Dodawane do kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> Metody ustawia <xref:System.Windows.Forms.ListViewItem.Name%2A> właściwość elementu z określonym kluczem, dzięki czemu można pobrać elementu według jego indeksu lub klucza.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> Parametr jest mniejszy niż 0 lub większa niż wartość <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> właściwość <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.ListView.ListViewItemCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy kolekcja jest tylko do odczytu.</summary>
        <value>
          <see langword="true" /> Jeśli kolekcja jest tylko do odczytu. w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest zawsze `false` dla tej kolekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera lub ustawia element w kolekcji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ListViewItem ^ default[System::String ^] { System::Windows::Forms::ListViewItem ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Windows.Forms.ListViewItem" Usage="System.Windows.Forms.ListView.ListViewItemCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nazwa elementu do pobrania.</param>
        <summary>Pobiera element z określonym kluczem.</summary>
        <value>
          <see cref="T:System.Windows.Forms.ListViewItem" /> Którego <see cref="P:System.Windows.Forms.ListViewItem.Name" /> właściwość jest zgodny z określonym kluczem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Porównanie klucza nie jest rozróżniana wielkość liter. <xref:System.Windows.Forms.ListViewItem.Name%2A> Właściwość odnosi się do klucza dla <xref:System.Windows.Forms.ListViewItem> w <xref:System.Windows.Forms.ListView.ListViewItemCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem this[int displayIndex] { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(displayIndex As Integer) As ListViewItem" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ListViewItem ^ default[int] { System::Windows::Forms::ListViewItem ^ get(int displayIndex); void set(int displayIndex, System::Windows::Forms::ListViewItem ^ value); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.ListViewItem with get, set" Usage="System.Windows.Forms.ListView.ListViewItemCollection.Item" />
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem this[int index] { get; set; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As ListViewItem" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ListViewItem ^ default[int] { System::Windows::Forms::ListViewItem ^ get(int index); void set(int index, System::Windows::Forms::ListViewItem ^ value); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="displayIndex" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">Indeks elementu w kolekcji do pobrania lub ustawienia.</param>
        <param name="displayIndex">To be added.</param>
        <summary>Pobiera lub ustawia element pod określonym indeksem w tej kolekcji.</summary>
        <value>A <see cref="T:System.Windows.Forms.ListViewItem" /> reprezentujący element znajdujący się w określonym indeksie kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do uzyskiwania <xref:System.Windows.Forms.ListViewItem> przechowywaną w określonej lokalizacji w kolekcji. Aby określić indeks konkretny element w kolekcji, użyj <xref:System.Windows.Forms.ListView.ListViewItemCollection.IndexOf%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> Parametr jest mniejszy niż 0 lub większa niż lub równa wartości <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> właściwość <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.IndexOf(System.Windows.Forms.ListViewItem)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (System.Windows.Forms.ListViewItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class System.Windows.Forms.ListViewItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Remove(System.Windows.Forms.ListViewItem)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (item As ListViewItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Windows::Forms::ListViewItem ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Windows.Forms.ListViewItem -&gt; unit&#xA;override this.Remove : System.Windows.Forms.ListViewItem -&gt; unit" Usage="listViewItemCollection.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem" />
      </Parameters>
      <Docs>
        <param name="item">A <see cref="T:System.Windows.Forms.ListViewItem" /> reprezentujący element do usunięcia z kolekcji.</param>
        <summary>Usuwa określony element z kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy usuniesz element z kolekcji indeksy zmienić w przypadku kolejnych elementów w kolekcji. Wszystkie informacje o usunięty element zostanie usunięty. Ta metoda służy do usuwania określonego elementu z kolekcji określając rzeczywisty element do usunięcia. Aby określić indeks elementu do usunięcia, a nie sam element, należy użyć <xref:System.Windows.Forms.ListView.ListViewItemCollection.RemoveAt%2A> metody. Aby usunąć wszystkie elementy z kolekcji, należy użyć <xref:System.Windows.Forms.ListView.ListViewItemCollection.Clear%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.Windows.Forms.ListViewItem" /> Przypisane do <paramref name="item" /> parametr <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="listViewItemCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks elementu, który ma zostać usunięty.</param>
        <summary>Usuwa element o określonym indeksie kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy usuniesz element z kolekcji indeksy zmienić w przypadku kolejnych elementów w kolekcji. Wszystkie informacje o usunięty element zostanie usunięty. Ta metoda służy do usuwania określonego elementu z kolekcji określając indeks elementu do usunięcia z kolekcji. Aby określić element do usunięcia, a nie wskaźnik do elementu, użyj <xref:System.Windows.Forms.ListView.ListViewItemCollection.Remove%2A> metody. Aby usunąć wszystkie elementy z kolekcji, należy użyć <xref:System.Windows.Forms.ListView.ListViewItemCollection.Clear%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> Parametr jest mniejszy niż 0 lub większa niż lub równa wartości <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> właściwość <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Remove(System.Windows.Forms.ListViewItem)" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="RemoveByKey">
      <MemberSignature Language="C#" Value="public virtual void RemoveByKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveByKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.RemoveByKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveByKey (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveByKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member RemoveByKey : string -&gt; unit&#xA;override this.RemoveByKey : string -&gt; unit" Usage="listViewItemCollection.RemoveByKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nazwa elementu do usunięcia z kolekcji.</param>
        <summary>Usuwa element z określonym kluczem z kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Porównanie klucza nie jest rozróżniana wielkość liter. <xref:System.Windows.Forms.ListViewItem.Name%2A> Właściwość odnosi się do klucza dla <xref:System.Windows.Forms.ListViewItem> w <xref:System.Windows.Forms.ListView.ListViewItemCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy jest zsynchronizowany dostęp do kolekcji (wątkowo).</summary>
        <value>
          <see langword="true" /> we wszystkich przypadkach.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który może służyć do synchronizowania dostępu do kolekcji kontrolek.</summary>
        <value>Obiekt używany do synchronizowania kolekcji.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (item As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ item) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Obiekt do dodania do kolekcji.</param>
        <summary>Dodaje istniejący obiekt w kolekcji.</summary>
        <returns>Liczony od zera indeks wskazującą lokalizację obiektu, jeśli została dodana do kolekcji w przeciwnym razie, wartość -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `item` Parametr może być dowolnego typu. Jeśli `item` jest <xref:System.Windows.Forms.ListViewItem>, jest ona dodawana do <xref:System.Windows.Forms.ListView.ListViewItemCollection>. Jeśli `item` jest innego typu, nowy <xref:System.Windows.Forms.ListViewItem> jest tworzony, zawierających ciąg, z <xref:System.Object.ToString%2A> metody `item`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (item As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ item) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Obiekt, który reprezentuje element do zlokalizowania w kolekcji.</param>
        <summary>Określa, czy określony element znajduje się w kolekcji.</summary>
        <returns>
          <see langword="true" /> Jeśli określony element znajduje się w kolekcji; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (item As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ item) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">A <see cref="T:System.Windows.Forms.ListViewItem" /> reprezentujący element do zlokalizowania w kolekcji.</param>
        <summary>Zwraca indeks w kolekcji określonego elementu.</summary>
        <returns>Liczony od zera indeks elementu, jeśli znajduje się w kolekcji; w przeciwnym razie, wartość -1.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, item As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ item) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Lokalizacja liczony od zera indeks polegający na wstawieniu elementu.</param>
        <param name="item">Obiekt, który reprezentuje element do wstawienia.</param>
        <summary>Wstawia obiektu do kolekcji pod określonym indeksem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `item` Parametr może być dowolnego typu. Jeśli `item` jest <xref:System.Windows.Forms.ListViewItem>, jest ona dodawana do <xref:System.Windows.Forms.ListView.ListViewItemCollection>. Jeśli `item` jest innego typu, nowy <xref:System.Windows.Forms.ListViewItem> jest tworzony, zawierających ciąg, z <xref:System.Object.ToString%2A> metody `item`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Parametr indeksu jest mniejszy niż 0 lub większa niż wartość <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> właściwość <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy kolekcja o stałym rozmiarze.</summary>
        <value>
          <see langword="false" /> we wszystkich przypadkach.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks elementu do pobrania.</param>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Forms.ListViewItem" /> w określonym indeksie kolekcji.</summary>
        <value>A <see cref="T:System.Windows.Forms.ListViewItem" /> reprezentujący element znajdujący się w określonym indeksie kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `item` Można ustawić parametru do dowolnego typu. Jeśli `item` jest <xref:System.Windows.Forms.ListViewItem>, jest ona dodawana do <xref:System.Windows.Forms.ListView.ListViewItemCollection>. Jeśli `item` jest innego typu, nowy <xref:System.Windows.Forms.ListViewItem> jest tworzony, zawierających ciąg, z <xref:System.Object.ToString%2A> metody `item`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Parametr indeksu jest mniejszy niż 0 lub większa niż lub równa wartości <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> właściwość <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (item As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ item) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">A <see cref="T:System.Windows.Forms.ListViewItem" /> reprezentujący element do usunięcia z kolekcji.</param>
        <summary>Usuwa określony element z kolekcji.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>