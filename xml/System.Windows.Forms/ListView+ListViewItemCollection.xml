<Type Name="ListView+ListViewItemCollection" FullName="System.Windows.Forms.ListView+ListViewItemCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5b09e02a93ce27ab222ab2710635275599cbb863" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69185122" /></Metadata><TypeSignature Language="C#" Value="public class ListView.ListViewItemCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ListView/ListViewItemCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListView.ListViewItemCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListView.ListViewItemCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ListView::ListViewItemCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ListView.ListViewItemCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje kolekcję elementów w <see cref="T:System.Windows.Forms.ListView" /> kontrolce lub przypisany <see cref="T:System.Windows.Forms.ListViewGroup" />do.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zapisuje elementy wyświetlane <xref:System.Windows.Forms.ListView> w<xref:System.Windows.Forms.ListViewGroup>kontrolce lub przypisane do. <xref:System.Windows.Forms.ListView.ListViewItemCollection> Istnieją dwie inne kolekcje zdefiniowane w obrębie <xref:System.Windows.Forms.ListView> klasy, które umożliwiają określenie, które elementy są zaznaczone <xref:System.Windows.Forms.ListView> w formancie. <xref:System.Windows.Forms.ListView.SelectedIndexCollection> <xref:System.Windows.Forms.ListView> <xref:System.Windows.Forms.ListView> <xref:System.Windows.Forms.ListView.ListViewItemCollection> Klasa zawiera właściwości i metody określania elementów wybranych w kontrolce, podczas gdy Klasa umożliwia określenie, jakie indeksy w kontrolce są <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection> niezaznaczone. Oprócz klas kolekcji wyboru istnieją również dwie klasy, które umożliwiają określenie, które elementy są sprawdzane (gdy <xref:System.Windows.Forms.ListView.CheckBoxes%2A> Właściwość <xref:System.Windows.Forms.ListView> kontrolki jest ustawiona na `true`) w tej kolekcji.  
  
 Istnieje kilka sposobów dodawania elementów do kolekcji. <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> Metoda dodaje pojedynczy element do kolekcji. Aby dodać liczbę elementów do kolekcji, należy utworzyć tablicę elementów i przekazać ją do <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> metody. Jeśli chcesz wstawić element w określonej lokalizacji w kolekcji, możesz użyć <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> metody. Aby usunąć elementy, można użyć <xref:System.Windows.Forms.ListView.ListViewItemCollection.Remove%2A> metody <xref:System.Windows.Forms.ListView.ListViewItemCollection.RemoveAt%2A> lub metody, Jeśli wiesz, gdzie znajduje się w kolekcji. Metoda umożliwia usunięcie wszystkich elementów z kolekcji zamiast <xref:System.Windows.Forms.ListView.ListViewItemCollection.Remove%2A> używać metody do usuwania pojedynczego elementu jednocześnie. <xref:System.Windows.Forms.ListView.ListViewItemCollection.Clear%2A>  
  
 Oprócz metod i właściwości do dodawania i usuwania elementów, <xref:System.Windows.Forms.ListView.ListViewItemCollection> udostępnia również metody znajdowania elementów w kolekcji. <xref:System.Windows.Forms.ListView.ListViewItemCollection.Contains%2A> Metoda pozwala określić, czy element jest członkiem kolekcji. Gdy wiesz, że element znajduje się w kolekcji, możesz użyć <xref:System.Windows.Forms.ListView.ListViewItemCollection.IndexOf%2A> metody, aby określić, gdzie element znajduje się w kolekcji.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, <xref:System.Windows.Forms.ListView.ListViewItemCollection>jak dodać elementy do. Należy pamiętać, <xref:System.Windows.Forms.ListView.Items%2A> że `ListView1` właściwość jest typu <xref:System.Windows.Forms.ListView.ListViewItemCollection>. Aby uruchomić ten przykład, wklej następujący kod do <xref:System.Windows.Forms.ListView> formularza, który zawiera obiekt o nazwie `ListView1` i <xref:System.Windows.Forms.TextBox> nazwa `TextBox1`. <xref:System.Windows.Forms.Form.Load> Wywołaj `InitializeListView` metodę z konstruktora lub procedury obsługi zdarzeń.  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" />
    <altmember cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItemCollection (System.Windows.Forms.ListView owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListView owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.#ctor(System.Windows.Forms.ListView)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItemCollection(System::Windows::Forms::ListView ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ListView.ListViewItemCollection : System.Windows.Forms.ListView -&gt; System.Windows.Forms.ListView.ListViewItemCollection" Usage="new System.Windows.Forms.ListView.ListViewItemCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListView" />
      </Parameters>
      <Docs>
        <param name="owner"><see cref="T:System.Windows.Forms.ListView" /> Który jest właścicielem kolekcji.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy unikać używania tego konstruktora. Zamiast tego należy uzyskać <xref:System.Windows.Forms.ListView.ListViewItemCollection> dostęp <xref:System.Windows.Forms.ListView.Items%2A> do właściwości <xref:System.Windows.Forms.ListView> kontrolki.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje element do kolekcji elementów.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Add (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Add(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (text As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Add(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member Add : string -&gt; System.Windows.Forms.ListViewItem&#xA;override this.Add : string -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Add text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst, który ma być wyświetlany dla elementu.</param>
        <summary>Tworzy element z określonym tekstem i dodaje go do kolekcji.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> , Który został dodany do kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Za pomocą tej wersji <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> metody można utworzyć nową <xref:System.Windows.Forms.ListViewItem> do dodania do <xref:System.Windows.Forms.ListView> kontrolki. Tekst nowej <xref:System.Windows.Forms.ListViewItem> dodanej do kontrolki jest oparty `text` na parametrze. Jeśli chcesz określić obraz dla elementu, użyj wersji <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> metody, która akceptuje indeks obrazu jako parametr. Jeśli masz istniejące <xref:System.Windows.Forms.ListViewItem> , które chcesz dodać do kolekcji, użyj wersji <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> metody, która przyjmuje <xref:System.Windows.Forms.ListViewItem> jako parametr.  
  
 Jeśli właściwość jest ustawiona na wartość inną niż <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> lub jeśli <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> właściwość jest ustawiona, lista jest sortowana po dodaniu elementu. <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> W przeciwnym razie element zostanie wstawiony na końcu listy. Jeśli lista nie jest posortowana, można użyć <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> metody, aby wstawić element <xref:System.Windows.Forms.ListView> do określonego położenia. Aby dodać zestaw elementów do formantu w ramach jednej operacji, użyj <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> metody. Jeśli chcesz użyć <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> metody do dodania dużej liczby elementów do formantu, <xref:System.Windows.Forms.ListView.BeginUpdate%2A> Użyj metod <xref:System.Windows.Forms.ListView> i <xref:System.Windows.Forms.ListView.EndUpdate%2A> , aby zapobiec ponownym malowaniu do momentu dodania wszystkich elementów. Podczas dodawania elementów do <xref:System.Windows.Forms.ListView>, bardziej wydajne jest sortowanie elementów, a następnie dodawanie nowych elementów.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem)" />
        <altmember cref="P:System.Windows.Forms.ListView.Sorting" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Add (System.Windows.Forms.ListViewItem value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Add(class System.Windows.Forms.ListViewItem value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.Windows.Forms.ListViewItem)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (value As ListViewItem) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Add(System::Windows::Forms::ListViewItem ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Windows.Forms.ListViewItem -&gt; System.Windows.Forms.ListViewItem&#xA;override this.Add : System.Windows.Forms.ListViewItem -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListViewItem" />
      </Parameters>
      <Docs>
        <param name="value">, <see cref="T:System.Windows.Forms.ListViewItem" /> Aby dodać do kolekcji.</param>
        <summary>Dodaje istniejący <see cref="T:System.Windows.Forms.ListViewItem" /> element do kolekcji.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> , Który został dodany do kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wersja <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> metody umożliwia dodanie istniejącej <xref:System.Windows.Forms.ListViewItem> do kolekcji. Ta wersja <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> metody jest zwykle używana do ponownego użycia elementów z innych <xref:System.Windows.Forms.ListView> kontrolek lub jeśli <xref:System.Windows.Forms.ListViewItem> została utworzona ręcznie przed dodaniem jej do kolekcji. Jeśli chcesz utworzyć nowy <xref:System.Windows.Forms.ListViewItem> zamiast używać istniejącego elementu, użyj innych wersji <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> metody.  
  
 Jeśli właściwość jest ustawiona na wartość inną niż <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> lub jeśli <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> właściwość jest ustawiona, lista jest sortowana po dodaniu elementu. <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> W przeciwnym razie element zostanie wstawiony na końcu listy. Jeśli lista nie jest posortowana, można użyć <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> metody, aby wstawić element <xref:System.Windows.Forms.ListView> do określonego położenia. Aby dodać zestaw elementów do formantu w ramach jednej operacji, użyj <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> metody. Jeśli chcesz użyć <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> metody do dodania dużej liczby elementów do formantu, <xref:System.Windows.Forms.ListView.BeginUpdate%2A> Użyj metod <xref:System.Windows.Forms.ListView> i <xref:System.Windows.Forms.ListView.EndUpdate%2A> , aby zapobiec ponownym malowaniu do momentu dodania wszystkich elementów. Podczas dodawania elementów do <xref:System.Windows.Forms.ListView>, bardziej wydajne jest sortowanie elementów, a następnie dodawanie nowych elementów.  
  
 Ta wersja <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> metody jest również używana do <xref:System.Windows.Forms.ListViewItem> przypisywania do <xref:System.Windows.Forms.ListViewGroup>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem)" />
        <altmember cref="P:System.Windows.Forms.ListView.Sorting" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Add (string text, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Add(string text, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (text As String, imageIndex As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Add(System::String ^ text, int imageIndex);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * int -&gt; System.Windows.Forms.ListViewItem&#xA;override this.Add : string * int -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Add (text, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">Tekst elementu.</param>
        <param name="imageIndex">Indeks obrazu do wyświetlenia dla elementu.</param>
        <summary>Tworzy element z określonym tekstem i obrazem, a następnie dodaje go do kolekcji.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> , Który został dodany do kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Za pomocą tej wersji <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> metody można utworzyć nową <xref:System.Windows.Forms.ListViewItem> do dodania do <xref:System.Windows.Forms.ListView> kontrolki. Tekst nowej <xref:System.Windows.Forms.ListViewItem> dodanej do kontrolki jest oparty `text` na parametrze. Możesz również określić obraz dla elementu, przekazując <xref:System.Windows.Forms.ImageList> indeks przypisany <xref:System.Windows.Forms.ListView.LargeImageList%2A?displayProperty=nameWithType> do właściwości i <xref:System.Windows.Forms.ListView.SmallImageList%2A?displayProperty=nameWithType> do `imageIndex` parametru. (Zazwyczaj <xref:System.Windows.Forms.ListView.LargeImageList%2A?displayProperty=nameWithType> właściwości i <xref:System.Windows.Forms.ListView.SmallImageList%2A?displayProperty=nameWithType> używają tych samych pozycji indeksu do wyświetlania powiązanych obrazów). Jeśli nie chcesz określać indeksu obrazu dla elementu, użyj wersji <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> metody, która akceptuje tylko ciąg jako parametr. Jeśli masz istniejące <xref:System.Windows.Forms.ListViewItem> , które chcesz dodać do kolekcji, użyj wersji <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> metody, która przyjmuje <xref:System.Windows.Forms.ListViewItem> jako parametr.  
  
 Jeśli właściwość jest ustawiona na wartość inną niż <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> lub jeśli <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> właściwość jest ustawiona, lista jest sortowana po dodaniu elementu. <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> W przeciwnym razie element zostanie wstawiony na końcu listy. Jeśli lista nie jest posortowana, można użyć <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> metody, aby wstawić element <xref:System.Windows.Forms.ListView> do określonego położenia. Aby dodać zestaw elementów do formantu w ramach jednej operacji, użyj <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> metody. Jeśli chcesz użyć <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> metody do dodania dużej liczby elementów do formantu, <xref:System.Windows.Forms.ListView.BeginUpdate%2A> Użyj metod <xref:System.Windows.Forms.ListView> i <xref:System.Windows.Forms.ListView.EndUpdate%2A> , aby zapobiec ponownym malowaniu do momentu dodania wszystkich elementów. Podczas dodawania elementów do <xref:System.Windows.Forms.ListView>, bardziej wydajne jest sortowanie elementów, a następnie dodawanie nowych elementów.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem)" />
        <altmember cref="P:System.Windows.Forms.ListView.Sorting" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Add (string text, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Add(string text, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (text As String, imageKey As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Add(System::String ^ text, System::String ^ imageKey);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * string -&gt; System.Windows.Forms.ListViewItem&#xA;override this.Add : string * string -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Add (text, imageKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="imageKey" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text">Tekst elementu.</param>
        <param name="imageKey">Klucz obrazu do wyświetlenia dla elementu.</param>
        <summary>Tworzy element z określonym tekstem i obrazem, a następnie dodaje go do kolekcji.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> Dodano do kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView> Jeśli jest sortowany, element jest dodawany w prawidłowo sortowanej kolejności; w przeciwnym razie zostanie dodany na końcu kolekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Add (string key, string text, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Add(string key, string text, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, text As String, imageIndex As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Add(System::String ^ key, System::String ^ text, int imageIndex);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * string * int -&gt; System.Windows.Forms.ListViewItem&#xA;override this.Add : string * string * int -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Add (key, text, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="text" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="imageIndex" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Nazwa elementu.</param>
        <param name="text">Tekst elementu.</param>
        <param name="imageIndex">Indeks obrazu do wyświetlenia dla elementu.</param>
        <summary>Tworzy element z określonym kluczem, tekstem i obrazem, a następnie dodaje element do kolekcji.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> Dodano do kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView> Jeśli jest sortowany, element jest dodawany w prawidłowo sortowanej kolejności; w przeciwnym razie zostanie dodany na końcu kolekcji. Właściwość odnosi się do klucza dla elementu <xref:System.Windows.Forms.ListViewItem> w <xref:System.Windows.Forms.ListView.ListViewItemCollection>. <xref:System.Windows.Forms.ListViewItem.Name%2A>  
  
 <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> Metoda<xref:System.Windows.Forms.ListViewItem.Name%2A> ustawia właściwość na określony klucz, więc element może być pobierany przez jego indeks lub klucz.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Zawierający <see cref="T:System.Windows.Forms.ListView" /> jest w trybie wirtualnym.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Add (string key, string text, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Add(string key, string text, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, text As String, imageKey As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Add(System::String ^ key, System::String ^ text, System::String ^ imageKey);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * string * string -&gt; System.Windows.Forms.ListViewItem&#xA;override this.Add : string * string * string -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Add (key, text, imageKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="text" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="imageKey" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Nazwa elementu.</param>
        <param name="text">Tekst elementu.</param>
        <param name="imageKey">Klucz obrazu do wyświetlenia dla elementu.</param>
        <summary>Tworzy element z określonym kluczem, tekstem i obrazem, a następnie dodaje go do kolekcji.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> Dodano do kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość odnosi się do klucza dla elementu <xref:System.Windows.Forms.ListViewItem> w <xref:System.Windows.Forms.ListView.ListViewItemCollection>. <xref:System.Windows.Forms.ListViewItem.Name%2A>  
  
 <xref:System.Windows.Forms.ListView> Jeśli jest sortowany, element jest dodawany w prawidłowo sortowanej kolejności; w przeciwnym razie zostanie dodany na końcu kolekcji. <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> Metoda<xref:System.Windows.Forms.ListViewItem.Name%2A> ustawia właściwość elementu na określony klucz, więc element może być pobrany przez jego indeks lub klucz.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje tablicę elementów do kolekcji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListView.ListViewItemCollection items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListView/ListViewItemCollection items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListView.ListViewItemCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As ListView.ListViewItemCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Windows::Forms::ListView::ListViewItemCollection ^ items);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListView.ListViewItemCollection -&gt; unit" Usage="listViewItemCollection.AddRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Windows.Forms.ListView+ListViewItemCollection" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="items">, <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> Aby dodać do kolekcji.</param>
        <summary>Dodaje kolekcję elementów do kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli jest sortowana, Metoda doda elementy w kolejności sortowania; w przeciwnym razie doda je na końcu kolekcji. <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> <xref:System.Windows.Forms.ListView>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="items" />jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Zawierający <see cref="T:System.Windows.Forms.ListView" /> jest w trybie wirtualnym.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListViewItem[] values);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListViewItem[] values) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (values As ListViewItem())" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Windows::Forms::ListViewItem ^&gt; ^ values);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListViewItem[] -&gt; unit" Usage="listViewItemCollection.AddRange values" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListViewItem[] items);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListViewItem[] items) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As ListViewItem())" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Windows::Forms::ListViewItem ^&gt; ^ items);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListViewItem[] -&gt; unit" Usage="listViewItemCollection.AddRange items" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Windows.Forms.ListViewItem[]" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="values" Type="System.Windows.Forms.ListViewItem[]" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="items">Tablica <see cref="T:System.Windows.Forms.ListViewItem" /> obiektów do dodania do kolekcji.</param>
        <param name="values">Tablica <see cref="T:System.Windows.Forms.ListViewItem" /> obiektów do dodania do kolekcji.</param>
        <summary>Dodaje tablicę <see cref="T:System.Windows.Forms.ListViewItem" /> obiektów do kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Za pomocą tej metody można ponownie używać elementów z innej <xref:System.Windows.Forms.ListView> kontrolki. Jeśli chcesz dodać pojedynczy <xref:System.Windows.Forms.ListViewItem>, <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> Użyj metody. Możesz również użyć metody, <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> Jeśli chcesz dodać pojedynczą <xref:System.Windows.Forms.ListViewItem> pozycję w kolekcji.  
  
 Możesz również użyć tej metody, aby przypisać wiele <xref:System.Windows.Forms.ListViewItem> obiektów <xref:System.Windows.Forms.ListViewGroup>do.  
  
 Jeśli właściwość jest ustawiona na wartość inną niż <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> lub jeśli <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> właściwość jest ustawiona, lista jest sortowana po dodaniu elementów. <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> W przeciwnym razie elementy są wstawiane na końcu listy. Jeśli lista nie jest posortowana, można użyć <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> metody, aby wstawić elementy <xref:System.Windows.Forms.ListView> do określonych pozycji.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Windows.Forms.ListView> kontrolkę z trzema <xref:System.Windows.Forms.ListViewItem> obiektami i trzema <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiektami określonymi dla każdego elementu. Przykład tworzy <xref:System.Windows.Forms.ColumnHeader> również obiekty do wyświetlania elementów podelementowych w widoku szczegółów. Dwa <xref:System.Windows.Forms.ImageList> obiekty są również tworzone w przykładzie kodu, aby zapewnić obrazy <xref:System.Windows.Forms.ListViewItem> dla obiektów. Te <xref:System.Windows.Forms.ImageList> obiekty są dodawane <xref:System.Windows.Forms.ListView.LargeImageList%2A> do właściwości i <xref:System.Windows.Forms.ListView.SmallImageList%2A> . W przykładzie są stosowane następujące właściwości podczas tworzenia <xref:System.Windows.Forms.ListView> kontrolki:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Ten przykład wymaga, aby dodano kod do <xref:System.Windows.Forms.Form> i wywołano metodę utworzoną w przykładzie z konstruktora lub innej metody w formularzu. Przykład wymaga również, aby obrazy o `MySmallImage1`nazwach `MyLargeImage1` `MySmallImage2`,, `MyLargeImage2` i znajdowały się w katalogu głównym dysku C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="items" />jest <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem)" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="listViewItemCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa wszystkie elementy z kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po usunięciu elementów z kolekcji wszystkie informacje o usuniętych elementach zostaną utracone. Aby usunąć pojedynczy element z kolekcji, użyj <xref:System.Windows.Forms.ListView.ListViewItemCollection.Remove%2A> metody lub. <xref:System.Windows.Forms.ListView.ListViewItemCollection.RemoveAt%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Remove(System.Windows.Forms.ListViewItem)" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.ListViewItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.ListViewItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Contains(System.Windows.Forms.ListViewItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As ListViewItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::ListViewItem ^ item);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Forms.ListViewItem -&gt; bool" Usage="listViewItemCollection.Contains item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem" />
      </Parameters>
      <Docs>
        <param name="item"><see cref="T:System.Windows.Forms.ListViewItem" /> Reprezentuje element, który ma zostać zlokalizowany w kolekcji.</param>
        <summary>Określa, czy określony element znajduje się w kolekcji.</summary>
        <returns><see langword="true" />Jeśli element jest zawarty w kolekcji; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda pozwala określić, <xref:System.Windows.Forms.ListViewItem> czy element jest członkiem kolekcji. <xref:System.Windows.Forms.ListView.ListViewItemCollection.Contains%2A> Gdy wiesz, że element znajduje się w kolekcji, możesz użyć <xref:System.Windows.Forms.ListView.ListViewItemCollection.IndexOf%2A> metody, aby określić położenie elementu w kolekcji.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.IndexOf(System.Windows.Forms.ListViewItem)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : string -&gt; bool&#xA;override this.ContainsKey : string -&gt; bool" Usage="listViewItemCollection.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Nazwa elementu do wyszukania.</param>
        <summary>Określa, czy kolekcja zawiera element z określonym kluczem.</summary>
        <returns><see langword="true" />Aby wskazać, że kolekcja zawiera element z określonym kluczem; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W porównaniu do klucza nie jest rozróżniana wielkość liter. Właściwość odnosi się do klucza dla elementu <xref:System.Windows.Forms.ListViewItem> w <xref:System.Windows.Forms.ListView.ListViewItemCollection>. <xref:System.Windows.Forms.ListViewItem.Name%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (dest As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ dest, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="listViewItemCollection.CopyTo (dest, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest"><see cref="T:System.Array" /> Reprezentujący tablicę, do której ma zostać skopiowana zawartość kolekcji.</param>
        <param name="index">Lokalizacja w tablicy docelowej, do której mają zostać skopiowane elementy z kolekcji.</param>
        <summary>Kopiuje całą kolekcję do istniejącej tablicy w określonej lokalizacji w tablicy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tej metody można użyć do łączenia wybranych elementów z wielu kolekcji w jedną tablicę.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.ListView.ListViewItemCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę elementów w kolekcji.</summary>
        <value>Liczba elementów w kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia określenie liczby elementów w <xref:System.Windows.Forms.ListView>. Tej wartości można następnie użyć podczas zapętlenia przez wartości kolekcji i należy podać wiele iteracji, aby wykonać pętlę.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem[] Find (string key, bool searchAllSubItems);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem[] Find(string key, bool searchAllSubItems) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Find(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (key As String, searchAllSubItems As Boolean) As ListViewItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Forms::ListViewItem ^&gt; ^ Find(System::String ^ key, bool searchAllSubItems);" />
      <MemberSignature Language="F#" Value="member this.Find : string * bool -&gt; System.Windows.Forms.ListViewItem[]" Usage="listViewItemCollection.Find (key, searchAllSubItems)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="searchAllSubItems" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Nazwa elementu do wyszukania.</param>
        <param name="searchAllSubItems"><see langword="true" />Aby przeszukać elementy podelementowe; w przeciwnym razie. <see langword="false" /></param>
        <summary>Wyszukuje elementy, których nazwa pasuje do określonego klucza, opcjonalnie przeszukując elementy.</summary>
        <returns>Tablica <see cref="T:System.Windows.Forms.ListViewItem" /> obiektów zawierających pasujące elementy lub pusta tablica, jeśli żadne elementy nie pasują do siebie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W porównaniu do klucza nie jest rozróżniana wielkość liter. Właściwość odnosi się do klucza dla elementu <xref:System.Windows.Forms.ListViewItem> w <xref:System.Windows.Forms.ListView.ListViewItemCollection>. <xref:System.Windows.Forms.ListViewItem.Name%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="listViewItemCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca moduł wyliczający, który będzie używany do iteracji w kolekcji elementów.</summary>
        <returns><see cref="T:System.Collections.IEnumerator" /> Reprezentuje kolekcję elementów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy właściciel <xref:System.Windows.Forms.ListView> jest w trybie wirtualnym, nie można wyliczyć <xref:System.Windows.Forms.ListView.ListViewItemCollection> przy użyciu modułu wyliczającego <xref:System.Windows.Forms.ListView.ListViewItemCollection.GetEnumerator%2A>ani wywołania. Zamiast tego należy użyć <xref:System.Windows.Forms.ListView.Items%2A?displayProperty=nameWithType> właściwości, aby uzyskać dostęp do elementu przez wartość indeksu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Właściciel <see cref="T:System.Windows.Forms.ListView" /> jest w trybie wirtualnym.</exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.ListViewItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.ListViewItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.IndexOf(System.Windows.Forms.ListViewItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As ListViewItem) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::ListViewItem ^ item);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Forms.ListViewItem -&gt; int" Usage="listViewItemCollection.IndexOf item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem" />
      </Parameters>
      <Docs>
        <param name="item"><see cref="T:System.Windows.Forms.ListViewItem" /> Reprezentuje element, który ma zostać zlokalizowany w kolekcji.</param>
        <summary>Zwraca indeks w kolekcji określonego elementu.</summary>
        <returns>Indeks lokalizacji elementu w kolekcji liczony od zera. w przeciwnym razie-1, jeśli element nie znajduje się w kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.ListViewItemCollection.IndexOf%2A> Metoda umożliwia określenie pozycji elementu w kolekcji. Aby określić, czy element jest zawarty w kolekcji przed wywołaniem tej metody, użyj <xref:System.Windows.Forms.ListView.ListViewItemCollection.Contains%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Contains(System.Windows.Forms.ListViewItem)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.IndexOfKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member IndexOfKey : string -&gt; int&#xA;override this.IndexOfKey : string -&gt; int" Usage="listViewItemCollection.IndexOfKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Nazwa elementu do znalezienia w kolekcji.</param>
        <summary>Pobiera indeks elementu z określonym kluczem.</summary>
        <returns>Indeks (liczony od zera) pierwszego wystąpienia elementu z określonym kluczem, jeśli znaleziono; w przeciwnym razie-1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Windows.Forms.ListView.ListViewItemCollection.IndexOfKey%2A> jest wywoływana po raz pierwszy, ostatni zwrócony indeks zostanie sprawdzony pod kątem zgodności z kluczem, a w przypadku braku dopasowania wyszukiwanie rozpocznie się na początku kolekcji.  
  
 Właściwość odnosi się do klucza dla elementu <xref:System.Windows.Forms.ListViewItem> w <xref:System.Windows.Forms.ListView.ListViewItemCollection>. <xref:System.Windows.Forms.ListViewItem.Name%2A>  
  
 W porównaniu do klucza nie jest rozróżniana wielkość liter. Jeśli parametr jest `null` lub pusty ciąg, <xref:System.Windows.Forms.ListView.ListViewItemCollection.IndexOfKey%2A> zwraca-1 `key``.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Insert">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wstawia element do kolekcji o określonym indeksie.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem Insert (int index, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem Insert(int32 index, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, text As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ Insert(int index, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Insert (index, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">Lokalizacja indeksu na podstawie zera, w którym wstawiany jest element.</param>
        <param name="text">Tekst, który ma być wyświetlany dla elementu.</param>
        <summary>Tworzy nowy element i wstawia go do kolekcji o określonym indeksie.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> , Który został wstawiony do kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wersja <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> metody umożliwia wstawienie nowego elementu w konkretnym miejscu <xref:System.Windows.Forms.ListView.ListViewItemCollection>w. Tekst określony w `text` parametrze jest używany do utworzenia nowego <xref:System.Windows.Forms.ListViewItem> , który <xref:System.Windows.Forms.ListView.ListViewItemCollection> jest następnie wstawiany do w określonej lokalizacji.  
  
> [!NOTE]
>  Jeśli właściwość jest ustawiona na wartość inną niż <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> lub jeśli <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> właściwość jest ustawiona, lista jest sortowana po wstawieniu elementu. <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType>  
  
 Aby dodać element bez określania określonej pozycji w kolekcji, użyj <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> metody. Jeśli chcesz dodać tablicę elementów do kolekcji, użyj <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> metody. Tej metody można użyć, jeśli chcesz wstawić nowy element do istniejącej kolekcji elementów.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Parametr jest mniejszy niż 0 lub większy niż wartość <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> właściwości <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />. <paramref name="index" /></exception>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem Insert (int index, System.Windows.Forms.ListViewItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem Insert(int32 index, class System.Windows.Forms.ListViewItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, item As ListViewItem) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ Insert(int index, System::Windows::Forms::ListViewItem ^ item);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Windows.Forms.ListViewItem -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem" />
      </Parameters>
      <Docs>
        <param name="index">Lokalizacja indeksu na podstawie zera, w którym wstawiany jest element.</param>
        <param name="item"><see cref="T:System.Windows.Forms.ListViewItem" /> Reprezentuje element do wstawienia.</param>
        <summary>Wstawia istniejący <see cref="T:System.Windows.Forms.ListViewItem" /> do kolekcji o określonym indeksie.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> , Który został wstawiony do kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wersja <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> metody umożliwia wstawienie istniejącej <xref:System.Windows.Forms.ListViewItem> w konkretnym miejscu w <xref:System.Windows.Forms.ListView.ListViewItemCollection>.  
  
> [!NOTE]
>  Jeśli właściwość jest ustawiona na wartość inną niż <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> lub jeśli <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> właściwość jest ustawiona, lista jest sortowana po wstawieniu elementu. <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType>  
  
 Aby dodać element bez określania określonej pozycji w kolekcji w celu dodania elementu, użyj <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> metody. Jeśli chcesz dodać tablicę elementów do kolekcji, użyj <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> metody. Tej metody można użyć, jeśli chcesz wstawić nowy element do istniejącej kolekcji elementów.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Parametr jest mniejszy niż 0 lub większy niż wartość <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> właściwości <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />. <paramref name="index" /></exception>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem Insert (int index, string text, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem Insert(int32 index, string text, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, text As String, imageIndex As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ Insert(int index, System::String ^ text, int imageIndex);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string * int -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Insert (index, text, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Lokalizacja indeksu na podstawie zera, w którym wstawiany jest element.</param>
        <param name="text">Tekst, który ma być wyświetlany dla elementu.</param>
        <param name="imageIndex">Indeks obrazu do wyświetlenia dla elementu.</param>
        <summary>Tworzy nowy element o określonym indeksie obrazu i wstawia go do kolekcji o określonym indeksie.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> , Który został wstawiony do kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wersja <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> metody umożliwia wstawienie nowego elementu w konkretnym miejscu <xref:System.Windows.Forms.ListView.ListViewItemCollection>w. Tekst określony w `text` parametrze jest używany do utworzenia nowego <xref:System.Windows.Forms.ListViewItem> , który <xref:System.Windows.Forms.ListView.ListViewItemCollection> jest następnie wstawiany do w określonej lokalizacji.  
  
> [!NOTE]
>  Jeśli właściwość jest ustawiona na wartość inną niż <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> lub jeśli <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> właściwość jest ustawiona, lista jest sortowana po wstawieniu elementu. <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType>  
  
 Można również użyć <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> tej wersji metody do określenia obrazu dla elementu przez przekazanie indeksu <xref:System.Windows.Forms.ImageList> przypisanego do <xref:System.Windows.Forms.ListView.LargeImageList%2A?displayProperty=nameWithType> właściwości i <xref:System.Windows.Forms.ListView.SmallImageList%2A?displayProperty=nameWithType> do `imageIndex` parametru. (Zazwyczaj <xref:System.Windows.Forms.ListView.LargeImageList%2A?displayProperty=nameWithType> właściwości i <xref:System.Windows.Forms.ListView.SmallImageList%2A?displayProperty=nameWithType> używają tych samych pozycji indeksu do wyświetlania powiązanych obrazów). Jeśli nie chcesz określać indeksu obrazu dla elementu, użyj innej wersji <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> metody, która akceptuje ciąg jako parametr.  
  
 Aby dodać element bez określania określonej pozycji w kolekcji, użyj <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> metody. Jeśli chcesz dodać tablicę elementów do kolekcji, użyj <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Parametr jest mniejszy niż 0 lub większy niż wartość <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> właściwości <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />. <paramref name="index" /></exception>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem Insert (int index, string text, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem Insert(int32 index, string text, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, text As String, imageKey As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ Insert(int index, System::String ^ text, System::String ^ imageKey);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string * string -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Insert (index, text, imageKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="text" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="imageKey" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">Lokalizacja indeksu na podstawie zera, w którym wstawiany jest element.</param>
        <param name="text">Tekst <see cref="T:System.Windows.Forms.ListViewItem" />.</param>
        <param name="imageKey">Klucz obrazu do wyświetlenia dla elementu.</param>
        <summary>Tworzy nowy element z określonym tekstem i obrazem, a następnie wstawia go w kolekcji pod określonym indeksem.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> Dodano do kolekcji.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Parametr jest mniejszy niż 0 lub większy niż wartość <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> właściwości <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />. <paramref name="index" /></exception>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Insert (int index, string key, string text, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Insert(int32 index, string key, string text, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Insert (index As Integer, key As String, text As String, imageIndex As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Insert(int index, System::String ^ key, System::String ^ text, int imageIndex);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * string * string * int -&gt; System.Windows.Forms.ListViewItem&#xA;override this.Insert : int * string * string * int -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Insert (index, key, text, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="key" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="text" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="imageIndex" Type="System.Int32" Index="3" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">Lokalizacja indeksu (liczony od zera), w którym wstawiany jest element</param>
        <param name="key"><see cref="P:System.Windows.Forms.ListViewItem.Name" /> Elementu.</param>
        <param name="text">Tekst elementu.</param>
        <param name="imageIndex">Indeks obrazu do wyświetlenia dla elementu.</param>
        <summary>Tworzy nowy element z określonym kluczem, tekstem i obrazem, a następnie wstawia go w kolekcji pod określonym indeksem.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> Dodano do kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> Metoda<xref:System.Windows.Forms.ListViewItem.Name%2A> ustawia właściwość elementu na określony klucz, więc element może być pobrany przez jego indeks lub klucz.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Parametr jest mniejszy niż 0 lub większy niż wartość <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> właściwości <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />. <paramref name="index" /></exception>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Insert (int index, string key, string text, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Insert(int32 index, string key, string text, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Insert (index As Integer, key As String, text As String, imageKey As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Insert(int index, System::String ^ key, System::String ^ text, System::String ^ imageKey);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * string * string * string -&gt; System.Windows.Forms.ListViewItem&#xA;override this.Insert : int * string * string * string -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Insert (index, key, text, imageKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="key" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="text" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="imageKey" Type="System.String" Index="3" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">Lokalizacja indeksu na podstawie zera, w którym wstawiany jest element.</param>
        <param name="key"><see cref="P:System.Windows.Forms.ListViewItem.Name" /> Elementu.</param>
        <param name="text">Tekst elementu.</param>
        <param name="imageKey">Klucz obrazu do wyświetlenia dla elementu.</param>
        <summary>Tworzy nowy element z określonym kluczem, tekstem i obrazem, a następnie dodaje go do kolekcji o określonym indeksie.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> Dodano do kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> Metoda<xref:System.Windows.Forms.ListViewItem.Name%2A> ustawia właściwość elementu na określony klucz, więc element może być pobrany przez jego indeks lub klucz.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Parametr jest mniejszy niż 0 lub większy niż wartość <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> właściwości <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />. <paramref name="index" /></exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.ListView.ListViewItemCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy kolekcja jest tylko do odczytu.</summary>
        <value><see langword="true" />Jeśli kolekcja jest tylko do odczytu; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest zawsze `false` dla tej kolekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera lub ustawia element w kolekcji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ListViewItem ^ default[System::String ^] { System::Windows::Forms::ListViewItem ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Windows.Forms.ListViewItem" Usage="System.Windows.Forms.ListView.ListViewItemCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Nazwa elementu do pobrania.</param>
        <summary>Pobiera element z określonym kluczem.</summary>
        <value>Właściwość, która <see cref="T:System.Windows.Forms.ListViewItem" /> pasuje do określonego klucza. <see cref="P:System.Windows.Forms.ListViewItem.Name" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W porównaniu do klucza nie jest rozróżniana wielkość liter. Właściwość odnosi się do klucza dla elementu <xref:System.Windows.Forms.ListViewItem> w <xref:System.Windows.Forms.ListView.ListViewItemCollection>. <xref:System.Windows.Forms.ListViewItem.Name%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem this[int displayIndex] { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem Item(int32)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.Item(System.Int32)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(displayIndex As Integer) As ListViewItem" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ListViewItem ^ default[int] { System::Windows::Forms::ListViewItem ^ get(int displayIndex); void set(int displayIndex, System::Windows::Forms::ListViewItem ^ value); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.ListViewItem with get, set" Usage="System.Windows.Forms.ListView.ListViewItemCollection.Item" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem this[int index] { get; set; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As ListViewItem" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ListViewItem ^ default[int] { System::Windows::Forms::ListViewItem ^ get(int index); void set(int index, System::Windows::Forms::ListViewItem ^ value); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem Item(int32)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.Item(System.Int32)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.ListViewItem with get, set" Usage="System.Windows.Forms.ListView.ListViewItemCollection.Item" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="displayIndex" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="index">Indeks elementu w kolekcji, który ma zostać pobrany lub ustawiony.</param>
        <param name="displayIndex">Indeks elementu w kolekcji, który ma zostać pobrany lub ustawiony.</param>
        <summary>Pobiera lub ustawia element o określonym indeksie w kolekcji.</summary>
        <value><see cref="T:System.Windows.Forms.ListViewItem" /> Reprezentująca element znajdujący się w określonym indeksie w kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tej metody można użyć, aby uzyskać dane <xref:System.Windows.Forms.ListViewItem> przechowywane w określonej lokalizacji w kolekcji. Aby określić indeks określonego elementu w kolekcji, użyj <xref:System.Windows.Forms.ListView.ListViewItemCollection.IndexOf%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Parametr jest mniejszy niż 0 lub większy lub równy wartości <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> właściwości <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />. <paramref name="index" /></exception>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.IndexOf(System.Windows.Forms.ListViewItem)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (System.Windows.Forms.ListViewItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class System.Windows.Forms.ListViewItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Remove(System.Windows.Forms.ListViewItem)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (item As ListViewItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Windows::Forms::ListViewItem ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Windows.Forms.ListViewItem -&gt; unit&#xA;override this.Remove : System.Windows.Forms.ListViewItem -&gt; unit" Usage="listViewItemCollection.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem" />
      </Parameters>
      <Docs>
        <param name="item"><see cref="T:System.Windows.Forms.ListViewItem" /> Reprezentuje element, który ma zostać usunięty z kolekcji.</param>
        <summary>Usuwa określony element z kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usunięcie elementu z kolekcji powoduje zmianę indeksów dla kolejnych elementów w kolekcji. Wszystkie informacje o usuniętym elemencie są usuwane. Tej metody można użyć do usunięcia określonego elementu z kolekcji, określając element rzeczywisty do usunięcia. Aby określić indeks elementu, który ma zostać usunięty, zamiast samego elementu, użyj <xref:System.Windows.Forms.ListView.ListViewItemCollection.RemoveAt%2A> metody. Aby usunąć wszystkie elementy z kolekcji, użyj <xref:System.Windows.Forms.ListView.ListViewItemCollection.Clear%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Przypisany do parametru to<see langword="null" />. <paramref name="item" /> <see cref="T:System.Windows.Forms.ListViewItem" /></exception>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="listViewItemCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks elementu, który ma zostać usunięty.</param>
        <summary>Usuwa element o określonym indeksie w kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usunięcie elementu z kolekcji powoduje zmianę indeksów dla kolejnych elementów w kolekcji. Wszystkie informacje o usuniętym elemencie są usuwane. Tej metody można użyć do usunięcia określonego elementu z kolekcji, określając indeks elementu, który ma zostać usunięty z kolekcji. Aby określić element do usunięcia zamiast indeksu do elementu, użyj <xref:System.Windows.Forms.ListView.ListViewItemCollection.Remove%2A> metody. Aby usunąć wszystkie elementy z kolekcji, użyj <xref:System.Windows.Forms.ListView.ListViewItemCollection.Clear%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Parametr jest mniejszy niż 0 lub większy lub równy wartości <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> właściwości <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />. <paramref name="index" /></exception>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Remove(System.Windows.Forms.ListViewItem)" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="RemoveByKey">
      <MemberSignature Language="C#" Value="public virtual void RemoveByKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveByKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.RemoveByKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveByKey (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveByKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member RemoveByKey : string -&gt; unit&#xA;override this.RemoveByKey : string -&gt; unit" Usage="listViewItemCollection.RemoveByKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Nazwa elementu do usunięcia z kolekcji.</param>
        <summary>Usuwa element z określonym kluczem z kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W porównaniu do klucza nie jest rozróżniana wielkość liter. Właściwość odnosi się do klucza dla elementu <xref:System.Windows.Forms.ListViewItem> w <xref:System.Windows.Forms.ListView.ListViewItemCollection>. <xref:System.Windows.Forms.ListViewItem.Name%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy dostęp do kolekcji jest synchronizowany (bezpieczny wątkowo).</summary>
        <value><see langword="true" />we wszystkich przypadkach.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który może służyć do synchronizowania dostępu do kolekcji kontrolek.</summary>
        <value>Obiekt używany do synchronizowania kolekcji.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (item As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ item) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Obiekt, który ma zostać dodany do kolekcji.</param>
        <summary>Dodaje istniejący obiekt do kolekcji.</summary>
        <returns>Indeks (liczony od zera) wskazujący lokalizację obiektu, jeśli został dodany do kolekcji; w przeciwnym razie-1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `item` Parametr może być dowolnego typu. Jeśli `item` <xref:System.Windows.Forms.ListView.ListViewItemCollection>jest ,jestdodawanydo.<xref:System.Windows.Forms.ListViewItem> Jeśli `item` jest innym typem, tworzony jest <xref:System.Windows.Forms.ListViewItem> nowy <xref:System.Object.ToString%2A> zawierający `item`ciąg z metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (item As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ item) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Obiekt reprezentujący element, który ma zostać zlokalizowany w kolekcji.</param>
        <summary>Określa, czy określony element znajduje się w kolekcji.</summary>
        <returns><see langword="true" />Jeśli określony element znajduje się w kolekcji; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (item As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ item) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Reprezentuje <see cref="T:System.Windows.Forms.ListViewItem" /> element, który ma zostać zlokalizowany w kolekcji.</param>
        <summary>Zwraca indeks w kolekcji określonego elementu.</summary>
        <returns>Indeks (liczony od zera) elementu, jeśli znajduje się w kolekcji; w przeciwnym razie-1.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, item As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ item) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Lokalizacja indeksu na podstawie zera, w którym wstawiany jest element.</param>
        <param name="item">Obiekt, który reprezentuje element do wstawienia.</param>
        <summary>Wstawia obiekt do kolekcji o określonym indeksie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `item` Parametr może być dowolnego typu. Jeśli `item` <xref:System.Windows.Forms.ListView.ListViewItemCollection>jest ,jestdodawanydo.<xref:System.Windows.Forms.ListViewItem> Jeśli `item` jest innym typem, tworzony jest <xref:System.Windows.Forms.ListViewItem> nowy <xref:System.Object.ToString%2A> zawierający `item`ciąg z metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Parametr index jest mniejszy niż 0 lub większy niż wartość <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> właściwości. <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy kolekcja ma stały rozmiar.</summary>
        <value><see langword="false" />we wszystkich przypadkach.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks elementu, który ma zostać pobrany.</param>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Forms.ListViewItem" /> określony indeks w kolekcji.</summary>
        <value><see cref="T:System.Windows.Forms.ListViewItem" /> Reprezentuje element znajdujący się w określonym indeksie w kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `item` Parametr można ustawić na dowolny typ. Jeśli `item` <xref:System.Windows.Forms.ListView.ListViewItemCollection>jest ,jestdodawanydo.<xref:System.Windows.Forms.ListViewItem> Jeśli `item` jest innym typem, tworzony jest <xref:System.Windows.Forms.ListViewItem> nowy <xref:System.Object.ToString%2A> zawierający `item`ciąg z metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość parametru index jest mniejsza od 0 lub równa wartości <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> właściwości. <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (item As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ item) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Reprezentuje <see cref="T:System.Windows.Forms.ListViewItem" /> element, który ma zostać usunięty z kolekcji.</param>
        <summary>Usuwa określony element z kolekcji.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
