<Type Name="DataGridViewRow" FullName="System.Windows.Forms.DataGridViewRow">
  <Metadata><Meta Name="ms.openlocfilehash" Value="053dcf5033b15c187b14ce2edfd56be36208bb54" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69191223" /></Metadata><TypeSignature Language="C#" Value="public class DataGridViewRow : System.Windows.Forms.DataGridViewBand" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewRow extends System.Windows.Forms.DataGridViewBand" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewRow" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridViewRow&#xA;Inherits DataGridViewBand" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridViewRow : System::Windows::Forms::DataGridViewBand" />
  <TypeSignature Language="F#" Value="type DataGridViewRow = class&#xA;    inherit DataGridViewBand" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataGridViewBand</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataGridViewRowConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Przedstawia wiersz w <see cref="T:System.Windows.Forms.DataGridView" /> kontrolce.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa reprezentuje wiersz <xref:System.Windows.Forms.DataGridView> w kontrolce. <xref:System.Windows.Forms.DataGridViewRow> Wiersze można pobrać za pomocą <xref:System.Windows.Forms.DataGridView.Rows%2A> kolekcji i. <xref:System.Windows.Forms.DataGridView.SelectedRows%2A>  
  
 W przeciwieństwie <xref:System.Windows.Forms.DataGridViewColumn>do <xref:System.Windows.Forms.DataGridViewRow> , fizycznie zawiera kolekcję wszystkich komórek w tym wierszu. Dostęp do tej kolekcji można uzyskać za <xref:System.Windows.Forms.DataGridViewRow.Cells%2A> pomocą właściwości.  
  
 <xref:System.Windows.Forms.DataGridViewRow> Klasa jest używana do uzyskiwania dostępu do poszczególnych elementów komórek, a także do dostosowywania wyglądu i zachowania interfejsu użytkownika wiersza (UI), takiego jak Height i style komórki. Zwykle wszystkie wiersze lub większość wierszy w kontrolce mogą mieć te same cechy. Aby ustawić style komórek dla wszystkich wierszy w kontrolce, ustaw właściwości obiektu zwróconego przez <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A?displayProperty=nameWithType> właściwość. Aby ustawić style dla przemiennych wierszy, użyj <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A?displayProperty=nameWithType> właściwości. Aby uzyskać więcej informacji na temat stylów komórek, zobacz [style komórek w kontrolce DataGridView Windows Forms](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md). Można również użyć <xref:System.Windows.Forms.DataGridView.RowTemplate%2A?displayProperty=nameWithType> właściwości, aby zdefiniować wiersz, który będzie używany jako podstawa dla wszystkich wierszy dodanych do formantu.  
  
 Kontrolka będzie współużytkować <xref:System.Windows.Forms.DataGridView> <xref:System.Windows.Forms.DataGridViewRow> obiekty w wielu wierszach danych, o ile jest to możliwe, aby uniknąć kar z wydajnością. Jeśli nie pracujesz z dużymi ilościami danych i występują problemy z wydajnością, zazwyczaj możesz zignorować udostępnianie wierszy. Wiersz współużytkowany jest wskazywany przez <xref:System.Windows.Forms.DataGridViewBand.Index%2A> wartość właściwości-1. Niektórych elementów członkowskich <xref:System.Windows.Forms.DataGridViewRow> klasy nie można używać z wierszami udostępnionymi, ale można anulować udostępnianie wiersza, uzyskując dostęp do niego <xref:System.Windows.Forms.DataGridViewRowCollection.Item%2A?displayProperty=nameWithType> za pomocą właściwości. Wiersze mogą również być nieudostępniane w inny sposób. Aby uzyskać dostęp do wiersza bez jego udostępniania, użyj <xref:System.Windows.Forms.DataGridViewRowCollection.SharedRow%2A?displayProperty=nameWithType> metody. Podczas pracy z dużymi ilościami danych należy wiedzieć, jak wiersze są udostępniane i nie są udostępniane, aby uniknąć kar z zakresu wydajności. Aby uzyskać więcej informacji, zobacz [najlepsze rozwiązania dotyczące skalowania Windows Forms formantu DataGridView](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje użycie tego typu. Ten przykład jest częścią większego przykładu dostępnego [w następujących sposób: Manipulowanie wierszami w kontrolce](~/docs/framework/winforms/controls/how-to-manipulate-rows-in-the-windows-forms-datagridview-control.md)DataGridView Windows Forms.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#209](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#209)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#209](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#209)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#209](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#209)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Gdy pochodzą z <see cref="T:System.Windows.Forms.DataGridViewRow" /> i dodajesz nowe właściwości do klasy pochodnej, pamiętaj, aby <see cref="M:System.Windows.Forms.DataGridViewRow.Clone" /> zastąpić metodę, aby skopiować nowe właściwości podczas operacji klonowania. Należy również wywołać <see cref="M:System.Windows.Forms.DataGridViewRow.Clone" /> metodę klasy bazowej, aby właściwości klasy bazowej były kopiowane do nowej komórki.</para></block>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="T:System.Windows.Forms.DataGridViewColumn" />
    <altmember cref="M:System.Windows.Forms.DataGridViewRow.Clone" />
    <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows</related>
    <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Style komórki w formancie DataGridView formularzy systemu Windows</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewRow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridViewRow();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.Forms.DataGridViewRow" /> klasy bez użycia szablonu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor inicjuje wiersz w stanie pustym.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="AccessibilityObject">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AccessibleObject AccessibilityObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject AccessibilityObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.AccessibilityObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AccessibilityObject As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AccessibleObject ^ AccessibilityObject { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessibilityObject : System.Windows.Forms.AccessibleObject" Usage="System.Windows.Forms.DataGridViewRow.AccessibilityObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridViewRow.DataGridViewRowAccessibleObject" /> Pobiera przypisany<see cref="T:System.Windows.Forms.DataGridViewRow" />do.</summary>
        <value><see cref="T:System.Windows.Forms.DataGridViewRow.DataGridViewRowAccessibleObject" /> Przypisane<see cref="T:System.Windows.Forms.DataGridViewRow" />do.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby sterować wystąpieniem zwracanym z tej metody, Zastąp <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> metodę.  
  
 Jeśli wartość <xref:System.Windows.Forms.AccessibleObject> nie jest obecnie przypisana do kontrolki, tworzone jest nowe wystąpienie jednego z nich.  
  
> [!NOTE]
>  Aby uzyskać lub ustawić <xref:System.Windows.Forms.DataGridViewRow.AccessibilityObject%2A> właściwość, należy dodać odwołanie `Accessibility` do zestawu zainstalowanego z [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 Aby uzyskać więcej informacji na temat dostępnych obiektów, zobacz sekcję "Active Accessibility" w bibliotece MSDN pod [http://msdn.microsoft.com/library](https://msdn.microsoft.com/library)adresem.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow.DataGridViewRowAccessibleObject" />
        <altmember cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" />
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
      </Docs>
    </Member>
    <Member MemberName="AdjustRowHeaderBorderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataGridViewAdvancedBorderStyle AdjustRowHeaderBorderStyle (System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStyleInput, System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStylePlaceholder, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedRow, bool isLastVisibleRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.DataGridViewAdvancedBorderStyle AdjustRowHeaderBorderStyle(class System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStyleInput, class System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStylePlaceholder, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedRow, bool isLastVisibleRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.AdjustRowHeaderBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AdjustRowHeaderBorderStyle (dataGridViewAdvancedBorderStyleInput As DataGridViewAdvancedBorderStyle, dataGridViewAdvancedBorderStylePlaceholder As DataGridViewAdvancedBorderStyle, singleVerticalBorderAdded As Boolean, singleHorizontalBorderAdded As Boolean, isFirstDisplayedRow As Boolean, isLastVisibleRow As Boolean) As DataGridViewAdvancedBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ AdjustRowHeaderBorderStyle(System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ dataGridViewAdvancedBorderStyleInput, System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ dataGridViewAdvancedBorderStylePlaceholder, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedRow, bool isLastVisibleRow);" />
      <MemberSignature Language="F#" Value="abstract member AdjustRowHeaderBorderStyle : System.Windows.Forms.DataGridViewAdvancedBorderStyle * System.Windows.Forms.DataGridViewAdvancedBorderStyle * bool * bool * bool * bool -&gt; System.Windows.Forms.DataGridViewAdvancedBorderStyle&#xA;override this.AdjustRowHeaderBorderStyle : System.Windows.Forms.DataGridViewAdvancedBorderStyle * System.Windows.Forms.DataGridViewAdvancedBorderStyle * bool * bool * bool * bool -&gt; System.Windows.Forms.DataGridViewAdvancedBorderStyle" Usage="dataGridViewRow.AdjustRowHeaderBorderStyle (dataGridViewAdvancedBorderStyleInput, dataGridViewAdvancedBorderStylePlaceholder, singleVerticalBorderAdded, singleHorizontalBorderAdded, isFirstDisplayedRow, isLastVisibleRow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAdvancedBorderStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewAdvancedBorderStyleInput" Type="System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
        <Parameter Name="dataGridViewAdvancedBorderStylePlaceholder" Type="System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
        <Parameter Name="singleVerticalBorderAdded" Type="System.Boolean" />
        <Parameter Name="singleHorizontalBorderAdded" Type="System.Boolean" />
        <Parameter Name="isFirstDisplayedRow" Type="System.Boolean" />
        <Parameter Name="isLastVisibleRow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataGridViewAdvancedBorderStyleInput"><see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /> Reprezentujący styl obramowania nagłówka wiersza do zmodyfikowania.</param>
        <param name="dataGridViewAdvancedBorderStylePlaceholder"><see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /> , Który jest używany do przechowywania pośrednich zmian stylu obramowania nagłówka wiersza.</param>
        <param name="singleVerticalBorderAdded"><see langword="true" />Aby dodać pojedyncze obramowanie pionowe do wyniku; w przeciwnym razie. <see langword="false" /></param>
        <param name="singleHorizontalBorderAdded"><see langword="true" />Aby dodać pojedyncze obramowanie w poziomie do wyniku; w przeciwnym razie. <see langword="false" /></param>
        <param name="isFirstDisplayedRow"><see langword="true" />Jeśli wiersz jest pierwszym wierszem wyświetlanym w <see cref="T:System.Windows.Forms.DataGridView" />; w przeciwnym razie,. <see langword="false" /></param>
        <param name="isLastVisibleRow"><see langword="true" />Jeśli wiersz jest <see cref="T:System.Windows.Forms.DataGridView" /> ostatnim wierszem w, który ma swoją <see cref="P:System.Windows.Forms.DataGridViewRow.Visible" /> Właściwość <see langword="false" />ustawioną na <see langword="true" />; w przeciwnym razie.</param>
        <summary>Modyfikuje styl obramowania nagłówka wiersza wejściowego zgodnie z określonymi kryteriami.</summary>
        <returns><see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /> Reprezentujący nowy styl obramowania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrolka wewnętrznie wywołuje metodę <xref:System.Windows.Forms.DataGridViewRow.AdjustRowHeaderBorderStyle%2A> , aby określić wygląd obramowania komórek nagłówka wiersza. <xref:System.Windows.Forms.DataGridView> Kontrolka zazwyczaj używa wartości <xref:System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle%2A> właściwości dla `dataGridViewAdvancedBorderStyleInput` parametru. <xref:System.Windows.Forms.DataGridView>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Windows.Forms.DataGridViewRow.AdjustRowHeaderBorderStyle%2A> jak zastąpić metodę, aby dostosować obramowania komórek nagłówka wiersza. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Windows.Forms.DataGridViewAdvancedBorderStyle> klasy.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewAdvancedBorderStyle#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/CS/advancedborderstyle.cs#30)]
 [!code-vb[System.Windows.Forms.DataGridViewAdvancedBorderStyle#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/VB/advancedborderstyle.vb#30)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Zastąp tę metodę, jeśli chcesz dostosować wygląd obramowania komórek nagłówka wiersza.</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.Visible" />
      </Docs>
    </Member>
    <Member MemberName="Cells">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellCollection Cells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellCollection Cells" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.Cells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cells As DataGridViewCellCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellCollection ^ Cells { System::Windows::Forms::DataGridViewCellCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cells : System.Windows.Forms.DataGridViewCellCollection" Usage="System.Windows.Forms.DataGridViewRow.Cells" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję komórek wypełniających wiersz.</summary>
        <value><see cref="T:System.Windows.Forms.DataGridViewCellCollection" /> Zawiera wszystkie komórki w wierszu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wiersz nie zawiera żadnych komórek, gdy uzyskuje się dostęp <xref:System.Windows.Forms.DataGridViewCellCollection> <xref:System.Windows.Forms.DataGridViewRow.CreateCellsInstance%2A> do tej właściwości, zostanie utworzona nowa wartość pusta przez wywołanie metody.  
  
   
  
## Examples  
 Poniższy przykład kodu używa właściwości, <xref:System.Windows.Forms.DataGridViewRow.Cells%2A> aby ustawić wartość komórki w wierszu. Ten przykład kodu jest częścią większego przykładu kodu podanego w [temacie How to: Manipulowanie wierszami w kontrolce](~/docs/framework/winforms/controls/how-to-manipulate-rows-in-the-windows-forms-datagridview-control.md)DataGridView Windows Forms.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#211)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#211)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#211)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellCollection" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRow.CreateCellsInstance" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; obj" Usage="dataGridViewRow.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy dokładną kopię tego wiersza.</summary>
        <returns><see cref="T:System.Object" /> Reprezentuje sklonowany. <see cref="T:System.Windows.Forms.DataGridViewRow" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewRow.Clone%2A> Metoda kopiuje wiersz i jego wartości właściwości, ale nie kopiuje wartości komórek, które zawiera wiersz. Informacje o sposobie kopiowania wartości komórek podczas klonowania wiersza znajdują się w sekcji przykład.  
  
 Zastąp <xref:System.Windows.Forms.DataGridViewRow> metodę za każdym razem, gdy dziedziczysz z i dodasz nowe właściwości do klasy pochodnej. <xref:System.Windows.Forms.DataGridViewRow.Clone%2A>  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób używania <xref:System.Windows.Forms.DataGridViewRow.Clone%2A> metody do kopiowania wiersza, a następnie wypełniania kopii wartością komórki z oryginalnego wiersza.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#60](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#60)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#60](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#60)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.DataGridViewRow.Clone" /> w klasie pochodnej należy wywołać <see cref="M:System.Windows.Forms.DataGridViewRow.Clone" /> metodę klasy bazowej, tak aby właściwości klasy bazowej były kopiowane do nowego wiersza, i pamiętaj o skopiowaniu wartości wszelkich właściwości, które zostały dodane do klasy pochodnej.</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenuStrip">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ContextMenuStrip ContextMenuStrip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContextMenuStrip ContextMenuStrip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.ContextMenuStrip" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContextMenuStrip As ContextMenuStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ContextMenuStrip ^ ContextMenuStrip { System::Windows::Forms::ContextMenuStrip ^ get(); void set(System::Windows::Forms::ContextMenuStrip ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextMenuStrip : System.Windows.Forms.ContextMenuStrip with get, set" Usage="System.Windows.Forms.DataGridViewRow.ContextMenuStrip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenuStrip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia menu skrótów dla wiersza.</summary>
        <value>Skojarzone z bieżącym <see cref="T:System.Windows.Forms.DataGridViewRow" />. <see cref="T:System.Windows.Forms.ContextMenuStrip" /> Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość wskazuje menu skrótów, które jest wyświetlane, gdy użytkownik kliknie prawym przyciskiem myszy wiersz, <xref:System.Windows.Forms.DataGridView> chyba <xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded> że zdarzenie sterowania lub <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> właściwość wiersza zastępuje menu skrótów dla wybranej komórki, która została kliknięta.  
  
 <xref:System.Windows.Forms.DataGridView.DataSource%2A> `true` <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded> <xref:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs.ContextMenuStrip%2A?displayProperty=nameWithType> Gdy właściwość <xref:System.Windows.Forms.DataGridView> kontrolki jest ustawiona lub jej<xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> właściwość jest, pobieranie wartości właściwości wywołuje zdarzenie kontrolki i zwraca wartość Właściwość określona w obsłudze zdarzeń. Jeśli nie ma żadnych programów obsługi dla zdarzenia, pobranie wartości <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> właściwości powoduje zwrócenie wcześniej określonej wartości lub jej `null`wartości domyślnej.  
  
 Obsługa zdarzenia jest szczególnie przydatna podczas pracy z dużymi ilościami danych, aby uniknąć kar za wydajność podczas ustawiania wartości <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> wiersza dla wielu wierszy. <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded> Aby uzyskać więcej informacji, zobacz [najlepsze rozwiązania dotyczące skalowania Windows Forms formantu DataGridView](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 Zmiana tej właściwości podnosi <xref:System.Windows.Forms.DataGridView.RowContextMenuStripChanged> zdarzenie do właściciela <xref:System.Windows.Forms.DataGridView>, jeśli taki istnieje.  
  
 Jeśli bieżący wiersz jest udostępniony, użyj <xref:System.Windows.Forms.DataGridViewRow.GetContextMenuStrip%2A> metody zamiast uzyskać wartość tej właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Windows.Forms.DataGridViewColumn.ContextMenuStrip%2A?displayProperty=nameWithType> właściwości, która jest niemal identyczna <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> z właściwością <xref:System.Windows.Forms.DataGridViewRow> klasy. Ten przykład kodu jest częścią większego przykładu kodu podanego <xref:System.Windows.Forms.DataGridViewColumn> w klasie.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#130](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewColumnDemo.cpp#130)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#130](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewColumnDemo.cs#130)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#130](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewcolumndemo.vb#130)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Podczas pobierania wartości tej właściwości wiersz znajduje się w <see cref="T:System.Windows.Forms.DataGridView" /> kontrolce i jest wierszem udostępnionym.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowContextMenuStripChanged" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="T:System.Windows.Forms.ContextMenuStrip" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows</related>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="abstract member CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="dataGridViewRow.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nowy dostępny obiekt dla <see cref="T:System.Windows.Forms.DataGridViewRow" />.</summary>
        <returns><see cref="T:System.Windows.Forms.DataGridViewRow.DataGridViewRowAccessibleObject" /> Nowe<see cref="T:System.Windows.Forms.DataGridViewRow" />dla.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Windows.Forms.DataGridViewRow.CreateAccessibilityInstance%2A> Metoda nie zostanie jawnie wywołana, zostanie wywołana, <xref:System.Windows.Forms.DataGridViewRow.AccessibilityObject%2A> gdy zostanie przywoływana właściwość.  
  
> [!NOTE]
>  Aby pobrać lub ustawić <xref:System.Windows.Forms.DataGridViewRow.AccessibilityObject%2A>, należy dodać odwołanie `Accessibility` do zestawu zainstalowanego z [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateCells">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Resetuje komórki w wierszu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateCells">
      <MemberSignature Language="C#" Value="public void CreateCells (System.Windows.Forms.DataGridView dataGridView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateCells(class System.Windows.Forms.DataGridView dataGridView) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.CreateCells(System.Windows.Forms.DataGridView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateCells(System::Windows::Forms::DataGridView ^ dataGridView);" />
      <MemberSignature Language="F#" Value="member this.CreateCells : System.Windows.Forms.DataGridView -&gt; unit" Usage="dataGridViewRow.CreateCells dataGridView" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridView" Type="System.Windows.Forms.DataGridView" />
      </Parameters>
      <Docs>
        <param name="dataGridView">A <see cref="T:System.Windows.Forms.DataGridView" /> który działa jako szablon dla stylów komórki.</param>
        <summary>Czyści istniejące komórki i ustawia ich szablon zgodnie z podanym <see cref="T:System.Windows.Forms.DataGridView" /> szablonem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda czyści wiersz <xref:System.Windows.Forms.DataGridViewCellCollection> i ponownie inicjuje go <xref:System.Windows.Forms.DataGridViewColumn.CellTemplate%2A> z właściwością każdej kolumny `dataGridView` parametru. W efekcie wiersz przyjmuje wygląd i zachowanie wiersza z `dataGridView` parametru.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dataGridView" />jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Wiersz, który należy już do elementu <see cref="T:System.Windows.Forms.DataGridView" /> , został dodany.  
  
—lub— 
Nie dodano kolumny, która nie ma szablonu komórki.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellCollection" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCellCollection.Clear" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.CellTemplate" />
      </Docs>
    </Member>
    <Member MemberName="CreateCells">
      <MemberSignature Language="C#" Value="public void CreateCells (System.Windows.Forms.DataGridView dataGridView, params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateCells(class System.Windows.Forms.DataGridView dataGridView, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.CreateCells(System.Windows.Forms.DataGridView,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateCells(System::Windows::Forms::DataGridView ^ dataGridView, ... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.CreateCells : System.Windows.Forms.DataGridView * obj[] -&gt; unit" Usage="dataGridViewRow.CreateCells (dataGridView, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridView" Type="System.Windows.Forms.DataGridView" />
        <Parameter Name="values" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="dataGridView">A <see cref="T:System.Windows.Forms.DataGridView" /> który działa jako szablon dla stylów komórki.</param>
        <param name="values">Tablica obiektów, które inicjują komórki resetowania.</param>
        <summary>Czyści istniejące komórki i ustawia ich szablon i wartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda czyści wiersz <xref:System.Windows.Forms.DataGridViewCellCollection> i ponownie inicjuje go <xref:System.Windows.Forms.DataGridViewColumn.CellTemplate%2A> z właściwością każdej kolumny `dataGridView` parametru. W efekcie wiersz przyjmuje wygląd i zachowanie wiersza z `dataGridView` parametru.  
  
 Jeśli `values` tablica zawiera więcej elementów niż komórki do zainicjowania, dodatkowe elementy zostaną zignorowane. Jeśli liczba elementów jest mniejsza niż jest to wymagane, pozostałe niedopasowane komórki będą zachować domyślne wartości początkowe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Jeden z parametrów jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Wiersz, który należy już do elementu <see cref="T:System.Windows.Forms.DataGridView" /> , został dodany.  
  
—lub— 
Nie dodano kolumny, która nie ma szablonu komórki.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellCollection" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRow.SetValues(System.Object[])" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.CellTemplate" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.SetValue(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CreateCellsInstance">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.DataGridViewCellCollection CreateCellsInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.DataGridViewCellCollection CreateCellsInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.CreateCellsInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateCellsInstance () As DataGridViewCellCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::DataGridViewCellCollection ^ CreateCellsInstance();" />
      <MemberSignature Language="F#" Value="abstract member CreateCellsInstance : unit -&gt; System.Windows.Forms.DataGridViewCellCollection&#xA;override this.CreateCellsInstance : unit -&gt; System.Windows.Forms.DataGridViewCellCollection" Usage="dataGridViewRow.CreateCellsInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nową kolekcję komórek na podstawie tego wiersza.</summary>
        <returns>Nowo utworzony <see cref="T:System.Windows.Forms.DataGridViewCellCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda tworzy pusty <xref:System.Windows.Forms.DataGridViewCellCollection> <xref:System.Windows.Forms.BaseCollection.Count%2A> z właściwością ustawioną na 0.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Zazwyczaj klasy pochodne powinny implementować własne wersje <see cref="M:System.Windows.Forms.DataGridViewRow.CreateCellsInstance" /> metody i nie mogą wywoływać wersji klasy bazowej.</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellCollection" />
      </Docs>
    </Member>
    <Member MemberName="DataBoundItem">
      <MemberSignature Language="C#" Value="public object DataBoundItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataBoundItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.DataBoundItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBoundItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataBoundItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataBoundItem : obj" Usage="System.Windows.Forms.DataGridViewRow.DataBoundItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt powiązany z danymi, który wypełnił wiersz.</summary>
        <value>Powiązane <see cref="T:System.Object" />dane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uzyskiwanie dostępu do obiektów powiązanych z danymi bezpośrednio za pomocą obiektów wierszy jest przydatne, gdy nie masz bezpośredniego dostępu do źródła danych zawierającego obiekty. Jest to wygodne również, gdy chcesz manipulować obiektami powiązanymi z zaznaczonymi wierszami lub wierszami przekazaną jako argumenty do programów obsługi zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Windows.Forms.DataGridViewRow.DataBoundItem%2A> właściwości w celu uzyskania dostępu do obiektu biznesowego powiązanego z wierszem. Ten przykład kodu jest częścią większego przykładu przedstawionego [w temacie How to: Obiekty dostępu powiązane z Windows Forms wierszami](~/docs/framework/winforms/controls/how-to-access-objects-bound-to-windows-forms-datagridview-rows.md)DataGridView.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewObjectBinding#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewObjectBinding/CS/datagridviewobjectbinding.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewObjectBinding#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewObjectBinding/VB/datagridviewobjectbinding.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCellStyle">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.DataGridViewCellStyle DefaultCellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle DefaultCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.DefaultCellStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DefaultCellStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataGridViewCellStyle ^ DefaultCellStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); void set(System::Windows::Forms::DataGridViewCellStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCellStyle : System.Windows.Forms.DataGridViewCellStyle with get, set" Usage="System.Windows.Forms.DataGridViewRow.DefaultCellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia domyślne style dla wiersza, które są używane do renderowania komórek w wierszu, chyba że style zostaną zastąpione.</summary>
        <value><see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> Do zastosowania jako styl domyślny.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrolka wyświetla komórki za pomocą stylów wskazywanych przez właściwość komórki <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> , która dziedziczy style z innych właściwości typu <xref:System.Windows.Forms.DataGridViewCellStyle>. <xref:System.Windows.Forms.DataGridView> W przypadku komórek w tym wierszu style określone za pomocą <xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A> właściwości przesłaniają style określone <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A?displayProperty=nameWithType>za pomocą właściwości, <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A?displayProperty=nameWithType>, i <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A?displayProperty=nameWithType> , ale są zastępowane przez style określone za pomocą <xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=nameWithType> właściwość.  
  
 Aby uzyskać więcej informacji, zobacz [style komórek w kontrolce DataGridView Windows Forms](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md).  
  
 Podczas pobierania tej właściwości zostaną utworzone <xref:System.Windows.Forms.DataGridViewCellStyle> z wartościami domyślnymi, jeśli nie uzyskano już dostępu do właściwości. Może to spowodować wpływ na wydajność podczas pobierania tej właściwości dla wielu wierszy. Jeśli to możliwe, użyj pojedynczej <xref:System.Windows.Forms.DataGridViewCellStyle> wartości, aby ustawić tę właściwość dla wielu wierszy. Aby uzyskać więcej informacji, zobacz [najlepsze rozwiązania dotyczące skalowania Windows Forms formantu DataGridView](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje sposób użycia tej właściwości w <xref:System.Windows.Forms.DataGridView> kontrolce przeznaczonej głównie do wyświetlania. W tym przykładzie wizualny wygląd kontrolki jest dostosowany na kilka sposobów, a formant jest skonfigurowany pod kątem ograniczonej aktywności. Ten przykład jest częścią większego przykładu dostępnego w <xref:System.Windows.Forms.DataGridViewCellStyle> przeglądzie klasy.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Podczas ustawiania tej właściwości wiersz znajduje się w <see cref="T:System.Windows.Forms.DataGridView" /> kontrolce i jest wierszem udostępnionym.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Style komórki w formancie DataGridView formularzy systemu Windows</related>
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows</related>
      </Docs>
    </Member>
    <Member MemberName="Displayed">
      <MemberSignature Language="C#" Value="public override bool Displayed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Displayed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.Displayed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Displayed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Displayed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Displayed : bool" Usage="System.Windows.Forms.DataGridViewRow.Displayed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy ten wiersz jest wyświetlany na ekranie.</summary>
        <value><see langword="true" />Jeśli wiersz jest aktualnie wyświetlany na ekranie; w przeciwnym razie. <see langword="false" /></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Wiersz znajduje się w <see cref="T:System.Windows.Forms.DataGridView" /> kontrolce i jest wierszem udostępnionym.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows</related>
      </Docs>
    </Member>
    <Member MemberName="DividerHeight">
      <MemberSignature Language="C#" Value="public int DividerHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DividerHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.DividerHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property DividerHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DividerHeight { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DividerHeight : int with get, set" Usage="System.Windows.Forms.DataGridViewRow.DividerHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wysokość linii podziału wiersza (w pikselach).</summary>
        <value>Wysokość (w pikselach) separatora (dolny margines wiersza).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest przydatna do zapewnienia wizualnej granicy między zablokowanymi wierszami i wierszami, które można przewijać. Dodatkowa krawędź jest częścią bieżącego wiersza, mimo że zostanie powiązana z kolorem pierwszego planu skojarzone <xref:System.Windows.Forms.DataGridView>. Dodatkowa krawędź nie obejmuje obszaru, w którym użytkownicy mogą kliknąć dwukrotnie, aby automatycznie zmienić rozmiar wiersza. Aby zmienić rozmiar wiersza, użytkownik musi dwukrotnie kliknąć granicę między separatorem a sąsiednim wierszem.  
  
   
  
## Examples  
 Poniższy przykład kodu modyfikuje wysokość dzielnika wiersza w celu zapewnienia nacisku.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#210](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#210)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#210](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#210)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#210](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#210)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Podczas ustawiania tej właściwości wiersz znajduje się w <see cref="T:System.Windows.Forms.DataGridView" /> kontrolce i jest wierszem udostępnionym.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows</related>
      </Docs>
    </Member>
    <Member MemberName="DrawFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void DrawFocus (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle bounds, int rowIndex, System.Windows.Forms.DataGridViewElementStates rowState, System.Windows.Forms.DataGridViewCellStyle cellStyle, bool cellsPaintSelectionBackground);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void DrawFocus(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipBounds, valuetype System.Drawing.Rectangle bounds, int32 rowIndex, valuetype System.Windows.Forms.DataGridViewElementStates rowState, class System.Windows.Forms.DataGridViewCellStyle cellStyle, bool cellsPaintSelectionBackground) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.DrawFocus(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Windows.Forms.DataGridViewCellStyle,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void DrawFocus(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipBounds, System::Drawing::Rectangle bounds, int rowIndex, System::Windows::Forms::DataGridViewElementStates rowState, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, bool cellsPaintSelectionBackground);" />
      <MemberSignature Language="F#" Value="abstract member DrawFocus : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * System.Windows.Forms.DataGridViewCellStyle * bool -&gt; unit&#xA;override this.DrawFocus : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * System.Windows.Forms.DataGridViewCellStyle * bool -&gt; unit" Usage="dataGridViewRow.DrawFocus (graphics, clipBounds, bounds, rowIndex, rowState, cellStyle, cellsPaintSelectionBackground)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="rowState" Type="System.Windows.Forms.DataGridViewElementStates" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="cellsPaintSelectionBackground" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="graphics"><see cref="T:System.Drawing.Graphics" /> Używane do malowania <see cref="T:System.Windows.Forms.DataGridViewRow" />.</param>
        <param name="clipBounds"><see cref="T:System.Drawing.Rectangle" /> Reprezentuje obszar<see cref="T:System.Windows.Forms.DataGridView" /> , który musi być namalowany.</param>
        <param name="bounds">A <see cref="T:System.Drawing.Rectangle" /> , który zawiera granice <see cref="T:System.Windows.Forms.DataGridViewRow" /> , które są rysowane.</param>
        <param name="rowIndex">Indeks wiersza komórki, która jest używana.</param>
        <param name="rowState">Bitowa kombinacja <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> wartości, która określa stan wiersza.</param>
        <param name="cellStyle"><see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> Używany do malowania prostokąta fokusu.</param>
        <param name="cellsPaintSelectionBackground"><see langword="true" />Aby użyć <see cref="P:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor" /> <paramref name="cellStyle" /> właściwości jako koloru prostokąta fokusu; <see langword="false" /> aby użyćwłaściwości<paramref name="cellStyle" />jako koloru prostokąta fokusu. <see cref="P:System.Windows.Forms.DataGridViewCellStyle.BackColor" /></param>
        <summary>Rysuje prostokąt fokusu wokół określonych granic.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr nie jest używany w implementacji <xref:System.Windows.Forms.DataGridViewRow.DrawFocus%2A> klasy podstawowej metody, chociaż może być używany podczas zastępowania tej metody w klasie pochodnej. `rowIndex`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wiersz nie został dodany do <see cref="T:System.Windows.Forms.DataGridView" /> kontrolki.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="graphics" />jest <see langword="null" />.  
  
—lub— 
 <paramref name="cellStyle" />jest <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="ErrorText">
      <MemberSignature Language="C#" Value="public string ErrorText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.ErrorText" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ErrorText : string with get, set" Usage="System.Windows.Forms.DataGridViewRow.ErrorText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst komunikatu o błędzie dla błędów na poziomie wiersza.</summary>
        <value>A <see cref="T:System.String" /> zawiera komunikat o błędzie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej właściwości, aby podać komunikat o błędzie dla błędów na poziomie wiersza. Określony komunikat jest wyświetlany w etykietce narzędzia, gdy użytkownik przesuwa wskaźnik myszy nad ikoną błędu wyświetlaną w nagłówku wiersza.  
  
 Począwszy od .NET Framework 4.5.2, rozmiar ikony błędu jest zmieniany zgodnie z ustawieniem DPI systemu, gdy plik App. config zawiera następujący wpis:  
  
```  
<appSettings>  
  <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />  
</appSettings>  
  
```  
  
 Jeśli ten wiersz jest skojarzony z <xref:System.Windows.Forms.DataGridView> kontrolką, ustawienie tej właściwości spowoduje <xref:System.Windows.Forms.DataGridView.RowErrorTextChanged> wygenerowanie zdarzenia.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A> właściwości <xref:System.Windows.Forms.DataGridView.DataError> w programie obsługi zdarzeń. Ten przykład jest częścią większego przykładu dostępnego w <xref:System.Windows.Forms.DataGridViewComboBoxColumn> przeglądzie klasy.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#50)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Podczas pobierania wartości tej właściwości wiersz jest wierszem udostępnionym w <see cref="T:System.Windows.Forms.DataGridView" /> kontrolce.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ErrorText" />
        <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowErrorTextChanged" />
        <altmember cref="T:System.Windows.Forms.ErrorProvider" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows</related>
      </Docs>
    </Member>
    <Member MemberName="Frozen">
      <MemberSignature Language="C#" Value="public override bool Frozen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Frozen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.Frozen" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Frozen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Frozen { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Frozen : bool with get, set" Usage="System.Windows.Forms.DataGridViewRow.Frozen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy wiersz jest zablokowany.</summary>
        <value><see langword="true" />Jeśli wiersz jest zamrożony; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość pozwala zachować jeden lub kilka wierszy ważnych informacji podczas przewijania przez <xref:System.Windows.Forms.DataGridView>użytkownika. Wszystkie wiersze nad zablokowanym wierszem również są zamrożone.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Windows.Forms.DataGridViewBand.Frozen%2A?displayProperty=nameWithType> właściwości, która jest niemal identyczna <xref:System.Windows.Forms.DataGridViewRow.Frozen%2A> z właściwością <xref:System.Windows.Forms.DataGridViewRow> klasy. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Windows.Forms.DataGridViewBand> klasy.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewBandDemo.cpp#7)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewBandDemo.cs#7)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewbanddemo.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wiersz znajduje się w <see cref="T:System.Windows.Forms.DataGridView" /> kontrolce i jest wierszem udostępnionym.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows</related>
      </Docs>
    </Member>
    <Member MemberName="GetContextMenuStrip">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ContextMenuStrip GetContextMenuStrip (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ContextMenuStrip GetContextMenuStrip(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.GetContextMenuStrip(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContextMenuStrip (rowIndex As Integer) As ContextMenuStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ContextMenuStrip ^ GetContextMenuStrip(int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.GetContextMenuStrip : int -&gt; System.Windows.Forms.ContextMenuStrip" Usage="dataGridViewRow.GetContextMenuStrip rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenuStrip</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Indeks bieżącego wiersza.</param>
        <summary>Pobiera menu skrótów dla wiersza.</summary>
        <returns>A <see cref="T:System.Windows.Forms.ContextMenuStrip" /> , który należy <see cref="T:System.Windows.Forms.DataGridViewRow" /> do o określonym indeksie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przekaż metodę indeksatora użytego do <xref:System.Windows.Forms.DataGridViewRow>pobrania. <xref:System.Windows.Forms.DataGridViewRow.GetContextMenuStrip%2A> Nie należy używać <xref:System.Windows.Forms.DataGridViewBand.Index%2A> właściwości `rowIndex` dla parametru. Jeśli wiersz jest udostępniony, <xref:System.Windows.Forms.DataGridViewBand.Index%2A> ma wartość-1, która jest nieprawidłową wartością dla. `rowIndex`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="rowIndex" />jest-1.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndex" />jest mniejsza od zera lub większa lub równa liczbie wierszy w kontrolce minus jeden.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows</related>
      </Docs>
    </Member>
    <Member MemberName="GetErrorText">
      <MemberSignature Language="C#" Value="public string GetErrorText (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetErrorText(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.GetErrorText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetErrorText (rowIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetErrorText(int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.GetErrorText : int -&gt; string" Usage="dataGridViewRow.GetErrorText rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Indeks wiersza, który zawiera błąd.</param>
        <summary>Pobiera tekst błędu dla wiersza o określonym indeksie.</summary>
        <returns>Ciąg, który opisuje błąd wiersza w określonym indeksie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przekaż metodę Indeks użyty do <xref:System.Windows.Forms.DataGridViewRow>pobrania. <xref:System.Windows.Forms.DataGridViewRow.GetErrorText%2A> Nie należy używać <xref:System.Windows.Forms.DataGridViewBand.Index%2A> właściwości `rowIndex` dla parametru. Jeśli wiersz jest udostępniony, <xref:System.Windows.Forms.DataGridViewBand.Index%2A> ma wartość-1, która jest nieprawidłową wartością dla. `rowIndex` Aby uzyskać więcej informacji na temat udostępniania wierszy, zobacz [najlepsze rozwiązania dotyczące skalowania Windows Forms formantu DataGridView](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wiersz należy do <see cref="T:System.Windows.Forms.DataGridView" /> kontrolki i jest wierszem udostępnionym.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Wiersz należy do <see cref="T:System.Windows.Forms.DataGridView" /> kontrolki i <paramref name="rowIndex" /> jest mniejsza od zera lub większa niż liczba wierszy w kontrolce minus jeden.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows</related>
      </Docs>
    </Member>
    <Member MemberName="GetPreferredHeight">
      <MemberSignature Language="C#" Value="public virtual int GetPreferredHeight (int rowIndex, System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetPreferredHeight(int32 rowIndex, valuetype System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.GetPreferredHeight(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPreferredHeight (rowIndex As Integer, autoSizeRowMode As DataGridViewAutoSizeRowMode, fixedWidth As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetPreferredHeight(int rowIndex, System::Windows::Forms::DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth);" />
      <MemberSignature Language="F#" Value="abstract member GetPreferredHeight : int * System.Windows.Forms.DataGridViewAutoSizeRowMode * bool -&gt; int&#xA;override this.GetPreferredHeight : int * System.Windows.Forms.DataGridViewAutoSizeRowMode * bool -&gt; int" Usage="dataGridViewRow.GetPreferredHeight (rowIndex, autoSizeRowMode, fixedWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="autoSizeRowMode" Type="System.Windows.Forms.DataGridViewAutoSizeRowMode" />
        <Parameter Name="fixedWidth" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Indeks wiersza, dla którego jest obliczana preferowana wysokość.</param>
        <param name="autoSizeRowMode">A <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" /> określa tryb automatycznej zmiany wielkości.</param>
        <param name="fixedWidth"><see langword="true" />Aby obliczyć preferowaną Wysokość stałej szerokości komórki; w przeciwnym razie. <see langword="false" /></param>
        <summary>Oblicza idealną wysokość określonego wiersza na podstawie określonych kryteriów.</summary>
        <returns>Idealna wysokość wiersza (w pikselach).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest używana przez funkcję <xref:System.Windows.Forms.DataGridView> automatycznego ustalania rozmiarów na podstawie zawartości kontrolki, aby określić idealną wysokość wiersza. `rowIndex` Wartość umożliwia określenie rzeczywistego indeksu wierszy w wierszu udostępnionym. (Wiersze udostępnione mają <xref:System.Windows.Forms.DataGridViewBand.Index%2A> wartości właściwości-1).  
  
 `fixedWidth` Wartośćparametruobliczawysokośćwierszanapodstawieszerokościkolumnobliczeniowych,któreosiągnąidealneproporcje`false` wysokooci komórki do szerokości.  
  
 Aby zawartość komórki była zawijana do wielu wierszy, styl komórki w efekcie dla komórki musi mieć <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> <xref:System.Windows.Forms.DataGridViewTriState.True>wartość właściwości.  
  
 Aby uzyskać więcej informacji na temat automatycznego ustalania rozmiarów, zobacz [Opcje ustalania rozmiarów w kontrolce DataGridView Windows Forms](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md).  
  
   
  
## Examples  
 Poniższy przykład kodu używa <xref:System.Windows.Forms.DataGridViewRow.GetPreferredHeight%2A> metody, aby określić nowe uzupełnienie dla wiersza, którego rozmiar został zmieniony. Ten przykład kodu jest częścią większego przykładu przedstawionego [w temacie How to: Dostosuj wygląd wierszy w kontrolce](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)DataGridView Windows Forms.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#40)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="autoSizeRowMode" />nie jest prawidłową <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" /> wartością.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość <paramref name="rowIndex" /> nie jest w prawidłowym zakresie od 0 do liczby wierszy w kontrolce pomniejszonej o 1.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.WrapMode" />
        <altmember cref="M:System.Windows.Forms.DataGridViewColumn.GetPreferredWidth(System.Windows.Forms.DataGridViewAutoSizeColumnMode,System.Boolean)" />
        <related type="Article" href="https://msdn.microsoft.com/library/d40b53d2-7e7c-48c5-8570-6e79d15c3bbb">Instrukcje: dostosowywanie wyglądu wierszy w kontrolce DataGridView formularzy systemu Windows</related>
        <related type="Article" href="https://msdn.microsoft.com/library/a5620a9c-0d06-41e3-8934-c25ddb16c9e6">Opcje ustalania rozmiaru w formancie DataGridView formularzy systemu Windows</related>
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows</related>
      </Docs>
    </Member>
    <Member MemberName="GetState">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataGridViewElementStates GetState (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Forms.DataGridViewElementStates GetState(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.GetState(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetState (rowIndex As Integer) As DataGridViewElementStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::DataGridViewElementStates GetState(int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetState : int -&gt; System.Windows.Forms.DataGridViewElementStates&#xA;override this.GetState : int -&gt; System.Windows.Forms.DataGridViewElementStates" Usage="dataGridViewRow.GetState rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewElementStates</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Indeks wiersza.</param>
        <summary>Zwraca wartość wskazującą bieżący stan wiersza.</summary>
        <returns>Bitowa kombinacja <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> wartości wskazujących stan wiersza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest przydatna do określenia stanu wiersza udostępnionego. Wiersze udostępnione mają <xref:System.Windows.Forms.DataGridViewBand.Index%2A> wartości-1, co uniemożliwia <xref:System.Windows.Forms.DataGridViewRow.State%2A> Używanie właściwości z udostępnionymi wierszami. Aby użyć tej metody, Przekaż do rzeczywistego indeksu wierszy. Możesz pobrać rzeczywisty indeks wiersza udostępnionego, wywołując <xref:System.Windows.Forms.DataGridViewRowCollection.IndexOf%2A> metodę.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wiersz został dodany do <see cref="T:System.Windows.Forms.DataGridView" /> kontrolki, <paramref name="rowIndex" /> ale wartość nie jest w prawidłowym zakresie od 0 do liczby wierszy w kontrolce pomniejszonej o 1.</exception>
        <exception cref="T:System.ArgumentException">Wiersz nie jest wierszem udostępnionym, ale <paramref name="rowIndex" /> wartość nie jest zgodna z wartością <see cref="P:System.Windows.Forms.DataGridViewBand.Index" /> właściwości wiersza.  
  
—lub— 
Wiersz nie został dodany do <see cref="T:System.Windows.Forms.DataGridView" /> kontrolki, <paramref name="rowIndex" /> ale wartość nie jest zgodna z wartością <see cref="P:System.Windows.Forms.DataGridViewBand.Index" /> właściwości wiersza.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewElementStates" />
        <altmember cref="P:System.Windows.Forms.DataGridViewBand.Index" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.State" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRowCollection.IndexOf(System.Windows.Forms.DataGridViewRow)" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows</related>
      </Docs>
    </Member>
    <Member MemberName="HeaderCell">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewRowHeaderCell HeaderCell { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewRowHeaderCell HeaderCell" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.HeaderCell" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderCell As DataGridViewRowHeaderCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewRowHeaderCell ^ HeaderCell { System::Windows::Forms::DataGridViewRowHeaderCell ^ get(); void set(System::Windows::Forms::DataGridViewRowHeaderCell ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderCell : System.Windows.Forms.DataGridViewRowHeaderCell with get, set" Usage="System.Windows.Forms.DataGridViewRow.HeaderCell" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowHeaderCell</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia komórkę nagłówka wiersza.</summary>
        <value><see cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" /> Reprezentuje komórkę nagłówka wiersza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Komórka nagłówka wiersza jest zwykle używana do wyświetlania etykiety wiersza. Użytkownicy mogą również kliknąć nagłówek wiersza, aby zaznaczyć wiersz, jeśli <xref:System.Windows.Forms.DataGridView.SelectionMode%2A?displayProperty=nameWithType> właściwość jest ustawiona na. <xref:System.Windows.Forms.DataGridViewSelectionMode.RowHeaderSelect?displayProperty=nameWithType>  
  
   
  
## Examples  
 Poniższy przykład kodu używa <xref:System.Windows.Forms.DataGridViewRow.HeaderCell%2A> właściwości do etykiet nagłówków wierszy.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#209](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#209)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#209](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#209)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#209](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#209)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.SelectionMode" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public int Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Height { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Height : int with get, set" Usage="System.Windows.Forms.DataGridViewRow.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(22)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia bieżącą wysokość wiersza.</summary>
        <value>Wysokość wiersza (w pikselach). Wartość domyślna to wysokość czcionki domyślnej plus 9 pikseli.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby ustawić minimalną wysokość wiersza, użyj <xref:System.Windows.Forms.DataGridViewRow.MinimumHeight%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu używa właściwości, <xref:System.Windows.Forms.DataGridViewRow.Height%2A> aby ustawić wysokość pierwszego wiersza. Ten przykład kodu jest częścią większego przykładu kodu podanego w [temacie How to: Manipulowanie wierszami w kontrolce](~/docs/framework/winforms/controls/how-to-manipulate-rows-in-the-windows-forms-datagridview-control.md)DataGridView Windows Forms.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#208](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#208)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#208](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#208)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#208](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#208)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Podczas ustawiania tej właściwości wiersz znajduje się w <see cref="T:System.Windows.Forms.DataGridView" /> kontrolce i jest wierszem udostępnionym.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.MinimumHeight" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows</related>
      </Docs>
    </Member>
    <Member MemberName="InheritedStyle">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.DataGridViewCellStyle InheritedStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle InheritedStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.InheritedStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property InheritedStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataGridViewCellStyle ^ InheritedStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InheritedStyle : System.Windows.Forms.DataGridViewCellStyle" Usage="System.Windows.Forms.DataGridViewRow.InheritedStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera styl komórki obowiązujący dla wiersza.</summary>
        <value>A <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> , która określa informacje o formatowaniu i stylu komórek w wierszu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest przydatna do określania, które style komórek są stosowane do wszystkich komórek w wierszu niezależnie od stylu kolumn, które są również stosowane do komórek. Właściwość Row <xref:System.Windows.Forms.DataGridViewRow.InheritedStyle%2A> dziedziczy wartości z następujących właściwości:  
  
-   <xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A>  
  
-   <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A?displayProperty=nameWithType>(w przypadku wierszy z nieparzystym numerem indeksu)  
  
-   <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A?displayProperty=nameWithType>  
  
 Aby uzyskać więcej informacji na temat dziedziczenia stylu komórki, zobacz [style komórek w kontrolce DataGridView Windows Forms](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wiersz znajduje się w <see cref="T:System.Windows.Forms.DataGridView" /> kontrolce i jest wierszem udostępnionym.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.DefaultCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridView.RowsDefaultCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Style komórki w formancie DataGridView formularzy systemu Windows</related>
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows</related>
      </Docs>
    </Member>
    <Member MemberName="IsNewRow">
      <MemberSignature Language="C#" Value="public bool IsNewRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNewRow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.IsNewRow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNewRow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNewRow { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNewRow : bool" Usage="System.Windows.Forms.DataGridViewRow.IsNewRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy wiersz jest wierszem dla nowych rekordów.</summary>
        <value><see langword="true" />Jeśli wiersz jest ostatnim wierszem w <see cref="T:System.Windows.Forms.DataGridView" />, który jest używany do wprowadzania nowego wiersza danych; <see langword="false" />w przeciwnym razie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ wiersz dla nowych rekordów znajduje się w <xref:System.Windows.Forms.DataGridView.Rows%2A> kolekcji, <xref:System.Windows.Forms.DataGridViewRow.IsNewRow%2A> Użyj właściwości, aby określić, czy wiersz jest wierszem dla nowych rekordów lub czy jest wypełnionym wierszem.  
  
 Wiersz przestaje być nowym wierszem po rozpoczęciu wprowadzania danych w wierszu.  
  
   
  
## Examples  
 Poniższy przykład kodu używa właściwości, <xref:System.Windows.Forms.DataGridViewRow.IsNewRow%2A> aby zapobiec próbie ustawienia etykiety wiersza dla nowych rekordów.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#209](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#209)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#209](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#209)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#209](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#209)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <related type="Article" href="https://msdn.microsoft.com/library/6110f1ea-9794-442c-a98a-f104a1feeaf4">Używanie wiersza dla nowych rekordów w formancie DataGridView formularzy systemu Windows</related>
      </Docs>
    </Member>
    <Member MemberName="MinimumHeight">
      <MemberSignature Language="C#" Value="public int MinimumHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.MinimumHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimumHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinimumHeight { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinimumHeight : int with get, set" Usage="System.Windows.Forms.DataGridViewRow.MinimumHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia minimalną wysokość wiersza.</summary>
        <value>Minimalna wysokość wiersza (w pikselach) z zakresu od 2 <see cref="F:System.Int32.MaxValue" />do. Wartość domyślna to 3.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewRow.MinimumHeight%2A> Właściwość utrzymuje wyświetlanie wiersza przez ustawienie limitu, do którego użytkownik może zmienić rozmiar wiersza za pomocą interfejsu użytkownika (UI).  
  
   
  
## Examples  
 Poniższy przykład kodu używa <xref:System.Windows.Forms.DataGridViewRow.MinimumHeight%2A> właściwości, aby ustawić minimalną wysokość drugiego wiersza. Ten przykład kodu jest częścią większego przykładu kodu podanego w [temacie How to: Manipulowanie wierszami w kontrolce](~/docs/framework/winforms/controls/how-to-manipulate-rows-in-the-windows-forms-datagridview-control.md)DataGridView Windows Forms.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#207](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#207)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#207](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#207)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#207](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#207)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Podczas ustawiania tej właściwości wiersz znajduje się w <see cref="T:System.Windows.Forms.DataGridView" /> kontrolce i jest wierszem udostępnionym.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Określona wartość w przypadku ustawienia tej właściwości jest mniejsza niż 2.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.Height" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows</related>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="protected internal virtual void Paint (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle rowBounds, int rowIndex, System.Windows.Forms.DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Paint(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipBounds, valuetype System.Drawing.Rectangle rowBounds, int32 rowIndex, valuetype System.Windows.Forms.DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Paint(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipBounds, System::Drawing::Rectangle rowBounds, int rowIndex, System::Windows::Forms::DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow);" />
      <MemberSignature Language="F#" Value="abstract member Paint : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * bool * bool -&gt; unit&#xA;override this.Paint : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * bool * bool -&gt; unit" Usage="dataGridViewRow.Paint (graphics, clipBounds, rowBounds, rowIndex, rowState, isFirstDisplayedRow, isLastVisibleRow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="rowState" Type="System.Windows.Forms.DataGridViewElementStates" />
        <Parameter Name="isFirstDisplayedRow" Type="System.Boolean" />
        <Parameter Name="isLastVisibleRow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="graphics"><see cref="T:System.Drawing.Graphics" /> Używane do malowania <see cref="T:System.Windows.Forms.DataGridViewRow" />.</param>
        <param name="clipBounds"><see cref="T:System.Drawing.Rectangle" /> Reprezentuje obszar<see cref="T:System.Windows.Forms.DataGridView" /> , który musi być namalowany.</param>
        <param name="rowBounds">A <see cref="T:System.Drawing.Rectangle" /> , który zawiera granice <see cref="T:System.Windows.Forms.DataGridViewRow" /> , które są rysowane.</param>
        <param name="rowIndex">Indeks wiersza komórki, która jest używana.</param>
        <param name="rowState">Bitowa kombinacja <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> wartości, która określa stan wiersza.</param>
        <param name="isFirstDisplayedRow"><see langword="true" />Aby wskazać, czy bieżący wiersz jest pierwszym wierszem wyświetlanym w <see cref="T:System.Windows.Forms.DataGridView" />; w przeciwnym <see langword="false" />razie,.</param>
        <param name="isLastVisibleRow"><see langword="true" />, <see cref="T:System.Windows.Forms.DataGridView" /> <see cref="P:System.Windows.Forms.DataGridViewRow.Visible" /> <see langword="true" />aby wskazać, czy bieżący wiersz jest ostatnim wierszem w elemencie, który ma właściwość ustawioną na; w przeciwnym razie. <see langword="false" /></param>
        <summary>Maluje bieżący wiersz.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView> Kontrolka wywołuje tę metodę, aby malować wiersz.  
  
 Wywołanie tej metody wywołuje <xref:System.Windows.Forms.DataGridView.RowPrePaint?displayProperty=nameWithType> zdarzenie. Jeśli program obsługi <xref:System.ComponentModel.HandledEventArgs.Handled%2A?displayProperty=nameWithType> dla zdarzenia nie ustawi właściwości na `true`, Metoda <xref:System.Windows.Forms.DataGridViewRow.PaintHeader%2A> ta wywołuje również metody i <xref:System.Windows.Forms.DataGridViewRow.PaintCells%2A> wywołuje <xref:System.Windows.Forms.DataGridView.RowPostPaint?displayProperty=nameWithType> zdarzenie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wiersz nie został dodany do <see cref="T:System.Windows.Forms.DataGridView" /> kontrolki.  
  
—lub— 
Wiersz znajduje się w <see cref="T:System.Windows.Forms.DataGridView" /> kontrolce i jest wierszem udostępnionym.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Wiersz znajduje się w <see cref="T:System.Windows.Forms.DataGridView" /> kontrolce, a <paramref name="rowIndex" /> jego wartość jest mniejsza od zera lub większa niż liczba wierszy w kontrolce minus jeden.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowPrePaint" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowPostPaint" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRow.PaintHeader(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean,System.Windows.Forms.DataGridViewPaintParts)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRow.PaintCells(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean,System.Windows.Forms.DataGridViewPaintParts)" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows</related>
      </Docs>
    </Member>
    <Member MemberName="PaintCells">
      <MemberSignature Language="C#" Value="protected internal virtual void PaintCells (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle rowBounds, int rowIndex, System.Windows.Forms.DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow, System.Windows.Forms.DataGridViewPaintParts paintParts);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void PaintCells(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipBounds, valuetype System.Drawing.Rectangle rowBounds, int32 rowIndex, valuetype System.Windows.Forms.DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow, valuetype System.Windows.Forms.DataGridViewPaintParts paintParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.PaintCells(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean,System.Windows.Forms.DataGridViewPaintParts)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void PaintCells(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipBounds, System::Drawing::Rectangle rowBounds, int rowIndex, System::Windows::Forms::DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow, System::Windows::Forms::DataGridViewPaintParts paintParts);" />
      <MemberSignature Language="F#" Value="abstract member PaintCells : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * bool * bool * System.Windows.Forms.DataGridViewPaintParts -&gt; unit&#xA;override this.PaintCells : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * bool * bool * System.Windows.Forms.DataGridViewPaintParts -&gt; unit" Usage="dataGridViewRow.PaintCells (graphics, clipBounds, rowBounds, rowIndex, rowState, isFirstDisplayedRow, isLastVisibleRow, paintParts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="rowState" Type="System.Windows.Forms.DataGridViewElementStates" />
        <Parameter Name="isFirstDisplayedRow" Type="System.Boolean" />
        <Parameter Name="isLastVisibleRow" Type="System.Boolean" />
        <Parameter Name="paintParts" Type="System.Windows.Forms.DataGridViewPaintParts" />
      </Parameters>
      <Docs>
        <param name="graphics"><see cref="T:System.Drawing.Graphics" /> Używane do malowania <see cref="T:System.Windows.Forms.DataGridViewRow" />.</param>
        <param name="clipBounds"><see cref="T:System.Drawing.Rectangle" /> Reprezentuje obszar<see cref="T:System.Windows.Forms.DataGridView" /> , który musi być namalowany.</param>
        <param name="rowBounds">A <see cref="T:System.Drawing.Rectangle" /> , który zawiera granice <see cref="T:System.Windows.Forms.DataGridViewRow" /> , które są rysowane.</param>
        <param name="rowIndex">Indeks wiersza komórki, która jest używana.</param>
        <param name="rowState">Bitowa kombinacja <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> wartości, która określa stan wiersza.</param>
        <param name="isFirstDisplayedRow"><see langword="true" />Aby wskazać, czy bieżący wiersz jest pierwszym wierszem wyświetlanym w <see cref="T:System.Windows.Forms.DataGridView" />; w przeciwnym <see langword="false" />razie,.</param>
        <param name="isLastVisibleRow"><see langword="true" />, <see cref="T:System.Windows.Forms.DataGridView" /> <see cref="P:System.Windows.Forms.DataGridViewRow.Visible" /> <see langword="true" />aby wskazać, czy bieżący wiersz jest ostatnim wierszem w elemencie, który ma właściwość ustawioną na; w przeciwnym razie. <see langword="false" /></param>
        <param name="paintParts">Bitowa kombinacja <see cref="T:System.Windows.Forms.DataGridViewPaintParts" /> wartości wskazujących części komórek do malowania.</param>
        <summary>Maluje komórki w bieżącym wierszu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrolka wywołuje tę metodę, aby malować komórki w wierszu, chyba że procedura obsługi <xref:System.Windows.Forms.DataGridView.RowPrePaint?displayProperty=nameWithType> dla zdarzenia ustawia <xref:System.ComponentModel.HandledEventArgs.Handled%2A?displayProperty=nameWithType> właściwość na `true`. <xref:System.Windows.Forms.DataGridView> Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Forms.DataGridViewRow.Paint%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wiersz nie został dodany do <see cref="T:System.Windows.Forms.DataGridView" /> kontrolki.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="paintParts" />nie jest prawidłową bitową kombinacją <see cref="T:System.Windows.Forms.DataGridViewPaintParts" /> wartości.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowPrePaint" />
        <altmember cref="P:System.ComponentModel.HandledEventArgs.Handled" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRow.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PaintHeader">
      <MemberSignature Language="C#" Value="protected internal virtual void PaintHeader (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle rowBounds, int rowIndex, System.Windows.Forms.DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow, System.Windows.Forms.DataGridViewPaintParts paintParts);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void PaintHeader(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipBounds, valuetype System.Drawing.Rectangle rowBounds, int32 rowIndex, valuetype System.Windows.Forms.DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow, valuetype System.Windows.Forms.DataGridViewPaintParts paintParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.PaintHeader(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean,System.Windows.Forms.DataGridViewPaintParts)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void PaintHeader(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipBounds, System::Drawing::Rectangle rowBounds, int rowIndex, System::Windows::Forms::DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow, System::Windows::Forms::DataGridViewPaintParts paintParts);" />
      <MemberSignature Language="F#" Value="abstract member PaintHeader : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * bool * bool * System.Windows.Forms.DataGridViewPaintParts -&gt; unit&#xA;override this.PaintHeader : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * bool * bool * System.Windows.Forms.DataGridViewPaintParts -&gt; unit" Usage="dataGridViewRow.PaintHeader (graphics, clipBounds, rowBounds, rowIndex, rowState, isFirstDisplayedRow, isLastVisibleRow, paintParts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="rowState" Type="System.Windows.Forms.DataGridViewElementStates" />
        <Parameter Name="isFirstDisplayedRow" Type="System.Boolean" />
        <Parameter Name="isLastVisibleRow" Type="System.Boolean" />
        <Parameter Name="paintParts" Type="System.Windows.Forms.DataGridViewPaintParts" />
      </Parameters>
      <Docs>
        <param name="graphics"><see cref="T:System.Drawing.Graphics" /> Używane do malowania <see cref="T:System.Windows.Forms.DataGridViewRow" />.</param>
        <param name="clipBounds"><see cref="T:System.Drawing.Rectangle" /> Reprezentuje obszar<see cref="T:System.Windows.Forms.DataGridView" /> , który musi być namalowany.</param>
        <param name="rowBounds">A <see cref="T:System.Drawing.Rectangle" /> , który zawiera granice <see cref="T:System.Windows.Forms.DataGridViewRow" /> , które są rysowane.</param>
        <param name="rowIndex">Indeks wiersza komórki, która jest używana.</param>
        <param name="rowState">Bitowa kombinacja <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> wartości, która określa stan wiersza.</param>
        <param name="isFirstDisplayedRow"><see langword="true" />Aby wskazać, że bieżący wiersz jest pierwszym wierszem wyświetlanym w <see cref="T:System.Windows.Forms.DataGridView" />; w przeciwnym <see langword="false" />razie,.</param>
        <param name="isLastVisibleRow"><see langword="true" />, <see cref="T:System.Windows.Forms.DataGridView" /> <see cref="P:System.Windows.Forms.DataGridViewRow.Visible" /> <see langword="true" />aby wskazać, że bieżący wiersz jest ostatnim wierszem w elemencie, który ma właściwość ustawioną na; w przeciwnym razie. <see langword="false" /></param>
        <param name="paintParts">Bitowa kombinacja <see cref="T:System.Windows.Forms.DataGridViewPaintParts" /> wartości wskazujących części komórek do malowania.</param>
        <summary>Maluje komórkę nagłówka bieżącego wiersza.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrolka wywołuje tę metodę, aby malować nagłówek wiersza, z wyjątkiem przypadków, gdy <xref:System.Windows.Forms.DataGridView.RowPrePaint?displayProperty=nameWithType> procedura obsługi dla <xref:System.ComponentModel.HandledEventArgs.Handled%2A?displayProperty=nameWithType> zdarzenia ustawia właściwość na `true`. <xref:System.Windows.Forms.DataGridView> Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Forms.DataGridViewRow.Paint%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wiersz nie został dodany do <see cref="T:System.Windows.Forms.DataGridView" /> kontrolki.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="paintParts" />nie jest prawidłową bitową kombinacją <see cref="T:System.Windows.Forms.DataGridViewPaintParts" /> wartości.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowPrePaint" />
        <altmember cref="P:System.ComponentModel.HandledEventArgs.Handled" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRow.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public override bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Windows.Forms.DataGridViewRow.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy wiersz jest tylko do odczytu.</summary>
        <value><see langword="true" />Jeśli wiersz jest tylko do odczytu; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość ma wpływ na właściwość każdej komórki w wierszu. <xref:System.Windows.Forms.DataGridViewCell.ReadOnly%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.DataGridViewRow.ReadOnly%2A>  
  
 Ustawienie tej właściwości nie ma wpływu, jeśli wartość <xref:System.Windows.Forms.DataGridView.ReadOnly%2A?displayProperty=nameWithType> właściwości jest. `true`  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Windows.Forms.DataGridViewBand.ReadOnly%2A?displayProperty=nameWithType> właściwości, która jest niemal identyczna <xref:System.Windows.Forms.DataGridViewRow.ReadOnly%2A> z właściwością <xref:System.Windows.Forms.DataGridViewRow> klasy. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Windows.Forms.DataGridViewBand> klasy.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#11](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewBandDemo.cpp#11)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewBandDemo.cs#11)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewbanddemo.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wiersz znajduje się w <see cref="T:System.Windows.Forms.DataGridView" /> kontrolce i jest wierszem udostępnionym.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.ReadOnly" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows</related>
      </Docs>
    </Member>
    <Member MemberName="Resizable">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.DataGridViewTriState Resizable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewTriState Resizable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.Resizable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Resizable As DataGridViewTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataGridViewTriState Resizable { System::Windows::Forms::DataGridViewTriState get(); void set(System::Windows::Forms::DataGridViewTriState value); };" />
      <MemberSignature Language="F#" Value="member this.Resizable : System.Windows.Forms.DataGridViewTriState with get, set" Usage="System.Windows.Forms.DataGridViewRow.Resizable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy użytkownicy mogą zmieniać rozmiar wiersza lub wskazywać, że zachowanie jest dziedziczone z <see cref="P:System.Windows.Forms.DataGridView.AllowUserToResizeRows" /> właściwości.</summary>
        <value>Wartość wskazująca, czy można zmienić rozmiar wiersza lub czy można zmienić jego rozmiar tylko wtedy, <see cref="P:System.Windows.Forms.DataGridView.AllowUserToResizeRows" /> gdy właściwość jest ustawiona na <see langword="true" />. <see cref="T:System.Windows.Forms.DataGridViewTriState" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie można użyć tej właściwości z wierszem udostępnionym. Aby uzyskać więcej informacji na temat udostępnionych wierszy, zobacz [najlepsze rozwiązania dotyczące skalowania Windows Forms formantu DataGridView](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 Jeśli właściwość ma <xref:System.Windows.Forms.DataGridViewTriState.False>wartość, użytkownik nie będzie mógł ręcznie dostosować wysokości wiersza. <xref:System.Windows.Forms.DataGridViewRow.Resizable%2A>  
  
 Domyślnie <xref:System.Windows.Forms.DataGridViewRow.Resizable%2A> wartość właściwości jest określana na podstawie <xref:System.Windows.Forms.DataGridView.AllowUserToResizeRows%2A?displayProperty=nameWithType> wartości właściwości. Jeśli jednak jawnie <xref:System.Windows.Forms.DataGridViewRow.Resizable%2A> ustawisz <xref:System.Windows.Forms.DataGridViewTriState.True> opcję <xref:System.Windows.Forms.DataGridViewTriState.False>lub, wartość kontrolki jest ignorowana. Ustaw <xref:System.Windows.Forms.DataGridViewRow.Resizable%2A> , <xref:System.Windows.Forms.DataGridViewTriState.NotSet> aby przywrócić zachowanie dziedziczenia wartości.  
  
 Ponieważ <xref:System.Windows.Forms.DataGridViewTriState.NotSet> przywraca dziedziczenie wartości <xref:System.Windows.Forms.DataGridViewRow.Resizable%2A> , <xref:System.Windows.Forms.DataGridViewTriState.NotSet> Właściwość nigdy nie zwróci wartości, chyba że wiersz nie został dodany do <xref:System.Windows.Forms.DataGridView> kontrolki. Jeśli musisz określić, czy <xref:System.Windows.Forms.DataGridViewRow.Resizable%2A> wartość właściwości wiersza jest dziedziczona lub została określona jawnie, sprawdź jej <xref:System.Windows.Forms.DataGridViewElement.State%2A> właściwość. Jeśli wartość zawiera flagę, wartość właściwości nie jest dziedziczona. <xref:System.Windows.Forms.DataGridViewRow.Resizable%2A> <xref:System.Windows.Forms.DataGridViewElementStates.ResizableSet> <xref:System.Windows.Forms.DataGridViewElement.State%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje użycie tej właściwości.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.MouseBasedResizing#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.MouseBasedResizing/CPP/mousesizing.cpp#15)]
 [!code-csharp[System.Windows.Forms.DataGridView.MouseBasedResizing#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.MouseBasedResizing/CS/mousesizing.cs#15)]
 [!code-vb[System.Windows.Forms.DataGridView.MouseBasedResizing#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.MouseBasedResizing/VB/mousesizing.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wiersz znajduje się w <see cref="T:System.Windows.Forms.DataGridView" /> kontrolce i jest wierszem udostępnionym.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.AllowUserToResizeRows" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows</related>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public override bool Selected { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Selected" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Selected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Selected { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Selected : bool with get, set" Usage="System.Windows.Forms.DataGridViewRow.Selected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy wiersz jest zaznaczony.</summary>
        <value><see langword="true" />Jeśli wiersz jest zaznaczony; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie można użyć tej właściwości z wierszem udostępnionym. Aby uzyskać więcej informacji na temat udostępnionych wierszy, zobacz [najlepsze rozwiązania dotyczące skalowania Windows Forms formantu DataGridView](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje użycie tej właściwości.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectedCollections#05](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectedCollections/CS/DataGridViewSelectedCollections.cs#05)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectedCollections#05](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectedCollections/VB/DataGridViewSelectedCollections.vb#05)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wiersz znajduje się w <see cref="T:System.Windows.Forms.DataGridView" /> kontrolce i jest wierszem udostępnionym.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows</related>
      </Docs>
    </Member>
    <Member MemberName="SetValues">
      <MemberSignature Language="C#" Value="public bool SetValues (params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.SetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SetValues (ParamArray values As Object()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetValues(... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.SetValues : obj[] -&gt; bool" Usage="dataGridViewRow.SetValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="values">Co najmniej jeden obiekt reprezentujący wartości komórki w wierszu.  
  
—lub— 
<see cref="T:System.Array" /> Wartości .<see cref="T:System.Object" /></param>
        <summary>Ustawia wartości komórek wiersza.</summary>
        <returns><see langword="true" />Jeśli wszystkie wartości zostały ustawione; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `values` Parametr reprezentuje zmienną liczbę argumentów używaną do wypełniania wartości komórek w wierszu. Te wartości mogą być przekazane do tej metody jako wielokrotność, pojedyncze argumenty lub jako elementy członkowskie jednego <xref:System.Array>z nich. Ponieważ wartości powinny być wystąpieniami typu <xref:System.Object>, jednak Jeśli przekażesz tablicę wartości typu wartości (takich jak <xref:System.Int32> wartości), ta metoda będzie traktować tablicę jako pojedynczy obiekt i przypisać ją do pojedynczej komórki. Aby uniknąć tego zachowania, należy rzutować tablicę typu wartości na <xref:System.Object> tablicę lub przekazać wiele wartości jako wiele argumentów.  
  
 Jeśli na `values` liście znajdują się więcej wartości, niż są komórki do zainicjowania, ta metoda ignoruje dodatkowe wartości i zwraca `false`wartość. Ta metoda również zwraca `false` wartość, jeśli nie można ustawić żadnej z określonych wartości.  
  
 Jeśli istnieje mniej wartości niż komórki, pozostałe niedopasowane komórki zachowują swoje bieżące wartości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="values" />jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ta metoda jest wywoływana, gdy skojarzona <see cref="T:System.Windows.Forms.DataGridView" /> działa w trybie wirtualnym.  
  
—lub— 
Ten wiersz jest wierszem udostępnionym.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRow.CreateCells(System.Windows.Forms.DataGridView)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.SetValue(System.Int32,System.Object)" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows</related>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.DataGridViewElementStates State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewElementStates State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As DataGridViewElementStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataGridViewElementStates State { System::Windows::Forms::DataGridViewElementStates get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Windows.Forms.DataGridViewElementStates" Usage="System.Windows.Forms.DataGridViewRow.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewElementStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący stan wiersza.</summary>
        <value>Bitowa kombinacja <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> wartości wskazujących stan wiersza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie można użyć tej właściwości z udostępnionymi wierszami, ponieważ wiersze udostępnione nie przechowują ich stanu lokalnie. Aby uzyskać stan udostępnionego wiersza, użyj <xref:System.Windows.Forms.DataGridViewRow.GetState%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wiersz znajduje się w <see cref="T:System.Windows.Forms.DataGridView" /> kontrolce i jest wierszem udostępnionym.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewElementStates" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRow.GetState(System.Int32)" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows</related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dataGridViewRow.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera ciąg czytelny dla człowieka, który opisuje wiersz.</summary>
        <returns>A <see cref="T:System.String" /> który opisuje ten wiersz.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta przesłonięta wersja <xref:System.Windows.Forms.DataGridViewRow.ToString%2A> metody dostarcza nazwę klasy <xref:System.Windows.Forms.DataGridViewBand.Index%2A> i informacje <xref:System.Windows.Forms.DataGridViewRow> dla tego wystąpienia klasy.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewBand.Index" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Windows.Forms.DataGridViewRow.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy wiersz jest widoczny.</summary>
        <value><see langword="true" />Jeśli wiersz jest widoczny; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia ukrycie wiersza z widoku podczas zachowywania wiersza w <xref:System.Windows.Forms.DataGridView>. Aby całkowicie usunąć wiersz, użyj <xref:System.Windows.Forms.DataGridViewRowCollection.Remove%2A?displayProperty=nameWithType> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Windows.Forms.DataGridViewBand.Visible%2A?displayProperty=nameWithType> właściwości, która jest niemal identyczna <xref:System.Windows.Forms.DataGridViewRow.Visible%2A> z właściwością <xref:System.Windows.Forms.DataGridViewRow> klasy. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Windows.Forms.DataGridViewBand> klasy.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewBandDemo.cpp#9)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewBandDemo.cs#9)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewbanddemo.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wiersz znajduje się w <see cref="T:System.Windows.Forms.DataGridView" /> kontrolce i jest wierszem udostępnionym.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRowCollection.Remove(System.Windows.Forms.DataGridViewRow)" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows</related>
      </Docs>
    </Member>
  </Members>
</Type>
