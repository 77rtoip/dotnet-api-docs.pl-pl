<Type Name="DrawListViewSubItemEventArgs" FullName="System.Windows.Forms.DrawListViewSubItemEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="225b78fa7bfbfea28a17be0e694bbbbc704ef9cf" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69189394" /></Metadata><TypeSignature Language="C#" Value="public class DrawListViewSubItemEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DrawListViewSubItemEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DrawListViewSubItemEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DrawListViewSubItemEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DrawListViewSubItemEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DrawListViewSubItemEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Dostarcza dane dla <see cref="E:System.Windows.Forms.ListView.DrawSubItem" /> zdarzenia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie umożliwia dostosowanie (lub narysowanie przez właściciela) wyglądu <xref:System.Windows.Forms.ListView> kontrolki w widoku szczegółów. <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType>  
  
 `true` <xref:System.Windows.Forms.ListView.OwnerDraw%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.ListView.View%2A> <xref:System.Windows.Forms.View.Details>Zdarzenie jest wywoływane <xref:System.Windows.Forms.ListView> przez kontrolkę, gdy jej właściwość jest ustawiona na, a jej właściwość jest ustawiona na. <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> Przekazanie do procedury obsługi zdarzeń zawiera informacje na <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> temat do rysowania i zawiera metody ułatwiające narysowanie podelementu. <xref:System.Windows.Forms.DrawListViewSubItemEventArgs>  
  
 Użyj właściwości <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.Item%2A> lub, aby pobrać informacje o elemencie nadrzędnym elementu podrzędnego do narysowania. <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.ItemState%2A> Aby pobrać <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> sam, <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.SubItem%2A> Użyj właściwości. Użyj właściwości, aby pobrać reprezentuje nagłówek kolumny, w której jest wyświetlany element SubItem. <xref:System.Windows.Forms.ColumnHeader> <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.Header%2A>  
  
 Użyj właściwości, aby wykonać rzeczywiste Rysowanie w obszarze określonym <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.Bounds%2A> przez właściwość. <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.Graphics%2A> Aby narysować <xref:System.Windows.Forms.ListView> standardowe elementy, które nie wymagają dostosowania, <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.DrawBackground%2A>Użyj metod <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.DrawText%2A>, i <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.DrawFocusRectangle%2A> .  
  
 Użyj właściwości <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.DrawDefault%2A> , gdy system operacyjny ma narysować element SubItem. Jest to przydatne, gdy chcesz dostosować tylko określone elementy podelementowe.  
  
> [!NOTE]
>  Aby uniknąć problemów z migotaniem grafiki podczas rysowania przez <xref:System.Windows.Forms.ListView> właściciela, Zastąp formant i <xref:System.Windows.Forms.ListView.DoubleBuffered%2A> ustaw właściwość na `true`. Ta funkcja jest dostępna tylko w systemach Windows XP i Windows Server 2003, gdy aplikacja wywołuje <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> metodę.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Windows.Forms.ListView> jak zapewnić niestandardowy rysunek dla kontrolki. <xref:System.Windows.Forms.ListView> Kontrolka w przykładzie ma tło gradientu. Elementy podelementowe z wartościami ujemnymi mają czerwony pierwszy plan i czarne tło.  
  
 Procedura obsługi <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> zdarzenia rysuje tło dla całych elementów. Procedura obsługi dla <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzenia rysuje wartości tekstowe oraz tekst i tło dla podelementów, które mają wartości ujemne. Procedura obsługi dla <xref:System.Windows.Forms.ListView.DrawColumnHeader> zdarzenia rysuje każdy nagłówek kolumny.  
  
 <xref:System.Windows.Forms.ContextMenu> Składnik umożliwia przełączenie między widokiem szczegółów a widokiem listy. W widoku listy tylko <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> zdarzenie jest wyzwalane. W takim przypadku tekst i tło są rysowane w programie <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> obsługi zdarzeń.  
  
 [!code-csharp[ListViewOwnerDraw#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#1)]
 [!code-vb[ListViewOwnerDraw#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListView" />
    <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
    <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
    <altmember cref="P:System.Windows.Forms.ListView.View" />
    <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
    <altmember cref="T:System.Windows.Forms.View" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawListViewSubItemEventArgs (System.Drawing.Graphics graphics, System.Drawing.Rectangle bounds, System.Windows.Forms.ListViewItem item, System.Windows.Forms.ListViewItem.ListViewSubItem subItem, int itemIndex, int columnIndex, System.Windows.Forms.ColumnHeader header, System.Windows.Forms.ListViewItemStates itemState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle bounds, class System.Windows.Forms.ListViewItem item, class System.Windows.Forms.ListViewItem/ListViewSubItem subItem, int32 itemIndex, int32 columnIndex, class System.Windows.Forms.ColumnHeader header, valuetype System.Windows.Forms.ListViewItemStates itemState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawListViewSubItemEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ListViewItem,System.Windows.Forms.ListViewItem.ListViewSubItem,System.Int32,System.Int32,System.Windows.Forms.ColumnHeader,System.Windows.Forms.ListViewItemStates)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawListViewSubItemEventArgs(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle bounds, System::Windows::Forms::ListViewItem ^ item, System::Windows::Forms::ListViewItem::ListViewSubItem ^ subItem, int itemIndex, int columnIndex, System::Windows::Forms::ColumnHeader ^ header, System::Windows::Forms::ListViewItemStates itemState);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DrawListViewSubItemEventArgs : System.Drawing.Graphics * System.Drawing.Rectangle * System.Windows.Forms.ListViewItem * System.Windows.Forms.ListViewItem.ListViewSubItem * int * int * System.Windows.Forms.ColumnHeader * System.Windows.Forms.ListViewItemStates -&gt; System.Windows.Forms.DrawListViewSubItemEventArgs" Usage="new System.Windows.Forms.DrawListViewSubItemEventArgs (graphics, bounds, item, subItem, itemIndex, columnIndex, header, itemState)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem" />
        <Parameter Name="subItem" Type="System.Windows.Forms.ListViewItem+ListViewSubItem" />
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="header" Type="System.Windows.Forms.ColumnHeader" />
        <Parameter Name="itemState" Type="System.Windows.Forms.ListViewItemStates" />
      </Parameters>
      <Docs>
        <param name="graphics">Powierzchnia <see cref="T:System.Drawing.Graphics" /> , na której należy narysować.</param>
        <param name="bounds">, <see cref="T:System.Drawing.Rectangle" /> W którym ma zostać narysowany rysunek.</param>
        <param name="item">Element nadrzędny elementu <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> do rysowania. <see cref="T:System.Windows.Forms.ListViewItem" /></param>
        <param name="subItem"><see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> Do rysowania.</param>
        <param name="itemIndex">Indeks elementu nadrzędnego <see cref="T:System.Windows.Forms.ListViewItem" /> <see cref="P:System.Windows.Forms.ListView.Items" /> w kolekcji.</param>
        <param name="columnIndex">Indeks <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> kolumny<see cref="P:System.Windows.Forms.ListView.Columns" /> w kolekcji.</param>
        <param name="header">Dla kolumny, w <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> której jest wyświetlany. <see cref="T:System.Windows.Forms.ColumnHeader" /></param>
        <param name="itemState">Bitowa kombinacja <see cref="T:System.Windows.Forms.ListViewItemStates" /> wartości wskazujących bieżący stan <see cref="T:System.Windows.Forms.ListViewItem" /> elementu nadrzędnego <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> do rysowania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.DrawListViewSubItemEventArgs" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewSubItemEventArgs.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.DrawListViewSubItemEventArgs.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera rozmiar i lokalizację <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> do rysowania.</summary>
        <value><see cref="T:System.Drawing.Rectangle" /> Reprezentuje granice<see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> do rysowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lokalizacja określona przez tę właściwość jest określana względem lewego górnego rogu <xref:System.Windows.Forms.ListView> kontrolki.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.Bounds%2A> właściwości w aplikacji, która udostępnia niestandardowe rysunki <xref:System.Windows.Forms.ListView> dla kontrolki. W tym przykładzie procedura obsługi dla <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzenia rysuje wartości tekstowe SubItem oraz tekst i tło dla podelementów, które mają wartości ujemne.  
  
 Pełny przykład można znaleźć w <xref:System.Windows.Forms.DrawListViewSubItemEventArgs> temacie Omówienie referencyjne.  
  
 [!code-csharp[ListViewOwnerDraw#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#4)]
 [!code-vb[ListViewOwnerDraw#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
        <altmember cref="T:System.Drawing.Rectangle" />
      </Docs>
    </Member>
    <Member MemberName="ColumnIndex">
      <MemberSignature Language="C#" Value="public int ColumnIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewSubItemEventArgs.ColumnIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnIndex : int" Usage="System.Windows.Forms.DrawListViewSubItemEventArgs.ColumnIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera indeks <see cref="T:System.Windows.Forms.ListView" /> kolumny, w <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> której jest wyświetlany.</summary>
        <value>Indeks <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> kolumny<see cref="P:System.Windows.Forms.ListView.Columns" /> w kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.ColumnIndex%2A> właściwości w aplikacji, która udostępnia niestandardowe rysunki <xref:System.Windows.Forms.ListView> dla kontrolki. W tym przykładzie procedura obsługi dla <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzenia rysuje wartości tekstowe SubItem oraz tekst i tło dla podelementów, które mają wartości ujemne.  
  
 Pełny przykład można znaleźć w <xref:System.Windows.Forms.DrawListViewSubItemEventArgs> temacie Omówienie referencyjne.  
  
 [!code-csharp[ListViewOwnerDraw#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#4)]
 [!code-vb[ListViewOwnerDraw#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
        <altmember cref="P:System.Windows.Forms.DrawListViewSubItemEventArgs.Header" />
        <altmember cref="P:System.Windows.Forms.DrawListViewSubItemEventArgs.Item" />
        <altmember cref="P:System.Windows.Forms.DrawListViewSubItemEventArgs.ItemIndex" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="P:System.Windows.Forms.ListView.Columns" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.SubItems" />
      </Docs>
    </Member>
    <Member MemberName="DrawBackground">
      <MemberSignature Language="C#" Value="public void DrawBackground ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawBackground() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawListViewSubItemEventArgs.DrawBackground" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawBackground ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawBackground();" />
      <MemberSignature Language="F#" Value="member this.DrawBackground : unit -&gt; unit" Usage="drawListViewSubItemEventArgs.DrawBackground " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rysuje tło <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> przy użyciu bieżącego koloru tła.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, aby narysować standardowe tło używające bieżącej wartości <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.BackColor%2A?displayProperty=nameWithType> właściwości. Tło jest rysowane w celu wypełnienia obszaru określonego przez <xref:System.Windows.Forms.DrawListViewItemEventArgs.Bounds%2A> właściwość.  
  
> [!NOTE]
>  Właściwość elementu nadrzędnego <xref:System.Windows.Forms.ListViewItem> musi `false` być<xref:System.Windows.Forms.ListViewItem.BackColor%2A?displayProperty=nameWithType> ustawiona na wartość, aby zapobiec zastępowaniu wartości SubItem w elemencie nadrzędnym. <xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.DrawBackground%2A> metody w aplikacji, która udostępnia niestandardowe rysunki <xref:System.Windows.Forms.ListView> dla kontrolki. W tym przykładzie procedura obsługi dla <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzenia rysuje wartości tekstowe SubItem oraz tekst i tło dla podelementów, które mają wartości ujemne.  
  
 Pełny przykład można znaleźć w <xref:System.Windows.Forms.DrawListViewSubItemEventArgs> temacie Omówienie referencyjne.  
  
 [!code-csharp[ListViewOwnerDraw#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#4)]
 [!code-vb[ListViewOwnerDraw#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Bounds" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ListViewSubItem.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="DrawDefault">
      <MemberSignature Language="C#" Value="public bool DrawDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DrawDefault" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewSubItemEventArgs.DrawDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property DrawDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DrawDefault { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DrawDefault : bool with get, set" Usage="System.Windows.Forms.DrawListViewSubItemEventArgs.DrawDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> powinien być rysowany przez system operacyjny, a nie przez właściciela.</summary>
        <value><see langword="true" />Jeśli element SubItem powinien być rysowany przez system operacyjny; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej właściwości podczas obsługi <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzenia dla podelementów, które nie mają być dostosowywane. Jeśli ustawisz tę właściwość na `true`, element podrzędny będzie rysowany normalnie przy użyciu bieżących wartości <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.BackColor%2A?displayProperty=nameWithType>właściwości, <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor%2A?displayProperty=nameWithType>i <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Font%2A?displayProperty=nameWithType> .  
  
> [!NOTE]
>  Właściwość elementu nadrzędnego <xref:System.Windows.Forms.ListViewItem> musi `false` być<xref:System.Windows.Forms.ListViewItem.BackColor%2A?displayProperty=nameWithType> ustawiona na wartość, aby zapobiec zastępowaniu wartości SubItem w elemencie nadrzędnym. <xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportuje wystąpienie <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzenia. Ten raport pomaga dowiedzieć się, kiedy wystąpi zdarzenie i może pomóc w debugowaniu.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu zawierającego wystąpienie typu <xref:System.Windows.Forms.ListView> o nazwie. `ListView1` Następnie upewnij się, że program obsługi zdarzeń jest skojarzony <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> ze zdarzeniem.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#472](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#472)]
 [!code-vb[System.Windows.Forms.EventExamples#472](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#472)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ListViewSubItem.BackColor" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ListViewSubItem.Font" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="DrawFocusRectangle">
      <MemberSignature Language="C#" Value="public void DrawFocusRectangle (System.Drawing.Rectangle bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawFocusRectangle(valuetype System.Drawing.Rectangle bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawListViewSubItemEventArgs.DrawFocusRectangle(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawFocusRectangle (bounds As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawFocusRectangle(System::Drawing::Rectangle bounds);" />
      <MemberSignature Language="F#" Value="member this.DrawFocusRectangle : System.Drawing.Rectangle -&gt; unit" Usage="drawListViewSubItemEventArgs.DrawFocusRectangle bounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="bounds">Obszar, w którym ma zostać narysowany prostokąt fokusu.</param>
        <summary>Rysuje prostokąt fokusu dla <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> elementu, jeśli <see cref="T:System.Windows.Forms.ListViewItem" /> element nadrzędny ma fokus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody do rysowania standardowego prostokąta fokusu wokół elementu SubItem. Prostokąt fokusu jest rysowany jeden piksel w obszarze określonym przez `bounds` parametr. Jest rysowany tylko wtedy, gdy element nadrzędny ma fokus, więc nie trzeba sprawdzać stanu fokusu elementu przed wywołaniem tej metody.  
  
 Można chcieć narysować prostokąt fokusu tylko wokół pierwszego elementu podrzędnego (czyli element nadrzędny, który jest wyświetlany w pierwszej kolumnie), zamiast rysowania go wokół każdej podelementu elementu. Odnosi się to do normalnego zachowania <xref:System.Windows.Forms.ListView> kontrolki, <xref:System.Windows.Forms.ListView.FullRowSelect%2A?displayProperty=nameWithType> gdy właściwość jest ustawiona na `false`. Aby narysować prostokąt fokusu wokół pierwszego podelementu, <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.DrawFocusRectangle%2A> Wywołaj metodę tylko <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.ColumnIndex%2A> wtedy, gdy wartość wynosi 0.  
  
 <xref:System.Windows.Forms.ListView> Kontrolka nie umożliwia wybierania pojedynczych elementów podelementowych, ale jeśli chcesz samodzielnie zaimplementować wybór elementu SubItem, możesz użyć tej metody do rysowania prostokąta fokusu wokół elementu podrzędnego innego niż pierwszy.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawListViewSubItemEventArgs.Bounds" />
        <altmember cref="P:System.Windows.Forms.DrawListViewSubItemEventArgs.ColumnIndex" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rysuje tekst <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> przy użyciu bieżącego koloru pierwszego planu i domyślnego formatowania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public void DrawText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawListViewSubItemEventArgs.DrawText" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawText ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawText();" />
      <MemberSignature Language="F#" Value="member this.DrawText : unit -&gt; unit" Usage="drawListViewSubItemEventArgs.DrawText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rysuje tekst <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> przy użyciu bieżącego koloru pierwszego planu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody do rysowania tekstu podelementu przy użyciu bieżących wartości <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor%2A?displayProperty=nameWithType> właściwości i. <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Font%2A?displayProperty=nameWithType> Tekst jest rysowany w obszarze określonym przez <xref:System.Windows.Forms.DrawListViewItemEventArgs.Bounds%2A> właściwość.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListViewItem> Właściwośćnadrzędna`false` musi być ustawiona<xref:System.Windows.Forms.ListViewItem.Font%2A?displayProperty=nameWithType>na , aby zapobiec zastępowaniuwartościSubItemselementunadrzędnego.<xref:System.Windows.Forms.ListViewItem.ForeColor%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Bounds" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ListViewSubItem.Font" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public void DrawText (System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawText(valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawListViewSubItemEventArgs.DrawText(System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawText (flags As TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawText(System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="member this.DrawText : System.Windows.Forms.TextFormatFlags -&gt; unit" Usage="drawListViewSubItemEventArgs.DrawText flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="flags">Bitowa kombinacja <see cref="T:System.Windows.Forms.TextFormatFlags" /> wartości.</param>
        <summary>Rysuje tekst <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> przy użyciu bieżącego koloru pierwszego planu i formatowanie go o określonych <see cref="T:System.Windows.Forms.TextFormatFlags" /> wartościach.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody do rysowania tekstu podelementu przy użyciu bieżących wartości <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor%2A?displayProperty=nameWithType> właściwości i. <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Font%2A?displayProperty=nameWithType> Tekst jest rysowany w obszarze określonym przez <xref:System.Windows.Forms.DrawListViewItemEventArgs.Bounds%2A> właściwość. <xref:System.Windows.Forms.TextFormatFlags> Wartości określone `flags` w parametrze umożliwiają dostarczenie właściwości formatowania dla etykiety węzła, takich jak wyrównanie tekstu.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListViewItem> Właściwośćnadrzędna`false` musi być ustawiona<xref:System.Windows.Forms.ListViewItem.Font%2A?displayProperty=nameWithType>na , aby zapobiec zastępowaniuwartościSubItemselementunadrzędnego.<xref:System.Windows.Forms.ListViewItem.ForeColor%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.DrawText%2A> metody w aplikacji, która udostępnia niestandardowe rysunki <xref:System.Windows.Forms.ListView> dla kontrolki. W tym przykładzie procedura obsługi dla <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzenia rysuje wartości tekstowe SubItem oraz tekst i tło dla podelementów, które mają wartości ujemne.  
  
 Pełny przykład można znaleźć w <xref:System.Windows.Forms.DrawListViewSubItemEventArgs> temacie Omówienie referencyjne.  
  
 [!code-csharp[ListViewOwnerDraw#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#4)]
 [!code-vb[ListViewOwnerDraw#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Bounds" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ListViewSubItem.Font" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor" />
        <altmember cref="T:System.Drawing.StringFormat" />
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewSubItemEventArgs.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Graphics : System.Drawing.Graphics" Usage="System.Windows.Forms.DrawListViewSubItemEventArgs.Graphics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera użyty do narysowania <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />. <see cref="T:System.Drawing.Graphics" /></summary>
        <value><see cref="T:System.Drawing.Graphics" /> Używany do <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />rysowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Graphics> Klasa zawiera właściwości i metody przydatne do rysowania na urządzeniu wyświetlającym.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.Graphics%2A> właściwości w aplikacji, która udostępnia niestandardowe rysunki <xref:System.Windows.Forms.ListView> dla kontrolki. W tym przykładzie procedura obsługi dla <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzenia rysuje wartości tekstowe SubItem oraz tekst i tło dla podelementów, które mają wartości ujemne.  
  
 Pełny przykład można znaleźć w <xref:System.Windows.Forms.DrawListViewSubItemEventArgs> temacie Omówienie referencyjne.  
  
 [!code-csharp[ListViewOwnerDraw#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#4)]
 [!code-vb[ListViewOwnerDraw#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
      </Docs>
    </Member>
    <Member MemberName="Header">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ColumnHeader Header { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ColumnHeader Header" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewSubItemEventArgs.Header" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Header As ColumnHeader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ColumnHeader ^ Header { System::Windows::Forms::ColumnHeader ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Header : System.Windows.Forms.ColumnHeader" Usage="System.Windows.Forms.DrawListViewSubItemEventArgs.Header" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnHeader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nagłówek <see cref="T:System.Windows.Forms.ListView" /> kolumny, w <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> której jest wyświetlany.</summary>
        <value>Dla kolumny, w <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> której jest wyświetlany. <see cref="T:System.Windows.Forms.ColumnHeader" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.Header%2A> właściwości w aplikacji, która udostępnia niestandardowe rysunki <xref:System.Windows.Forms.ListView> dla kontrolki. W tym przykładzie procedura obsługi dla <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzenia rysuje wartości tekstowe SubItem oraz tekst i tło dla podelementów, które mają wartości ujemne.  
  
 Pełny przykład można znaleźć w <xref:System.Windows.Forms.DrawListViewSubItemEventArgs> temacie Omówienie referencyjne.  
  
 [!code-csharp[ListViewOwnerDraw#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#4)]
 [!code-vb[ListViewOwnerDraw#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
        <altmember cref="P:System.Windows.Forms.DrawListViewSubItemEventArgs.Item" />
        <altmember cref="P:System.Windows.Forms.DrawListViewSubItemEventArgs.ItemIndex" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem Item { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem Item" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewSubItemEventArgs.Item" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItem ^ Item { System::Windows::Forms::ListViewItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Item : System.Windows.Forms.ListViewItem" Usage="System.Windows.Forms.DrawListViewSubItemEventArgs.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera element nadrzędny <see cref="T:System.Windows.Forms.ListViewItem" /> elementu <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> do rysowania.</summary>
        <value>Reprezentuje element nadrzędny elementu <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> do rysowania. <see cref="T:System.Windows.Forms.ListViewItem" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej właściwości, aby uzyskać <xref:System.Windows.Forms.ListViewItem> dostęp do obiektu <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> nadrzędnego elementu do rysowania. Jest to przydatne, <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.ItemState%2A> gdy właściwość nie dostarcza odpowiednich informacji, które spełniają Twoje potrzeby. <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.ItemState%2A> Właściwość zawiera tylko podstawowe informacje o stanie, których można użyć na przykład w celu ustalenia, czy element nadrzędny jest zaznaczony, zaznaczony lub skoncentrowany. Właściwość z drugiej strony umożliwia dostęp do wszystkich elementów członkowskich obiektu nadrzędnego <xref:System.Windows.Forms.ListViewItem>. <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.Item%2A>  
  
 Aby uzyskać dostęp <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> do rysunku, <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.SubItem%2A> Użyj właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportuje wystąpienie <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzenia. Ten raport pomaga dowiedzieć się, kiedy wystąpi zdarzenie i może pomóc w debugowaniu.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu zawierającego wystąpienie typu <xref:System.Windows.Forms.ListView> o nazwie. `ListView1` Następnie upewnij się, że program obsługi zdarzeń jest skojarzony <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> ze zdarzeniem.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#472](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#472)]
 [!code-vb[System.Windows.Forms.EventExamples#472](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#472)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
        <altmember cref="P:System.Windows.Forms.DrawListViewSubItemEventArgs.ItemIndex" />
        <altmember cref="P:System.Windows.Forms.DrawListViewSubItemEventArgs.ItemState" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
        <altmember cref="P:System.Windows.Forms.DrawListViewSubItemEventArgs.SubItem" />
      </Docs>
    </Member>
    <Member MemberName="ItemIndex">
      <MemberSignature Language="C#" Value="public int ItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewSubItemEventArgs.ItemIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ItemIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemIndex : int" Usage="System.Windows.Forms.DrawListViewSubItemEventArgs.ItemIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera indeks elementu nadrzędnego <see cref="T:System.Windows.Forms.ListViewItem" /> <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> do rysowania.</summary>
        <value>Indeks elementu nadrzędnego <see cref="T:System.Windows.Forms.ListViewItem" /> <see cref="P:System.Windows.Forms.ListView.Items" /> w kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportuje wystąpienie <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzenia. Ten raport pomaga dowiedzieć się, kiedy wystąpi zdarzenie i może pomóc w debugowaniu.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu zawierającego wystąpienie typu <xref:System.Windows.Forms.ListView> o nazwie. `ListView1` Następnie upewnij się, że program obsługi zdarzeń jest skojarzony <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> ze zdarzeniem.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#472](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#472)]
 [!code-vb[System.Windows.Forms.EventExamples#472](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#472)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.Items" />
        <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
      </Docs>
    </Member>
    <Member MemberName="ItemState">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItemStates ItemState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ListViewItemStates ItemState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewSubItemEventArgs.ItemState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemState As ListViewItemStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItemStates ItemState { System::Windows::Forms::ListViewItemStates get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemState : System.Windows.Forms.ListViewItemStates" Usage="System.Windows.Forms.DrawListViewSubItemEventArgs.ItemState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItemStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący stan obiektu nadrzędnego elementu <see cref="T:System.Windows.Forms.ListViewItem" /> <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> do rysowania.</summary>
        <value>Bitowa kombinacja <see cref="T:System.Windows.Forms.ListViewItemStates" /> wartości wskazujących bieżący stan elementu nadrzędnego <see cref="T:System.Windows.Forms.ListViewItem" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej właściwości, aby sprawdzić, <xref:System.Windows.Forms.ListViewItem> czy element nadrzędny <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> elementu do rysowania jest w określonym stanie. Ta właściwość zawiera tylko podstawowe informacje o stanie dla elementu nadrzędnego. Można użyć tej właściwości, na przykład, aby określić, czy element nadrzędny jest zaznaczony, zaznaczony lub skoncentrowany. Jeśli potrzebujesz dowiedzieć się więcej, pobierz element nadrzędny za pomocą <xref:System.Windows.Forms.DrawListViewItemEventArgs.Item%2A> właściwości i sprawdź jego właściwości bezpośrednio.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.ItemState%2A> właściwości w aplikacji, która udostępnia niestandardowe rysunki <xref:System.Windows.Forms.ListView> dla kontrolki. W tym przykładzie procedura obsługi dla <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzenia rysuje wartości tekstowe SubItem oraz tekst i tło dla podelementów, które mają wartości ujemne.  
  
 Pełny przykład można znaleźć w <xref:System.Windows.Forms.DrawListViewSubItemEventArgs> temacie Omówienie referencyjne.  
  
 [!code-csharp[ListViewOwnerDraw#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#4)]
 [!code-vb[ListViewOwnerDraw#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewItemStates" />
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Item" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
      </Docs>
    </Member>
    <Member MemberName="SubItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem.ListViewSubItem SubItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem/ListViewSubItem SubItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewSubItemEventArgs.SubItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubItem As ListViewItem.ListViewSubItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItem::ListViewSubItem ^ SubItem { System::Windows::Forms::ListViewItem::ListViewSubItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SubItem : System.Windows.Forms.ListViewItem.ListViewSubItem" Usage="System.Windows.Forms.DrawListViewSubItemEventArgs.SubItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem+ListViewSubItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> Pobiera do rysowania.</summary>
        <value><see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> Do rysowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest przydatna, gdy inne <xref:System.Windows.Forms.DrawListViewSubItemEventArgs> właściwości nie zapewniają odpowiednich informacji, które spełniają Twoje potrzeby. Właściwość pozwala uzyskać dostęp do wszystkich elementów członkowskich, <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> które są rysowane. <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.SubItem%2A> Dostęp do tego obiektu należy uzyskać bezpośrednio, na przykład w celu narysowania <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Text%2A?displayProperty=nameWithType> wartości samodzielnie zamiast <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.DrawText%2A> przy użyciu metody.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.SubItem%2A> właściwości w aplikacji, która udostępnia niestandardowe rysunki <xref:System.Windows.Forms.ListView> dla kontrolki. W tym przykładzie procedura obsługi dla <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzenia rysuje wartości tekstowe SubItem oraz tekst i tło dla podelementów, które mają wartości ujemne.  
  
 Pełny przykład można znaleźć w <xref:System.Windows.Forms.DrawListViewSubItemEventArgs> temacie Omówienie referencyjne.  
  
 [!code-csharp[ListViewOwnerDraw#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#4)]
 [!code-vb[ListViewOwnerDraw#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
        <altmember cref="P:System.Windows.Forms.DrawListViewSubItemEventArgs.Item" />
      </Docs>
    </Member>
  </Members>
</Type>
