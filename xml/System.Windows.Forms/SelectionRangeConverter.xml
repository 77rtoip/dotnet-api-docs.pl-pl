<Type Name="SelectionRangeConverter" FullName="System.Windows.Forms.SelectionRangeConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e022f31c38eaab7716bb9002eb9c0a12557aab11" /><Meta Name="ms.sourcegitcommit" Value="e7974886b08aa83a8fb461e8550f31a7d4331ee3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="07/23/2019" /><Meta Name="ms.locfileid" Value="68399748" /></Metadata><TypeSignature Language="C#" Value="public class SelectionRangeConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SelectionRangeConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.SelectionRangeConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class SelectionRangeConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class SelectionRangeConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type SelectionRangeConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Oferuje konwerter typów służący do <see cref="T:System.Windows.Forms.SelectionRange" /> konwertowania obiektów na i z różnych typów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.SelectionRange> Klasa reprezentuje pojedynczą datę lub zakres dat. Ta klasa jest często skojarzona z <xref:System.Windows.Forms.MonthCalendar> kontrolką, gdzie reprezentuje wybrane i wyróżnione daty. Klasa jest klasą adjunct, która umożliwia konwertowanie do i z innych typów, najczęściej używanych ciągów. <xref:System.Windows.Forms.SelectionRange> <xref:System.Windows.Forms.SelectionRangeConverter>  
  
 Aby uzyskać więcej informacji na temat konwerterów typów <xref:System.ComponentModel.TypeConverter> , zobacz Klasa bazowa, [ogólna Konwersja typów](https://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada)i [instrukcje: Implementowanie konwertera](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120))typów.  
  
> [!NOTE]
>  Nigdy nie należy tworzyć <xref:System.Windows.Forms.SelectionRangeConverter>. Zamiast tego należy wywołać <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> metodę <xref:System.ComponentModel.TypeDescriptor> klasy. Aby uzyskać więcej informacji, zobacz przykłady w <xref:System.ComponentModel.TypeConverter> klasie bazowej.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.SelectionRange" />
    <altmember cref="T:System.Windows.Forms.MonthCalendar" />
    <altmember cref="T:System.DateTime" />
    <altmember cref="T:System.ComponentModel.TypeConverter" />
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
    <related type="Article" href="https://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada">Konwersja uogólnionych typów</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)">Instrukcje: Implementowanie konwertera typów</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SelectionRangeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SelectionRangeConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SelectionRangeConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.SelectionRangeConverter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.SelectionRangeConverter.%23ctor%2A>jest konstruktorem bez parametrów dostarczonym przez kompilator.  
  
 Nigdy nie należy tworzyć <xref:System.Windows.Forms.SelectionRangeConverter>. Zamiast tego należy wywołać <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> metodę <xref:System.ComponentModel.TypeDescriptor> klasy. Aby uzyskać więcej informacji, zobacz przykłady w <xref:System.ComponentModel.TypeConverter> klasie bazowej.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SelectionRangeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="selectionRangeConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> , który zapewnia kontekst formatu.</param>
        <param name="sourceType">Źródło <see cref="T:System.Type" /> do przekonwertowania.</param>
        <summary>Określa, czy ten konwerter może skonwertować obiekt określonego typu źródła na typ natywny konwertera, wykonując zapytania o podany kontekst deskryptora typu.</summary>
        <returns><see langword="true" />Jeśli konwerter może wykonać określoną konwersję; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa jest wyspecjalizowana do konwersji między typami <xref:System.String> a <xref:System.Windows.Forms.SelectionRange>. <xref:System.Windows.Forms.SelectionRangeConverter> <xref:System.Windows.Forms.SelectionRangeConverter.CanConvertFrom%2A> W związku z tym metoda zwraca wartość `true` , jeśli `sourceType` parametr jest typu. <xref:System.String> W przeciwnym razie wywołuje wywołanie podstawowej implementacji tej metody <xref:System.ComponentModel.TypeConverter.CanConvertFrom%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Type%29?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Zastąp tę metodę, aby zapewnić własne wymagania dotyczące konwersji.  
  
Ten <paramref name="context" /> parametr może służyć do wyodrębnienia dodatkowych informacji o środowisku, z którego ten konwerter jest wywoływany. Parametr może mieć <see langword="null" />wartość, dlatego należy zawsze sprawdzić informacje. Ponadto właściwości obiektu kontekstu mogą również zostać zwrócone <see langword="null" />.</para></block>
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.ConvertFrom" />
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.CanConvertTo" />
        <altmember cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SelectionRangeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="selectionRangeConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> , który zapewnia kontekst formatu.</param>
        <param name="destinationType">Miejsce docelowe <see cref="T:System.Type" /> do przekonwertowania.</param>
        <summary>Pobiera wartość wskazującą, czy ten konwerter może przekonwertować obiekt na określony typ docelowy przy użyciu określonego kontekstu.</summary>
        <returns><see langword="true" />Jeśli ten konwerter może wykonać określoną konwersję; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `true` `destinationType` <xref:System.String> Metoda zwraca wartość, jeśli parametr jest typu lub <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>. <xref:System.Windows.Forms.SelectionRangeConverter.CanConvertTo%2A> W przeciwnym razie wywołuje wywołanie podstawowej implementacji tej metody <xref:System.ComponentModel.TypeConverter.CanConvertTo%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Type%29?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Zastąp tę metodę, aby zapewnić własne wymagania dotyczące konwersji.  
  
Ten <paramref name="context" /> parametr może służyć do wyodrębnienia dodatkowych informacji o środowisku, z którego ten konwerter jest wywoływany. Parametr może mieć <see langword="null" />wartość, dlatego należy zawsze sprawdzić informacje. Ponadto właściwości obiektu kontekstu mogą również zostać zwrócone <see langword="null" />.</para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" />
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.ConvertTo" />
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.CanConvertFrom" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SelectionRangeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="selectionRangeConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> , który zapewnia kontekst formatu.</param>
        <param name="culture">Informacje o ustawieniach regionalnych dla konwersji.</param>
        <param name="value"><see cref="T:System.Object" /> Do przekonwertowania.</param>
        <summary>Konwertuje określoną wartość na typ natywny konwertera przy użyciu określonych ustawień regionalnych.</summary>
        <returns><see cref="T:System.Object" /> Reprezentuje przekonwertowane. <paramref name="value" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wyspecjalizowana do konwertowania <xref:System.String> wartości, które reprezentują zakres dat do ich <xref:System.Windows.Forms.SelectionRange> reprezentacji. <xref:System.Windows.Forms.SelectionRangeConverter.ConvertFrom%2A> Typy inne niż <xref:System.String> są przesyłane do implementacji klasy podstawowej tej metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="value" />jest typu <see cref="T:System.String" /> , ale nie można go przeanalizować na dwa ciągi reprezentujące daty.</exception>
        <exception cref="T:System.InvalidCastException"><paramref name="value" />jest typu <see cref="T:System.String" /> , który został przeanalizowany do dwóch ciągów, ale konwersja jednego lub obu <see cref="T:System.DateTime" /> do typu nie powiodła się.</exception>
        <block subset="none" type="overrides"><para>Zastąp tę metodę, aby zapewnić własne wymagania dotyczące konwersji.  
  
Ten <paramref name="context" /> parametr może służyć do wyodrębnienia dodatkowych informacji o środowisku, z którego ten konwerter jest wywoływany. Parametr może mieć <see langword="null" />wartość, dlatego należy zawsze sprawdzić informacje. Ponadto właściwości obiektu kontekstu mogą również zostać zwrócone <see langword="null" />.</para></block>
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.CanConvertFrom" />
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.ConvertTo" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SelectionRangeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="selectionRangeConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> , który zapewnia kontekst formatu.</param>
        <param name="culture">Informacje o ustawieniach regionalnych dla konwersji.</param>
        <param name="value"><see cref="T:System.Object" /> Do przekonwertowania.</param>
        <param name="destinationType">Miejsce docelowe <see cref="T:System.Type" /> do przekonwertowania.</param>
        <summary>Konwertuje określony <see cref="T:System.Windows.Forms.SelectionRangeConverter" /> obiekt na inny typ przy użyciu określonej kultury.</summary>
        <returns><see cref="T:System.Object" /> Reprezentuje przekonwertowane. <paramref name="value" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wyspecjalizowana do konwertowania <xref:System.Windows.Forms.SelectionRange> wartości na ich <xref:System.String> lub <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor> reprezentacje. <xref:System.Windows.Forms.SelectionRangeConverter.ConvertTo%2A> Inne typy są przesyłane do implementacji klasy podstawowej tej metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="destinationType" />jest <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="value" />nie można przekonwertować na <paramref name="destinationType" />.</exception>
        <block subset="none" type="overrides"><para>Zastąp tę metodę, aby zapewnić własne wymagania dotyczące konwersji.  
  
Ten <paramref name="context" /> parametr może służyć do wyodrębnienia dodatkowych informacji o środowisku, z którego ten konwerter jest wywoływany. Parametr może mieć <see langword="null" />wartość, dlatego należy zawsze sprawdzić informacje. Ponadto właściwości obiektu kontekstu mogą również zostać zwrócone <see langword="null" />.</para></block>
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.CanConvertTo" />
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.ConvertFrom" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public override object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object CreateInstance(class System.ComponentModel.ITypeDescriptorContext context, class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SelectionRangeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateInstance (context As ITypeDescriptorContext, propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ CreateInstance(System::ComponentModel::ITypeDescriptorContext ^ context, System::Collections::IDictionary ^ propertyValues);" />
      <MemberSignature Language="F#" Value="override this.CreateInstance : System.ComponentModel.ITypeDescriptorContext * System.Collections.IDictionary -&gt; obj" Usage="selectionRangeConverter.CreateInstance (context, propertyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> , który zapewnia kontekst formatu.</param>
        <param name="propertyValues"><see cref="T:System.Collections.IDictionary" /> Zawiera nowe wartości właściwości.</param>
        <summary><see cref="T:System.Windows.Forms.SelectionRange" /> Tworzy obiekt przy użyciu określonego deskryptora typu i zestawu wartości właściwości dla tego obiektu.</summary>
        <returns>Jeśli to się powiedzie, <see cref="T:System.Windows.Forms.SelectionRange" />nowo utworzona; w przeciwnym razie ta metoda zgłasza wyjątek.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Windows.Forms.SelectionRangeConverter.CreateInstance%2A> , aby wprowadzić zmiany w istniejącym niezmiennym obiekcie, tworząc zmodyfikowaną wersję. Ta `propertyValues` Metoda oczekuje, że parametr ma elementy z `Start` wartościami kluczy i `End`, z których każdy ma odpowiednią <xref:System.DateTime> wartość.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="propertyValues" />is <see langword="null" /> lub jego <c></c> elementów początkowych i <c>końcowych</c> nie można przekonwertować na <see cref="T:System.Windows.Forms.SelectionRange" />.</exception>
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.GetCreateInstanceSupported" />
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public override bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetCreateInstanceSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SelectionRangeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCreateInstanceSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetCreateInstanceSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetCreateInstanceSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="selectionRangeConverter.GetCreateInstanceSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> , który zapewnia kontekst formatu.</param>
        <summary>Określa, czy zmiana wartości w wystąpieniu powinna wymagać wywołania <see cref="Overload:System.Windows.Forms.SelectionRangeConverter.CreateInstance" /> do utworzenia nowej wartości.</summary>
        <returns><see langword="true" />Jeśli <see cref="Overload:System.Windows.Forms.SelectionRangeConverter.CreateInstance" /> musi zostać wywołana, aby wprowadzić zmianę do jednej lub kilku właściwości; w <see langword="false" />przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja zawsze zwraca wartość `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.CreateInstance" />
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SelectionRangeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="override this.GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="selectionRangeConverter.GetProperties (context, value, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> , który zapewnia kontekst formatu.</param>
        <param name="value">Określa typ tablicy, dla której mają zostać pobrane właściwości. <see cref="T:System.Object" /></param>
        <param name="attributes">Tablica typu <see cref="T:System.Attribute" /> , która jest używana jako filtr.</param>
        <summary>Zwraca zestaw przefiltrowanych właściwości dla <see cref="T:System.Windows.Forms.SelectionRange" /> typu</summary>
        <returns>Jeśli to się powiedzie, zestaw właściwości, które powinny być uwidocznione dla <see cref="T:System.Windows.Forms.SelectionRange" /> typu; <see langword="null" />w przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja tej metody nie używa `context` parametrów lub `value` , ale po prostu odwołuje się do wywołania klasy TypeDescriptor.<xref:System.ComponentModel.TypeDescriptor.GetProperties%28System.Type%2CSystem.Attribute%5B%5D%29?displayProperty=nameWithType> Method.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.GetPropertiesSupported" />
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.CreateInstance" />
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.GetCreateInstanceSupported" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public override bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SelectionRangeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPropertiesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetPropertiesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetPropertiesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="selectionRangeConverter.GetPropertiesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> , który zapewnia kontekst formatu.</param>
        <summary>Określa, czy bieżący obiekt obsługuje właściwości, które używają określonego kontekstu deskryptora typu.</summary>
        <returns><see langword="true" />Jeśli <see cref="Overload:System.Windows.Forms.SelectionRangeConverter.GetProperties" /> można wywołać <see cref="T:System.Windows.Forms.SelectionRange" /> ,<see langword="false" />aby znaleźć właściwości obiektu; w przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja zawsze zwraca wartość `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.GetProperties" />
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.GetCreateInstanceSupported" />
      </Docs>
    </Member>
  </Members>
</Type>