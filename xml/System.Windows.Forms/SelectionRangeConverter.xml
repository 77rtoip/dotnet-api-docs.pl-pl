<Type Name="SelectionRangeConverter" FullName="System.Windows.Forms.SelectionRangeConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c42a3482c8bf87a25fa1d77671fda9bbb59b7145" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30706352" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SelectionRangeConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SelectionRangeConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.SelectionRangeConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class SelectionRangeConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class SelectionRangeConverter : System::ComponentModel::TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia konwertera typów, aby przekonwertować <see cref="T:System.Windows.Forms.SelectionRange" /> obiektów do i z różnych innych typów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.SelectionRange> Klasa reprezentuje pojedynczy datę lub zakres dat. Ta klasa jest zwykle skojarzone z <xref:System.Windows.Forms.MonthCalendar> kontrolowane, na którym reprezentuje dat zaznaczonego i wyróżnione. <xref:System.Windows.Forms.SelectionRangeConverter> Klasa jest klasą adjunct do <xref:System.Windows.Forms.SelectionRange> który umożliwia konwertowanie do i z innych typów, najczęściej ciągów.  
  
 Aby uzyskać więcej informacji na temat konwertery typu, zobacz <xref:System.ComponentModel.TypeConverter> podstawowa klasa, [uogólniony konwersji typu](http://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada), i [porady: implementacji konwertera typów](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).  
  
> [!NOTE]
>  Nigdy nie należy tworzyć <xref:System.Windows.Forms.SelectionRangeConverter>. Zamiast tego wywołać <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> metody <xref:System.ComponentModel.TypeDescriptor> klasy. Aby uzyskać więcej informacji, zobacz przykłady w <xref:System.ComponentModel.TypeConverter> klasy podstawowej.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.SelectionRange" />
    <altmember cref="T:System.Windows.Forms.MonthCalendar" />
    <altmember cref="T:System.DateTime" />
    <altmember cref="T:System.ComponentModel.TypeConverter" />
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SelectionRangeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SelectionRangeConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SelectionRangeConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.SelectionRangeConverter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.SelectionRangeConverter.%23ctor%2A> domyślny konstruktor jest dostarczany przez kompilator.  
  
 Nigdy nie należy tworzyć <xref:System.Windows.Forms.SelectionRangeConverter>. Zamiast tego wywołać <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> metody <xref:System.ComponentModel.TypeDescriptor> klasy. Aby uzyskać więcej informacji, zobacz przykłady w <xref:System.ComponentModel.TypeConverter> klasy podstawowej.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SelectionRangeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> zapewnia kontekstu formatu.</param>
        <param name="sourceType">Źródło <see cref="T:System.Type" /> do skonwertowania.</param>
        <summary>Określa, jeśli ten konwerter można przekonwertować obiektu typu określonego źródła na natywnego typu konwertera badając kontekstu deskryptora podanego typu.</summary>
        <returns>
          <see langword="true" /> Jeśli konwerter można dokonać konwersji określonej; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.SelectionRangeConverter> Klasy jest przeznaczone do konwersji między typami <xref:System.String> i <xref:System.Windows.Forms.SelectionRange>. W związku z tym <xref:System.Windows.Forms.SelectionRangeConverter.CanConvertFrom%2A> metoda zwraca `true` Jeśli `sourceType` parametr jest typu <xref:System.String>. W przeciwnym razie różni się ona wywołanie Podstawowa implementacja tej metody <xref:System.ComponentModel.TypeConverter.CanConvertFrom%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Type%29?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Przesłonić tę metodę w celu zapewnienia wymagań konwersji.  
  
 <paramref name="context" /> Parametru można wyodrębnić dodatkowe informacje o środowisku konwerter jest wywoływany z. Parametr może być <see langword="null" />, dlatego należy zawsze sprawdzić informacje. Ponadto może również zwrócić właściwości obiektu context <see langword="null" />.</para>
        </block>
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.ConvertFrom" />
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.CanConvertTo" />
        <altmember cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SelectionRangeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> zapewnia kontekstu formatu.</param>
        <param name="destinationType">Miejsce docelowe <see cref="T:System.Type" /> do przekonwertowania na.</param>
        <summary>Pobiera wartość wskazującą, czy ten konwerter można przekonwertować obiektu na typ docelowy określony przy użyciu określonego kontekstu.</summary>
        <returns>
          <see langword="true" /> Jeśli ten konwerter można dokonać konwersji określonej; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.SelectionRangeConverter.CanConvertTo%2A> Metoda zwraca `true` Jeśli `destinationType` parametr jest typu <xref:System.String> lub <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>. W przeciwnym razie różni się ona wywołanie Podstawowa implementacja tej metody <xref:System.ComponentModel.TypeConverter.CanConvertTo%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Type%29?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Przesłonić tę metodę w celu zapewnienia wymagań konwersji.  
  
 <paramref name="context" /> Parametru można wyodrębnić dodatkowe informacje o środowisku konwerter jest wywoływany z. Parametr może być <see langword="null" />, dlatego należy zawsze sprawdzić informacje. Ponadto może również zwrócić właściwości obiektu context <see langword="null" />.</para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" />
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.ConvertTo" />
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.CanConvertFrom" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SelectionRangeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> zapewnia kontekstu formatu.</param>
        <param name="culture">Informacji o ustawieniach regionalnych do konwersji.</param>
        <param name="value">
          <see cref="T:System.Object" /> Do przekonwertowania.</param>
        <summary>Konwertuje określoną wartość do typu macierzystego konwertera przy użyciu określonych ustawień regionalnych.</summary>
        <returns>
          <see cref="T:System.Object" /> Reprezentujący skonwertowany <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.SelectionRangeConverter.ConvertFrom%2A> Metody jest przeznaczone do przekonwertowania <xref:System.String> wartości, które reprezentują zakres dat w celu ich <xref:System.Windows.Forms.SelectionRange> oświadczenia. Typów innych niż <xref:System.String> są przekazywane do implementacji klasy podstawowej tej metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> Typ jest <see cref="T:System.String" /> , ale nie można przeanalizować do dwóch ciągów reprezentujących daty.</exception>
        <exception cref="T:System.InvalidCastException">
          <paramref name="value" /> Typ jest <see cref="T:System.String" /> analizy do dwa ciągi, ale jeden lub oba do konwersji <see cref="T:System.DateTime" /> typu nie powiodło się.</exception>
        <block subset="none" type="overrides">
          <para>Przesłonić tę metodę w celu zapewnienia wymagań konwersji.  
  
 <paramref name="context" /> Parametru można wyodrębnić dodatkowe informacje o środowisku konwerter jest wywoływany z. Parametr może być <see langword="null" />, dlatego należy zawsze sprawdzić informacje. Ponadto może również zwrócić właściwości obiektu context <see langword="null" />.</para>
        </block>
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.CanConvertFrom" />
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.ConvertTo" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SelectionRangeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> zapewnia kontekstu formatu.</param>
        <param name="culture">Informacji o ustawieniach regionalnych do konwersji.</param>
        <param name="value">
          <see cref="T:System.Object" /> Do przekonwertowania.</param>
        <param name="destinationType">Miejsce docelowe <see cref="T:System.Type" /> do przekonwertowania na.</param>
        <summary>Konwertuje określony <see cref="T:System.Windows.Forms.SelectionRangeConverter" /> obiektu do innego typu przy użyciu określonej kultury.</summary>
        <returns>
          <see cref="T:System.Object" /> Reprezentujący skonwertowany <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.SelectionRangeConverter.ConvertTo%2A> Metody jest przeznaczone do przekonwertowania <xref:System.Windows.Forms.SelectionRange> wartości do ich <xref:System.String> lub <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor> oświadczenia. Inne typy są przekazywane do implementacji klasy podstawowej tej metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="destinationType" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="value" /> Nie można przekonwertować na <paramref name="destinationType" />.</exception>
        <block subset="none" type="overrides">
          <para>Przesłonić tę metodę w celu zapewnienia wymagań konwersji.  
  
 <paramref name="context" /> Parametru można wyodrębnić dodatkowe informacje o środowisku konwerter jest wywoływany z. Parametr może być <see langword="null" />, dlatego należy zawsze sprawdzić informacje. Ponadto może również zwrócić właściwości obiektu context <see langword="null" />.</para>
        </block>
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.CanConvertTo" />
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.ConvertFrom" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public override object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object CreateInstance(class System.ComponentModel.ITypeDescriptorContext context, class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SelectionRangeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateInstance (context As ITypeDescriptorContext, propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ CreateInstance(System::ComponentModel::ITypeDescriptorContext ^ context, System::Collections::IDictionary ^ propertyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> zapewnia kontekstu formatu.</param>
        <param name="propertyValues">
          <see cref="T:System.Collections.IDictionary" /> Zawiera nowe wartości właściwości.</param>
        <summary>Tworzy <see cref="T:System.Windows.Forms.SelectionRange" /> obiektu przy użyciu deskryptora określony typ i zestaw wartości właściwości dla tego obiektu.</summary>
        <returns>W przypadku powodzenia nowo utworzony <see cref="T:System.Windows.Forms.SelectionRange" />; w przeciwnym razie ta metoda zgłasza wyjątek.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Windows.Forms.SelectionRangeConverter.CreateInstance%2A> metodę, aby wprowadzić zmiany do istniejącego obiektu niezmienne tworząc zmodyfikowanej wersji. Ta metoda oczekuje `propertyValues` parametru elementy o wartości klucza `Start` i `End`, każde z nich odpowiednie <xref:System.DateTime> wartość.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="propertyValues" /> jest <see langword="null" /> lub jego <c>Start</c> i <c>zakończenia</c> elementów nie można przekonwertować na <see cref="T:System.Windows.Forms.SelectionRange" />.</exception>
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.GetCreateInstanceSupported" />
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public override bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetCreateInstanceSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SelectionRangeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCreateInstanceSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetCreateInstanceSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> zapewnia kontekstu formatu.</param>
        <summary>Określa, czy zmiana wartości w wystąpieniu powinien wymaga wywołania <see cref="Overload:System.Windows.Forms.SelectionRangeConverter.CreateInstance" /> do utworzenia nowej wartości.</summary>
        <returns>
          <see langword="true" /> Jeśli <see cref="Overload:System.Windows.Forms.SelectionRangeConverter.CreateInstance" /> musi być wywołana wprowadzać zmiany do przynajmniej jednej właściwości; w przeciwnym <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja zawsze zwraca `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.CreateInstance" />
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SelectionRangeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> zapewnia kontekstu formatu.</param>
        <param name="value">
          <see cref="T:System.Object" /> Określająca typ tablicy, dla którego można pobrać właściwości.</param>
        <param name="attributes">Tablica typu <see cref="T:System.Attribute" /> używany jako filtr.</param>
        <summary>Zwraca zestaw właściwości filtrowane <see cref="T:System.Windows.Forms.SelectionRange" /> typu</summary>
        <returns>Jeśli to się powiedzie, zbiór właściwości, które powinny być widoczne dla <see cref="T:System.Windows.Forms.SelectionRange" /> typu; w przeciwnym razie <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja tej metody nie używa `context` lub `value` parametrów, ale po prostu odwołuje się wywołanie deskryptor typu.<xref:System.ComponentModel.TypeDescriptor.GetProperties%28System.Type%2CSystem.Attribute%5B%5D%29?displayProperty=nameWithType> Metoda.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.GetPropertiesSupported" />
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.CreateInstance" />
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.GetCreateInstanceSupported" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public override bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SelectionRangeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPropertiesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetPropertiesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> zapewnia kontekstu formatu.</param>
        <summary>Określa, czy bieżący obiekt obsługuje właściwości, które używa kontekstu deskryptora określonego typu.</summary>
        <returns>
          <see langword="true" /> Jeśli <see cref="Overload:System.Windows.Forms.SelectionRangeConverter.GetProperties" /> można wywołać w celu znalezienia właściwości <see cref="T:System.Windows.Forms.SelectionRange" /> obiektu; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja zawsze zwraca `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.GetProperties" />
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.GetCreateInstanceSupported" />
      </Docs>
    </Member>
  </Members>
</Type>