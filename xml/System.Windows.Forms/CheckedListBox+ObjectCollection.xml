<Type Name="CheckedListBox+ObjectCollection" FullName="System.Windows.Forms.CheckedListBox+ObjectCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="307ed1b69c05eb647fee2b845da7c6cb825c5c29" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69195254" /></Metadata><TypeSignature Language="C#" Value="public class CheckedListBox.ObjectCollection : System.Windows.Forms.ListBox.ObjectCollection" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit CheckedListBox/ObjectCollection extends System.Windows.Forms.ListBox/ObjectCollection" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.CheckedListBox.ObjectCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class CheckedListBox.ObjectCollection&#xA;Inherits ListBox.ObjectCollection" />
  <TypeSignature Language="C++ CLI" Value="public: ref class CheckedListBox::ObjectCollection : System::Windows::Forms::ListBox::ObjectCollection" />
  <TypeSignature Language="F#" Value="type CheckedListBox.ObjectCollection = class&#xA;    inherit ListBox.ObjectCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ListBox+ObjectCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje kolekcję elementów w <see cref="T:System.Windows.Forms.CheckedListBox" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Do kolekcji uzyskuje się dostęp z kontrolki <xref:System.Windows.Forms.CheckedListBox>nadrzędnej, <xref:System.Windows.Forms.CheckedListBox.Items%2A> przez właściwość. Aby utworzyć kolekcję obiektów do wyświetlenia w <xref:System.Windows.Forms.CheckedListBox> formancie, można dodawać lub usuwać elementy pojedynczo przy <xref:System.Windows.Forms.CheckedListBox.ObjectCollection.Add%2A> użyciu metod i <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> .  
  
   
  
## Examples  
 Poniższy przykład wylicza elementy w <xref:System.Windows.Forms.CheckedListBox> i sprawdza każdy inny element na liście. W przykładzie pokazano, jak <xref:System.Windows.Forms.CheckedListBox.Items%2A> użyć właściwości, aby <xref:System.Windows.Forms.CheckedListBox.ObjectCollection> <xref:System.Windows.Forms.ListBox.ObjectCollection.Count%2A> uzyskać elementy.  
  
 W przykładzie pokazano również, <xref:System.Windows.Forms.CheckedListBox.SetItemCheckState%2A> jak użyć metod i <xref:System.Windows.Forms.CheckedListBox.SetItemChecked%2A> , aby ustawić stan zaznaczenia elementu. Dla każdego innego elementu, który ma zostać sprawdzony, <xref:System.Windows.Forms.CheckedListBox.SetItemCheckState%2A> jest wywoływana, aby <xref:System.Windows.Forms.CheckState> ustawić do `Indeterminate`, podczas <xref:System.Windows.Forms.CheckedListBox.SetItemChecked%2A> gdy jest `Checked`wywoływana dla drugiego elementu, aby ustawić stan zaznaczenia.  
  
 [!code-cpp[CheckedListBox#3](~/samples/snippets/cpp/VS_Snippets_Winforms/CheckedListBox/CPP/source.cpp#3)]
 [!code-csharp[CheckedListBox#3](~/samples/snippets/csharp/VS_Snippets_Winforms/CheckedListBox/CS/source.cs#3)]
 [!code-vb[CheckedListBox#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CheckedListBox/VB/source.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectCollection (System.Windows.Forms.CheckedListBox owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.CheckedListBox owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.ObjectCollection.#ctor(System.Windows.Forms.CheckedListBox)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As CheckedListBox)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectCollection(System::Windows::Forms::CheckedListBox ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.CheckedListBox.ObjectCollection : System.Windows.Forms.CheckedListBox -&gt; System.Windows.Forms.CheckedListBox.ObjectCollection" Usage="new System.Windows.Forms.CheckedListBox.ObjectCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.CheckedListBox" />
      </Parameters>
      <Docs>
        <param name="owner"><see cref="T:System.Windows.Forms.CheckedListBox" /> Który jest właścicielem kolekcji.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.CheckedListBox.ObjectCollection" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje element do listy elementów dla <see cref="T:System.Windows.Forms.CheckedListBox" />elementu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (object item, bool isChecked);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(object item, bool isChecked) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.ObjectCollection.Add(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As Object, isChecked As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Object ^ item, bool isChecked);" />
      <MemberSignature Language="F#" Value="override this.Add : obj * bool -&gt; int" Usage="objectCollection.Add (item, isChecked)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="isChecked" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="item">Obiekt reprezentujący element, który ma zostać dodany do kolekcji.</param>
        <param name="isChecked"><see langword="true" />Aby sprawdzić element; w przeciwnym razie. <see langword="false" /></param>
        <summary>Dodaje element do listy elementów dla elementu <see cref="T:System.Windows.Forms.CheckedListBox" />, określając obiekt do dodania i czy jest zaznaczone.</summary>
        <returns>Indeks nowo dodanego elementu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda dodaje element do listy. Dla listy element jest dodawany na końcu istniejącej listy elementów. Dla posortowanego pola listy, element zostanie wstawiony do listy zgodnie z posortowaną pozycją. Występuje `SystemException` , gdy jest za mało miejsca, aby można było zapisać nowy element.  
  
   
  
## Examples  
 Poniższy <xref:System.Windows.Forms.CheckedListBox> przykład kodu demonstruje inicjalizację kontrolki przez <xref:System.Windows.Forms.CheckedListBox.CheckOnClick%2A>ustawienie właściwości, <xref:System.Windows.Forms.CheckedListBox.SelectionMode%2A>, i <xref:System.Windows.Forms.CheckedListBox.ThreeDCheckBoxes%2A> . Przykład wypełnia <xref:System.Windows.Forms.CheckedListBox> formant with i <xref:System.Windows.Forms.CheckedListBox.DisplayMember%2A> ustawia <xref:System.Windows.Forms.Control.Name%2A?displayProperty=nameWithType> właściwość na na właściwości kontrolki.  
  
 Aby uruchomić przykład, wklej następujący kod w postaci zawierającej <xref:System.Windows.Forms.CheckedListBox> nazwę CheckedListBox1 i `InitializeCheckListBox` Wywołaj metodę z konstruktora lub `Load` metody formularza.  
  
 [!code-cpp[System.Windows.Forms.PropertyGridExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.PropertyGridExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.PropertyGridExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (object item, System.Windows.Forms.CheckState check);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(object item, valuetype System.Windows.Forms.CheckState check) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.ObjectCollection.Add(System.Object,System.Windows.Forms.CheckState)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As Object, check As CheckState) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Object ^ item, System::Windows::Forms::CheckState check);" />
      <MemberSignature Language="F#" Value="override this.Add : obj * System.Windows.Forms.CheckState -&gt; int" Usage="objectCollection.Add (item, check)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="check" Type="System.Windows.Forms.CheckState" />
      </Parameters>
      <Docs>
        <param name="item">Obiekt reprezentujący element, który ma zostać dodany do kolekcji.</param>
        <param name="check">Inicjał <see cref="T:System.Windows.Forms.CheckState" /> dla zaznaczonej części elementu.</param>
        <summary>Dodaje element do listy elementów dla elementu <see cref="T:System.Windows.Forms.CheckedListBox" />, określając obiekt do dodania i początkową wartość sprawdzoną.</summary>
        <returns>Indeks nowo dodanego elementu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda dodaje element do pola listy zaznaczonej. W przypadku niesortowanego pola listy wyboru element zostanie dodany na końcu istniejącej listy elementów. Dla posortowanego pola listy, element zostanie wstawiony do listy zgodnie z posortowaną pozycją. Występuje `SystemException` , gdy jest za mało miejsca, aby można było zapisać nowy element.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Parametr nie jest jedną z prawidłowych <see cref="T:System.Windows.Forms.CheckState" /> wartości. <paramref name="check" /></exception>
      </Docs>
    </Member>
  </Members>
</Type>
