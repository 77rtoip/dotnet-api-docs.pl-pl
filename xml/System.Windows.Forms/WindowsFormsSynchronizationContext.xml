<Type Name="WindowsFormsSynchronizationContext" FullName="System.Windows.Forms.WindowsFormsSynchronizationContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a9575c1f333ec4e609184033bd2ba99227eb9629" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30705956" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WindowsFormsSynchronizationContext : System.Threading.SynchronizationContext, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WindowsFormsSynchronizationContext extends System.Threading.SynchronizationContext implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.WindowsFormsSynchronizationContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WindowsFormsSynchronizationContext&#xA;Inherits SynchronizationContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsFormsSynchronizationContext sealed : System::Threading::SynchronizationContext, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Threading.SynchronizationContext</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Udostępnia kontekst synchronizacji dla modelu aplikacji formularzy systemu Windows.</summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:System.Threading.SynchronizationContext" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsFormsSynchronizationContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WindowsFormsSynchronizationContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsFormsSynchronizationContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.WindowsFormsSynchronizationContext" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Threading.SynchronizationContext" />
      </Docs>
    </Member>
    <Member MemberName="AutoInstall">
      <MemberSignature Language="C#" Value="public static bool AutoInstall { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AutoInstall" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WindowsFormsSynchronizationContext.AutoInstall" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property AutoInstall As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AutoInstall { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą czy <see cref="T:System.Windows.Forms.WindowsFormsSynchronizationContext" /> jest zainstalowany, gdy formant zostanie utworzony.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Windows.Forms.WindowsFormsSynchronizationContext" /> jest zainstalowany, a w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WindowsFormsSynchronizationContext.AutoInstall%2A> Właściwość określa, czy <xref:System.Windows.Forms.WindowsFormsSynchronizationContext> jest zainstalowany, gdy formant zostanie utworzony lub po uruchomieniu pętli komunikatów.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.SynchronizationContext" />
      </Docs>
    </Member>
    <Member MemberName="CreateCopy">
      <MemberSignature Language="C#" Value="public override System.Threading.SynchronizationContext CreateCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.SynchronizationContext CreateCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WindowsFormsSynchronizationContext.CreateCopy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateCopy () As SynchronizationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::SynchronizationContext ^ CreateCopy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.SynchronizationContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Kopiuje kontekst synchronizacji.</summary>
        <returns>Kopia kontekstu synchronizacji.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Threading.SynchronizationContext" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WindowsFormsSynchronizationContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia wszelkie zasoby używane przez <see cref="T:System.Windows.Forms.WindowsFormsSynchronizationContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie <xref:System.Windows.Forms.WindowsFormsSynchronizationContext.Dispose%2A> po zakończeniu przy użyciu <xref:System.Windows.Forms.WindowsFormsSynchronizationContext>. <xref:System.Windows.Forms.WindowsFormsSynchronizationContext.Dispose%2A> Pozostawia metody <xref:System.Windows.Forms.WindowsFormsSynchronizationContext> w stanie uniemożliwiającym jego używanie. Po wywołaniu <xref:System.Windows.Forms.WindowsFormsSynchronizationContext.Dispose%2A>, konieczne jest zwolnienie wszystkich odwołań do <xref:System.Windows.Forms.WindowsFormsSynchronizationContext> , moduł zbierający elementy bezużyteczne mógł odzyskać pamięć który <xref:System.Windows.Forms.WindowsFormsSynchronizationContext> klasy. Aby uzyskać więcej informacji, zobacz [czyszczenie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i [implementacja metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Wywoływanie zawsze <xref:System.Windows.Forms.WindowsFormsSynchronizationContext.Dispose%2A> przed zwolnieniem ostatniego odwołania do <xref:System.Windows.Forms.WindowsFormsSynchronizationContext>. W przeciwnym razie używa zasobów nie zostanie zwolniona do wywołania modułu zbierającego elementy bezużyteczne <xref:System.Windows.Forms.WindowsFormsSynchronizationContext> obiektu `Finalize` metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Post">
      <MemberSignature Language="C#" Value="public override void Post (System.Threading.SendOrPostCallback d, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Post(class System.Threading.SendOrPostCallback d, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WindowsFormsSynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Post (d As SendOrPostCallback, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Post(System::Threading::SendOrPostCallback ^ d, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Threading.SendOrPostCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="d">
          <see cref="T:System.Threading.SendOrPostCallback" /> Delegata do wywołania.</param>
        <param name="state">Obiekt przekazywany do delegata.</param>
        <summary>Wysyła komunikat asynchroniczny kontekst synchronizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WindowsFormsSynchronizationContext.Post%2A> Metoda uruchamia asynchroniczne żądanie można wysłać wiadomości.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.SynchronizationContext" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public override void Send (System.Threading.SendOrPostCallback d, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Send(class System.Threading.SendOrPostCallback d, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WindowsFormsSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Send (d As SendOrPostCallback, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Send(System::Threading::SendOrPostCallback ^ d, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Threading.SendOrPostCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="d">
          <see cref="T:System.Threading.SendOrPostCallback" /> Delegata do wywołania.</param>
        <param name="state">Obiekt przekazywany do delegata.</param>
        <summary>Wywołuje komunikatu synchronicznego kontekst synchronizacji</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wątek docelowy już nie istnieje lub wartość jego <xref:System.Threading.Thread.IsAlive%2A?displayProperty=nameWithType> właściwość jest `false`, <xref:System.Windows.Forms.WindowsFormsSynchronizationContext.Send%2A> metoda zgłasza <xref:System.ComponentModel.InvalidAsynchronousStateException>. Jest obiekt wywołujący, aby ustalić, jakie dodatkowe czynności do wykonania.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidAsynchronousStateException">Wątek docelowy już istnieje.</exception>
        <altmember cref="T:System.Threading.SynchronizationContext" />
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public static void Uninstall ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uninstall() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WindowsFormsSynchronizationContext.Uninstall" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Uninstall ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Uninstall();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Odinstalowuje aktualnie zainstalowany <see cref="T:System.Windows.Forms.WindowsFormsSynchronizationContext" /> i zastępuje go w kontekście zainstalowane wcześniej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wcześniej zainstalowanych <xref:System.Windows.Forms.WindowsFormsSynchronizationContext> jest `null`, bieżącego kontekstu ma ustawioną wartość `null`.  
  
 Jeśli kontekst synchronizacji aktualnie zainstalowany jest <xref:System.Windows.Forms.WindowsFormsSynchronizationContext>, ta metoda nie działa.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.SynchronizationContext" />
      </Docs>
    </Member>
  </Members>
</Type>