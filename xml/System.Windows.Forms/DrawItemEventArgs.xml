<Type Name="DrawItemEventArgs" FullName="System.Windows.Forms.DrawItemEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a7958d520c2f0d53aeadf9ca626af0a309925ef8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36522621" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DrawItemEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DrawItemEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DrawItemEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DrawItemEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DrawItemEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DrawItemEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia dane dla <see langword="DrawItem" /> zdarzeń.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `DrawItem` Zdarzenie jest wywoływane przez formanty rysowania przez właściciela, takich jak <xref:System.Windows.Forms.ListBox> i <xref:System.Windows.Forms.ComboBox> kontrolki. Zawiera wszystkie informacje potrzebne do rysowania określonego elementu, łącznie z indeksu elementów przez użytkownika <xref:System.Drawing.Rectangle>i <xref:System.Drawing.Graphics> na które należy wykonać rysunku.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano tworzenie rysowanych przez właściciela <xref:System.Windows.Forms.ListBox> elementów. W kodzie użyto <xref:System.Windows.Forms.ListBox.DrawMode%2A> właściwości w celu określenia usunięto elementy rysowane o rozmiarze i <xref:System.Windows.Forms.ListBox.DrawItem> zdarzeń do wykonania na rysunku każdego elementu w <xref:System.Windows.Forms.ListBox>. Przykładowy kod używa właściwości i metody <xref:System.Windows.Forms.DrawItemEventArgs> klasy przekazany jako parametr do programu obsługi zdarzeń, aby narysować elementy. W tym przykładzie założono, że <xref:System.Windows.Forms.ListBox> formantu o nazwie `listBox1` został dodany do formularza i który <xref:System.Windows.Forms.ListBox.DrawItem> zdarzenie jest obsługiwane przez program obsługi zdarzeń zdefiniowanych w przykładowym kodzie. W przykładzie założono, że elementy zostały dodane do <xref:System.Windows.Forms.ListBox> z tekstem "Apple", "Pomarańczowy" i "Plum" w tej kolejności.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DrawItemEventHandler" />
    <altmember cref="T:System.Windows.Forms.ComboBox" />
    <altmember cref="T:System.Windows.Forms.ListBox" />
    <altmember cref="T:System.Windows.Forms.MenuItem" />
    <altmember cref="T:System.Windows.Forms.TabControl" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.DrawItemEventArgs" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawItemEventArgs (System.Drawing.Graphics graphics, System.Drawing.Font font, System.Drawing.Rectangle rect, int index, System.Windows.Forms.DrawItemState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Graphics graphics, class System.Drawing.Font font, valuetype System.Drawing.Rectangle rect, int32 index, valuetype System.Windows.Forms.DrawItemState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawItemEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DrawItemState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawItemEventArgs(System::Drawing::Graphics ^ graphics, System::Drawing::Font ^ font, System::Drawing::Rectangle rect, int index, System::Windows::Forms::DrawItemState state);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DrawItemEventArgs : System.Drawing.Graphics * System.Drawing.Font * System.Drawing.Rectangle * int * System.Windows.Forms.DrawItemState -&gt; System.Windows.Forms.DrawItemEventArgs" Usage="new System.Windows.Forms.DrawItemEventArgs (graphics, font, rect, index, state)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.DrawItemState" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Powierzchni, na którym ma zostać narysowany.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> Do użycia, zwykle formantu nadrzędnego <see cref="T:System.Drawing.Font" /> właściwości.</param>
        <param name="rect">
          <see cref="T:System.Drawing.Rectangle" /> Granice do rysowania w ciągu.</param>
        <param name="index">
          <see cref="T:System.Windows.Forms.Control.ControlCollection" /> Wartość elementu, który jest rysowana indeksu.</param>
        <param name="state">Formantu <see cref="T:System.Windows.Forms.DrawItemState" /> informacji.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.DrawItemEventArgs" /> klasy dla określonej kontrolki z określonej czcionki, stan powierzchni do rysowania na i granice do rysowania w ciągu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawItemEventArgs (System.Drawing.Graphics graphics, System.Drawing.Font font, System.Drawing.Rectangle rect, int index, System.Windows.Forms.DrawItemState state, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Graphics graphics, class System.Drawing.Font font, valuetype System.Drawing.Rectangle rect, int32 index, valuetype System.Windows.Forms.DrawItemState state, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawItemEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DrawItemState,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawItemEventArgs(System::Drawing::Graphics ^ graphics, System::Drawing::Font ^ font, System::Drawing::Rectangle rect, int index, System::Windows::Forms::DrawItemState state, System::Drawing::Color foreColor, System::Drawing::Color backColor);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DrawItemEventArgs : System.Drawing.Graphics * System.Drawing.Font * System.Drawing.Rectangle * int * System.Windows.Forms.DrawItemState * System.Drawing.Color * System.Drawing.Color -&gt; System.Windows.Forms.DrawItemEventArgs" Usage="new System.Windows.Forms.DrawItemEventArgs (graphics, font, rect, index, state, foreColor, backColor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.DrawItemState" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Powierzchni, na którym ma zostać narysowany.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> Do użycia, zwykle formantu nadrzędnego <see cref="T:System.Drawing.Font" /> właściwości.</param>
        <param name="rect">
          <see cref="T:System.Drawing.Rectangle" /> Granice do rysowania w ciągu.</param>
        <param name="index">
          <see cref="T:System.Windows.Forms.Control.ControlCollection" /> Wartość elementu, który jest rysowana indeksu.</param>
        <param name="state">Formantu <see cref="T:System.Windows.Forms.DrawItemState" /> informacji.</param>
        <param name="foreColor">Kolor pierwszego planu <see cref="T:System.Drawing.Color" /> do kontrolki z rysowania.</param>
        <param name="backColor">Tło <see cref="T:System.Drawing.Color" /> do kontrolki z rysowania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.DrawItemEventArgs" /> klasy dla określonej kontrolki z określonej czcionki, stan kolor pierwszego planu, kolor tła, powierzchni do rysowania na i granice do rysowania w ciągu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackColor { System::Drawing::Color get(); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color" Usage="System.Windows.Forms.DrawItemEventArgs.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolor tła elementu, który jest rysowana.</summary>
        <value>Tło <see cref="T:System.Drawing.Color" /> elementu, który jest rysowana.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli stan elementu jest <xref:System.Windows.Forms.DrawItemState.Selected?displayProperty=nameWithType>, <xref:System.Windows.Forms.DrawItemEventArgs.BackColor%2A> ma ustawioną wartość <xref:System.Drawing.SystemColors.HighlightText%2A?displayProperty=nameWithType>. Jeśli stan elementu nie jest <xref:System.Windows.Forms.DrawItemState.Selected>, <xref:System.Windows.Forms.DrawItemEventArgs.BackColor%2A> właściwość jest ustawiona na <xref:System.Drawing.SystemColors.Window%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> zdarzeń. Ten raport pomaga dowiesz się, gdy zdarzenie występuje i mogą pomóc w debugowaniu.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.ListBox> o nazwie `ListBox1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#153](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#153)]
 [!code-vb[System.Windows.Forms.EventExamples#153](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#153)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.DrawItemEventArgs.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera prostokąt, który reprezentuje granice elementu, który jest.</summary>
        <value>
          <see cref="T:System.Drawing.Rectangle" /> Reprezentujący granice elementu, który jest rysowana.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano tworzenie rysowanych przez właściciela <xref:System.Windows.Forms.ListBox> elementów. W kodzie użyto <xref:System.Windows.Forms.ListBox.DrawMode%2A> właściwości w celu określenia usunięto elementy rysowane o rozmiarze i <xref:System.Windows.Forms.ListBox.DrawItem> zdarzeń do wykonania na rysunku każdego elementu w <xref:System.Windows.Forms.ListBox>. Przykładowy kod używa właściwości i metody <xref:System.Windows.Forms.DrawItemEventArgs> klasy przekazany jako parametr do programu obsługi zdarzeń, aby narysować elementy. W tym przykładzie założono, że <xref:System.Windows.Forms.ListBox> formantu o nazwie `listBox1` został dodany do formularza i który <xref:System.Windows.Forms.ListBox.DrawItem> zdarzenie jest obsługiwane przez program obsługi zdarzeń zdefiniowanych w przykładowym kodzie. W przykładzie założono, że elementy zostały dodane do <xref:System.Windows.Forms.ListBox> z tekstem "Apple", "Pomarańczowy" i "Plum" w tej kolejności.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawItemEventArgs.Graphics" />
      </Docs>
    </Member>
    <Member MemberName="DrawBackground">
      <MemberSignature Language="C#" Value="public virtual void DrawBackground ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawBackground() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawItemEventArgs.DrawBackground" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DrawBackground ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DrawBackground();" />
      <MemberSignature Language="F#" Value="abstract member DrawBackground : unit -&gt; unit&#xA;override this.DrawBackground : unit -&gt; unit" Usage="drawItemEventArgs.DrawBackground " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rysuje tła w granicach określonego w <see cref="Overload:System.Windows.Forms.DrawItemEventArgs.#ctor" /> Konstruktor i odpowiednim kolorem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku rysowania elementu <xref:System.Windows.Forms.DrawItemState.Selected>, tło jest rysowane wyróżniony tekst.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano tworzenie rysowanych przez właściciela <xref:System.Windows.Forms.ListBox> elementów. W kodzie użyto <xref:System.Windows.Forms.ListBox.DrawMode%2A> właściwości w celu określenia, że rysowane są o stałym rozmiarze i <xref:System.Windows.Forms.ListBox.DrawItem> zdarzeń do wykonania na rysunku każdego elementu w <xref:System.Windows.Forms.ListBox>. Przykładowy kod używa właściwości i metody <xref:System.Windows.Forms.DrawItemEventArgs> klasy przekazany jako parametr do programu obsługi zdarzeń, aby narysować elementy. W tym przykładzie założono, że <xref:System.Windows.Forms.ListBox> formantu o nazwie `listBox1` został dodany do formularza i który <xref:System.Windows.Forms.ListBox.DrawItem> zdarzenie jest obsługiwane przez program obsługi zdarzeń, który jest zdefiniowany w przykładowym kodzie. W przykładzie założono, że elementy nie zostały dodane do <xref:System.Windows.Forms.ListBox> z tekstem "Apple", "Pomarańczowy" i "Plum" w tej kolejności.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.DrawItemEventArgs.DrawBackground" /> w klasie pochodnej, upewnij się, że wywołanie <see cref="M:System.Windows.Forms.DrawItemEventArgs.DrawBackground" /> metody klasy podstawowej.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DrawItemState" />
      </Docs>
    </Member>
    <Member MemberName="DrawFocusRectangle">
      <MemberSignature Language="C#" Value="public virtual void DrawFocusRectangle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawFocusRectangle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawItemEventArgs.DrawFocusRectangle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DrawFocusRectangle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DrawFocusRectangle();" />
      <MemberSignature Language="F#" Value="abstract member DrawFocusRectangle : unit -&gt; unit&#xA;override this.DrawFocusRectangle : unit -&gt; unit" Usage="drawItemEventArgs.DrawFocusRectangle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rysuje prostokąt fokusu w granicach określonego w <see cref="Overload:System.Windows.Forms.DrawItemEventArgs.#ctor" /> konstruktora.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli element jest rysowany ma <xref:System.Windows.Forms.DrawItemState.Focus>, jest rysowany prostokąt fokusu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano tworzenie rysowanych przez właściciela <xref:System.Windows.Forms.ListBox> elementów. W kodzie użyto <xref:System.Windows.Forms.ListBox.DrawMode%2A> właściwości w celu określenia, że rysowane są o stałym rozmiarze i <xref:System.Windows.Forms.ListBox.DrawItem> zdarzeń do wykonania na rysunku każdego elementu w <xref:System.Windows.Forms.ListBox>. Przykładowy kod używa właściwości i metody <xref:System.Windows.Forms.DrawItemEventArgs> klasy przekazany jako parametr do programu obsługi zdarzeń, aby narysować elementy. W tym przykładzie założono, że <xref:System.Windows.Forms.ListBox> formantu o nazwie `listBox1` został dodany do formularza i który <xref:System.Windows.Forms.ListBox.DrawItem> zdarzenie jest obsługiwane przez program obsługi zdarzeń, który jest zdefiniowany w przykładowym kodzie. W przykładzie założono, że elementy nie zostały dodane do <xref:System.Windows.Forms.ListBox> z tekstem "Apple", "Pomarańczowy" i "Plum" w tej kolejności.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.DrawItemEventArgs.DrawFocusRectangle" /> w klasie pochodnej, upewnij się, że wywołanie <see cref="M:System.Windows.Forms.DrawItemEventArgs.DrawFocusRectangle" /> metody klasy podstawowej.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DrawItemState" />
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public System.Drawing.Font Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.Font" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font" Usage="System.Windows.Forms.DrawItemEventArgs.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera czcionki, która jest przypisana do elementu rysowania.</summary>
        <value>
          <see cref="T:System.Drawing.Font" /> Przypisany do rysowania elementu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sugerowane <xref:System.Drawing.Font>, zwykle <xref:System.Windows.Forms.Control.Font%2A> właściwości kontrolki nadrzędnej.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano tworzenie rysowanych przez właściciela <xref:System.Windows.Forms.ListBox> elementów. W kodzie użyto <xref:System.Windows.Forms.ListBox.DrawMode%2A> właściwości w celu określenia, że rysowane są o stałym rozmiarze i <xref:System.Windows.Forms.ListBox.DrawItem> zdarzeń do wykonania na rysunku każdego elementu w <xref:System.Windows.Forms.ListBox>. Przykładowy kod używa właściwości i metody <xref:System.Windows.Forms.DrawItemEventArgs> klasy przekazany jako parametr do programu obsługi zdarzeń, aby narysować elementy. W tym przykładzie założono, że <xref:System.Windows.Forms.ListBox> formantu o nazwie `listBox1` został dodany do formularza i który <xref:System.Windows.Forms.ListBox.DrawItem> zdarzenie jest obsługiwane przez program obsługi zdarzeń, który jest zdefiniowany w przykładowym kodzie. W przykładzie założono, że elementy nie zostały dodane do <xref:System.Windows.Forms.ListBox> z tekstem "Apple", "Pomarańczowy" i "Plum" w tej kolejności.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Font" />
        <altmember cref="P:System.Windows.Forms.Control.Font" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ForeColor { System::Drawing::Color get(); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color" Usage="System.Windows.Forms.DrawItemEventArgs.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolor pierwszego planu elementu rysowania.</summary>
        <value>Kolor pierwszego planu <see cref="T:System.Drawing.Color" /> rysowania elementu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli stan elementu jest <xref:System.Windows.Forms.DrawItemState.Selected?displayProperty=nameWithType>, <xref:System.Windows.Forms.DrawItemEventArgs.ForeColor%2A> ma ustawioną wartość <xref:System.Drawing.SystemColors.HighlightText%2A?displayProperty=nameWithType>. Jeśli stan elementu nie jest <xref:System.Windows.Forms.DrawItemState.Selected>, <xref:System.Windows.Forms.DrawItemEventArgs.ForeColor%2A> właściwość jest ustawiona na <xref:System.Drawing.SystemColors.WindowText%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> zdarzeń. Ten raport pomaga dowiesz się, gdy zdarzenie występuje i mogą pomóc w debugowaniu.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.ListBox> o nazwie `ListBox1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#153](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#153)]
 [!code-vb[System.Windows.Forms.EventExamples#153](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#153)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Graphics : System.Drawing.Graphics" Usage="System.Windows.Forms.DrawItemEventArgs.Graphics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera grafiki powierzchni do rysowania elementu.</summary>
        <value>
          <see cref="T:System.Drawing.Graphics" /> Powierzchni do rysowania elementu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano tworzenie rysowanych przez właściciela <xref:System.Windows.Forms.ListBox> elementów. W kodzie użyto <xref:System.Windows.Forms.ListBox.DrawMode%2A> właściwości w celu określenia, że rysowane są o stałym rozmiarze i <xref:System.Windows.Forms.ListBox.DrawItem> zdarzeń do wykonania na rysunku każdego elementu w <xref:System.Windows.Forms.ListBox>. Przykładowy kod używa właściwości i metody <xref:System.Windows.Forms.DrawItemEventArgs> klasy przekazany jako parametr do programu obsługi zdarzeń, aby narysować elementy. W tym przykładzie założono, że <xref:System.Windows.Forms.ListBox> formantu o nazwie `listBox1` został dodany do formularza i który <xref:System.Windows.Forms.ListBox.DrawItem> zdarzenie jest obsługiwane przez program obsługi zdarzeń, który jest zdefiniowany w przykładowym kodzie. W przykładzie założono, że elementy nie zostały dodane do <xref:System.Windows.Forms.ListBox> z tekstem "Apple", "Pomarańczowy" i "Plum" w tej kolejności.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawItemEventArgs.Bounds" />
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Index : int" Usage="System.Windows.Forms.DrawItemEventArgs.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość indeksu elementu, który jest rysowana.</summary>
        <value>Wartość liczbowa, który reprezentuje <see cref="P:System.Windows.Forms.Control.ControlCollection.Item(System.Int32)" /> wartość elementu rysowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość zwraca <xref:System.Windows.Forms.Control.ControlCollection.Item%2A> wartość elementu są rysowane w <xref:System.Windows.Forms.Control.ControlCollection?displayProperty=nameWithType>. Ta właściwość może zwrócić -1, jeśli itemswere usunięty z listy.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano tworzenie rysowanych przez właściciela <xref:System.Windows.Forms.ListBox> elementów. W kodzie użyto <xref:System.Windows.Forms.ListBox.DrawMode%2A> właściwości w celu określenia, że rysowane są o stałym rozmiarze i <xref:System.Windows.Forms.ListBox.DrawItem> zdarzeń do wykonania na rysunku każdego elementu w <xref:System.Windows.Forms.ListBox>. Przykładowy kod używa właściwości i metody <xref:System.Windows.Forms.DrawItemEventArgs> klasy przekazany jako parametr do programu obsługi zdarzeń, aby narysować elementy. W tym przykładzie założono, że <xref:System.Windows.Forms.ListBox> formantu o nazwie `listBox1` został dodany do formularza i który <xref:System.Windows.Forms.ListBox.DrawItem> zdarzenie jest obsługiwane przez program obsługi zdarzeń, który jest zdefiniowany w przykładowym kodzie. W przykładzie założono, że elementy nie zostały dodane do <xref:System.Windows.Forms.ListBox> z tekstem "Apple", "Pomarańczowy" i "Plum" w tej kolejności.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.ControlCollection.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DrawItemState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DrawItemState State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As DrawItemState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DrawItemState State { System::Windows::Forms::DrawItemState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Windows.Forms.DrawItemState" Usage="System.Windows.Forms.DrawItemEventArgs.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawItemState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera stan elementu rysowania.</summary>
        <value>
          <see cref="T:System.Windows.Forms.DrawItemState" /> Reprezentujący stan elementu rysowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość tej właściwości może być kombinacją <xref:System.Windows.Forms.DrawItemState> elementy członkowskie wyliczenia. Elementy Członkowskie mogą być połączone przy użyciu operatorów bitowych.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> zdarzeń. Ten raport pomaga dowiesz się, gdy zdarzenie występuje i mogą pomóc w debugowaniu.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.ListBox> o nazwie `ListBox1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#153](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#153)]
 [!code-vb[System.Windows.Forms.EventExamples#153](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#153)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DrawItemState" />
      </Docs>
    </Member>
  </Members>
</Type>