<Type Name="DrawItemEventArgs" FullName="System.Windows.Forms.DrawItemEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8ee3e571a9e0cba7bca9a0708dd7191c9b1e5f90" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69189595" /></Metadata><TypeSignature Language="C#" Value="public class DrawItemEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DrawItemEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DrawItemEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DrawItemEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DrawItemEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DrawItemEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Dostarcza dane dla <see langword="DrawItem" /> zdarzenia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest wywoływane przez elementy sterujące rysowania przez właściciela, takie <xref:System.Windows.Forms.ListBox> jak kontrolki i <xref:System.Windows.Forms.ComboBox>. `DrawItem` Zawiera wszystkie informacje, które są niezbędne, aby użytkownik maluje określony element, łącznie z indeksem <xref:System.Drawing.Rectangle>elementu, <xref:System.Drawing.Graphics> i, na którym ma zostać wykonane Rysowanie.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób tworzenia elementów rysowanych <xref:System.Windows.Forms.ListBox> przez właściciela. Kod używa <xref:System.Windows.Forms.ListBox.DrawMode%2A> właściwości, aby określić, że rysowane elementy są stałym rozmiarem <xref:System.Windows.Forms.ListBox.DrawItem> i zdarzeniem do przeprowadzenia rysowania każdego elementu w <xref:System.Windows.Forms.ListBox>. Przykładowy kod używa właściwości i metod <xref:System.Windows.Forms.DrawItemEventArgs> klasy przekazaną jako parametr do programu obsługi zdarzeń, aby rysować elementy. W tym przykładzie przyjęto <xref:System.Windows.Forms.ListBox> założenie, że `listBox1` kontrolka o nazwie została dodana do formularza i <xref:System.Windows.Forms.ListBox.DrawItem> że zdarzenie jest obsługiwane przez program obsługi zdarzeń zdefiniowany w przykładowym kodzie. W przykładzie założono również, że elementy zostały dodane do <xref:System.Windows.Forms.ListBox> tekstu "Apple", "pomarańczowa" i "śliwe" w tej kolejności.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DrawItemEventHandler" />
    <altmember cref="T:System.Windows.Forms.ComboBox" />
    <altmember cref="T:System.Windows.Forms.ListBox" />
    <altmember cref="T:System.Windows.Forms.MenuItem" />
    <altmember cref="T:System.Windows.Forms.TabControl" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.DrawItemEventArgs" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawItemEventArgs (System.Drawing.Graphics graphics, System.Drawing.Font font, System.Drawing.Rectangle rect, int index, System.Windows.Forms.DrawItemState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Graphics graphics, class System.Drawing.Font font, valuetype System.Drawing.Rectangle rect, int32 index, valuetype System.Windows.Forms.DrawItemState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawItemEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DrawItemState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawItemEventArgs(System::Drawing::Graphics ^ graphics, System::Drawing::Font ^ font, System::Drawing::Rectangle rect, int index, System::Windows::Forms::DrawItemState state);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DrawItemEventArgs : System.Drawing.Graphics * System.Drawing.Font * System.Drawing.Rectangle * int * System.Windows.Forms.DrawItemState -&gt; System.Windows.Forms.DrawItemEventArgs" Usage="new System.Windows.Forms.DrawItemEventArgs (graphics, font, rect, index, state)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.DrawItemState" />
      </Parameters>
      <Docs>
        <param name="graphics">Powierzchnia <see cref="T:System.Drawing.Graphics" /> , na której należy narysować.</param>
        <param name="font">Do użycia, zazwyczaj <see cref="T:System.Drawing.Font" /> właściwości kontrolki nadrzędnej. <see cref="T:System.Drawing.Font" /></param>
        <param name="rect"><see cref="T:System.Drawing.Rectangle" /> Granice do narysowania w ramach.</param>
        <param name="index">Wartość <see cref="T:System.Windows.Forms.Control.ControlCollection" /> indeksu elementu, który jest rysowany.</param>
        <param name="state"><see cref="T:System.Windows.Forms.DrawItemState" /> Informacje o kontrolce.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.Forms.DrawItemEventArgs" /> klasy dla określonej kontrolki z określoną czcionką, stanem, powierzchnią, na której nastąpi rysowanie i granicami, które mają być narysowane.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawItemEventArgs (System.Drawing.Graphics graphics, System.Drawing.Font font, System.Drawing.Rectangle rect, int index, System.Windows.Forms.DrawItemState state, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Graphics graphics, class System.Drawing.Font font, valuetype System.Drawing.Rectangle rect, int32 index, valuetype System.Windows.Forms.DrawItemState state, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawItemEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DrawItemState,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawItemEventArgs(System::Drawing::Graphics ^ graphics, System::Drawing::Font ^ font, System::Drawing::Rectangle rect, int index, System::Windows::Forms::DrawItemState state, System::Drawing::Color foreColor, System::Drawing::Color backColor);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DrawItemEventArgs : System.Drawing.Graphics * System.Drawing.Font * System.Drawing.Rectangle * int * System.Windows.Forms.DrawItemState * System.Drawing.Color * System.Drawing.Color -&gt; System.Windows.Forms.DrawItemEventArgs" Usage="new System.Windows.Forms.DrawItemEventArgs (graphics, font, rect, index, state, foreColor, backColor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.DrawItemState" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics">Powierzchnia <see cref="T:System.Drawing.Graphics" /> , na której należy narysować.</param>
        <param name="font">Do użycia, zazwyczaj <see cref="T:System.Drawing.Font" /> właściwości kontrolki nadrzędnej. <see cref="T:System.Drawing.Font" /></param>
        <param name="rect"><see cref="T:System.Drawing.Rectangle" /> Granice do narysowania w ramach.</param>
        <param name="index">Wartość <see cref="T:System.Windows.Forms.Control.ControlCollection" /> indeksu elementu, który jest rysowany.</param>
        <param name="state"><see cref="T:System.Windows.Forms.DrawItemState" /> Informacje o kontrolce.</param>
        <param name="foreColor">Pierwszy plan <see cref="T:System.Drawing.Color" /> , za pomocą którego ma zostać narysowany formant.</param>
        <param name="backColor">Tło <see cref="T:System.Drawing.Color" /> , za pomocą którego ma zostać narysowany formant.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.Forms.DrawItemEventArgs" /> klasy dla określonej kontrolki z określoną czcionką, stanem, kolorem pierwszego planu, kolorem tła, powierzchnią do rysowania i granicami, które mają być narysowane.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackColor { System::Drawing::Color get(); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color" Usage="System.Windows.Forms.DrawItemEventArgs.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolor tła rysowanego elementu.</summary>
        <value>Tło <see cref="T:System.Drawing.Color" /> elementu, który jest rysowany.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli stan elementu to <xref:System.Windows.Forms.DrawItemState.Selected?displayProperty=nameWithType> <xref:System.Windows.Forms.DrawItemEventArgs.BackColor%2A> , jest ustawione na <xref:System.Drawing.SystemColors.HighlightText%2A?displayProperty=nameWithType>. Jeśli stan elementu to nie <xref:System.Windows.Forms.DrawItemState.Selected> <xref:System.Windows.Forms.DrawItemEventArgs.BackColor%2A> , właściwość jest ustawiona na <xref:System.Drawing.SystemColors.Window%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportuje wystąpienie <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> zdarzenia. Ten raport pomaga dowiedzieć się, kiedy wystąpi zdarzenie i może pomóc w debugowaniu.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu zawierającego wystąpienie typu <xref:System.Windows.Forms.ListBox> o nazwie. `ListBox1` Następnie upewnij się, że program obsługi zdarzeń jest skojarzony ze <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> zdarzeniem.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#153](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#153)]
 [!code-vb[System.Windows.Forms.EventExamples#153](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#153)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.DrawItemEventArgs.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera prostokąt, który reprezentuje granice rysowanego elementu.</summary>
        <value><see cref="T:System.Drawing.Rectangle" /> Reprezentuje granice elementu, który jest rysowany.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład ilustruje sposób tworzenia elementów rysowanych <xref:System.Windows.Forms.ListBox> przez właściciela. Kod używa <xref:System.Windows.Forms.ListBox.DrawMode%2A> właściwości, aby określić, że rysowane elementy są stałym rozmiarem <xref:System.Windows.Forms.ListBox.DrawItem> i zdarzeniem do przeprowadzenia rysowania każdego elementu w <xref:System.Windows.Forms.ListBox>. Przykładowy kod używa właściwości i metod <xref:System.Windows.Forms.DrawItemEventArgs> klasy przekazaną jako parametr do programu obsługi zdarzeń, aby rysować elementy. W tym przykładzie przyjęto <xref:System.Windows.Forms.ListBox> założenie, że `listBox1` kontrolka o nazwie została dodana do formularza i <xref:System.Windows.Forms.ListBox.DrawItem> że zdarzenie jest obsługiwane przez program obsługi zdarzeń zdefiniowany w przykładowym kodzie. W przykładzie założono również, że elementy zostały dodane do <xref:System.Windows.Forms.ListBox> tekstu "Apple", "pomarańczowa" i "śliwe" w tej kolejności.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawItemEventArgs.Graphics" />
      </Docs>
    </Member>
    <Member MemberName="DrawBackground">
      <MemberSignature Language="C#" Value="public virtual void DrawBackground ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawBackground() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawItemEventArgs.DrawBackground" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DrawBackground ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DrawBackground();" />
      <MemberSignature Language="F#" Value="abstract member DrawBackground : unit -&gt; unit&#xA;override this.DrawBackground : unit -&gt; unit" Usage="drawItemEventArgs.DrawBackground " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rysuje tło w granicach określonych w <see cref="Overload:System.Windows.Forms.DrawItemEventArgs.#ctor" /> konstruktorze i z odpowiednim kolorem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli element jest <xref:System.Windows.Forms.DrawItemState.Selected>rysowany, tło jest rysowane z wyróżnionym tekstem.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób tworzenia elementów rysowanych <xref:System.Windows.Forms.ListBox> przez właściciela. Kod używa <xref:System.Windows.Forms.ListBox.DrawMode%2A> właściwości, aby określić, że rysowane elementy są stałym rozmiarem <xref:System.Windows.Forms.ListBox.DrawItem> i zdarzeniem do przeprowadzenia rysowania każdego elementu w <xref:System.Windows.Forms.ListBox>. Przykładowy kod używa właściwości i metod <xref:System.Windows.Forms.DrawItemEventArgs> klasy przekazaną jako parametr do programu obsługi zdarzeń, aby rysować elementy. W tym przykładzie przyjęto <xref:System.Windows.Forms.ListBox> założenie `listBox1` , że kontrolka o nazwie została dodana <xref:System.Windows.Forms.ListBox.DrawItem> do formularza i że zdarzenie jest obsługiwane przez program obsługi zdarzeń, który jest zdefiniowany w przykładowym kodzie. W przykładzie założono również, że elementy zostały dodane <xref:System.Windows.Forms.ListBox> do tekstu "Apple", "pomarańczowa" i "śliwe" w tej kolejności.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.DrawItemEventArgs.DrawBackground" /> w klasie pochodnej należy pamiętać o <see cref="M:System.Windows.Forms.DrawItemEventArgs.DrawBackground" /> wywołaniu metody klasy bazowej.</para></block>
        <altmember cref="T:System.Windows.Forms.DrawItemState" />
      </Docs>
    </Member>
    <Member MemberName="DrawFocusRectangle">
      <MemberSignature Language="C#" Value="public virtual void DrawFocusRectangle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawFocusRectangle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawItemEventArgs.DrawFocusRectangle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DrawFocusRectangle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DrawFocusRectangle();" />
      <MemberSignature Language="F#" Value="abstract member DrawFocusRectangle : unit -&gt; unit&#xA;override this.DrawFocusRectangle : unit -&gt; unit" Usage="drawItemEventArgs.DrawFocusRectangle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rysuje prostokąt fokusu w granicach określonych w <see cref="Overload:System.Windows.Forms.DrawItemEventArgs.#ctor" /> konstruktorze.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli element <xref:System.Windows.Forms.DrawItemState.Focus>, który jest rysowany, jest rysowany prostokąt fokusu.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób tworzenia elementów rysowanych <xref:System.Windows.Forms.ListBox> przez właściciela. Kod używa <xref:System.Windows.Forms.ListBox.DrawMode%2A> właściwości, aby określić, że rysowane elementy są stałym rozmiarem <xref:System.Windows.Forms.ListBox.DrawItem> i zdarzeniem do przeprowadzenia rysowania każdego elementu w <xref:System.Windows.Forms.ListBox>. Przykładowy kod używa właściwości i metod <xref:System.Windows.Forms.DrawItemEventArgs> klasy przekazaną jako parametr do programu obsługi zdarzeń, aby rysować elementy. W tym przykładzie przyjęto <xref:System.Windows.Forms.ListBox> założenie `listBox1` , że kontrolka o nazwie została dodana <xref:System.Windows.Forms.ListBox.DrawItem> do formularza i że zdarzenie jest obsługiwane przez program obsługi zdarzeń, który jest zdefiniowany w przykładowym kodzie. W przykładzie założono również, że elementy zostały dodane <xref:System.Windows.Forms.ListBox> do tekstu "Apple", "pomarańczowa" i "śliwe" w tej kolejności.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.DrawItemEventArgs.DrawFocusRectangle" /> w klasie pochodnej należy pamiętać o <see cref="M:System.Windows.Forms.DrawItemEventArgs.DrawFocusRectangle" /> wywołaniu metody klasy bazowej.</para></block>
        <altmember cref="T:System.Windows.Forms.DrawItemState" />
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public System.Drawing.Font Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.Font" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font" Usage="System.Windows.Forms.DrawItemEventArgs.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera czcionkę, która jest przypisana do rysowanego elementu.</summary>
        <value><see cref="T:System.Drawing.Font" /> Zostanie przypisany do rysowanego elementu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sugerowana <xref:System.Drawing.Font>, <xref:System.Windows.Forms.Control.Font%2A> zazwyczaj właściwość kontrolki nadrzędnej.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób tworzenia elementów rysowanych <xref:System.Windows.Forms.ListBox> przez właściciela. Kod używa <xref:System.Windows.Forms.ListBox.DrawMode%2A> właściwości, aby określić, że rysowane elementy są stałym rozmiarem <xref:System.Windows.Forms.ListBox.DrawItem> i zdarzeniem do przeprowadzenia rysowania każdego elementu w <xref:System.Windows.Forms.ListBox>. Przykładowy kod używa właściwości i metod <xref:System.Windows.Forms.DrawItemEventArgs> klasy przekazaną jako parametr do programu obsługi zdarzeń, aby rysować elementy. W tym przykładzie przyjęto <xref:System.Windows.Forms.ListBox> założenie `listBox1` , że kontrolka o nazwie została dodana <xref:System.Windows.Forms.ListBox.DrawItem> do formularza i że zdarzenie jest obsługiwane przez program obsługi zdarzeń, który jest zdefiniowany w przykładowym kodzie. W przykładzie założono również, że elementy zostały dodane <xref:System.Windows.Forms.ListBox> do tekstu "Apple", "pomarańczowa" i "śliwe" w tej kolejności.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Font" />
        <altmember cref="P:System.Windows.Forms.Control.Font" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ForeColor { System::Drawing::Color get(); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color" Usage="System.Windows.Forms.DrawItemEventArgs.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolor pierwszego planu rysowanego elementu.</summary>
        <value>Pierwszy plan <see cref="T:System.Drawing.Color" /> elementu, który jest rysowany.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli stan elementu to <xref:System.Windows.Forms.DrawItemState.Selected?displayProperty=nameWithType> <xref:System.Windows.Forms.DrawItemEventArgs.ForeColor%2A> , jest ustawione na <xref:System.Drawing.SystemColors.HighlightText%2A?displayProperty=nameWithType>. Jeśli stan elementu to nie <xref:System.Windows.Forms.DrawItemState.Selected> <xref:System.Windows.Forms.DrawItemEventArgs.ForeColor%2A> , właściwość jest ustawiona na <xref:System.Drawing.SystemColors.WindowText%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportuje wystąpienie <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> zdarzenia. Ten raport pomaga dowiedzieć się, kiedy wystąpi zdarzenie i może pomóc w debugowaniu.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu zawierającego wystąpienie typu <xref:System.Windows.Forms.ListBox> o nazwie. `ListBox1` Następnie upewnij się, że program obsługi zdarzeń jest skojarzony ze <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> zdarzeniem.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#153](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#153)]
 [!code-vb[System.Windows.Forms.EventExamples#153](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#153)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Graphics : System.Drawing.Graphics" Usage="System.Windows.Forms.DrawItemEventArgs.Graphics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera powierzchnię grafiki do rysowania elementu.</summary>
        <value><see cref="T:System.Drawing.Graphics" /> Powierzchnia, na której ma zostać narysowany element.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład ilustruje sposób tworzenia elementów rysowanych <xref:System.Windows.Forms.ListBox> przez właściciela. Kod używa <xref:System.Windows.Forms.ListBox.DrawMode%2A> właściwości, aby określić, że rysowane elementy są stałym rozmiarem <xref:System.Windows.Forms.ListBox.DrawItem> i zdarzeniem do przeprowadzenia rysowania każdego elementu w <xref:System.Windows.Forms.ListBox>. Przykładowy kod używa właściwości i metod <xref:System.Windows.Forms.DrawItemEventArgs> klasy przekazaną jako parametr do programu obsługi zdarzeń, aby rysować elementy. W tym przykładzie przyjęto <xref:System.Windows.Forms.ListBox> założenie `listBox1` , że kontrolka o nazwie została dodana <xref:System.Windows.Forms.ListBox.DrawItem> do formularza i że zdarzenie jest obsługiwane przez program obsługi zdarzeń, który jest zdefiniowany w przykładowym kodzie. W przykładzie założono również, że elementy zostały dodane <xref:System.Windows.Forms.ListBox> do tekstu "Apple", "pomarańczowa" i "śliwe" w tej kolejności.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawItemEventArgs.Bounds" />
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Index : int" Usage="System.Windows.Forms.DrawItemEventArgs.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość indeksu elementu, który jest rysowany.</summary>
        <value>Wartość liczbowa, która reprezentuje <see cref="P:System.Windows.Forms.Control.ControlCollection.Item(System.Int32)" /> wartość rysowanego elementu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość zwraca <xref:System.Windows.Forms.Control.ControlCollection.Item%2A> wartość elementu, który jest rysowany <xref:System.Windows.Forms.Control.ControlCollection?displayProperty=nameWithType>w. Ta właściwość może zwrócić wartość-1, jeśli elementy zostały usunięte z listy.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób tworzenia elementów rysowanych <xref:System.Windows.Forms.ListBox> przez właściciela. Kod używa <xref:System.Windows.Forms.ListBox.DrawMode%2A> właściwości, aby określić, że rysowane elementy są stałym rozmiarem <xref:System.Windows.Forms.ListBox.DrawItem> i zdarzeniem do przeprowadzenia rysowania każdego elementu w <xref:System.Windows.Forms.ListBox>. Przykładowy kod używa właściwości i metod <xref:System.Windows.Forms.DrawItemEventArgs> klasy przekazaną jako parametr do programu obsługi zdarzeń, aby rysować elementy. W tym przykładzie przyjęto <xref:System.Windows.Forms.ListBox> założenie `listBox1` , że kontrolka o nazwie została dodana <xref:System.Windows.Forms.ListBox.DrawItem> do formularza i że zdarzenie jest obsługiwane przez program obsługi zdarzeń, który jest zdefiniowany w przykładowym kodzie. W przykładzie założono również, że elementy zostały dodane <xref:System.Windows.Forms.ListBox> do tekstu "Apple", "pomarańczowa" i "śliwe" w tej kolejności.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.ControlCollection.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DrawItemState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DrawItemState State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As DrawItemState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DrawItemState State { System::Windows::Forms::DrawItemState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Windows.Forms.DrawItemState" Usage="System.Windows.Forms.DrawItemEventArgs.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawItemState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera stan rysowanego elementu.</summary>
        <value><see cref="T:System.Windows.Forms.DrawItemState" /> Reprezentuje stan rysowanego elementu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wartość właściwości może być kombinacją <xref:System.Windows.Forms.DrawItemState> elementów członkowskich wyliczenia. Elementy członkowskie można łączyć za pomocą operatorów bitowych.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportuje wystąpienie <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> zdarzenia. Ten raport pomaga dowiedzieć się, kiedy wystąpi zdarzenie i może pomóc w debugowaniu.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu zawierającego wystąpienie typu <xref:System.Windows.Forms.ListBox> o nazwie. `ListBox1` Następnie upewnij się, że program obsługi zdarzeń jest skojarzony ze <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> zdarzeniem.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#153](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#153)]
 [!code-vb[System.Windows.Forms.EventExamples#153](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#153)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DrawItemState" />
      </Docs>
    </Member>
  </Members>
</Type>
