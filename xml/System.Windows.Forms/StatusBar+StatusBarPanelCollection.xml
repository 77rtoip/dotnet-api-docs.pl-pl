<Type Name="StatusBar+StatusBarPanelCollection" FullName="System.Windows.Forms.StatusBar+StatusBarPanelCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9fd2e79bd7c5383bb0f1898a92c17c74cbc003a7" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69179723" /></Metadata><TypeSignature Language="C#" Value="public class StatusBar.StatusBarPanelCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit StatusBar/StatusBarPanelCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.StatusBar.StatusBarPanelCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class StatusBar.StatusBarPanelCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class StatusBar::StatusBarPanelCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type StatusBar.StatusBarPanelCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje kolekcję paneli w <see cref="T:System.Windows.Forms.StatusBar" /> kontrolce.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa przechowuje panele wyświetlane <xref:System.Windows.Forms.StatusBar>w. <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> Każdy obiekt w kolekcji jest wystąpieniem <xref:System.Windows.Forms.StatusBarPanel> klasy, która definiuje właściwości wyświetlania i zachowania panelu wyświetlanego <xref:System.Windows.Forms.StatusBar>w.  
  
 Istnieje kilka sposobów dodawania paneli do kolekcji. <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A> Metoda umożliwia dodanie jednego panelu do kolekcji. Aby dodać wiele paneli do kolekcji, należy utworzyć tablicę <xref:System.Windows.Forms.StatusBarPanel> obiektów i przypisać ją <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange%2A> do metody. Jeśli chcesz wstawić panel w określonej lokalizacji w kolekcji, możesz użyć <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert%2A> metody. Aby usunąć panele, można użyć <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Remove%2A> metody <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.RemoveAt%2A> lub metody, Jeśli wiesz, gdzie znajduje się panel w kolekcji. Metoda pozwala usunąć wszystkie panele z kolekcji zamiast <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Remove%2A> używać metody do usuwania jednego panelu w danym momencie. <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Clear%2A>  
  
 Oprócz metod i właściwości służących do dodawania i usuwania paneli, <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> dostępne są również metody znajdowania paneli w kolekcji. <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Contains%2A> Metoda pozwala określić, czy panel jest członkiem kolekcji. Gdy wiesz, że panel znajduje się w kolekcji, możesz użyć <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOf%2A> metody, aby określić, gdzie panel znajduje się w kolekcji.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.StatusBar> kontrolkę w formularzu i dodaje dwa <xref:System.Windows.Forms.StatusBarPanel> obiekty. Jeden z <xref:System.Windows.Forms.StatusBarPanel>, o nazwie `panel1`, wyświetla tekst stanu dla aplikacji. Drugi <xref:System.Windows.Forms.StatusBarPanel>, nazwany `panel2`, wyświetla <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A> bieżącą datę i używa właściwości klasy, <xref:System.Windows.Forms.StatusBarPanel> aby wyświetlić bieżącą godzinę. W przykładzie <xref:System.Windows.Forms.StatusBar.ShowPanels%2A> użyto właściwości, aby upewnić się, że panele są wyświetlane zamiast standardowych paneli, a następnie używa <xref:System.Windows.Forms.StatusBar> <xref:System.Windows.Forms.StatusBar.Panels%2A> i właściwość, aby uzyskać <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A> dostęp do metody <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> , aby dodać panele do. W <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A>przykładzie zastosowano również właściwości <xref:System.Windows.Forms.StatusBarPanel.BorderStyle%2A>, <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A>, i <xref:System.Windows.Forms.StatusBarPanel.Text%2A> , aby zainicjować <xref:System.Windows.Forms.StatusBarPanel> obiekty. W tym przykładzie przyjęto założenie, że metoda zdefiniowana w przykładzie jest zdefiniowana i wywoływana z konstruktora <xref:System.Windows.Forms.Form>klasy.  
  
 [!code-cpp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CPP/form1.cpp#1)]
 [!code-csharp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CS/form1.cs#1)]
 [!code-vb[StatusBar and StatusBarPanel Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.StatusBarPanel" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StatusBarPanelCollection (System.Windows.Forms.StatusBar owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.StatusBar owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.#ctor(System.Windows.Forms.StatusBar)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As StatusBar)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StatusBarPanelCollection(System::Windows::Forms::StatusBar ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.StatusBar.StatusBarPanelCollection : System.Windows.Forms.StatusBar -&gt; System.Windows.Forms.StatusBar.StatusBarPanelCollection" Usage="new System.Windows.Forms.StatusBar.StatusBarPanelCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.StatusBar" />
      </Parameters>
      <Docs>
        <param name="owner"><see cref="T:System.Windows.Forms.StatusBar" /> Kontrolka, która zawiera tę kolekcję.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.StatusBar.StatusBarPanelCollection" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie można utworzyć wystąpienia tej klasy bez kojarzenia jej z <xref:System.Windows.Forms.StatusBar> kontrolką.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.StatusBarPanel" /> Dodaje do kolekcji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.StatusBarPanel Add (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.StatusBarPanel Add(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (text As String) As StatusBarPanel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::StatusBarPanel ^ Add(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member Add : string -&gt; System.Windows.Forms.StatusBarPanel&#xA;override this.Add : string -&gt; System.Windows.Forms.StatusBarPanel" Usage="statusBarPanelCollection.Add text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.StatusBarPanel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst dla elementu <see cref="T:System.Windows.Forms.StatusBarPanel" /> , który jest dodawany.</param>
        <summary><see cref="T:System.Windows.Forms.StatusBarPanel" /> Dodaje z określonym tekstem do kolekcji.</summary>
        <returns><see cref="T:System.Windows.Forms.StatusBarPanel" /> Reprezentuje Panel, który został dodany do kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz dodać panele do <xref:System.Windows.Forms.StatusBar> kontrolki, aby wyświetlić więcej niż jeden typ informacji. Ta wersja <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A> metody tworzy nową <xref:System.Windows.Forms.StatusBarPanel> z tekstem określonym w `text` parametrze i dodaje ją do kolekcji. Kolejność, w której panele znajdują się w <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> , przedstawia kolejność, w jakiej panele są wyświetlane <xref:System.Windows.Forms.StatusBar> w formancie. Panele są wyświetlane od lewej do prawej, począwszy od pierwszego panelu w kolekcji. Właściwość kontrolki nie zmienia kolejności, w której <xref:System.Windows.Forms.StatusBar>panele są wyświetlane w. <xref:System.Windows.Forms.StatusBar> <xref:System.Windows.Forms.Control.RightToLeft%2A> Aby wstawić panel na określonej pozycji w kolekcji, użyj <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert%2A> metody. Aby dodać zestaw paneli do kolekcji w ramach jednej operacji, użyj <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.StatusBarPanel" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange(System.Windows.Forms.StatusBarPanel[])" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert(System.Int32,System.Windows.Forms.StatusBarPanel)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (System.Windows.Forms.StatusBarPanel value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(class System.Windows.Forms.StatusBarPanel value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add(System.Windows.Forms.StatusBarPanel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (value As StatusBarPanel) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(System::Windows::Forms::StatusBarPanel ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Windows.Forms.StatusBarPanel -&gt; int&#xA;override this.Add : System.Windows.Forms.StatusBarPanel -&gt; int" Usage="statusBarPanelCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.StatusBarPanel" />
      </Parameters>
      <Docs>
        <param name="value">Reprezentuje Panel, który ma zostać dodany do kolekcji. <see cref="T:System.Windows.Forms.StatusBarPanel" /></param>
        <summary><see cref="T:System.Windows.Forms.StatusBarPanel" /> Dodaje do kolekcji.</summary>
        <returns>Indeks (liczony od zera) elementu w kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz dodać panele do <xref:System.Windows.Forms.StatusBar> kontrolki, aby wyświetlić więcej niż jeden typ informacji. Ta wersja <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A> metody <xref:System.Windows.Forms.StatusBarPanel> dodaje określone w `value` parametrze do kolekcji. Kolejność, w której panele znajdują się w <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> , przedstawia kolejność, w jakiej panele są wyświetlane <xref:System.Windows.Forms.StatusBar> w formancie. Panele są wyświetlane od lewej do prawej, począwszy od pierwszego panelu w kolekcji. Właściwość kontrolki nie zmienia kolejności, w której <xref:System.Windows.Forms.StatusBar>panele są wyświetlane w. <xref:System.Windows.Forms.StatusBar> <xref:System.Windows.Forms.Control.RightToLeft%2A> Aby wstawić panel na określonej pozycji w kolekcji, użyj <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert%2A> metody. Aby dodać zestaw paneli do kolekcji w ramach jednej operacji, użyj <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.StatusBar> kontrolkę w formularzu i dodaje dwa <xref:System.Windows.Forms.StatusBarPanel> obiekty. Jeden z <xref:System.Windows.Forms.StatusBarPanel> obiektów o nazwie `panel1`, wyświetla tekst stanu dla aplikacji. Drugi <xref:System.Windows.Forms.StatusBarPanel>, nazwany `panel2`, wyświetla <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A> bieżącą datę i używa właściwości klasy, <xref:System.Windows.Forms.StatusBarPanel> aby wyświetlić bieżącą godzinę. W przykładzie <xref:System.Windows.Forms.StatusBar.ShowPanels%2A> użyto właściwości, aby upewnić się, że panele są wyświetlane zamiast standardowych paneli, a następnie używa <xref:System.Windows.Forms.StatusBar> <xref:System.Windows.Forms.StatusBar.Panels%2A> i właściwość, aby uzyskać <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A> dostęp do metody <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> , aby dodać panele do. W <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A>przykładzie zastosowano również właściwości <xref:System.Windows.Forms.StatusBarPanel.BorderStyle%2A>, <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A>, i <xref:System.Windows.Forms.StatusBarPanel.Text%2A> , aby zainicjować <xref:System.Windows.Forms.StatusBarPanel> obiekty. W tym przykładzie przyjęto założenie, że metoda zdefiniowana w przykładzie jest zdefiniowana i wywoływana z konstruktora <xref:System.Windows.Forms.Form>klasy.  
  
 [!code-cpp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CPP/form1.cpp#1)]
 [!code-csharp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CS/form1.cs#1)]
 [!code-vb[StatusBar and StatusBarPanel Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Windows.Forms.StatusBarPanel" /> Dodano do <see langword="null" />kolekcji.</exception>
        <exception cref="T:System.ArgumentException">Element nadrzędny <see cref="T:System.Windows.Forms.StatusBarPanel" /> określony <paramref name="value" /> w parametrze nie <see langword="null" />jest.</exception>
        <altmember cref="T:System.Windows.Forms.StatusBarPanel" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange(System.Windows.Forms.StatusBarPanel[])" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert(System.Int32,System.Windows.Forms.StatusBarPanel)" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public virtual void AddRange (System.Windows.Forms.StatusBarPanel[] panels);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRange(class System.Windows.Forms.StatusBarPanel[] panels) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange(System.Windows.Forms.StatusBarPanel[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRange (panels As StatusBarPanel())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRange(cli::array &lt;System::Windows::Forms::StatusBarPanel ^&gt; ^ panels);" />
      <MemberSignature Language="F#" Value="abstract member AddRange : System.Windows.Forms.StatusBarPanel[] -&gt; unit&#xA;override this.AddRange : System.Windows.Forms.StatusBarPanel[] -&gt; unit" Usage="statusBarPanelCollection.AddRange panels" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="panels" Type="System.Windows.Forms.StatusBarPanel[]" />
      </Parameters>
      <Docs>
        <param name="panels">Tablica <see cref="T:System.Windows.Forms.StatusBarPanel" /> obiektów do dodania.</param>
        <summary>Dodaje tablicę <see cref="T:System.Windows.Forms.StatusBarPanel" /> obiektów do kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz dodać panele do <xref:System.Windows.Forms.StatusBar> kontrolki, aby wyświetlić więcej niż jeden typ informacji. Metoda dodaje tablicę obiektów określonych w `panels` parametrze do kolekcji. <xref:System.Windows.Forms.StatusBarPanel> <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange%2A> Wszystkie istniejące panele w kolekcji zostaną usunięte z kolekcji przed wstawieniem nowych paneli. Kolejność, w której panele znajdują się w <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> , przedstawia kolejność, w jakiej panele są wyświetlane <xref:System.Windows.Forms.StatusBar> w formancie. Panele są wyświetlane od lewej do prawej, począwszy od pierwszego panelu w kolekcji. Właściwość kontrolki nie zmienia kolejności, w której <xref:System.Windows.Forms.StatusBar>panele są wyświetlane w. <xref:System.Windows.Forms.StatusBar> <xref:System.Windows.Forms.Control.RightToLeft%2A> Aby dodać jeden <xref:System.Windows.Forms.StatusBarPanel> do kolekcji, <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A> Użyj metody. Aby wstawić panel na określonej pozycji w <xref:System.Windows.Forms.StatusBar> kontrolce (i w tej kolekcji), <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert%2A> Użyj metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Tablica <see cref="T:System.Windows.Forms.StatusBarPanel" /> obiektów dodawanych do kolekcji to <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Forms.StatusBarPanel" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert(System.Int32,System.Windows.Forms.StatusBarPanel)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="statusBarPanelCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa wszystkie elementy z kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po usunięciu paneli z kolekcji wszystkie informacje o usuniętych panelach zostaną utracone. Aby usunąć jeden panel z <xref:System.Windows.Forms.StatusBar>, <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Remove%2A> Użyj metody lub <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.RemoveAt%2A> .  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Remove(System.Windows.Forms.StatusBarPanel)" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.StatusBarPanel panel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.StatusBarPanel panel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Contains(System.Windows.Forms.StatusBarPanel)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (panel As StatusBarPanel) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::StatusBarPanel ^ panel);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Forms.StatusBarPanel -&gt; bool" Usage="statusBarPanelCollection.Contains panel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="panel" Type="System.Windows.Forms.StatusBarPanel" />
      </Parameters>
      <Docs>
        <param name="panel"><see cref="T:System.Windows.Forms.StatusBarPanel" /> Aby zlokalizować w kolekcji.</param>
        <summary>Określa, czy określony panel znajduje się w kolekcji.</summary>
        <returns><see langword="true" />Jeśli panel znajduje się w kolekcji; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Contains%2A> Metoda pozwala określić, czy panel jest członkiem kolekcji. Gdy wiesz, że element znajduje się w kolekcji, możesz użyć <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOf%2A> metody, aby określić, gdzie panel znajduje się w kolekcji.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOf(System.Windows.Forms.StatusBarPanel)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : string -&gt; bool&#xA;override this.ContainsKey : string -&gt; bool" Usage="statusBarPanelCollection.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Nazwa elementu do znalezienia w kolekcji.</param>
        <summary>Określa, czy kolekcja zawiera element <see cref="T:System.Windows.Forms.StatusBarPanel" /> z określonym kluczem.</summary>
        <returns><see langword="true" />Aby wskazać, że kolekcja zawiera <see cref="T:System.Windows.Forms.StatusBarPanel" /> znak z określonym kluczem; <see langword="false" />w przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość odnosi się do klucza dla elementu <xref:System.Windows.Forms.StatusBarPanel> w <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection>. <xref:System.Windows.Forms.StatusBarPanel.Name%2A>  
  
 W porównaniu do klucza nie jest rozróżniana wielkość liter. Jeśli parametr jest lub `null` jest pustym ciągiem, <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.ContainsKey%2A>zwraca `key``false.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę elementów w kolekcji.</summary>
        <value>Liczba <see cref="T:System.Windows.Forms.StatusBarPanel" /> obiektów w kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia określenie liczby paneli w <xref:System.Windows.Forms.StatusBar>. Tej wartości można następnie użyć podczas zapętlenia przez wartości kolekcji i należy podać wiele iteracji, aby wykonać pętlę.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="statusBarPanelCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca moduł wyliczający, który będzie używany do iteracji w kolekcji elementów.</summary>
        <returns><see cref="T:System.Collections.IEnumerator" /> Reprezentuje kolekcję elementów.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.StatusBarPanel panel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.StatusBarPanel panel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOf(System.Windows.Forms.StatusBarPanel)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (panel As StatusBarPanel) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::StatusBarPanel ^ panel);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Forms.StatusBarPanel -&gt; int" Usage="statusBarPanelCollection.IndexOf panel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="panel" Type="System.Windows.Forms.StatusBarPanel" />
      </Parameters>
      <Docs>
        <param name="panel"><see cref="T:System.Windows.Forms.StatusBarPanel" /> Aby zlokalizować w kolekcji.</param>
        <summary>Zwraca indeks w kolekcji określonego panelu.</summary>
        <returns>Indeks (liczony od zera), w którym znajduje się panel w kolekcji; w przeciwnym razie wartość ujemna (-1).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOf%2A> Metoda pozwala określić, gdzie panel znajduje się w kolekcji. Aby określić, czy element znajduje się w kolekcji przed wywołaniem tej metody, użyj <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Contains%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Contains(System.Windows.Forms.StatusBarPanel)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOfKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member IndexOfKey : string -&gt; int&#xA;override this.IndexOfKey : string -&gt; int" Usage="statusBarPanelCollection.IndexOfKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Nazwa <see cref="T:System.Windows.Forms.StatusBarPanel" /> do znalezienia w kolekcji.</param>
        <summary>Zwraca indeks pierwszego wystąpienia <see cref="T:System.Windows.Forms.StatusBarPanel" /> obiektu o określonym kluczu.</summary>
        <returns>Indeks (liczony od zera) pierwszego wystąpienia <see cref="T:System.Windows.Forms.StatusBarPanel" /> z określonym kluczem, jeśli został znaleziony; w przeciwnym razie-1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOfKey%2A> jest wywoływana po raz pierwszy, ostatni zwrócony indeks zostanie sprawdzony pod kątem zgodności z kluczem, a w przypadku braku dopasowania wyszukiwanie rozpocznie się na początku kolekcji.  
  
 Właściwość odnosi się do klucza dla elementu <xref:System.Windows.Forms.StatusBarPanel> w <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection>. <xref:System.Windows.Forms.StatusBarPanel.Name%2A> W porównaniu do klucza nie jest rozróżniana wielkość liter.  
  
 Jeśli parametr jest `null` lub pusty ciąg, <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOfKey%2A> zwraca-1. `key`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (int index, System.Windows.Forms.StatusBarPanel value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, class System.Windows.Forms.StatusBarPanel value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert(System.Int32,System.Windows.Forms.StatusBarPanel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (index As Integer, value As StatusBarPanel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Windows::Forms::StatusBarPanel ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * System.Windows.Forms.StatusBarPanel -&gt; unit&#xA;override this.Insert : int * System.Windows.Forms.StatusBarPanel -&gt; unit" Usage="statusBarPanelCollection.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Windows.Forms.StatusBarPanel" />
      </Parameters>
      <Docs>
        <param name="index">Lokalizacja indeksu (liczony od zera), w którym jest wstawiany panel.</param>
        <param name="value"><see cref="T:System.Windows.Forms.StatusBarPanel" /> Reprezentujący panel do wstawienia.</param>
        <summary>Wstawia określony <see cref="T:System.Windows.Forms.StatusBarPanel" /> do kolekcji o określonym indeksie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz dodać panele do <xref:System.Windows.Forms.StatusBar> kontrolki, aby wyświetlić więcej niż jeden typ informacji. Metoda umożliwia utworzenie nowego <xref:System.Windows.Forms.StatusBarPanel> i wstawienie go w określonej lokalizacji w kolekcji. <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert%2A> Kolejność, w której panele znajdują się w <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> , przedstawia kolejność, w jakiej panele są wyświetlane <xref:System.Windows.Forms.StatusBar> w formancie. Panele są wyświetlane od lewej do prawej, począwszy od pierwszego panelu w kolekcji. Właściwość kontrolki nie zmienia kolejności, w której <xref:System.Windows.Forms.StatusBar>panele są wyświetlane w. <xref:System.Windows.Forms.StatusBar> <xref:System.Windows.Forms.Control.RightToLeft%2A> Aby dodać panel do końca kolekcji, użyj <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A> metody. Aby dodać zestaw paneli do kolekcji w ramach jednej operacji, użyj <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="value" /></exception>
        <exception cref="T:System.ArgumentException">Element nadrzędny <see langword="null" />parametru nie jest. <paramref name="value" /></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość parametru jest mniejsza od zera lub większa od wartości <see cref="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Count" /> właściwości <see cref="T:System.Windows.Forms.StatusBar.StatusBarPanelCollection" /> klasy. <paramref name="index" /></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Właściwość panelu parametru nie jest prawidłową <see cref="T:System.Windows.Forms.StatusBarPanelAutoSize" /> wartością. <paramref name="value" /> <see cref="P:System.Windows.Forms.StatusBarPanel.AutoSize" /></exception>
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange(System.Windows.Forms.StatusBarPanel[])" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.StatusBar.StatusBarPanelCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy ta kolekcja jest tylko do odczytu.</summary>
        <value><see langword="true" />Jeśli ta kolekcja jest tylko do odczytu; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest zawsze `false` dla tej kolekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera lub ustawia element w kolekcji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.StatusBarPanel this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.StatusBarPanel Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As StatusBarPanel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::StatusBarPanel ^ default[int] { System::Windows::Forms::StatusBarPanel ^ get(int index); void set(int index, System::Windows::Forms::StatusBarPanel ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.StatusBarPanel with get, set" Usage="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.StatusBarPanel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeks panelu w kolekcji, który ma zostać pobrany lub ustawiony.</param>
        <summary>Pobiera lub ustawia wartość <see cref="T:System.Windows.Forms.StatusBarPanel" /> o określonym indeksie.</summary>
        <value><see cref="T:System.Windows.Forms.StatusBarPanel" /> Reprezentujący panel znajdujący się w określonym indeksie w kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć tej metody, aby uzyskać dane <xref:System.Windows.Forms.StatusBarPanel> przechowywane w określonej lokalizacji w kolekcji. Aby określić indeks określonego panelu w kolekcji, użyj <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOf%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość parametru jest mniejsza od zera lub większa lub równa wartości <see cref="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Count" /> właściwości <see cref="T:System.Windows.Forms.StatusBar.StatusBarPanelCollection" /> klasy. <paramref name="index" /></exception>
        <exception cref="T:System.ArgumentNullException">Przypisano do <see langword="null" />kolekcji. <see cref="T:System.Windows.Forms.StatusBarPanel" /></exception>
        <altmember cref="T:System.Windows.Forms.StatusBarPanel" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.StatusBarPanel this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.StatusBarPanel Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As StatusBarPanel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::StatusBarPanel ^ default[System::String ^] { System::Windows::Forms::StatusBarPanel ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Windows.Forms.StatusBarPanel" Usage="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.StatusBarPanel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Nazwa elementu do pobrania z kolekcji.</param>
        <summary>Pobiera element z określonym kluczem z kolekcji.</summary>
        <value><see cref="T:System.Windows.Forms.StatusBarPanel" /> Przy użyciu określonego klucza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość odnosi się do klucza dla elementu <xref:System.Windows.Forms.StatusBarPanel> w <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection>. <xref:System.Windows.Forms.StatusBarPanel.Name%2A>  
  
 W porównaniu do klucza nie jest rozróżniana wielkość liter. Jeśli parametr jest lub `null` jest pustym ciągiem, <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Item%2A>zwraca `key``null.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (System.Windows.Forms.StatusBarPanel value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class System.Windows.Forms.StatusBarPanel value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Remove(System.Windows.Forms.StatusBarPanel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (value As StatusBarPanel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Windows::Forms::StatusBarPanel ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Windows.Forms.StatusBarPanel -&gt; unit&#xA;override this.Remove : System.Windows.Forms.StatusBarPanel -&gt; unit" Usage="statusBarPanelCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.StatusBarPanel" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Windows.Forms.StatusBarPanel" /> Reprezentuje Panel, który ma zostać usunięty z kolekcji.</param>
        <summary>Usuwa określony <see cref="T:System.Windows.Forms.StatusBarPanel" /> z kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po usunięciu panelu z listy indeksy zmieniają się dla kolejnych elementów w kolekcji. Wszystkie informacje o usuniętym panelu są usuwane. Za pomocą tej metody można usunąć konkretny panel z programu <xref:System.Windows.Forms.StatusBar> , określając wartość rzeczywistą <xref:System.Windows.Forms.StatusBarPanel> do usunięcia z kolekcji. Aby określić indeks panelu do usunięcia zamiast samego panelu, użyj <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.RemoveAt%2A> metody. Aby usunąć wszystkie panele z kolekcji, użyj <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Clear%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Przypisany do parametru to<see langword="null" />. <paramref name="value" /> <see cref="T:System.Windows.Forms.StatusBarPanel" /></exception>
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="statusBarPanelCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks elementu, który ma zostać usunięty.</param>
        <summary><see cref="T:System.Windows.Forms.StatusBarPanel" /> Usuwa lokalizację znajdującą się w określonym indeksie w kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po usunięciu panelu z kolekcji indeksy zmieniają się dla kolejnych paneli w kolekcji. Wszystkie informacje o usuniętym panelu są usuwane. Możesz użyć tej metody, aby usunąć konkretny panel z listy, określając indeks panelu, który ma zostać usunięty z kolekcji. Aby określić panel do usunięcia zamiast indeksu do panelu, użyj <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Remove%2A> metody. Aby usunąć wszystkie panele z <xref:System.Windows.Forms.StatusBar> formantu, <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Clear%2A> Użyj metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość parametru jest mniejsza od zera lub większa lub równa wartości <see cref="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Count" /> właściwości <see cref="T:System.Windows.Forms.StatusBar.StatusBarPanelCollection" /> klasy. <paramref name="index" /></exception>
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Remove(System.Windows.Forms.StatusBarPanel)" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="RemoveByKey">
      <MemberSignature Language="C#" Value="public virtual void RemoveByKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveByKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.RemoveByKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveByKey (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveByKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member RemoveByKey : string -&gt; unit&#xA;override this.RemoveByKey : string -&gt; unit" Usage="statusBarPanelCollection.RemoveByKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Nazwa elementu <see cref="T:System.Windows.Forms.StatusBarPanel" /> do usunięcia z kolekcji.</param>
        <summary><see cref="T:System.Windows.Forms.StatusBarPanel" /> Usuwa z kolekcji z określonym kluczem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość odnosi się do klucza dla elementu <xref:System.Windows.Forms.StatusBarPanel> w <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection>. <xref:System.Windows.Forms.StatusBarPanel.Name%2A>  
  
 W porównaniu do klucza nie jest rozróżniana wielkość liter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (dest As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ dest, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest">Jednowymiarowa tablica, która jest miejscem docelowym elementów skopiowanych z kolekcji. Tablica musi mieć indeksowane zaczynające od zera.</param>
        <param name="index">Indeks (liczony od zera) w tablicy, w której rozpoczyna się kopiowanie.</param>
        <summary><see cref="T:System.Windows.Forms.StatusBar.StatusBarPanelCollection" /> Kopiuje do zgodnej jednowymiarowej tablicy, rozpoczynając od określonego indeksu tablicy docelowej.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="array" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />jest mniejsza od zera.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="array" />jest wielowymiarowych.  
  
—lub— 
Liczba elementów w <see cref="T:System.Windows.Forms.StatusBar.StatusBarPanelCollection" /> elemencie jest większa niż dostępne miejsce od indeksu do <paramref name="array" />końca.</exception>
        <exception cref="T:System.InvalidCastException">Nie można automatycznie rzutować typu w kolekcji na typ <paramref name="array" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy dostęp do kolekcji jest synchronizowany (bezpieczny wątkowo).</summary>
        <value><see langword="false" />we wszystkich przypadkach.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który może służyć do synchronizowania dostępu do kolekcji.</summary>
        <value>Obiekt używany do synchronizowania dostępu do kolekcji.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Reprezentuje Panel, który ma zostać dodany do kolekcji. <see cref="T:System.Windows.Forms.StatusBarPanel" /></param>
        <summary><see cref="T:System.Windows.Forms.StatusBarPanel" /> Dodaje do kolekcji.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <exception cref="T:System.ArgumentException"><paramref name="value" />nie <see cref="T:System.Windows.Forms.StatusBarPanel" />jest.  
  
—lub— 
Element nadrzędny wartości nie <see langword="null" />jest.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object panel);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object panel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (panel As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ panel) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="panel" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="panel"><see cref="T:System.Windows.Forms.StatusBarPanel" /> Aby zlokalizować w kolekcji.</param>
        <summary>Określa, czy określony panel znajduje się w kolekcji.</summary>
        <returns><see langword="true" />Jeśli panel znajduje <see cref="T:System.Windows.Forms.StatusBarPanel" /> się w kolekcji, <see langword="false" />w przeciwnym razie.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object panel);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object panel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (panel As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ panel) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="panel" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="panel"><see cref="T:System.Windows.Forms.StatusBarPanel" /> Aby zlokalizować w kolekcji.</param>
        <summary>Zwraca indeks określonego panelu w kolekcji.</summary>
        <returns>Indeks (liczony od zera) panelu, w przypadku znalezienia w całej kolekcji; w przeciwnym razie-1.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Lokalizacja indeksu (liczony od zera), w którym jest wstawiany panel.</param>
        <param name="value"><see cref="T:System.Windows.Forms.StatusBarPanel" /> Reprezentuje Panel do wstawienia.</param>
        <summary>Wstawia określony <see cref="T:System.Windows.Forms.StatusBarPanel" /> do kolekcji o określonym indeksie.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość parametru index jest mniejsza od zera lub większa od wartości <see langword="Count" /> właściwości.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="value" />nie <see cref="T:System.Windows.Forms.StatusBarPanel" />jest.  
  
—lub— 
Element nadrzędny wartości nie <see langword="null" />jest.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy kolekcja ma stały rozmiar.</summary>
        <value><see langword="false" />we wszystkich przypadkach.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks elementu, który ma zostać pobrany lub skonfigurowany.</param>
        <summary>Pobieranie lub konfigurowanie elementów pod określonym indeksem.</summary>
        <value>Element pod określonym indeksem.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="value" />nie <see cref="T:System.Windows.Forms.StatusBarPanel" />jest.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Reprezentuje Panel, który ma zostać usunięty z kolekcji. <see cref="T:System.Windows.Forms.StatusBarPanel" /></param>
        <summary>Usuwa określony <see cref="T:System.Windows.Forms.StatusBarPanel" /> z kolekcji.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
