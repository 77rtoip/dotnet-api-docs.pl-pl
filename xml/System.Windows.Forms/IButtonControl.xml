<Type Name="IButtonControl" FullName="System.Windows.Forms.IButtonControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ae993dbca2ef2f644c87ea25e6e5899ed13cda4f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36520801" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IButtonControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IButtonControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IButtonControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IButtonControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IButtonControl" />
  <TypeSignature Language="F#" Value="type IButtonControl = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Zapewnia kontrolę do działania, jak przycisk w formularzu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przykład, w której można zaimplementować ten interfejs jest ustawienie domyślne i przetwarzania przycisk Anuluj. Przyciski domyślne są powiadamiani o wprowadzeniu nieprzetworzone klawisz ENTER w formularzu, tak jak będzie można zamknąć okno dialogowe. Podobnie, Anuluj przyciski są powiadamiani o wprowadzi nieprzetworzone klawisz ESC na formularzu, podobnie jak okno dialogowe może być ukryty.  
  
   
  
## Examples  
 Poniższy przykład dziedziczy <xref:System.Windows.Forms.ButtonBase> klasy i implementuje <xref:System.Windows.Forms.IButtonControl> interfejsu. Implementacja jest dodawany do <xref:System.Windows.Forms.IButtonControl.DialogResult%2A> właściwości i <xref:System.Windows.Forms.IButtonControl.NotifyDefault%2A> i <xref:System.Windows.Forms.IButtonControl.PerformClick%2A> metody.  
  
 [!code-cpp[IButtonControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IButtonControl Implementation/CPP/mybutton.cpp#1)]
 [!code-csharp[IButtonControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IButtonControl Implementation/CS/mybutton.cs#1)]
 [!code-vb[IButtonControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IButtonControl Implementation/VB/mybutton.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Implementuje ten interfejs w klasach, które działają jako kontrolek przycisku. Elementy członkowskie tego interfejsu zapewnia funkcje przycisk podstawowe, takie jak dostarczanie <see cref="T:System.Windows.Forms.DialogResult" /> do formularza nadrzędnego lub możliwość wykonywania <see cref="E:System.Windows.Forms.Control.Click" /> zdarzenia lub działania jako przycisk domyślny formularza.</para>
    </block>
    <altmember cref="T:System.Windows.Forms.Button" />
    <altmember cref="T:System.Windows.Forms.Form" />
  </Docs>
  <Members>
    <Member MemberName="DialogResult">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DialogResult DialogResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DialogResult DialogResult" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IButtonControl.DialogResult" />
      <MemberSignature Language="VB.NET" Value="Public Property DialogResult As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DialogResult DialogResult { System::Windows::Forms::DialogResult get(); void set(System::Windows::Forms::DialogResult value); };" />
      <MemberSignature Language="F#" Value="member this.DialogResult : System.Windows.Forms.DialogResult with get, set" Usage="System.Windows.Forms.IButtonControl.DialogResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość zwracanych do formularza nadrzędnego, gdy przycisk zostanie kliknięty.</summary>
        <value>Jeden z <see cref="T:System.Windows.Forms.DialogResult" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy formularz jest wyświetlany jako okno dialogowe przy użyciu <xref:System.Windows.Forms.Form.ShowDialog%2A> — metoda i jeden z jego przycisków po kliknięciu przycisku <xref:System.Windows.Forms.IButtonControl.DialogResult%2A> wartości jest przypisany do formularza <xref:System.Windows.Forms.Form.DialogResult%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład dziedziczy <xref:System.Windows.Forms.ButtonBase> klasy i implementuje <xref:System.Windows.Forms.IButtonControl> interfejsu. Implementacja jest dodawany do <xref:System.Windows.Forms.IButtonControl.DialogResult%2A> właściwości i <xref:System.Windows.Forms.IButtonControl.NotifyDefault%2A> i <xref:System.Windows.Forms.IButtonControl.PerformClick%2A> metody.  
  
 [!code-cpp[IButtonControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IButtonControl Implementation/CPP/mybutton.cpp#1)]
 [!code-csharp[IButtonControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IButtonControl Implementation/CS/mybutton.cs#1)]
 [!code-vb[IButtonControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IButtonControl Implementation/VB/mybutton.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.AcceptButton" />
        <altmember cref="P:System.Windows.Forms.Form.CancelButton" />
        <altmember cref="P:System.Windows.Forms.Form.DialogResult" />
      </Docs>
    </Member>
    <Member MemberName="NotifyDefault">
      <MemberSignature Language="C#" Value="public void NotifyDefault (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyDefault(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IButtonControl.NotifyDefault(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub NotifyDefault (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NotifyDefault(bool value);" />
      <MemberSignature Language="F#" Value="abstract member NotifyDefault : bool -&gt; unit" Usage="iButtonControl.NotifyDefault value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <see langword="true" /> Jeśli formant zachowania w przypadku jako przycisk domyślny; w przeciwnym razie <see langword="false" />.</param>
        <summary>Powiadamia formantu, czy przycisk domyślny jest tak, aby jej wygląd i zachowanie jest dostosowana.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana przez formularz nadrzędny, aby formant przycisk domyślny. Przyciski domyślne są ustawiane mają bardzo grubość obramowania.  
  
   
  
## Examples  
 Poniższy przykład dziedziczy <xref:System.Windows.Forms.ButtonBase> klasy i implementuje <xref:System.Windows.Forms.IButtonControl> interfejsu. Implementacja jest dodawany do <xref:System.Windows.Forms.IButtonControl.DialogResult%2A> właściwości i <xref:System.Windows.Forms.IButtonControl.NotifyDefault%2A> i <xref:System.Windows.Forms.IButtonControl.PerformClick%2A> metody.  
  
 [!code-cpp[IButtonControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IButtonControl Implementation/CPP/mybutton.cpp#1)]
 [!code-csharp[IButtonControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IButtonControl Implementation/CS/mybutton.cs#1)]
 [!code-vb[IButtonControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IButtonControl Implementation/VB/mybutton.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformClick">
      <MemberSignature Language="C#" Value="public void PerformClick ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PerformClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IButtonControl.PerformClick" />
      <MemberSignature Language="VB.NET" Value="Public Sub PerformClick ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PerformClick();" />
      <MemberSignature Language="F#" Value="abstract member PerformClick : unit -&gt; unit" Usage="iButtonControl.PerformClick " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Generuje <see cref="E:System.Windows.Forms.Control.Click" /> zdarzeń dla formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana dla przycisku, który ma fokus, lub przycisk domyślny (Jeśli żaden inny przycisk ma skupić się) po naciśnięciu klawisza ENTER. Ta metoda jest również wywoływana, gdy użytkownik naciśnie klawisz ESC, jeśli przycisku jest ustawiony jako przycisk Anuluj.  
  
   
  
## Examples  
 Poniższy przykład dziedziczy <xref:System.Windows.Forms.ButtonBase> klasy i implementuje <xref:System.Windows.Forms.IButtonControl> interfejsu. Implementacja jest dodawany do <xref:System.Windows.Forms.IButtonControl.DialogResult%2A> właściwości i <xref:System.Windows.Forms.IButtonControl.NotifyDefault%2A> i <xref:System.Windows.Forms.IButtonControl.PerformClick%2A> metody.  
  
 [!code-cpp[IButtonControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IButtonControl Implementation/CPP/mybutton.cpp#1)]
 [!code-csharp[IButtonControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IButtonControl Implementation/CS/mybutton.cs#1)]
 [!code-vb[IButtonControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IButtonControl Implementation/VB/mybutton.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Click" />
      </Docs>
    </Member>
  </Members>
</Type>