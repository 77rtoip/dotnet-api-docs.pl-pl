<Type Name="DataGridViewCellParsingEventArgs" FullName="System.Windows.Forms.DataGridViewCellParsingEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dfff469f8d65f3841a32b5b6f0607f7e7f24a7cc" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69192776" /></Metadata><TypeSignature Language="C#" Value="public class DataGridViewCellParsingEventArgs : System.Windows.Forms.ConvertEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewCellParsingEventArgs extends System.Windows.Forms.ConvertEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewCellParsingEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridViewCellParsingEventArgs&#xA;Inherits ConvertEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridViewCellParsingEventArgs : System::Windows::Forms::ConvertEventArgs" />
  <TypeSignature Language="F#" Value="type DataGridViewCellParsingEventArgs = class&#xA;    inherit ConvertEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ConvertEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5347d-101">Dostarcza dane dla <see cref="E:System.Windows.Forms.DataGridView.CellParsing" /> zdarzenia <see cref="T:System.Windows.Forms.DataGridView" /> formantu.</span><span class="sxs-lookup"><span data-stu-id="5347d-101">Provides data for the <see cref="E:System.Windows.Forms.DataGridView.CellParsing" /> event of a <see cref="T:System.Windows.Forms.DataGridView" /> control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5347d-102">Obsłuż <xref:System.Windows.Forms.DataGridView.CellParsing> zdarzenie, aby zapewnić niestandardową konwersję wartości z wartości określonej przez użytkownika do wartości w typie określonym przez właściwość <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> komórki.</span><span class="sxs-lookup"><span data-stu-id="5347d-102">Handle the <xref:System.Windows.Forms.DataGridView.CellParsing> event to provide custom value conversion from a user-specified value to a value in the type specified by the cell <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> property.</span></span>  
  
 <span data-ttu-id="5347d-103">Po obsłudze <xref:System.Windows.Forms.DataGridView.CellParsing> zdarzenia można przekonwertować wartość samodzielnie lub dostosować konwersję domyślną.</span><span class="sxs-lookup"><span data-stu-id="5347d-103">When you handle the <xref:System.Windows.Forms.DataGridView.CellParsing> event, you can convert the value yourself or you can customize the default conversion.</span></span> <span data-ttu-id="5347d-104">Na przykład możesz przekonwertować wartość samodzielnie za pomocą metody Cell <xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A> z wybraną przez Ciebie konwerterami typów.</span><span class="sxs-lookup"><span data-stu-id="5347d-104">For example, you can convert the value yourself using the cell <xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A> method with type converters of your choosing.</span></span> <span data-ttu-id="5347d-105">Alternatywnie można zezwolić na przeanalizowanie wartości przez domyślne konwertery typów, ale zmodyfikować <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>i <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> właściwości obiektu zwróconego przez <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle%2A?displayProperty=nameWithType> właściwość, która jest inicjowana przy użyciu komórki <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> . wartość.</span><span class="sxs-lookup"><span data-stu-id="5347d-105">Alternately, you can let the default type converters parse the value, but modify the <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, and <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> properties of the object returned by the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle%2A?displayProperty=nameWithType> property, which is initialized using the cell <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> property.</span></span>  
  
 <span data-ttu-id="5347d-106">Podczas konwersji wartości należy zamienić początkową, sformatowaną wartość <xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType> właściwości na przekonwertowaną wartość w typie określonym przez właściwość komórki. <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A></span><span class="sxs-lookup"><span data-stu-id="5347d-106">When you convert the value yourself, replace the initial, formatted value of the <xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType> property with the converted value in the type specified by the cell <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> property.</span></span> <span data-ttu-id="5347d-107">Aby wskazać, że nie jest konieczne dalsze analizowanie, ustaw <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A?displayProperty=nameWithType> właściwość na `true`.</span><span class="sxs-lookup"><span data-stu-id="5347d-107">To indicate that no further parsing is necessary, set the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A?displayProperty=nameWithType> property to `true`.</span></span>  
  
 <span data-ttu-id="5347d-108">Po zakończeniu obsługi zdarzeń, jeśli <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> ma `null` lub nie jest <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> prawidłowym typem lub właściwość jest `false`, <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> jest analizowana przy użyciu metody komórki <xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A> z domyślnymi konwerterami typu.</span><span class="sxs-lookup"><span data-stu-id="5347d-108">When the event handler completes, if the <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> is `null` or is not of the correct type, or the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> property is `false`, the <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> is parsed using the cell <xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A> method with default type converters.</span></span> <span data-ttu-id="5347d-109">Domyślna implementacja tej metody analizuje wartość przy użyciu <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>właściwości, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, i <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> w przekazaniu stylu komórki.</span><span class="sxs-lookup"><span data-stu-id="5347d-109">The default implementation of this method parses the value using the <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, and <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> properties of the cell style passed in.</span></span> <span data-ttu-id="5347d-110">Jeśli wartość nie jest równa <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, wartość jest analizowana <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> przy użyciu właściwości i przekazano konwertery typów.</span><span class="sxs-lookup"><span data-stu-id="5347d-110">If the value is not equal to <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, the value is parsed using the <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> property and the type converters passed in.</span></span>  
  
 <span data-ttu-id="5347d-111">Aby dostosować konwersję wartości komórki do sformatowanej wartości na potrzeby wyświetlania, należy obsłużyć <xref:System.Windows.Forms.DataGridView.CellFormatting> zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="5347d-111">To customize the conversion of a cell value into a formatted value for display, handle the <xref:System.Windows.Forms.DataGridView.CellFormatting> event.</span></span>  
  
 <span data-ttu-id="5347d-112">Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5347d-112">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5347d-113">Poniższy przykład kodu demonstruje użycie <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs> , aby sprawdzić poprawność wpisów daty.</span><span class="sxs-lookup"><span data-stu-id="5347d-113">The following code example demonstrates using <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs> to check the validity of date entries.</span></span>  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
    <altmember cref="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)" />
    <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
    <altmember cref="P:System.Windows.Forms.DataGridView.EditMode" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCell.ValueType" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
    <altmember cref="M:System.Windows.Forms.DataGridViewCell.ParseFormattedValue(System.Object,System.Windows.Forms.DataGridViewCellStyle,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter)" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCellParsingEventHandler" />
    <altmember cref="P:System.Windows.Forms.ConvertEventArgs.Value" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.NullValue" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.Format" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.FormatProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewCellParsingEventArgs (int rowIndex, int columnIndex, object value, Type desiredType, System.Windows.Forms.DataGridViewCellStyle inheritedCellStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 rowIndex, int32 columnIndex, object value, class System.Type desiredType, class System.Windows.Forms.DataGridViewCellStyle inheritedCellStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellParsingEventArgs.#ctor(System.Int32,System.Int32,System.Object,System.Type,System.Windows.Forms.DataGridViewCellStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rowIndex As Integer, columnIndex As Integer, value As Object, desiredType As Type, inheritedCellStyle As DataGridViewCellStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridViewCellParsingEventArgs(int rowIndex, int columnIndex, System::Object ^ value, Type ^ desiredType, System::Windows::Forms::DataGridViewCellStyle ^ inheritedCellStyle);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataGridViewCellParsingEventArgs : int * int * obj * Type * System.Windows.Forms.DataGridViewCellStyle -&gt; System.Windows.Forms.DataGridViewCellParsingEventArgs" Usage="new System.Windows.Forms.DataGridViewCellParsingEventArgs (rowIndex, columnIndex, value, desiredType, inheritedCellStyle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="desiredType" Type="System.Type" />
        <Parameter Name="inheritedCellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
      </Parameters>
      <Docs>
        <param name="rowIndex"><span data-ttu-id="5347d-114">Indeks wiersza komórki, która została zmieniona.</span><span class="sxs-lookup"><span data-stu-id="5347d-114">The row index of the cell that was changed.</span></span></param>
        <param name="columnIndex"><span data-ttu-id="5347d-115">Indeks kolumny zmienionej komórki.</span><span class="sxs-lookup"><span data-stu-id="5347d-115">The column index of the cell that was changed.</span></span></param>
        <param name="value"><span data-ttu-id="5347d-116">Nowa wartość.</span><span class="sxs-lookup"><span data-stu-id="5347d-116">The new value.</span></span></param>
        <param name="desiredType"><span data-ttu-id="5347d-117">Typ nowej wartości.</span><span class="sxs-lookup"><span data-stu-id="5347d-117">The type of the new value.</span></span></param>
        <param name="inheritedCellStyle"><span data-ttu-id="5347d-118">Styl zastosowany do komórki, która została zmieniona.</span><span class="sxs-lookup"><span data-stu-id="5347d-118">The style applied to the cell that was changed.</span></span></param>
        <summary><span data-ttu-id="5347d-119">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.DataGridViewCellParsingEventArgs" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="5347d-119">Initializes a new instance of the <see cref="T:System.Windows.Forms.DataGridViewCellParsingEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ValueType" />
        <altmember cref="P:System.Windows.Forms.ConvertEventArgs.Value" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
      </Docs>
    </Member>
    <Member MemberName="ColumnIndex">
      <MemberSignature Language="C#" Value="public int ColumnIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnIndex : int" Usage="System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5347d-120">Pobiera indeks kolumn danych komórki, które wymagają analizy.</span><span class="sxs-lookup"><span data-stu-id="5347d-120">Gets the column index of the cell data that requires parsing.</span></span></summary>
        <value><span data-ttu-id="5347d-121">Indeks kolumny zmienionej komórki.</span><span class="sxs-lookup"><span data-stu-id="5347d-121">The column index of the cell that was changed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5347d-122">Użyj właściwości <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex%2A> , aby uzyskać indeks <xref:System.Windows.Forms.DataGridView.Columns%2A> we właściwości <xref:System.Windows.Forms.DataGridView>.</span><span class="sxs-lookup"><span data-stu-id="5347d-122">Use the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex%2A> property to obtain an index into the <xref:System.Windows.Forms.DataGridView.Columns%2A> property of a <xref:System.Windows.Forms.DataGridView>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5347d-123">Poniższy przykład kodu demonstruje użycie <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex%2A> , aby wykryć, czy zmieniona komórka jest w kolumnie Date.</span><span class="sxs-lookup"><span data-stu-id="5347d-123">The following code example demonstrates using <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex%2A> to discover if the changed cell is in the date column.</span></span>  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.Columns" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
      </Docs>
    </Member>
    <Member MemberName="InheritedCellStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellStyle InheritedCellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle InheritedCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property InheritedCellStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellStyle ^ InheritedCellStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); void set(System::Windows::Forms::DataGridViewCellStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InheritedCellStyle : System.Windows.Forms.DataGridViewCellStyle with get, set" Usage="System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5347d-124">Pobiera lub ustawia styl stosowany do edytowanej komórki.</span><span class="sxs-lookup"><span data-stu-id="5347d-124">Gets or sets the style applied to the edited cell.</span></span></summary>
        <value><span data-ttu-id="5347d-125"><see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> Reprezentuje bieżący styl edytowanej komórki.</span><span class="sxs-lookup"><span data-stu-id="5347d-125">A <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> that represents the current style of the cell being edited.</span></span> <span data-ttu-id="5347d-126">Wartość domyślna to wartość właściwości komórki <see cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" /> .</span><span class="sxs-lookup"><span data-stu-id="5347d-126">The default value is the value of the cell <see cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5347d-127">Za pomocą tej właściwości można określić formatowanie stosowane dla komórki.</span><span class="sxs-lookup"><span data-stu-id="5347d-127">You can use this property to determine the formatting in effect for the cell.</span></span> <span data-ttu-id="5347d-128">Ustawienie tej właściwości lub zmiana właściwości obiektu zwracanego przez tę właściwość nie ma żadnego efektu, <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> `false` chyba że gdy program obsługi zdarzeń zakończy działanie.</span><span class="sxs-lookup"><span data-stu-id="5347d-128">Setting this property or changing the properties of the object that this property returns has no effect unless the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> is `false` when the event handler exits.</span></span> <span data-ttu-id="5347d-129">W takim przypadku <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>,, i <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> właściwości stylu komórki są używane do analizowania wartości komórki.</span><span class="sxs-lookup"><span data-stu-id="5347d-129">In this case, the <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, and <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> properties of the cell style are used to parse the cell value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5347d-130">Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="5347d-130">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="5347d-131">W tym przykładzie program obsługi zdarzeń raportuje wystąpienie <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=nameWithType> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5347d-131">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="5347d-132">Ten raport pomaga dowiedzieć się, kiedy wystąpi zdarzenie i może pomóc w debugowaniu.</span><span class="sxs-lookup"><span data-stu-id="5347d-132">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="5347d-133">Aby zgłosić wiele zdarzeń lub zdarzenia, które występują często, należy rozważyć <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> zamianę <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączenie komunikatu do wielowierszowego <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="5347d-133">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="5347d-134">Aby uruchomić przykładowy kod, wklej go do projektu zawierającego wystąpienie typu <xref:System.Windows.Forms.DataGridView> o nazwie. `DataGridView1`</span><span class="sxs-lookup"><span data-stu-id="5347d-134">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`.</span></span> <span data-ttu-id="5347d-135">Następnie upewnij się, że program obsługi zdarzeń jest skojarzony <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=nameWithType> ze zdarzeniem.</span><span class="sxs-lookup"><span data-stu-id="5347d-135">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#303](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#303)]
 [!code-vb[System.Windows.Forms.EventExamples#303](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#303)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
      </Docs>
    </Member>
    <Member MemberName="ParsingApplied">
      <MemberSignature Language="C#" Value="public bool ParsingApplied { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ParsingApplied" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied" />
      <MemberSignature Language="VB.NET" Value="Public Property ParsingApplied As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ParsingApplied { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ParsingApplied : bool with get, set" Usage="System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5347d-136">Pobiera lub ustawia wartość wskazującą, czy wartość komórki została pomyślnie przeanalizowana.</span><span class="sxs-lookup"><span data-stu-id="5347d-136">Gets or sets a value indicating whether a cell's value has been successfully parsed.</span></span></summary>
        <value><span data-ttu-id="5347d-137"><see langword="true" />Jeśli wartość komórki została pomyślnie przeanalizowana; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="5347d-137"><see langword="true" /> if the cell's value has been successfully parsed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="5347d-138">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5347d-138">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5347d-139"><xref:System.Windows.Forms.DataGridViewCellParsingEventHandler> A<xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> ustawia właściwość, aby wskazać, czy nowa wartość komórki została pomyślnie przeanalizowana i nie jest konieczna żadna kolejna konwersja.</span><span class="sxs-lookup"><span data-stu-id="5347d-139">A <xref:System.Windows.Forms.DataGridViewCellParsingEventHandler> sets the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> property to indicate whether the new cell value was successfully parsed and no further conversion is necessary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5347d-140">Poniższy przykład kodu jest ustawiany <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> na `true` , gdy wartość komórki zostanie pomyślnie przeanalizowana.</span><span class="sxs-lookup"><span data-stu-id="5347d-140">The following code example sets <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> to `true` when the cell's value is successfully parsed.</span></span>  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellParsingEventHandler" />
        <altmember cref="P:System.Windows.Forms.ConvertEventArgs.Value" />
      </Docs>
    </Member>
    <Member MemberName="RowIndex">
      <MemberSignature Language="C#" Value="public int RowIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RowIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RowIndex : int" Usage="System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5347d-141">Pobiera indeks wiersza komórki wymagającej analizy.</span><span class="sxs-lookup"><span data-stu-id="5347d-141">Gets the row index of the cell that requires parsing.</span></span></summary>
        <value><span data-ttu-id="5347d-142">Indeks wiersza komórki, która została zmieniona.</span><span class="sxs-lookup"><span data-stu-id="5347d-142">The row index of the cell that was changed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5347d-143">Użyj właściwości <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex%2A> , aby uzyskać indeks <xref:System.Windows.Forms.DataGridView.Rows%2A> we właściwości <xref:System.Windows.Forms.DataGridView>.</span><span class="sxs-lookup"><span data-stu-id="5347d-143">Use the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex%2A> property to obtain an index into the <xref:System.Windows.Forms.DataGridView.Rows%2A> property of a <xref:System.Windows.Forms.DataGridView>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5347d-144">Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="5347d-144">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="5347d-145">W tym przykładzie program obsługi zdarzeń raportuje wystąpienie <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=nameWithType> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5347d-145">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="5347d-146">Ten raport pomaga dowiedzieć się, kiedy wystąpi zdarzenie i może pomóc w debugowaniu.</span><span class="sxs-lookup"><span data-stu-id="5347d-146">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="5347d-147">Aby zgłosić wiele zdarzeń lub zdarzenia, które występują często, należy rozważyć <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> zamianę <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączenie komunikatu do wielowierszowego <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="5347d-147">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="5347d-148">Aby uruchomić przykładowy kod, wklej go do projektu zawierającego wystąpienie typu <xref:System.Windows.Forms.DataGridView> o nazwie. `DataGridView1`</span><span class="sxs-lookup"><span data-stu-id="5347d-148">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`.</span></span> <span data-ttu-id="5347d-149">Następnie upewnij się, że program obsługi zdarzeń jest skojarzony <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=nameWithType> ze zdarzeniem.</span><span class="sxs-lookup"><span data-stu-id="5347d-149">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#303](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#303)]
 [!code-vb[System.Windows.Forms.EventExamples#303](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#303)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.Rows" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
      </Docs>
    </Member>
  </Members>
</Type>
