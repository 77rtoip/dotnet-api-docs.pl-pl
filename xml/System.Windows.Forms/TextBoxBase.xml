<Type Name="TextBoxBase" FullName="System.Windows.Forms.TextBoxBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="468bca7709c409c2ad62736ff971d8cb214af6a3" /><Meta Name="ms.sourcegitcommit" Value="9cee676b7864fa9dcb91319dcf5c339f3a724fbf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="02/07/2019" /><Meta Name="ms.locfileid" Value="55829279" /></Metadata><TypeSignature Language="C#" Value="public abstract class TextBoxBase : System.Windows.Forms.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TextBoxBase extends System.Windows.Forms.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TextBoxBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextBoxBase&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextBoxBase abstract : System::Windows::Forms::Control" />
  <TypeSignature Language="F#" Value="type TextBoxBase = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultBindingProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("TextChanged")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.TextBoxBaseDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.TextBoxBaseDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.TextBoxBaseDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0a4fd-101">Implementuje podstawowe funkcje wymagane przez formanty tekstu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-101">Implements the basic functionality required by text controls.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-102">Ta klasa implementuje podstawowe funkcje manipulowanie formantami <xref:System.Windows.Forms.TextBox> i <xref:System.Windows.Forms.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-102">This class implements the core features of text manipulation controls, such as <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.RichTextBox>.</span></span> <span data-ttu-id="0a4fd-103">Obejmują one zaznaczonego tekstu **Schowka** funkcjonalności, Tekst wielowierszowy Lepsza obsługa kontroli i wiele zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-103">These include text selection, **Clipboard** functionality, multiline text control support, and many events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fd-104">Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.TextBox>, klasy, aby utworzyć wielowierszowy <xref:System.Windows.Forms.TextBox> kontrolki z pionowe paski przewijania.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-104">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="0a4fd-105">W tym przykładzie również użyto <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, i <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> właściwości, aby wielowierszowym polu tekstowym przydatne do tworzenia dokumentów tekstowych.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-105">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="0a4fd-106">Nie zazwyczaj dziedziczyć z <see cref="T:System.Windows.Forms.TextBoxBase" />.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-106">You do not typically inherit from <see cref="T:System.Windows.Forms.TextBoxBase" />.</span></span> <span data-ttu-id="0a4fd-107">Aby utworzyć własne klasy kontrolki tekstu, dziedziczą z <see cref="T:System.Windows.Forms.TextBox" /> lub <see cref="T:System.Windows.Forms.RichTextBox" />.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-107">To create your own text control class, inherit from <see cref="T:System.Windows.Forms.TextBox" /> or <see cref="T:System.Windows.Forms.RichTextBox" />.</span></span></para></block>
    <altmember cref="T:System.Windows.Forms.TextBox" />
    <altmember cref="T:System.Windows.Forms.RichTextBox" />
  </Docs>
  <Members>
    <Member MemberName="AcceptsTab">
      <MemberSignature Language="C#" Value="public bool AcceptsTab { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsTab" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.AcceptsTab" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsTab As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsTab { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AcceptsTab : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.AcceptsTab" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-108">Pobiera lub ustawia wartość wskazującą, czy naciśnięcie klawisza TAB w typy kontrolek tekstu wielowierszowego pola znak TABULACJI w formancie zamiast przenosząc fokus do następnej kontrolki w kolejności tabulacji.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-108">Gets or sets a value indicating whether pressing the TAB key in a multiline text box control types a TAB character in the control instead of moving the focus to the next control in the tab order.</span></span></summary>
        <value><span data-ttu-id="0a4fd-109"><see langword="true" /> Jeśli użytkownicy mogą wprowadzać kart w wielowierszowym polu tekstowym za pomocą klawisza TAB; <see langword="false" /> Jeśli naciskając klawisz TAB powoduje przeniesienie fokusu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-109"><see langword="true" /> if users can enter tabs in a multiline text box using the TAB key; <see langword="false" /> if pressing the TAB key moves the focus.</span></span> <span data-ttu-id="0a4fd-110">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-110">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-111"><xref:System.Windows.Forms.TextBoxBase.Multiline%2A> Właściwość musi być również `true` można pobrać znak TABULACJI w formancie.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-111">The <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property must also be `true` to get a TAB character in the control.</span></span>  
  
 <span data-ttu-id="0a4fd-112">Jeśli <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> właściwość jest ustawiona na `true`, użytkownik musi nacisnąć klawisze CTRL + TAB, aby przenieść fokus do następnej kontrolki w kolejności tabulacji.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-112">If the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> property is set to `true`, the user must press CTRL+TAB to move the focus to the next control in the tab order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fd-113">Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.TextBox>, klasy, aby utworzyć wielowierszowy <xref:System.Windows.Forms.TextBox> kontrolki z pionowe paski przewijania.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-113">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="0a4fd-114">W tym przykładzie również użyto <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, i <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> właściwości, aby wielowierszowym polu tekstowym przydatne do tworzenia dokumentów tekstowych.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-114">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBox.AcceptsReturn" />
      </Docs>
    </Member>
    <Member MemberName="AcceptsTabChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AcceptsTabChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AcceptsTabChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AcceptsTabChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AcceptsTabChanged;" />
      <MemberSignature Language="F#" Value="member this.AcceptsTabChanged : EventHandler " Usage="member this.AcceptsTabChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-115">Występuje, gdy wartość <see cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" /> właściwości została zmieniona.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-115">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-116">Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="0a4fd-116">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fd-117">Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-117">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0a4fd-118">W tym przykładzie program obsługi zdarzeń raporty w momencie wystąpienia <xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-118">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged> event.</span></span> <span data-ttu-id="0a4fd-119">Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-119">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0a4fd-120">Aby zgłosić na wiele zdarzeń lub zdarzeń, które często występują, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączane wiadomość w wielowierszowym <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-120">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0a4fd-121">Aby uruchomić przykładowy kod, wkleić go do projektu, który zawiera wystąpienie typu, który dziedziczy z <xref:System.Windows.Forms.TextBoxBase>, takich jak <xref:System.Windows.Forms.TextBox> lub <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-121">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="0a4fd-122">Następnie nadaj nazwę wystąpienia `TextBoxBase1` i upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-122">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#241](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#241)]
 [!code-vb[System.Windows.Forms.EventExamples#241](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#241)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" />
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.AppendText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.AppendText : string -&gt; unit" Usage="textBoxBase.AppendText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="0a4fd-123">Tekst, który można dołączyć do bieżącą zawartość pola tekstowego.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-123">The text to append to the current contents of the text box.</span></span></param>
        <summary><span data-ttu-id="0a4fd-124">Dołącza tekst do bieżącego tekst pola tekstowego.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-124">Appends text to the current text of a text box.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-125">Ta metoda dodać tekst do istniejącego tekstu w kontrolce a nie za pomocą operatora łączenia (+) do łączenia tekstu służy do <xref:System.Windows.Forms.TextBoxBase.Text%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-125">You can use this method to add text to the existing text in the control instead of using the concatenation operator (+) to concatenate text to the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fd-126">Poniższy przykład kodu demonstruje sposób używania <xref:System.Windows.Forms.TextBoxBase.AppendText%2A> metody i <xref:System.Windows.Forms.TextBoxBase.TextLength%2A> właściwości, aby skopiować tekst z jednego <xref:System.Windows.Forms.TextBox> do innego.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-126">The following code example demonstrates how to use the <xref:System.Windows.Forms.TextBoxBase.AppendText%2A> method and the <xref:System.Windows.Forms.TextBoxBase.TextLength%2A> property to copy text from one <xref:System.Windows.Forms.TextBox> to another.</span></span> <span data-ttu-id="0a4fd-127">W tym przykładzie wymaga, że dwa <xref:System.Windows.Forms.TextBox> kontrolki o nazwie `textBox1` i `textBox2`, zostały dodane do formularza i że `textBox1` zawiera tekst przypisane do jego <xref:System.Windows.Forms.Control.Text%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-127">This example requires that two <xref:System.Windows.Forms.TextBox> controls named, `textBox1` and `textBox2`, have been added to a form and that `textBox1` has text assigned to its <xref:System.Windows.Forms.Control.Text%2A> property.</span></span>  
  
 [!code-cpp[TextBoxBase.AppendText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TextBoxBase.AppendText/CPP/form1.cpp#1)]
 [!code-csharp[TextBoxBase.AppendText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TextBoxBase.AppendText/CS/form1.cs#1)]
 [!code-vb[TextBoxBase.AppendText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TextBoxBase.AppendText/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
      </Docs>
    </Member>
    <Member MemberName="AutoSize">
      <MemberSignature Language="C#" Value="public override bool AutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.AutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoSize { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSize : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.AutoSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-128">Pobiera lub ustawia wartość wskazującą, czy wysokość formantu automatycznie dostosowuje się po zmianie czcionki, przypisany do kontrolki.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-128">Gets or sets a value indicating whether the height of the control automatically adjusts when the font assigned to the control is changed.</span></span></summary>
        <value><span data-ttu-id="0a4fd-129"><see langword="true" /> Jeśli wysokość formantu automatycznie dostosowuje po zmianie czcionki; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-129"><see langword="true" /> if the height of the control automatically adjusts when the font is changed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0a4fd-130">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-130">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-131">Po ustawieniu <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> właściwości `true` dla <xref:System.Windows.Forms.TextBox>, gdy <xref:System.Windows.Forms.Control.Font%2A> zmian <xref:System.Windows.Forms.TextBox> zwiększa lub zmniejsza <xref:System.Windows.Forms.Control.Height%2A> , aby pomieścić tekst większy lub mniejszy.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-131">When you set the <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> property to `true` for a <xref:System.Windows.Forms.TextBox>, when the <xref:System.Windows.Forms.Control.Font%2A> changes, the <xref:System.Windows.Forms.TextBox> expands or contracts the <xref:System.Windows.Forms.Control.Height%2A> to accommodate the larger or smaller text.</span></span> <span data-ttu-id="0a4fd-132"><xref:System.Windows.Forms.Control.Width%2A> z <xref:System.Windows.Forms.TextBox> nie zmienia się.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-132">The <xref:System.Windows.Forms.Control.Width%2A> of the <xref:System.Windows.Forms.TextBox> does not change.</span></span>  
  
 <span data-ttu-id="0a4fd-133">Jeśli chcesz zmienić rozmiar kontrolki wprowadzania tekstu, możesz użyć <xref:System.Windows.Forms.RichTextBox> kontroli i używać jej <xref:System.Windows.Forms.RichTextBox.ContentsResized> zdarzenie, aby zmienić jego rozmiar.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-133">If you want to change the size of the control as the user enters text, you can use a <xref:System.Windows.Forms.RichTextBox> control and use its <xref:System.Windows.Forms.RichTextBox.ContentsResized> event to change its size.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fd-134">W przykładzie założono, że formularz z dwóch pól tekstowych, dwa przyciski i zdarzenia kliknięcia dla każdego z przycisków.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-134">This example assumes that you have a form with two text boxes, two buttons, and click events for each of the buttons.</span></span> <span data-ttu-id="0a4fd-135">W przykładzie pokazano <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> właściwości, ustawiając dla niej `true` dla jednego pola tekstowego i `false` dla siebie.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-135">The example demonstrates the <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> property by setting it to `true` for one text box and `false` for the other.</span></span> <span data-ttu-id="0a4fd-136">Po kliknięciu przycisku jednego pola tekstowe są wypełnione mniejszy tekst, a po kliknięciu przycisku inne pola tekstowe są wypełnione większego tekstu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-136">When you click one button the text boxes are filled with a smaller text, and when you click the other button the text boxes are filled with larger text.</span></span> <span data-ttu-id="0a4fd-137">Pole tekstowe, które ma <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> równa `true` rozwija wysokość, aby pomieścić większego tekstu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-137">The text box that has <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> set to `true` expands in height to accommodate the larger text.</span></span> <span data-ttu-id="0a4fd-138">Szerokość nie zmienia się.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-138">The width does not change.</span></span>  
  
 [!code-csharp[SystemWindowsFormsAutoSize#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemWindowsFormsAutoSize/CS/Form1.cs#1)]
 [!code-vb[SystemWindowsFormsAutoSize#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemWindowsFormsAutoSize/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AutoSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AutoSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.AutoSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AutoSizeChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoSizeChanged : EventHandler " Usage="member this.AutoSizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-139">To zdarzenie nie jest odpowiednie dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-139">This event is not relevant for this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-140">To zdarzenie nie jest odpowiednie dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-140">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.TextBoxBase.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-501)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-141">Pobiera lub ustawia kolor tła kontrolki.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-141">Gets or sets the background color of the control.</span></span></summary>
        <value><span data-ttu-id="0a4fd-142">A <see cref="T:System.Drawing.Color" /> reprezentujący tła formantu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-142">A <see cref="T:System.Drawing.Color" /> that represents the background of the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-143">Możesz użyć <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> właściwości, aby zmienić kolor tła kontrolki tekstu, aby dopasować do schemat kolorów formularzy.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-143">You can use the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property to change the background color of the text control to blend into the color scheme of your forms.</span></span>  
  
 <span data-ttu-id="0a4fd-144">Aby zmienić kolor tekstu w kontrolce, należy użyć <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-144">To change the color of the text within the control, use the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property.</span></span> <span data-ttu-id="0a4fd-145">Podczas ustawiania <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> właściwości kontrolki tekstu, upewnij się, kolorów, możesz wybrać nie powoduje tekst kontrolki zniknąć.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-145">When setting the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property of your text control, ensure that the color you choose does not cause the text of the control to disappear.</span></span> <span data-ttu-id="0a4fd-146">Na przykład jeśli <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> i <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> właściwości są ustawione na `Color.Black`, tekst do kontrolki pola tekstowego, nie będą widoczne.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-146">For example, if the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> and <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> properties are both set to `Color.Black`, the text within your textbox control will not be visible.</span></span>  
  
 <span data-ttu-id="0a4fd-147">Ta właściwość może być za pośrednictwem informacji Jeśli <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> właściwość <xref:System.Windows.Forms.TextBoxBase> ustawiono `true`.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-147">This property might be over ridden if the <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> property of the <xref:System.Windows.Forms.TextBoxBase> is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImage : System.Drawing.Image with get, set" Usage="System.Windows.Forms.TextBoxBase.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-148">Ta właściwość nie jest odpowiednie dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-148">This property is not relevant for this class.</span></span></summary>
        <value><span data-ttu-id="0a4fd-149">Obraz tła obiektu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-149">The background image for the object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-150">Ta właściwość nie jest odpowiednie dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-150">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageChanged : EventHandler " Usage="member this.BackgroundImageChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-151">Występuje, gdy wartość <see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImage" /> zmiany właściwości.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-151">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImage" /> property changes.</span></span> <span data-ttu-id="0a4fd-152">To zdarzenie nie jest odpowiednie dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-152">This event is not relevant for this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-153">To zdarzenie nie jest odpowiednie dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-153">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayout : System.Windows.Forms.ImageLayout with get, set" Usage="System.Windows.Forms.TextBoxBase.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-154">Ta właściwość nie jest odpowiednie dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-154">This property is not relevant for this class.</span></span></summary>
        <value><span data-ttu-id="0a4fd-155">Jedną z <see cref="T:System.Windows.Forms.ImageLayout" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-155">One of the <see cref="T:System.Windows.Forms.ImageLayout" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-156">Ta właściwość nie jest odpowiednie dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-156">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayoutChanged : EventHandler " Usage="member this.BackgroundImageLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-157">Występuje, gdy wartość <see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout" /> zmiany właściwości.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-157">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout" /> property changes.</span></span> <span data-ttu-id="0a4fd-158">To zdarzenie nie jest odpowiednie dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-158">This event is not relevant for this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-159">To zdarzenie nie jest odpowiednie dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-159">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BorderStyle BorderStyle { System::Windows::Forms::BorderStyle get(); void set(System::Windows::Forms::BorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderStyle : System.Windows.Forms.BorderStyle with get, set" Usage="System.Windows.Forms.TextBoxBase.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-160">Pobiera lub ustawia typ obramowania formantu pola tekstowego.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-160">Gets or sets the border type of the text box control.</span></span></summary>
        <value><span data-ttu-id="0a4fd-161">A <see cref="T:System.Windows.Forms.BorderStyle" /> reprezentujący typ obramowania formantu pola tekstowego.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-161">A <see cref="T:System.Windows.Forms.BorderStyle" /> that represents the border type of the text box control.</span></span> <span data-ttu-id="0a4fd-162">Wartość domyślna to <see langword="Fixed3D" />.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-162">The default is <see langword="Fixed3D" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-163">Możesz użyć <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A> właściwości w celu tworzenia formantów bez obramowania i prostego stylu, oprócz domyślny formant trójwymiarowej.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-163">You can use the <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A> property to create borderless and flat style controls, in addition to the default three-dimensional control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a4fd-164">Klasy pochodnej <xref:System.Windows.Forms.RichTextBox>, nie obsługuje `BorderStyle.FixedSingle` stylu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-164">The derived class, <xref:System.Windows.Forms.RichTextBox>, does not support the `BorderStyle.FixedSingle` style.</span></span> <span data-ttu-id="0a4fd-165">Ten styl spowoduje, że <xref:System.Windows.Forms.BorderStyle> używać `BorderStyle.Fixed3D` zamiast tego stylu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-165">This style will cause the <xref:System.Windows.Forms.BorderStyle> to use the `BorderStyle.Fixed3D` style instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fd-166">Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.TextBox>, klasy, aby utworzyć pole tekstowe, które poprawnie wyświetlić tekst przy użyciu pojedynczego obramowania Arial 20 punktów.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-166">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a text box that can properly display text using 20-point Arial with a single border.</span></span> <span data-ttu-id="0a4fd-167">W tym przykładzie użyto <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> właściwości, aby określić odpowiednią wysokość formantu po czcionki i <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A> został przypisany do kontrolki.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-167">This example uses the <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> property to determine the appropriate height of the control after the font and <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A> have been assigned to the control.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.BorderStyle Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.BorderStyle Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.BorderStyle Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.BorderStyle Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.BorderStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.BorderStyle Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="0a4fd-168">Wartość, która jest poza zakresem prawidłowych wartości dla wyliczenia został przypisany do właściwości.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-168">A value that is not within the range of valid values for the enumeration was assigned to the property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BorderStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BorderStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BorderStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BorderStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BorderStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.BorderStyleChanged : EventHandler " Usage="member this.BorderStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-169">Występuje, gdy wartość <see cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" /> właściwości została zmieniona.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-169">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-170">Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="0a4fd-170">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fd-171">Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-171">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0a4fd-172">W tym przykładzie program obsługi zdarzeń raporty w momencie wystąpienia <xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-172">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged> event.</span></span> <span data-ttu-id="0a4fd-173">Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-173">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0a4fd-174">Aby zgłosić na wiele zdarzeń lub zdarzeń, które często występują, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączane wiadomość w wielowierszowym <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-174">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0a4fd-175">Aby uruchomić przykładowy kod, wkleić go do projektu, który zawiera wystąpienie typu, który dziedziczy z <xref:System.Windows.Forms.TextBoxBase>, takich jak <xref:System.Windows.Forms.TextBox> lub <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-175">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="0a4fd-176">Następnie nadaj nazwę wystąpienia `TextBoxBase1` i upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-176">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#242](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#242)]
 [!code-vb[System.Windows.Forms.EventExamples#242](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#242)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="CanEnableIme">
      <MemberSignature Language="C#" Value="protected override bool CanEnableIme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanEnableIme" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.CanEnableIme" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CanEnableIme As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool CanEnableIme { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanEnableIme : bool" Usage="System.Windows.Forms.TextBoxBase.CanEnableIme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-177">Pobiera wartość wskazującą czy <see cref="P:System.Windows.Forms.Control.ImeMode" /> właściwość można ustawić wartość active, aby włączyć obsługę edytora IME.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-177">Gets a value indicating whether the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property can be set to an active value, to enable IME support.</span></span></summary>
        <value><span data-ttu-id="0a4fd-178"><see langword="false" /> Jeśli <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /> właściwość <see langword="true" /> lub jeśli <see cref="T:System.Windows.Forms.TextBoxBase" /> klasy jest skonfigurowany do używania maska hasło znaku; w przeciwnym razie <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-178"><see langword="false" /> if the <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /> property is <see langword="true" /> or if this <see cref="T:System.Windows.Forms.TextBoxBase" /> class is set to use a password mask character; otherwise, <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUndo">
      <MemberSignature Language="C#" Value="public bool CanUndo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUndo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.CanUndo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanUndo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanUndo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanUndo : bool" Usage="System.Windows.Forms.TextBoxBase.CanUndo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-179">Pobiera wartość wskazującą, czy użytkownik może cofnąć poprzedniej operacji w formancie pola tekstowego.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-179">Gets a value indicating whether the user can undo the previous operation in a text box control.</span></span></summary>
        <value><span data-ttu-id="0a4fd-180"><see langword="true" /> Jeśli użytkownik może cofnąć poprzedniej operacji, które są wykonywane w formancie pola tekstowego; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-180"><see langword="true" /> if the user can undo the previous operation performed in a text box control; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-181">Jeśli ta metoda zwraca `true`, można wywołać <xref:System.Windows.Forms.TextBoxBase.Undo%2A> metodę, aby cofnąć ostatnią operację w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-181">If this method returns `true`, you can call the <xref:System.Windows.Forms.TextBoxBase.Undo%2A> method to undo the last operation in a text box.</span></span> <span data-ttu-id="0a4fd-182">Można użyć tej metody w <xref:System.Windows.Forms.MenuItem.Popup> zdarzenia <xref:System.Windows.Forms.MenuItem>, lub w kodzie, który zarządza stanem przyciski na <xref:System.Windows.Forms.ToolBar> Aby włączyć lub wyłączyć możliwość cofnięcia poprzedniej operacji w formancie pola tekstowego.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-182">You can use this method in the <xref:System.Windows.Forms.MenuItem.Popup> event of a <xref:System.Windows.Forms.MenuItem>, or in code that manages the state of buttons on a <xref:System.Windows.Forms.ToolBar> to enable or disable the ability to undo the previous operation in a text box control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fd-183">Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.TextBox>, klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-183">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="0a4fd-184">Zapewnia <xref:System.Windows.Forms.MenuItem.Click> programy obsługi zdarzeń dla <xref:System.Windows.Forms.MenuItem> obiekty, które wykonują wycinania, kopiowania, wklejania i Cofnij operacje.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-184">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="0a4fd-185">W tym przykładzie wymaga, aby <xref:System.Windows.Forms.TextBox> formantu o nazwie `textBox1` została utworzona.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-185">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.CanUndo Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.CanUndo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.CanUndo Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.CanUndo Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.CanUndo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.CanUndo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="textBoxBase.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a4fd-186">Usuwa cały tekst w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-186">Clears all text from the text box control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-187">Można użyć tej metody, aby wyczyścić zawartość kontrolki zamiast przypisywać <xref:System.Windows.Forms.TextBoxBase.Text%2A> właściwość pusty ciąg.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-187">You can use this method to clear the contents of the control instead of assigning the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property an empty string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fd-188">Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.TextBox>, klasy, aby utworzyć program obsługi zdarzeń dla <xref:System.Windows.Forms.Control.TextChanged> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-188">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create an event handler for the <xref:System.Windows.Forms.Control.TextChanged> event.</span></span> <span data-ttu-id="0a4fd-189">Kod w ramach programu obsługi zdarzeń ogranicza dane do liczb.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-189">The code within the event handler restricts data to numbers.</span></span> <span data-ttu-id="0a4fd-190">Po wprowadzeniu tekstu w kontrolce, kod określa, czy wprowadzony tekst numeru.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-190">After text has been entered in the control, the code determines if the text entered is a number.</span></span> <span data-ttu-id="0a4fd-191">Jeśli tekst nie jest liczbą, kod czyści tekstu z kontrolki i <xref:System.Windows.Forms.MessageBox> jest wyświetlana, aby ostrzec użytkownika, że są akceptowane tylko liczby.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-191">If the text is not a number, the code clears the text from the control and a <xref:System.Windows.Forms.MessageBox> is displayed to alert the user that only numbers are accepted.</span></span> <span data-ttu-id="0a4fd-192">Przykład wymaga, aby `Boolean` zmiennej o nazwie `flag` i <xref:System.Windows.Forms.TextBox> formant nazywany `textBox1` są zdefiniowane poza tę metodę.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-192">The example requires that a `Boolean` variable named `flag` and a <xref:System.Windows.Forms.TextBox> control called `textBox1` are defined outside of this method.</span></span> <span data-ttu-id="0a4fd-193">W tym przykładzie pokazano, jak używać zmiennej flagi, aby uniknąć kaskadowych zdarzenia w <xref:System.Windows.Forms.Control.TextChanged> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-193">This example demonstrates how to use a flag variable to avoid a cascading event in the <xref:System.Windows.Forms.Control.TextChanged> event.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.ClearUndo" />
      </Docs>
    </Member>
    <Member MemberName="ClearUndo">
      <MemberSignature Language="C#" Value="public void ClearUndo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearUndo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ClearUndo" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearUndo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearUndo();" />
      <MemberSignature Language="F#" Value="member this.ClearUndo : unit -&gt; unit" Usage="textBoxBase.ClearUndo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a4fd-194">Usuwa informacje na temat najnowszych operacji z bufora Cofnij pola tekstowego.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-194">Clears information about the most recent operation from the undo buffer of the text box.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-195">Aby uniemożliwić operacji cofania powtarzane, na podstawie stanu aplikacji, można użyć tej metody.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-195">You can use this method to prevent an undo operation from repeating, based on the state of your application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fd-196">Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.TextBox>, klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-196">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="0a4fd-197">Zapewnia <xref:System.Windows.Forms.MenuItem.Click> programy obsługi zdarzeń dla <xref:System.Windows.Forms.MenuItem> obiekty, które wykonują wycinania, kopiowania, wklejania i Cofnij operacje.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-197">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="0a4fd-198">W tym przykładzie wymaga, aby <xref:System.Windows.Forms.TextBox> formantu o nazwie `textBox1` została utworzona.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-198">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : EventHandler " Usage="member this.Click : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-199">Występuje po kliknięciu pola tekstowego.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-199">Occurs when the text box is clicked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-200">Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="0a4fd-200">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fd-201">Poniższy przykład kodu demonstruje sposób obsługi <xref:System.Windows.Forms.TextBoxBase.Click> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-201">The following code example demonstrates how to handle the <xref:System.Windows.Forms.TextBoxBase.Click> event.</span></span> <span data-ttu-id="0a4fd-202">Aby uruchomić przykład, wklej następujący kod w zawierający formularz <xref:System.Windows.Forms.TextBox> formant nazywany TextBox1.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-202">To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.TextBox> control called TextBox1.</span></span> <span data-ttu-id="0a4fd-203">W tym przykładzie wymaga metody obsługi zdarzeń została skojarzona z <xref:System.Windows.Forms.TextBoxBase.Click> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-203">This example requires that the event-handling method has been associated with the <xref:System.Windows.Forms.TextBoxBase.Click> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.TextBoxBaseScrolling#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.TextBoxBaseScrolling#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.TextBoxBaseScrolling#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Copy();" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; unit" Usage="textBoxBase.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a4fd-204">Kopiuje bieżące zaznaczenie w polu tekstowym, aby **Schowka**.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-204">Copies the current selection in the text box to the **Clipboard**.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-205">Tej metody można użyć zamiast <xref:System.Windows.Forms.Clipboard> klasy, aby skopiować tekst w polu tekstowym i umieścić go w **Schowka**.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-205">You can use this method, instead of using the <xref:System.Windows.Forms.Clipboard> class, to copy text in the text box and place it in the **Clipboard**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fd-206">Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.TextBox>, klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-206">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="0a4fd-207">Zapewnia <xref:System.Windows.Forms.MenuItem.Click> programy obsługi zdarzeń dla <xref:System.Windows.Forms.MenuItem> obiekty, które wykonują wycinania, kopiowania, wklejania i Cofnij operacje.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-207">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="0a4fd-208">W tym przykładzie wymaga, aby <xref:System.Windows.Forms.TextBox> formantu o nazwie `textBox1` została utworzona.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-208">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateHandle();" />
      <MemberSignature Language="F#" Value="override this.CreateHandle : unit -&gt; unit" Usage="textBoxBase.CreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a4fd-209">Tworzy dojście dla formantu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-209">Creates a handle for the control.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="0a4fd-210">za działanie z kodem niezarządzanym.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-210">for operating with unmanaged code.</span></span> <span data-ttu-id="0a4fd-211">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="0a4fd-211">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.TextBoxBase.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-212">Pobiera parametry tworzenia wymaganych, po utworzeniu uchwyt formantu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-212">Gets the required creation parameters when the control handle is created.</span></span></summary>
        <value><span data-ttu-id="0a4fd-213">Element <see cref="T:System.Windows.Forms.CreateParams" /> zawierający parametry tworzenia wymaganych, po utworzeniu dojścia do formantu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-213">A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.CreateParams" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public void Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cut();" />
      <MemberSignature Language="F#" Value="member this.Cut : unit -&gt; unit" Usage="textBoxBase.Cut " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a4fd-214">Przenosi bieżące zaznaczenie w polu tekstowym, aby **Schowka**.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-214">Moves the current selection in the text box to the **Clipboard**.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-215">Ta metoda tylko będzie Wytnij tekst z pola tekstowego, jeśli tekst jest zaznaczony w formancie.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-215">This method will only cut text from the text box if text is selected in the control.</span></span> <span data-ttu-id="0a4fd-216">Tej metody można użyć zamiast <xref:System.Windows.Forms.Clipboard> klasy, aby skopiować tekst w polu tekstowym i przenieś ją do **Schowka**.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-216">You can use this method, instead of using the <xref:System.Windows.Forms.Clipboard> class, to copy text in the text box and move it to the **Clipboard**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fd-217">Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.TextBox>, klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-217">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="0a4fd-218">Zapewnia <xref:System.Windows.Forms.MenuItem.Click> programy obsługi zdarzeń dla <xref:System.Windows.Forms.MenuItem> obiekty, które wykonują wycinania, kopiowania, wklejania i Cofnij operacje.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-218">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="0a4fd-219">W tym przykładzie wymaga, aby <xref:System.Windows.Forms.TextBox> formantu o nazwie `textBox1` została utworzona.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-219">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCursor">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.Cursor DefaultCursor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor DefaultCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.DefaultCursor" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::Cursor ^ DefaultCursor { System::Windows::Forms::Cursor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCursor : System.Windows.Forms.Cursor" Usage="System.Windows.Forms.TextBoxBase.DefaultCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-220">Pobiera lub ustawia domyślnego kursora dla formantu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-220">Gets or sets the default cursor for the control.</span></span></summary>
        <value><span data-ttu-id="0a4fd-221">Obiekt typu <see cref="T:System.Windows.Forms.Cursor" /> reprezentujący bieżący kursor domyślny.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-221">An object of type <see cref="T:System.Windows.Forms.Cursor" /> representing the current default cursor.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-222">Zastąp <xref:System.Windows.Forms.TextBoxBase.DefaultCursor%2A> do konfigurowania domyślnego kursora dla kontrolki.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-222">Override <xref:System.Windows.Forms.TextBoxBase.DefaultCursor%2A> to configure a default cursor for your control.</span></span> <span data-ttu-id="0a4fd-223">Jest bardziej wydajne niż ustawienie kursora w Konstruktorze formantu i zapewnia automatyczne obsługę niektórych funkcji projektanta związanych z kursorem.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-223">This is more efficient than setting the cursor in the control's constructor, and gives automatic support for certain cursor-related designer functions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.TextBoxBase.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-224">Pobiera domyślny rozmiar kontrolki.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-224">Gets the default size of the control.</span></span></summary>
        <value><span data-ttu-id="0a4fd-225">Wartość domyślna <see cref="T:System.Drawing.Size" /> formantu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-225">The default <see cref="T:System.Drawing.Size" /> of the control.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.DefaultSize" />
      </Docs>
    </Member>
    <Member MemberName="DeselectAll">
      <MemberSignature Language="C#" Value="public void DeselectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeselectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.DeselectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeselectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeselectAll();" />
      <MemberSignature Language="F#" Value="member this.DeselectAll : unit -&gt; unit" Usage="textBoxBase.DeselectAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a4fd-226">Określa, że wartość <see cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" /> właściwości wynosi zero, tak aby żadne znaki nie są zaznaczone w formancie.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-226">Specifies that the value of the <see cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" /> property is zero so that no characters are selected in the control.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffered">
      <MemberSignature Language="C#" Value="protected override bool DoubleBuffered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoubleBuffered" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.DoubleBuffered" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DoubleBuffered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DoubleBuffered { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DoubleBuffered : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.DoubleBuffered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-227">Pobiera lub ustawia wartość wskazującą, czy kontroli Rysowanie odbywa się w buforze, przed wyświetleniem formantu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-227">Gets or sets a value indicating whether control drawing is done in a buffer before the control is displayed.</span></span> <span data-ttu-id="0a4fd-228">Ta właściwość nie jest odpowiednie dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-228">This property is not relevant for this class.</span></span></summary>
        <value><span data-ttu-id="0a4fd-229"><see langword="true" /> Aby zaimplementować podwójnego buforowania w kontrolce; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-229"><see langword="true" /> to implement double buffering on the control; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-230">Ta właściwość nie jest odpowiednie dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-230">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.TextBoxBase.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-513)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-231">Pobiera lub ustawia kolor pierwszego planu formantu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-231">Gets or sets the foreground color of the control.</span></span></summary>
        <value><span data-ttu-id="0a4fd-232">A <see cref="T:System.Drawing.Color" /> reprezentujący kolor pierwszego planu formantu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-232">A <see cref="T:System.Drawing.Color" /> that represents the control's foreground color.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-233">Możesz użyć <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> właściwości, aby zmienić kolor tekstu w kontrolce, aby dopasować tekst innych kontrolek w formularzu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-233">You can use the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property to change the color of the text within the control to match the text of other controls on your form.</span></span> <span data-ttu-id="0a4fd-234">Ta właściwość umożliwia również wyróżnić pole określonym tekstem, który zawiera nieprawidłową wartość.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-234">You can also use this property to highlight a specific text box that contains an invalid value.</span></span>  
  
 <span data-ttu-id="0a4fd-235">Aby zmienić kolor tła kontrolki, należy użyć <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-235">To change the background color of the control, use the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property.</span></span> <span data-ttu-id="0a4fd-236">Podczas ustawiania <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> właściwości kontrolki tekstu, upewnij się, kolorów, możesz wybrać nie powoduje tekst kontrolki zniknąć.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-236">When setting the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property of your text control, ensure that the color you choose does not cause the text of the control to disappear.</span></span> <span data-ttu-id="0a4fd-237">Na przykład jeśli <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> i <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> właściwości są ustawione na `Color.Black`, tekst do kontrolki pola tekstowego, nie będą widoczne.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-237">For example, if the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> and <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> properties are both set to `Color.Black`, the text within your textbox control will not be visible.</span></span>  
  
 <span data-ttu-id="0a4fd-238">Ta właściwość może być za pośrednictwem informacji Jeśli <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> właściwość <xref:System.Windows.Forms.TextBoxBase> ustawiono `true`.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-238">This property might be over ridden if the <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> property of the <xref:System.Windows.Forms.TextBoxBase> is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="GetCharFromPosition">
      <MemberSignature Language="C#" Value="public virtual char GetCharFromPosition (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetCharFromPosition(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharFromPosition (pt As Point) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual char GetCharFromPosition(System::Drawing::Point pt);" />
      <MemberSignature Language="F#" Value="abstract member GetCharFromPosition : System.Drawing.Point -&gt; char&#xA;override this.GetCharFromPosition : System.Drawing.Point -&gt; char" Usage="textBoxBase.GetCharFromPosition pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="0a4fd-239">Lokalizacja, z którego można wyszukać najbliższy znak.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-239">The location from which to seek the nearest character.</span></span></param>
        <summary><span data-ttu-id="0a4fd-240">Pobiera znak, który jest najbardziej zbliżony do określonej lokalizacji w kontrolce.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-240">Retrieves the character that is closest to the specified location within the control.</span></span></summary>
        <returns><span data-ttu-id="0a4fd-241">Znak w określonej lokalizacji.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-241">The character at the specified location.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-242">Jeśli lokalizacja określona w `pt` parametr jest spoza obszaru klienckiego kontrolki pierwszego znaku w ciągu najbliższego punktu określonego w `pt` jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-242">If the location specified in the `pt` parameter is outside the client area of the control, the first character of the string closest to the point specified in `pt` is returned.</span></span> <span data-ttu-id="0a4fd-243">Ta metoda służy do określenia, jakie znaki są zlokalizowane w pobliżu określonego punktu w kontrolce.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-243">You can use this method to determine which characters are located near a specific point within the control.</span></span> <span data-ttu-id="0a4fd-244">Tę wartość można następnie użyć do wykonywania operacji na tekście w tej lokalizacji.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-244">You can then use this value to perform operations on the text at that location.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a4fd-245">Jeśli określonej lokalizacji w `pt` parametr znajduje się po prawej stronie obszaru klienckiego kontrolki, a ostatni znak w ciągu najbliższego punktu określonego w `pt` jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-245">If the specified location in the `pt` parameter is located on the right side of the client area of the control, the last character of the string closest to the point specified in `pt` is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetCharIndexFromPosition">
      <MemberSignature Language="C#" Value="public virtual int GetCharIndexFromPosition (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharIndexFromPosition(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharIndexFromPosition (pt As Point) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharIndexFromPosition(System::Drawing::Point pt);" />
      <MemberSignature Language="F#" Value="abstract member GetCharIndexFromPosition : System.Drawing.Point -&gt; int&#xA;override this.GetCharIndexFromPosition : System.Drawing.Point -&gt; int" Usage="textBoxBase.GetCharIndexFromPosition pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="0a4fd-246">Lokalizacja do wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-246">The location to search.</span></span></param>
        <summary><span data-ttu-id="0a4fd-247">Pobiera indeks znaku najbardziej zbliżona do określonej lokalizacji.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-247">Retrieves the index of the character nearest to the specified location.</span></span></summary>
        <returns><span data-ttu-id="0a4fd-248">Znak liczony od zera indeks w określonej lokalizacji.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-248">The zero-based character index at the specified location.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-249">Metoda ta zwraca indeks znaku, który jest najbardziej zbliżony do pozycji określonej w `pt` parametru.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-249">This method returns the character index that is closest to the position specified in the `pt` parameter.</span></span> <span data-ttu-id="0a4fd-250">Indeks znaków jest liczony od zera indeks tekstem w kontrolce, łącznie ze spacjami.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-250">The character index is a zero-based index of text in the control, including spaces.</span></span> <span data-ttu-id="0a4fd-251">Można użyć tej metody, aby określić, gdzie w tekście, użytkownik ma myszy przez przekazanie współrzędne myszy do tej metody.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-251">You can use this method to determine where in the text the user has the mouse over by passing the mouse coordinates to this method.</span></span> <span data-ttu-id="0a4fd-252">Może to być przydatne, jeśli chcesz wykonywać zadania, gdy użytkownik zatrzyma wskaźnik myszy nad wyrazu w tekście formantu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-252">This can be useful if you want to perform tasks when the user rests the mouse pointer over a word in the text of the control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0a4fd-253">Jeśli określona lokalizacja nie znajduje się w prostokącie klienta formantu lub jest wyższy niż ostatni znak w kontrolce, wartość zwracana jest indeks ostatniego znaku.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-253">If the specified location is not within the client rectangle of the control, or is beyond the last character in the control, the return value is the index of the last character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstCharIndexFromLine">
      <MemberSignature Language="C#" Value="public int GetFirstCharIndexFromLine (int lineNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstCharIndexFromLine(int32 lineNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstCharIndexFromLine (lineNumber As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFirstCharIndexFromLine(int lineNumber);" />
      <MemberSignature Language="F#" Value="member this.GetFirstCharIndexFromLine : int -&gt; int" Usage="textBoxBase.GetFirstCharIndexFromLine lineNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineNumber"><span data-ttu-id="0a4fd-254">Wiersz, dla którego należy pobrać indeks jej pierwszym znakiem.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-254">The line for which to get the index of its first character.</span></span></param>
        <summary><span data-ttu-id="0a4fd-255">Pobiera indeks pierwszego znaku w danym wierszu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-255">Retrieves the index of the first character of a given line.</span></span></summary>
        <returns><span data-ttu-id="0a4fd-256">Liczony od zera indeks pierwszego znaku w określonej linii.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-256">The zero-based index of the first character in the specified line.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-257">Numerację wierszy w polu tekstowym zaczyna się od zera.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-257">Line numbering in the text box starts at zero.</span></span> <span data-ttu-id="0a4fd-258">Jeśli `lineNumber` parametru jest większa niż ostatni wiersz w polu tekstowym <xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> zwraca wartość -1.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-258">If the `lineNumber` parameter is greater than the last line in the text box, <xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> returns -1.</span></span>  
  
 <span data-ttu-id="0a4fd-259"><xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> Zwraca indeks pierwszego znaku fizycznego wiersza.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-259"><xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> returns the first character index of a physical line.</span></span> <span data-ttu-id="0a4fd-260">Fizycznego wiersza jest wyświetlany wiersza, a nie przypisanej linii.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-260">The physical line is the displayed line, not the assigned line.</span></span> <span data-ttu-id="0a4fd-261">Liczba wierszy wyświetlanych może być większa niż liczba przypisanych wiersze z powodu zawijania wierszy.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-261">The number of displayed lines can be greater than the number of assigned lines due to word wrap.</span></span> <span data-ttu-id="0a4fd-262">Na przykład, jeśli przypisujesz dwóch długie wiersze do <xref:System.Windows.Forms.RichTextBox> i ustaw <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> i <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> do `true`, dwa wiersze długo przypisane spowodować cztery fizycznych (lub wyświetlane wiersze).</span><span class="sxs-lookup"><span data-stu-id="0a4fd-262">For example, if you assign two long lines to a <xref:System.Windows.Forms.RichTextBox> control and set <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> to `true`, the two long assigned lines result in four physical (or displayed lines).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0a4fd-263">Wartość <paramref name="lineNumber" /> parametru jest mniejsza niż zero.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-263">The value of the <paramref name="lineNumber" /> parameter is less than zero.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstCharIndexOfCurrentLine">
      <MemberSignature Language="C#" Value="public int GetFirstCharIndexOfCurrentLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstCharIndexOfCurrentLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexOfCurrentLine" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstCharIndexOfCurrentLine () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFirstCharIndexOfCurrentLine();" />
      <MemberSignature Language="F#" Value="member this.GetFirstCharIndexOfCurrentLine : unit -&gt; int" Usage="textBoxBase.GetFirstCharIndexOfCurrentLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a4fd-264">Pobiera indeks pierwszego znaku w bieżącym wierszu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-264">Retrieves the index of the first character of the current line.</span></span></summary>
        <returns><span data-ttu-id="0a4fd-265">Znak liczony od zera indeks w bieżącym wierszu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-265">The zero-based character index in the current line.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLineFromCharIndex">
      <MemberSignature Language="C#" Value="public virtual int GetLineFromCharIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetLineFromCharIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLineFromCharIndex (index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetLineFromCharIndex(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetLineFromCharIndex : int -&gt; int&#xA;override this.GetLineFromCharIndex : int -&gt; int" Usage="textBoxBase.GetLineFromCharIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="0a4fd-266">Pozycja znaku indeksu wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-266">The character index position to search.</span></span></param>
        <summary><span data-ttu-id="0a4fd-267">Pobiera numer wiersza od określonej pozycji znaku w tekście formantu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-267">Retrieves the line number from the specified character position within the text of the control.</span></span></summary>
        <returns><span data-ttu-id="0a4fd-268">Liczony od zera numer wiersza w którym znajduje się indeks znaków.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-268">The zero-based line number in which the character index is located.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-269">Ta metoda umożliwia określenie numer wiersza, w oparciu o indeks znaków określonych w `index` parametru metody.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-269">This method enables you to determine the line number based on the character index specified in the `index` parameter of the method.</span></span> <span data-ttu-id="0a4fd-270">Pierwszy wiersz tekstu w kontrolce zwraca wartość zero.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-270">The first line of text in the control returns the value zero.</span></span> <span data-ttu-id="0a4fd-271"><xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> Metoda zwraca numer wiersza fizycznych w której indeksowanego znak znajduje się w obrębie kontrolki.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-271">The <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> method returns the physical line number where the indexed character is located within the control.</span></span> <span data-ttu-id="0a4fd-272">Na przykład, jeśli część logicznej pierwszy wiersz tekstu w formantu, jest zawijany do następnego wiersza <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> metoda zwraca 1, jeśli znak w indeksie określony znak ma opakowany w drugim wierszu fizycznych.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-272">For example, if a portion of the first logical line of text in the control wraps to the next line, the <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> method returns 1 if the character at the specified character index has wrapped to the second physical line.</span></span> <span data-ttu-id="0a4fd-273">Jeśli <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> ustawiono `false`, nie część wiersza jest zawijany do następnego i metoda zwróci wartość 0 dla indeksu określonego znaku.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-273">If <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> is set to `false`, no portion of the line wraps to the next, and the method returns 0 for the specified character index.</span></span> <span data-ttu-id="0a4fd-274">Ta metoda służy do określenia, która linia indeks znaków specyficznych znajduje się w obrębie.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-274">You can use this method to determine which line a specific character index is located within.</span></span> <span data-ttu-id="0a4fd-275">Na przykład po wywołaniu <xref:System.Windows.Forms.RichTextBox.Find%2A> metodę, aby wyszukać tekst, możesz uzyskać indeks znaków, na którym znajdują się w wynikach wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-275">For example, after calling the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to search for text, you can obtain the character index to where the search results are found.</span></span> <span data-ttu-id="0a4fd-276">Tę metodę można wywołać z indeksem znak zwrócony przez <xref:System.Windows.Forms.RichTextBox.Find%2A> metodę pozwala ustalić, który wiersz wyraz został znaleziony.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-276">You can call this method with the character index returned by the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to determine which line the word was found.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a4fd-277">Jeśli indeks znaków określona w `index` parametru wykracza poza dostępne liczbę wierszy zawartych w kontrolce, ostatni numer wiersza jest zwracany.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-277">If the character index specified in the `index` parameter is beyond the available number of lines contained within the control, the last line number is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetPositionFromCharIndex">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Point GetPositionFromCharIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.Point GetPositionFromCharIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPositionFromCharIndex (index As Integer) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Drawing::Point GetPositionFromCharIndex(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetPositionFromCharIndex : int -&gt; System.Drawing.Point&#xA;override this.GetPositionFromCharIndex : int -&gt; System.Drawing.Point" Usage="textBoxBase.GetPositionFromCharIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="0a4fd-278">Indeks znaków, dla którego można pobrać lokalizacji.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-278">The index of the character for which to retrieve the location.</span></span></param>
        <summary><span data-ttu-id="0a4fd-279">Pobiera lokalizację w kontrolce dla indeksu określonego znaku.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-279">Retrieves the location within the control at the specified character index.</span></span></summary>
        <returns><span data-ttu-id="0a4fd-280">Lokalizacja określony znak w prostokącie klienta formantu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-280">The location of the specified character within the client rectangle of the control.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-281">Ta metoda umożliwia określenie, gdzie w kontrolce indeks znaków specyficznych znajduje się.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-281">This method enables you to determine where in the control a specific character index is located.</span></span> <span data-ttu-id="0a4fd-282">Metoda ta jest przydatna dla zadania, takie jak wyświetlanie skrót menu elementów lub pomocy informacje dla programu word w kontrolce.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-282">You can use this method for such tasks as displaying shortcut menu items or help information for a word in the control.</span></span> <span data-ttu-id="0a4fd-283">Na przykład jeśli chcesz wyświetlić menu opcji użytkownikowi, gdy użytkownik kliknie prawym przyciskiem myszy wyrazu w kontrolce możesz ta metoda służy do określenia pozycji wyrazu w celu poprawnego wyświetlania <xref:System.Windows.Forms.ContextMenu> kontroli.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-283">For example, if you wanted to display a menu of options to the user when the user right clicks on a word in the control, you can use this method to determine the position of the word to properly display a <xref:System.Windows.Forms.ContextMenu> control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="HideSelection">
      <MemberSignature Language="C#" Value="public bool HideSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.HideSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property HideSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HideSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HideSelection : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.HideSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-284">Pobiera lub ustawia wartość wskazującą, czy po utracie fokusu przez formant wyróżnione pozostaje zaznaczony tekst w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-284">Gets or sets a value indicating whether the selected text in the text box control remains highlighted when the control loses focus.</span></span></summary>
        <value><span data-ttu-id="0a4fd-285"><see langword="true" /> Jeśli nie ma zaznaczonego tekstu podświetlony formant pola tekstowego traci fokus; <see langword="false" />, jeśli zaznaczony tekst nie zostanie wyróżniony, po utracie fokusu przez kontrolkę pola tekstowego.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-285"><see langword="true" /> if the selected text does not appear highlighted when the text box control loses focus; <see langword="false" />, if the selected text remains highlighted when the text box control loses focus.</span></span> <span data-ttu-id="0a4fd-286">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-286">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-287">Ta właściwość umożliwia aktualizowanie tekstu wyróżnione w formancie pola tekstowego, a innego formularza lub okna dialogowego ma fokus, takich jak okno dialogowe sprawdzania pisowni.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-287">You can use this property to keep text highlighted in a text box control while another form or a dialog box has focus, such as a spelling checker dialog box.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fd-288">Poniższy przykład kodu demonstruje sposób używania <xref:System.Windows.Forms.TextBoxBase.HideSelection%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-288">The following code example demonstrates how to use the <xref:System.Windows.Forms.TextBoxBase.HideSelection%2A> property.</span></span> <span data-ttu-id="0a4fd-289">Aby uruchomić przykład, wklej następujący kod w formularzu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-289">To run the example, paste the following code in a form.</span></span> <span data-ttu-id="0a4fd-290">Wywołaj `InitializeTextBox` metody w Konstruktorze formularza lub `Load` metody.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-290">Call the `InitializeTextBox` method in the form's constructor or `Load` method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.TextBoxBaseScrolling#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.TextBoxBaseScrolling#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.TextBoxBaseScrolling#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HideSelectionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler HideSelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HideSelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HideSelectionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HideSelectionChanged;" />
      <MemberSignature Language="F#" Value="member this.HideSelectionChanged : EventHandler " Usage="member this.HideSelectionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-291">Występuje, gdy wartość <see cref="P:System.Windows.Forms.TextBoxBase.HideSelection" /> właściwości została zmieniona.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-291">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.HideSelection" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-292">Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="0a4fd-292">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fd-293">Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-293">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0a4fd-294">W tym przykładzie program obsługi zdarzeń raporty w momencie wystąpienia <xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-294">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged> event.</span></span> <span data-ttu-id="0a4fd-295">Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-295">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0a4fd-296">Aby zgłosić na wiele zdarzeń lub zdarzeń, które często występują, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączane wiadomość w wielowierszowym <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-296">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0a4fd-297">Aby uruchomić przykładowy kod, wkleić go do projektu, który zawiera wystąpienie typu, który dziedziczy z <xref:System.Windows.Forms.TextBoxBase>, takich jak <xref:System.Windows.Forms.TextBox> lub <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-297">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="0a4fd-298">Następnie nadaj nazwę wystąpienia `TextBoxBase1` i upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-298">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#245](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#245)]
 [!code-vb[System.Windows.Forms.EventExamples#245](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#245)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.HideSelection" />
      </Docs>
    </Member>
    <Member MemberName="ImeModeBase">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.ImeMode ImeModeBase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode ImeModeBase" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.ImeModeBase" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property ImeModeBase As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::ImeMode ImeModeBase { System::Windows::Forms::ImeMode get(); void set(System::Windows::Forms::ImeMode value); };" />
      <MemberSignature Language="F#" Value="member this.ImeModeBase : System.Windows.Forms.ImeMode with get, set" Usage="System.Windows.Forms.TextBoxBase.ImeModeBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-299">Pobiera lub ustawia tryb Input Method Editor (IME) kontrolki.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-299">Gets or sets the Input Method Editor (IME) mode of a control.</span></span></summary>
        <value><span data-ttu-id="0a4fd-300">Tryb IME formantu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-300">The IME mode of the control.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.ImeMode" />
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.IsInputKey : System.Windows.Forms.Keys -&gt; bool" Usage="textBoxBase.IsInputKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="0a4fd-301">Jedna z wartości kluczy.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-301">One of the Keys value.</span></span></param>
        <summary><span data-ttu-id="0a4fd-302">Określa, czy określony klucz jest klawiszem danych wejściowych lub specjalnego klucza, który wymaga przetwarzania wstępnego.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-302">Determines whether the specified key is an input key or a special key that requires preprocessing.</span></span></summary>
        <returns><span data-ttu-id="0a4fd-303"><see langword="true" /> Jeśli określony klucz jest kluczem danych wejściowych; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-303"><see langword="true" /> if the specified key is an input key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-304"><xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> Metoda zwraca `true` podczas `keyData` zawiera parametr <xref:System.Windows.Forms.Keys.Tab> wartość i <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> właściwość `true`.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-304">The <xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> method returns `true` when the `keyData` parameter includes the <xref:System.Windows.Forms.Keys.Tab> value and the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> property is `true`.</span></span> <span data-ttu-id="0a4fd-305"><xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> Zwraca `false` Jeśli `keyData` zawiera zarówno <xref:System.Windows.Forms.Keys.Tab> i <xref:System.Windows.Forms.Keys.Control>.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-305"><xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> returns `false` if `keyData` contains both <xref:System.Windows.Forms.Keys.Tab> and <xref:System.Windows.Forms.Keys.Control>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Lines">
      <MemberSignature Language="C#" Value="public string[] Lines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Lines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Lines" />
      <MemberSignature Language="VB.NET" Value="Public Property Lines As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ Lines { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Lines : string[] with get, set" Usage="System.Windows.Forms.TextBoxBase.Lines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.StringArrayEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.StringArrayEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.StringArrayEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-306">Pobiera lub ustawia wierszy tekstu w formancie pola tekstowego.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-306">Gets or sets the lines of text in a text box control.</span></span></summary>
        <value><span data-ttu-id="0a4fd-307">Tablica ciągów zawiera tekst w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-307">An array of strings that contains the text in a text box control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-308">Każdy element w tablicy staje się wiersz tekstu w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-308">Each element in the array becomes a line of text in the text box control.</span></span> <span data-ttu-id="0a4fd-309">Jeśli <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> formantu pola tekstowego jest właściwością `true` i znak nowego wiersza, który pojawia się w tekście, tekstu po znaku nowego wiersza zostanie dodany do nowego elementu w tablicy i wyświetlane w osobnym wierszu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-309">If the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property of the text box control is set to `true` and a newline character appears in the text, the text following the newline character is added to a new element in the array and displayed on a separate line.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a4fd-310">Domyślnie Kolekcja wierszy jest tylko do odczytu kopię wierszy w <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-310">By default, the collection of lines is a read-only copy of the lines in the <xref:System.Windows.Forms.TextBox>.</span></span> <span data-ttu-id="0a4fd-311">Aby uzyskać zapisywalnej kolekcji wierszy, należy użyć kodu podobne do następujących: `textBox1.Lines = new string[] { "abcd" };`</span><span class="sxs-lookup"><span data-stu-id="0a4fd-311">To get a writable collection of lines, use code similar to the following: `textBox1.Lines = new string[] { "abcd" };`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fd-312">Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.TextBox>, klasy, aby wyodrębnić wszystkie ciągi tekstowe z wielowierszowym polu tekstowym, a następnie wyświetli je przy użyciu <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-312">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to extract all strings of text from a multiline text box control and displays them using the <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0a4fd-313">W tym przykładzie wymaga, aby <xref:System.Windows.Forms.TextBox> kontrolki została utworzona, o nazwie `textBox1`, i która została wypełniona przy użyciu wierszy tekstu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-313">This example requires that a <xref:System.Windows.Forms.TextBox> control has been created, named `textBox1`, and that it has been filled with lines of text.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.Lines Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Lines Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.Lines Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Lines Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.Lines Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Lines Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Text" />
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public virtual int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLength : int with get, set" Usage="System.Windows.Forms.TextBoxBase.MaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(32767)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-314">Pobiera lub ustawia maksymalną liczbę znaków użytkownika można wpisać lub wkleić w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-314">Gets or sets the maximum number of characters the user can type or paste into the text box control.</span></span></summary>
        <value><span data-ttu-id="0a4fd-315">Liczba znaków, które mogą być wprowadzane w formancie.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-315">The number of characters that can be entered into the control.</span></span> <span data-ttu-id="0a4fd-316">Wartość domyślna to 32767.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-316">The default is 32767.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-317">Można użyć tej właściwości, aby ograniczyć długość tekstem wprowadzonym w kontrolce wartości, takich jak kodów pocztowych i numerów telefonów lub aby ograniczyć długość tekstem wprowadzonym, gdy dane znajdują się w bazie danych.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-317">You can use this property to restrict the length of text entered in the control for values such as postal codes and telephone numbers, or to restrict the length of text entered when the data is to be entered in a database.</span></span> <span data-ttu-id="0a4fd-318">Można ograniczyć tekstem wprowadzonym w formancie maksymalnej długości odpowiedniego pola w bazie danych.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-318">You can limit the text entered into the control to the maximum length of the corresponding field in the database.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a4fd-319">W kodzie, można ustawić wartość <xref:System.Windows.Forms.TextBoxBase.Text%2A> właściwość z wartością, która ma długość większą niż wartość określoną przez <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-319">In code, you can set the value of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property to a value that has a length greater than the value specified by the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property.</span></span> <span data-ttu-id="0a4fd-320">Ta właściwość ma wpływ tylko na tekst wprowadzony w formancie w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-320">This property only affects text entered into the control at run time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fd-321">Poniższy przykład kodu używa klasy pochodnej <xref:System.Windows.Forms.TextBox>, aby utworzyć pole tekstowe, które jest używane do akceptowania hasła.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-321">The following code example uses the derived class, <xref:System.Windows.Forms.TextBox>, to create a text box that is used to accept a password.</span></span> <span data-ttu-id="0a4fd-322">W tym przykładzie użyto <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> właściwości, aby zmienić wszystkie znaki wpisane na wielkie litery i <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> właściwości, aby ograniczyć długość hasła do ośmiu znaków.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-322">This example uses the <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> property to change all characters typed to uppercase and the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property to restrict the password length to eight characters.</span></span> <span data-ttu-id="0a4fd-323">W tym przykładzie również użyto <xref:System.Windows.Forms.TextBox.TextAlign%2A> właściwości, aby wyśrodkować hasło w <xref:System.Windows.Forms.TextBox> kontroli.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-323">This example also uses the <xref:System.Windows.Forms.TextBox.TextAlign%2A> property to center the password in the <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.MaxLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.MaxLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.MaxLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.MaxLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.MaxLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.MaxLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0a4fd-324">Wartość przypisana do właściwości jest mniejszy niż 0.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-324">The value assigned to the property is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Modified">
      <MemberSignature Language="C#" Value="public bool Modified { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Modified" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Modified" />
      <MemberSignature Language="VB.NET" Value="Public Property Modified As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Modified { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Modified : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.Modified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-325">Pobiera lub ustawia wartość wskazującą, czy formant pola tekstowego został zmodyfikowany przez użytkownika, ponieważ został utworzony formant lub jego zawartość ostatnio zostały ustawione.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-325">Gets or sets a value that indicates that the text box control has been modified by the user since the control was created or its contents were last set.</span></span></summary>
        <value><span data-ttu-id="0a4fd-326"><see langword="true" /> Jeśli zmodyfikowano zawartość formantu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-326"><see langword="true" /> if the control's contents have been modified; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0a4fd-327">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-327">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-328">Ta właściwość służy do określenia, jeśli użytkownik zmodyfikował zawartość formantu pola tekstowego.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-328">You can use this property to determine if the user has modified the contents of the text box control.</span></span> <span data-ttu-id="0a4fd-329">Można również ustawić tę właściwość w kodzie, aby wskazać, że zmiany zostały wprowadzone do formantu pola tekstowego przez aplikację.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-329">You can also set this property in code to indicate that changes were made to the text box control by the application.</span></span> <span data-ttu-id="0a4fd-330">Ta właściwość może służyć przez sprawdzanie poprawności i metod zapisywania danych do określenia, czy zmiany zostały wprowadzone w polu tekstowym, więc zmiany zawartości można sprawdzić poprawności lub zapisać.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-330">This property can be used by validation and data-saving methods to determine if changes were made in a text box control so the changed contents can be validated or saved.</span></span>  
  
 <span data-ttu-id="0a4fd-331">Jeśli zmienisz <xref:System.Windows.Forms.TextBoxBase.Text%2A> właściwość programowo, <xref:System.Windows.Forms.TextBoxBase.Modified%2A> właściwość wraca do `false`.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-331">If you change the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property programmatically, the <xref:System.Windows.Forms.TextBoxBase.Modified%2A> property reverts to `false`.</span></span> <span data-ttu-id="0a4fd-332">To nie powoduje <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-332">This does not raise the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fd-333">Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.Control.TextChanged> zdarzenie <xref:System.Windows.Forms.TextBox>, klasy, aby określić, czy zawartość <xref:System.Windows.Forms.TextBox> kontroli zmieniły się od czasu formant został wypełniony danymi.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-333">The following code example uses the <xref:System.Windows.Forms.Control.TextChanged> event for a <xref:System.Windows.Forms.TextBox>, a derived class, to determine if the contents of the <xref:System.Windows.Forms.TextBox> control have changed since the control was filled with data.</span></span> <span data-ttu-id="0a4fd-334">W przykładzie wykorzystuje ciąg do przechowywania oryginalnej zawartości formantu i porównuje zawartość <xref:System.Windows.Forms.TextBox> do określenia, czy zawartość uległy zmianie.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-334">The example uses a string to store the original contents of the control and compares it against the contents of the <xref:System.Windows.Forms.TextBox> to determine if the contents have changed.</span></span> <span data-ttu-id="0a4fd-335">Jeśli zawartość zostały zmienione, <xref:System.Windows.Forms.TextBoxBase.Modified%2A> właściwość jest ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-335">If the contents have changed, the <xref:System.Windows.Forms.TextBoxBase.Modified%2A> property is set to `true`.</span></span> <span data-ttu-id="0a4fd-336">W przeciwnym razie jest resetowana do `false`.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-336">Otherwise, it is reset to `false`.</span></span> <span data-ttu-id="0a4fd-337">W tym przykładzie wymaga, aby <xref:System.Windows.Forms.TextBox> formantu o nazwie `textBox1` został utworzony i czy `String` zmiennej o nazwie `originalText` została utworzona w celu przechowywania oryginalny tekst dla <xref:System.Windows.Forms.TextBox> kontroli.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-337">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created and that a `String` variable named `originalText` has been created to store the original text for the <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.Modified Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Modified Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.Modified Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Modified Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.Modified Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Modified Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifiedChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ModifiedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ModifiedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModifiedChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ModifiedChanged;" />
      <MemberSignature Language="F#" Value="member this.ModifiedChanged : EventHandler " Usage="member this.ModifiedChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-338">Występuje, gdy wartość <see cref="P:System.Windows.Forms.TextBoxBase.Modified" /> właściwości została zmieniona.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-338">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.Modified" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-339">Jeśli zmienisz <xref:System.Windows.Forms.TextBoxBase.Text%2A> właściwość programowo, <xref:System.Windows.Forms.TextBoxBase.Modified%2A> właściwość wraca do `false`.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-339">If you change the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property programmatically, the <xref:System.Windows.Forms.TextBoxBase.Modified%2A> property reverts to `false`.</span></span> <span data-ttu-id="0a4fd-340">To nie powoduje <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-340">This does not raise the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.</span></span>  
  
 <span data-ttu-id="0a4fd-341">Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="0a4fd-341">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fd-342">Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-342">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0a4fd-343">W tym przykładzie program obsługi zdarzeń raporty w momencie wystąpienia <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-343">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.</span></span> <span data-ttu-id="0a4fd-344">Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-344">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0a4fd-345">Aby zgłosić na wiele zdarzeń lub zdarzeń, które często występują, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączane wiadomość w wielowierszowym <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-345">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0a4fd-346">Aby uruchomić przykładowy kod, wkleić go do projektu, który zawiera wystąpienie typu, który dziedziczy z <xref:System.Windows.Forms.TextBoxBase>, takich jak <xref:System.Windows.Forms.TextBox> lub <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-346">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="0a4fd-347">Następnie nadaj nazwę wystąpienia `TextBoxBase1` i upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-347">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#246](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#246)]
 [!code-vb[System.Windows.Forms.EventExamples#246](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#246)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Modified" />
      </Docs>
    </Member>
    <Member MemberName="MouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.MouseClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseClick;" />
      <MemberSignature Language="F#" Value="member this.MouseClick : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseClick : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-348">Występuje po kliknięciu formantu przy użyciu myszy.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-348">Occurs when the control is clicked by the mouse.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-349"><xref:System.Windows.Forms.RichTextBox> Formantu nie zgłaszała <xref:System.Windows.Forms.TextBoxBase.Click> kliknięcia prawym przyciskiem myszy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-349">The <xref:System.Windows.Forms.RichTextBox> control does not raise a <xref:System.Windows.Forms.TextBoxBase.Click> event for right clicks.</span></span> <span data-ttu-id="0a4fd-350"><xref:System.Windows.Forms.TextBoxBase.MouseClick> Zdarzeń oferuje równowartość funkcjonalności.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-350">The <xref:System.Windows.Forms.TextBoxBase.MouseClick> event provides the functional equivalent.</span></span>  
  
 <span data-ttu-id="0a4fd-351">Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="0a4fd-351">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fd-352">Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-352">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0a4fd-353">W tym przykładzie program obsługi zdarzeń raporty w momencie wystąpienia <xref:System.Windows.Forms.TextBoxBase.MouseClick> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-353">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.MouseClick> event.</span></span> <span data-ttu-id="0a4fd-354">Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-354">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0a4fd-355">Aby zgłosić na wiele zdarzeń lub zdarzeń, które często występują, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączane wiadomość w wielowierszowym <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-355">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0a4fd-356">Aby uruchomić przykładowy kod, wkleić go do projektu, który zawiera wystąpienie typu, który dziedziczy z <xref:System.Windows.Forms.TextBoxBase>, takich jak <xref:System.Windows.Forms.TextBox> lub <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-356">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="0a4fd-357">Następnie nadaj nazwę wystąpienia `TextBoxBase1` i upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.TextBoxBase.MouseClick> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-357">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.MouseClick> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#244](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#244)]
 [!code-vb[System.Windows.Forms.EventExamples#244](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#244)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiline">
      <MemberSignature Language="C#" Value="public virtual bool Multiline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Multiline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Multiline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Multiline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Multiline { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Multiline : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.Multiline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-358">Pobiera lub ustawia wartość wskazującą, czy jest to w wielowierszowym polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-358">Gets or sets a value indicating whether this is a multiline text box control.</span></span></summary>
        <value><span data-ttu-id="0a4fd-359"><see langword="true" /> Jeśli kontrolka jest w wielowierszowym polu tekstowym; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-359"><see langword="true" /> if the control is a multiline text box control; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0a4fd-360">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-360">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-361">Wielowierszowe pole tekstowe umożliwia wyświetlanie więcej niż jeden wiersz tekstu w kontrolce.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-361">A multiline text box allows you to display more than one line of text in the control.</span></span> <span data-ttu-id="0a4fd-362">Jeśli <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> właściwość jest ustawiona na `true`, tekst wprowadzony w wielowierszowym polu tekstowym jest zawijany do następnego wiersza w formancie.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-362">If the <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> property is set to `true`, text entered into the multiline text box is wrapped to the next line in the control.</span></span> <span data-ttu-id="0a4fd-363">Jeśli <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> właściwość jest ustawiona na `false`, tekst wprowadzony w wielowierszowym polu tekstowym pojawi się w tym samym wierszu, dopóki nie zostanie wprowadzona znak nowego wiersza.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-363">If the <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> property is set to `false`, text entered into the multiline text box control will be displayed on the same line until a newline character is entered.</span></span>  
  
 <span data-ttu-id="0a4fd-364">Następujące może służyć jako znaki nowego wiersza:</span><span class="sxs-lookup"><span data-stu-id="0a4fd-364">The following can be used as newline characters:</span></span>  
  
-   <xref:System.Environment.NewLine%2A?displayProperty=nameWithType>  
  
-   <span data-ttu-id="0a4fd-365">ControlChars.CrLf</span><span class="sxs-lookup"><span data-stu-id="0a4fd-365">ControlChars.CrLf</span></span>  
  
-   <span data-ttu-id="0a4fd-366">vbCrLf (tylko Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0a4fd-366">vbCrLf (Visual Basic only)</span></span>  
  
 <span data-ttu-id="0a4fd-367">Paski przewijania można dodać do pola tekstowego przy użyciu <xref:System.Windows.Forms.TextBox.ScrollBars%2A> właściwość do wyświetlenia pasków przewijania w poziomie lub pionie.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-367">You can add scroll bars to a text box using the <xref:System.Windows.Forms.TextBox.ScrollBars%2A> property to display horizontal and/or vertical scroll bars.</span></span> <span data-ttu-id="0a4fd-368">Dzięki temu użytkownikowi przewijać tekst, który wykracza poza wymiarów kontrolki.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-368">This allows the user to scroll through the text that extends beyond the dimensions of the control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a4fd-369">Ponieważ wartość domyślną <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> właściwość `false`, domyślny rozmiar <xref:System.Windows.Forms.TextBox> będą zgodne z rozmiar czcionki, nawet wtedy, gdy zmieniasz rozmiar <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-369">Because the default value of the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is `false`, the default size of a <xref:System.Windows.Forms.TextBox> will be in accordance with the font size even if you resize the <xref:System.Windows.Forms.TextBox>.</span></span> <span data-ttu-id="0a4fd-370">Aby uzyskać spójny rozmiar dla Twojego <xref:System.Windows.Forms.TextBox>, ustaw jego <xref:System.Windows.Forms.TextBox.Multiline%2A> właściwość `true`.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-370">To get a consistent size for your <xref:System.Windows.Forms.TextBox>, set its <xref:System.Windows.Forms.TextBox.Multiline%2A> property to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a4fd-371">W języku japońskim w systemie operacyjnym, jeśli <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> właściwość jest ustawiona na `true`, ustawiając <xref:System.Windows.Forms.TextBox.PasswordChar%2A> właściwość wyświetli tekst hasła, w związku z tym naruszenie zabezpieczeń systemu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-371">On Japanese operating systems, if the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is set to `true`, setting the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property will display the text of the password, thus compromising system security.</span></span> <span data-ttu-id="0a4fd-372">W związku z tym, w systemach operacyjnych japońskiego, należy ustawić <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> właściwości `false` Jeśli ustawisz <xref:System.Windows.Forms.TextBox.PasswordChar%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-372">Therefore, on Japanese operating systems, set the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property to `false` if you set the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a4fd-373">Ta właściwość jest ustawiona `false` domyślnie wszystkie pochodne klasy, z wyjątkiem produktów <xref:System.Windows.Forms.RichTextBox> kontroli.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-373">This property is set to `false` by default for all derived classes, with the exception of the <xref:System.Windows.Forms.RichTextBox> control.</span></span>  
  
 <span data-ttu-id="0a4fd-374">Aby uzyskać <xref:System.Windows.Forms.RichTextBox> kontroli <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> właściwość ma wpływ na informację określającą, czy kontrolka będzie automatycznie zmieniać rozmiar, w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="0a4fd-374">For a <xref:System.Windows.Forms.RichTextBox> control, the <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> property affects whether or not the control will automatically resize, as follows:</span></span>  
  
-   <span data-ttu-id="0a4fd-375">Jeśli <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType> ustawiono `true` i <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> ustawiono `true`, <xref:System.Windows.Forms.RichTextBox> nie będzie automatycznie rozmiar.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-375">If <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType> is set to `true` and <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> is set to `true`, <xref:System.Windows.Forms.RichTextBox> will not automatically resize.</span></span>  
  
-   <span data-ttu-id="0a4fd-376">Jeśli <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType> ustawiono `true` i <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> ustawiono `false`, <xref:System.Windows.Forms.RichTextBox> będzie automatycznie zmieniać rozmiar.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-376">If <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType> is set to `true` and <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> is set to `false`, <xref:System.Windows.Forms.RichTextBox> will automatically resize.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fd-377">Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.TextBox>, klasy, aby utworzyć wielowierszowy <xref:System.Windows.Forms.TextBox> kontrolki z pionowe paski przewijania.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-377">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="0a4fd-378">W tym przykładzie również użyto <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, i <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> właściwości, aby wielowierszowym polu tekstowym przydatne do tworzenia dokumentów tekstowych.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-378">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Lines" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.WordWrap" />
        <altmember cref="P:System.Windows.Forms.TextBox.ScrollBars" />
      </Docs>
    </Member>
    <Member MemberName="MultilineChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MultilineChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MultilineChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.MultilineChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MultilineChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MultilineChanged;" />
      <MemberSignature Language="F#" Value="member this.MultilineChanged : EventHandler " Usage="member this.MultilineChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-379">Występuje, gdy wartość <see cref="P:System.Windows.Forms.TextBoxBase.Multiline" /> właściwości została zmieniona.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-379">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.Multiline" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-380">Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="0a4fd-380">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fd-381">Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-381">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0a4fd-382">W tym przykładzie program obsługi zdarzeń raporty w momencie wystąpienia <xref:System.Windows.Forms.TextBoxBase.MultilineChanged> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-382">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.MultilineChanged> event.</span></span> <span data-ttu-id="0a4fd-383">Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-383">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0a4fd-384">Aby zgłosić na wiele zdarzeń lub zdarzeń, które często występują, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączane wiadomość w wielowierszowym <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-384">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0a4fd-385">Aby uruchomić przykładowy kod, wkleić go do projektu, który zawiera wystąpienie typu, który dziedziczy z <xref:System.Windows.Forms.TextBoxBase>, takich jak <xref:System.Windows.Forms.TextBox> lub <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-385">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="0a4fd-386">Następnie nadaj nazwę wystąpienia `TextBoxBase1` i upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.TextBoxBase.MultilineChanged> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-386">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.MultilineChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#247](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#247)]
 [!code-vb[System.Windows.Forms.EventExamples#247](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#247)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Multiline" />
      </Docs>
    </Member>
    <Member MemberName="OnAcceptsTabChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAcceptsTabChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAcceptsTabChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAcceptsTabChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAcceptsTabChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAcceptsTabChanged : EventArgs -&gt; unit&#xA;override this.OnAcceptsTabChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnAcceptsTabChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="0a4fd-387"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-387">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="0a4fd-388">Wywołuje <see cref="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-388">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-389">Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-389">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0a4fd-390">Aby uzyskać więcej informacji, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="0a4fd-390">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="0a4fd-391"><xref:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged%2A> Metoda umożliwia również klasy pochodne obsłużyć zdarzenie bez dołączając delegata.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-391">The <xref:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="0a4fd-392">Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-392">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="0a4fd-393">Podczas zastępowania <see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /> w klasie pochodnej, pamiętaj wywołać klasy bazowej <see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /> metody, która zarejestrowana delegaci otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-393">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnAutoSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAutoSizeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAutoSizeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnAutoSizeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAutoSizeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAutoSizeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAutoSizeChanged : EventArgs -&gt; unit&#xA;override this.OnAutoSizeChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnAutoSizeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="0a4fd-394">Obiekt zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-394">An object that contains event data.</span></span></param>
        <summary><span data-ttu-id="0a4fd-395">Wywołuje <see cref="E:System.Windows.Forms.TextBoxBase.AutoSizeChanged" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-395">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.AutoSizeChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBorderStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBorderStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBorderStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBorderStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBorderStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBorderStyleChanged : EventArgs -&gt; unit&#xA;override this.OnBorderStyleChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnBorderStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="0a4fd-396"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-396">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="0a4fd-397">Wywołuje <see cref="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-397">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-398">Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-398">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0a4fd-399">Aby uzyskać więcej informacji, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="0a4fd-399">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="0a4fd-400"><xref:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged%2A> Metoda umożliwia również klasy pochodne obsłużyć zdarzenie bez dołączając delegata.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-400">The <xref:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="0a4fd-401">Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-401">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="0a4fd-402">Podczas zastępowania <see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /> w klasie pochodnej, pamiętaj wywołać klasy bazowej <see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /> metody, która zarejestrowana delegaci otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-402">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="0a4fd-403"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-403">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="0a4fd-404">Wywołuje <see cref="E:System.Windows.Forms.Control.FontChanged" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-404">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="textBoxBase.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="0a4fd-405"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-405">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="0a4fd-406">Wywołuje <see cref="E:System.Windows.Forms.Control.HandleCreated" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-406">Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="textBoxBase.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="0a4fd-407"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-407">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="0a4fd-408">Wywołuje <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-408">Raises the <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHideSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnHideSelectionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHideSelectionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHideSelectionChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHideSelectionChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnHideSelectionChanged : EventArgs -&gt; unit&#xA;override this.OnHideSelectionChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnHideSelectionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="0a4fd-409"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-409">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="0a4fd-410">Wywoływanie <see cref="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-410">Raise the <see cref="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-411">Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-411">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0a4fd-412">Aby uzyskać więcej informacji, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="0a4fd-412">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="0a4fd-413"><xref:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged%2A> Metoda umożliwia również klasy pochodne obsłużyć zdarzenie bez dołączając delegata.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-413">The <xref:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="0a4fd-414">Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-414">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="0a4fd-415">Podczas zastępowania <see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /> w klasie pochodnej, pamiętaj wywołać klasy bazowej <see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /> metody, która zarejestrowana delegaci otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-415">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.HideSelection" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnModifiedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnModifiedChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModifiedChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModifiedChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModifiedChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnModifiedChanged : EventArgs -&gt; unit&#xA;override this.OnModifiedChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnModifiedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="0a4fd-416"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-416">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="0a4fd-417">Wywołuje <see cref="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-417">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-418">Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-418">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0a4fd-419">Aby uzyskać więcej informacji, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="0a4fd-419">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="0a4fd-420"><xref:System.Windows.Forms.TextBoxBase.OnModifiedChanged%2A> Metoda umożliwia również klasy pochodne obsłużyć zdarzenie bez dołączając delegata.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-420">The <xref:System.Windows.Forms.TextBoxBase.OnModifiedChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="0a4fd-421">Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-421">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="0a4fd-422">Podczas zastępowania <see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /> w klasie pochodnej, pamiętaj wywołać klasy bazowej <see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /> metody, która zarejestrowana delegaci otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-422">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Modified" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs mevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs mevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (mevent As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ mevent);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="textBoxBase.OnMouseUp mevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mevent" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="mevent"><span data-ttu-id="0a4fd-423">Dane dotyczące zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-423">The event data.</span></span></param>
        <summary><span data-ttu-id="0a4fd-424">Wywołuje <see cref="E:System.Windows.Forms.Control.MouseUp" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-424">Raises the <see cref="E:System.Windows.Forms.Control.MouseUp" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMultilineChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMultilineChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMultilineChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMultilineChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMultilineChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMultilineChanged : EventArgs -&gt; unit&#xA;override this.OnMultilineChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnMultilineChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="0a4fd-425"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-425">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="0a4fd-426">Wywołuje <see cref="E:System.Windows.Forms.TextBoxBase.MultilineChanged" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-426">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.MultilineChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-427">Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-427">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0a4fd-428">Aby uzyskać więcej informacji, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="0a4fd-428">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="0a4fd-429"><xref:System.Windows.Forms.TextBoxBase.OnMultilineChanged%2A> Metoda umożliwia również klasy pochodne obsłużyć zdarzenie bez dołączając delegata.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-429">The <xref:System.Windows.Forms.TextBoxBase.OnMultilineChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="0a4fd-430">Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-430">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="0a4fd-431">Podczas zastępowania <see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /> w klasie pochodnej, pamiętaj wywołać klasy bazowej <see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /> metody, która zarejestrowana delegaci otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-431">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Multiline" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.MultilineChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnPaddingChanged">
      <MemberSignature Language="C#" Value="protected override void OnPaddingChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaddingChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnPaddingChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaddingChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaddingChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaddingChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnPaddingChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="0a4fd-432"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-432">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="0a4fd-433">Ta metoda nie jest odpowiednie dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-433">This method is not relevant for this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-434">Ta metoda nie jest odpowiednie dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-434">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnReadOnlyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnReadOnlyChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnReadOnlyChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnReadOnlyChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnReadOnlyChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnReadOnlyChanged : EventArgs -&gt; unit&#xA;override this.OnReadOnlyChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnReadOnlyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="0a4fd-435"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-435">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="0a4fd-436">Wywołuje <see cref="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-436">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-437">Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-437">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0a4fd-438">Aby uzyskać więcej informacji, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="0a4fd-438">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="0a4fd-439"><xref:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged%2A> Metoda umożliwia również klasy pochodne obsłużyć zdarzenie bez dołączając delegata.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-439">The <xref:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="0a4fd-440">Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-440">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="0a4fd-441">Podczas zastępowania <see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /> w klasie pochodnej, pamiętaj wywołać klasy bazowej <see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /> metody, która zarejestrowana delegaci otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-441">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected override void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="0a4fd-442"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-442">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="0a4fd-443">Wywołuje <see cref="E:System.Windows.Forms.Control.TextChanged" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-443">Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.TextBoxBase.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-444">Ta właściwość nie jest odpowiednie dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-444">This property is not relevant for this class.</span></span></summary>
        <value><span data-ttu-id="0a4fd-445">A <see cref="T:System.Windows.Forms.Padding" /> wartość.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-445">A <see cref="T:System.Windows.Forms.Padding" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-446">Ta właściwość nie jest odpowiednie dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-446">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberSignature Language="F#" Value="member this.PaddingChanged : EventHandler " Usage="member this.PaddingChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-447">To zdarzenie nie jest odpowiednie dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-447">This event is not relevant for this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-448">To zdarzenie nie jest odpowiednie dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-448">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler Paint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler Paint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.Paint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Paint As PaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PaintEventHandler ^ Paint;" />
      <MemberSignature Language="F#" Value="member this.Paint : System.Windows.Forms.PaintEventHandler " Usage="member this.Paint : System.Windows.Forms.PaintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-449">Występuje po odświeżeniu formantu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-449">Occurs when the control is redrawn.</span></span> <span data-ttu-id="0a4fd-450">To zdarzenie nie jest odpowiednie dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-450">This event is not relevant for this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-451">To zdarzenie nie jest odpowiednie dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-451">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste();" />
      <MemberSignature Language="F#" Value="member this.Paste : unit -&gt; unit" Usage="textBoxBase.Paste " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a4fd-452">Zamienia bieżące zaznaczenie w polu tekstowym z zawartością **Schowka**.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-452">Replaces the current selection in the text box with the contents of the **Clipboard**.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-453"><xref:System.Windows.Forms.TextBoxBase.Paste%2A> Metoda będzie tylko wkleić tekst do kontrolki Jeśli tekst jest obecnie przechowywanych w **Schowka**.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-453">The <xref:System.Windows.Forms.TextBoxBase.Paste%2A> method will only paste text into the control if text is currently stored in the **Clipboard**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fd-454">Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.TextBox>, klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-454">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="0a4fd-455">Zapewnia <xref:System.Windows.Forms.MenuItem.Click> programy obsługi zdarzeń dla <xref:System.Windows.Forms.MenuItem> obiekty, które wykonują wycinania, kopiowania, wklejania i Cofnij operacje.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-455">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="0a4fd-456">W tym przykładzie wymaga, aby <xref:System.Windows.Forms.TextBox> formantu o nazwie `textBox1` została utworzona.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-456">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="0a4fd-457">podczas odczytu z **Schowka**.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-457">for reading from the **Clipboard**.</span></span> <span data-ttu-id="0a4fd-458">Powiązane wyliczenie: <see langword="AllClipboard" /> wartość <see cref="T:System.Security.Permissions.UIPermissionClipboard" />.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-458">Associated enumeration: the <see langword="AllClipboard" /> value of <see cref="T:System.Security.Permissions.UIPermissionClipboard" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="PreferredHeight">
      <MemberSignature Language="C#" Value="public int PreferredHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PreferredHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.PreferredHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PreferredHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredHeight : int" Usage="System.Windows.Forms.TextBoxBase.PreferredHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-459">Pobiera preferowaną wysokość pola tekstowego.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-459">Gets the preferred height for a text box.</span></span></summary>
        <value><span data-ttu-id="0a4fd-460">Preferowany wysokość pola tekstowego.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-460">The preferred height of a text box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-461">Rozmiar zwracane przez tę właściwość opiera się na styl czcionki wysokość i obramowanie pola tekstowego.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-461">The size returned by this property is based on the font height and border style of the text box.</span></span> <span data-ttu-id="0a4fd-462">Ta właściwość służy do określenia odpowiedniego rozmiaru pola tekstowego, aby upewnić się, że tekst jest prawidłowo wyświetlany w kontrolce.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-462">You can use this property to determine the appropriate size of the text box to ensure that text is properly displayed in the control.</span></span> <span data-ttu-id="0a4fd-463">Wartość zwrócona przez tę właściwość, jest w pikselach.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-463">The value returned by this property is in pixels.</span></span>  
  
 <span data-ttu-id="0a4fd-464">Wartość <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> reprezentuje minimalnej wysokości pola tekstowego musi mieć, aby wyświetlić pojedynczy wiersz tekstu bez przycinania tekstu w górę lub w dół.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-464">The value of <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> represents the minimum height the text box must have in order to display a single line of text without clipping the text on the top or bottom.</span></span> <span data-ttu-id="0a4fd-465">Ta wartość jest taka sama czy <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> właściwość jest ustawiona na `true` lub `false`.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-465">This value is the same whether the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is set to `true` or `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.AutoSize" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; msg, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessCmdKey (ByRef msg As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessCmdKey(System::Windows::Forms::Message % msg, System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessCmdKey :  * System.Windows.Forms.Keys -&gt; bool" Usage="textBoxBase.ProcessCmdKey (msg, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="0a4fd-466">A <see cref="T:System.Windows.Forms.Message" />, przekazywany przez odwołanie, reprezentujący komunikat okna do przetworzenia.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-466">A <see cref="T:System.Windows.Forms.Message" />, passed by reference that represents the window message to process.</span></span></param>
        <param name="keyData"><span data-ttu-id="0a4fd-467">Jedną z <see cref="T:System.Windows.Forms.Keys" /> wartości, które reprezentuje klawisz skrótu do przetworzenia.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-467">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the shortcut key to process.</span></span></param>
        <summary><span data-ttu-id="0a4fd-468">Przetwarza klucz polecenia.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-468">Processes a command key.</span></span></summary>
        <returns><span data-ttu-id="0a4fd-469"><see langword="true" /> Jeśli klucz polecenia został przetworzony podczas kontroli. w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-469"><see langword="true" /> if the command key was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="0a4fd-470">za działanie z kodem niezarządzanym.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-470">for operating with unmanaged code.</span></span> <span data-ttu-id="0a4fd-471">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="0a4fd-471">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessDialogKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ProcessDialogKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessDialogKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessDialogKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessDialogKey : System.Windows.Forms.Keys -&gt; bool" Usage="textBoxBase.ProcessDialogKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="0a4fd-472">Jedną z <see cref="T:System.Windows.Forms.Keys" /> wartości, które reprezentuje klucz używany do przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-472">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span></span></param>
        <summary><span data-ttu-id="0a4fd-473">Przetwarza klucz okna dialogowego.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-473">Processes a dialog key.</span></span></summary>
        <returns><span data-ttu-id="0a4fd-474"><see langword="true" /> Jeśli klucz został przetworzony podczas kontroli. w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-474"><see langword="true" /> if the key was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-475">Pobiera lub ustawia wartość wskazującą, czy tekst w polu tekstowym jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-475">Gets or sets a value indicating whether text in the text box is read-only.</span></span></summary>
        <value><span data-ttu-id="0a4fd-476"><see langword="true" /> Jeśli pole tekstowe jest tylko do odczytu. w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-476"><see langword="true" /> if the text box is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0a4fd-477">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-477">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-478">Jeśli ta właściwość jest równa `true`, zawartość formantu nie można zmienić przez użytkownika w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-478">When this property is set to `true`, the contents of the control cannot be changed by the user at runtime.</span></span> <span data-ttu-id="0a4fd-479">Za pomocą tę właściwość ustawioną na `true`, nadal można ustawić wartość <xref:System.Windows.Forms.TextBoxBase.Text%2A> właściwości w kodzie.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-479">With this property set to `true`, you can still set the value of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property in code.</span></span> <span data-ttu-id="0a4fd-480">Tej funkcji można używać zamiast wyłączać kontrolki z <xref:System.Windows.Forms.Control.Enabled%2A> właściwość umożliwiająca zawartość do skopiowania i etykietek narzędzi do wyświetlenia.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-480">You can use this feature instead of disabling the control with the <xref:System.Windows.Forms.Control.Enabled%2A> property to allow the contents to be copied and ToolTips to be shown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ReadOnlyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ReadOnlyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ReadOnlyChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ReadOnlyChanged;" />
      <MemberSignature Language="F#" Value="member this.ReadOnlyChanged : EventHandler " Usage="member this.ReadOnlyChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-481">Występuje, gdy wartość <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /> właściwości została zmieniona.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-481">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-482">Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="0a4fd-482">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fd-483">Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-483">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0a4fd-484">W tym przykładzie program obsługi zdarzeń raporty w momencie wystąpienia <xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-484">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged> event.</span></span> <span data-ttu-id="0a4fd-485">Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-485">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0a4fd-486">Aby zgłosić na wiele zdarzeń lub zdarzeń, które często występują, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączane wiadomość w wielowierszowym <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-486">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0a4fd-487">Aby uruchomić przykładowy kod, wkleić go do projektu, który zawiera wystąpienie typu, który dziedziczy z <xref:System.Windows.Forms.TextBoxBase>, takich jak <xref:System.Windows.Forms.TextBox> lub <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-487">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="0a4fd-488">Następnie nadaj nazwę wystąpienia `TextBoxBase1` i upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-488">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#248](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#248)]
 [!code-vb[System.Windows.Forms.EventExamples#248](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#248)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToCaret">
      <MemberSignature Language="C#" Value="public void ScrollToCaret ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToCaret() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ScrollToCaret" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToCaret ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToCaret();" />
      <MemberSignature Language="F#" Value="member this.ScrollToCaret : unit -&gt; unit" Usage="textBoxBase.ScrollToCaret " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a4fd-489">Przewija zawartość kontrolki na bieżącym położeniu karetki.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-489">Scrolls the contents of the control to the current caret position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-490">Ta metoda umożliwia karetka znajduje się w obrębie regionu widoczne kontrolki przewiń zawartość formantu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-490">This method enables you to scroll the contents of the control until the caret is within the visible region of the control.</span></span> <span data-ttu-id="0a4fd-491">Jeśli karetka jest ustawiana poniżej region widoczny kontrolki <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> metoda będzie przewiń zawartość kontrolki jest karetkę jest widoczny w dolnej części kontrolki.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-491">If the caret is positioned below the visible region of the control, the <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> method will scroll the contents of the control until the caret is visible at the bottom of the control.</span></span> <span data-ttu-id="0a4fd-492">Jeśli karetka jest ustawiana powyżej region widoczny kontrolki, ta metoda Przewija zawartości formantu do momentu wyświetlenia karetkę na górze kontrolki.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-492">If the caret is positioned above the visible region of the control, this method scrolls the contents of the control until the caret is visible at the top of the control.</span></span> <span data-ttu-id="0a4fd-493">Ta metoda w wielowierszowym polu tekstowym służy do upewnij się, że bieżący punkt wejścia tekstu w obrębie regionu widoczne kontrolki.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-493">You can use this method in a multiline text box to ensure that the current text entry point is within the visible region of the control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a4fd-494">Ta metoda nie obowiązuje, jeśli formant nie ma fokusa czy karetkę już znajduje się w regionie widoczne kontrolki.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-494">This method has no effect if the control does not have focus or if the caret is already positioned in the visible region of the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fd-495">Poniższy przykład kodu demonstruje sposób używania <xref:System.Windows.Forms.Keys> wyliczenie i <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> metody, aby upewnić się, że punkt wstawiania, reprezentowane przez daszek, jest zawsze widoczne na ekranie po naciśnięciu klawisza ENTER.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-495">The following code example demonstrates how to use the <xref:System.Windows.Forms.Keys> enumeration and the <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> method to ensure that the text insertion point, represented by the caret, is always visible on the screen after the ENTER key has been pressed.</span></span> <span data-ttu-id="0a4fd-496">Aby uruchomić przykład, wklej następujący kod w zawierający formularz <xref:System.Windows.Forms.TextBox> formant nazywany `TextBox1` i <xref:System.Windows.Forms.RichTextBox> formant nazywany `RichTextBox1`.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-496">To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.TextBox> control called `TextBox1` and a <xref:System.Windows.Forms.RichTextBox> control called `RichTextBox1`.</span></span> <span data-ttu-id="0a4fd-497">W tym przykładzie wymaga metody obsługi zdarzeń została skojarzona z <xref:System.Windows.Forms.Control.KeyDown> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-497">This example requires that the event-handling method has been associated with the <xref:System.Windows.Forms.Control.KeyDown> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.TextBoxBaseScrolling#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.TextBoxBaseScrolling#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.TextBoxBaseScrolling#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (start As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(int start, int length);" />
      <MemberSignature Language="F#" Value="override this.Select : int * int -&gt; unit" Usage="textBoxBase.Select (start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="0a4fd-498">Pozycja pierwszego znaku w aktualnie zaznaczonego tekstu w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-498">The position of the first character in the current text selection within the text box.</span></span></param>
        <param name="length"><span data-ttu-id="0a4fd-499">Liczba znaków do wybrania.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-499">The number of characters to select.</span></span></param>
        <summary><span data-ttu-id="0a4fd-500">Wybiera zakres tekstu w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-500">Selects a range of text in the text box.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-501">Jeśli chcesz ustawić pozycja początkowa do pierwszego znaku w tekście formantu, ustaw `start` parametru na wartość 0.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-501">If you want to set the start position to the first character in the control's text, set the `start` parameter to 0.</span></span> <span data-ttu-id="0a4fd-502">Ta metoda służy do wybrania podciąg z tekstu, na przykład podczas przeszukiwania tekst formantu i zamiany informacji.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-502">You can use this method to select a substring of text, such as when searching through the text of the control and replacing information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a4fd-503">Możesz programowo Przesuń karetkę w polu tekstowym, ustawiając `start` parametr pozycji w polu tekstowym w miejscu karetki, aby przejść do, a następnie ustaw `length` parametru na wartość zero (0).</span><span class="sxs-lookup"><span data-stu-id="0a4fd-503">You can programmatically move the caret within the text box by setting the `start` parameter to the position within the text box where you want the caret to move to and set the `length` parameter to a value of zero (0).</span></span> <span data-ttu-id="0a4fd-504">Pole tekstowe musi mieć fokus, aby karetkę do przeniesienia.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-504">The text box must have focus in order for the caret to be moved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a4fd-505">Jeśli ta metoda jest wywoływana bez parametrów, czyli alternatywną metodą jest używany.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-505">If this method is called without any parameters, an alternative method is used.</span></span> <span data-ttu-id="0a4fd-506">Dziedziczy to alternatywna metoda <xref:System.Windows.Forms.Control> klasy.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-506">This alternative method inherits from the <xref:System.Windows.Forms.Control> class.</span></span> <span data-ttu-id="0a4fd-507">Gdy zostanie wywołana, ustawia fokus wprowadzania do formantu i zaznacza zawartość formantu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-507">When called, it sets the input focus to the control and selects the contents of the control.</span></span> <span data-ttu-id="0a4fd-508">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Forms.Control.Select%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-508">For more information, see the <xref:System.Windows.Forms.Control.Select%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fd-509">Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.TextBox>, klasy, aby wyszukać zawartość kontrolki dla wystąpienia wyrazu "fox".</span><span class="sxs-lookup"><span data-stu-id="0a4fd-509">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to search the contents of the control for the instance of the word "fox".</span></span> <span data-ttu-id="0a4fd-510">Jeśli znalezione, kod wybiera wyraz w kontroli przy użyciu <xref:System.Windows.Forms.TextBoxBase.Select%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-510">If found, the code selects the word in the control using the <xref:System.Windows.Forms.TextBoxBase.Select%2A> method.</span></span> <span data-ttu-id="0a4fd-511">W tym przykładzie wymaga, aby <xref:System.Windows.Forms.TextBox> o nazwie `textBox1` utworzono i jego <xref:System.Windows.Forms.TextBoxBase.Text%2A> właściwość zawiera zdania "szybki rudy lis przechodzi skrzyń fig."</span><span class="sxs-lookup"><span data-stu-id="0a4fd-511">This example requires that a <xref:System.Windows.Forms.TextBox> named `textBox1` has been created and its <xref:System.Windows.Forms.TextBoxBase.Text%2A> property contains the sentence "The quick brown fox jumps over the lazy dog."</span></span>  
  
 [!code-cpp[Classic TextBoxBase.Select Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Select Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.Select Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Select Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.Select Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Select Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0a4fd-512">Wartość <paramref name="start" /> parametru jest mniejsza niż zero.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-512">The value of the <paramref name="start" /> parameter is less than zero.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.SelectAll" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectedText" />
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectAll();" />
      <MemberSignature Language="F#" Value="member this.SelectAll : unit -&gt; unit" Usage="textBoxBase.SelectAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a4fd-513">Powoduje zaznaczenie całego tekstu w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-513">Selects all text in the text box.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-514">Ta metoda umożliwia zaznacz cały tekst w kontrolce.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-514">This method enables you to select all text within the control.</span></span> <span data-ttu-id="0a4fd-515">Tej metody można używać w połączeniu z <xref:System.Windows.Forms.TextBoxBase.Cut%2A> metody, która wymaga tekstu, należy wybrać w kontrolce całą zawartość formantu Wytnij i wklej je do **Schowka**.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-515">You can use this method in conjunction with the <xref:System.Windows.Forms.TextBoxBase.Cut%2A> method, which requires text to be selected in the control, to cut the entire contents of the control and paste them into the **Clipboard**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fd-516">Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.TextBox>, klasy, aby określić, jeśli dowolny tekst jest wybrana w kontrolce.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-516">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to determine if any text is selected in the control.</span></span> <span data-ttu-id="0a4fd-517">Jeśli nie wybrano tekstu, następuje wywołanie <xref:System.Windows.Forms.TextBoxBase.SelectAll%2A> metoda przed skopiowaniem zawartości formantu do **Schowka**.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-517">If no text is selected, a call is made to the <xref:System.Windows.Forms.TextBoxBase.SelectAll%2A> method before copying the contents of the control to the **Clipboard**.</span></span> <span data-ttu-id="0a4fd-518">W tym przykładzie wymaga, aby <xref:System.Windows.Forms.TextBox> została utworzona o nazwie `textBox1`.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-518">This example requires that a <xref:System.Windows.Forms.TextBox> has been created named `textBox1`.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectAll Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectAll Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectAll Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectAll Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectAll Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectAll Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedText">
      <MemberSignature Language="C#" Value="public virtual string SelectedText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.SelectedText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SelectedText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedText : string with get, set" Usage="System.Windows.Forms.TextBoxBase.SelectedText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-519">Pobiera lub ustawia wartość wskazującą, aktualnie zaznaczonego tekstu w kontrolce.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-519">Gets or sets a value indicating the currently selected text in the control.</span></span></summary>
        <value><span data-ttu-id="0a4fd-520">Ciąg, który reprezentuje aktualnie zaznaczonego tekstu w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-520">A string that represents the currently selected text in the text box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-521">Tekst można przypisać do tej właściwości, aby zmienić tekst zaznaczony w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-521">You can assign text to this property to change the text currently selected in the text box.</span></span> <span data-ttu-id="0a4fd-522">Jeśli tekst nie jest aktualnie wybrany w polu tekstowym, ta właściwość zwraca ciąg o zerowej długości.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-522">If no text is currently selected in the text box, this property returns a zero-length string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fd-523">Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.TextBox>, klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-523">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="0a4fd-524">Zapewnia <xref:System.Windows.Forms.MenuItem.Click> programy obsługi zdarzeń dla <xref:System.Windows.Forms.MenuItem> obiekty, które wykonują wycinania, kopiowania, wklejania i Cofnij operacje.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-524">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="0a4fd-525">W tym przykładzie wymaga, aby <xref:System.Windows.Forms.TextBox> formantu o nazwie `textBox1` została utworzona.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-525">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectedText Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectedText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectedText Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectedText Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectedText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectedText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" />
      </Docs>
    </Member>
    <Member MemberName="SelectionLength">
      <MemberSignature Language="C#" Value="public virtual int SelectionLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.SelectionLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectionLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectionLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionLength : int with get, set" Usage="System.Windows.Forms.TextBoxBase.SelectionLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-526">Pobiera lub ustawia liczbę znaków, które wybrano w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-526">Gets or sets the number of characters selected in the text box.</span></span></summary>
        <value><span data-ttu-id="0a4fd-527">Liczba znaków, które wybrano w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-527">The number of characters selected in the text box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-528">Ta właściwość służy do określenia, jeśli dowolne znaki są obecnie wybrane w polu tekstowym przed przystąpieniem do wykonywania operacji na zaznaczonego tekstu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-528">You can use this property to determine if any characters are currently selected in the text box control before performing operations on the selected text.</span></span> <span data-ttu-id="0a4fd-529">Gdy wartość <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> właściwość jest ustawiona na wartość, która jest większa niż liczba znaków w tekście kontrolki, wartość <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> właściwość jest ustawiona na całej długości tekstu w kontrolce minus wartość <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>właściwości (Jeśli określono żadnej wartości dla <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> właściwości).</span><span class="sxs-lookup"><span data-stu-id="0a4fd-529">When the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is set to a value that is larger than the number of characters within the text of the control, the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is set to the entire length of text within the control minus the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property (if any value is specified for the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a4fd-530">Możesz programowo Przesuń karetkę w polu tekstowym, ustawiając <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> pozycji w polu tekstowym w miejscu karetki, aby przejść do, a następnie ustaw <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> właściwość z wartością zero (0).</span><span class="sxs-lookup"><span data-stu-id="0a4fd-530">You can programmatically move the caret within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> to the position within the text box where you want the caret to move to and set the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property to a value of zero (0).</span></span> <span data-ttu-id="0a4fd-531">Pole tekstowe musi mieć fokus, aby karetkę do przeniesienia.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-531">The text box must have focus in order for the caret to be moved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fd-532">Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.TextBox>, klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-532">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="0a4fd-533">Zapewnia <xref:System.Windows.Forms.MenuItem.Click> programy obsługi zdarzeń dla <xref:System.Windows.Forms.MenuItem> obiekty, które wykonują wycinania, kopiowania, wklejania i Cofnij operacje.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-533">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="0a4fd-534">W tym przykładzie wymaga, aby <xref:System.Windows.Forms.TextBox> formantu o nazwie `textBox1` została utworzona.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-534">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0a4fd-535">Przypisaną wartość jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-535">The assigned value is less than zero.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectedText" />
      </Docs>
    </Member>
    <Member MemberName="SelectionStart">
      <MemberSignature Language="C#" Value="public int SelectionStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionStart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionStart { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionStart : int with get, set" Usage="System.Windows.Forms.TextBoxBase.SelectionStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-536">Pobiera lub ustawia punkt początkowy tekst zaznaczony w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-536">Gets or sets the starting point of text selected in the text box.</span></span></summary>
        <value><span data-ttu-id="0a4fd-537">Pozycja początkowa tekst zaznaczony w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-537">The starting position of text selected in the text box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-538">Jeśli zaznaczono żadnego tekstu w kontrolce, ta właściwość wskazuje punkt wstawiania lub daszek nowego tekstu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-538">If no text is selected in the control, this property indicates the insertion point, or caret, for new text.</span></span> <span data-ttu-id="0a4fd-539">Jeśli ustawisz tę właściwość do lokalizacji poza długość tekstu w kontrolce, pozycja początkowa wybranego zostaną umieszczone za ostatnim znakiem.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-539">If you set this property to a location beyond the length of the text in the control, the selection start position will be placed after the last character.</span></span> <span data-ttu-id="0a4fd-540">Jeśli tekst jest zaznaczony w polu tekstowym, zmiany tej właściwości może zmniejszyć wartość <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-540">When text is selected in the text box control, changing this property might decrease the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property.</span></span> <span data-ttu-id="0a4fd-541">Jeśli pozostały tekst w kontrolce po pozycji wskazywanym przez <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> właściwość jest mniejsza niż wartość <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> właściwości, wartość <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> zmniejszyła się automatycznie właściwości.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-541">If the remaining text in the control after the position indicated by the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property is less than the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property, the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is automatically decreased.</span></span> <span data-ttu-id="0a4fd-542">Wartość <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> właściwości nigdy nie powoduje wzrost <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-542">The value of the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property never causes an increase in the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property.</span></span>  
  
 <span data-ttu-id="0a4fd-543">Programowe przenosić zaznaczenie w polu tekstowym, ustawiając <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> i <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-543">You can programmatically move the selection within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> and the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> properties.</span></span>  
  
 <span data-ttu-id="0a4fd-544">Możesz programowo Przesuń karetkę w polu tekstowym, ustawiając <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> pozycji w polu tekstowym w miejscu karetki, aby przejść do, a następnie ustaw <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> właściwość z wartością zero (0).</span><span class="sxs-lookup"><span data-stu-id="0a4fd-544">You can programmatically move the caret within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> to the position within the text box where you want the caret to move to and set the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property to a value of zero (0).</span></span>  
  
 <span data-ttu-id="0a4fd-545"><xref:System.Windows.Forms.TextBox> Musi mieć fokus, aby zaznaczenie lub punkt wstawiania do przeniesienia.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-545">The <xref:System.Windows.Forms.TextBox> must have focus in order for the selection or the caret to be moved.</span></span> <span data-ttu-id="0a4fd-546">Możesz ustawić <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> właściwość <xref:System.Windows.Forms.TextBox> czyli <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> polega na przekazaniu mu <xref:System.Windows.Forms.Control.Focus%2A> pierwszy.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-546">You can set the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property of a <xref:System.Windows.Forms.TextBox> that is <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> by giving it the <xref:System.Windows.Forms.Control.Focus%2A> first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fd-547">**Przykład 1**</span><span class="sxs-lookup"><span data-stu-id="0a4fd-547">**Example 1**</span></span>  
  
 <span data-ttu-id="0a4fd-548">Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.TextBox>, klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-548">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="0a4fd-549">Zapewnia <xref:System.Windows.Forms.MenuItem.Click> programy obsługi zdarzeń dla <xref:System.Windows.Forms.MenuItem> obiekty, które wykonują wycinania, kopiowania, wklejania i Cofnij operacje.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-549">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="0a4fd-550">W tym przykładzie wymaga, aby <xref:System.Windows.Forms.TextBox> formantu o nazwie `textBox1` została utworzona.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-550">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 <span data-ttu-id="0a4fd-551">**Przykład 2**</span><span class="sxs-lookup"><span data-stu-id="0a4fd-551">**Example 2**</span></span>  
  
 <span data-ttu-id="0a4fd-552">Poniższy przykład ustawia <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> właściwość <xref:System.Windows.Forms.TextBox> czyli <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> polega na przekazaniu mu <xref:System.Windows.Forms.Control.Focus%2A> pierwszy.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-552">The following example sets the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property of a <xref:System.Windows.Forms.TextBox> that is <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> by giving it the <xref:System.Windows.Forms.Control.Focus%2A> first.</span></span>  
  
 [!code-csharp[SystemWindowsFormsTextBoxBase#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemWindowsFormsTextBoxBase/CS/Form1.cs#1)]
 [!code-vb[SystemWindowsFormsTextBoxBase#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemWindowsFormsTextBoxBase/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0a4fd-553">Przypisaną wartość jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-553">The assigned value is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetBoundsCore">
      <MemberSignature Language="C#" Value="protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetBoundsCore(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetBoundsCore (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetBoundsCore(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.SetBoundsCore : int * int * int * int * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="textBoxBase.SetBoundsCore (x, y, width, height, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="0a4fd-554">Nowy <see cref="P:System.Windows.Forms.Control.Left" /> wartość właściwości formantu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-554">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control.</span></span></param>
        <param name="y"><span data-ttu-id="0a4fd-555">Nowy <see cref="P:System.Windows.Forms.Control.Top" /> wartość właściwości formantu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-555">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control.</span></span></param>
        <param name="width"><span data-ttu-id="0a4fd-556">Nowy <see cref="P:System.Windows.Forms.Control.Width" /> wartość właściwości formantu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-556">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control.</span></span></param>
        <param name="height"><span data-ttu-id="0a4fd-557">Nie używany.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-557">Not used.</span></span></param>
        <param name="specified"><span data-ttu-id="0a4fd-558">Bitowa kombinacja <see cref="T:System.Windows.Forms.BoundsSpecified" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-558">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values.</span></span></param>
        <summary><span data-ttu-id="0a4fd-559">Ustawia określone granice z <see cref="T:System.Windows.Forms.TextBoxBase" /> kontroli.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-559">Sets the specified bounds of the <see cref="T:System.Windows.Forms.TextBoxBase" /> control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-560"><xref:System.Windows.Forms.TextBoxBase> Kontrolować używa <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> właściwość umożliwiająca ustawienie granice, jeśli <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> właściwość `true` i <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> właściwość `false`.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-560">The <xref:System.Windows.Forms.TextBoxBase> control uses the <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> property to set the bounds if the <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> property is `true` and the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is `false`.</span></span>  
  
 <span data-ttu-id="0a4fd-561">Zwykle, parametry, które odpowiadają granice nie są uwzględnione w `specified` parametru są przekazywane przy użyciu ich bieżącymi wartościami.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-561">Typically, the parameters that correspond to the bounds not included in the `specified` parameter are passed in with their current values.</span></span> <span data-ttu-id="0a4fd-562">Na przykład <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Width%2A>, lub <xref:System.Drawing.Point.X%2A> lub <xref:System.Drawing.Point.Y%2A> właściwości <xref:System.Windows.Forms.Control.Location%2A> właściwości mogą być przekazywane za pomocą odwołanie do bieżącego wystąpienia formantu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-562">For example, the <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Width%2A>, or the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Windows.Forms.Control.Location%2A> property can be passed in with a reference to the current instance of the control.</span></span> <span data-ttu-id="0a4fd-563">Jednak wszystkie wartości przekazanej są honorowane i stosowane do formantu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-563">However all values passed in are honored and applied to the control.</span></span>  
  
 <span data-ttu-id="0a4fd-564">`specified` Parametr reprezentuje elementy kontrolki <xref:System.Windows.Forms.Control.Bounds%2A> zmienione przez aplikację.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-564">The `specified` parameter represents the elements of the controls <xref:System.Windows.Forms.Control.Bounds%2A> changed by your application.</span></span> <span data-ttu-id="0a4fd-565">Na przykład, jeśli zmienisz <xref:System.Windows.Forms.Control.Size%2A> kontrolki `specified` wartość parametru jest `Size` wartość <xref:System.Windows.Forms.BoundsSpecified>.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-565">For example, if you change the <xref:System.Windows.Forms.Control.Size%2A> of the control, the `specified` parameter value is the `Size` value of <xref:System.Windows.Forms.BoundsSpecified>.</span></span> <span data-ttu-id="0a4fd-566">Jednak jeśli <xref:System.Windows.Forms.Control.Size%2A> jest uwzględniany w odpowiedzi na <xref:System.Windows.Forms.Control.Dock%2A> ustawienia właściwości, `specified` wartość parametru jest `None` wartość <xref:System.Windows.Forms.BoundsSpecified>.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-566">However, if the <xref:System.Windows.Forms.Control.Size%2A> is adjusted in response to the <xref:System.Windows.Forms.Control.Dock%2A> property being set, the `specified` parameter value is the `None` value of <xref:System.Windows.Forms.BoundsSpecified>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="0a4fd-567">Podczas zastępowania <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> w klasie pochodnej, pamiętaj wywołać klasy bazowej <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> metodę wymuszania granic formantu, aby zmienić.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-567">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> method to force the bounds of the control to change.</span></span> <span data-ttu-id="0a4fd-568">Klasy pochodne można dodać ograniczenia rozmiaru <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-568">Derived classes can add size restrictions to the <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ShortcutsEnabled">
      <MemberSignature Language="C#" Value="public virtual bool ShortcutsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShortcutsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShortcutsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShortcutsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShortcutsEnabled : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.ShortcutsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-569">Pobiera lub ustawia wartość wskazującą, czy zdefiniowane skróty są włączone.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-569">Gets or sets a value indicating whether the defined shortcuts are enabled.</span></span></summary>
        <value><span data-ttu-id="0a4fd-570"><see langword="true" /> Aby włączyć skróty; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-570"><see langword="true" /> to enable the shortcuts; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-571">Użyj <xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A> właściwość, aby włączyć lub wyłączyć następujące kombinacje klawiszy skrótów i w menu skrótów formantu:</span><span class="sxs-lookup"><span data-stu-id="0a4fd-571">Use the <xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A> property to enable or disable the following shortcut key combinations and the control's shortcut menu:</span></span>  
  
-   <span data-ttu-id="0a4fd-572">CTRL+Z</span><span class="sxs-lookup"><span data-stu-id="0a4fd-572">CTRL+Z</span></span>  
  
-   <span data-ttu-id="0a4fd-573">CTRL+E</span><span class="sxs-lookup"><span data-stu-id="0a4fd-573">CTRL+E</span></span>  
  
-   <span data-ttu-id="0a4fd-574">CTRL+C</span><span class="sxs-lookup"><span data-stu-id="0a4fd-574">CTRL+C</span></span>  
  
-   <span data-ttu-id="0a4fd-575">CTRL+Y</span><span class="sxs-lookup"><span data-stu-id="0a4fd-575">CTRL+Y</span></span>  
  
-   <span data-ttu-id="0a4fd-576">CTRL+X</span><span class="sxs-lookup"><span data-stu-id="0a4fd-576">CTRL+X</span></span>  
  
-   <span data-ttu-id="0a4fd-577">CTRL+BACKSPACE</span><span class="sxs-lookup"><span data-stu-id="0a4fd-577">CTRL+BACKSPACE</span></span>  
  
-   <span data-ttu-id="0a4fd-578">CTRL+V</span><span class="sxs-lookup"><span data-stu-id="0a4fd-578">CTRL+V</span></span>  
  
-   <span data-ttu-id="0a4fd-579">CTRL+DELETE</span><span class="sxs-lookup"><span data-stu-id="0a4fd-579">CTRL+DELETE</span></span>  
  
-   <span data-ttu-id="0a4fd-580">CTRL+A</span><span class="sxs-lookup"><span data-stu-id="0a4fd-580">CTRL+A</span></span>  
  
-   <span data-ttu-id="0a4fd-581">SHIFT+DELETE</span><span class="sxs-lookup"><span data-stu-id="0a4fd-581">SHIFT+DELETE</span></span>  
  
-   <span data-ttu-id="0a4fd-582">CTRL+L</span><span class="sxs-lookup"><span data-stu-id="0a4fd-582">CTRL+L</span></span>  
  
-   <span data-ttu-id="0a4fd-583">SHIFT+INSERT</span><span class="sxs-lookup"><span data-stu-id="0a4fd-583">SHIFT+INSERT</span></span>  
  
-   <span data-ttu-id="0a4fd-584">CTRL+R</span><span class="sxs-lookup"><span data-stu-id="0a4fd-584">CTRL+R</span></span>  
  
 <span data-ttu-id="0a4fd-585">Można zastąpić tę właściwość, aby określić inne klawisze skrótów.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-585">You can override this property to specify other shortcut keys.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.TextBoxBase.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-586">Pobiera lub ustawia tekst w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-586">Gets or sets the current text in the text box.</span></span></summary>
        <value><span data-ttu-id="0a4fd-587">Tekst wyświetlany w kontrolce.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-587">The text displayed in the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-588">Aby wyświetlić wiele wierszy tekstu w polu tekstowym, należy ustawić <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> właściwość `true`.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-588">To display multiple lines of text in a text box, set the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property to `true`.</span></span> <span data-ttu-id="0a4fd-589">Aby odczytać lub ustawić tekstu wielowierszowego pola tekstowego, należy użyć <xref:System.Windows.Forms.TextBoxBase.Lines%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-589">To read or set the text of a multiline text box, use the <xref:System.Windows.Forms.TextBoxBase.Lines%2A> property.</span></span> <span data-ttu-id="0a4fd-590">Fragment tekstu, które mogą być wprowadzane w <xref:System.Windows.Forms.RichTextBox> kontroli jest ograniczona jedynie ilością dostępnej pamięci systemowej.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-590">The amount of text that can be entered in the <xref:System.Windows.Forms.RichTextBox> control is limited only by available system memory.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fd-591">Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.TextBox>, klasy, aby utworzyć wielowierszowy <xref:System.Windows.Forms.TextBox> kontrolki z pionowe paski przewijania.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-591">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="0a4fd-592">W tym przykładzie również użyto <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, i <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> właściwości, aby wielowierszowym polu tekstowym przydatne do tworzenia dokumentów tekstowych.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-592">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Lines" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Multiline" />
      </Docs>
    </Member>
    <Member MemberName="TextLength">
      <MemberSignature Language="C#" Value="public virtual int TextLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.TextLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TextLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TextLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TextLength : int" Usage="System.Windows.Forms.TextBoxBase.TextLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-593">Pobiera długość tekstu w kontrolce.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-593">Gets the length of text in the control.</span></span></summary>
        <value><span data-ttu-id="0a4fd-594">Liczba znaków zawartych w tekście formantu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-594">The number of characters contained in the text of the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-595">Użyj tej właściwości można określić liczbę znaków w ciągu zadań, takich jak wyszukiwanie określonych ciągów tekstowych w tekście kontrolki, gdy potrzebne są znajomości całkowita liczba znaków.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-595">You can use this property to determine the number of characters in a string for tasks such as searching for specific strings of text within the text of the control, where knowledge of the total number of characters is needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fd-596">Poniższy przykład kodu demonstruje sposób używania <xref:System.Windows.Forms.TextBoxBase.AppendText%2A> metody i <xref:System.Windows.Forms.TextBoxBase.TextLength%2A> właściwości, aby skopiować tekst z jednego <xref:System.Windows.Forms.TextBox> do innego.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-596">The following code example demonstrates how to use the <xref:System.Windows.Forms.TextBoxBase.AppendText%2A> method and the <xref:System.Windows.Forms.TextBoxBase.TextLength%2A> property to copy text from one <xref:System.Windows.Forms.TextBox> to another.</span></span> <span data-ttu-id="0a4fd-597">W tym przykładzie wymaga, że dwa <xref:System.Windows.Forms.TextBox> kontrolki o nazwie `textBox1` i `textBox2`, zostały dodane do formularza i że `textBox1` zawiera tekst przypisane do jego <xref:System.Windows.Forms.Control.Text%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-597">This example requires that two <xref:System.Windows.Forms.TextBox> controls named, `textBox1` and `textBox2`, have been added to a form and that `textBox1` has text assigned to its <xref:System.Windows.Forms.Control.Text%2A> property.</span></span>  
  
 [!code-cpp[TextBoxBase.AppendText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TextBoxBase.AppendText/CPP/form1.cpp#1)]
 [!code-csharp[TextBoxBase.AppendText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TextBoxBase.AppendText/CS/form1.cs#1)]
 [!code-vb[TextBoxBase.AppendText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TextBoxBase.AppendText/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Text" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="textBoxBase.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a4fd-598">Zwraca ciąg, który reprezentuje <see cref="T:System.Windows.Forms.TextBoxBase" /> kontroli.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-598">Returns a string that represents the <see cref="T:System.Windows.Forms.TextBoxBase" /> control.</span></span></summary>
        <returns><span data-ttu-id="0a4fd-599">Ciąg reprezentujący bieżącą <see cref="T:System.Windows.Forms.TextBoxBase" />.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-599">A string that represents the current <see cref="T:System.Windows.Forms.TextBoxBase" />.</span></span> <span data-ttu-id="0a4fd-600">Ciąg zawiera typ i <see cref="T:System.Windows.Forms.TextBoxBase" /> właściwości formantu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-600">The string includes the type and the <see cref="T:System.Windows.Forms.TextBoxBase" /> property of the control.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public void Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Sub Undo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Undo();" />
      <MemberSignature Language="F#" Value="member this.Undo : unit -&gt; unit" Usage="textBoxBase.Undo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a4fd-601">Cofa ostatnią operację edycji, w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-601">Undoes the last edit operation in the text box.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-602">Ta metoda zostanie cofnięte ostatniego **Schowka** lub operacji wykonywanych w polu tekstowym, jeśli zmiany tekstu <xref:System.Windows.Forms.TextBoxBase.CanUndo%2A> właściwość zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-602">This method will undo the last **Clipboard** or text change operation performed in the text box control if the <xref:System.Windows.Forms.TextBoxBase.CanUndo%2A> property returns `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a4fd-603"><xref:System.Windows.Forms.TextBoxBase.Undo%2A> Metoda nie działa z <xref:System.Windows.Forms.Control.KeyPress> lub <xref:System.Windows.Forms.Control.TextChanged> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-603">The <xref:System.Windows.Forms.TextBoxBase.Undo%2A> method does not work with the <xref:System.Windows.Forms.Control.KeyPress> or <xref:System.Windows.Forms.Control.TextChanged> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fd-604">Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.TextBox>, klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-604">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="0a4fd-605">Zapewnia <xref:System.Windows.Forms.MenuItem.Click> programy obsługi zdarzeń dla <xref:System.Windows.Forms.MenuItem> obiekty, które wykonują wycinania, kopiowania, wklejania i Cofnij operacje.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-605">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="0a4fd-606">W tym przykładzie wymaga, aby <xref:System.Windows.Forms.TextBox> formantu o nazwie `textBox1` została utworzona.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-606">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc :  -&gt; unit" Usage="textBoxBase.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="0a4fd-607">Windows <see cref="T:System.Windows.Forms.Message" /> do procesu.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-607">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span></span></param>
        <summary><span data-ttu-id="0a4fd-608">Przetwarza wiadomości systemu Windows.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-608">Processes Windows messages.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="WordWrap">
      <MemberSignature Language="C#" Value="public bool WordWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WordWrap" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.WordWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property WordWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WordWrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WordWrap : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.WordWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fd-609">Wskazuje, czy wielowierszowym polu tekstowym jest automatycznie zawijany słów na początku następnego wiersza, gdy jest to konieczne.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-609">Indicates whether a multiline text box control automatically wraps words to the beginning of the next line when necessary.</span></span></summary>
        <value><span data-ttu-id="0a4fd-610"><see langword="true" /> Jeśli w wielowierszowym polu tekstowym zawija tekst; <see langword="false" /> Jeśli kontrolkę pola tekstowego automatycznie przewijać poziomo po użytkownik wpisuje ostatnie prawą krawędzią kontrolki.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-610"><see langword="true" /> if the multiline text box control wraps words; <see langword="false" /> if the text box control automatically scrolls horizontally when the user types past the right edge of the control.</span></span> <span data-ttu-id="0a4fd-611">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-611">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fd-612">Jeśli ta właściwość jest ustawiona `true`, poziomych pasków przewijania nie są wyświetlane bez względu na to <xref:System.Windows.Forms.TextBox.ScrollBars%2A> ustawienie właściwości.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-612">If this property is set to `true`, horizontal scroll bars are not displayed regardless of the <xref:System.Windows.Forms.TextBox.ScrollBars%2A> property setting.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a4fd-613">W klasie pochodnej <xref:System.Windows.Forms.TextBox>, tekst w kontrolce zawsze będzie zawijany bez względu na ustawienie właściwości tej właściwości, chyba że <xref:System.Windows.Forms.TextBox.TextAlign%2A> właściwość jest ustawiona na `HorizontalAlignment.Left`.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-613">In the derived class, <xref:System.Windows.Forms.TextBox>, text within the control will always wrap regardless of the property setting of this property unless the <xref:System.Windows.Forms.TextBox.TextAlign%2A> property is set to `HorizontalAlignment.Left`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fd-614">Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.TextBox>, klasy, aby utworzyć wielowierszowy <xref:System.Windows.Forms.TextBox> kontrolki z pionowe paski przewijania.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-614">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="0a4fd-615">W tym przykładzie również użyto <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, i <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> właściwości, aby wielowierszowym polu tekstowym przydatne do tworzenia dokumentów tekstowych.</span><span class="sxs-lookup"><span data-stu-id="0a4fd-615">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>