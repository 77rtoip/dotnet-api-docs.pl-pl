<Type Name="DataGrid" FullName="System.Windows.Forms.DataGrid">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2f28ae5534ec1933c119414f8d4a89e53c90fdbb" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69194160" /></Metadata><TypeSignature Language="C#" Value="public class DataGrid : System.Windows.Forms.Control, System.ComponentModel.ISupportInitialize, System.Windows.Forms.IDataGridEditingService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGrid extends System.Windows.Forms.Control implements class System.ComponentModel.ISupportInitialize, class System.Windows.Forms.IDataGridEditingService" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGrid" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGrid&#xA;Inherits Control&#xA;Implements IDataGridEditingService, ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGrid : System::Windows::Forms::Control, System::ComponentModel::ISupportInitialize, System::Windows::Forms::IDataGridEditingService" />
  <TypeSignature Language="F#" Value="type DataGrid = class&#xA;    inherit Control&#xA;    interface ISupportInitialize&#xA;    interface IDataGridEditingService" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.IDataGridEditingService</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.ComplexBindingProperties("DataSource", "DataMember")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Navigate")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("DataSource")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.DataGridDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.DataGridDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.DataGridDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wyświetla dane ADO.NET w przewijanej siatce. Formant zastępuje i dodaje funkcję <see cref="T:System.Windows.Forms.DataGrid" /> do <see cref="T:System.Windows.Forms.DataGrid" /> kontrolki; jednak kontrolka jest zachowywana w celu zapewnienia zgodności z poprzednimi wersjami i w przyszłości, jeśli wybierzesz opcję. <see cref="T:System.Windows.Forms.DataGridView" /></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> Wyświetla linki podobne do sieci Web do tabel podrzędnych. Możesz kliknąć link, aby przejść do tabeli podrzędnej. Gdy zostanie wyświetlona tabela podrzędna, w podpisie, który może zostać kliknięty, zostanie wyświetlony przycisk Wstecz, aby przejść z powrotem do tabeli nadrzędnej. Dane z wierszy nadrzędnych są wyświetlane poniżej podpisu i powyżej nagłówków kolumn. Informacje o wierszu nadrzędnym można ukryć, klikając przycisk po prawej stronie przycisku Wstecz.  
  
 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> Aby wyświetlić tabelę w czasie wykonywania, <xref:System.Windows.Forms.DataGrid.SetDataBinding%2A> Użyj metody, aby ustawić <xref:System.Windows.Forms.DataGrid.DataSource%2A> właściwości i <xref:System.Windows.Forms.DataGrid.DataMember%2A> w prawidłowym źródle danych. Następujące źródła danych są prawidłowe:  
  
-   A <xref:System.Data.DataTable>  
  
-   A <xref:System.Data.DataView>  
  
-   A <xref:System.Data.DataSet>  
  
-   A <xref:System.Data.DataViewManager>  
  
-   Tablica Jednowymiarowa  
  
-   Dowolny składnik implementujący <xref:System.ComponentModel.IListSource> interfejs  
  
-   Dowolny składnik implementujący <xref:System.Collections.IList> interfejs  
  
 Aby uzyskać więcej informacji na <xref:System.Data.DataSet> temat klasy, zobacz [zestawy danych, DataTables i](~/docs/framework/data/adonet/dataset-datatable-dataview/index.md)DataViews.  
  
 Można utworzyć siatkę, która umożliwia użytkownikom edytowanie danych, ale uniemożliwia im Dodawanie nowych wierszy przy użyciu <xref:System.Data.DataView> jako źródła danych i <xref:System.Data.DataView.AllowNew%2A> ustawienie właściwości na `false`.  
  
 Źródła danych są bardziej zarządzane przez <xref:System.Windows.Forms.BindingManagerBase> obiekty. Dla każdej tabeli w źródle <xref:System.Windows.Forms.BindingManagerBase> danych można zwrócić z <xref:System.Windows.Forms.BindingContext>formularza. Na przykład możesz określić liczbę wierszy zawartych w źródle danych, zwracając <xref:System.Windows.Forms.BindingManagerBase> <xref:System.Windows.Forms.BindingManagerBase.Count%2A> Właściwość skojarzonego obiektu.  
  
 Aby sprawdzić poprawność danych, należy użyć podstawowych obiektów, które reprezentują dane i ich zdarzenia. Na przykład, <xref:System.Data.DataTable> Jeśli dane pochodzą z <xref:System.Data.DataSet>, użyj <xref:System.Data.DataTable.ColumnChanging> zdarzeń i <xref:System.Data.DataTable.RowChanging> .  
  
> [!NOTE]
>  Ponieważ liczba kolumn może <xref:System.Windows.Forms.GridColumnStylesCollection>być dostosowywana (poprzez dodanie lub usunięcie elementów członkowskich), a wiersze mogą być sortowane według kolumn <xref:System.Windows.Forms.DataGridCell.RowNumber%2A> , wartości <xref:System.Data.DataRow> właściwości i <xref:System.Windows.Forms.DataGridCell.ColumnNumber%2A> nie mogą być gwarantowane jako zgodne z i <xref:System.Data.DataColumn>indeksy w <xref:System.Data.DataTable>. W związku z tym należy unikać używania tych właściwości <xref:System.Windows.Forms.Control.Validating> w zdarzeniu do walidacji danych.  
  
 Aby określić, która komórka została wybrana, użyj <xref:System.Windows.Forms.DataGrid.CurrentCell%2A> właściwości. Zmień wartość każdej komórki za pomocą <xref:System.Windows.Forms.DataGrid.Item%2A> właściwości, która może przyjmować zarówno indeksy wierszy, jak i kolumny komórki, albo pojedynczą. <xref:System.Windows.Forms.DataGridCell> <xref:System.Windows.Forms.DataGrid.CurrentCellChanged> Monitoruj zdarzenie, aby wykryć, kiedy użytkownik wybierze inną komórkę.  
  
 Aby określić, która część kontrolki kliknięto przez użytkownika, użyj <xref:System.Windows.Forms.DataGrid.HitTest%2A> metody <xref:System.Windows.Forms.Control.MouseDown> w zdarzeniu. <xref:System.Windows.Forms.DataGrid.HitTest%2A> Metoda<xref:System.Windows.Forms.DataGrid.HitTestInfo> zwraca obiekt, który zawiera wiersz i kolumnę klikniętego obszaru.  
  
 Aby zarządzać wyglądem kontrolki w czasie wykonywania, dostępne są różne właściwości dotyczące ustawiania atrybutów koloru i podpisu, w tym <xref:System.Windows.Forms.DataGrid.CaptionForeColor%2A>, <xref:System.Windows.Forms.DataGrid.CaptionBackColor%2A>, <xref:System.Windows.Forms.DataGrid.CaptionFont%2A>, i tak dalej.  
  
 Wygląd wyświetlanej siatki (lub siatek) można dodatkowo zmodyfikować przez utworzenie <xref:System.Windows.Forms.DataGridTableStyle> obiektów i dodanie ich <xref:System.Windows.Forms.GridTableStylesCollection>do, <xref:System.Windows.Forms.DataGrid.TableStyles%2A> które są dostępne za pomocą właściwości. Na przykład jeśli <xref:System.Windows.Forms.DataGrid.DataSource%2A> ustawiono <xref:System.Data.DataSet> obiekt zawierający trzy <xref:System.Data.DataTable> obiekty, można dodać trzy <xref:System.Windows.Forms.DataGridTableStyle> obiekty do kolekcji, jedną dla każdej tabeli. Aby zsynchronizować każdy <xref:System.Windows.Forms.DataGridTableStyle> obiekt <xref:System.Data.DataTable>z <xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A> ,ustaw<xref:System.Data.DataTable.TableName%2A> wartość z na .<xref:System.Data.DataTable> <xref:System.Windows.Forms.DataGridTableStyle> Aby uzyskać więcej informacji na temat powiązania z tablicą obiektów, zobacz <xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A?displayProperty=nameWithType> właściwość.  
  
 Aby utworzyć dostosowany widok tabeli <xref:System.Windows.Forms.DataGridTextBoxColumn> , Utwórz wystąpienie klasy lub <xref:System.Windows.Forms.DataGridBoolColumn> i <xref:System.Windows.Forms.GridTableStylesCollection> Dodaj obiekt <xref:System.Windows.Forms.DataGrid.TableStyles%2A> do dostępu za pomocą właściwości. Obie klasy dziedziczą <xref:System.Windows.Forms.DataGridColumnStyle>z. Dla każdego stylu kolumny Ustaw <xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A> <xref:System.Data.DataColumn.ColumnName%2A> wartość na dla kolumny, która ma być wyświetlana w siatce. Aby ukryć kolumnę, ustaw jej <xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A> wartość inną niż nieprawidłowa. <xref:System.Data.DataColumn.ColumnName%2A>  
  
 Aby sformatować tekst <xref:System.Windows.Forms.DataGridTextBoxColumn.Format%2A> kolumny, należy ustawić właściwość <xref:System.Windows.Forms.DataGridTextBoxColumn> na jedną z wartości znalezionych w [typach formatowania](~/docs/standard/base-types/formatting-types.md) i [niestandardowych ciągach formatu daty i godziny](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  
  
 Aby powiązać <xref:System.Windows.Forms.DataGrid> obiekt z silnie wpisaną tablicą obiektów, typ obiektu musi zawierać właściwości publiczne. Aby utworzyć element <xref:System.Windows.Forms.DataGridTableStyle> , który wyświetla tablicę, <xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A?displayProperty=nameWithType> ustaw właściwość na `typename[]` miejsce `typename` , w którym jest zastępowana nazwą typu obiektu. Należy również zauważyć, <xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A> że właściwość jest uwzględniana wielkość liter. nazwa typu musi być dokładnie dopasowana. <xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A> Zobacz właściwość na przykład.  
  
 Można również powiązać <xref:System.Windows.Forms.DataGrid> <xref:System.Collections.ArrayList>z. Funkcja <xref:System.Collections.ArrayList> programu polega na tym, że może zawierać obiekty z wieloma typami, <xref:System.Windows.Forms.DataGrid> ale można powiązać ją z taką listą tylko wtedy, gdy wszystkie elementy na liście są tego samego typu co pierwszy element. Oznacza to, że wszystkie obiekty muszą być tego samego typu lub muszą dziedziczyć z tej samej klasy co pierwszy element na liście. Na przykład, jeśli pierwszy element na liście to a <xref:System.Windows.Forms.Control>, drugi element może mieć wartość a <xref:System.Windows.Forms.TextBox> (która dziedziczy z <xref:System.Windows.Forms.Control>). Jeśli z drugiej strony, pierwszy element to a <xref:System.Windows.Forms.TextBox>, drugi obiekt nie może <xref:System.Windows.Forms.Control>być. Ponadto elementy muszą być w niej powiązane. <xref:System.Collections.ArrayList> Puste <xref:System.Collections.ArrayList> spowoduje powstanie pustej siatki. Ponadto obiekty w <xref:System.Collections.ArrayList> elemencie muszą zawierać właściwości publiczne. Podczas tworzenia powiązania <xref:System.Collections.ArrayList>z, <xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A> Ustaw <xref:System.Windows.Forms.DataGridTableStyle> wartość na "ArrayList" (nazwa typu).  
  
 Dla każdego <xref:System.Windows.Forms.DataGridTableStyle>z nich można ustawić atrybuty koloru i podpisu, które zastępują ustawienia <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> formantu. Jeśli jednak te właściwości nie są ustawione, domyślnie są używane ustawienia formantu. Następujące właściwości mogą zostać zastąpione przez <xref:System.Windows.Forms.DataGridTableStyle> właściwości:  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.AllowSorting%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.AlternatingBackColor%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.BackColor%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.ForeColor%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.GridLineColor%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.GridLineStyle%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.HeaderBackColor%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.HeaderFont%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.HeaderForeColor%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.LinkColor%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.PreferredColumnWidth%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.PreferredRowHeight%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.ReadOnly%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.RowHeadersVisible%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.RowHeaderWidth%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.SelectionBackColor%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.SelectionForeColor%2A>  
  
 Aby dostosować wygląd poszczególnych kolumn, należy <xref:System.Windows.Forms.DataGridColumnStyle> dodać obiekty <xref:System.Windows.Forms.GridColumnStylesCollection>do, do <xref:System.Windows.Forms.DataGridTableStyle.GridColumnStyles%2A> których dostęp odbywa się za pomocą właściwości każdego z <xref:System.Windows.Forms.DataGridTableStyle>nich. Aby synchronizować <xref:System.Windows.Forms.DataGridColumnStyle> każdy <xref:System.Data.DataColumn> z <xref:System.Data.DataTable> w,<xref:System.Data.DataColumn.ColumnName%2A> należy ustawić <xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A>na. <xref:System.Data.DataColumn> Podczas konstruowania <xref:System.Windows.Forms.DataGridColumnStyle>, można również ustawić ciąg formatowania, który określa sposób wyświetlania danych w kolumnie. Na przykład można określić, że kolumna ma używać formatu daty krótkiej do wyświetlania dat zawartych w tabeli.  
  
> [!CAUTION]
>  Zawsze twórz <xref:System.Windows.Forms.DataGridColumnStyle> obiekty i Dodaj je <xref:System.Windows.Forms.GridColumnStylesCollection> do obiektu przed dodaniem <xref:System.Windows.Forms.DataGridTableStyle> do programu <xref:System.Windows.Forms.GridTableStylesCollection>. Po dodaniu pustej <xref:System.Windows.Forms.DataGridTableStyle> <xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A> <xref:System.Windows.Forms.DataGridColumnStyle> wartości do kolekcji obiekty są generowane automatycznie. W związku z tym wyjątek zostanie wygenerowany, jeśli spróbujesz dodać nowe <xref:System.Windows.Forms.DataGridColumnStyle> obiekty ze zduplikowanymi <xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A> wartościami do. <xref:System.Windows.Forms.GridColumnStylesCollection>  
  
> [!NOTE]
>  Formant zastępuje i dodaje funkcję <xref:System.Windows.Forms.DataGrid> do <xref:System.Windows.Forms.DataGrid> kontrolki; jednak kontrolka jest zachowywana w celu zapewnienia zgodności z poprzednimi wersjami i w przyszłości, jeśli wybierzesz opcję. <xref:System.Windows.Forms.DataGridView> Aby uzyskać więcej informacji, zobacz [różnice między kontrolkami DataGridView i DataGrid Windows Forms](~/docs/framework/winforms/controls/differences-between-the-windows-forms-datagridview-and-datagrid-controls.md).  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy formularz systemu Windows, <xref:System.Data.DataSet> zawierający dwa <xref:System.Data.DataTable> obiekty i <xref:System.Data.DataRelation> , który wiąże dwie tabele. Aby wyświetlić dane, <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> kontrolka jest następnie powiązana <xref:System.Data.DataSet> <xref:System.Windows.Forms.DataGrid.SetDataBinding%2A> z metodą. Przycisk w formularzu zmienia wygląd siatki <xref:System.Windows.Forms.DataGridTableStyle> przez utworzenie dwóch obiektów i <xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A> ustawienie każdego obiektu na <xref:System.Data.DataTable.TableName%2A> jeden <xref:System.Data.DataTable> z obiektów. Przykład zawiera również kod w <xref:System.Windows.Forms.Control.MouseUp> zdarzeniu, które <xref:System.Windows.Forms.DataGrid.HitTest%2A> używa metody do drukowania kolumny, wiersza i części klikniętej siatki.  
  
 [!code-cpp[Classic DataGrid Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.DataSet" />
    <altmember cref="T:System.Data.DataView" />
    <altmember cref="T:System.Data.DataTable" />
    <altmember cref="T:System.Data.DataRow" />
    <related type="Article" href="~/docs/framework/data/adonet/index.md">ADO.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGrid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGrid();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.DataGrid" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> Aby wypełnić nowo utworzony formant, <xref:System.Windows.Forms.DataGrid.DataSource%2A> ustaw właściwość na prawidłowe <xref:System.Data.DataView>źródło, takie jak, <xref:System.Data.DataSet>lub <xref:System.Data.DataViewManager>.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> nowe i <xref:System.Windows.Forms.DataGrid.SetDataBinding%2A> używa metody do ustawiania <xref:System.Windows.Forms.DataGrid.DataSource%2A> właściwości i <xref:System.Windows.Forms.DataGrid.DataMember%2A> .  
  
 [!code-vb[Classic DataGrid.DataGrid Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.DataGrid Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="P:System.Windows.Forms.DataGrid.DataMember" />
        <altmember cref="T:System.Data.DataView" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="T:System.Windows.Forms.GridTableStylesCollection" />
      </Docs>
    </Member>
    <Member MemberName="AllowNavigation">
      <MemberSignature Language="C#" Value="public bool AllowNavigation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowNavigation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.AllowNavigation" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowNavigation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowNavigation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowNavigation : bool with get, set" Usage="System.Windows.Forms.DataGrid.AllowNavigation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy nawigacja jest dozwolona.</summary>
        <value><see langword="true" />Jeśli nawigacja jest dozwolona; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ta właściwość jest ustawiona na `false`, linki do tabel podrzędnych nie są wyświetlane.  
  
   
  
## Examples  
 Poniższy przykład kodu przełącza <xref:System.Windows.Forms.DataGrid.AllowNavigation%2A> Właściwość `true` między i `false`.  
  
 [!code-cpp[DataGrid_AllowNavigationChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_AllowNavigationChanged/CPP/mydatagrid_allownavigationchanged.cpp#1)]
 [!code-csharp[DataGrid_AllowNavigationChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_AllowNavigationChanged/CS/mydatagrid_allownavigationchanged.cs#1)]
 [!code-vb[DataGrid_AllowNavigationChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_AllowNavigationChanged/VB/mydatagrid_allownavigationchanged.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowNavigationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AllowNavigationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AllowNavigationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.AllowNavigationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AllowNavigationChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AllowNavigationChanged;" />
      <MemberSignature Language="F#" Value="member this.AllowNavigationChanged : EventHandler " Usage="member this.AllowNavigationChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, <see cref="P:System.Windows.Forms.DataGrid.AllowNavigation" /> gdy właściwość zostanie zmieniona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli właściwość jest ustawiona na `false`, nie są wyświetlane żadne linki do tabel podrzędnych. <xref:System.Windows.Forms.DataGrid.AllowNavigation%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu resetuje <xref:System.Windows.Forms.DataGrid.AllowNavigation%2A> Właściwość i <xref:System.Windows.Forms.DataGrid.AllowNavigationChanged> wywołuje zdarzenie.  
  
 [!code-cpp[DataGrid_AllowNavigationChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_AllowNavigationChanged/CPP/mydatagrid_allownavigationchanged.cpp#1)]
 [!code-csharp[DataGrid_AllowNavigationChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_AllowNavigationChanged/CS/mydatagrid_allownavigationchanged.cs#1)]
 [!code-vb[DataGrid_AllowNavigationChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_AllowNavigationChanged/VB/mydatagrid_allownavigationchanged.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowSorting">
      <MemberSignature Language="C#" Value="public bool AllowSorting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowSorting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.AllowSorting" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowSorting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowSorting { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowSorting : bool with get, set" Usage="System.Windows.Forms.DataGrid.AllowSorting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy można przystąpić do siatki, klikając nagłówek kolumny.</summary>
        <value><see langword="true" />Jeśli kolumny można sortować; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest zastępowana przez <xref:System.Windows.Forms.DataGridTableStyle.AllowSorting%2A?displayProperty=nameWithType> właściwość, jeśli istnieje <xref:System.Windows.Forms.DataGridTableStyle> już efekt dla formantu.  
  
 Jeśli sortowanie jest dozwolone, kliknięcie nagłówka kolumny spowoduje posortowanie danych tabeli według tej kolumny.  
  
 Można również sortować przy użyciu wyrażenia dla elementu <xref:System.Data.DataColumn>. Aby <xref:System.Data.DataColumn.Expression%2A> uzyskać szczegółowe informacje na temat tworzenia wyrażenia sortowania, zobacz.  
  
 Jeśli jest powiązany <xref:System.Data.DataView>z, można ustawić niestandardowe sortowanie <xref:System.Data.DataView> dla <xref:System.Data.DataView.Sort%2A> tabeli przy użyciu właściwości klasy. <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> Podobnie, <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> jeśli jest powiązany <xref:System.Data.DataViewManager> <xref:System.Data.DataViewManager>z, każda tabela w <xref:System.Data.DataViewManager.DataViewSettings%2A> może mieć niestandardowe sortowanie przez ustawienie <xref:System.Data.DataViewSetting.Sort%2A> właściwości klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu przełącza <xref:System.Windows.Forms.DataGrid.AllowSorting%2A> właściwość.  
  
 [!code-cpp[Classic DataGrid.AllowSorting Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.AllowSorting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.AllowSorting Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.AllowSorting Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.AllowSorting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.AllowSorting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataView.Sort" />
        <altmember cref="P:System.Data.DataViewSetting.Sort" />
        <altmember cref="T:System.Windows.Forms.DataGridTableStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.AllowSorting" />
      </Docs>
    </Member>
    <Member MemberName="AlternatingBackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color AlternatingBackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color AlternatingBackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.AlternatingBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property AlternatingBackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color AlternatingBackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.AlternatingBackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGrid.AlternatingBackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor tła wierszy z nieparzystymi numerami siatki.</summary>
        <value><see cref="T:System.Drawing.Color" /> Reprezentujący przemienny kolor tła. Wartość domyślna to kolor systemu Windows (<see cref="P:System.Drawing.SystemColors.Window" />).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie zarówno <xref:System.Windows.Forms.DataGrid.BackColor%2A> <xref:System.Windows.Forms.DataGrid.AlternatingBackColor%2A> właściwości, jak i są ustawione na ten sam kolor. Ustawienie właściwości ma wpływ tylko na wiersze parzyste, podczas gdy ustawienie <xref:System.Windows.Forms.DataGrid.AlternatingBackColor%2A> dotyczy tylko wierszy z numerami nieparzystymi. <xref:System.Windows.Forms.DataGrid.BackColor%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia <xref:System.Windows.Forms.DataGrid.AlternatingBackColor%2A> <xref:System.Drawing.Color> jako wartość.  
  
 [!code-vb[Classic DataGrid.AlternatingBackColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.AlternatingBackColor Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackButtonClick">
      <MemberSignature Language="C#" Value="public event EventHandler BackButtonClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackButtonClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.BackButtonClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackButtonClick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackButtonClick;" />
      <MemberSignature Language="F#" Value="member this.BackButtonClick : EventHandler " Usage="member this.BackButtonClick : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, <see langword="Back" /> gdy zostanie kliknięty przycisk w tabeli podrzędnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przycisk `Back` jest widoczny, gdy zostanie wyświetlona tabela podrzędna. Kliknięcie przycisku spowoduje wyświetlenie tabeli nadrzędnej siatki.  
  
   
  
## Examples  
 Poniższy przykład kodu dodaje procedurę obsługi zdarzeń dla <xref:System.Windows.Forms.DataGrid.BackButtonClick> zdarzenia.  
  
 [!code-cpp[DataGrid_BackgroundColorChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_BackgroundColorChanged/CPP/mydatagrid_backgroundcolorchanged.cpp#1)]
 [!code-csharp[DataGrid_BackgroundColorChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_BackgroundColorChanged/CS/mydatagrid_backgroundcolorchanged.cs#1)]
 [!code-vb[DataGrid_BackgroundColorChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_BackgroundColorChanged/VB/mydatagrid_backgroundcolorchanged.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGrid.AllowNavigation" />
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGrid.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor tła wierszy z parzystymi numerami siatki.</summary>
        <value><see cref="T:System.Drawing.Color" /> Reprezentujący kolor wierszy w siatce. Wartość domyślna to kolor systemu Windows (<see cref="P:System.Drawing.SystemColors.Window" />).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Natomiast Właściwość określa kolor wierszy w siatce <xref:System.Windows.Forms.DataGrid.BackgroundColor%2A> , określa kolor obszaru nonrow, który jest widoczny tylko wtedy, gdy siatka jest przewijana do dołu lub w siatce znajduje się tylko kilka wierszy. <xref:System.Windows.Forms.DataGrid.BackColor%2A>  
  
 Domyślnie zarówno <xref:System.Windows.Forms.DataGrid.BackColor%2A> <xref:System.Windows.Forms.DataGrid.AlternatingBackColor%2A> właściwości, jak i są ustawione na ten sam kolor. Ustawienie właściwości ma wpływ tylko na wiersze parzyste, podczas gdy ustawienie <xref:System.Windows.Forms.DataGrid.AlternatingBackColor%2A> dotyczy tylko wierszy z numerami nieparzystymi. <xref:System.Windows.Forms.DataGrid.BackColor%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia <xref:System.Windows.Forms.DataGrid.BackColor%2A> właściwości i <xref:System.Windows.Forms.DataGrid.BackgroundColor%2A> na różne wartości.  
  
 [!code-cpp[Classic DataGrid.BackColor Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.BackColor Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.BackColor Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.BackColor Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.BackColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.BackColor Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGrid.BackgroundColor" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackgroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackgroundColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.BackgroundColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackgroundColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackgroundColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGrid.BackgroundColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor obszaru niebędącego wierszem siatki.</summary>
        <value><see cref="T:System.Drawing.Color" /> Reprezentujący kolor tła siatki. Wartość domyślna to <see cref="P:System.Drawing.SystemColors.AppWorkspace" /> kolor.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Określa kolor obszaru nonrow siatki, który jest widoczny tylko wtedy <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>, gdy tabela nie jest wyświetlana przez, lub jeśli siatka jest przewijana do dołu lub w siatce znajduje się tylko kilka wierszy. <xref:System.Windows.Forms.DataGrid.BackgroundColor%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia <xref:System.Windows.Forms.DataGrid.BackColor%2A>właściwości, i. <xref:System.Windows.Forms.DataGrid.BackgroundColor%2A>  
  
 [!code-cpp[Classic DataGrid.BackgroundColor Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.BackgroundColor Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.BackgroundColor Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.BackgroundColor Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.BackgroundColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.BackgroundColor Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGrid.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.BackgroundColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundColorChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundColorChanged : EventHandler " Usage="member this.BackgroundColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po <see cref="P:System.Windows.Forms.DataGrid.BackgroundColor" /> zmianie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu zmienia <xref:System.Windows.Forms.DataGrid.BackgroundColor%2A> wartość właściwości z żółtej na czerwony i <xref:System.Windows.Forms.DataGrid.BackgroundColorChanged> wywołuje zdarzenie.  
  
 [!code-cpp[DataGrid_BackgroundColorChanged#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_BackgroundColorChanged/CPP/mydatagrid_backgroundcolorchanged.cpp#2)]
 [!code-csharp[DataGrid_BackgroundColorChanged#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_BackgroundColorChanged/CS/mydatagrid_backgroundcolorchanged.cs#2)]
 [!code-vb[DataGrid_BackgroundColorChanged#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_BackgroundColorChanged/VB/mydatagrid_backgroundcolorchanged.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImage : System.Drawing.Image with get, set" Usage="System.Windows.Forms.DataGrid.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ten element członkowski nie ma znaczenia dla tego formantu.</summary>
        <value>Obraz tła skojarzony z formantem.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageChanged : EventHandler " Usage="member this.BackgroundImageChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wartość właściwości zostanie <see cref="P:System.Windows.Forms.DataGrid.BackgroundImage" /> zmieniona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość nie ma znaczenia dla tego formantu, chociaż można zmienić jej wartość i <xref:System.Windows.Forms.DataGrid.BackgroundImageChanged> obsłużyć zdarzenie, aby wykryć zmianę. <xref:System.Windows.Forms.DataGrid.BackgroundImage%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayout : System.Windows.Forms.ImageLayout with get, set" Usage="System.Windows.Forms.DataGrid.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ten element członkowski nie ma znaczenia dla tego formantu.</summary>
        <value><see cref="T:System.Windows.Forms.ImageLayout" /> Wartość.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayoutChanged : EventHandler " Usage="member this.BackgroundImageLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wartość właściwości zostanie <see cref="P:System.Windows.Forms.DataGrid.BackgroundImageLayout" /> zmieniona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość nie ma znaczenia dla tego formantu, chociaż można zmienić jej wartość i <xref:System.Windows.Forms.DataGrid.BackgroundImageLayoutChanged> obsłużyć zdarzenie, aby wykryć zmianę. <xref:System.Windows.Forms.DataGrid.BackgroundImageLayout%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public bool BeginEdit (System.Windows.Forms.DataGridColumnStyle gridColumn, int rowNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool BeginEdit(class System.Windows.Forms.DataGridColumnStyle gridColumn, int32 rowNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.BeginEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginEdit (gridColumn As DataGridColumnStyle, rowNumber As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool BeginEdit(System::Windows::Forms::DataGridColumnStyle ^ gridColumn, int rowNumber);" />
      <MemberSignature Language="F#" Value="abstract member BeginEdit : System.Windows.Forms.DataGridColumnStyle * int -&gt; bool&#xA;override this.BeginEdit : System.Windows.Forms.DataGridColumnStyle * int -&gt; bool" Usage="dataGrid.BeginEdit (gridColumn, rowNumber)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataGridEditingService.BeginEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gridColumn" Type="System.Windows.Forms.DataGridColumnStyle" />
        <Parameter Name="rowNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="gridColumn">A <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> do edycji.</param>
        <param name="rowNumber">Numer wiersza do edycji.</param>
        <summary>Próbuje umieścić siatkę w stanie, w którym można edytować.</summary>
        <returns><see langword="true" />Jeśli metoda zakończy się pomyślnie; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Siatka będzie odrzucać żądania edycji, jeśli użytkownik już uruchomił tekst w komórce. W takim przypadku metoda zwróci <xref:System.Windows.Forms.DataGrid.BeginEdit%2A> `false`wartość.  
  
   
  
## Examples  
 Poniższy przykład kodu używa metody do <xref:System.Windows.Forms.DataGrid.BeginEdit%2A> testowania, czy możliwa jest edycja przed zmianą określonej kolumny i wiersza.  
  
 [!code-cpp[Classic DataGrid.BeginEdit Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.BeginEdit Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.BeginEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGrid.EndEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="dataGrid.BeginInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rozpoczyna inicjalizację <see cref="T:System.Windows.Forms.DataGrid" /> , która jest używana w formularzu lub używana przez inny składnik. Inicjalizacja występuje w czasie wykonywania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Środowisko projektowe programu Visual Studio używa tej metody do uruchamiania inicjowania składnika, który jest używany w formularzu lub używany przez inny składnik. <xref:System.Windows.Forms.DataGrid.EndInit%2A> Metoda przerywa inicjalizację. Użycie metod <xref:System.Windows.Forms.DataGrid.EndInit%2A> i uniemożliwia użycie kontrolki przed jej pełnym zainicjowaniem. <xref:System.Windows.Forms.DataGrid.BeginInit%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGrid.EndInit" />
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BorderStyle BorderStyle { System::Windows::Forms::BorderStyle get(); void set(System::Windows::Forms::BorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderStyle : System.Windows.Forms.BorderStyle with get, set" Usage="System.Windows.Forms.DataGrid.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia styl obramowania siatki.</summary>
        <value>Jedna z <see cref="T:System.Windows.Forms.BorderStyle" /> wartości wyliczenia. Wartość domyślna to <see langword="FixedSingle" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu ustawia styl obramowania siatki.  
  
 [!code-vb[Classic DataGrid.BorderStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.BorderStyle Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BorderStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BorderStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.BorderStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BorderStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BorderStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.BorderStyleChanged : EventHandler " Usage="member this.BorderStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po <see cref="P:System.Windows.Forms.DataGrid.BorderStyle" /> zmianie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możliwe wartości to `None`m.in `FixedSingle`., `Fixed3D`i.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportuje wystąpienie <xref:System.Windows.Forms.DataGrid.BorderStyleChanged> zdarzenia. Ten raport pomaga dowiedzieć się, kiedy wystąpi zdarzenie i może pomóc w debugowaniu. Aby zgłosić wiele zdarzeń lub zdarzenia, które występują często, należy rozważyć <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> zamianę <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączenie komunikatu do wielowierszowego <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu zawierającego wystąpienie typu <xref:System.Windows.Forms.DataGrid> o nazwie. `DataGrid1` Następnie upewnij się, że program obsługi zdarzeń jest skojarzony <xref:System.Windows.Forms.DataGrid.BorderStyleChanged> ze zdarzeniem.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#194](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#194)]
 [!code-vb[System.Windows.Forms.EventExamples#194](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#194)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelEditing">
      <MemberSignature Language="C#" Value="protected virtual void CancelEditing ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CancelEditing() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.CancelEditing" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CancelEditing ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CancelEditing();" />
      <MemberSignature Language="F#" Value="abstract member CancelEditing : unit -&gt; unit&#xA;override this.CancelEditing : unit -&gt; unit" Usage="dataGrid.CancelEditing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Anuluje bieżącą operację edycji i wycofuje wszystkie zmiany.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptionBackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color CaptionBackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color CaptionBackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.CaptionBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property CaptionBackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color CaptionBackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.CaptionBackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGrid.CaptionBackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor tła obszaru podpisu.</summary>
        <value><see cref="T:System.Drawing.Color" /> Reprezentujący kolor tła podpisu. Wartość domyślna to <see cref="P:System.Drawing.SystemColors.ActiveCaption" /> Color.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu ustawia <xref:System.Windows.Forms.DataGrid.CaptionBackColor%2A> Właściwość <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> formantu.  
  
 [!code-vb[Classic DataGrid.CaptionBackColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.CaptionBackColor Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGrid.CaptionForeColor" />
        <altmember cref="P:System.Windows.Forms.DataGrid.CaptionFont" />
      </Docs>
    </Member>
    <Member MemberName="CaptionFont">
      <MemberSignature Language="C#" Value="public System.Drawing.Font CaptionFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font CaptionFont" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.CaptionFont" />
      <MemberSignature Language="VB.NET" Value="Public Property CaptionFont As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ CaptionFont { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CaptionFont : System.Drawing.Font with get, set" Usage="System.Windows.Forms.DataGrid.CaptionFont" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AmbientValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia czcionkę napisu siatki.</summary>
        <value><see cref="T:System.Drawing.Font" /> Reprezentujący czcionkę podpisu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Font> Hermetyzuje czcionkę systemu Windows i zapewnia metody manipulowania tą czcionką.  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia czcionkę podpisu przy użyciu <xref:System.Drawing.Font> obiektu.  
  
 [!code-vb[Classic DataGrid.CaptionFont Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.CaptionFont Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGrid.CaptionBackColor" />
        <altmember cref="P:System.Windows.Forms.DataGrid.CaptionForeColor" />
      </Docs>
    </Member>
    <Member MemberName="CaptionForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color CaptionForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color CaptionForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.CaptionForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property CaptionForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color CaptionForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.CaptionForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGrid.CaptionForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor pierwszego planu obszaru podpisu.</summary>
        <value><see cref="T:System.Drawing.Color" /> Reprezentujący kolor pierwszego planu obszaru podpisu. Wartość domyślna to <see cref="P:System.Drawing.SystemColors.ActiveCaptionText" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu ustawia <xref:System.Windows.Forms.DataGrid.CaptionForeColor%2A> Właściwość <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> formantu.  
  
 [!code-vb[Classic DataGrid.CaptionForeColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.CaptionForeColor Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGrid.CaptionBackColor" />
        <altmember cref="P:System.Windows.Forms.DataGrid.CaptionFont" />
      </Docs>
    </Member>
    <Member MemberName="CaptionText">
      <MemberSignature Language="C#" Value="public string CaptionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CaptionText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.CaptionText" />
      <MemberSignature Language="VB.NET" Value="Public Property CaptionText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CaptionText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CaptionText : string with get, set" Usage="System.Windows.Forms.DataGrid.CaptionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst podpisu okna siatki.</summary>
        <value>Ciąg, który ma być wyświetlany jako podpis okna siatki. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu ustawia podpis elementu <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>.  
  
 [!code-cpp[Classic DataGrid.CaptionText Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.CaptionText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.CaptionText Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.CaptionText Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.CaptionText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.CaptionText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGrid.CaptionVisible" />
        <altmember cref="P:System.Windows.Forms.DataGrid.CaptionForeColor" />
        <altmember cref="P:System.Windows.Forms.DataGrid.CaptionFont" />
        <altmember cref="P:System.Windows.Forms.DataGrid.CaptionBackColor" />
      </Docs>
    </Member>
    <Member MemberName="CaptionVisible">
      <MemberSignature Language="C#" Value="public bool CaptionVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CaptionVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.CaptionVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property CaptionVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CaptionVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CaptionVisible : bool with get, set" Usage="System.Windows.Forms.DataGrid.CaptionVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy podpis siatki jest widoczny.</summary>
        <value><see langword="true" />Jeśli podpis jest widoczny; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Windows.Forms.DataGrid.CaptionVisible%2A> jest `false`, przycisk **Wstecz** , przycisk **ParentRow** i podpis nie będą widoczne. Ponieważ nawigacja jest ograniczona, linki do tabel podrzędnych również nie będą widoczne i <xref:System.Windows.Forms.DataGrid.AllowNavigation%2A> zostaną ustawione na. `None`  
  
   
  
## Examples  
 Poniższy przykład kodu przełącza <xref:System.Windows.Forms.DataGrid.CaptionVisible%2A> właściwość.  
  
 [!code-vb[Classic DataGrid.CaptionVisible Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.CaptionVisible Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptionVisibleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CaptionVisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CaptionVisibleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.CaptionVisibleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CaptionVisibleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CaptionVisibleChanged;" />
      <MemberSignature Language="F#" Value="member this.CaptionVisibleChanged : EventHandler " Usage="member this.CaptionVisibleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, <see cref="P:System.Windows.Forms.DataGrid.CaptionVisible" /> gdy właściwość zostanie zmieniona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego zdarzenia.  
  
 [!code-cpp[DataGrid_CaptionVisibleChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_CaptionVisibleChanged/CPP/mydatagrid_captionvisiblechanged.cpp#1)]
 [!code-csharp[DataGrid_CaptionVisibleChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_CaptionVisibleChanged/CS/mydatagrid_captionvisiblechanged.cs#1)]
 [!code-vb[DataGrid_CaptionVisibleChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_CaptionVisibleChanged/VB/mydatagrid_captionvisiblechanged.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Collapse">
      <MemberSignature Language="C#" Value="public void Collapse (int row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Collapse(int32 row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.Collapse(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Collapse (row As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Collapse(int row);" />
      <MemberSignature Language="F#" Value="member this.Collapse : int -&gt; unit" Usage="dataGrid.Collapse row" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="row">Numer wiersza, który ma zostać zwinięty. Jeśli ustawiono wartość-1, wszystkie wiersze są zwijane.</param>
        <summary>Zwija relacje podrzędne, jeśli istnieją dla wszystkich wierszy lub dla określonego wiersza.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Windows.Forms.DataGrid.IsExpanded%2A> , aby określić, czy wiersz jest rozwinięty.  
  
   
  
## Examples  
 Poniższy przykład kodu zwija wszystkie wiersze w <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> formancie.  
  
 [!code-vb[Classic DataGrid.Collapse Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.Collapse Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGrid.IsExpanded(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersVisible">
      <MemberSignature Language="C#" Value="public bool ColumnHeadersVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ColumnHeadersVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.ColumnHeadersVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnHeadersVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ColumnHeadersVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersVisible : bool with get, set" Usage="System.Windows.Forms.DataGrid.ColumnHeadersVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy nagłówki kolumn tabeli są widoczne.</summary>
        <value><see langword="true" />Jeśli nagłówki kolumn są widoczne; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu przełącza <xref:System.Windows.Forms.DataGrid.ColumnHeadersVisible%2A> właściwość.  
  
 [!code-vb[Classic DataGrid.ColumnHeadersVisible Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.ColumnHeadersVisible Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridColumnStyle" />
        <altmember cref="T:System.Windows.Forms.GridColumnStylesCollection" />
        <altmember cref="P:System.Windows.Forms.DataGrid.RowHeadersVisible" />
        <altmember cref="P:System.Windows.Forms.DataGrid.VisibleColumnCount" />
        <altmember cref="P:System.Windows.Forms.DataGrid.VisibleRowCount" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ColumnStartedEditing">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Informuje <see cref="T:System.Windows.Forms.DataGrid" /> o tym, że użytkownik rozpoczął edytowanie kolumny.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ColumnStartedEditing">
      <MemberSignature Language="C#" Value="protected internal virtual void ColumnStartedEditing (System.Drawing.Rectangle bounds);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void ColumnStartedEditing(valuetype System.Drawing.Rectangle bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ColumnStartedEditing(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub ColumnStartedEditing (bounds As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void ColumnStartedEditing(System::Drawing::Rectangle bounds);" />
      <MemberSignature Language="F#" Value="abstract member ColumnStartedEditing : System.Drawing.Rectangle -&gt; unit&#xA;override this.ColumnStartedEditing : System.Drawing.Rectangle -&gt; unit" Usage="dataGrid.ColumnStartedEditing bounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="bounds"><see cref="T:System.Drawing.Rectangle" /> Definiuje lokalizację edytowanej kolumny.</param>
        <summary>Informuje <see cref="T:System.Windows.Forms.DataGrid" /> formant, gdy użytkownik zacznie edytować kolumnę w określonej lokalizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy wywoływana, <xref:System.Windows.Forms.IDataGridColumnStyleEditingNotificationService.ColumnStartedEditing%2A> Metoda <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> umożliwia kontrolce wyświetlanie ołówka w nagłówku wiersza.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnStartedEditing">
      <MemberSignature Language="C#" Value="protected internal virtual void ColumnStartedEditing (System.Windows.Forms.Control editingControl);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void ColumnStartedEditing(class System.Windows.Forms.Control editingControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ColumnStartedEditing(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub ColumnStartedEditing (editingControl As Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void ColumnStartedEditing(System::Windows::Forms::Control ^ editingControl);" />
      <MemberSignature Language="F#" Value="abstract member ColumnStartedEditing : System.Windows.Forms.Control -&gt; unit&#xA;override this.ColumnStartedEditing : System.Windows.Forms.Control -&gt; unit" Usage="dataGrid.ColumnStartedEditing editingControl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editingControl" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="editingControl"><see cref="T:System.Windows.Forms.Control" /> Służy do edytowania kolumny.</param>
        <summary>Informuje <see cref="T:System.Windows.Forms.DataGrid" /> formant, gdy użytkownik rozpoczyna edycję kolumny przy użyciu określonej kontrolki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy wywoływana, <xref:System.Windows.Forms.IDataGridColumnStyleEditingNotificationService.ColumnStartedEditing%2A> Metoda <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> umożliwia kontrolce wyświetlanie ołówka w nagłówku wiersza.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="dataGrid.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie obiektu ułatwienia dostępu dla tego formantu.</summary>
        <returns><see cref="T:System.Windows.Forms.Control.ControlAccessibleObject" /> Dla tej kontrolki.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy pochodne nie mogą wywoływać <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> metody klasy bazowej.  
  
 <xref:System.Windows.Forms.AccessibleObject> Należy ustawić tylko następujące właściwości:  
  
-   <xref:System.Windows.Forms.AccessibleObject.Role%2A>  
  
-   <xref:System.Windows.Forms.AccessibleObject.Description%2A>  
  
-   <xref:System.Windows.Forms.AccessibleObject.Name%2A>  
  
 Wszystkie inne właściwości są obsługiwane przez <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> samą siebie.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateGridColumn">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy nowy <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> , który zostanie dodany do kontrolki.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateGridColumn">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.DataGridColumnStyle CreateGridColumn (System.ComponentModel.PropertyDescriptor prop);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.DataGridColumnStyle CreateGridColumn(class System.ComponentModel.PropertyDescriptor prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.CreateGridColumn(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateGridColumn (prop As PropertyDescriptor) As DataGridColumnStyle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::DataGridColumnStyle ^ CreateGridColumn(System::ComponentModel::PropertyDescriptor ^ prop);" />
      <MemberSignature Language="F#" Value="abstract member CreateGridColumn : System.ComponentModel.PropertyDescriptor -&gt; System.Windows.Forms.DataGridColumnStyle&#xA;override this.CreateGridColumn : System.ComponentModel.PropertyDescriptor -&gt; System.Windows.Forms.DataGridColumnStyle" Usage="dataGrid.CreateGridColumn prop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridColumnStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="prop"><see cref="T:System.ComponentModel.PropertyDescriptor" /> Służy do tworzenia stylu kolumny siatki.</param>
        <summary>Tworzy nowy <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> z określonym <see cref="T:System.ComponentModel.PropertyDescriptor" />.</summary>
        <returns>Nowy <see cref="T:System.Windows.Forms.DataGridColumnStyle" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGridColumn">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.DataGridColumnStyle CreateGridColumn (System.ComponentModel.PropertyDescriptor prop, bool isDefault);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.DataGridColumnStyle CreateGridColumn(class System.ComponentModel.PropertyDescriptor prop, bool isDefault) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.CreateGridColumn(System.ComponentModel.PropertyDescriptor,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateGridColumn (prop As PropertyDescriptor, isDefault As Boolean) As DataGridColumnStyle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::DataGridColumnStyle ^ CreateGridColumn(System::ComponentModel::PropertyDescriptor ^ prop, bool isDefault);" />
      <MemberSignature Language="F#" Value="abstract member CreateGridColumn : System.ComponentModel.PropertyDescriptor * bool -&gt; System.Windows.Forms.DataGridColumnStyle&#xA;override this.CreateGridColumn : System.ComponentModel.PropertyDescriptor * bool -&gt; System.Windows.Forms.DataGridColumnStyle" Usage="dataGrid.CreateGridColumn (prop, isDefault)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridColumnStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="isDefault" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="prop"><see cref="T:System.ComponentModel.PropertyDescriptor" /> Służy do tworzenia stylu kolumny siatki.</param>
        <param name="isDefault"><see langword="true" />Aby ustawić styl kolumny jako domyślny; w przeciwnym razie. <see langword="false" /></param>
        <summary>Tworzy przy użyciu określonego <see cref="T:System.ComponentModel.PropertyDescriptor" />. <see cref="T:System.Windows.Forms.DataGridColumnStyle" /></summary>
        <returns>Nowy <see cref="T:System.Windows.Forms.DataGridColumnStyle" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridColumnStyle" />
        <altmember cref="T:System.Windows.Forms.GridColumnStylesCollection" />
      </Docs>
    </Member>
    <Member MemberName="CurrentCell">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridCell CurrentCell { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridCell CurrentCell" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.CurrentCell" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrentCell As DataGridCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridCell CurrentCell { System::Windows::Forms::DataGridCell get(); void set(System::Windows::Forms::DataGridCell value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentCell : System.Windows.Forms.DataGridCell with get, set" Usage="System.Windows.Forms.DataGrid.CurrentCell" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridCell</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia komórkę, która ma fokus. Niedostępne w czasie projektowania.</summary>
        <value><see cref="T:System.Windows.Forms.DataGridCell" /> Z fokusem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGrid.CurrentCell%2A> Ustawienie właściwości spowoduje przewinięcie siatki i wyświetlenie komórki, jeśli nie jest ona jeszcze widoczna.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak ustawić i pobrać bieżącą komórkę.  
  
 [!code-cpp[Classic DataGrid.CurrentCell Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.CurrentCell Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.CurrentCell Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.CurrentCell Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.CurrentCell Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.CurrentCell Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridCell" />
        <altmember cref="P:System.Windows.Forms.DataGrid.FirstVisibleColumn" />
      </Docs>
    </Member>
    <Member MemberName="CurrentCellChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentCellChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentCellChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.CurrentCellChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentCellChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentCellChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentCellChanged : EventHandler " Usage="member this.CurrentCellChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, <see cref="P:System.Windows.Forms.DataGrid.CurrentCell" /> gdy właściwość zostanie zmieniona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby określić bieżącą komórkę, użyj <xref:System.Windows.Forms.DataGrid.CurrentCell%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.  
  
 [!code-cpp[DataGrid_CaptionVisibleChanged#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_CaptionVisibleChanged/CPP/mydatagrid_captionvisiblechanged.cpp#2)]
 [!code-csharp[DataGrid_CaptionVisibleChanged#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_CaptionVisibleChanged/CS/mydatagrid_captionvisiblechanged.cs#2)]
 [!code-vb[DataGrid_CaptionVisibleChanged#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_CaptionVisibleChanged/VB/mydatagrid_captionvisiblechanged.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentRowIndex">
      <MemberSignature Language="C#" Value="public int CurrentRowIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentRowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.CurrentRowIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrentRowIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrentRowIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentRowIndex : int with get, set" Usage="System.Windows.Forms.DataGrid.CurrentRowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia indeks wiersza, który ma aktualnie fokus.</summary>
        <value>Indeks bieżącego wiersza (liczony od zera).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGrid.CurrentRowIndex%2A> Ustawienie właściwości na wartość inną niż jej bieżąca wartość przewija kontrolkę tak, aby określony wiersz był w widoku.  
  
 <xref:System.Windows.Forms.DataGrid.CurrentRowIndex%2A> Właściwość pozwala na iterację wierszy tabeli nadrzędnej, nawet jeśli przeglądasz wiersze tabeli podrzędnej. Na przykład, Jeśli przeglądasz tabelę podrzędną, zwiększenie wartości <xref:System.Windows.Forms.DataGrid.CurrentRowIndex%2A> spowoduje <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> wyświetlenie następnego zestawu rekordów w tabeli podrzędnej, które są połączone z tabelą nadrzędną.  
  
 Jeśli użytkownik przegląda tabelę nadrzędną lub tabelę bez relacji podrzędnych, wówczas właściwość zwraca indeks (liczony od zera) bieżącego wiersza.  
  
   
  
## Examples  
 Poniższy przykład kodu zwraca <xref:System.Windows.Forms.DataGrid.CurrentRowIndex%2A>.  
  
 [!code-cpp[Classic DataGrid.CurrentRowIndex Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.CurrentRowIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.CurrentRowIndex Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.CurrentRowIndex Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.CurrentRowIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.CurrentRowIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Nie <see cref="T:System.Windows.Forms.CurrencyManager" />ma.</exception>
        <altmember cref="T:System.Windows.Forms.CurrencyManager" />
      </Docs>
    </Member>
    <Member MemberName="Cursor">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.Cursor Cursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor Cursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.Cursor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Cursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Cursor ^ Cursor { System::Windows::Forms::Cursor ^ get(); void set(System::Windows::Forms::Cursor ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Cursor : System.Windows.Forms.Cursor with get, set" Usage="System.Windows.Forms.DataGrid.Cursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ten element członkowski nie ma znaczenia dla tego formantu.</summary>
        <value>Typ kursora, który ma być wyświetlany jako wskaźnik myszy przesuwa się nad obiektem.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CursorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CursorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.CursorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CursorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CursorChanged;" />
      <MemberSignature Language="F#" Value="member this.CursorChanged : EventHandler " Usage="member this.CursorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wartość właściwości zostanie <see cref="P:System.Windows.Forms.DataGrid.Cursor" /> zmieniona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość nie ma znaczenia dla tego formantu, chociaż można zmienić jej wartość i <xref:System.Windows.Forms.DataGrid.CursorChanged> obsłużyć zdarzenie, aby wykryć zmianę. <xref:System.Windows.Forms.DataGrid.Cursor%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataMember">
      <MemberSignature Language="C#" Value="public string DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.DataMember" />
      <MemberSignature Language="VB.NET" Value="Public Property DataMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataMember : string with get, set" Usage="System.Windows.Forms.DataGrid.DataMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataMemberListEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataMemberListEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataMemberListEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia określoną listę w elemencie, <see cref="P:System.Windows.Forms.DataGrid.DataSource" /> dla <see cref="T:System.Windows.Forms.DataGrid" /> którego formant Wyświetla siatkę.</summary>
        <value>Lista w <see cref="P:System.Windows.Forms.DataGrid.DataSource" />. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli zawiera wiele źródeł danych, należy <xref:System.Windows.Forms.DataGrid.DataMember%2A> ustawić na jedno ze źródeł. <xref:System.Windows.Forms.DataGrid.DataSource%2A> <xref:System.Windows.Forms.DataGrid.DataSource%2A> Na przykład jeśli <xref:System.Data.DataSet> jest lub <xref:System.Data.DataViewManager> , który zawiera trzy tabele o nazwach `Customers`, `Orders`i `OrderDetails`, należy określić jedną z tabel, z którą ma zostać utworzone powiązanie. <xref:System.Data.DataTable> <xref:System.Windows.Forms.DataGrid.DataMember%2A> Jeśli lub zawieratylko<xref:System.Data.DataTable.TableName%2A> jeden, należy ustawić<xref:System.Data.DataTable>na. <xref:System.Data.DataSet> <xref:System.Data.DataViewManager>  
  
 Jeśli jest ustawiona <xref:System.Data.DataSet> na, która zawiera <xref:System.Data.DataRelation> obiekty, tabele nadrzędne będą wyświetlane ze znakiem plus (+) w każdym nagłówku wiersza. <xref:System.Windows.Forms.DataGrid.DataSource%2A> Kliknięcie znaku plus powoduje wyświetlenie węzła zawierającego linki do tabel podrzędnych. Na przykład jeśli element <xref:System.Data.DataSet> zawiera dwa <xref:System.Data.DataTable> obiekty `Customers` `Orders` `Customers` <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> o nazwie i, ustawienie dotabelipowodujewyświetlenietabelinadrzędnejzznakiempluswidocznymwkażdymwierszu<xref:System.Windows.Forms.DataGrid.DataMember%2A> nagłówki. Jeśli jest ustawiona na `Orders`, nagłówki wierszy będą puste. <xref:System.Windows.Forms.DataGrid.DataMember%2A>  
  
 <xref:System.Windows.Forms.DataGrid.DataSource%2A> Jeśli <xref:System.Windows.Forms.DataGrid.DataMember%2A> jest, kolekcja<xref:System.Data.DataView>lub tablica, ustawienie właściwości zgłasza wyjątek. <xref:System.Data.DataTable>  
  
> [!NOTE]
>  W czasie wykonywania należy użyć <xref:System.Windows.Forms.DataGrid.SetDataBinding%2A> metody do <xref:System.Windows.Forms.DataGrid.DataSource%2A> zresetowania właściwości. <xref:System.Windows.Forms.DataGrid.DataMember%2A> Właściwość można jednak zresetować w dowolnym momencie do prawidłowej nazwy tabeli.  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia <xref:System.Windows.Forms.DataGrid.DataSource%2A> właściwości <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> i <xref:System.Windows.Forms.DataGrid.DataMember%2A> kontrolki.  
  
 [!code-cpp[Classic DataGrid.DataMember Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.DataMember Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.DataMember Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.DataMember Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.DataMember Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.DataMember Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGrid.DataSource" />
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="T:System.Data.DataViewManager" />
        <altmember cref="M:System.Windows.Forms.DataGrid.SetDataBinding(System.Object,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : obj with get, set" Usage="System.Windows.Forms.DataGrid.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.AttributeProvider(typeof(System.ComponentModel.IListSource))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Forms.Design.DataSourceConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia źródło danych, dla którego siatka będzie wyświetlać dane.</summary>
        <value>Obiekt, który działa jako źródło danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W czasie wykonywania Użyj <xref:System.Windows.Forms.DataGrid.SetDataBinding%2A> metody, aby <xref:System.Windows.Forms.DataGrid.DataSource%2A> ustawić właściwości i <xref:System.Windows.Forms.DataGrid.DataMember%2A> .  
  
 Następujące źródła danych są prawidłowe:  
  
-   A <xref:System.Data.DataTable>  
  
-   A <xref:System.Data.DataView>  
  
-   A <xref:System.Data.DataSet>  
  
-   A <xref:System.Data.DataViewManager>  
  
-   Dowolny składnik implementujący <xref:System.ComponentModel.IListSource> interfejs  
  
-   Dowolny składnik implementujący <xref:System.Collections.IList> interfejs  
  
 Zobacz Omówienie <xref:System.Windows.Forms.Binding> klasy, aby uzyskać więcej informacji o źródłach danych.  
  
 Jeśli odwołanie zawiera więcej niż jedną tabelę, należy <xref:System.Windows.Forms.DataGrid.DataMember%2A> ustawić ciąg, który określa tabelę, z którą ma zostać utworzone powiązanie. <xref:System.Windows.Forms.DataGrid.DataSource%2A> <xref:System.Windows.Forms.DataGrid.DataSource%2A> Na przykład jeśli <xref:System.Data.DataSet> jest lub <xref:System.Data.DataViewManager> , który zawiera trzy tabele o nazwach `Customers`, `Orders`i `OrderDetails`, należy określić tabelę, z którą ma zostać utworzone powiązanie.  
  
 Ustawienie do obiektu, który nie <xref:System.Collections.IList> implementuje interfejsu lub <xref:System.ComponentModel.IListSource> spowoduje wygenerowanie wyjątku przez siatkę. <xref:System.Windows.Forms.DataGrid.DataSource%2A>  
  
 Można utworzyć siatkę, która umożliwia użytkownikom edytowanie danych, ale uniemożliwia im Dodawanie nowych wierszy przy użyciu <xref:System.Data.DataView> jako źródła danych i <xref:System.Data.DataView.AddNew%2A> ustawienie właściwości na `false`.  
  
 Aby powiązać <xref:System.Windows.Forms.DataGrid> obiekt z silnie wpisaną tablicą obiektów, typ obiektu musi zawierać właściwości publiczne. Aby utworzyć element <xref:System.Windows.Forms.DataGridTableStyle> , który wyświetla tablicę, <xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A?displayProperty=nameWithType> ustaw właściwość na `typename` miejsce `typename` , w którym jest zastępowana nazwą typu obiektu. Należy również zauważyć, <xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A> że właściwość jest uwzględniana wielkość liter. nazwa typu musi być dokładnie dopasowana. <xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A> Zobacz właściwość na przykład.  
  
 Można również powiązać <xref:System.Windows.Forms.DataGrid> <xref:System.Collections.ArrayList>z. Funkcja <xref:System.Collections.ArrayList> programu polega na tym, że może zawierać obiekty z wieloma typami, <xref:System.Windows.Forms.DataGrid> ale można powiązać ją z taką listą tylko wtedy, gdy wszystkie elementy na liście są tego samego typu co pierwszy element. Oznacza to, że wszystkie obiekty muszą być tego samego typu lub muszą dziedziczyć z tej samej klasy co pierwszy element na liście. Na przykład, jeśli pierwszy element na liście to a <xref:System.Windows.Forms.Control>, drugi element może mieć wartość a <xref:System.Windows.Forms.TextBox> (która dziedziczy z <xref:System.Windows.Forms.Control>). Jeśli z drugiej strony, pierwszy element to a <xref:System.Windows.Forms.TextBox>, drugi obiekt nie może <xref:System.Windows.Forms.Control>być. Ponadto elementy muszą być w niej powiązane. <xref:System.Collections.ArrayList> Puste <xref:System.Collections.ArrayList> spowoduje powstanie pustej siatki. Ponadto obiekty w <xref:System.Collections.ArrayList> elemencie muszą zawierać właściwości publiczne. Podczas tworzenia powiązania <xref:System.Collections.ArrayList>z, <xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A> Ustaw <xref:System.Windows.Forms.DataGridTableStyle> wartość na "ArrayList" (nazwa typu).  
  
   
  
## Examples  
 <xref:System.Windows.Forms.DataGrid.DataSource%2A>Poniższy przykład kodu pokazuje, jak ustawić, i w razie potrzeby <xref:System.Windows.Forms.DataGrid.DataMember%2A>,, aby <xref:System.Data.DataView> powiązać <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> a i <xref:System.Data.DataSet>a. W przykładzie pokazano również, jak zwracać źródła danych z programu <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>.  
  
 [!code-cpp[Classic DataGrid.DataSource Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.DataSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.DataSource Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.DataSource Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.DataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.DataSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGrid.DataMember" />
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="T:System.Data.DataViewManager" />
        <altmember cref="T:System.Data.DataView" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataSourceChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceChanged;" />
      <MemberSignature Language="F#" Value="member this.DataSourceChanged : EventHandler " Usage="member this.DataSourceChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, <see cref="P:System.Windows.Forms.DataGrid.DataSource" /> gdy wartość właściwości zostanie zmieniona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie występuje po zmianie wartości lub po zmianie.<xref:System.Windows.Forms.DataGrid> <xref:System.Windows.Forms.BindingContext> <xref:System.Windows.Forms.DataGrid.DataMember%2A> <xref:System.Windows.Forms.DataGrid.DataSourceChanged>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.  
  
 [!code-cpp[Classic DataGrid.DataSourceChanged Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.DataSourceChanged Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.DataSourceChanged Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.DataSourceChanged Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.DataSourceChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.DataSourceChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGrid.SetDataBinding(System.Object,System.String)" />
        <altmember cref="P:System.Windows.Forms.DataGrid.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGrid.DataMember" />
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.DataGrid.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera domyślny rozmiar kontrolki.</summary>
        <value>Domyślny rozmiar kontrolki.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="dataGrid.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" />Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> do zwolnienia tylko zasobów niezarządzanych.</param>
        <summary>Usuwa zasoby (inne niż pamięć) używane przez <see cref="T:System.Windows.Forms.DataGrid" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj <xref:System.Windows.Forms.DataGrid.Dispose%2A> po zakończeniu korzystania z <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>. <xref:System.Windows.Forms.DataGrid.Dispose%2A> Metoda<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> pozostawia w stanie niezdatnym do użytku. Po wywołaniu <xref:System.Windows.Forms.DataGrid.Dispose%2A>należy wydać wszystkie odwołania <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> do, aby pamięć, która zajmowała się, mogła być odzyskiwana przez wyrzucanie elementów bezużytecznych.  
  
   
  
## Examples  
 Poniższy przykład kodu używa <xref:System.Windows.Forms.DataGrid.Dispose%2A> metody do zwolnienia zasobów.  
  
 [!code-vb[Classic DataGrid.Dispose Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.Dispose Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public bool EndEdit (System.Windows.Forms.DataGridColumnStyle gridColumn, int rowNumber, bool shouldAbort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndEdit(class System.Windows.Forms.DataGridColumnStyle gridColumn, int32 rowNumber, bool shouldAbort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.EndEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndEdit (gridColumn As DataGridColumnStyle, rowNumber As Integer, shouldAbort As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool EndEdit(System::Windows::Forms::DataGridColumnStyle ^ gridColumn, int rowNumber, bool shouldAbort);" />
      <MemberSignature Language="F#" Value="abstract member EndEdit : System.Windows.Forms.DataGridColumnStyle * int * bool -&gt; bool&#xA;override this.EndEdit : System.Windows.Forms.DataGridColumnStyle * int * bool -&gt; bool" Usage="dataGrid.EndEdit (gridColumn, rowNumber, shouldAbort)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataGridEditingService.EndEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gridColumn" Type="System.Windows.Forms.DataGridColumnStyle" />
        <Parameter Name="rowNumber" Type="System.Int32" />
        <Parameter Name="shouldAbort" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="gridColumn"><see cref="T:System.Windows.Forms.DataGridColumnStyle" /> Aby zaprzestać edytowania.</param>
        <param name="rowNumber">Numer wiersza do zaniechania edycji.</param>
        <param name="shouldAbort">Ustaw na <see langword="true" /> , jeśli bieżąca operacja powinna zostać zatrzymana.</param>
        <summary>Żąda końca operacji edycji wykonywanej na <see cref="T:System.Windows.Forms.DataGrid" /> kontrolce.</summary>
        <returns><see langword="true" />Jeśli operacja edytowania zostanie przerwana; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zwraca wartość `false` , jeśli użytkownik nie jest edytowany (wpisując tekst) w komórce. <xref:System.Windows.Forms.DataGrid.EndEdit%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu używa <xref:System.Windows.Forms.DataGrid.BeginEdit%2A> metod i <xref:System.Windows.Forms.DataGrid.EndEdit%2A> , aby edytować wartość w siatce wyświetlanej przez <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> formant.  
  
 [!code-cpp[Classic DataGrid.EndEdit Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.EndEdit Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.EndEdit Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.EndEdit Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.EndEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.EndEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGrid.BeginEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="dataGrid.EndInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zamyka inicjalizację <see cref="T:System.Windows.Forms.DataGrid" /> , która jest używana w formularzu lub używana przez inny składnik. Inicjalizacja występuje w czasie wykonywania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Środowisko projektowe programu Visual Studio korzysta z tej metody, aby zakończyć inicjalizację składnika, który jest używany w formularzu lub używany przez inny składnik. <xref:System.Windows.Forms.DataGrid.BeginInit%2A> Metoda uruchamia inicjalizację. Użycie metod <xref:System.Windows.Forms.DataGrid.EndInit%2A> i uniemożliwia użycie kontrolki przed jej pełnym zainicjowaniem. <xref:System.Windows.Forms.DataGrid.BeginInit%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGrid.BeginInit" />
      </Docs>
    </Member>
    <Member MemberName="Expand">
      <MemberSignature Language="C#" Value="public void Expand (int row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Expand(int32 row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.Expand(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Expand (row As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Expand(int row);" />
      <MemberSignature Language="F#" Value="member this.Expand : int -&gt; unit" Usage="dataGrid.Expand row" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="row">Numer wiersza do rozwinięcia. Jeśli ustawiono wartość-1, wszystkie wiersze są rozwinięte.</param>
        <summary>Wyświetla relacje podrzędne (jeśli istnieją) dla wszystkich wierszy lub konkretnego wiersza.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.  
  
 [!code-vb[Classic DataGrid.Expand Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.Expand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGrid.Expand(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="FirstVisibleColumn">
      <MemberSignature Language="C#" Value="public int FirstVisibleColumn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FirstVisibleColumn" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.FirstVisibleColumn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FirstVisibleColumn As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FirstVisibleColumn { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FirstVisibleColumn : int" Usage="System.Windows.Forms.DataGrid.FirstVisibleColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera indeks pierwszej widocznej kolumny w siatce.</summary>
        <value>Indeks <see cref="T:System.Windows.Forms.DataGridColumnStyle" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kolumna jest traktowana jako widoczna, nawet jeśli jest częściowo ukrywana.  
  
 Jeśli określona kolumna nie jest widoczna, ustaw <xref:System.Windows.Forms.DataGrid.CurrentCell%2A> właściwość na komórkę, która powinna być widoczna.  
  
   
  
## Examples  
 Poniższy przykład kodu przewija siatkę, jeśli pierwsza widoczna kolumna jest większa niż pięć.  
  
 [!code-vb[Classic DataGrid.FirstVisibleColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.FirstVisibleColumn Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGrid.CurrentCell" />
      </Docs>
    </Member>
    <Member MemberName="FlatMode">
      <MemberSignature Language="C#" Value="public bool FlatMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FlatMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.FlatMode" />
      <MemberSignature Language="VB.NET" Value="Public Property FlatMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FlatMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FlatMode : bool with get, set" Usage="System.Windows.Forms.DataGrid.FlatMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy siatka jest wyświetlana w trybie płaskim.</summary>
        <value><see langword="true" />Jeśli siatka jest wyświetlana jako płaska; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu analizuje <xref:System.Windows.Forms.DataGrid.FlatMode%2A> Właściwość i powiadamia użytkownika o stanie.  
  
 [!code-cpp[MyDataGridClass_FlatMode_ReadOnly#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MyDataGridClass_FlatMode_ReadOnly/CPP/mydatagridclass_flatmode_readonly.cpp#1)]
 [!code-csharp[MyDataGridClass_FlatMode_ReadOnly#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MyDataGridClass_FlatMode_ReadOnly/CS/mydatagridclass_flatmode_readonly.cs#1)]
 [!code-vb[MyDataGridClass_FlatMode_ReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MyDataGridClass_FlatMode_ReadOnly/VB/mydatagridclass_flatmode_readonly.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlatModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler FlatModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FlatModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.FlatModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FlatModeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ FlatModeChanged;" />
      <MemberSignature Language="F#" Value="member this.FlatModeChanged : EventHandler " Usage="member this.FlatModeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po <see cref="P:System.Windows.Forms.DataGrid.FlatMode" /> zmianie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.  
  
 [!code-cpp[MyDataGridClass_FlatMode_ReadOnly#2](~/samples/snippets/cpp/VS_Snippets_Winforms/MyDataGridClass_FlatMode_ReadOnly/CPP/mydatagridclass_flatmode_readonly.cpp#2)]
 [!code-csharp[MyDataGridClass_FlatMode_ReadOnly#2](~/samples/snippets/csharp/VS_Snippets_Winforms/MyDataGridClass_FlatMode_ReadOnly/CS/mydatagridclass_flatmode_readonly.cs#2)]
 [!code-vb[MyDataGridClass_FlatMode_ReadOnly#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MyDataGridClass_FlatMode_ReadOnly/VB/mydatagridclass_flatmode_readonly.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGrid.FlatMode" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGrid.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor pierwszego planu (zazwyczaj kolor tekstu) <see cref="T:System.Windows.Forms.DataGrid" /> formantu.</summary>
        <value><see cref="T:System.Drawing.Color" /> Reprezentujący kolor pierwszego planu. Wartość domyślna to <see cref="P:System.Drawing.SystemBrushes.WindowText" /> Color.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.  
  
 [!code-cpp[DataGrid_ColorMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_ColorMembers/CPP/datagrid_10.cpp#2)]
 [!code-csharp[DataGrid_ColorMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_ColorMembers/CS/datagrid_10.cs#2)]
 [!code-vb[DataGrid_ColorMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_ColorMembers/VB/datagrid_10.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCellBounds">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Drawing.Rectangle" /> Pobiera, który określa cztery rogi komórki.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCellBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetCellBounds (System.Windows.Forms.DataGridCell dgc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetCellBounds(valuetype System.Windows.Forms.DataGridCell dgc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.GetCellBounds(System.Windows.Forms.DataGridCell)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCellBounds (dgc As DataGridCell) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetCellBounds(System::Windows::Forms::DataGridCell dgc);" />
      <MemberSignature Language="F#" Value="member this.GetCellBounds : System.Windows.Forms.DataGridCell -&gt; System.Drawing.Rectangle" Usage="dataGrid.GetCellBounds dgc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dgc" Type="System.Windows.Forms.DataGridCell" />
      </Parameters>
      <Docs>
        <param name="dgc"><see cref="T:System.Windows.Forms.DataGridCell" /> Aby wyszukać.</param>
        <summary>Pobiera komórkę określoną przez <see cref="T:System.Windows.Forms.DataGridCell" />. <see cref="T:System.Drawing.Rectangle" /></summary>
        <returns><see cref="T:System.Drawing.Rectangle" /> , Który definiuje rogi bieżącej komórki.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu używa <xref:System.Windows.Forms.DataGrid.GetCellBounds%2A> metody do <xref:System.Drawing.Rectangle> zwrócenia określonej komórki.  
  
 [!code-cpp[Classic DataGrid.GetCellBounds1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.GetCellBounds1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.GetCellBounds1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.GetCellBounds1 Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.GetCellBounds1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.GetCellBounds1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGrid.GetCurrentCellBounds" />
      </Docs>
    </Member>
    <Member MemberName="GetCellBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetCellBounds (int row, int col);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetCellBounds(int32 row, int32 col) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.GetCellBounds(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCellBounds (row As Integer, col As Integer) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetCellBounds(int row, int col);" />
      <MemberSignature Language="F#" Value="member this.GetCellBounds : int * int -&gt; System.Drawing.Rectangle" Usage="dataGrid.GetCellBounds (row, col)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Int32" />
        <Parameter Name="col" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="row">Numer wiersza komórki.</param>
        <param name="col">Numer kolumny komórki.</param>
        <summary><see cref="T:System.Drawing.Rectangle" /> Pobiera komórkę określoną przez numer wiersza i kolumny.</summary>
        <returns><see cref="T:System.Drawing.Rectangle" /> , Który definiuje rogi bieżącej komórki.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby pobrać granice komórek dla aktualnie zaznaczonej komórki, użyj <xref:System.Windows.Forms.DataGrid.GetCurrentCellBounds%2A>.  
  
   
  
## Examples  
 Poniższy przykład kodu używa <xref:System.Windows.Forms.DataGrid.GetCellBounds%2A> metody do <xref:System.Drawing.Rectangle> zwrócenia określonej komórki.  
  
 [!code-cpp[Classic DataGrid.GetCellBounds Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.GetCellBounds Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.GetCellBounds Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.GetCellBounds Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.GetCellBounds Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.GetCellBounds Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGrid.GetCurrentCellBounds" />
        <altmember cref="P:System.Windows.Forms.DataGrid.CurrentCell" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentCellBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetCurrentCellBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetCurrentCellBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.GetCurrentCellBounds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentCellBounds () As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetCurrentCellBounds();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentCellBounds : unit -&gt; System.Drawing.Rectangle" Usage="dataGrid.GetCurrentCellBounds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Drawing.Rectangle" /> Pobiera, który określa cztery rogi zaznaczonej komórki.</summary>
        <returns><see cref="T:System.Drawing.Rectangle" /> , Który definiuje rogi bieżącej komórki.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby pobrać granice komórek dla komórki innej niż bieżąca, użyj <xref:System.Windows.Forms.DataGrid.GetCellBounds%2A>.  
  
   
  
## Examples  
 Poniższy przykład kodu pobiera wartość <xref:System.Drawing.Rectangle> zaznaczonej komórki.  
  
 [!code-cpp[Classic DataGrid.GetCurrentCellBounds Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.GetCurrentCellBounds Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.GetCurrentCellBounds Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.GetCurrentCellBounds Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.GetCurrentCellBounds Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.GetCurrentCellBounds Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGrid.GetCellBounds(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetOutputTextDelimiter">
      <MemberSignature Language="C#" Value="protected virtual string GetOutputTextDelimiter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetOutputTextDelimiter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.GetOutputTextDelimiter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetOutputTextDelimiter () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetOutputTextDelimiter();" />
      <MemberSignature Language="F#" Value="abstract member GetOutputTextDelimiter : unit -&gt; string&#xA;override this.GetOutputTextDelimiter : unit -&gt; string" Usage="dataGrid.GetOutputTextDelimiter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera ciąg, który jest ogranicznikiem między kolumnami, gdy zawartość wierszy jest kopiowana do Schowka.</summary>
        <returns>Wartość ciągu "\t", która reprezentuje kartę służącą do oddzielania kolumn w wierszu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GridHScrolled">
      <MemberSignature Language="C#" Value="protected virtual void GridHScrolled (object sender, System.Windows.Forms.ScrollEventArgs se);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GridHScrolled(object sender, class System.Windows.Forms.ScrollEventArgs se) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.GridHScrolled(System.Object,System.Windows.Forms.ScrollEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GridHScrolled (sender As Object, se As ScrollEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GridHScrolled(System::Object ^ sender, System::Windows::Forms::ScrollEventArgs ^ se);" />
      <MemberSignature Language="F#" Value="abstract member GridHScrolled : obj * System.Windows.Forms.ScrollEventArgs -&gt; unit&#xA;override this.GridHScrolled : obj * System.Windows.Forms.ScrollEventArgs -&gt; unit" Usage="dataGrid.GridHScrolled (sender, se)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="se" Type="System.Windows.Forms.ScrollEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender"><see cref="T:System.Object" /> Zawierający dane o kontrolce.</param>
        <param name="se">A <see cref="T:System.Windows.Forms.ScrollEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary>Nasłuchuje zdarzenia przewijania poziomego paska przewijania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GridLineColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color GridLineColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color GridLineColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.GridLineColor" />
      <MemberSignature Language="VB.NET" Value="Public Property GridLineColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color GridLineColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.GridLineColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGrid.GridLineColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor linii siatki.</summary>
        <value><see cref="T:System.Drawing.Color" /> Reprezentujący kolor linii siatki. Wartość domyślna to kolor systemu dla kontrolek (<see cref="P:System.Drawing.SystemColors.Control" />).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie jest wyświetlany żaden wiersz siatki, <xref:System.Windows.Forms.DataGrid.GridLineStyle%2A> Jeśli właściwość jest ustawiona `DataGridLineStyle.None`na.  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia kolor linii siatki przy użyciu wartości przekazaną do metody.  
  
 [!code-cpp[Classic DataGrid.GridLineColor Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.GridLineColor Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.GridLineColor Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.GridLineColor Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.GridLineColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.GridLineColor Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość nie jest ustawiona.</exception>
        <altmember cref="P:System.Windows.Forms.DataGrid.GridLineStyle" />
      </Docs>
    </Member>
    <Member MemberName="GridLineStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridLineStyle GridLineStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridLineStyle GridLineStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.GridLineStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property GridLineStyle As DataGridLineStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridLineStyle GridLineStyle { System::Windows::Forms::DataGridLineStyle get(); void set(System::Windows::Forms::DataGridLineStyle value); };" />
      <MemberSignature Language="F#" Value="member this.GridLineStyle : System.Windows.Forms.DataGridLineStyle with get, set" Usage="System.Windows.Forms.DataGrid.GridLineStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridLineStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia styl linii siatki.</summary>
        <value>Jedna z <see cref="T:System.Windows.Forms.DataGridLineStyle" /> wartości. Wartość domyślna to <see langword="Solid" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu zmienia właściwość, <xref:System.Windows.Forms.DataGrid.GridLineStyle%2A> aby nie wyświetlać wierszy.  
  
 [!code-vb[Classic DataGrid.GridLineStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.GridLineStyle Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGrid.GridLineColor" />
      </Docs>
    </Member>
    <Member MemberName="GridVScrolled">
      <MemberSignature Language="C#" Value="protected virtual void GridVScrolled (object sender, System.Windows.Forms.ScrollEventArgs se);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GridVScrolled(object sender, class System.Windows.Forms.ScrollEventArgs se) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.GridVScrolled(System.Object,System.Windows.Forms.ScrollEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GridVScrolled (sender As Object, se As ScrollEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GridVScrolled(System::Object ^ sender, System::Windows::Forms::ScrollEventArgs ^ se);" />
      <MemberSignature Language="F#" Value="abstract member GridVScrolled : obj * System.Windows.Forms.ScrollEventArgs -&gt; unit&#xA;override this.GridVScrolled : obj * System.Windows.Forms.ScrollEventArgs -&gt; unit" Usage="dataGrid.GridVScrolled (sender, se)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="se" Type="System.Windows.Forms.ScrollEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender"><see cref="T:System.Object" /> Zawierający dane o kontrolce.</param>
        <param name="se">A <see cref="T:System.Windows.Forms.ScrollEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary>Nasłuchuje zdarzenia przewijania pionowego paska przewijania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderBackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color HeaderBackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color HeaderBackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.HeaderBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderBackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color HeaderBackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderBackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGrid.HeaderBackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor tła wszystkich nagłówków wierszy i kolumn.</summary>
        <value><see cref="T:System.Drawing.Color" /> Reprezentujący kolor tła nagłówków wierszy i kolumn. Wartość domyślna to kolor systemu dla kontrolek <see cref="P:System.Drawing.SystemColors.Control" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu ustawia kolor tła nagłówków kolumn przy użyciu wartości przekazaną do metody.  
  
 [!code-vb[Classic DataGrid.HeaderBackColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.HeaderBackColor Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Podczas próby ustawienia właściwości <see langword="Color.Empty" /> została przekazana.</exception>
        <altmember cref="P:System.Windows.Forms.DataGrid.HeaderForeColor" />
        <altmember cref="P:System.Windows.Forms.DataGrid.FlatMode" />
      </Docs>
    </Member>
    <Member MemberName="HeaderFont">
      <MemberSignature Language="C#" Value="public System.Drawing.Font HeaderFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font HeaderFont" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.HeaderFont" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderFont As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ HeaderFont { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderFont : System.Drawing.Font with get, set" Usage="System.Windows.Forms.DataGrid.HeaderFont" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia czcionkę używaną w nagłówkach kolumn.</summary>
        <value><see cref="T:System.Drawing.Font" /> Reprezentuje tekst nagłówka.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest zazwyczaj używana tylko <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>w przypadku tworzenia projektanta dla lub tworzenia własnej kontrolki zawierającej. <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color HeaderForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color HeaderForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.HeaderForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color HeaderForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGrid.HeaderForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor pierwszego planu nagłówków.</summary>
        <value><see cref="T:System.Drawing.Color" /> Reprezentujący kolor pierwszego planu nagłówków kolumn siatki, włącznie z tekstem nagłówka kolumny i symbolami plus/minus. Wartość domyślna to <see cref="P:System.Drawing.SystemColors.ControlText" /> Color.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu ustawia kolor pierwszego planu nagłówków kolumn siatki.  
  
 [!code-vb[Classic DataGrid.HeaderForeColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.HeaderForeColor Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGrid.FlatMode" />
        <altmember cref="P:System.Windows.Forms.DataGrid.HeaderBackColor" />
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTest">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera informacje o <see cref="T:System.Windows.Forms.DataGrid" /> kontrolce w określonym punkcie na ekranie.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGrid.HitTestInfo HitTest (System.Drawing.Point position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataGrid/HitTestInfo HitTest(valuetype System.Drawing.Point position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.HitTest(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (position As Point) As DataGrid.HitTestInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataGrid::HitTestInfo ^ HitTest(System::Drawing::Point position);" />
      <MemberSignature Language="F#" Value="member this.HitTest : System.Drawing.Point -&gt; System.Windows.Forms.DataGrid.HitTestInfo" Usage="dataGrid.HitTest position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGrid+HitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="position"><see cref="T:System.Drawing.Point" /> Reprezentujący jedną współrzędną x, y.</param>
        <summary>Pobiera informacje, takie jak wiersz i numer kolumny klikniętego punktu w siatce, dotyczące siatki przy użyciu określonego <see cref="T:System.Drawing.Point" />elementu.</summary>
        <returns>A <see cref="T:System.Windows.Forms.DataGrid.HitTestInfo" /> , który zawiera określone informacje na temat siatki.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 , W połączeniu <xref:System.Windows.Forms.DataGrid.HitTest%2A> z metodą <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> kontrolki, służy do określenia, która część <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> kontrolki kliknięto. <xref:System.Windows.Forms.DataGrid.HitTestInfo> <xref:System.Windows.Forms.DataGrid.HitTestInfo> Zawiera wiersz, kolumnę i część klikniętej siatki. <xref:System.Windows.Forms.DataGrid.HitTestInfo.Type%2A> Ponadto Właściwość<xref:System.Windows.Forms.DataGrid.HitTestType> zwraca Wyliczenie.  
  
 <xref:System.Windows.Forms.Control.DragOver> <xref:System.Windows.Forms.Control.MouseUp> <xref:System.Windows.Forms.Control.MouseDown> <xref:System.Windows.Forms.Control.DragEnter> <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> <xref:System.Windows.Forms.Control.MouseMove> <xref:System.Windows.Forms.Control.MouseWheel> Metoda przyjmuje argument x i y, który jest dostarczany przez kontrolkę <xref:System.Windows.Forms.Control.DragDrop>,,,, i zdarzenia. <xref:System.Windows.Forms.DataGrid.HitTest%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu używa metody w <xref:System.Windows.Forms.DataGrid.HitTest%2A> stanie, gdy użytkownik kliknie siatkę.  
  
 [!code-vb[Classic DataGrid.HitTest1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.HitTest1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.MouseDown" />
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGrid.HitTestInfo HitTest (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataGrid/HitTestInfo HitTest(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.HitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (x As Integer, y As Integer) As DataGrid.HitTestInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataGrid::HitTestInfo ^ HitTest(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.HitTest : int * int -&gt; System.Windows.Forms.DataGrid.HitTestInfo" Usage="dataGrid.HitTest (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGrid+HitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">Położenie w poziomie współrzędnej.</param>
        <param name="y">Położenie w pionie współrzędnej.</param>
        <summary>Pobiera informacje, takie jak wiersz i numer kolumny klikniętego punktu w siatce, za pomocą współrzędnych x i y przekazaną do metody.</summary>
        <returns>A <see cref="T:System.Windows.Forms.DataGrid.HitTestInfo" /> , który zawiera informacje o klikniętej części siatki.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 , W połączeniu <xref:System.Windows.Forms.DataGrid.HitTest%2A> z metodą <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> kontrolki, służy do określenia, która część <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> kontrolki kliknięto. <xref:System.Windows.Forms.DataGrid.HitTestInfo> <xref:System.Windows.Forms.DataGrid.HitTestInfo> Zawiera wiersz, kolumnę i część klikniętej siatki. <xref:System.Windows.Forms.DataGrid.HitTestInfo.Type%2A> Ponadto Właściwość<xref:System.Windows.Forms.DataGrid.HitTestType> zwraca Wyliczenie.  
  
 <xref:System.Windows.Forms.Control.DragOver> <xref:System.Windows.Forms.Control.MouseUp> <xref:System.Windows.Forms.Control.MouseDown> <xref:System.Windows.Forms.Control.DragEnter> <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> <xref:System.Windows.Forms.Control.MouseMove> <xref:System.Windows.Forms.Control.MouseWheel> Metoda przyjmuje argument x i y, który jest dostarczany przez kontrolkę <xref:System.Windows.Forms.Control.DragDrop>,,,, i zdarzenia. <xref:System.Windows.Forms.DataGrid.HitTest%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu używa <xref:System.Windows.Forms.DataGrid.HitTest%2A> metody w zdarzeniu, które występuje, gdy użytkownik kliknie siatkę.  
  
 [!code-vb[Classic DataGrid.HitTest Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.HitTest Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.MouseDown" />
      </Docs>
    </Member>
    <Member MemberName="HorizScrollBar">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.ScrollBar HorizScrollBar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ScrollBar HorizScrollBar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.HorizScrollBar" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property HorizScrollBar As ScrollBar" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Forms::ScrollBar ^ HorizScrollBar { System::Windows::Forms::ScrollBar ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HorizScrollBar : System.Windows.Forms.ScrollBar" Usage="System.Windows.Forms.DataGrid.HorizScrollBar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ScrollBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera poziomy pasek przewijania siatki.</summary>
        <value><see cref="T:System.Windows.Forms.ScrollBar" /> Dla siatki.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.DataGrid.VertScrollBar" />
      </Docs>
    </Member>
    <Member MemberName="IsExpanded">
      <MemberSignature Language="C#" Value="public bool IsExpanded (int rowNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsExpanded(int32 rowNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.IsExpanded(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsExpanded (rowNumber As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsExpanded(int rowNumber);" />
      <MemberSignature Language="F#" Value="member this.IsExpanded : int -&gt; bool" Usage="dataGrid.IsExpanded rowNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowNumber">Liczba podanych wierszy.</param>
        <summary>Pobiera wartość wskazującą, czy węzeł określonego wiersza jest rozwinięty, czy zwinięty.</summary>
        <returns><see langword="true" />Jeśli węzeł jest rozwinięty; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu testuje każdy wiersz w siatce i drukuje numer wiersza rozwiniętych wierszy.  
  
 [!code-cpp[Classic DataGrid.IsExpanded Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.IsExpanded Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.IsExpanded Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.IsExpanded Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.IsExpanded Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.IsExpanded Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGrid.Collapse(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsSelected">
      <MemberSignature Language="C#" Value="public bool IsSelected (int row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsSelected(int32 row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.IsSelected(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSelected (row As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSelected(int row);" />
      <MemberSignature Language="F#" Value="member this.IsSelected : int -&gt; bool" Usage="dataGrid.IsSelected row" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="row">Liczba interesujących wierszy.</param>
        <summary>Pobiera wartość wskazującą, czy wybrano określony wiersz.</summary>
        <returns><see langword="true" />Jeśli wiersz jest zaznaczony; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody z <xref:System.Windows.Forms.DataGrid.Select%2A>metodami, <xref:System.Windows.Forms.DataGrid.UnSelect%2A>i <xref:System.Windows.Forms.DataGrid.ResetSelection%2A> , aby manipulować stanem zaznaczenia określonego wiersza.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.  
  
 [!code-cpp[MyDataGridClass_ResetHeaderBackColor#5](~/samples/snippets/cpp/VS_Snippets_Winforms/MyDataGridClass_ResetHeaderBackColor/CPP/mydatagridclass_resetheaderbackcolor.cpp#5)]
 [!code-csharp[MyDataGridClass_ResetHeaderBackColor#5](~/samples/snippets/csharp/VS_Snippets_Winforms/MyDataGridClass_ResetHeaderBackColor/CS/mydatagridclass_resetheaderbackcolor.cs#5)]
 [!code-vb[MyDataGridClass_ResetHeaderBackColor#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MyDataGridClass_ResetHeaderBackColor/VB/mydatagridclass_resetheaderbackcolor.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera lub ustawia wartość określonej komórki.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[System.Windows.Forms.DataGridCell cell] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(valuetype System.Windows.Forms.DataGridCell)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.Item(System.Windows.Forms.DataGridCell)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(cell As DataGridCell) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Windows::Forms::DataGridCell] { System::Object ^ get(System::Windows::Forms::DataGridCell cell); void set(System::Windows::Forms::DataGridCell cell, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(System.Windows.Forms.DataGridCell) : obj with get, set" Usage="System.Windows.Forms.DataGrid.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Windows.Forms.DataGridCell" />
      </Parameters>
      <Docs>
        <param name="cell"><see cref="T:System.Windows.Forms.DataGridCell" /> Reprezentuje komórkę w siatce.</param>
        <summary>Pobiera lub ustawia wartość określonej <see cref="T:System.Windows.Forms.DataGridCell" />wartości.</summary>
        <value>Wartość, którą wpisano jako <see cref="T:System.Object" />, komórki.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie tej właściwości <xref:System.Data.DataView> powoduje zmianę pozycji do określonego wiersza.  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia i pobiera wartość komórki przez zadeklarowanie <xref:System.Windows.Forms.DataGridCell> zmiennej, ustawienie jej <xref:System.Windows.Forms.DataGridCell.RowNumber%2A> i <xref:System.Windows.Forms.DataGridCell.ColumnNumber%2A> wartości, a następnie zmianę, a następnie zwrócenie wartości danej komórki.  
  
 [!code-cpp[Classic DataGrid.this1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.this1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGrid.CurrentCell" />
        <altmember cref="T:System.Windows.Forms.DataGridCell" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int rowIndex, int columnIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32, int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.Item(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(rowIndex As Integer, columnIndex As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int, int] { System::Object ^ get(int rowIndex, int columnIndex); void set(int rowIndex, int columnIndex, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int * int) : obj with get, set" Usage="System.Windows.Forms.DataGrid.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Indeks wiersza zawierający wartość (liczony od zera).</param>
        <param name="columnIndex">Indeks (liczony od zera) kolumny zawierającej wartość.</param>
        <summary>Pobiera lub ustawia wartość komórki w określonym wierszu i kolumnie.</summary>
        <value>Wartość, którą wpisano jako <see cref="T:System.Object" />, komórki.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie tej właściwości <xref:System.Data.DataView> powoduje zmianę pozycji do określonego wiersza.  
  
   
  
## Examples  
 Poniższy przykład kodu drukuje wartość zawartą w komórce w określonym wierszu i indeksie.  
  
 [!code-cpp[Classic DataGrid.this Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.this Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.this Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.this Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Podczas pobierania lub ustawiania, <paramref name="rowIndex" /> znajduje się poza zakresem.  
  
Podczas pobierania lub ustawiania, <paramref name="columnIndex" /> znajduje się poza zakresem.</exception>
      </Docs>
    </Member>
    <Member MemberName="LinkColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color LinkColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color LinkColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.LinkColor" />
      <MemberSignature Language="VB.NET" Value="Public Property LinkColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color LinkColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.LinkColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGrid.LinkColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor tekstu, który można kliknąć, aby przejść do tabeli podrzędnej.</summary>
        <value><see cref="T:System.Drawing.Color" /> Reprezentujący kolor tekstu, który został kliknięty, aby przejść do tabeli podrzędnej. Wartość domyślna to <see cref="P:System.Drawing.SystemColors.HotTrack" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest zazwyczaj używana tylko <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>w przypadku tworzenia projektanta dla lub tworzenia własnej kontrolki zawierającej. <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGrid.LinkColor" />
      </Docs>
    </Member>
    <Member MemberName="LinkHoverColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color LinkHoverColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color LinkHoverColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.LinkHoverColor" />
      <MemberSignature Language="VB.NET" Value="Public Property LinkHoverColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color LinkHoverColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.LinkHoverColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGrid.LinkHoverColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ten element członkowski nie ma znaczenia dla tego formantu.</summary>
        <value>Kolor wyświetlany po umieszczeniu wskaźnika myszy nad tekstem łącza.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListManager">
      <MemberSignature Language="C#" Value="protected internal System.Windows.Forms.CurrencyManager ListManager { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CurrencyManager ListManager" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.ListManager" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property ListManager As CurrencyManager" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Windows::Forms::CurrencyManager ^ ListManager { System::Windows::Forms::CurrencyManager ^ get(); void set(System::Windows::Forms::CurrencyManager ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ListManager : System.Windows.Forms.CurrencyManager with get, set" Usage="System.Windows.Forms.DataGrid.ListManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CurrencyManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera dla tej <see cref="T:System.Windows.Forms.DataGrid" />kontrolki. <see cref="T:System.Windows.Forms.CurrencyManager" /></summary>
        <value><see cref="T:System.Windows.Forms.CurrencyManager" /> Dla tej<see cref="T:System.Windows.Forms.DataGrid" /> kontrolki.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.NavigateEventHandler Navigate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.NavigateEventHandler Navigate" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.Navigate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Navigate As NavigateEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::NavigateEventHandler ^ Navigate;" />
      <MemberSignature Language="F#" Value="member this.Navigate : System.Windows.Forms.NavigateEventHandler " Usage="member this.Navigate : System.Windows.Forms.NavigateEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.NavigateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy użytkownik nawiguje do nowej tabeli.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGrid.Navigate> Użyj zdarzenia, aby zresetować właściwości pojedynczej kolumny, takie jak szerokość, odpowiednio do tabeli.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.  
  
 [!code-cpp[DataGrid_AllowNavigationChanged#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_AllowNavigationChanged/CPP/mydatagrid_allownavigationchanged.cpp#2)]
 [!code-csharp[DataGrid_AllowNavigationChanged#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_AllowNavigationChanged/CS/mydatagrid_allownavigationchanged.cs#2)]
 [!code-vb[DataGrid_AllowNavigationChanged#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_AllowNavigationChanged/VB/mydatagrid_allownavigationchanged.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigateBack">
      <MemberSignature Language="C#" Value="public void NavigateBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void NavigateBack() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.NavigateBack" />
      <MemberSignature Language="VB.NET" Value="Public Sub NavigateBack ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NavigateBack();" />
      <MemberSignature Language="F#" Value="member this.NavigateBack : unit -&gt; unit" Usage="dataGrid.NavigateBack " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Nawiguje wstecz do tabeli wcześniej wyświetlonej w siatce.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli siatka nie ma żadnych wierszy nadrzędnych, nie nastąpi zmiana.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.  
  
 [!code-vb[Classic DataGrid.NavigateBack Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.NavigateBack Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigateTo">
      <MemberSignature Language="C#" Value="public void NavigateTo (int rowNumber, string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void NavigateTo(int32 rowNumber, string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.NavigateTo(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub NavigateTo (rowNumber As Integer, relationName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NavigateTo(int rowNumber, System::String ^ relationName);" />
      <MemberSignature Language="F#" Value="member this.NavigateTo : int * string -&gt; unit" Usage="dataGrid.NavigateTo (rowNumber, relationName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowNumber" Type="System.Int32" />
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rowNumber">Numer wiersza, do którego chcesz przejść.</param>
        <param name="relationName">Nazwa relacji podrzędnej, do której ma nastąpić przejście.</param>
        <summary>Przechodzi do tabeli określonej przez wiersz i nazwę relacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu przechodzi do określonego numeru wiersza w tabeli określonej przez nazwę relacji podrzędnej.  
  
 [!code-csharp[Classic DataGrid.NavigateTo Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.NavigateTo Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.NavigateTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.NavigateTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGrid.NavigateBack" />
      </Docs>
    </Member>
    <Member MemberName="OnAllowNavigationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAllowNavigationChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAllowNavigationChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnAllowNavigationChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAllowNavigationChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAllowNavigationChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAllowNavigationChanged : EventArgs -&gt; unit&#xA;override this.OnAllowNavigationChanged : EventArgs -&gt; unit" Usage="dataGrid.OnAllowNavigationChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.DataGrid.AllowNavigationChanged" /> Podnosi zdarzenie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBackButtonClicked">
      <MemberSignature Language="C#" Value="protected void OnBackButtonClicked (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnBackButtonClicked(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnBackButtonClicked(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnBackButtonClicked (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnBackButtonClicked(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnBackButtonClicked : obj * EventArgs -&gt; unit" Usage="dataGrid.OnBackButtonClicked (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender"><see cref="T:System.Object" /> Zawierający dane o kontrolce.</param>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane dotyczące zdarzenia.</param>
        <summary>Nasłuchuje zdarzenie kliknięcia przycisku Wstecz.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBackColorChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnBackColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBackColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBackColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBackColorChanged : EventArgs -&gt; unit" Usage="dataGrid.OnBackColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.Control.BackColorChanged" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.DataGrid.OnBackColorChanged%2A> Metoda włącza również klasy pochodne do obsługi zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.DataGrid.OnBackColorChanged(System.EventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.DataGrid.OnBackColorChanged(System.EventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnBackgroundColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBackgroundColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBackgroundColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnBackgroundColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBackgroundColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBackgroundColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBackgroundColorChanged : EventArgs -&gt; unit&#xA;override this.OnBackgroundColorChanged : EventArgs -&gt; unit" Usage="dataGrid.OnBackgroundColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.DataGrid.BackgroundColorChanged" /> Podnosi zdarzenie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBindingContextChanged">
      <MemberSignature Language="C#" Value="protected override void OnBindingContextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBindingContextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnBindingContextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBindingContextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBindingContextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBindingContextChanged : EventArgs -&gt; unit" Usage="dataGrid.OnBindingContextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.Control.BindingContextChanged" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.DataGrid.OnBindingContextChanged%2A> Metoda włącza również klasy pochodne do obsługi zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.DataGrid.OnBindingContextChanged(System.EventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.DataGrid.OnBindingContextChanged(System.EventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnBorderStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBorderStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBorderStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnBorderStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBorderStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBorderStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBorderStyleChanged : EventArgs -&gt; unit&#xA;override this.OnBorderStyleChanged : EventArgs -&gt; unit" Usage="dataGrid.OnBorderStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.DataGrid.BorderStyleChanged" /> Podnosi zdarzenie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCaptionVisibleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCaptionVisibleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCaptionVisibleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnCaptionVisibleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCaptionVisibleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCaptionVisibleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCaptionVisibleChanged : EventArgs -&gt; unit&#xA;override this.OnCaptionVisibleChanged : EventArgs -&gt; unit" Usage="dataGrid.OnCaptionVisibleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.DataGrid.CaptionVisibleChanged" /> Podnosi zdarzenie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCurrentCellChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCurrentCellChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCurrentCellChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnCurrentCellChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCurrentCellChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCurrentCellChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCurrentCellChanged : EventArgs -&gt; unit&#xA;override this.OnCurrentCellChanged : EventArgs -&gt; unit" Usage="dataGrid.OnCurrentCellChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.DataGrid.CurrentCellChanged" /> Podnosi zdarzenie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnDataSourceChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataSourceChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataSourceChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataSourceChanged : EventArgs -&gt; unit&#xA;override this.OnDataSourceChanged : EventArgs -&gt; unit" Usage="dataGrid.OnDataSourceChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.DataGrid.DataSourceChanged" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.DataGrid.OnDataSourceChanged%2A> Metoda włącza również klasy pochodne do obsługi zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.DataGrid.OnDataSourceChanged(System.EventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.DataGrid.OnDataSourceChanged(System.EventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnEnter">
      <MemberSignature Language="C#" Value="protected override void OnEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEnter(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnEnter : EventArgs -&gt; unit" Usage="dataGrid.OnEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.Control.Enter" /> Podnosi zdarzenie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFlatModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnFlatModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFlatModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnFlatModeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFlatModeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFlatModeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnFlatModeChanged : EventArgs -&gt; unit&#xA;override this.OnFlatModeChanged : EventArgs -&gt; unit" Usage="dataGrid.OnFlatModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.DataGrid.FlatModeChanged" /> Podnosi zdarzenie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="dataGrid.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.Control.FontChanged" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.DataGrid.OnFontChanged%2A> Metoda włącza również klasy pochodne do obsługi zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.DataGrid.OnFontChanged(System.EventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.DataGrid.OnFontChanged(System.EventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnForeColorChanged">
      <MemberSignature Language="C#" Value="protected override void OnForeColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnForeColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnForeColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnForeColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnForeColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnForeColorChanged : EventArgs -&gt; unit" Usage="dataGrid.OnForeColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.Control.ForeColorChanged" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.DataGrid.OnForeColorChanged%2A> Metoda włącza również klasy pochodne do obsługi zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.DataGrid.OnForeColorChanged(System.EventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.DataGrid.OnForeColorChanged(System.EventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="dataGrid.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="M:System.Windows.Forms.Control.CreateHandle" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.DataGrid.OnHandleCreated%2A> Metoda włącza również klasy pochodne do obsługi zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.DataGrid.OnHandleCreated(System.EventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.DataGrid.OnHandleCreated(System.EventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="dataGrid.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="M:System.Windows.Forms.Control.DestroyHandle" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.DataGrid.OnHandleDestroyed%2A> Metoda włącza również klasy pochodne do obsługi zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.DataGrid.OnHandleDestroyed(System.EventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.DataGrid.OnHandleDestroyed(System.EventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs ke);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs ke) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (ke As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ ke);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="dataGrid.OnKeyDown ke" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ke" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="ke">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> , który zapewnia dane <see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> dotyczące zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.Control.KeyDown" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.DataGrid.OnKeyDown%2A> Metoda włącza również klasy pochodne do obsługi zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.DataGrid.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.DataGrid.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyPress">
      <MemberSignature Language="C#" Value="protected override void OnKeyPress (System.Windows.Forms.KeyPressEventArgs kpe);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyPress(class System.Windows.Forms.KeyPressEventArgs kpe) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyPress (kpe As KeyPressEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyPress(System::Windows::Forms::KeyPressEventArgs ^ kpe);" />
      <MemberSignature Language="F#" Value="override this.OnKeyPress : System.Windows.Forms.KeyPressEventArgs -&gt; unit" Usage="dataGrid.OnKeyPress kpe" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kpe" Type="System.Windows.Forms.KeyPressEventArgs" />
      </Parameters>
      <Docs>
        <param name="kpe">A <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> , który zawiera dane <see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> dotyczące zdarzenia</param>
        <summary><see cref="E:System.Windows.Forms.Control.KeyPress" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.DataGrid.OnKeyPress%2A> Metoda włącza również klasy pochodne do obsługi zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.DataGrid.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.DataGrid.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnLayout">
      <MemberSignature Language="C#" Value="protected override void OnLayout (System.Windows.Forms.LayoutEventArgs levent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLayout(class System.Windows.Forms.LayoutEventArgs levent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLayout (levent As LayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLayout(System::Windows::Forms::LayoutEventArgs ^ levent);" />
      <MemberSignature Language="F#" Value="override this.OnLayout : System.Windows.Forms.LayoutEventArgs -&gt; unit" Usage="dataGrid.OnLayout levent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="levent" Type="System.Windows.Forms.LayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="levent">A <see cref="T:System.Windows.Forms.LayoutEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.Control.Layout" /> Podnosi zdarzenie, które zmienia położenie formantów i aktualizuje paski przewijania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.DataGrid.OnLayout%2A> Metoda włącza również klasy pochodne do obsługi zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.DataGrid.OnLayout(System.Windows.Forms.LayoutEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.DataGrid.OnLayout(System.Windows.Forms.LayoutEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnLeave">
      <MemberSignature Language="C#" Value="protected override void OnLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLeave : EventArgs -&gt; unit" Usage="dataGrid.OnLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.Control.Leave" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.DataGrid.OnLeave%2A> Metoda włącza również klasy pochodne do obsługi zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.DataGrid.OnLeave(System.EventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.DataGrid.OnLeave(System.EventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDown : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="dataGrid.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> , który zawiera dane <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> dotyczące zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.Control.MouseDown" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby zapoznać się z omówieniem, zobacz temat [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.  
  
 [!code-cpp[DataGrid.OnMouseDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid.OnMouseDown/CPP/overridemousedown.cpp#1)]
 [!code-csharp[DataGrid.OnMouseDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid.OnMouseDown/CS/overridemousedown.cs#1)]
 [!code-vb[DataGrid.OnMouseDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid.OnMouseDown/VB/overridemousedown.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.DataGrid.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> w klasie pochodnej należy wywołać <see cref="M:System.Windows.Forms.DataGrid.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> metodę klasy bazowej.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeave : EventArgs -&gt; unit" Usage="dataGrid.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane<see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /> dotyczące zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.Control.MouseLeave" /> Tworzy zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby zapoznać się z omówieniem, zobacz temat [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.DataGrid.OnMouseLeave(System.EventArgs)" /> w klasie pochodnej należy wywołać <see cref="M:System.Windows.Forms.DataGrid.OnMouseLeave(System.EventArgs)" /> metodę klasy bazowej.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseMove : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="dataGrid.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> , który zawiera dane <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> dotyczące zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.Control.MouseMove" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby zapoznać się z omówieniem, zobacz temat [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.DataGrid.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> w klasie pochodnej należy wywołać <see cref="M:System.Windows.Forms.DataGrid.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> metodę klasy bazowej.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="dataGrid.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> , który zawiera dane <see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> dotyczące zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.Control.MouseUp" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby zapoznać się z omówieniem, zobacz temat [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.DataGrid.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> w klasie pochodnej należy wywołać <see cref="M:System.Windows.Forms.DataGrid.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> metodę klasy bazowej.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected override void OnMouseWheel (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseWheel(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseWheel (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseWheel(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseWheel : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="dataGrid.OnMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> , który zawiera dane <see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> dotyczące zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.Control.MouseWheel" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby zapoznać się z omówieniem, zobacz temat [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.DataGrid.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" /> w klasie pochodnej należy wywołać <see cref="M:System.Windows.Forms.DataGrid.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" /> metodę klasy bazowej.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnNavigate">
      <MemberSignature Language="C#" Value="protected void OnNavigate (System.Windows.Forms.NavigateEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnNavigate(class System.Windows.Forms.NavigateEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnNavigate(System.Windows.Forms.NavigateEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnNavigate (e As NavigateEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnNavigate(System::Windows::Forms::NavigateEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnNavigate : System.Windows.Forms.NavigateEventArgs -&gt; unit" Usage="dataGrid.OnNavigate e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.NavigateEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.NavigateEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.DataGrid.Navigate" /> Podnosi zdarzenie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Windows.Forms.PaintEventArgs pe);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs pe) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaint (pe As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaint(System::Windows::Forms::PaintEventArgs ^ pe);" />
      <MemberSignature Language="F#" Value="override this.OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="dataGrid.OnPaint pe" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pe" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="pe">, <see cref="T:System.Windows.Forms.PaintEventArgs" /> Który zawiera dane dotyczące zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.Control.Paint" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby zapoznać się z omówieniem, zobacz temat [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.DataGrid.OnPaint(System.Windows.Forms.PaintEventArgs)" /> w klasie pochodnej należy wywołać <see cref="M:System.Windows.Forms.DataGrid.OnPaint(System.Windows.Forms.PaintEventArgs)" /> metodę klasy bazowej.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnPaintBackground">
      <MemberSignature Language="C#" Value="protected override void OnPaintBackground (System.Windows.Forms.PaintEventArgs ebe);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaintBackground(class System.Windows.Forms.PaintEventArgs ebe) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaintBackground (ebe As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaintBackground(System::Windows::Forms::PaintEventArgs ^ ebe);" />
      <MemberSignature Language="F#" Value="override this.OnPaintBackground : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="dataGrid.OnPaintBackground ebe" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ebe" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="ebe">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> , który zawiera informacje o kontrolce do malowania.</param>
        <summary>Przesłonięcia <see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" /> uniemożliwiają malowanie tła <see cref="T:System.Windows.Forms.DataGrid" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> Ponieważ jest to złożona kontrolka, to zastąpienie jest implementowane, aby nie mieć żadnych akcji. W związku z tym wywołanie tej metody nie będzie miało żadnego efektu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnParentRowsLabelStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentRowsLabelStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentRowsLabelStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnParentRowsLabelStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentRowsLabelStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentRowsLabelStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentRowsLabelStyleChanged : EventArgs -&gt; unit&#xA;override this.OnParentRowsLabelStyleChanged : EventArgs -&gt; unit" Usage="dataGrid.OnParentRowsLabelStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.DataGrid.ParentRowsLabelStyleChanged" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.DataGrid.OnParentRowsLabelStyleChanged%2A> Metoda włącza również klasy pochodne do obsługi zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.DataGrid.OnParentRowsLabelStyleChanged(System.EventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.DataGrid.OnParentRowsLabelStyleChanged(System.EventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnParentRowsVisibleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentRowsVisibleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentRowsVisibleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnParentRowsVisibleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentRowsVisibleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentRowsVisibleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentRowsVisibleChanged : EventArgs -&gt; unit&#xA;override this.OnParentRowsVisibleChanged : EventArgs -&gt; unit" Usage="dataGrid.OnParentRowsVisibleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.DataGrid.ParentRowsVisibleChanged" /> Podnosi zdarzenie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnReadOnlyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnReadOnlyChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnReadOnlyChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnReadOnlyChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnReadOnlyChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnReadOnlyChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnReadOnlyChanged : EventArgs -&gt; unit&#xA;override this.OnReadOnlyChanged : EventArgs -&gt; unit" Usage="dataGrid.OnReadOnlyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.DataGrid.ReadOnlyChanged" /> Podnosi zdarzenie</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.DataGrid.OnReadOnlyChanged%2A> Metoda włącza również klasy pochodne do obsługi zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.DataGrid.OnReadOnlyChanged(System.EventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.DataGrid.OnReadOnlyChanged(System.EventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnResize">
      <MemberSignature Language="C#" Value="protected override void OnResize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnResize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnResize(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnResize (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnResize(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnResize : EventArgs -&gt; unit" Usage="dataGrid.OnResize e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.Control.Resize" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby zapoznać się z omówieniem, zobacz temat [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.DataGrid.OnResize(System.EventArgs)" /> w klasie pochodnej należy wywołać <see cref="M:System.Windows.Forms.DataGrid.OnResize(System.EventArgs)" /> metodę klasy bazowej.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeaderClick">
      <MemberSignature Language="C#" Value="protected void OnRowHeaderClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnRowHeaderClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnRowHeaderClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnRowHeaderClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnRowHeaderClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnRowHeaderClick : EventArgs -&gt; unit" Usage="dataGrid.OnRowHeaderClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.DataGrid.RowHeaderClick" /> Podnosi zdarzenie.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">Aby ustawić tę właściwość <see cref="T:System.Security.Permissions.UIPermission" /> , należy dysponować bezpiecznymi podsystemami dla systemu Windows.</permission>
      </Docs>
    </Member>
    <Member MemberName="OnScroll">
      <MemberSignature Language="C#" Value="protected void OnScroll (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnScroll(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnScroll(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnScroll (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnScroll(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnScroll : EventArgs -&gt; unit" Usage="dataGrid.OnScroll e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.DataGrid.Scroll" /> Podnosi zdarzenie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnShowParentDetailsButtonClicked">
      <MemberSignature Language="C#" Value="protected void OnShowParentDetailsButtonClicked (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnShowParentDetailsButtonClicked(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnShowParentDetailsButtonClicked(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnShowParentDetailsButtonClicked (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnShowParentDetailsButtonClicked(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnShowParentDetailsButtonClicked : obj * EventArgs -&gt; unit" Usage="dataGrid.OnShowParentDetailsButtonClicked (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Źródło zdarzenia.</param>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.DataGrid.ShowParentDetailsButtonClick" /> Podnosi zdarzenie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentRowsBackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ParentRowsBackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ParentRowsBackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.ParentRowsBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ParentRowsBackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ParentRowsBackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ParentRowsBackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGrid.ParentRowsBackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor tła wierszy nadrzędnych.</summary>
        <value><see cref="T:System.Drawing.Color" /> Reprezentujący kolor wierszy nadrzędnych. Wartość domyślna to <see cref="P:System.Drawing.SystemColors.Control" /> kolor.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu ustawia <xref:System.Windows.Forms.DataGrid.ParentRowsBackColor%2A> właściwość na nowy kolor.  
  
 [!code-vb[Classic DataGrid.ParentRowsBackColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.ParentRowsBackColor Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentRowsForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ParentRowsForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ParentRowsForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.ParentRowsForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ParentRowsForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ParentRowsForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ParentRowsForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGrid.ParentRowsForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor pierwszego planu wierszy nadrzędnych.</summary>
        <value><see cref="T:System.Drawing.Color" /> Reprezentujący kolor pierwszego planu wierszy nadrzędnych. Wartość domyślna to <see cref="P:System.Drawing.SystemColors.WindowText" /> kolor.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu ustawia <xref:System.Windows.Forms.DataGrid.ParentRowsForeColor%2A> właściwość na nowy kolor.  
  
 [!code-vb[Classic DataGrid.ParentRowsForeColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.ParentRowsForeColor Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentRowsLabelStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridParentRowsLabelStyle ParentRowsLabelStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridParentRowsLabelStyle ParentRowsLabelStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.ParentRowsLabelStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ParentRowsLabelStyle As DataGridParentRowsLabelStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridParentRowsLabelStyle ParentRowsLabelStyle { System::Windows::Forms::DataGridParentRowsLabelStyle get(); void set(System::Windows::Forms::DataGridParentRowsLabelStyle value); };" />
      <MemberSignature Language="F#" Value="member this.ParentRowsLabelStyle : System.Windows.Forms.DataGridParentRowsLabelStyle with get, set" Usage="System.Windows.Forms.DataGrid.ParentRowsLabelStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridParentRowsLabelStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia sposób wyświetlania etykiet wierszy nadrzędnych.</summary>
        <value>Jedna z <see cref="T:System.Windows.Forms.DataGridParentRowsLabelStyle" /> wartości. Wartość domyślna to <see langword="Both" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu przeprowadzi przechodzenie między możliwymi wartościami <xref:System.Windows.Forms.DataGrid.ParentRowsLabelStyle%2A> właściwości.  
  
 [!code-vb[Classic DataGrid.ParentRowsLabelStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.ParentRowsLabelStyle Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Moduł wyliczający jest nieprawidłowy.</exception>
        <altmember cref="P:System.Windows.Forms.DataGrid.AllowNavigation" />
        <altmember cref="P:System.Windows.Forms.DataGrid.ParentRowsForeColor" />
        <altmember cref="P:System.Windows.Forms.DataGrid.ParentRowsBackColor" />
        <altmember cref="P:System.Windows.Forms.DataGrid.ParentRowsVisible" />
      </Docs>
    </Member>
    <Member MemberName="ParentRowsLabelStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ParentRowsLabelStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ParentRowsLabelStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.ParentRowsLabelStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ParentRowsLabelStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ParentRowsLabelStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.ParentRowsLabelStyleChanged : EventHandler " Usage="member this.ParentRowsLabelStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zmianie stylu etykiety wiersza nadrzędnego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.  
  
 [!code-cpp[DataGrid_ParentRowsLabelStyleChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_ParentRowsLabelStyleChanged/CPP/datagrid_parentrowslabelstylechanged.cpp#1)]
 [!code-csharp[DataGrid_ParentRowsLabelStyleChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_ParentRowsLabelStyleChanged/CS/datagrid_parentrowslabelstylechanged.cs#1)]
 [!code-vb[DataGrid_ParentRowsLabelStyleChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_ParentRowsLabelStyleChanged/VB/datagrid_parentrowslabelstylechanged.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentRowsVisible">
      <MemberSignature Language="C#" Value="public bool ParentRowsVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ParentRowsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.ParentRowsVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property ParentRowsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ParentRowsVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ParentRowsVisible : bool with get, set" Usage="System.Windows.Forms.DataGrid.ParentRowsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy wiersze nadrzędne tabeli są widoczne.</summary>
        <value><see langword="true" />Jeśli wiersze nadrzędne są widoczne; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu przełącza <xref:System.Windows.Forms.DataGrid.ParentRowsVisible%2A> właściwość.  
  
 [!code-vb[Classic DataGrid.ParentRowsVisible Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.ParentRowsVisible Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentRowsVisibleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ParentRowsVisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ParentRowsVisibleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.ParentRowsVisibleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ParentRowsVisibleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ParentRowsVisibleChanged;" />
      <MemberSignature Language="F#" Value="member this.ParentRowsVisibleChanged : EventHandler " Usage="member this.ParentRowsVisibleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="P:System.Windows.Forms.DataGrid.ParentRowsVisible" /> wartość właściwości zostanie zmieniona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.  
  
 [!code-cpp[DataGrid_ParentRowsLabelStyleChanged#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_ParentRowsLabelStyleChanged/CPP/datagrid_parentrowslabelstylechanged.cpp#2)]
 [!code-csharp[DataGrid_ParentRowsLabelStyleChanged#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_ParentRowsLabelStyleChanged/CS/datagrid_parentrowslabelstylechanged.cs#2)]
 [!code-vb[DataGrid_ParentRowsLabelStyleChanged#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_ParentRowsLabelStyleChanged/VB/datagrid_parentrowslabelstylechanged.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredColumnWidth">
      <MemberSignature Language="C#" Value="public int PreferredColumnWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PreferredColumnWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.PreferredColumnWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property PreferredColumnWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PreferredColumnWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PreferredColumnWidth : int with get, set" Usage="System.Windows.Forms.DataGrid.PreferredColumnWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(75)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataGridPreferredColumnWidthTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia domyślną szerokość kolumn siatki w pikselach.</summary>
        <value>Domyślna szerokość (w pikselach) kolumn w siatce.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustaw tę właściwość przed zresetowaniem <xref:System.Windows.Forms.DataGrid.DataSource%2A> właściwości i <xref:System.Windows.Forms.DataGrid.DataMember%2A> ( <xref:System.Windows.Forms.DataGrid.SetDataBinding%2A> oddzielnie albo za pomocą metody) lub właściwość nie będzie mieć żadnego efektu.  
  
 Właściwość nie może być ustawiona na wartość mniejszą niż 0.  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia domyślne szerokości kolumn na wartość przekazaną do metody.  
  
 [!code-vb[Classic DataGrid.PreferredColumnWidth Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.PreferredColumnWidth Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość właściwości jest mniejsza niż 0.</exception>
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.GetPreferredSize(System.Drawing.Graphics,System.Object)" />
        <altmember cref="P:System.Windows.Forms.DataGrid.PreferredRowHeight" />
      </Docs>
    </Member>
    <Member MemberName="PreferredRowHeight">
      <MemberSignature Language="C#" Value="public int PreferredRowHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PreferredRowHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.PreferredRowHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property PreferredRowHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PreferredRowHeight { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PreferredRowHeight : int with get, set" Usage="System.Windows.Forms.DataGrid.PreferredRowHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia preferowaną wysokość wiersza dla <see cref="T:System.Windows.Forms.DataGrid" /> kontrolki.</summary>
        <value>Wysokość wiersza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustaw tę właściwość przed zresetowaniem <xref:System.Windows.Forms.DataGrid.DataSource%2A> właściwości i <xref:System.Windows.Forms.DataGrid.DataMember%2A> ( <xref:System.Windows.Forms.DataGrid.SetDataBinding%2A> oddzielnie albo za pomocą metody) lub właściwość nie będzie mieć żadnego efektu.  
  
   
  
## Examples  
 Poniższy przykład kodu najpierw ustawia nową czcionkę i ustawia <xref:System.Windows.Forms.DataGrid.PreferredRowHeight%2A> na taką samą wysokość jak Nowa czcionka.  
  
 [!code-cpp[Classic DataGrid.PreferredRowHeight Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.PreferredRowHeight Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.PreferredRowHeight Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.PreferredRowHeight Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.PreferredRowHeight Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.PreferredRowHeight Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.GetPreferredHeight(System.Drawing.Graphics,System.Object)" />
        <altmember cref="P:System.Windows.Forms.DataGrid.PreferredColumnWidth" />
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessDialogKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ProcessDialogKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessDialogKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessDialogKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessDialogKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGrid.ProcessDialogKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">A <see cref="T:System.Windows.Forms.Keys" /> , który zawiera dane dotyczące naciśniętego klawisza.</param>
        <summary>Pobiera lub ustawia wartość wskazującą, czy klucz ma być przetwarzany w dalszej postaci.</summary>
        <returns><see langword="true" />należy przetworzyć klucz; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda przesłania <xref:System.Windows.Forms.Control.ProcessDialogKey%2A> metodę w celu zaimplementowania nawigacji na klawiaturze siatki.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessGridKey">
      <MemberSignature Language="C#" Value="protected bool ProcessGridKey (System.Windows.Forms.KeyEventArgs ke);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessGridKey(class System.Windows.Forms.KeyEventArgs ke) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ProcessGridKey(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessGridKey (ke As KeyEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessGridKey(System::Windows::Forms::KeyEventArgs ^ ke);" />
      <MemberSignature Language="F#" Value="member this.ProcessGridKey : System.Windows.Forms.KeyEventArgs -&gt; bool" Usage="dataGrid.ProcessGridKey ke" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ke" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="ke">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> , który zawiera dane dotyczące zdarzenia Key lub Key.</param>
        <summary>Przetwarza klucze do nawigacji siatki.</summary>
        <returns><see langword="true" />, jeśli klucz został przetworzony; w <see langword="false" />przeciwnym razie.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessKeyPreview">
      <MemberSignature Language="C#" Value="protected override bool ProcessKeyPreview (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessKeyPreview(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ProcessKeyPreview(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessKeyPreview (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessKeyPreview(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.ProcessKeyPreview :  -&gt; bool" Usage="dataGrid.ProcessKeyPreview m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">A <see cref="T:System.Windows.Forms.Message" /> , który zawiera dane dotyczące zdarzenia. Parametr jest przesyłany przez odwołanie.</param>
        <summary>Przegląda komunikat klawiatury i zwraca wartość wskazującą, czy klucz został użyty.</summary>
        <returns><see langword="true" />, jeśli klucz został użyty; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana przez formant podrzędny, gdy formant podrzędny odbiera komunikat z klawiatury. Formant podrzędny wywołuje tę metodę przed wygenerowaniem wszystkich zdarzeń klawiatury dla wiadomości. Jeśli ta metoda zwróci `true`wartość, formant podrzędny traktuje komunikat jako wykorzystany i nie generuje żadnych zdarzeń klawiatury.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessTabKey">
      <MemberSignature Language="C#" Value="protected bool ProcessTabKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessTabKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ProcessTabKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessTabKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessTabKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessTabKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGrid.ProcessTabKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">A <see cref="T:System.Windows.Forms.Keys" /> , który zawiera dane dotyczące tego naciśniętego klawisza.</param>
        <summary>Pobiera wartość wskazującą, czy klawisz Tab ma być przetwarzany.</summary>
        <returns><see langword="true" />Jeśli klawisz TAB ma być przetwarzany; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">do rysowania interfejsu użytkownika. Powiązane wartość typu wyliczeniowego: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Windows.Forms.DataGrid.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy siatka jest w trybie tylko do odczytu.</summary>
        <value><see langword="true" />Jeśli siatka jest w trybie tylko do odczytu; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W trybie tylko do odczytu Siatka może być przewijana, węzły mogą być rozwinięte lub zwinięte i tak dalej. Jednak nie mogą być dodawane, edytowane ani usuwane.  
  
 <xref:System.Windows.Forms.DataGridColumnStyle> Marównieżwłaściwość,któramożebyćustawionanawartośćtrue,abyuniemożliwićedytowaniedanychwoparciuo<xref:System.Windows.Forms.DataGridColumnStyle.ReadOnly%2A> kolumnę po kolumnie.  
  
 Można <xref:System.Windows.Forms.DataGrid.ReadOnly%2A> ustawić na wartość true, jeśli chcesz uniemożliwić użytkownikowi edytowanie danych bezpośrednio <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>w. Na przykład możesz chcieć zezwolić użytkownikom na wyświetlanie wszystkich kolumn w tabeli, ale Zezwól im na edytowanie konkretnych pól tylko za pomocą <xref:System.Windows.Forms.TextBox> formantów na innym formularzu.  
  
   
  
## Examples  
 Poniższy przykład kodu przełącza <xref:System.Windows.Forms.DataGrid.ReadOnly%2A> właściwość.  
  
 [!code-vb[Classic DataGrid.ReadOnly Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.ReadOnly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ReadOnlyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ReadOnlyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.ReadOnlyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ReadOnlyChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ReadOnlyChanged;" />
      <MemberSignature Language="F#" Value="member this.ReadOnlyChanged : EventHandler " Usage="member this.ReadOnlyChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="P:System.Windows.Forms.DataGrid.ReadOnly" /> wartość właściwości zostanie zmieniona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.  
  
 [!code-cpp[MyDataGridClass_FlatMode_ReadOnly#2](~/samples/snippets/cpp/VS_Snippets_Winforms/MyDataGridClass_FlatMode_ReadOnly/CPP/mydatagridclass_flatmode_readonly.cpp#2)]
 [!code-csharp[MyDataGridClass_FlatMode_ReadOnly#2](~/samples/snippets/csharp/VS_Snippets_Winforms/MyDataGridClass_FlatMode_ReadOnly/CS/mydatagridclass_flatmode_readonly.cs#2)]
 [!code-vb[MyDataGridClass_FlatMode_ReadOnly#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MyDataGridClass_FlatMode_ReadOnly/VB/mydatagridclass_flatmode_readonly.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGrid.ReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="ResetAlternatingBackColor">
      <MemberSignature Language="C#" Value="public void ResetAlternatingBackColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAlternatingBackColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ResetAlternatingBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAlternatingBackColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAlternatingBackColor();" />
      <MemberSignature Language="F#" Value="member this.ResetAlternatingBackColor : unit -&gt; unit" Usage="dataGrid.ResetAlternatingBackColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje <see cref="P:System.Windows.Forms.DataGrid.AlternatingBackColor" /> właściwość na kolor domyślny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana zazwyczaj w przypadku tworzenia projektanta dla <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> lub tworzenia własnej kontrolki zawierającej. <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> Możesz użyć <xref:System.Windows.Forms.DataGrid.ShouldSerializeAlternatingBackColor%2A> metody, aby określić, czy wartość właściwości została zmieniona z wartości domyślnej.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.  
  
 [!code-cpp[DataGrid_ColorMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_ColorMembers/CPP/datagrid_10.cpp#2)]
 [!code-csharp[DataGrid_ColorMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_ColorMembers/CS/datagrid_10.cs#2)]
 [!code-vb[DataGrid_ColorMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_ColorMembers/VB/datagrid_10.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGrid.AlternatingBackColor" />
      </Docs>
    </Member>
    <Member MemberName="ResetBackColor">
      <MemberSignature Language="C#" Value="public override void ResetBackColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetBackColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ResetBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetBackColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetBackColor();" />
      <MemberSignature Language="F#" Value="override this.ResetBackColor : unit -&gt; unit" Usage="dataGrid.ResetBackColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje <see cref="P:System.Windows.Forms.DataGrid.BackColor" /> właściwość do wartości domyślnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana zazwyczaj w przypadku tworzenia projektanta dla <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> lub tworzenia własnej kontrolki zawierającej. <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.  
  
 [!code-cpp[DataGrid_ColorMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_ColorMembers/CPP/datagrid_10.cpp#2)]
 [!code-csharp[DataGrid_ColorMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_ColorMembers/CS/datagrid_10.cs#2)]
 [!code-vb[DataGrid_ColorMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_ColorMembers/VB/datagrid_10.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetForeColor">
      <MemberSignature Language="C#" Value="public override void ResetForeColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetForeColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ResetForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetForeColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetForeColor();" />
      <MemberSignature Language="F#" Value="override this.ResetForeColor : unit -&gt; unit" Usage="dataGrid.ResetForeColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje <see cref="P:System.Windows.Forms.DataGrid.ForeColor" /> właściwość do wartości domyślnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana zazwyczaj w przypadku tworzenia projektanta dla <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> lub tworzenia własnej kontrolki zawierającej. <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.  
  
 [!code-cpp[DataGrid_ColorMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_ColorMembers/CPP/datagrid_10.cpp#2)]
 [!code-csharp[DataGrid_ColorMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_ColorMembers/CS/datagrid_10.cs#2)]
 [!code-vb[DataGrid_ColorMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_ColorMembers/VB/datagrid_10.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGrid.AlternatingBackColor" />
        <altmember cref="P:System.Windows.Forms.DataGrid.BackColor" />
        <altmember cref="P:System.Windows.Forms.DataGrid.CaptionBackColor" />
        <altmember cref="P:System.Windows.Forms.DataGrid.CaptionForeColor" />
        <altmember cref="P:System.Windows.Forms.DataGrid.ForeColor" />
        <altmember cref="M:System.Windows.Forms.DataGrid.ResetAlternatingBackColor" />
      </Docs>
    </Member>
    <Member MemberName="ResetGridLineColor">
      <MemberSignature Language="C#" Value="public void ResetGridLineColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetGridLineColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ResetGridLineColor" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetGridLineColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetGridLineColor();" />
      <MemberSignature Language="F#" Value="member this.ResetGridLineColor : unit -&gt; unit" Usage="dataGrid.ResetGridLineColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje <see cref="P:System.Windows.Forms.DataGrid.GridLineColor" /> właściwość do wartości domyślnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana zazwyczaj w przypadku tworzenia projektanta dla <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> lub tworzenia własnej kontrolki zawierającej. <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> Możesz użyć <xref:System.Windows.Forms.DataGrid.ShouldSerializeGridLineColor%2A> metody, aby określić, czy wartość właściwości została zmieniona z wartości domyślnej.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.  
  
 [!code-cpp[DataGrid_ColorMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_ColorMembers/CPP/datagrid_10.cpp#2)]
 [!code-csharp[DataGrid_ColorMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_ColorMembers/CS/datagrid_10.cs#2)]
 [!code-vb[DataGrid_ColorMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_ColorMembers/VB/datagrid_10.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetHeaderBackColor">
      <MemberSignature Language="C#" Value="public void ResetHeaderBackColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetHeaderBackColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ResetHeaderBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetHeaderBackColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetHeaderBackColor();" />
      <MemberSignature Language="F#" Value="member this.ResetHeaderBackColor : unit -&gt; unit" Usage="dataGrid.ResetHeaderBackColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje <see cref="P:System.Windows.Forms.DataGrid.HeaderBackColor" /> właściwość do wartości domyślnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana zazwyczaj w przypadku tworzenia projektanta dla <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> lub tworzenia własnej kontrolki zawierającej. <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> Możesz użyć <xref:System.Windows.Forms.DataGrid.ShouldSerializeHeaderBackColor%2A> metody, aby określić, czy wartość właściwości została zmieniona z wartości domyślnej.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.  
  
 [!code-cpp[MyDataGridClass_ResetHeaderBackColor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MyDataGridClass_ResetHeaderBackColor/CPP/mydatagridclass_resetheaderbackcolor.cpp#1)]
 [!code-csharp[MyDataGridClass_ResetHeaderBackColor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MyDataGridClass_ResetHeaderBackColor/CS/mydatagridclass_resetheaderbackcolor.cs#1)]
 [!code-vb[MyDataGridClass_ResetHeaderBackColor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MyDataGridClass_ResetHeaderBackColor/VB/mydatagridclass_resetheaderbackcolor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetHeaderFont">
      <MemberSignature Language="C#" Value="public void ResetHeaderFont ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetHeaderFont() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ResetHeaderFont" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetHeaderFont ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetHeaderFont();" />
      <MemberSignature Language="F#" Value="member this.ResetHeaderFont : unit -&gt; unit" Usage="dataGrid.ResetHeaderFont " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje <see cref="P:System.Windows.Forms.DataGrid.HeaderFont" /> właściwość do wartości domyślnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana zazwyczaj w przypadku tworzenia projektanta dla <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> lub tworzenia własnej kontrolki zawierającej. <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> Możesz użyć <xref:System.Windows.Forms.DataGrid.ShouldSerializeHeaderFont%2A> metody, aby określić, czy wartość właściwości została zmieniona z wartości domyślnej.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.  
  
 [!code-cpp[MyDataGridClass_ResetHeaderBackColor#3](~/samples/snippets/cpp/VS_Snippets_Winforms/MyDataGridClass_ResetHeaderBackColor/CPP/mydatagridclass_resetheaderbackcolor.cpp#3)]
 [!code-csharp[MyDataGridClass_ResetHeaderBackColor#3](~/samples/snippets/csharp/VS_Snippets_Winforms/MyDataGridClass_ResetHeaderBackColor/CS/mydatagridclass_resetheaderbackcolor.cs#3)]
 [!code-vb[MyDataGridClass_ResetHeaderBackColor#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MyDataGridClass_ResetHeaderBackColor/VB/mydatagridclass_resetheaderbackcolor.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetHeaderForeColor">
      <MemberSignature Language="C#" Value="public void ResetHeaderForeColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetHeaderForeColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ResetHeaderForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetHeaderForeColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetHeaderForeColor();" />
      <MemberSignature Language="F#" Value="member this.ResetHeaderForeColor : unit -&gt; unit" Usage="dataGrid.ResetHeaderForeColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje <see cref="P:System.Windows.Forms.DataGrid.HeaderForeColor" /> właściwość do wartości domyślnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana zazwyczaj w przypadku tworzenia projektanta dla <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> lub tworzenia własnej kontrolki zawierającej. <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> Możesz użyć <xref:System.Windows.Forms.DataGrid.ShouldSerializeHeaderForeColor%2A> metody, aby określić, czy wartość właściwości została zmieniona z wartości domyślnej.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.  
  
 [!code-cpp[MyDataGridClass_ResetHeaderBackColor#2](~/samples/snippets/cpp/VS_Snippets_Winforms/MyDataGridClass_ResetHeaderBackColor/CPP/mydatagridclass_resetheaderbackcolor.cpp#2)]
 [!code-csharp[MyDataGridClass_ResetHeaderBackColor#2](~/samples/snippets/csharp/VS_Snippets_Winforms/MyDataGridClass_ResetHeaderBackColor/CS/mydatagridclass_resetheaderbackcolor.cs#2)]
 [!code-vb[MyDataGridClass_ResetHeaderBackColor#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MyDataGridClass_ResetHeaderBackColor/VB/mydatagridclass_resetheaderbackcolor.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetLinkColor">
      <MemberSignature Language="C#" Value="public void ResetLinkColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetLinkColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ResetLinkColor" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetLinkColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetLinkColor();" />
      <MemberSignature Language="F#" Value="member this.ResetLinkColor : unit -&gt; unit" Usage="dataGrid.ResetLinkColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje <see cref="P:System.Windows.Forms.DataGrid.LinkColor" /> właściwość do wartości domyślnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana zazwyczaj w przypadku tworzenia projektanta dla <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> lub tworzenia własnej kontrolki zawierającej. <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.  
  
 [!code-cpp[DataGrid_ColorMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_ColorMembers/CPP/datagrid_10.cpp#2)]
 [!code-csharp[DataGrid_ColorMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_ColorMembers/CS/datagrid_10.cs#2)]
 [!code-vb[DataGrid_ColorMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_ColorMembers/VB/datagrid_10.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetLinkHoverColor">
      <MemberSignature Language="C#" Value="public void ResetLinkHoverColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetLinkHoverColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ResetLinkHoverColor" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetLinkHoverColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetLinkHoverColor();" />
      <MemberSignature Language="F#" Value="member this.ResetLinkHoverColor : unit -&gt; unit" Usage="dataGrid.ResetLinkHoverColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje <see cref="P:System.Windows.Forms.DataGrid.LinkHoverColor" /> właściwość do wartości domyślnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana zazwyczaj w przypadku tworzenia projektanta dla <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> lub tworzenia własnej kontrolki zawierającej. <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> Możesz użyć <xref:System.Windows.Forms.DataGrid.ShouldSerializeLinkHoverColor%2A> metody, aby określić, czy wartość właściwości została zmieniona z wartości domyślnej.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetSelection">
      <MemberSignature Language="C#" Value="protected void ResetSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ResetSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ResetSelection" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ResetSelection ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ResetSelection();" />
      <MemberSignature Language="F#" Value="member this.ResetSelection : unit -&gt; unit" Usage="dataGrid.ResetSelection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wyłącza zaznaczenie dla wszystkich zaznaczonych wierszy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody z <xref:System.Windows.Forms.DataGrid.IsSelected%2A>metodami, <xref:System.Windows.Forms.DataGrid.Select%2A>i <xref:System.Windows.Forms.DataGrid.UnSelect%2A> , aby manipulować stanem zaznaczenia określonego wiersza.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetSelectionBackColor">
      <MemberSignature Language="C#" Value="public void ResetSelectionBackColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetSelectionBackColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ResetSelectionBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetSelectionBackColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetSelectionBackColor();" />
      <MemberSignature Language="F#" Value="member this.ResetSelectionBackColor : unit -&gt; unit" Usage="dataGrid.ResetSelectionBackColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje <see cref="P:System.Windows.Forms.DataGrid.SelectionBackColor" /> właściwość do wartości domyślnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana zazwyczaj w przypadku tworzenia projektanta dla <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> lub tworzenia własnej kontrolki zawierającej. <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> Możesz użyć <xref:System.Windows.Forms.DataGrid.ShouldSerializeSelectionBackColor%2A> metody, aby określić, czy wartość właściwości została zmieniona z wartości domyślnej.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.  
  
 [!code-cpp[DataGrid_ColorMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_ColorMembers/CPP/datagrid_10.cpp#2)]
 [!code-csharp[DataGrid_ColorMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_ColorMembers/CS/datagrid_10.cs#2)]
 [!code-vb[DataGrid_ColorMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_ColorMembers/VB/datagrid_10.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetSelectionForeColor">
      <MemberSignature Language="C#" Value="public void ResetSelectionForeColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetSelectionForeColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ResetSelectionForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetSelectionForeColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetSelectionForeColor();" />
      <MemberSignature Language="F#" Value="member this.ResetSelectionForeColor : unit -&gt; unit" Usage="dataGrid.ResetSelectionForeColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje <see cref="P:System.Windows.Forms.DataGrid.SelectionForeColor" /> właściwość do wartości domyślnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana zazwyczaj w przypadku tworzenia projektanta dla <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> lub tworzenia własnej kontrolki zawierającej. <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> Możesz użyć <xref:System.Windows.Forms.DataGrid.ShouldSerializeSelectionForeColor%2A> metody, aby określić, czy wartość właściwości została zmieniona z wartości domyślnej.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.  
  
 [!code-cpp[DataGrid_ColorMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_ColorMembers/CPP/datagrid_10.cpp#2)]
 [!code-csharp[DataGrid_ColorMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_ColorMembers/CS/datagrid_10.cs#2)]
 [!code-vb[DataGrid_ColorMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_ColorMembers/VB/datagrid_10.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowHeaderClick">
      <MemberSignature Language="C#" Value="protected event EventHandler RowHeaderClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RowHeaderClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.RowHeaderClick" />
      <MemberSignature Language="VB.NET" Value="Protected Custom Event RowHeaderClick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; event EventHandler ^ RowHeaderClick;" />
      <MemberSignature Language="F#" Value="member this.RowHeaderClick : EventHandler " Usage="member this.RowHeaderClick : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po kliknięciu nagłówka wiersza.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersVisible">
      <MemberSignature Language="C#" Value="public bool RowHeadersVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RowHeadersVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.RowHeadersVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property RowHeadersVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RowHeadersVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RowHeadersVisible : bool with get, set" Usage="System.Windows.Forms.DataGrid.RowHeadersVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy nagłówki wierszy są widoczne.</summary>
        <value><see langword="true" />Jeśli nagłówki wierszy są widoczne; w przeciwnym razie. <see langword="false" /></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.DataGrid.ParentRowsVisible" />
        <altmember cref="P:System.Windows.Forms.DataGrid.RowHeaderWidth" />
        <altmember cref="P:System.Windows.Forms.DataGrid.VisibleRowCount" />
        <altmember cref="P:System.Windows.Forms.DataGrid.VisibleColumnCount" />
      </Docs>
    </Member>
    <Member MemberName="RowHeaderWidth">
      <MemberSignature Language="C#" Value="public int RowHeaderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowHeaderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.RowHeaderWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property RowHeaderWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RowHeaderWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RowHeaderWidth : int with get, set" Usage="System.Windows.Forms.DataGrid.RowHeaderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(35)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szerokość nagłówków wierszy.</summary>
        <value>Szerokość nagłówków wierszy w <see cref="T:System.Windows.Forms.DataGrid" />. Wartość domyślna to 35.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.  
  
 [!code-cpp[MyDataGridClass_ResetHeaderBackColor#6](~/samples/snippets/cpp/VS_Snippets_Winforms/MyDataGridClass_ResetHeaderBackColor/CPP/mydatagridclass_resetheaderbackcolor.cpp#6)]
 [!code-csharp[MyDataGridClass_ResetHeaderBackColor#6](~/samples/snippets/csharp/VS_Snippets_Winforms/MyDataGridClass_ResetHeaderBackColor/CS/mydatagridclass_resetheaderbackcolor.cs#6)]
 [!code-vb[MyDataGridClass_ResetHeaderBackColor#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MyDataGridClass_ResetHeaderBackColor/VB/mydatagridclass_resetheaderbackcolor.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scroll">
      <MemberSignature Language="C#" Value="public event EventHandler Scroll;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Scroll" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.Scroll" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Scroll As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Scroll;" />
      <MemberSignature Language="F#" Value="member this.Scroll : EventHandler " Usage="member this.Scroll : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy użytkownik przewinie <see cref="T:System.Windows.Forms.DataGrid" /> formant.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.  
  
 [!code-cpp[DataGrid_CaptionVisibleChanged#3](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_CaptionVisibleChanged/CPP/mydatagrid_captionvisiblechanged.cpp#3)]
 [!code-csharp[DataGrid_CaptionVisibleChanged#3](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_CaptionVisibleChanged/CS/mydatagrid_captionvisiblechanged.cs#3)]
 [!code-vb[DataGrid_CaptionVisibleChanged#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_CaptionVisibleChanged/VB/mydatagrid_captionvisiblechanged.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (int row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(int32 row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.Select(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (row As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(int row);" />
      <MemberSignature Language="F#" Value="override this.Select : int -&gt; unit" Usage="dataGrid.Select row" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="row">Indeks wiersza do wybrania.</param>
        <summary>Wybiera określony wiersz.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody z <xref:System.Windows.Forms.DataGrid.IsSelected%2A>metodami, <xref:System.Windows.Forms.DataGrid.UnSelect%2A>i <xref:System.Windows.Forms.DataGrid.ResetSelection%2A> , aby manipulować stanem zaznaczenia określonego wiersza.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.  
  
 [!code-cpp[MyDataGridClass_ResetHeaderBackColor#4](~/samples/snippets/cpp/VS_Snippets_Winforms/MyDataGridClass_ResetHeaderBackColor/CPP/mydatagridclass_resetheaderbackcolor.cpp#4)]
 [!code-csharp[MyDataGridClass_ResetHeaderBackColor#4](~/samples/snippets/csharp/VS_Snippets_Winforms/MyDataGridClass_ResetHeaderBackColor/CS/mydatagridclass_resetheaderbackcolor.cs#4)]
 [!code-vb[MyDataGridClass_ResetHeaderBackColor#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MyDataGridClass_ResetHeaderBackColor/VB/mydatagridclass_resetheaderbackcolor.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color SelectionBackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color SelectionBackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.SelectionBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionBackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color SelectionBackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionBackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGrid.SelectionBackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor tła wybranych wierszy.</summary>
        <value><see cref="T:System.Drawing.Color" /> Reprezentujący kolor tła wybranych wierszy. Wartość domyślna to <see cref="P:System.Drawing.SystemBrushes.ActiveCaption" /> kolor.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana zazwyczaj w przypadku tworzenia projektanta dla <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> lub tworzenia własnej kontrolki zawierającej. <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.  
  
 [!code-cpp[DataGrid_ColorMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_ColorMembers/CPP/datagrid_10.cpp#2)]
 [!code-csharp[DataGrid_ColorMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_ColorMembers/CS/datagrid_10.cs#2)]
 [!code-vb[DataGrid_ColorMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_ColorMembers/VB/datagrid_10.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color SelectionForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color SelectionForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.SelectionForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color SelectionForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGrid.SelectionForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor pierwszego planu wybranych wierszy.</summary>
        <value><see cref="T:System.Drawing.Color" /> Reprezentujący kolor pierwszego planu wybranych wierszy. Wartość domyślna to <see cref="P:System.Drawing.SystemBrushes.ActiveCaptionText" /> kolor.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.  
  
 [!code-cpp[DataGrid_ColorMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_ColorMembers/CPP/datagrid_10.cpp#2)]
 [!code-csharp[DataGrid_ColorMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_ColorMembers/CS/datagrid_10.cs#2)]
 [!code-vb[DataGrid_ColorMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_ColorMembers/VB/datagrid_10.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDataBinding">
      <MemberSignature Language="C#" Value="public void SetDataBinding (object dataSource, string dataMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDataBinding(object dataSource, string dataMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.SetDataBinding(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDataBinding (dataSource As Object, dataMember As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDataBinding(System::Object ^ dataSource, System::String ^ dataMember);" />
      <MemberSignature Language="F#" Value="member this.SetDataBinding : obj * string -&gt; unit" Usage="dataGrid.SetDataBinding (dataSource, dataMember)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource">Źródło danych dla <see cref="T:System.Windows.Forms.DataGrid" /> formantu.</param>
        <param name="dataMember">Ciąg określający tabelę do powiązania w obiekcie zwracanym <see cref="P:System.Windows.Forms.DataGrid.DataSource" /> przez właściwość. <see cref="P:System.Windows.Forms.DataGrid.DataMember" /></param>
        <summary>Ustawia właściwości <see cref="P:System.Windows.Forms.DataGrid.DataMember" /> i w czasie wykonywania. <see cref="P:System.Windows.Forms.DataGrid.DataSource" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGrid.SetDataBinding%2A> Aby<xref:System.Windows.Forms.DataGrid.DataSource%2A> zresetować właściwość, należy użyć metody w czasie wykonywania.  
  
 Aby uzyskać <xref:System.Windows.Forms.DataGrid.DataSource%2A> szczegółowe informacje na temat ustawiania prawidłowego źródła danych, zobacz Właściwość.  
  
 Można utworzyć siatkę, która umożliwia użytkownikom edytowanie danych, ale uniemożliwia im Dodawanie nowych wierszy przy użyciu <xref:System.Data.DataView> jako źródła danych i <xref:System.Data.DataView.AllowNew%2A> ustawienie właściwości na `false`. <xref:System.Windows.Forms.DataGrid.DataSource%2A> Gdy jestlub<xref:System.Data.DataTable>,należy ustawić<xref:System.Windows.Forms.DataGrid.DataMember%2A> na pusty ciąg (""). <xref:System.Data.DataView>  
  
   
  
## Examples  
 Poniższy przykład <xref:System.Windows.Forms.DataGrid.DataSource%2A> kodu ustawia <xref:System.Windows.Forms.DataGrid.DataMember%2A> <xref:System.Data.DataSet> odpowiednio,<xref:System.Data.DataSet>a i a w.<xref:System.Data.DataTable>  
  
 [!code-cpp[Classic DataGrid.SetDataBinding Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.SetDataBinding Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.SetDataBinding Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.SetDataBinding Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.SetDataBinding Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.SetDataBinding Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Co najmniej jeden z argumentów jest nieprawidłowy.</exception>
        <exception cref="T:System.ArgumentNullException">Argument ma wartość <see langword="null" />. <paramref name="dataSource" /></exception>
        <altmember cref="P:System.Windows.Forms.DataGrid.DataMember" />
        <altmember cref="P:System.Windows.Forms.DataGrid.DataSource" />
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="T:System.Data.DataView" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeAlternatingBackColor">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldSerializeAlternatingBackColor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldSerializeAlternatingBackColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ShouldSerializeAlternatingBackColor" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ShouldSerializeAlternatingBackColor () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ShouldSerializeAlternatingBackColor();" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeAlternatingBackColor : unit -&gt; bool&#xA;override this.ShouldSerializeAlternatingBackColor : unit -&gt; bool" Usage="dataGrid.ShouldSerializeAlternatingBackColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wskazuje, <see cref="P:System.Windows.Forms.DataGrid.AlternatingBackColor" /> czy właściwość powinna być utrwalona.</summary>
        <returns><see langword="true" />Jeśli wartość właściwości została zmieniona z domyślną; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana zazwyczaj w przypadku tworzenia projektanta dla <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> lub tworzenia własnej kontrolki zawierającej. <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeBackgroundColor">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldSerializeBackgroundColor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldSerializeBackgroundColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ShouldSerializeBackgroundColor" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ShouldSerializeBackgroundColor () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ShouldSerializeBackgroundColor();" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeBackgroundColor : unit -&gt; bool&#xA;override this.ShouldSerializeBackgroundColor : unit -&gt; bool" Usage="dataGrid.ShouldSerializeBackgroundColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wskazuje, <see cref="P:System.Windows.Forms.DataGrid.BackgroundColor" /> czy właściwość powinna być utrwalona.</summary>
        <returns><see langword="true" />Jeśli wartość właściwości została zmieniona z domyślną; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana zazwyczaj w przypadku tworzenia projektanta dla <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> lub tworzenia własnej kontrolki zawierającej. <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeCaptionBackColor">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldSerializeCaptionBackColor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldSerializeCaptionBackColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ShouldSerializeCaptionBackColor" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ShouldSerializeCaptionBackColor () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ShouldSerializeCaptionBackColor();" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeCaptionBackColor : unit -&gt; bool&#xA;override this.ShouldSerializeCaptionBackColor : unit -&gt; bool" Usage="dataGrid.ShouldSerializeCaptionBackColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera wartość wskazującą, <see cref="P:System.Windows.Forms.DataGrid.CaptionBackColor" /> czy właściwość powinna być utrwalona.</summary>
        <returns><see langword="true" />Jeśli wartość właściwości została zmieniona z domyślną; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest zazwyczaj używana tylko <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>w przypadku tworzenia projektanta dla lub tworzenia własnej kontrolki zawierającej. <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeCaptionForeColor">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldSerializeCaptionForeColor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldSerializeCaptionForeColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ShouldSerializeCaptionForeColor" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ShouldSerializeCaptionForeColor () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ShouldSerializeCaptionForeColor();" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeCaptionForeColor : unit -&gt; bool&#xA;override this.ShouldSerializeCaptionForeColor : unit -&gt; bool" Usage="dataGrid.ShouldSerializeCaptionForeColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera wartość wskazującą, <see cref="P:System.Windows.Forms.DataGrid.CaptionForeColor" /> czy właściwość powinna być utrwalona.</summary>
        <returns><see langword="true" />Jeśli wartość właściwości została zmieniona z domyślną; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest zazwyczaj używana tylko <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>w przypadku tworzenia projektanta dla lub tworzenia własnej kontrolki zawierającej. <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeGridLineColor">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldSerializeGridLineColor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldSerializeGridLineColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ShouldSerializeGridLineColor" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ShouldSerializeGridLineColor () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ShouldSerializeGridLineColor();" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeGridLineColor : unit -&gt; bool&#xA;override this.ShouldSerializeGridLineColor : unit -&gt; bool" Usage="dataGrid.ShouldSerializeGridLineColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wskazuje, <see cref="P:System.Windows.Forms.DataGrid.GridLineColor" /> czy właściwość powinna być utrwalona.</summary>
        <returns><see langword="true" />Jeśli wartość właściwości została zmieniona z domyślną; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana zazwyczaj w przypadku tworzenia projektanta dla <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> lub tworzenia własnej kontrolki zawierającej. <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeHeaderBackColor">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldSerializeHeaderBackColor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldSerializeHeaderBackColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ShouldSerializeHeaderBackColor" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ShouldSerializeHeaderBackColor () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ShouldSerializeHeaderBackColor();" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeHeaderBackColor : unit -&gt; bool&#xA;override this.ShouldSerializeHeaderBackColor : unit -&gt; bool" Usage="dataGrid.ShouldSerializeHeaderBackColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wskazuje, <see cref="P:System.Windows.Forms.DataGrid.HeaderBackColor" /> czy właściwość powinna być utrwalona.</summary>
        <returns><see langword="true" />Jeśli wartość właściwości została zmieniona z domyślną; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana zazwyczaj w przypadku tworzenia projektanta dla <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> lub tworzenia własnej kontrolki zawierającej. <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeHeaderFont">
      <MemberSignature Language="C#" Value="protected bool ShouldSerializeHeaderFont ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ShouldSerializeHeaderFont() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ShouldSerializeHeaderFont" />
      <MemberSignature Language="VB.NET" Value="Protected Function ShouldSerializeHeaderFont () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ShouldSerializeHeaderFont();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeHeaderFont : unit -&gt; bool" Usage="dataGrid.ShouldSerializeHeaderFont " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wskazuje, <see cref="P:System.Windows.Forms.DataGrid.HeaderFont" /> czy właściwość powinna być utrwalona.</summary>
        <returns><see langword="true" />Jeśli wartość właściwości została zmieniona z domyślną; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana zazwyczaj w przypadku tworzenia projektanta dla <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> lub tworzenia własnej kontrolki zawierającej. <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeHeaderForeColor">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldSerializeHeaderForeColor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldSerializeHeaderForeColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ShouldSerializeHeaderForeColor" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ShouldSerializeHeaderForeColor () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ShouldSerializeHeaderForeColor();" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeHeaderForeColor : unit -&gt; bool&#xA;override this.ShouldSerializeHeaderForeColor : unit -&gt; bool" Usage="dataGrid.ShouldSerializeHeaderForeColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wskazuje, <see cref="P:System.Windows.Forms.DataGrid.HeaderForeColor" /> czy właściwość powinna być utrwalona.</summary>
        <returns><see langword="true" />Jeśli wartość właściwości została zmieniona z domyślną; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana zazwyczaj w przypadku tworzenia projektanta dla <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> lub tworzenia własnej kontrolki zawierającej. <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeLinkHoverColor">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldSerializeLinkHoverColor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldSerializeLinkHoverColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ShouldSerializeLinkHoverColor" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ShouldSerializeLinkHoverColor () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ShouldSerializeLinkHoverColor();" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeLinkHoverColor : unit -&gt; bool&#xA;override this.ShouldSerializeLinkHoverColor : unit -&gt; bool" Usage="dataGrid.ShouldSerializeLinkHoverColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wskazuje, <see cref="P:System.Windows.Forms.DataGrid.LinkHoverColor" /> czy właściwość powinna być utrwalona.</summary>
        <returns><see langword="true" />Jeśli wartość właściwości została zmieniona z domyślną; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana zazwyczaj w przypadku tworzenia projektanta dla <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> lub tworzenia własnej kontrolki zawierającej. <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGrid.ResetLinkHoverColor" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeParentRowsBackColor">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldSerializeParentRowsBackColor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldSerializeParentRowsBackColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ShouldSerializeParentRowsBackColor" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ShouldSerializeParentRowsBackColor () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ShouldSerializeParentRowsBackColor();" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeParentRowsBackColor : unit -&gt; bool&#xA;override this.ShouldSerializeParentRowsBackColor : unit -&gt; bool" Usage="dataGrid.ShouldSerializeParentRowsBackColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wskazuje, <see cref="P:System.Windows.Forms.DataGrid.ParentRowsBackColor" /> czy właściwość powinna być utrwalona.</summary>
        <returns><see langword="true" />Jeśli wartość właściwości została zmieniona z domyślną; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest zazwyczaj używana tylko <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>w przypadku tworzenia projektanta dla lub tworzenia własnej kontrolki zawierającej. <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeParentRowsForeColor">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldSerializeParentRowsForeColor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldSerializeParentRowsForeColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ShouldSerializeParentRowsForeColor" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ShouldSerializeParentRowsForeColor () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ShouldSerializeParentRowsForeColor();" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeParentRowsForeColor : unit -&gt; bool&#xA;override this.ShouldSerializeParentRowsForeColor : unit -&gt; bool" Usage="dataGrid.ShouldSerializeParentRowsForeColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wskazuje, <see cref="P:System.Windows.Forms.DataGrid.ParentRowsForeColor" /> czy właściwość powinna być utrwalona.</summary>
        <returns><see langword="true" />Jeśli wartość właściwości została zmieniona z domyślną; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest zazwyczaj używana tylko <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>w przypadku tworzenia projektanta dla lub tworzenia własnej kontrolki zawierającej. <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializePreferredRowHeight">
      <MemberSignature Language="C#" Value="protected bool ShouldSerializePreferredRowHeight ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ShouldSerializePreferredRowHeight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ShouldSerializePreferredRowHeight" />
      <MemberSignature Language="VB.NET" Value="Protected Function ShouldSerializePreferredRowHeight () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ShouldSerializePreferredRowHeight();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializePreferredRowHeight : unit -&gt; bool" Usage="dataGrid.ShouldSerializePreferredRowHeight " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wskazuje, <see cref="P:System.Windows.Forms.DataGrid.PreferredRowHeight" /> czy właściwość powinna być utrwalona.</summary>
        <returns><see langword="true" />Jeśli wartość właściwości została zmieniona z domyślną; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana zazwyczaj w przypadku tworzenia projektanta dla <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> lub tworzenia własnej kontrolki zawierającej. <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSelectionBackColor">
      <MemberSignature Language="C#" Value="protected bool ShouldSerializeSelectionBackColor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ShouldSerializeSelectionBackColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ShouldSerializeSelectionBackColor" />
      <MemberSignature Language="VB.NET" Value="Protected Function ShouldSerializeSelectionBackColor () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ShouldSerializeSelectionBackColor();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeSelectionBackColor : unit -&gt; bool" Usage="dataGrid.ShouldSerializeSelectionBackColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wskazuje, <see cref="P:System.Windows.Forms.DataGrid.SelectionBackColor" /> czy właściwość powinna być utrwalona.</summary>
        <returns><see langword="true" />Jeśli wartość właściwości została zmieniona z domyślną; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana zazwyczaj w przypadku tworzenia projektanta dla <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> lub tworzenia własnej kontrolki zawierającej. <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSelectionForeColor">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldSerializeSelectionForeColor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldSerializeSelectionForeColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ShouldSerializeSelectionForeColor" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ShouldSerializeSelectionForeColor () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ShouldSerializeSelectionForeColor();" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeSelectionForeColor : unit -&gt; bool&#xA;override this.ShouldSerializeSelectionForeColor : unit -&gt; bool" Usage="dataGrid.ShouldSerializeSelectionForeColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wskazuje, <see cref="P:System.Windows.Forms.DataGrid.SelectionForeColor" /> czy właściwość powinna być utrwalona.</summary>
        <returns><see langword="true" />Jeśli wartość właściwości została zmieniona z domyślną; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana zazwyczaj w przypadku tworzenia projektanta dla <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> lub tworzenia własnej kontrolki zawierającej. <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowParentDetailsButtonClick">
      <MemberSignature Language="C#" Value="public event EventHandler ShowParentDetailsButtonClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ShowParentDetailsButtonClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.ShowParentDetailsButtonClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ShowParentDetailsButtonClick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ShowParentDetailsButtonClick;" />
      <MemberSignature Language="F#" Value="member this.ShowParentDetailsButtonClick : EventHandler " Usage="member this.ShowParentDetailsButtonClick : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po <see langword="ShowParentDetails" /> kliknięciu przycisku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.  
  
 [!code-cpp[DataGrid_ShowParentDetailsButtonClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_ShowParentDetailsButtonClick/CPP/datagrid_showparentdetailsbuttonclick.cpp#1)]
 [!code-csharp[DataGrid_ShowParentDetailsButtonClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_ShowParentDetailsButtonClick/CS/datagrid_showparentdetailsbuttonclick.cs#1)]
 [!code-vb[DataGrid_ShowParentDetailsButtonClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_ShowParentDetailsButtonClick/VB/datagrid_showparentdetailsbuttonclick.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.Site" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ISite ^ Site { System::ComponentModel::ISite ^ get(); void set(System::ComponentModel::ISite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Site : System.ComponentModel.ISite with get, set" Usage="System.Windows.Forms.DataGrid.Site" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia lokację formantu.</summary>
        <value><see cref="T:System.ComponentModel.ISite" /> Skojarzone z kontrolką (jeśli istnieje).</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.Site" />
      </Docs>
    </Member>
    <Member MemberName="SubObjectsSiteChange">
      <MemberSignature Language="C#" Value="public void SubObjectsSiteChange (bool site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SubObjectsSiteChange(bool site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.SubObjectsSiteChange(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SubObjectsSiteChange (site As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SubObjectsSiteChange(bool site);" />
      <MemberSignature Language="F#" Value="member this.SubObjectsSiteChange : bool -&gt; unit" Usage="dataGrid.SubObjectsSiteChange site" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="site" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="site"><see langword="true" />Aby dodać <see cref="T:System.Windows.Forms.DataGridTableStyle" /> obiekty do kontenera; <see langword="false" /> , aby je usunąć.</param>
        <summary>Dodaje lub usuwa <see cref="T:System.Windows.Forms.DataGridTableStyle" /> obiekty z kontenera, który jest skojarzony <see cref="T:System.Windows.Forms.DataGrid" />z.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TableStyles">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.GridTableStylesCollection TableStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.GridTableStylesCollection TableStyles" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.TableStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TableStyles As GridTableStylesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::GridTableStylesCollection ^ TableStyles { System::Windows::Forms::GridTableStylesCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TableStyles : System.Windows.Forms.GridTableStylesCollection" Usage="System.Windows.Forms.DataGrid.TableStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.GridTableStylesCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see cref="T:System.Windows.Forms.DataGridTableStyle" /> obiektów dla siatki.</summary>
        <value><see cref="T:System.Windows.Forms.GridTableStylesCollection" /> Reprezentuje<see cref="T:System.Windows.Forms.DataGridTableStyle" /> kolekcję obiektów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj pobranej <xref:System.Windows.Forms.DataGrid.TableStyles%2A> przez właściwość, aby utworzyć niestandardowe widoki <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> każdej tabeli wyświetlanej przez formant. <xref:System.Windows.Forms.GridTableStylesCollection>  
  
 Domyślnie kolekcja zwrócona przez <xref:System.Windows.Forms.DataGrid.TableStyles%2A> właściwość nie zawiera żadnych <xref:System.Windows.Forms.DataGridTableStyle> obiektów. Aby utworzyć zestaw niestandardowych widoków:  
  
1.  Utwórz <xref:System.Windows.Forms.DataGridTableStyle>.  
  
2.  Ustaw obiekt tabeli siatki <xref:System.Data.DataTable.TableName%2A> na <xref:System.Data.DataTable>. <xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>  
  
3.  Dodaj <xref:System.Windows.Forms.DataGridColumnStyle> obiekty, po jednym dla każdej kolumny siatki, które mają być wyświetlane, <xref:System.Windows.Forms.GridColumnStylesCollection> do zwracanych <xref:System.Windows.Forms.DataGridTableStyle.GridColumnStyles%2A> przez właściwość.  
  
4.  Ustaw wartość <xref:System.Windows.Forms.DataGridColumnStyle>zkażdego na <xref:System.Data.DataColumn.ColumnName%2A> a. <xref:System.Data.DataColumn> <xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A>  
  
5.  Dodaj obiekt do kolekcji zwróconej przez <xref:System.Windows.Forms.DataGrid.TableStyles%2A> właściwość. <xref:System.Windows.Forms.DataGridTableStyle>  
  
> [!CAUTION]
>  Zawsze twórz <xref:System.Windows.Forms.DataGridColumnStyle> obiekty i Dodaj je <xref:System.Windows.Forms.GridColumnStylesCollection> do obiektu przed dodaniem <xref:System.Windows.Forms.DataGridTableStyle> do programu <xref:System.Windows.Forms.GridTableStylesCollection>. Po dodaniu pustej <xref:System.Windows.Forms.DataGridTableStyle> <xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A> <xref:System.Windows.Forms.DataGridColumnStyle> wartości do kolekcji obiekty są generowane automatycznie. W związku z tym wyjątek zostanie wygenerowany, jeśli spróbujesz dodać nowe <xref:System.Windows.Forms.DataGridColumnStyle> obiekty ze zduplikowanymi <xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A> wartościami do. <xref:System.Windows.Forms.GridColumnStylesCollection>  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy jeden <xref:System.Windows.Forms.DataGridTableStyle> dla każdego z nich <xref:System.Data.DataTable> w <xref:System.Data.DataSet>i <xref:System.Data.DataTable.TableName%2A> <xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A> <xref:System.Windows.Forms.DataGridTableStyle>ustawiawartość z na. <xref:System.Data.DataTable> Następnie zostanie dodany <xref:System.Windows.Forms.GridTableStylesCollection> do zwracanych przez <xref:System.Windows.Forms.DataGrid.TableStyles%2A> właściwość. <xref:System.Windows.Forms.DataGridTableStyle> Przykład drukuje <xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A> również każdy <xref:System.Windows.Forms.GridColumnStylesCollection> <xref:System.Windows.Forms.DataGridTableStyle>wzwracanych przez <xref:System.Windows.Forms.DataGridTableStyle.GridColumnStyles%2A> właściwość każdej w <xref:System.Windows.Forms.GridTableStylesCollection>. <xref:System.Windows.Forms.DataGridColumnStyle>  
  
 [!code-cpp[Classic DataGrid.TableStyles Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.TableStyles Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.TableStyles Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.TableStyles Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.TableStyles Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.TableStyles Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="T:System.Windows.Forms.DataGridTableStyle" />
        <altmember cref="T:System.Windows.Forms.GridTableStylesCollection" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.DataGrid.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ten element członkowski nie ma znaczenia dla tego formantu.</summary>
        <value>Tekst skojarzony z tym formantem.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" />
      <MemberSignature Language="F#" Value="member this.TextChanged : EventHandler " Usage="member this.TextChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wartość właściwości zostanie <see cref="P:System.Windows.Forms.DataGrid.Text" /> zmieniona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość nie ma znaczenia dla tego formantu, chociaż można zmienić jej wartość i <xref:System.Windows.Forms.DataGrid.TextChanged> obsłużyć zdarzenie, aby wykryć zmianę. <xref:System.Windows.Forms.DataGrid.Text%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnSelect">
      <MemberSignature Language="C#" Value="public void UnSelect (int row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnSelect(int32 row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.UnSelect(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnSelect (row As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnSelect(int row);" />
      <MemberSignature Language="F#" Value="member this.UnSelect : int -&gt; unit" Usage="dataGrid.UnSelect row" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="row">Indeks wiersza do odzaznaczania.</param>
        <summary>Anuluje wybór określonego wiersza.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody z <xref:System.Windows.Forms.DataGrid.IsSelected%2A>metodami, <xref:System.Windows.Forms.DataGrid.Select%2A>i <xref:System.Windows.Forms.DataGrid.ResetSelection%2A> , aby manipulować stanem zaznaczenia określonego wiersza.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.  
  
 [!code-cpp[DataGrid_UnSelect#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_UnSelect/CPP/datagrid_unselect.cpp#1)]
 [!code-csharp[DataGrid_UnSelect#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_UnSelect/CS/datagrid_unselect.cs#1)]
 [!code-vb[DataGrid_UnSelect#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_UnSelect/VB/datagrid_unselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VertScrollBar">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.ScrollBar VertScrollBar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ScrollBar VertScrollBar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.VertScrollBar" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property VertScrollBar As ScrollBar" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Forms::ScrollBar ^ VertScrollBar { System::Windows::Forms::ScrollBar ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VertScrollBar : System.Windows.Forms.ScrollBar" Usage="System.Windows.Forms.DataGrid.VertScrollBar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ScrollBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera pionowy pasek przewijania formantu.</summary>
        <value>Pionowa <see cref="T:System.Windows.Forms.ScrollBar" /> siatki.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.DataGrid.HorizScrollBar" />
      </Docs>
    </Member>
    <Member MemberName="VisibleColumnCount">
      <MemberSignature Language="C#" Value="public int VisibleColumnCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisibleColumnCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.VisibleColumnCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VisibleColumnCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int VisibleColumnCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.VisibleColumnCount : int" Usage="System.Windows.Forms.DataGrid.VisibleColumnCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę widocznych kolumn.</summary>
        <value>Liczba kolumn widocznych w okienku ekranu. Okienko ekranu jest prostokątnym obszarem, za pomocą którego jest widoczna siatka. Rozmiar okienka ekranu zależy od rozmiaru <see cref="T:System.Windows.Forms.DataGrid" /> kontrolki. Jeśli zezwolisz użytkownikom na zmianę rozmiaru kontrolki, wpłynie to również na okienko ekranu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Liczba widocznych kolumn może się zmieniać w zależności od ich szerokości. Na przykład jeśli ustawiona jest domyślna szerokość dla wszystkich kolumn, ale szerokość nowej kolumny jest ustawiana dwa razy jako duża, Liczba widocznych kolumn może zostać zmniejszona o co najmniej jeden.  
  
   
  
## Examples  
 Poniższy przykład kodu zwraca liczbę widocznych kolumn.  
  
 [!code-vb[Classic DataGrid.VisibleColumnCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.VisibleColumnCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGrid.FirstVisibleColumn" />
        <altmember cref="P:System.Windows.Forms.DataGrid.VisibleRowCount" />
      </Docs>
    </Member>
    <Member MemberName="VisibleRowCount">
      <MemberSignature Language="C#" Value="public int VisibleRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisibleRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.VisibleRowCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VisibleRowCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int VisibleRowCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.VisibleRowCount : int" Usage="System.Windows.Forms.DataGrid.VisibleRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę widocznych wierszy.</summary>
        <value>Liczba wierszy widocznych w okienku ekranu. Okienko ekranu jest prostokątnym obszarem, za pomocą którego jest widoczna siatka. Rozmiar okienka ekranu zależy od rozmiaru <see cref="T:System.Windows.Forms.DataGrid" /> kontrolki. Jeśli zezwolisz użytkownikom na zmianę rozmiaru kontrolki, wpłynie to również na okienko ekranu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Liczba widocznych wierszy można zmienić w czasie wykonywania, jeśli użytkownik może zmienić rozmiar <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> kontrolki.  
  
   
  
## Examples  
 Poniższy przykład kodu zwraca liczbę wierszy widocznych w <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> formancie.  
  
 [!code-vb[Classic DataGrid.VisibleRowCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.VisibleRowCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.RowHeadersVisible" />
        <altmember cref="P:System.Windows.Forms.DataGrid.VisibleColumnCount" />
      </Docs>
    </Member>
  </Members>
</Type>
