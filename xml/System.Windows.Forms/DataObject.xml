<Type Name="DataObject" FullName="System.Windows.Forms.DataObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4b56628a1343ca18536643cf4b5f6ab892468ceb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30703802" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataObject : System.Runtime.InteropServices.ComTypes.IDataObject, System.Windows.Forms.IDataObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataObject extends System.Object implements class System.Runtime.InteropServices.ComTypes.IDataObject, class System.Windows.Forms.IDataObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataObject" />
  <TypeSignature Language="VB.NET" Value="Public Class DataObject&#xA;Implements IDataObject, IDataObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataObject : System::Runtime::InteropServices::ComTypes::IDataObject, System::Windows::Forms::IDataObject" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices.ComTypes.IDataObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.IDataObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Implementuje mechanizm transferu danych podstawowych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataObject> implementuje <xref:System.Windows.Forms.IDataObject> interfejsu, której metody udostępniają mechanizm format niezależny do transferu danych.  
  
 A <xref:System.Windows.Forms.DataObject> jest zwykle używana z <xref:System.Windows.Forms.Clipboard> w operacji przeciągania i upuszczania. <xref:System.Windows.Forms.DataObject> Klasa udostępnia wykonania zalecanych <xref:System.Windows.Forms.IDataObject> interfejsu. Zaleca się, że używasz <xref:System.Windows.Forms.DataObject> klasy, a nie implementacja <xref:System.Windows.Forms.IDataObject> samodzielnie.  
  
 Wiele fragmentów danych w różnych formatach mogą być przechowywane w <xref:System.Windows.Forms.DataObject>. Dane są pobierane z <xref:System.Windows.Forms.DataObject> przez jego skojarzony format. Ponieważ aplikacja docelowa nie mogą być znane, mogą zwiększyć prawdopodobieństwo, że dane zostaną w odpowiednim formacie aplikacji przez umieszczenie danych w <xref:System.Windows.Forms.DataObject> w wielu formatach. Zobacz <xref:System.Windows.Forms.DataFormats> wstępnie zdefiniowanych formatów. Można wdrożyć własny format przez utworzenie wystąpienia <xref:System.Windows.Forms.DataFormats.Format> klasy.  
  
 Do przechowywania danych w <xref:System.Windows.Forms.DataObject>, przekazać dane do konstruktora lub wywołania <xref:System.Windows.Forms.DataObject.SetData%2A>. Dane w wielu formatach można dodać do tej samej <xref:System.Windows.Forms.DataObject>. Dane można dodać do pobrania w wywołaniu tylko jego formatu macierzystego <xref:System.Windows.Forms.DataObject.SetData%28System.String%2CSystem.Boolean%2CSystem.Object%29> z `autoConvert` ustawiono parametr `false`.  
  
 Można pobrać danych z <xref:System.Windows.Forms.DataObject> w dowolnym formacie, który jest zgodny z <xref:System.Windows.Forms.DataObject.GetData%2A>. Na przykład tekst może zostać przekonwertowany na ciąg Unicode. Aby pobrać dane w formacie, w którym przechowywane, należy wywołać <xref:System.Windows.Forms.DataObject.GetData%2A> z `autoConvert` ustawiono parametr `false`.  
  
 Aby ustalić, jakie dane są przechowywane w formaty, należy wywołać <xref:System.Windows.Forms.DataObject.GetFormats%2A>. Aby ustalić, czy format jest dostępna, należy wywołać <xref:System.Windows.Forms.DataObject.GetDataPresent%2A> z wybranym formacie.  
  
 W [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], <xref:System.Windows.Forms.DataObject> klasa udostępnia dodatkowe metody, które ułatwiają pracę z danymi wspólnych formatów. Aby dodać dane określonego formatu do <xref:System.Windows.Forms.DataObject>, użyj odpowiedniej `Set` *Format* metody, takich jak <xref:System.Windows.Forms.DataObject.SetText%2A>. Do pobierania danych z określonym formacie <xref:System.Windows.Forms.DataObject>, pierwsze wywołanie odpowiednie `Contains` *Format* — metoda (takich jak <xref:System.Windows.Forms.DataObject.ContainsText%2A>) do określenia czy <xref:System.Windows.Forms.DataObject> zawiera dane w tym formacie wywoływać odpowiednie `Get` *Format* — metoda (takich jak <xref:System.Windows.Forms.DataObject.GetText%2A>) do pobierania danych, jeśli <xref:System.Windows.Forms.DataObject> go zawiera.  
  
> [!NOTE]
>  Uwagi może być konieczne, gdy w formacie Metaplik ze Schowka. Ze względu na ograniczenia w bieżąca implementacja <xref:System.Windows.Forms.DataObject> klasy, metapliki używane przez program .NET Framework mogą nie być rozpoznawane przez aplikacje używające starszego formatu metaplik. W takim przypadku konieczna jest współpraca z interfejsów programowania aplikacji (API) Win32 Schowka. Aby uzyskać więcej informacji, zobacz artykuł 323530, "Metapliki w Schowku są nie widoczne do wszystkich aplikacji," w bazie wiedzy Microsoft Knowledge Base pod http://support.microsoft.com.  
>   
>  Obiekt musi być możliwy do serializacji dla niego do umieszczenia w Schowku. Zobacz <xref:System.Runtime.Serialization> uzyskać więcej informacji o serializacji. Jeśli aplikacja docelowej wymaga format bardzo określone dane, nagłówki dodana do danych w procesie serializacji może uniemożliwić aplikacji rozpoznanie danych. Aby zachować format danych, należy dodać dane jako <xref:System.Byte> tablicy do <xref:System.IO.MemoryStream> i przekaż <xref:System.IO.MemoryStream> do <xref:System.Windows.Forms.DataObject.SetData%2A> metody.  
  
   
  
## Examples  
 Poniższy przykładowy kod dodaje dane w <xref:System.Windows.Forms.DataObject>. Po pierwsze, nowy <xref:System.Windows.Forms.DataObject> jest tworzony i składnik znajduje się w nim. Następnie sprawdza, czy dane w odpowiedni typ znajduje się w <xref:System.Windows.Forms.DataObject>. Wynik jest wyświetlany w polu tekstowym. Ten kod wymaga, aby `textBox1` został utworzony.  
  
 [!code-cpp[Classic DataObject Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject Example/VB/source.vb#1)]  
  
 Kolejnym przykładzie pobiera dane przechowywane w <xref:System.Windows.Forms.DataObject>. Po pierwsze, nowy <xref:System.Windows.Forms.DataObject> jest tworzony z danymi tekstu. Następnie dane są pobierane, określić jego format jako ciąg, a następnie wyświetlane w polu tekstowym. Format danych jest automatycznie konwertowany z tekstu do ciągu. Ten kod wymaga, aby `textBox1` został utworzony.  
  
 [!code-cpp[Classic DataObject Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject Example/CPP/source.cpp#2)]
 [!code-csharp[Classic DataObject Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject Example/CS/source.cs#2)]
 [!code-vb[Classic DataObject Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject Example/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Clipboard" />
    <altmember cref="T:System.Windows.Forms.IDataObject" />
    <altmember cref="T:System.Windows.Forms.DataFormats" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.DataObject" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.DataObject" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.DataObject> i dodaje do niej danych. Przykład następnie pobiera i wyświetla dane. Ten kod wymaga, aby `textBox1` został utworzony.  
  
 [!code-cpp[Classic DataObject.DataObject2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.DataObject2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.DataObject2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.DataObject2 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.DataObject2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.DataObject2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataObject(System::Object ^ data);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">Dane, które mają być przechowywane.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.DataObject" /> i dodaje określony obiekt do niego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz dodać dane w dowolnym formacie do <xref:System.Windows.Forms.DataObject> Jeśli używasz tego konstruktora lub możesz dodać dane jako <xref:System.Windows.Forms.IDataObject> zapewnienie wielu formatów jednocześnie. Jeśli znasz programowania COM, możesz także dodać obiekt danych, który implementuje COM `IDataObject` interfejsu. Aby uzyskać więcej informacji, zobacz `IDataObject` w bibliotece MSDN pod http://msdn.microsoft.com/library.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.DataObject> zawiera ciąg. Dane są pobierane przy użyciu jego formatu danych. Wyniki są wyświetlane w polu tekstowym. Ten kod wymaga, aby `textBox1` został utworzony.  
  
 [!code-cpp[Classic DataObject.DataObject3 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.DataObject3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.DataObject3 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.DataObject3 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.DataObject3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.DataObject3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataObject(System::String ^ format, System::Object ^ data);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Format określonych danych. Zobacz <see cref="T:System.Windows.Forms.DataFormats" /> formatów wstępnie zdefiniowane.</param>
        <param name="data">Dane, które mają być przechowywane.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.DataObject" /> i dodaje określony obiekt w określonym formacie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.DataObject> przy użyciu ciąg, który jest określony jako typ string. Dane są pobierane z <xref:System.Windows.Forms.DataObject> , określając jego format jako tekst. Wyniki są wyświetlane w polu tekstowym. Ten kod wymaga, aby `textBox1` został utworzony.  
  
 [!code-cpp[Classic DataObject.DataObject4 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.DataObject4 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.DataObject4 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.DataObject4 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.DataObject4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.DataObject4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsAudio">
      <MemberSignature Language="C#" Value="public virtual bool ContainsAudio ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsAudio() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsAudio" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsAudio () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsAudio();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wskazuje, czy obiekt danych zawiera dane w <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> format.</summary>
        <returns>
          <see langword="true" /> Jeśli obiekt zawiera dane audio; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda ta pozwala określić, czy obiekt danych zawiera dane audio przed pobraniem go przy użyciu <xref:System.Windows.Forms.DataObject.GetAudioStream%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetAudioStream" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetAudio" />
      </Docs>
    </Member>
    <Member MemberName="ContainsFileDropList">
      <MemberSignature Language="C#" Value="public virtual bool ContainsFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsFileDropList () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsFileDropList();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wskazuje, czy obiekt danych zawiera dane, które są w <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> sformatuj lub mogą być konwertowane do tego formatu.</summary>
        <returns>
          <see langword="true" /> Jeśli obiekt danych zawiera listę listy plików; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lista rozwijana pliku jest kolekcją ciągi zawierające informacje o ścieżce dla plików.  
  
 Metoda ta pozwala określić, czy obiekt danych zawiera lista rozwijana pliku przed pobraniem go przy użyciu <xref:System.Windows.Forms.DataObject.GetFileDropList%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFileDropList" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsImage">
      <MemberSignature Language="C#" Value="public virtual bool ContainsImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsImage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsImage () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsImage();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wskazuje, czy obiekt danych zawiera dane, które są w <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> sformatuj lub mogą być konwertowane do tego formatu.</summary>
        <returns>
          <see langword="true" /> Jeśli obiekt danych zawiera dane obrazu; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda ta pozwala określić, czy obiekt danych zawiera dane obrazu, przed pobraniem go przy użyciu <xref:System.Windows.Forms.DataObject.GetImage%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetImage" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ContainsText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wskazuje, czy obiekt danych zawiera dane tekstowe.</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public virtual bool ContainsText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsText () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wskazuje, czy obiekt danych zawiera dane w <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> format.</summary>
        <returns>
          <see langword="true" /> Jeśli obiekt danych zawiera dane tekstowe; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda ta pozwala określić, czy obiekt danych zawiera dane tekstowe przed pobraniem go przy użyciu <xref:System.Windows.Forms.DataObject.GetText%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </Member>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public virtual bool ContainsText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsText (format As TextDataFormat) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsText(System::Windows::Forms::TextDataFormat format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="format">Jeden z <see cref="T:System.Windows.Forms.TextDataFormat" /> wartości.</param>
        <summary>Wskazuje, czy obiekt danych zawiera dane tekst w formacie wskazanych przez określony <see cref="T:System.Windows.Forms.TextDataFormat" /> wartość.</summary>
        <returns>
          <see langword="true" /> Jeśli obiekt zawiera dane tekst w określonym formacie; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda ta pozwala określić, czy obiekt danych zawiera dane tekstowe przed pobraniem go przy użyciu <xref:System.Windows.Forms.DataObject.GetText%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="format" /> nie jest prawidłową <see cref="T:System.Windows.Forms.TextDataFormat" /> wartość.</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetAudioStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetAudioStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetAudioStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetAudioStream" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAudioStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetAudioStream();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera strumień audio z obiektu danych.</summary>
        <returns>A <see cref="T:System.IO.Stream" /> zawierający dane audio lub <see langword="null" /> Jeśli obiekt danych nie zawiera żadnych danych w <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> format.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Windows.Forms.DataObject.ContainsAudio%2A> metodę, aby określić, czy obiekt danych zawiera dane audio przed ich pobraniem przy użyciu tej metody.  
  
 Użyj <xref:System.Windows.Forms.DataObject.SetAudio%2A> metoda umożliwiająca dodanie danych do obiektu danych.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsAudio" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetAudio" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetData">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca dane skojarzone z formatu określone dane.</summary>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public virtual object GetData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetData (format As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetData(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetData(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">Format danych do pobrania. Zobacz <see cref="T:System.Windows.Forms.DataFormats" /> formatów wstępnie zdefiniowane.</param>
        <summary>Zwraca dane skojarzone z formatu określone dane.</summary>
        <returns>Dane skojarzone z określonym formacie lub <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ta metoda nie może znaleźć danych w określonym formacie, próbuje przekonwertować na format danych. Jeśli dane nie można przekonwertować na określony format lub dane są przechowywane z automatycznej konwersji ustawioną `false`, ta metoda zwraca `null`.  
  
 Aby ustalić, czy jest skojarzony z danych, czy można przekonwertować na format, należy wywołać <xref:System.Windows.Forms.DataObject.GetDataPresent%2A> przed wywołaniem <xref:System.Windows.Forms.DataObject.GetData%2A>. Wywołanie <xref:System.Windows.Forms.DataObject.GetFormats%2A> listę prawidłowe formaty danych przechowywanych w tym <xref:System.Windows.Forms.DataObject>.  
  
> [!NOTE]
>  Można przekonwertować danych do innego formatu był przechowywany określenie, czy konwersja jest dozwolone, a żądany format jest zgodny z formatem przechowywane. Na przykład dane przechowywane jako Unicode można przekonwertować na tekst.  
>   
>  Gdy `format` jest <xref:System.Windows.Forms.DataFormats.Html>, ta metoda zwraca ciąg kodowany w formacie UTF-8 w aplikacjach przeznaczonych dla platformy .NET 4.5 lub wyższej oraz ANSI ciąg kodowany w formacie w aplikacjach .NET 4.0 lub niższej przeznaczonych.  
  
   
  
## Examples  
 Poniższy przykładowy kod pobiera dane przechowywane w <xref:System.Windows.Forms.DataObject>. Po pierwsze, nowy <xref:System.Windows.Forms.DataObject> jest tworzony z danymi tekstu. Następnie dane są pobierane, określić jego format jako ciąg, a następnie wyświetlane w polu tekstowym.  
  
 Ten kod wymaga, aby `textBox1` został utworzony.  
  
 [!code-cpp[classic dataobject example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject Example/CPP/source.cpp#1)]
 [!code-csharp[classic dataobject example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject Example/CS/source.cs#1)]
 [!code-vb[classic dataobject example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public virtual object GetData (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetData(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetData (format As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetData(Type ^ format);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetData(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format">A <see cref="T:System.Type" /> reprezentujący format danych do pobrania.</param>
        <summary>Zwraca dane skojarzone z formatem typu określonej klasy.</summary>
        <returns>Dane skojarzone z określonym formacie lub <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ta metoda nie może znaleźć danych w określonym formacie, próbuje przekonwertować na format danych. Jeśli dane nie można przekonwertować na określony format lub dane są przechowywane z automatycznej konwersji ustawioną `false`, ta metoda zwraca `null`.  
  
 Aby ustalić, czy jest skojarzony z danych, czy można przekonwertować na format, należy wywołać <xref:System.Windows.Forms.DataObject.GetDataPresent%2A> przed wywołaniem <xref:System.Windows.Forms.DataObject.GetData%2A>. Wywołanie <xref:System.Windows.Forms.DataObject.GetFormats%2A> listę prawidłowe formaty danych przechowywanych w tym <xref:System.Windows.Forms.DataObject>.  
  
> [!NOTE]
>  Można przekonwertować danych do innego formatu był przechowywany określenie, czy konwersja jest dozwolone, a żądany format jest zgodny z formatem przechowywane. Na przykład dane przechowywane jako Unicode można przekonwertować na tekst.  
  
   
  
## Examples  
 Poniższy przykładowy kod pobiera dane przechowywane w <xref:System.Windows.Forms.DataObject>. Po pierwsze, nowy <xref:System.Windows.Forms.DataObject> jest tworzony za pomocą składnika. Następnie dane są pobierane, określając jego typu. Typ danych pobrane jest wyświetlana w polu tekstowym.  
  
 Ten kod wymaga, aby `textBox1` został utworzony.  
  
 [!code-cpp[Classic DataObject.GetData2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetData2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetData2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetData2 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetData2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetData2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public virtual object GetData (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetData (format As String, autoConvert As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetData(System::String ^ format, bool autoConvert);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">Format danych do pobrania. Zobacz <see cref="T:System.Windows.Forms.DataFormats" /> formatów wstępnie zdefiniowane.</param>
        <param name="autoConvert">
          <see langword="true" /> do konwersji danych do określonego formatu; w przeciwnym razie <see langword="false" />.</param>
        <summary>Zwraca dane skojarzone z formatem określone dane, za pomocą parametru automatyczne konwersji do ustalenia, czy do przekonwertowania na format danych.</summary>
        <returns>Dane skojarzone z określonym formacie lub <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `autoConvert` parametr jest `true` i tej metody nie można odnaleźć danych w określonym formacie, próbuje przekonwertować na format danych. Jeśli dane nie można przekonwertować na określony format lub dane są przechowywane z automatycznej konwersji ustawioną `false`, ta metoda zwraca `null`.  
  
 Jeśli `autoConvert` parametr jest `false`, ta metoda zwraca dane w określonym formacie lub `null` w przypadku nieodnalezienia żadnych danych w tym formacie.  
  
 Aby ustalić, czy jest skojarzony z danych, czy można przekonwertować na format, należy wywołać <xref:System.Windows.Forms.DataObject.GetDataPresent%2A> przed wywołaniem <xref:System.Windows.Forms.DataObject.GetData%2A>. Wywołanie <xref:System.Windows.Forms.DataObject.GetFormats%2A> listę prawidłowe formaty danych przechowywanych w tym <xref:System.Windows.Forms.DataObject>.  
  
> [!NOTE]
>  Można przekonwertować danych do innego formatu był przechowywany określenie, czy konwersja jest dozwolone, a żądany format jest zgodny z formatem przechowywane. Na przykład dane przechowywane jako Unicode można przekonwertować na tekst.  
>   
>  Gdy `format` jest <xref:System.Windows.Forms.DataFormats.Html>, ta metoda zwraca ciąg kodowany w formacie UTF-8 w aplikacjach przeznaczonych dla platformy .NET 4.5 lub wyższej oraz ANSI ciąg kodowany w formacie w aplikacjach .NET 4.0 lub niższej przeznaczonych.  
  
   
  
## Examples  
 Poniższy przykładowy kod pobiera dane przechowywane w <xref:System.Windows.Forms.DataObject>za pomocą `autoConvert` parametr, aby określić, czy do przekonwertowania formatu danych.  
  
 Po pierwsze, nowy <xref:System.Windows.Forms.DataObject> jest tworzony z danymi tekstu. Przykład próbuje pobrać dane, określanie formatem jako ciąg i Konwersja formatu, a następnie `autoConvert` parametr jest `false`. Ta operacja nie powiedzie się, ponieważ nie ma żadnych danych ciąg w <xref:System.Windows.Forms.DataObject>.  
  
 Następnie przykładzie próbuje odzyskać dane, z `autoConvert` ustawiono parametr `true`. Ta operacja zakończy się powodzeniem, a wyniki są wyświetlane w <xref:System.Windows.Forms.MessageBox>.  
  
 Ten kod wymaga, aby `textBox1` został utworzony.  
  
 [!code-cpp[Classic DataObject.GetData Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetData Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetData Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetData Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetData Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetData Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDataPresent">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Określa, czy dane są przechowywane w tym <see cref="T:System.Windows.Forms.DataObject" /> jest skojarzony z określonym formacie.</summary>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public virtual bool GetDataPresent (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetDataPresent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataPresent (format As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetDataPresent(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">Format do wyszukania. Zobacz <see cref="T:System.Windows.Forms.DataFormats" /> formatów wstępnie zdefiniowane.</param>
        <summary>Określa, czy dane są przechowywane w tym <see cref="T:System.Windows.Forms.DataObject" /> jest skojarzony, lub można przekonwertować na określony format.</summary>
        <returns>
          <see langword="true" /> Jeśli dane są przechowywane w tym <see cref="T:System.Windows.Forms.DataObject" /> jest skojarzony, lub można przekonwertować na określony format; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj tę metodę, aby określić, czy format istnieje przed wywołaniem <xref:System.Windows.Forms.DataObject.GetData%2A>. Wywołanie <xref:System.Windows.Forms.DataObject.GetFormats%2A> formatów, które są dostępne w tym <xref:System.Windows.Forms.DataObject>.  
  
> [!NOTE]
>  Można przekonwertować danych do innego formatu był przechowywany określenie, czy konwersja jest dozwolone, a żądany format jest zgodny z formatem przechowywane. Na przykład dane przechowywane jako Unicode można przekonwertować na tekst.  
  
> [!NOTE]
>  Jeśli nie można pobrać danych, nie zostanie wygenerowany wyjątek. Zamiast tego `false` zostaną zwrócone.  
  
   
  
## Examples  
 Poniższy przykład kodu Określa, czy dane przechowywane w tym <xref:System.Windows.Forms.DataObject> jest skojarzony, lub można przekonwertować na określony format. Nowy <xref:System.Windows.Forms.DataObject> jest inicjowany z ciągu i jego skojarzony format określony jako tekst.  
  
 Następnie drukuje przykłady, czy dane tekstowe istnieje w <xref:System.Windows.Forms.DataObject>. Ten kod wymaga, aby `textBox1` został utworzony.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public virtual bool GetDataPresent (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataPresent (format As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetDataPresent(Type ^ format);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format">A <see cref="T:System.Type" /> reprezentujący format do wyszukania.</param>
        <summary>Określa, czy dane są przechowywane w tym <see cref="T:System.Windows.Forms.DataObject" /> jest skojarzony, lub można przekonwertować na określony format.</summary>
        <returns>
          <see langword="true" /> Jeśli dane są przechowywane w tym <see cref="T:System.Windows.Forms.DataObject" /> jest skojarzony, lub można przekonwertować na określony format; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj tę metodę, aby określić, czy format istnieje przed wywołaniem <xref:System.Windows.Forms.DataObject.GetData%2A>. Wywołanie <xref:System.Windows.Forms.DataObject.GetFormats%2A> formatów, które są dostępne w tym <xref:System.Windows.Forms.DataObject>.  
  
> [!NOTE]
>  Można przekonwertować danych do innego formatu był przechowywany określenie, czy konwersja jest dozwolone, a żądany format jest zgodny z formatem przechowywane. Na przykład dane przechowywane jako Unicode można przekonwertować na tekst.  
  
> [!NOTE]
>  Jeśli nie można pobrać danych, nie zostanie wygenerowany wyjątek. Zamiast tego `false` zostaną zwrócone.  
  
   
  
## Examples  
 Poniższy przykład kodu Określa, czy dane typu innego niż podany istnieje w <xref:System.Windows.Forms.DataObject>, lub czy można przekonwertować na określony typ danych. Wynik jest wyświetlany w polu tekstowym. Kod wymaga, aby `textBox1` został utworzony.  
  
 [!code-cpp[Classic DataObject.GetDataPresent Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetDataPresent Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetDataPresent Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetDataPresent Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetDataPresent Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetDataPresent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public virtual bool GetDataPresent (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetDataPresent(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataPresent (format As String, autoConvert As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetDataPresent(System::String ^ format, bool autoConvert);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">Format do wyszukania. Zobacz <see cref="T:System.Windows.Forms.DataFormats" /> formatów wstępnie zdefiniowane.</param>
        <param name="autoConvert">
          <see langword="true" /> Aby określić, czy dane są przechowywane w tym <see cref="T:System.Windows.Forms.DataObject" /> można przekonwertować na określony format; <see langword="false" /> do sprawdzenia, czy w danych jest w określonym formacie.</param>
        <summary>Określa, czy to <see cref="T:System.Windows.Forms.DataObject" /> zawiera dane w określonym formacie i, opcjonalnie zawiera dane, które można przekonwertować na określony format.</summary>
        <returns>
          <see langword="true" /> Jeśli dane w lub można przekonwertować na określony format; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj tę metodę, aby określić, czy format istnieje przed wywołaniem <xref:System.Windows.Forms.DataObject.GetData%2A>. Wywołanie <xref:System.Windows.Forms.DataObject.GetFormats%2A> formatów, które są dostępne w tym <xref:System.Windows.Forms.DataObject>.  
  
 Ta metoda zwraca `true` po:  
  
-   `autoConvert` Parametr jest `true` , a dane są w formacie, który można przekonwertować na odpowiedni format.  
  
-   `autoConvert` Parametr jest `false` i danych jest w odpowiednim formacie.  
  
 Ta metoda zwraca `false` po:  
  
-   `autoConvert` Parametr jest `true` tej metody nie można odnaleźć danych w określonym formacie i go nie można przekonwertować danych na określony format i dane przechowywane z automatycznej konwersji ustawioną `false`.  
  
-   `autoConvert` Parametr jest `false` i danych nie istnieje w tym <xref:System.Windows.Forms.DataObject> w określonym formacie.  
  
> [!NOTE]
>  Jeśli jest przechowywane określająca, że konwersja jest dozwolone i jeśli żądany format jest zgodny z formatem przechowywanej można przekonwertować danych do innego formatu. Na przykład dane przechowywane jako Unicode można przekonwertować na tekst.  
  
> [!NOTE]
>  Jeśli nie można pobrać danych, nie zostanie wygenerowany wyjątek. Zamiast tego `false` zostaną zwrócone.  
  
   
  
## Examples  
 Poniższy przykład kodu Określa, czy dane przechowywane w <xref:System.Windows.Forms.DataObject> jest skojarzony z określonym formacie. Po pierwsze, nowy <xref:System.Windows.Forms.DataObject> jest inicjowana z ciągiem, określając jego format jako tekst.  
  
 Następnie przy użyciu <xref:System.Windows.Forms.DataObject> zostanie zapytany o dane skojarzone z formatu tekstowego, określając `autoConvert` parametr jako `false`. Wynik tego zapytania jest drukowany w polu tekstowym.  
  
 Następnie przy użyciu <xref:System.Windows.Forms.DataObject> zostanie zapytany o dane skojarzone z formatu ciągu, określając `autoConvert` parametr jako `true`. Wyniki są podane w polu tekstowym. Ten kod wymaga, aby `textBox1` został utworzony.  
  
 [!code-cpp[Classic DataObject.GetDataPresent1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetDataPresent1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetDataPresent1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetDataPresent1 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetDataPresent1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetDataPresent1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetFileDropList">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.StringCollection GetFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.StringCollection GetFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFileDropList () As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Specialized::StringCollection ^ GetFileDropList();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera kolekcję nazw plików z obiektu danych.</summary>
        <returns>A <see cref="T:System.Collections.Specialized.StringCollection" /> zawierający nazwy plików lub <see langword="null" /> Jeśli obiekt danych nie zawiera żadnych danych, który znajduje się w <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> sformatuj lub mogą być konwertowane do tego formatu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lista rozwijana pliku jest kolekcją ciągi zawierające informacje o ścieżce dla plików.  
  
 Lista rozwijana plik jest przechowywany w obiekcie danych jako <xref:System.String> tablicy. Ta metoda konwertuje tej tablicy do <xref:System.Collections.Specialized.StringCollection> i zwraca kolekcję.  
  
 Użyj <xref:System.Windows.Forms.DataObject.ContainsFileDropList%2A> metodę, aby określić, czy obiekt danych zawiera lista rozwijana pliku przed ich pobraniem przy użyciu tej metody.  
  
 Użyj <xref:System.Windows.Forms.DataObject.SetFileDropList%2A> metody w celu dodania lista rozwijana pliku do obiektu danych.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.StringCollection" />
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsFileDropList" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFormats">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca listę wszystkich formatów danych przechowywanych w tym <see cref="T:System.Windows.Forms.DataObject" /> jest skojarzona z lub może zostać przekonwertowany na.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public virtual string[] GetFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetFormats" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFormats () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetFormats();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetFormats</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca listę wszystkich formatów danych przechowywanych w tym <see cref="T:System.Windows.Forms.DataObject" /> jest skojarzona z lub może zostać przekonwertowany na.</summary>
        <returns>Tablica typu <see cref="T:System.String" />, zawierający listę wszystkich formatów, które są obsługiwane przez dane przechowywane w tym obiekcie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie tej metody można pobrać danych obsługiwane formaty przed wywołaniem <xref:System.Windows.Forms.DataObject.GetData%2A>. Zobacz <xref:System.Windows.Forms.DataFormats> wstępnie zdefiniowanych formatów.  
  
> [!NOTE]
>  Jeśli jest przechowywane określająca, że konwersja jest dozwolone i jeśli żądany format jest zgodny z formatem przechowywanej można przekonwertować danych do innego formatu. Na przykład dane przechowywane jako Unicode można przekonwertować na tekst.  
  
   
  
## Examples  
 Poniższy kod przykładowych zapytań <xref:System.Windows.Forms.DataObject> formatów skojarzone ze swoimi danymi i formatów, które można przekonwertować danych. Wynikowa lista jest wyświetlana w polu tekstowym. Ten kod wymaga, aby `textBox1` został utworzony.  
  
 [!code-cpp[Classic DataObject.GetFormats1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetFormats1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetFormats1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetFormats1 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetFormats1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetFormats1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public virtual string[] GetFormats (bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats(bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFormats (autoConvert As Boolean) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetFormats(bool autoConvert);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoConvert">
          <see langword="true" /> Aby pobrać wszystkie formaty danych przechowywanych w tym <see cref="T:System.Windows.Forms.DataObject" /> jest skojarzony z lub może zostać przekonwertowany na; <see langword="false" /> można pobrać tylko formaty danych w trybie macierzystym.</param>
        <summary>Zwraca listę wszystkich formatów danych przechowywanych w tym <see cref="T:System.Windows.Forms.DataObject" /> jest skojarzony z lub może zostać przekonwertowany na, za pomocą parametru automatycznej konwersji do ustalenia, czy można pobrać formatów danych tylko natywnych lub wszystkich formatów, które można przekonwertować danych.</summary>
        <returns>Tablica typu <see cref="T:System.String" />, zawierający listę wszystkich formatów, które są obsługiwane przez dane przechowywane w tym obiekcie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie tej metody można pobrać danych obsługiwane formaty przed wywołaniem <xref:System.Windows.Forms.DataObject.GetData%2A>. Zobacz <xref:System.Windows.Forms.DataFormats> wstępnie zdefiniowanych formatów.  
  
> [!NOTE]
>  Jeśli jest przechowywane określająca, że konwersja jest dozwolone i jeśli żądany format jest zgodny z formatem przechowywanej można przekonwertować danych do innego formatu. Na przykład dane przechowywane jako Unicode można przekonwertować na tekst.  
  
   
  
## Examples  
 Poniższy kod przykładowych zapytań <xref:System.Windows.Forms.DataObject> formatów skojarzony z jej danych. Określa pierwszą kwerendę `autoConvert` parametr jako `false`, tylko formatu macierzystego danych jest zwracany. Określa drugiego zapytania `autoConvert` parametr jako `true`, więc formatów, które można przekonwertować danych zawiera listę formatów.  
  
 Ten kod wymaga, aby `textBox1` został utworzony.  
  
 [!code-cpp[Classic DataObject.GetFormats Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetFormats Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetFormats Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetFormats Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetFormats Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetFormats Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Image GetImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Drawing.Image GetImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetImage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetImage () As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Drawing::Image ^ GetImage();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera obraz z obiektu danych.</summary>
        <returns>
          <see cref="T:System.Drawing.Image" /> Reprezentujący dane obrazu w obiekcie danych lub <see langword="null" /> Jeśli obiekt danych nie zawiera żadnych danych, który znajduje się w <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> sformatuj lub mogą być konwertowane do tego formatu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Windows.Forms.DataObject.ContainsImage%2A> metodę, aby określić, czy obiekt danych zawiera dane obrazu, przed pobraniem go przy użyciu tej metody.  
  
 Użyj <xref:System.Windows.Forms.DataObject.SetImage%2A> metody w celu dodania obrazu danych do obiektu danych.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Image" />
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsImage" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera dane z obiektu danych.</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public virtual string GetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetText () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera dane z obiektu danych w <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> format.</summary>
        <returns>Dane tekstu obiektu danych lub <see cref="F:System.String.Empty" /> Jeśli obiekt danych nie zawiera danych w <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> format.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Windows.Forms.DataObject.ContainsText%2A> metodę, aby określić, czy obiekt danych zawiera dane tekstowe przed ich pobraniem przy użyciu tej metody.  
  
 Użyj <xref:System.Windows.Forms.DataObject.SetText%2A> metodę, aby dodać dane tekstowe do obiektu danych.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public virtual string GetText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetText (format As TextDataFormat) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetText(System::Windows::Forms::TextDataFormat format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="format">Jeden z <see cref="T:System.Windows.Forms.TextDataFormat" /> wartości.</param>
        <summary>Pobiera dane tekstowe z obiektu danych w formacie wskazanych przez określony <see cref="T:System.Windows.Forms.TextDataFormat" /> wartość.</summary>
        <returns>Dane tekstu obiektu danych lub <see cref="F:System.String.Empty" /> Jeśli obiekt danych nie zawiera danych w określonym formacie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Windows.Forms.DataObject.ContainsText%2A> metodę, aby określić, czy obiekt danych zawiera dane tekstowe przed ich pobraniem przy użyciu tej metody.  
  
 Użyj <xref:System.Windows.Forms.DataObject.SetText%2A> metodę, aby dodać dane tekstowe do obiektu danych.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="format" /> nie jest prawidłową <see cref="T:System.Windows.Forms.TextDataFormat" /> wartość.</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAudio">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje dane do obiektu danych w <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> format.</summary>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetAudioStream" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public virtual void SetAudio (byte[] audioBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAudio(unsigned int8[] audioBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetAudio(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetAudio (audioBytes As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAudio(cli::array &lt;System::Byte&gt; ^ audioBytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioBytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="audioBytes">A <see cref="T:System.Byte" /> tablica zawierająca dane audio.</param>
        <summary>Dodaje <see cref="T:System.Byte" /> tablicy do danych obiektu w <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> format po konwersji na <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby pobrać danych z obiektu danych, należy najpierw użyć <xref:System.Windows.Forms.DataObject.ContainsAudio%2A> metodę, aby określić, czy obiekt danych zawiera dane audio przed pobraniem go przy użyciu <xref:System.Windows.Forms.DataObject.GetAudioStream%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="audioBytes" /> jest <see langword="null" />.</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetAudioStream" />
      </Docs>
    </Member>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public virtual void SetAudio (System.IO.Stream audioStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAudio(class System.IO.Stream audioStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetAudio(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetAudio (audioStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAudio(System::IO::Stream ^ audioStream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="audioStream">A <see cref="T:System.IO.Stream" /> zawierający dane audio.</param>
        <summary>Dodaje <see cref="T:System.IO.Stream" /> do obiektu danych w <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> format.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby pobrać danych z obiektu danych, należy najpierw użyć <xref:System.Windows.Forms.DataObject.ContainsAudio%2A> metodę, aby określić, czy obiekt danych zawiera dane audio przed pobraniem go przy użyciu <xref:System.Windows.Forms.DataObject.GetAudioStream%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="audioStream" /> jest <see langword="null" />.</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetAudioStream" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetData">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje obiekt do <see cref="T:System.Windows.Forms.DataObject" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public virtual void SetData (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetData (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.SetData(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">Dane, które mają być przechowywane.</param>
        <summary>Dodaje określony obiekt do <see cref="T:System.Windows.Forms.DataObject" /> przy użyciu typu obiektu jako formatu danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie znasz format w aplikacji docelowej, można przechowywać dane w wielu formatach za pomocą tej metody. Podczas pobierania danych przechowywane przy użyciu tej metody można przekonwertować na format zgodny.  
  
 <xref:System.Windows.Forms.DataObject.SetData%28System.Object%29> Przeciążenia magazynów `data` wartość w formacie, który określa, wywołując <xref:System.Object.GetType%2A?displayProperty=nameWithType> metody. Jeśli `data` implementuje <xref:System.Runtime.Serialization.ISerializable> interfejsu, tego przeciążenia przechowuje także wartość <xref:System.Windows.DataFormats.Serializable> format.  
  
   
  
## Examples  
 Poniższy przykład kodu przechowuje dane w <xref:System.Windows.Forms.DataObject>. Po pierwsze, nowy <xref:System.Windows.Forms.DataObject> jest tworzony i składnik znajduje się w nim. Następnie dane są pobierane przez określenie klasy. Wynik jest wyświetlany w polu tekstowym.  
  
 Ten kod wymaga, aby `textBox1` został utworzony.  
  
 [!code-cpp[Classic DataObject.SetData3 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.SetData3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.SetData3 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.SetData3 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.SetData3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.SetData3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="N:System.Runtime.Serialization" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public virtual void SetData (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetData (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(System::String ^ format, System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Format skojarzonego z danymi. Zobacz <see cref="T:System.Windows.Forms.DataFormats" /> formatów wstępnie zdefiniowane.</param>
        <param name="data">Dane, które mają być przechowywane.</param>
        <summary>Dodaje określony obiekt do <see cref="T:System.Windows.Forms.DataObject" /> w określonym formacie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie znasz format w aplikacji docelowej, można przechowywać dane w wielu formatach za pomocą tej metody.  
  
 Podczas pobierania danych przechowywane przy użyciu tej metody można przekonwertować na format zgodny.  
  
   
  
## Examples  
 Poniższy przykład kodu przechowuje dane w <xref:System.Windows.Forms.DataObject>, określając jego format jako Unicode.  
  
 Następnie dane są pobierane przez określenie formatu tekstowego, ponieważ wartość domyślna to do przekonwertowania danych, gdy ostateczny format jest zgodny. Wynik jest wyświetlany w polu tekstowym.  
  
 Ten kod wymaga, aby `textBox1` został utworzony.  
  
 [!code-cpp[Classic DataObject.SetData1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.SetData1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.SetData1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.SetData1 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.SetData1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.SetData1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public virtual void SetData (Type format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(class System.Type format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetData(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetData (format As Type, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(Type ^ format, System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">A <see cref="T:System.Type" /> reprezentujący format skojarzonego z danymi.</param>
        <param name="data">Dane, które mają być przechowywane.</param>
        <summary>Dodaje określony obiekt do <see cref="T:System.Windows.Forms.DataObject" /> przy użyciu określonego typu jako formatu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie znasz format w aplikacji docelowej, można przechowywać dane w wielu formatach za pomocą tej metody.  
  
 Podczas pobierania danych przechowywane przy użyciu tej metody można przekonwertować na format zgodny.  
  
   
  
## Examples  
 Poniższy przykład kodu przechowuje dane w <xref:System.Windows.Forms.DataObject> przy użyciu <xref:System.Type> jako formatu danych. Następnie pobierania danych przez wywołanie metody <xref:System.Windows.Forms.DataObject.GetData%2A> przy użyciu <xref:System.Type> określić format danych. Wynik jest wyświetlany w polu tekstowym.  
  
 Ten kod wymaga, aby `textBox1` został utworzony.  
  
 [!code-cpp[Classic DataObject.SetData2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.SetData2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.SetData2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.SetData2 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.SetData2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.SetData2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public virtual void SetData (string format, bool autoConvert, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, bool autoConvert, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetData (format As String, autoConvert As Boolean, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(System::String ^ format, bool autoConvert, System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Format skojarzonego z danymi. Zobacz <see cref="T:System.Windows.Forms.DataFormats" /> formatów wstępnie zdefiniowane.</param>
        <param name="autoConvert">
          <see langword="true" /> Aby umożliwić danych do innego formatu; w przeciwnym razie <see langword="false" />.</param>
        <param name="data">Dane, które mają być przechowywane.</param>
        <summary>Dodaje określony obiekt do <see cref="T:System.Windows.Forms.DataObject" /> w określonym formacie i wskazujący, czy dane mogą być konwertowane do innego formatu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie znasz format w aplikacji docelowej, można przechowywać dane w wielu formatach za pomocą tej metody.  
  
   
  
## Examples  
 Poniższy przykład kodu przechowuje dane w <xref:System.Windows.Forms.DataObject> i określa, że dane można pobrać tylko w formacie native.  
  
 Po pierwsze, nowy <xref:System.Windows.Forms.DataObject> jest tworzony. Dane w formacie Unicode są przechowywane w <xref:System.Windows.Forms.DataObject>, z `autoConvert` ustawioną `false`.  
  
 Następnie <xref:System.Windows.Forms.DataObject> zostanie zapytany o listę dostępnych formatów danych. Zwracany jest tylko format Unicode, mimo że danych Unicode można przekonwertować na tekst i innych formatach.  
  
 Ten kod wymaga, aby `textBox1` został utworzony.  
  
 [!code-cpp[Classic DataObject.SetData Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.SetData Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.SetData Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.SetData Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.SetData Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.SetData Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
      </Docs>
    </Member>
    <Member MemberName="SetFileDropList">
      <MemberSignature Language="C#" Value="public virtual void SetFileDropList (System.Collections.Specialized.StringCollection filePaths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFileDropList(class System.Collections.Specialized.StringCollection filePaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetFileDropList (filePaths As StringCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetFileDropList(System::Collections::Specialized::StringCollection ^ filePaths);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePaths" Type="System.Collections.Specialized.StringCollection" />
      </Parameters>
      <Docs>
        <param name="filePaths">A <see cref="T:System.Collections.Specialized.StringCollection" /> zawierający nazwy plików.</param>
        <summary>Dodaje kolekcję nazwy pliku do obiektu danych w <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> format.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lista rozwijana pliku jest kolekcją ciągi zawierające informacje o ścieżce dla plików.  
  
 Lista rozwijana plik jest przechowywany w obiekcie danych jako <xref:System.String> tablicy. Ta metoda konwertuje `filePaths` do <xref:System.String> tablicy przed dodaniem go do obiektu danych.  
  
 Aby pobrać lista rozwijana pliku z obiektu danych, należy najpierw użyć <xref:System.Windows.Forms.DataObject.ContainsFileDropList%2A> metodę, aby określić, czy obiekt danych zawiera dane w tym formacie przed pobraniem go przy użyciu <xref:System.Windows.Forms.DataObject.GetFileDropList%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filePaths" /> jest <see langword="null" />.</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsFileDropList" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFileDropList" />
      </Docs>
    </Member>
    <Member MemberName="SetImage">
      <MemberSignature Language="C#" Value="public virtual void SetImage (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetImage(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetImage(System.Drawing.Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetImage(System::Drawing::Image ^ image);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="image">
          <see cref="T:System.Drawing.Image" /> Można dodać do obiektu danych.</param>
        <summary>Dodaje <see cref="T:System.Drawing.Image" /> do obiektu danych w <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> format.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby pobrać dane z obiektu danych, należy najpierw użyć <xref:System.Windows.Forms.DataObject.ContainsImage%2A> metodę, aby określić, czy obiekt danych zawiera dane obrazu, przed pobraniem go przy użyciu <xref:System.Windows.Forms.DataObject.GetImage%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="image" /> jest <see langword="null" />.</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsImage" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetImage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje dane tekstowe do obiektu danych.</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public virtual void SetText (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetText(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetText (textData As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetText(System::String ^ textData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textData">Tekst, aby dodać do obiektu danych.</param>
        <summary>Dodaje dane tekstowe do obiektu danych w <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> format.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby pobrać dane z obiektu danych, należy najpierw użyć <xref:System.Windows.Forms.DataObject.ContainsText%2A> metodę, aby określić, czy obiekt danych zawiera dane obrazu, przed pobraniem go przy użyciu <xref:System.Windows.Forms.DataObject.GetText%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="textData" /> jest <see langword="null" /> lub <see cref="F:System.String.Empty" />.</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
      </Docs>
    </Member>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public virtual void SetText (string textData, System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetText(string textData, valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetText(System.String,System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetText (textData As String, format As TextDataFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetText(System::String ^ textData, System::Windows::Forms::TextDataFormat format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="textData">Tekst, aby dodać do obiektu danych.</param>
        <param name="format">Jeden z <see cref="T:System.Windows.Forms.TextDataFormat" /> wartości.</param>
        <summary>Dodaje dane tekstowe do obiektu danych w formacie wskazanych przez określony <see cref="T:System.Windows.Forms.TextDataFormat" /> wartość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby pobrać dane z obiektu danych, należy najpierw użyć <xref:System.Windows.Forms.DataObject.ContainsText%2A> metodę, aby określić, czy obiekt danych zawiera dane obrazu, przed pobraniem go przy użyciu <xref:System.Windows.Forms.DataObject.GetText%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="textData" /> jest <see langword="null" /> lub <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="format" /> nie jest prawidłową <see cref="T:System.Windows.Forms.TextDataFormat" /> wartość.</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise">
      <MemberSignature Language="C#" Value="int IDataObject.DAdvise (ref System.Runtime.InteropServices.ComTypes.FORMATETC pFormatetc, System.Runtime.InteropServices.ComTypes.ADVF advf, System.Runtime.InteropServices.ComTypes.IAdviseSink pAdvSink, out int pdwConnection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pFormatetc, valuetype System.Runtime.InteropServices.ComTypes.ADVF advf, class System.Runtime.InteropServices.ComTypes.IAdviseSink pAdvSink, [out] int32&amp; pdwConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System::Runtime::InteropServices::ComTypes::FORMATETC % pFormatetc, System::Runtime::InteropServices::ComTypes::ADVF advf, System::Runtime::InteropServices::ComTypes::IAdviseSink ^ pAdvSink, [Runtime::InteropServices::Out] int % pdwConnection) = System::Runtime::InteropServices::ComTypes::IDataObject::DAdvise;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pFormatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
        <Parameter Name="advf" Type="System.Runtime.InteropServices.ComTypes.ADVF" />
        <Parameter Name="pAdvSink" Type="System.Runtime.InteropServices.ComTypes.IAdviseSink" />
        <Parameter Name="pdwConnection" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pFormatetc">A <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> struktury przekazywane przez odwołanie, definiujący format, urządzenie docelowe, aspekt i nośnika, który będzie używany dla przyszłych powiadomień.</param>
        <param name="advf">Jeden z <see cref="T:System.Runtime.InteropServices.ComTypes.ADVF" /> wartości, które określa grupę flagi sterujące advisory połączenia.</param>
        <param name="pAdvSink">Wskaźnik do <see cref="T:System.Runtime.InteropServices.ComTypes.IAdviseSink" /> interfejsu advisory zbiornika, który będzie otrzymywał powiadomienia o zmianie.</param>
        <param name="pdwConnection">Gdy metoda zwróci wartość, zawiera wskaźnik do typu DWORD token, który identyfikuje tego połączenia. Użyj tego tokenu później usunąć advisory połączenia przez przekazanie jej <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(System.Int32)" />. Jeśli ta wartość wynosi zero, połączenie nie zostało nawiązane. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Tworzy połączenie między obiektem danych a advisory ujścia. Ta metoda jest wywoływana przez obiekt, który obsługuje advisory zbiornika i umożliwia advisory zbiornika otrzymywać powiadomienia o zmianach w danych obiektu.</summary>
        <returns>Ta metoda obsługuje standardowe wartości zwracanych E_INVALIDARG, E_UNEXPECTED i E_OUTOFMEMORY, a także następujące:  
  
 <list type="table"><listheader><term> Wartość  
  
 </term><description> Opis elementu  
  
 </description></listheader><item><term> S_OK  
  
 </term><description> Zespół Doradczy połączenie zostało utworzone.  
  
 </description></item><item><term> E_NOTIMPL  
  
 </term><description> Ta metoda nie jest zaimplementowana na obiekt danych.  
  
 </description></item><item><term> DV_E_LINDEX  
  
 </term><description> Jest nieprawidłową wartością dla <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; aktualnie obsługiwana jest tylko wartość -1.  
  
 </description></item><item><term> DV_E_FORMATETC  
  
 </term><description> Jest nieprawidłową wartością dla <paramref name="pFormatetc" /> parametru.  
  
 </description></item><item><term> OLE_E_ADVISENOTSUPPORTED  
  
 </term><description> Obiekt danych nie obsługuje powiadomienie o zmianie.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Forms.DataObject> jest rzutowane na <xref:System.Runtime.InteropServices.ComTypes.IDataObject> interfejsu.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Wywoływanie niezarządzanego kodu. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise">
      <MemberSignature Language="C#" Value="void IDataObject.DUnadvise (int dwConnection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(int32 dwConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#DUnadvise(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub DUnadvise (dwConnection As Integer) Implements IDataObject.DUnadvise" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(int dwConnection) = System::Runtime::InteropServices::ComTypes::IDataObject::DUnadvise;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dwConnection" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dwConnection">Token DWORD, który określa połączenie do usunięcia. Użyj wartości zwracanych przez <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" /> po pierwotnie jest nawiązane połączenie.</param>
        <summary>Niszczy połączenie powiadomień, które zostały wcześniej ustanowione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Forms.DataObject> jest rzutowane na <xref:System.Runtime.InteropServices.ComTypes.IDataObject> interfejsu.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Wywoływanie niezarządzanego kodu. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise">
      <MemberSignature Language="C#" Value="int IDataObject.EnumDAdvise (out System.Runtime.InteropServices.ComTypes.IEnumSTATDATA enumAdvise);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise([out] class System.Runtime.InteropServices.ComTypes.IEnumSTATDATA&amp; enumAdvise) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#EnumDAdvise(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)" />
      <MemberSignature Language="VB.NET" Value="Function EnumDAdvise (ByRef enumAdvise As IEnumSTATDATA) As Integer Implements IDataObject.EnumDAdvise" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise([Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::IEnumSTATDATA ^ % enumAdvise) = System::Runtime::InteropServices::ComTypes::IDataObject::EnumDAdvise;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumAdvise" Type="System.Runtime.InteropServices.ComTypes.IEnumSTATDATA&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="enumAdvise">Po powrocie z tej metody zawiera <see cref="T:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA" /> odbierająca wskaźnika interfejsu do nowego obiektu modułu wyliczającego. Jeśli implementacja ustawia <c>enumAdvise</c> do <see langword="null" />, nie ma żadnych połączeń wychwytywanie advisory w tej chwili. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Tworzy obiekt, który może służyć do wyliczenia bieżących połączeń advisory.</summary>
        <returns>Ta metoda obsługuje standardowe wartości zwracanej E_OUTOFMEMORY, jak również następujące:  
  
 <list type="table"><listheader><term> Wartość  
  
 </term><description> Opis elementu  
  
 </description></listheader><item><term> S_OK  
  
 </term><description> Obiekt modułu wyliczającego zostanie pomyślnie uruchomiony lub nie ma połączeń.  
  
 </description></item><item><term> OLE_E_ADVISENOTSUPPORTED  
  
 </term><description> Ten obiekt nie obsługuje advisory powiadomienia.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Forms.DataObject> jest rzutowane na <xref:System.Runtime.InteropServices.ComTypes.IDataObject> interfejsu.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Wywoływanie niezarządzanego kodu. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc">
      <MemberSignature Language="C#" Value="System.Runtime.InteropServices.ComTypes.IEnumFORMATETC IDataObject.EnumFormatEtc (System.Runtime.InteropServices.ComTypes.DATADIR dwDirection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Runtime.InteropServices.ComTypes.IEnumFORMATETC System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(valuetype System.Runtime.InteropServices.ComTypes.DATADIR dwDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)" />
      <MemberSignature Language="VB.NET" Value="Function EnumFormatEtc (dwDirection As DATADIR) As IEnumFORMATETC Implements IDataObject.EnumFormatEtc" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Runtime::InteropServices::ComTypes::IEnumFORMATETC ^ System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System::Runtime::InteropServices::ComTypes::DATADIR dwDirection) = System::Runtime::InteropServices::ComTypes::IDataObject::EnumFormatEtc;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.ComTypes.IEnumFORMATETC</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dwDirection" Type="System.Runtime.InteropServices.ComTypes.DATADIR" />
      </Parameters>
      <Docs>
        <param name="dwDirection">Jeden z <see cref="T:System.Runtime.InteropServices.ComTypes.DATADIR" /> wartości, które określa kierunek danych.</param>
        <summary>Tworzy obiekt do wyliczania <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> struktur dla obiekt danych. Te struktury są używane w wywołaniach <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> lub <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />.</summary>
        <returns>Ta metoda obsługuje standard zwracane wartości E_INVALIDARG i E_OUTOFMEMORY, a także następujące czynności:  
  
 <list type="table"><listheader><term> Wartość  
  
 </term><description> Opis elementu  
  
 </description></listheader><item><term> S_OK  
  
 </term><description> Pomyślnie utworzono obiekt modułu wyliczającego.  
  
 </description></item><item><term> E_NOTIMPL  
  
 </term><description> Kierunek określony przez <paramref name="direction" /> parametr nie jest obsługiwany.  
  
 </description></item><item><term> OLE_S_USEREG  
  
 </term><description> Żądania, że OLE wyliczyć formatów z rejestru.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Forms.DataObject> jest rzutowane na <xref:System.Runtime.InteropServices.ComTypes.IDataObject> interfejsu.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Wywoływanie niezarządzanego kodu. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc">
      <MemberSignature Language="C#" Value="int IDataObject.GetCanonicalFormatEtc (ref System.Runtime.InteropServices.ComTypes.FORMATETC pformatetcIn, out System.Runtime.InteropServices.ComTypes.FORMATETC pformatetcOut);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pformatetcIn, [out] valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pformatetcOut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)" />
      <MemberSignature Language="VB.NET" Value="Function GetCanonicalFormatEtc (ByRef pformatetcIn As FORMATETC, ByRef pformatetcOut As FORMATETC) As Integer Implements IDataObject.GetCanonicalFormatEtc" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System::Runtime::InteropServices::ComTypes::FORMATETC % pformatetcIn, [Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::FORMATETC % pformatetcOut) = System::Runtime::InteropServices::ComTypes::IDataObject::GetCanonicalFormatEtc;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pformatetcIn" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
        <Parameter Name="pformatetcOut" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pformatetcIn">Wskaźnik do <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> struktury przekazywane przez odwołanie, który definiuje format, średni i urządzenia docelowego, które służy do pobierania danych w wywołaniu kolejnych, takich jak wywołującego <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> Element członkowski nie ma znaczenia w takim przypadku i należy ją ignorować.</param>
        <param name="pformatetcOut">Gdy metoda zwróci wartość, zawiera wskaźnik do <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> strukturę, która zawiera najbardziej ogólne informacje dla konkretnego sposobu realizacji, dzięki czemu canonically odpowiednikiem możliwe <c>formatetIn</c>. Obiekt wywołujący musi przydzielić tej struktury i <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)" /> metody musi wypełnić go danymi. Chcesz pobrać dane z kolejnych wywołań, takich jak <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />, wywołujący używa podanej wartości <c>formatOut</c>, chyba że podano wartość <see langword="null" />. Ta wartość jest <see langword="null" /> Jeśli metoda zwraca <see langword="DATA_S_SAMEFORMATETC" />. <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> Element członkowski nie ma znaczenia w takim przypadku i należy ją ignorować. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Zawiera standardowe <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> strukturę, która odpowiada logicznie bardziej złożonych struktury. Ta metoda służy do określenia, czy dwa różne <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> struktury zwróci tych samych danych, usuwając konieczność zduplikowane renderowania.</summary>
        <returns>Ta metoda obsługuje standardowe wartości zwracanych E_INVALIDARG, E_UNEXPECTED i E_OUTOFMEMORY, a także następujące:  
  
 <list type="table"><listheader><term> Wartość  
  
 </term><description> Opis elementu  
  
 </description></listheader><item><term> S_OK  
  
 </term><description> Zwrócona <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> struktura jest inny niż ten, który został przekazany.  
  
 </description></item><item><term> DATA_S_SAMEFORMATETC  
  
 </term><description><see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> Struktury są takie same i <see langword="null" /> jest zwracany w <paramref name="formatOut" /> parametru.  
  
 </description></item><item><term> DV_E_LINDEX  
  
 </term><description> Jest nieprawidłową wartością dla <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; aktualnie obsługiwana jest tylko wartość -1.  
  
 </description></item><item><term> DV_E_FORMATETC  
  
 </term><description> Jest nieprawidłową wartością dla <paramref name="pFormatetc" /> parametru.  
  
 </description></item><item><term> OLE_E_NOTRUNNING  
  
 </term><description> Aplikacja nie jest uruchomiona.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Forms.DataObject> jest rzutowane na <xref:System.Runtime.InteropServices.ComTypes.IDataObject> interfejsu.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Wywoływanie niezarządzanego kodu. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.GetData">
      <MemberSignature Language="C#" Value="void IDataObject.GetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc, out System.Runtime.InteropServices.ComTypes.STGMEDIUM medium);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.GetData(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; formatetc, [out] valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp; medium) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetData (ByRef formatetc As FORMATETC, ByRef medium As STGMEDIUM) Implements IDataObject.GetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System::Runtime::InteropServices::ComTypes::FORMATETC % formatetc, [Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::STGMEDIUM % medium) = System::Runtime::InteropServices::ComTypes::IDataObject::GetData;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
        <Parameter Name="medium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="formatetc">Wskaźnik do <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> struktury przekazywane przez odwołanie, który definiuje format, średni i urządzenie docelowe do użycia podczas przekazywania danych. Można określić więcej niż jednym nośniku, za pomocą operatora Boolean lub zezwalanie metodę, aby wybrać najlepsze średni między tymi określony jest.</param>
        <param name="medium">Gdy metoda zwróci wartość, zawiera wskaźnik do <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> strukturę, która wskazuje nośniku zawierający zwrócone dane za pośrednictwem jego <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.tymed" /> element członkowski i odpowiedzialności za zwolnienie średni przez wartość jego <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" />elementu członkowskiego. Jeśli <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> jest <see langword="null" />, odbiornik nośnika jest odpowiedzialny za jego zwolnienia; w przeciwnym razie <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> wskazuje <see langword="IUnknown" /> interfejsu na odpowiedni obiekt, więc jego <see langword="Release" /> można wywołać metody. Średnia liczba godzin musi być przydzielona i wypełniane <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Pobiera dane z obiektu źródła danych. <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> Metodę, która jest wywoływana przez użytkownika danych, renderuje danych opisanych w określonym <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> struktury i transferuje je za pomocą określonego <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> struktury. Obiekt wywołujący następnie przyjmuje odpowiedzialność za zwolnienie <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> struktury.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Forms.DataObject> jest rzutowane na <xref:System.Runtime.InteropServices.ComTypes.IDataObject> interfejsu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">Nie ma wystarczającej ilości pamięci do wykonania tej operacji.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Wywoływanie niezarządzanego kodu. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere">
      <MemberSignature Language="C#" Value="void IDataObject.GetDataHere (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc, ref System.Runtime.InteropServices.ComTypes.STGMEDIUM medium);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; formatetc, valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp; medium) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetDataHere (ByRef formatetc As FORMATETC, ByRef medium As STGMEDIUM) Implements IDataObject.GetDataHere" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System::Runtime::InteropServices::ComTypes::FORMATETC % formatetc, System::Runtime::InteropServices::ComTypes::STGMEDIUM % medium) = System::Runtime::InteropServices::ComTypes::IDataObject::GetDataHere;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
        <Parameter Name="medium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="formatetc">Wskaźnik do <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> struktury przekazywane przez odwołanie, który definiuje format, średni i urządzenie docelowe do użycia podczas przekazywania danych. Można określić tylko jeden nośnik w <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" />i tylko następujące <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> wartości są prawidłowe: <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTORAGE" />, <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTREAM" />, <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_HGLOBAL" />, lub <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_FILE" />.</param>
        <param name="medium">A <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, przekazywane przez odwołanie, definiujący nośniku zawierający przesyłane dane. Średnia liczba godzin musi być przydzielone przez obiekt wywołujący i wypełniane <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. Obiekt wywołujący musi także zwolnić nośnik. Implementacja tej metody należy zawsze podać wartość <see langword="null" /> dla <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> członkiem <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> strukturę, która wskazuje tego parametru.</param>
        <summary>Pobiera dane z obiektu źródła danych. Ta metoda, która jest wywoływana przez użytkownika danych, różni się od <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> metody, wywołujący musi przydzielić oraz o wolnym określony nośnik.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Forms.DataObject> jest rzutowane na <xref:System.Runtime.InteropServices.ComTypes.IDataObject> interfejsu.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Wywoływanie niezarządzanego kodu. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData">
      <MemberSignature Language="C#" Value="int IDataObject.QueryGetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; formatetc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#QueryGetData(System.Runtime.InteropServices.ComTypes.FORMATETC@)" />
      <MemberSignature Language="VB.NET" Value="Function QueryGetData (ByRef formatetc As FORMATETC) As Integer Implements IDataObject.QueryGetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(System::Runtime::InteropServices::ComTypes::FORMATETC % formatetc) = System::Runtime::InteropServices::ComTypes::IDataObject::QueryGetData;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="formatetc">Wskaźnik do <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> struktury przekazywane przez odwołanie, który definiuje format, średni i urządzenie docelowe do użycia dla zapytania.</param>
        <summary>Określa, czy obiekt jest w stanie renderowania danych opisanego w <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> struktury. Obiekty próbę wykonania operacji wklejania lub usuń można wywołać tej metody przed wywołaniem <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> można pobrać ze wskazaniem, czy operacja może zakończyć się powodzeniem.</summary>
        <returns>Ta metoda obsługuje standardowe wartości zwracanych E_INVALIDARG, E_UNEXPECTED i E_OUTOFMEMORY, a także następujące:  
  
 <list type="table"><listheader><term> Wartość  
  
 </term><description> Opis elementu  
  
 </description></listheader><item><term> S_OK  
  
 </term><description> Kolejne wywołania <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> prawdopodobnie powiodło się.  
  
 </description></item><item><term> DV_E_LINDEX  
  
 </term><description> Nieprawidłowa wartość dla <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; aktualnie obsługiwana jest tylko wartość -1.  
  
 </description></item><item><term> DV_E_FORMATETC  
  
 </term><description> Nieprawidłowa wartość dla <paramref name="pFormatetc" /> parametru.  
  
 </description></item><item><term> DV_E_TYMED  
  
 </term><description> Nieprawidłowy <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.tymed" /> wartość.  
  
 </description></item><item><term> DV_E_DVASPECT  
  
 </term><description> Nieprawidłowy <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect" /> wartość.  
  
 </description></item><item><term> OLE_E_NOTRUNNING  
  
 </term><description> Aplikacja nie jest uruchomiona.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Forms.DataObject> jest rzutowane na <xref:System.Runtime.InteropServices.ComTypes.IDataObject> interfejsu.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Wywoływanie niezarządzanego kodu. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.SetData">
      <MemberSignature Language="C#" Value="void IDataObject.SetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC pFormatetcIn, ref System.Runtime.InteropServices.ComTypes.STGMEDIUM pmedium, bool fRelease);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.SetData(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pFormatetcIn, valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp; pmedium, bool fRelease) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Sub SetData (ByRef pFormatetcIn As FORMATETC, ByRef pmedium As STGMEDIUM, fRelease As Boolean) Implements IDataObject.SetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System::Runtime::InteropServices::ComTypes::FORMATETC % pFormatetcIn, System::Runtime::InteropServices::ComTypes::STGMEDIUM % pmedium, bool fRelease) = System::Runtime::InteropServices::ComTypes::IDataObject::SetData;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pFormatetcIn" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
        <Parameter Name="pmedium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp;" RefType="ref" />
        <Parameter Name="fRelease" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pFormatetcIn">A <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> struktury przekazywane przez odwołanie, który definiuje format używany przez obiekt danych po interpretowanie danych znajdujących się na nośniku magazynowania.</param>
        <param name="pmedium">A <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> struktury przekazywane przez odwołanie, definiujący nośniku, w którym dane są przekazywane.</param>
        <param name="fRelease">
          <see langword="true" /> Aby określić, że dane obiektu o nazwie, która implementuje <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />, właścicielem nośnik, po wywołaniu zwraca. Oznacza to, że obiekt danych należy zwolnić nośnik po został on użyty przez wywołanie metody <see langword="ReleaseStgMedium" /> funkcji. <see langword="false" /> Aby określić, że obiekt wywołujący zachowuje własność nośnik i wywołać obiekt danych używa nośnik na czas trwania wywołania tylko.</param>
        <summary>Przesyła dane do obiektu, który implementuje tę metodę. Ta metoda jest wywoływana przez obiekt, który zawiera źródła danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Forms.DataObject> jest rzutowane na <xref:System.Runtime.InteropServices.ComTypes.IDataObject> interfejsu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Ta metoda nie obsługuje typ obiektu źródłowego.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Wywoływanie niezarządzanego kodu. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>