<Type Name="DataObject" FullName="System.Windows.Forms.DataObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d40ac79022a4270ada0de6d8d85815e5c8933ac6" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69190212" /></Metadata><TypeSignature Language="C#" Value="public class DataObject : System.Runtime.InteropServices.ComTypes.IDataObject, System.Windows.Forms.IDataObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataObject extends System.Object implements class System.Runtime.InteropServices.ComTypes.IDataObject, class System.Windows.Forms.IDataObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataObject" />
  <TypeSignature Language="VB.NET" Value="Public Class DataObject&#xA;Implements IDataObject, IDataObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataObject : System::Runtime::InteropServices::ComTypes::IDataObject, System::Windows::Forms::IDataObject" />
  <TypeSignature Language="F#" Value="type DataObject = class&#xA;    interface IDataObject&#xA;    interface IDataObject" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices.ComTypes.IDataObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.IDataObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Implementuje mechanizm podstawowego transferu danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataObject><xref:System.Windows.Forms.IDataObject> implementuje interfejs, którego metody zapewniają mechanizm niezależny od formatu do transferu danych.  
  
 A <xref:System.Windows.Forms.DataObject> jest zazwyczaj używany <xref:System.Windows.Forms.Clipboard> z i w operacjach przeciągania i upuszczania. Klasa zapewnia zalecaną implementację <xref:System.Windows.Forms.IDataObject>interfejsu. <xref:System.Windows.Forms.DataObject> Zaleca się użycie <xref:System.Windows.Forms.DataObject> klasy zamiast implementowania <xref:System.Windows.Forms.IDataObject> siebie.  
  
 Wiele fragmentów danych w różnych formatach może być przechowywanych w <xref:System.Windows.Forms.DataObject>. Dane są pobierane z programu <xref:System.Windows.Forms.DataObject> przez skojarzony z nim format. Ponieważ aplikacja docelowa może być nieznana, można zwiększyć prawdopodobieństwo, że dane będą w odpowiednim formacie dla aplikacji, umieszczając dane w <xref:System.Windows.Forms.DataObject> wielu formatach. Zapoznaj <xref:System.Windows.Forms.DataFormats> się ze wstępnie zdefiniowanymi formatami. Możesz zaimplementować własny format, tworząc wystąpienie <xref:System.Windows.Forms.DataFormats.Format> klasy.  
  
 Aby przechowywać dane w <xref:System.Windows.Forms.DataObject>, Przekaż dane do konstruktora lub wywołania. <xref:System.Windows.Forms.DataObject.SetData%2A> Można dodać dane w wielu formatach do tego samego <xref:System.Windows.Forms.DataObject>. Jeśli chcesz, aby dane, które zostały dodane, były pobierane tylko w formacie natywnym <xref:System.Windows.Forms.DataObject.SetData%28System.String%2CSystem.Boolean%2CSystem.Object%29> , wywołaj `autoConvert` z parametrem ustawionym na `false`.  
  
 Dane można pobrać z <xref:System.Windows.Forms.DataObject> dowolnego formatu, który jest zgodny z. <xref:System.Windows.Forms.DataObject.GetData%2A> Na przykład tekst można przekonwertować na Unicode. Aby pobrać dane w formacie, w którym były przechowywane, wywołaj <xref:System.Windows.Forms.DataObject.GetData%2A> `autoConvert` z parametrem ustawionym `false`na.  
  
 Aby określić formaty, w których są przechowywane dane, wywołaj <xref:System.Windows.Forms.DataObject.GetFormats%2A>. Aby określić, czy format jest dostępny, wywołaj <xref:System.Windows.Forms.DataObject.GetDataPresent%2A> z żądanym formatem.  
  
 W [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]systemieKlasazawieradodatkowe metody, które ułatwiają pracę z danymi w popularnych formatach. <xref:System.Windows.Forms.DataObject> Aby dodać <xref:System.Windows.Forms.DataObject>dane określonego formatu do, użyj odpowiedniej `Set`metody *formatu* , takiej jak <xref:System.Windows.Forms.DataObject.SetText%2A>. Aby pobrać <xref:System.Windows.Forms.DataObject>dane określonego formatu z, najpierw Wywołaj odpowiednią `Contains`metodę *formatu* (na przykład <xref:System.Windows.Forms.DataObject.ContainsText%2A>), aby określić, czy <xref:System.Windows.Forms.DataObject> zawiera dane w tym formacie, a następnie Wywołaj odpowiednie `Get` Metoda *formatowania* (na przykład <xref:System.Windows.Forms.DataObject.GetText%2A>) w celu pobrania danych, <xref:System.Windows.Forms.DataObject> jeśli zawiera.  
  
> [!NOTE]
>  W przypadku używania formatu metapliku ze schowka mogą być konieczne specjalne uwagi. Ze względu na ograniczenie bieżącej implementacji <xref:System.Windows.Forms.DataObject> klasy, format metapliku używany przez .NET Framework może nie być rozpoznawany przez aplikacje korzystające ze starszego formatu metapliku. W takim przypadku należy współpracować z interfejsem programowania aplikacji (API) w schowku Win32.
>   
>  Obiekt musi być możliwy do serializacji, aby można go było umieścić w Schowku. Aby <xref:System.Runtime.Serialization> uzyskać więcej informacji na temat serializacji, zobacz. Jeśli aplikacja docelowa wymaga bardzo określonego formatu danych, nagłówki dodane do danych w procesie serializacji mogą uniemożliwiać aplikacji rozpoznawanie danych. Aby zachować format danych, Dodaj dane <xref:System.Byte> jako tablicę <xref:System.IO.MemoryStream> do <xref:System.Windows.Forms.DataObject.SetData%2A> i przekaż <xref:System.IO.MemoryStream> do metody.  
  
   
  
## Examples  
 Poniższy przykład kodu dodaje dane w <xref:System.Windows.Forms.DataObject>. Najpierw zostanie utworzony nowy <xref:System.Windows.Forms.DataObject> element i jest w nim przechowywany składnik. Następnie sprawdza, czy dane w odpowiednim typie istnieją w <xref:System.Windows.Forms.DataObject>. Wynik jest wyświetlany w polu tekstowym. Ten kod wymaga, `textBox1` który został utworzony.  
  
 [!code-cpp[Classic DataObject Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject Example/VB/source.vb#1)]  
  
 Następny przykład pobiera dane przechowywane w <xref:System.Windows.Forms.DataObject>. Po pierwsze, nowy <xref:System.Windows.Forms.DataObject> jest tworzony przy użyciu danych tekstowych. Następnie dane są pobierane, określanie jego formatu jako ciągu i wyświetlane w polu tekstowym. Format danych jest automatycznie konwertowany z tekstu na ciąg. Ten kod wymaga, `textBox1` który został utworzony.  
  
 [!code-cpp[Classic DataObject Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject Example/CPP/source.cpp#2)]
 [!code-csharp[Classic DataObject Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject Example/CS/source.cs#2)]
 [!code-vb[Classic DataObject Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject Example/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Clipboard" />
    <altmember cref="T:System.Windows.Forms.IDataObject" />
    <altmember cref="T:System.Windows.Forms.DataFormats" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.DataObject" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.DataObject" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.DataObject> i dodaje do niego dane. Następnie przykład pobiera i wyświetla dane. Ten kod wymaga, `textBox1` który został utworzony.  
  
 [!code-cpp[Classic DataObject.DataObject2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.DataObject2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.DataObject2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.DataObject2 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.DataObject2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.DataObject2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataObject(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataObject : obj -&gt; System.Windows.Forms.DataObject" Usage="new System.Windows.Forms.DataObject data" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">Dane do zapisania.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.Forms.DataObject" /> klasy i dodaje do niego określony obiekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz dodać dane w dowolnym formacie do <xref:System.Windows.Forms.DataObject> , gdy używasz tego konstruktora, lub możesz dodać dane <xref:System.Windows.Forms.IDataObject> jako do udostępniania wielu formatów jednocześnie. Jeśli znasz programowanie com, możesz również dodać obiekt danych, który implementuje interfejs com `IDataObject` . Aby uzyskać więcej informacji, `IDataObject` Zobacz sekcję w bibliotece MSDN http://msdn.microsoft.com/librarypod adresem.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.DataObject> , który zawiera ciąg. Dane są pobierane przy użyciu formatu danych. Wyniki są wyświetlane w polu tekstowym. Ten kod wymaga, `textBox1` który został utworzony.  
  
 [!code-cpp[Classic DataObject.DataObject3 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.DataObject3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.DataObject3 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.DataObject3 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.DataObject3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.DataObject3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=150123">IDataObject</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataObject(System::String ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataObject : string * obj -&gt; System.Windows.Forms.DataObject" Usage="new System.Windows.Forms.DataObject (format, data)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Format określonych danych. Zobacz <see cref="T:System.Windows.Forms.DataFormats" /> , aby uzyskać wstępnie zdefiniowane formaty.</param>
        <param name="data">Dane do zapisania.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.Forms.DataObject" /> klasy i dodaje określony obiekt w określonym formacie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.DataObject> klasę przy użyciu ciągu, który jest określony jako typ ciągu. Dane są pobierane z programu <xref:System.Windows.Forms.DataObject> , określając jego format jako tekst. Wyniki są wyświetlane w polu tekstowym. Ten kod wymaga, `textBox1` który został utworzony.  
  
 [!code-cpp[Classic DataObject.DataObject4 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.DataObject4 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.DataObject4 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.DataObject4 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.DataObject4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.DataObject4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsAudio">
      <MemberSignature Language="C#" Value="public virtual bool ContainsAudio ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsAudio() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsAudio" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsAudio () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsAudio();" />
      <MemberSignature Language="F#" Value="abstract member ContainsAudio : unit -&gt; bool&#xA;override this.ContainsAudio : unit -&gt; bool" Usage="dataObject.ContainsAudio " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wskazuje, czy obiekt danych zawiera dane w <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> formacie.</summary>
        <returns><see langword="true" />Jeśli obiekt danych zawiera dane audio; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, aby określić, czy obiekt danych zawiera dane audio przed pobraniem go <xref:System.Windows.Forms.DataObject.GetAudioStream%2A> za pomocą metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetAudioStream" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetAudio" />
      </Docs>
    </Member>
    <Member MemberName="ContainsFileDropList">
      <MemberSignature Language="C#" Value="public virtual bool ContainsFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsFileDropList () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsFileDropList();" />
      <MemberSignature Language="F#" Value="abstract member ContainsFileDropList : unit -&gt; bool&#xA;override this.ContainsFileDropList : unit -&gt; bool" Usage="dataObject.ContainsFileDropList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wskazuje, czy obiekt danych zawiera dane w <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> formacie, czy można go przekonwertować na ten format.</summary>
        <returns><see langword="true" />Jeśli obiekt danych zawiera listę rozwijaną plików; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lista rozwijana plików jest kolekcją ciągów zawierających informacje o ścieżce dla plików.  
  
 Użyj tej metody, aby określić, czy obiekt danych zawiera listę rozwijaną plików przed pobraniem jej <xref:System.Windows.Forms.DataObject.GetFileDropList%2A> przy użyciu metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFileDropList" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsImage">
      <MemberSignature Language="C#" Value="public virtual bool ContainsImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsImage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsImage () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsImage();" />
      <MemberSignature Language="F#" Value="abstract member ContainsImage : unit -&gt; bool&#xA;override this.ContainsImage : unit -&gt; bool" Usage="dataObject.ContainsImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wskazuje, czy obiekt danych zawiera dane w <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> formacie, czy można go przekonwertować na ten format.</summary>
        <returns><see langword="true" />Jeśli obiekt danych zawiera dane obrazu; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, aby określić, czy obiekt danych zawiera dane obrazu przed pobraniem go <xref:System.Windows.Forms.DataObject.GetImage%2A> za pomocą metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetImage" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ContainsText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wskazuje, czy obiekt danych zawiera dane tekstowe.</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public virtual bool ContainsText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsText () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsText();" />
      <MemberSignature Language="F#" Value="abstract member ContainsText : unit -&gt; bool&#xA;override this.ContainsText : unit -&gt; bool" Usage="dataObject.ContainsText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wskazuje, czy obiekt danych zawiera dane w <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> formacie.</summary>
        <returns><see langword="true" />Jeśli obiekt danych zawiera dane tekstowe; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, aby określić, czy obiekt danych zawiera dane tekstowe przed pobraniem go <xref:System.Windows.Forms.DataObject.GetText%2A> za pomocą metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </Member>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public virtual bool ContainsText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsText (format As TextDataFormat) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsText(System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="abstract member ContainsText : System.Windows.Forms.TextDataFormat -&gt; bool&#xA;override this.ContainsText : System.Windows.Forms.TextDataFormat -&gt; bool" Usage="dataObject.ContainsText format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="format">Jedna z <see cref="T:System.Windows.Forms.TextDataFormat" /> wartości.</param>
        <summary>Wskazuje, czy obiekt danych zawiera dane tekstowe w formacie wskazanym przez określoną <see cref="T:System.Windows.Forms.TextDataFormat" /> wartość.</summary>
        <returns><see langword="true" />Jeśli obiekt danych zawiera dane tekstowe w określonym formacie; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, aby określić, czy obiekt danych zawiera dane tekstowe przed pobraniem go <xref:System.Windows.Forms.DataObject.GetText%2A> za pomocą metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="format" />nie jest prawidłową <see cref="T:System.Windows.Forms.TextDataFormat" /> wartością.</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetAudioStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetAudioStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetAudioStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetAudioStream" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAudioStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetAudioStream();" />
      <MemberSignature Language="F#" Value="abstract member GetAudioStream : unit -&gt; System.IO.Stream&#xA;override this.GetAudioStream : unit -&gt; System.IO.Stream" Usage="dataObject.GetAudioStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera strumień audio z obiektu danych.</summary>
        <returns>Zawierające dane audio lub <see langword="null" /> Jeśli obiekt danych nie <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> zawiera żadnych danych w formacie. <see cref="T:System.IO.Stream" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Windows.Forms.DataObject.ContainsAudio%2A> , aby określić, czy obiekt danych zawiera dane audio przed pobraniem go z tą metodą.  
  
 Użyj metody <xref:System.Windows.Forms.DataObject.SetAudio%2A> , aby dodać dane audio do obiektu danych.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsAudio" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetAudio" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetData">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca dane skojarzone z określonym formatem danych.</summary>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public virtual object GetData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetData (format As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetData(System::String ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetData : string -&gt; obj&#xA;override this.GetData : string -&gt; obj" Usage="dataObject.GetData format" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetData(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">Format danych do pobrania. Zobacz <see cref="T:System.Windows.Forms.DataFormats" /> , aby uzyskać wstępnie zdefiniowane formaty.</param>
        <summary>Zwraca dane skojarzone z określonym formatem danych.</summary>
        <returns>Dane skojarzone z określonym formatem lub <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ta metoda nie może znaleźć danych w określonym formacie, próbuje przekonwertować dane do formatu. Jeśli dane nie mogą zostać skonwertowane do określonego formatu lub jeśli dane były przechowywane z automatyczną konwersją na `false`wartość, ta metoda zwraca. `null`  
  
 Aby określić, czy dane są skojarzone z lub można je przekonwertować na format <xref:System.Windows.Forms.DataObject.GetDataPresent%2A> , przed wywołaniem. <xref:System.Windows.Forms.DataObject.GetData%2A> Wywołaj <xref:System.Windows.Forms.DataObject.GetFormats%2A> listę prawidłowych formatów dla danych przechowywanych w tym <xref:System.Windows.Forms.DataObject>elemencie.  
  
> [!NOTE]
>  Dane można przekonwertować na inny format, jeśli został on zapisany, określając, że konwersja jest dozwolona, i jeśli żądany format jest zgodny z zapisanym formatem. Na przykład dane przechowywane w formacie Unicode można przekonwertować na tekst.  
>   
>  W przypadku `format` tej metody Metoda zwraca zakodowany ciąg UTF-8 w aplikacjach przeznaczonych dla platformy .NET 4,5 lub nowszej, a w aplikacjach przeznaczonych dla platformy .NET 4,0 lub niższych jest zakodowany ciąg ANSI. <xref:System.Windows.Forms.DataFormats.Html>  
  
   
  
## Examples  
 Poniższy przykład kodu pobiera dane przechowywane w <xref:System.Windows.Forms.DataObject>. Po pierwsze, nowy <xref:System.Windows.Forms.DataObject> jest tworzony przy użyciu danych tekstowych. Następnie dane są pobierane, określanie jego formatu jako ciągu i wyświetlane w polu tekstowym.  
  
 Ten kod wymaga, `textBox1` który został utworzony.  
  
 [!code-cpp[classic dataobject example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject Example/CPP/source.cpp#1)]
 [!code-csharp[classic dataobject example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject Example/CS/source.cs#1)]
 [!code-vb[classic dataobject example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public virtual object GetData (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetData(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetData (format As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetData(Type ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetData : Type -&gt; obj&#xA;override this.GetData : Type -&gt; obj" Usage="dataObject.GetData format" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetData(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format"><see cref="T:System.Type" /> Reprezentujący format danych do pobrania.</param>
        <summary>Zwraca dane skojarzone z określonym formatem typu klasy.</summary>
        <returns>Dane skojarzone z określonym formatem lub <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ta metoda nie może znaleźć danych w określonym formacie, próbuje przekonwertować dane do formatu. Jeśli dane nie mogą zostać skonwertowane do określonego formatu lub jeśli dane były przechowywane z automatyczną konwersją na `false`wartość, ta metoda zwraca. `null`  
  
 Aby określić, czy dane są skojarzone z lub można je przekonwertować na format <xref:System.Windows.Forms.DataObject.GetDataPresent%2A> , przed wywołaniem. <xref:System.Windows.Forms.DataObject.GetData%2A> Wywołaj <xref:System.Windows.Forms.DataObject.GetFormats%2A> listę prawidłowych formatów dla danych przechowywanych w tym <xref:System.Windows.Forms.DataObject>elemencie.  
  
> [!NOTE]
>  Dane można przekonwertować na inny format, jeśli został on zapisany, określając, że konwersja jest dozwolona, i jeśli żądany format jest zgodny z zapisanym formatem. Na przykład dane przechowywane w formacie Unicode można przekonwertować na tekst.  
  
   
  
## Examples  
 Poniższy przykład kodu pobiera dane przechowywane w <xref:System.Windows.Forms.DataObject>. Najpierw tworzony jest nowy <xref:System.Windows.Forms.DataObject> składnik. Następnie dane są pobierane, określając jego typ. Typ pobranych danych jest wyświetlany w polu tekstowym.  
  
 Ten kod wymaga, `textBox1` który został utworzony.  
  
 [!code-cpp[Classic DataObject.GetData2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetData2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetData2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetData2 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetData2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetData2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public virtual object GetData (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetData (format As String, autoConvert As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetData(System::String ^ format, bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetData : string * bool -&gt; obj&#xA;override this.GetData : string * bool -&gt; obj" Usage="dataObject.GetData (format, autoConvert)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">Format danych do pobrania. Zobacz <see cref="T:System.Windows.Forms.DataFormats" /> , aby uzyskać wstępnie zdefiniowane formaty.</param>
        <param name="autoConvert"><see langword="true" />na dane konwersji do określonego formatu; w przeciwnym razie. <see langword="false" /></param>
        <summary>Zwraca dane skojarzone z określonym formatem danych przy użyciu zautomatyzowanego parametru konwersji, aby określić, czy dane mają być konwertowane w formacie.</summary>
        <returns>Dane skojarzone z określonym formatem lub <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli parametr jest `true` i ta metoda nie może znaleźć danych w określonym formacie, próbuje przekonwertować dane w formacie. `autoConvert` Jeśli dane nie mogą być konwertowane do określonego formatu lub jeśli dane były przechowywane z automatyczną konwersją na `false`wartość, ta metoda zwraca. `null`  
  
 Jeśli parametr jest `false`, Metoda ta zwraca dane w określonym formacie lub `null` Jeśli nie można znaleźć danych w tym formacie. `autoConvert`  
  
 Aby określić, czy dane są skojarzone z lub można je przekonwertować na format <xref:System.Windows.Forms.DataObject.GetDataPresent%2A> , przed wywołaniem. <xref:System.Windows.Forms.DataObject.GetData%2A> Wywołaj <xref:System.Windows.Forms.DataObject.GetFormats%2A> listę prawidłowych formatów dla danych przechowywanych w tym <xref:System.Windows.Forms.DataObject>elemencie.  
  
> [!NOTE]
>  Dane można przekonwertować na inny format, jeśli został on zapisany, określając, że konwersja jest dozwolona, i jeśli żądany format jest zgodny z zapisanym formatem. Na przykład dane przechowywane w formacie Unicode można przekonwertować na tekst.  
>   
>  W przypadku `format` tej metody Metoda zwraca zakodowany ciąg UTF-8 w aplikacjach przeznaczonych dla platformy .NET 4,5 lub nowszej, a w aplikacjach przeznaczonych dla platformy .NET 4,0 lub niższych jest zakodowany ciąg ANSI. <xref:System.Windows.Forms.DataFormats.Html>  
  
   
  
## Examples  
 Poniższy przykład kodu pobiera dane przechowywane w <xref:System.Windows.Forms.DataObject>, `autoConvert` przy użyciu parametru, aby określić, czy format danych ma zostać przekonwertowany.  
  
 Po pierwsze, nowy <xref:System.Windows.Forms.DataObject> jest tworzony przy użyciu danych tekstowych. Następnie przykład próbuje pobrać dane, określając jego format jako ciąg i bez konwersji formatu, czyli `autoConvert` parametr jest. `false` Ta operacja nie powiodła się, <xref:System.Windows.Forms.DataObject>ponieważ w elemencie nie ma danych ciągu.  
  
 Następnie przykład próbuje ponownie pobrać dane z `autoConvert` parametrem ustawionym na. `true` Ta operacja zakończy się pomyślnie, a wyniki są wyświetlane <xref:System.Windows.Forms.MessageBox>w.  
  
 Ten kod wymaga, `textBox1` który został utworzony.  
  
 [!code-cpp[Classic DataObject.GetData Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetData Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetData Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetData Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetData Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetData Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDataPresent">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Określa, czy dane przechowywane w <see cref="T:System.Windows.Forms.DataObject" /> tym programie są skojarzone z określonym formatem.</summary>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public virtual bool GetDataPresent (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetDataPresent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataPresent (format As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetDataPresent(System::String ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : string -&gt; bool&#xA;override this.GetDataPresent : string -&gt; bool" Usage="dataObject.GetDataPresent format" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">Format, który ma zostać wyszukany. Zobacz <see cref="T:System.Windows.Forms.DataFormats" /> , aby uzyskać wstępnie zdefiniowane formaty.</param>
        <summary>Określa, czy dane przechowywane w <see cref="T:System.Windows.Forms.DataObject" /> tym elemencie są skojarzone z lub można je przekonwertować na format w określonym formacie.</summary>
        <returns><see langword="true" />Jeśli dane przechowywane w tym <see cref="T:System.Windows.Forms.DataObject" /> elemencie są skojarzone z lub można je przekonwertować na format, w przeciwnym razie,. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj tę metodę, aby określić, czy format istnieje <xref:System.Windows.Forms.DataObject.GetData%2A>przed wywołaniem. Wywołaj <xref:System.Windows.Forms.DataObject.GetFormats%2A> formaty, które są dostępne w tym <xref:System.Windows.Forms.DataObject>elemencie.  
  
> [!NOTE]
>  Dane można przekonwertować na inny format, jeśli został on zapisany, określając, że konwersja jest dozwolona, i jeśli żądany format jest zgodny z zapisanym formatem. Na przykład dane przechowywane w formacie Unicode można przekonwertować na tekst.  
  
> [!NOTE]
>  Jeśli nie można pobrać danych, żaden wyjątek nie zostanie wygenerowany. Zamiast tego `false` zostanie zwrócony.  
  
   
  
## Examples  
 Poniższy przykład kodu określa, czy dane przechowywane obecnie w tym <xref:System.Windows.Forms.DataObject> elemencie są skojarzone z lub można je przekonwertować na format w określonym formacie. Nowy <xref:System.Windows.Forms.DataObject> jest inicjowany za pomocą ciągu i skojarzonego z nim formatu określonego jako tekst.  
  
 Następnie przykłady drukuje, <xref:System.Windows.Forms.DataObject>czy dane tekstowe istnieją w. Ten kod wymaga, `textBox1` który został utworzony.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public virtual bool GetDataPresent (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataPresent (format As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetDataPresent(Type ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : Type -&gt; bool&#xA;override this.GetDataPresent : Type -&gt; bool" Usage="dataObject.GetDataPresent format" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format"><see cref="T:System.Type" /> Reprezentujący format, który ma zostać wyszukany.</param>
        <summary>Określa, czy dane przechowywane w <see cref="T:System.Windows.Forms.DataObject" /> tym elemencie są skojarzone z lub można je przekonwertować na format w określonym formacie.</summary>
        <returns><see langword="true" />Jeśli dane przechowywane w tym <see cref="T:System.Windows.Forms.DataObject" /> elemencie są skojarzone z lub można je przekonwertować na format, w przeciwnym razie,. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj tę metodę, aby określić, czy format istnieje <xref:System.Windows.Forms.DataObject.GetData%2A>przed wywołaniem. Wywołaj <xref:System.Windows.Forms.DataObject.GetFormats%2A> formaty, które są dostępne w tym <xref:System.Windows.Forms.DataObject>elemencie.  
  
> [!NOTE]
>  Dane można przekonwertować na inny format, jeśli został on zapisany, określając, że konwersja jest dozwolona, i jeśli żądany format jest zgodny z zapisanym formatem. Na przykład dane przechowywane w formacie Unicode można przekonwertować na tekst.  
  
> [!NOTE]
>  Jeśli nie można pobrać danych, żaden wyjątek nie zostanie wygenerowany. Zamiast tego `false` zostanie zwrócony.  
  
   
  
## Examples  
 Poniższy przykład kodu określa <xref:System.Windows.Forms.DataObject>, czy dane określonego typu istnieją w lub czy dane można przekonwertować na określony typ. Wynik jest wyświetlany w polu tekstowym. Kod wymaga, który `textBox1` został utworzony.  
  
 [!code-cpp[Classic DataObject.GetDataPresent Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetDataPresent Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetDataPresent Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetDataPresent Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetDataPresent Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetDataPresent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public virtual bool GetDataPresent (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetDataPresent(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataPresent (format As String, autoConvert As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetDataPresent(System::String ^ format, bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : string * bool -&gt; bool&#xA;override this.GetDataPresent : string * bool -&gt; bool" Usage="dataObject.GetDataPresent (format, autoConvert)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">Format, który ma zostać wyszukany. Zobacz <see cref="T:System.Windows.Forms.DataFormats" /> , aby uzyskać wstępnie zdefiniowane formaty.</param>
        <param name="autoConvert"><see langword="true" />Aby określić, czy dane przechowywane w <see cref="T:System.Windows.Forms.DataObject" /> tym elemencie mogą być konwertowane do określonego formatu; <see langword="false" /> , aby sprawdzić, czy dane są w określonym formacie.</param>
        <summary>Określa, czy <see cref="T:System.Windows.Forms.DataObject" /> zawiera dane w określonym formacie, czy opcjonalnie, zawiera dane, które można przekonwertować na określony format.</summary>
        <returns><see langword="true" />Jeśli dane są w lub mogą być konwertowane na, w określonym formacie; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj tę metodę, aby określić, czy format istnieje <xref:System.Windows.Forms.DataObject.GetData%2A>przed wywołaniem. Wywołaj <xref:System.Windows.Forms.DataObject.GetFormats%2A> formaty, które są dostępne w tym <xref:System.Windows.Forms.DataObject>elemencie.  
  
 Ta metoda zwraca `true` :  
  
-   `autoConvert` Parametr jest`true` i dane są w formacie, który można przekonwertować na odpowiedni format.  
  
-   `autoConvert` Parametr jest`false` i dane są w odpowiednim formacie.  
  
 Ta metoda zwraca `false` :  
  
-   Parametr jest `true` i ta metoda nie może znaleźć danych w określonym formacie i nie może przekonwertować danych do określonego formatu lub dane były przechowywane z automatyczną konwersją na `false`wartość. `autoConvert`  
  
-   Parametr jest `false` i dane nie istnieją w <xref:System.Windows.Forms.DataObject> określonym formacie. `autoConvert`  
  
> [!NOTE]
>  Dane można przekonwertować na inny format, jeśli został on zapisany, określając, że konwersja jest dozwolona, i jeśli żądany format jest zgodny z zapisanym formatem. Na przykład dane przechowywane w formacie Unicode można przekonwertować na tekst.  
  
> [!NOTE]
>  Jeśli nie można pobrać danych, żaden wyjątek nie zostanie wygenerowany. Zamiast tego `false` zostanie zwrócony.  
  
   
  
## Examples  
 Poniższy przykład kodu określa, czy dane przechowywane obecnie w programie <xref:System.Windows.Forms.DataObject> są skojarzone z określonym formatem. Najpierw zostanie zainicjowany nowy <xref:System.Windows.Forms.DataObject> ciąg, który określa jego format jako tekst.  
  
 Następnie jest wykonywane zapytanie o dane skojarzone z formatem tekstowym, `autoConvert` określając parametr jako `false`. <xref:System.Windows.Forms.DataObject> Wynik tego zapytania jest drukowany w polu tekstowym.  
  
 Następnie jest wykonywane zapytanie o dane skojarzone z formatem ciągu, `autoConvert` określając parametr jako `true`. <xref:System.Windows.Forms.DataObject> Wyniki są drukowane w polu tekstowym. Ten kod wymaga, `textBox1` który został utworzony.  
  
 [!code-cpp[Classic DataObject.GetDataPresent1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetDataPresent1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetDataPresent1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetDataPresent1 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetDataPresent1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetDataPresent1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetFileDropList">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.StringCollection GetFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.StringCollection GetFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFileDropList () As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Specialized::StringCollection ^ GetFileDropList();" />
      <MemberSignature Language="F#" Value="abstract member GetFileDropList : unit -&gt; System.Collections.Specialized.StringCollection&#xA;override this.GetFileDropList : unit -&gt; System.Collections.Specialized.StringCollection" Usage="dataObject.GetFileDropList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera kolekcję nazw plików z obiektu danych.</summary>
        <returns>Zawiera nazwy plików lub <see langword="null" /> , jeśli obiekt danych nie zawiera żadnych <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> danych w formacie lub można go przekonwertować na ten format. <see cref="T:System.Collections.Specialized.StringCollection" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lista rozwijana plików jest kolekcją ciągów zawierających informacje o ścieżce dla plików.  
  
 Lista rozwijana plików jest przechowywana w obiekcie danych jako <xref:System.String> tablica. Ta metoda konwertuje tę tablicę na <xref:System.Collections.Specialized.StringCollection> i zwraca kolekcję.  
  
 Użyj metody <xref:System.Windows.Forms.DataObject.ContainsFileDropList%2A> , aby określić, czy obiekt danych zawiera listę rozwijaną plików przed pobraniem jej z tą metodą.  
  
 Użyj metody <xref:System.Windows.Forms.DataObject.SetFileDropList%2A> , aby dodać listę rozwijaną plików do obiektu danych.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.StringCollection" />
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsFileDropList" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFormats">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca listę wszystkich formatów, do których dane przechowywane w tym <see cref="T:System.Windows.Forms.DataObject" /> elemencie są skojarzone lub mogą być konwertowane na.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public virtual string[] GetFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetFormats" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFormats () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetFormats();" />
      <MemberSignature Language="F#" Value="abstract member GetFormats : unit -&gt; string[]&#xA;override this.GetFormats : unit -&gt; string[]" Usage="dataObject.GetFormats " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetFormats</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca listę wszystkich formatów, do których dane przechowywane w tym <see cref="T:System.Windows.Forms.DataObject" /> elemencie są skojarzone lub mogą być konwertowane na.</summary>
        <returns>Tablica typu <see cref="T:System.String" />zawierającego listę wszystkich formatów, które są obsługiwane przez dane przechowywane w tym obiekcie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj tę metodę, aby pobrać obsługiwane formaty danych przed <xref:System.Windows.Forms.DataObject.GetData%2A>wywołaniem. Zapoznaj <xref:System.Windows.Forms.DataFormats> się ze wstępnie zdefiniowanymi formatami.  
  
> [!NOTE]
>  Dane można przekonwertować na inny format, jeśli został on zapisany, określając, że konwersja jest dozwolona, i jeśli żądany format jest zgodny z zapisanym formatem. Na przykład dane przechowywane w formacie Unicode można przekonwertować na tekst.  
  
   
  
## Examples  
 Poniższy przykład kodu wykonuje zapytania a <xref:System.Windows.Forms.DataObject> dla formatów skojarzonych z danymi oraz formatów, do których dane mogą być konwertowane. Lista wyników zostanie wyświetlona w polu tekstowym. Ten kod wymaga, `textBox1` który został utworzony.  
  
 [!code-cpp[Classic DataObject.GetFormats1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetFormats1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetFormats1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetFormats1 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetFormats1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetFormats1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public virtual string[] GetFormats (bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats(bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFormats (autoConvert As Boolean) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetFormats(bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetFormats : bool -&gt; string[]&#xA;override this.GetFormats : bool -&gt; string[]" Usage="dataObject.GetFormats autoConvert" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoConvert"><see langword="true" />do pobrania wszystkie formaty przechowywane w tym <see cref="T:System.Windows.Forms.DataObject" /> elemencie są skojarzone z lub mogą być konwertowane na; <see langword="false" /> aby pobrać tylko natywne formaty danych.</param>
        <summary>Zwraca listę wszystkich formatów, do których dane przechowywane w tym <see cref="T:System.Windows.Forms.DataObject" /> elemencie są skojarzone lub mogą być konwertowane na, przy użyciu parametru automatycznej konwersji, aby określić, czy mają być pobierane tylko natywne formaty danych, czy też wszystkie formaty, do których można konwertować dane.</summary>
        <returns>Tablica typu <see cref="T:System.String" />zawierającego listę wszystkich formatów, które są obsługiwane przez dane przechowywane w tym obiekcie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj tę metodę, aby pobrać obsługiwane formaty danych przed <xref:System.Windows.Forms.DataObject.GetData%2A>wywołaniem. Zapoznaj <xref:System.Windows.Forms.DataFormats> się ze wstępnie zdefiniowanymi formatami.  
  
> [!NOTE]
>  Dane można przekonwertować na inny format, jeśli został on zapisany, określając, że konwersja jest dozwolona, i jeśli żądany format jest zgodny z zapisanym formatem. Na przykład dane przechowywane w formacie Unicode można przekonwertować na tekst.  
  
   
  
## Examples  
 Poniższy przykład kodu wykonuje zapytania a <xref:System.Windows.Forms.DataObject> dla formatów skojarzonych z danymi. Pierwsze zapytanie określa `autoConvert` parametr jako `false`, dlatego zwracany jest tylko format natywny danych. Drugie zapytanie określa `autoConvert` parametr jako `true`, dlatego lista formatów zawiera formaty, do których dane mogą być konwertowane.  
  
 Ten kod wymaga, `textBox1` który został utworzony.  
  
 [!code-cpp[Classic DataObject.GetFormats Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetFormats Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetFormats Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetFormats Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetFormats Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetFormats Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Image GetImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Drawing.Image GetImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetImage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetImage () As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Drawing::Image ^ GetImage();" />
      <MemberSignature Language="F#" Value="abstract member GetImage : unit -&gt; System.Drawing.Image&#xA;override this.GetImage : unit -&gt; System.Drawing.Image" Usage="dataObject.GetImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera obraz z obiektu danych.</summary>
        <returns>Reprezentuje dane obrazu w obiekcie danych lub <see langword="null" /> Jeśli obiekt danych nie zawiera żadnych <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> danych w formacie lub można go przekonwertować na ten format. <see cref="T:System.Drawing.Image" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Windows.Forms.DataObject.ContainsImage%2A> , aby określić, czy obiekt danych zawiera dane obrazu przed pobraniem go z tą metodą.  
  
 Użyj metody <xref:System.Windows.Forms.DataObject.SetImage%2A> , aby dodać dane obrazu do obiektu danych.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Image" />
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsImage" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera dane tekstowe z obiektu danych.</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public virtual string GetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetText () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetText();" />
      <MemberSignature Language="F#" Value="abstract member GetText : unit -&gt; string&#xA;override this.GetText : unit -&gt; string" Usage="dataObject.GetText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera dane tekstowe z obiektu danych w <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> formacie.</summary>
        <returns>Dane tekstowe w obiekcie danych lub <see cref="F:System.String.Empty" /> Jeśli obiekt danych nie zawiera danych <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> w formacie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Windows.Forms.DataObject.ContainsText%2A> , aby określić, czy obiekt danych zawiera dane tekstowe przed pobraniem go z tą metodą.  
  
 Użyj metody <xref:System.Windows.Forms.DataObject.SetText%2A> , aby dodać dane tekstowe do obiektu danych.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public virtual string GetText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetText (format As TextDataFormat) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetText(System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="abstract member GetText : System.Windows.Forms.TextDataFormat -&gt; string&#xA;override this.GetText : System.Windows.Forms.TextDataFormat -&gt; string" Usage="dataObject.GetText format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="format">Jedna z <see cref="T:System.Windows.Forms.TextDataFormat" /> wartości.</param>
        <summary>Pobiera dane tekstowe z obiektu danych w formacie wskazanym przez określoną <see cref="T:System.Windows.Forms.TextDataFormat" /> wartość.</summary>
        <returns>Dane tekstowe w obiekcie danych lub <see cref="F:System.String.Empty" /> Jeśli obiekt danych nie zawiera danych w określonym formacie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Windows.Forms.DataObject.ContainsText%2A> , aby określić, czy obiekt danych zawiera dane tekstowe przed pobraniem go z tą metodą.  
  
 Użyj metody <xref:System.Windows.Forms.DataObject.SetText%2A> , aby dodać dane tekstowe do obiektu danych.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="format" />nie jest prawidłową <see cref="T:System.Windows.Forms.TextDataFormat" /> wartością.</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAudio">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje dane do obiektu danych w <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> formacie.</summary>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetAudioStream" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public virtual void SetAudio (byte[] audioBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAudio(unsigned int8[] audioBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetAudio(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetAudio (audioBytes As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAudio(cli::array &lt;System::Byte&gt; ^ audioBytes);" />
      <MemberSignature Language="F#" Value="abstract member SetAudio : byte[] -&gt; unit&#xA;override this.SetAudio : byte[] -&gt; unit" Usage="dataObject.SetAudio audioBytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioBytes" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="audioBytes"><see cref="T:System.Byte" /> Tablica zawierająca dane audio.</param>
        <summary>Dodaje tablicę do obiektu danych <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> w formacie <see cref="T:System.IO.Stream" />po przeprowadzeniu konwersji na. <see cref="T:System.Byte" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby pobrać dane audio z obiektu danych, najpierw Użyj <xref:System.Windows.Forms.DataObject.ContainsAudio%2A> metody, aby określić, czy obiekt danych zawiera dane audio przed pobraniem go <xref:System.Windows.Forms.DataObject.GetAudioStream%2A> za pomocą metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="audioBytes" />jest <see langword="null" />.</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetAudioStream" />
      </Docs>
    </Member>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public virtual void SetAudio (System.IO.Stream audioStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAudio(class System.IO.Stream audioStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetAudio(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetAudio (audioStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAudio(System::IO::Stream ^ audioStream);" />
      <MemberSignature Language="F#" Value="abstract member SetAudio : System.IO.Stream -&gt; unit&#xA;override this.SetAudio : System.IO.Stream -&gt; unit" Usage="dataObject.SetAudio audioStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioStream" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="audioStream"><see cref="T:System.IO.Stream" /> Zawierający dane audio.</param>
        <summary>Dodaje do obiektu danych <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> w formacie. <see cref="T:System.IO.Stream" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby pobrać dane audio z obiektu danych, najpierw Użyj <xref:System.Windows.Forms.DataObject.ContainsAudio%2A> metody, aby określić, czy obiekt danych zawiera dane audio przed pobraniem go <xref:System.Windows.Forms.DataObject.GetAudioStream%2A> za pomocą metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="audioStream" />jest <see langword="null" />.</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetAudioStream" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetData">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje obiekt do <see cref="T:System.Windows.Forms.DataObject" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public virtual void SetData (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetData (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : obj -&gt; unit&#xA;override this.SetData : obj -&gt; unit" Usage="dataObject.SetData data" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.SetData(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">Dane do zapisania.</param>
        <summary>Dodaje określony obiekt do <see cref="T:System.Windows.Forms.DataObject" /> przy użyciu typu obiektu jako formatu danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]

 Jeśli nie znasz formatu aplikacji docelowej, możesz przechowywać dane w wielu formatach za pomocą tej metody. Dane przechowywane przy użyciu tej metody można przekonwertować na format zgodny podczas pobierania.  
  
 Przeciążenie zapisuje wartość w formacie, który określa przez wywołanie <xref:System.Object.GetType%2A?displayProperty=nameWithType> metody. `data` <xref:System.Windows.Forms.DataObject.SetData%28System.Object%29> Jeśli `data` <xref:System.Windows.DataFormats.Serializable> implementuje interfejs, to Przeciążenie zapisuje również wartość w formacie. <xref:System.Runtime.Serialization.ISerializable>  
  
   
  
## Examples  
 Poniższy przykład kodu przechowuje dane w <xref:System.Windows.Forms.DataObject>. Najpierw zostanie utworzony nowy <xref:System.Windows.Forms.DataObject> element i jest w nim przechowywany składnik. Następnie dane są pobierane przez określenie klasy. Wynik jest wyświetlany w polu tekstowym.  
  
 Ten kod wymaga, `textBox1` który został utworzony.  
  
 [!code-cpp[Classic DataObject.SetData3 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.SetData3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.SetData3 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.SetData3 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.SetData3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.SetData3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="N:System.Runtime.Serialization" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public virtual void SetData (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetData (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(System::String ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : string * obj -&gt; unit&#xA;override this.SetData : string * obj -&gt; unit" Usage="dataObject.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Format skojarzony z danymi. Zobacz <see cref="T:System.Windows.Forms.DataFormats" /> , aby uzyskać wstępnie zdefiniowane formaty.</param>
        <param name="data">Dane do zapisania.</param>
        <summary>Dodaje określony obiekt do <see cref="T:System.Windows.Forms.DataObject" /> przy użyciu określonego formatu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]

 Jeśli nie znasz formatu aplikacji docelowej, możesz przechowywać dane w wielu formatach za pomocą tej metody.  
  
 Dane przechowywane przy użyciu tej metody można przekonwertować na format zgodny podczas pobierania.  
  
   
  
## Examples  
 Poniższy przykład kodu przechowuje dane w <xref:System.Windows.Forms.DataObject>, określając jego format jako Unicode.  
  
 Następnie dane są pobierane przez określenie formatu tekstu, ponieważ domyślnie konwersja danych jest zgodna z formatem końcowym. Wynik jest wyświetlany w polu tekstowym.  
  
 Ten kod wymaga, `textBox1` który został utworzony.  
  
 [!code-cpp[Classic DataObject.SetData1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.SetData1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.SetData1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.SetData1 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.SetData1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.SetData1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public virtual void SetData (Type format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(class System.Type format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetData(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetData (format As Type, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(Type ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : Type * obj -&gt; unit&#xA;override this.SetData : Type * obj -&gt; unit" Usage="dataObject.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><see cref="T:System.Type" /> Reprezentujący format skojarzony z danymi.</param>
        <param name="data">Dane do zapisania.</param>
        <summary>Dodaje określony obiekt do <see cref="T:System.Windows.Forms.DataObject" /> przy użyciu określonego typu jako formatu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]

 Jeśli nie znasz formatu aplikacji docelowej, możesz przechowywać dane w wielu formatach za pomocą tej metody.  
  
 Dane przechowywane przy użyciu tej metody można przekonwertować na format zgodny podczas pobierania.  
  
   
  
## Examples  
 Poniższy przykład kodu zapisuje dane <xref:System.Windows.Forms.DataObject> przy użyciu a <xref:System.Type> jako format danych. Dane są następnie pobierane przez wywołanie <xref:System.Windows.Forms.DataObject.GetData%2A> przy użyciu polecenia, <xref:System.Type> aby określić format danych. Wynik jest wyświetlany w polu tekstowym.  
  
 Ten kod wymaga, `textBox1` który został utworzony.  
  
 [!code-cpp[Classic DataObject.SetData2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.SetData2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.SetData2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.SetData2 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.SetData2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.SetData2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public virtual void SetData (string format, bool autoConvert, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, bool autoConvert, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetData (format As String, autoConvert As Boolean, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(System::String ^ format, bool autoConvert, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : string * bool * obj -&gt; unit&#xA;override this.SetData : string * bool * obj -&gt; unit" Usage="dataObject.SetData (format, autoConvert, data)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Format skojarzony z danymi. Zobacz <see cref="T:System.Windows.Forms.DataFormats" /> , aby uzyskać wstępnie zdefiniowane formaty.</param>
        <param name="autoConvert"><see langword="true" />Aby umożliwić konwersję danych do innego formatu; w przeciwnym razie. <see langword="false" /></param>
        <param name="data">Dane do zapisania.</param>
        <summary>Dodaje określony obiekt do <see cref="T:System.Windows.Forms.DataObject" /> przy użyciu określonego formatu i wskazuje, czy dane można przekonwertować na inny format.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]

 Jeśli nie znasz formatu aplikacji docelowej, możesz przechowywać dane w wielu formatach za pomocą tej metody.  
  
   
  
## Examples  
 Poniższy przykład kodu przechowuje dane w <xref:System.Windows.Forms.DataObject> i określa, że dane mogą być pobierane tylko w formacie natywnym.  
  
 Najpierw zostanie utworzony nowy <xref:System.Windows.Forms.DataObject> . Dane w formacie Unicode są przechowywane w <xref:System.Windows.Forms.DataObject>, z `autoConvert` ustawioną na `false`.  
  
 <xref:System.Windows.Forms.DataObject> Następnie jest wykonywana zapytanie o listę dostępnych formatów danych. Zwracany jest tylko format Unicode, chociaż dane Unicode mogą być konwertowane na tekst i inne formaty.  
  
 Ten kod wymaga, `textBox1` który został utworzony.  
  
 [!code-cpp[Classic DataObject.SetData Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.SetData Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.SetData Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.SetData Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.SetData Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.SetData Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
      </Docs>
    </Member>
    <Member MemberName="SetFileDropList">
      <MemberSignature Language="C#" Value="public virtual void SetFileDropList (System.Collections.Specialized.StringCollection filePaths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFileDropList(class System.Collections.Specialized.StringCollection filePaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetFileDropList (filePaths As StringCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetFileDropList(System::Collections::Specialized::StringCollection ^ filePaths);" />
      <MemberSignature Language="F#" Value="abstract member SetFileDropList : System.Collections.Specialized.StringCollection -&gt; unit&#xA;override this.SetFileDropList : System.Collections.Specialized.StringCollection -&gt; unit" Usage="dataObject.SetFileDropList filePaths" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePaths" Type="System.Collections.Specialized.StringCollection" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="filePaths">A <see cref="T:System.Collections.Specialized.StringCollection" /> zawiera nazwy plików.</param>
        <summary>Dodaje kolekcję nazw plików do obiektu danych w <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> formacie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lista rozwijana plików jest kolekcją ciągów zawierających informacje o ścieżce dla plików.  
  
 Lista rozwijana plików jest przechowywana w obiekcie danych jako <xref:System.String> tablica. Ta metoda jest `filePaths` konwertowana <xref:System.String> na tablicę przed dodaniem jej do obiektu danych.  
  
 Aby pobrać listę rozwijaną plików z obiektu danych, najpierw Użyj <xref:System.Windows.Forms.DataObject.ContainsFileDropList%2A> metody, aby określić, czy obiekt danych zawiera dane w tym formacie przed pobraniem go <xref:System.Windows.Forms.DataObject.GetFileDropList%2A> z metodą.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="filePaths" />jest <see langword="null" />.</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsFileDropList" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFileDropList" />
      </Docs>
    </Member>
    <Member MemberName="SetImage">
      <MemberSignature Language="C#" Value="public virtual void SetImage (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetImage(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetImage(System.Drawing.Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetImage(System::Drawing::Image ^ image);" />
      <MemberSignature Language="F#" Value="abstract member SetImage : System.Drawing.Image -&gt; unit&#xA;override this.SetImage : System.Drawing.Image -&gt; unit" Usage="dataObject.SetImage image" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="image"><see cref="T:System.Drawing.Image" /> Do dodania do obiektu danych.</param>
        <summary>Dodaje do obiektu danych <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> w formacie. <see cref="T:System.Drawing.Image" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby pobrać dane obrazu z obiektu danych, należy najpierw użyć <xref:System.Windows.Forms.DataObject.ContainsImage%2A> metody, aby określić, czy obiekt danych zawiera dane obrazu przed pobraniem go <xref:System.Windows.Forms.DataObject.GetImage%2A> za pomocą metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="image" />jest <see langword="null" />.</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsImage" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetImage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje dane tekstowe do obiektu danych.</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public virtual void SetText (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetText(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetText (textData As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetText(System::String ^ textData);" />
      <MemberSignature Language="F#" Value="abstract member SetText : string -&gt; unit&#xA;override this.SetText : string -&gt; unit" Usage="dataObject.SetText textData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="textData">Tekst, który ma zostać dodany do obiektu danych.</param>
        <summary>Dodaje dane tekstowe do obiektu danych w <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> formacie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby pobrać dane tekstowe z obiektu danych, najpierw Użyj <xref:System.Windows.Forms.DataObject.ContainsText%2A> metody, aby określić, czy obiekt danych zawiera dane obrazu przed pobraniem go <xref:System.Windows.Forms.DataObject.GetText%2A> za pomocą metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="textData" />jest <see langword="null" /> lub <see cref="F:System.String.Empty" />.</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
      </Docs>
    </Member>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public virtual void SetText (string textData, System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetText(string textData, valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetText(System.String,System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetText (textData As String, format As TextDataFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetText(System::String ^ textData, System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="abstract member SetText : string * System.Windows.Forms.TextDataFormat -&gt; unit&#xA;override this.SetText : string * System.Windows.Forms.TextDataFormat -&gt; unit" Usage="dataObject.SetText (textData, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="textData">Tekst, który ma zostać dodany do obiektu danych.</param>
        <param name="format">Jedna z <see cref="T:System.Windows.Forms.TextDataFormat" /> wartości.</param>
        <summary>Dodaje dane tekstowe do obiektu danych w formacie wskazanym przez określoną <see cref="T:System.Windows.Forms.TextDataFormat" /> wartość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby pobrać dane tekstowe z obiektu danych, najpierw Użyj <xref:System.Windows.Forms.DataObject.ContainsText%2A> metody, aby określić, czy obiekt danych zawiera dane obrazu przed pobraniem go <xref:System.Windows.Forms.DataObject.GetText%2A> za pomocą metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="textData" />jest <see langword="null" /> lub <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="format" />nie jest prawidłową <see cref="T:System.Windows.Forms.TextDataFormat" /> wartością.</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise">
      <MemberSignature Language="C#" Value="int IDataObject.DAdvise (ref System.Runtime.InteropServices.ComTypes.FORMATETC pFormatetc, System.Runtime.InteropServices.ComTypes.ADVF advf, System.Runtime.InteropServices.ComTypes.IAdviseSink pAdvSink, out int pdwConnection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pFormatetc, valuetype System.Runtime.InteropServices.ComTypes.ADVF advf, class System.Runtime.InteropServices.ComTypes.IAdviseSink pAdvSink, [out] int32&amp; pdwConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System::Runtime::InteropServices::ComTypes::FORMATETC % pFormatetc, System::Runtime::InteropServices::ComTypes::ADVF advf, System::Runtime::InteropServices::ComTypes::IAdviseSink ^ pAdvSink, [Runtime::InteropServices::Out] int % pdwConnection) = System::Runtime::InteropServices::ComTypes::IDataObject::DAdvise;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pFormatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="ref" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="advf" Type="System.Runtime.InteropServices.ComTypes.ADVF" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="pAdvSink" Type="System.Runtime.InteropServices.ComTypes.IAdviseSink" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="pdwConnection" Type="System.Int32" RefType="out" Index="3" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="pFormatetc"><see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> Struktura, która została przeniesiona przez odwołanie, która definiuje format, urządzenie docelowe, aspekt i średni, który będzie używany na potrzeby przyszłych powiadomień.</param>
        <param name="advf">Jedna z <see cref="T:System.Runtime.InteropServices.ComTypes.ADVF" /> wartości, która określa grupę flag do kontrolowania połączenia Doradczego.</param>
        <param name="pAdvSink">Wskaźnik do <see cref="T:System.Runtime.InteropServices.ComTypes.IAdviseSink" /> interfejsu w zlewce doradcy, który otrzyma powiadomienie o zmianie.</param>
        <param name="pdwConnection">Gdy ta metoda zwraca, zawiera wskaźnik do tokenu typu DWORD, który identyfikuje to połączenie. Możesz użyć tego tokenu później, aby usunąć połączenie doradcze, przekazując je do <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(System.Int32)" />. Jeśli ta wartość wynosi zero, połączenie nie zostało nawiązane. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Tworzy połączenie między obiektem danych i ujściam doradczym. Ta metoda jest wywoływana przez obiekt, który obsługuje ujścia doradcy i pozwala na powiadomienie ujścia doradcy o zmianach w danych obiektu.</summary>
        <returns>Ta metoda obsługuje standardowe wartości zwracane E_INVALIDARG, E_UNEXPECTED i E_OUTOFMEMORY, a także następujące: 
 <list type="table"><listheader><term> Wartość 
 </term><description> Opis 
 </description></listheader><item><term> S_OK 
 </term><description> Połączenie doradcze zostało utworzone.  
  
 </description></item><item><term> E_NOTIMPL 
 </term><description> Ta metoda nie jest zaimplementowana dla obiektu danych.  
  
 </description></item><item><term> DV_E_LINDEX 
 </term><description> Wartość parametru <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />jest nieprawidłowa: obecnie obsługiwana jest tylko-1.  
  
 </description></item><item><term> DV_E_FORMATETC 
 </term><description> Nieprawidłowa wartość <paramref name="pFormatetc" /> parametru.  
  
 </description></item><item><term> OLE_E_ADVISENOTSUPPORTED 
 </term><description> Obiekt danych nie obsługuje powiadomienia o zmianie.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.DataObject> gdy jest rzutowane <xref:System.Runtime.InteropServices.ComTypes.IDataObject> do interfejsu.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Wywoływanie niezarządzanego kodu. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise">
      <MemberSignature Language="C#" Value="void IDataObject.DUnadvise (int dwConnection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(int32 dwConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#DUnadvise(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub DUnadvise (dwConnection As Integer) Implements IDataObject.DUnadvise" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(int dwConnection) = System::Runtime::InteropServices::ComTypes::IDataObject::DUnadvise;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dwConnection" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dwConnection">Token typu DWORD, który określa połączenie do usunięcia. Użyj wartości zwróconej przez <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" /> czas, gdy połączenie zostało pierwotnie nawiązane.</param>
        <summary>Niszczy połączenie powiadomień, które zostało wcześniej ustanowione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.DataObject> gdy jest rzutowane <xref:System.Runtime.InteropServices.ComTypes.IDataObject> do interfejsu.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Wywoływanie niezarządzanego kodu. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise">
      <MemberSignature Language="C#" Value="int IDataObject.EnumDAdvise (out System.Runtime.InteropServices.ComTypes.IEnumSTATDATA enumAdvise);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise([out] class System.Runtime.InteropServices.ComTypes.IEnumSTATDATA&amp; enumAdvise) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#EnumDAdvise(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)" />
      <MemberSignature Language="VB.NET" Value="Function EnumDAdvise (ByRef enumAdvise As IEnumSTATDATA) As Integer Implements IDataObject.EnumDAdvise" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise([Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::IEnumSTATDATA ^ % enumAdvise) = System::Runtime::InteropServices::ComTypes::IDataObject::EnumDAdvise;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumAdvise" Type="System.Runtime.InteropServices.ComTypes.IEnumSTATDATA" RefType="out" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="enumAdvise">Gdy ta metoda zwraca, zawiera element <see cref="T:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA" /> , który odbiera wskaźnik interfejsu do nowego obiektu modułu wyliczającego. Jeśli implementacja jest <paramref name="enumAdvise" /> ustawiana <see langword="null" />na, w tej chwili nie ma połączeń z ujściami doradców. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Tworzy obiekt, którego można użyć do wyliczenia bieżących połączeń doradczych.</summary>
        <returns>Ta metoda obsługuje standardową wartość zwracaną E_OUTOFMEMORY, a także następujące:  
  
 <list type="table"><listheader><term> Wartość  
  
 </term><description> Opis  
  
 </description></listheader><item><term> S_OK  
  
 </term><description> Obiekt modułu wyliczającego został pomyślnie skonkretyzowany lub nie ma żadnych połączeń.  
  
 </description></item><item><term> OLE_E_ADVISENOTSUPPORTED  
  
 </term><description> Ten obiekt nie obsługuje powiadomień doradczych.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.DataObject> gdy jest rzutowane <xref:System.Runtime.InteropServices.ComTypes.IDataObject> do interfejsu.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Wywoływanie niezarządzanego kodu. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc">
      <MemberSignature Language="C#" Value="System.Runtime.InteropServices.ComTypes.IEnumFORMATETC IDataObject.EnumFormatEtc (System.Runtime.InteropServices.ComTypes.DATADIR dwDirection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Runtime.InteropServices.ComTypes.IEnumFORMATETC System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(valuetype System.Runtime.InteropServices.ComTypes.DATADIR dwDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)" />
      <MemberSignature Language="VB.NET" Value="Function EnumFormatEtc (dwDirection As DATADIR) As IEnumFORMATETC Implements IDataObject.EnumFormatEtc" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Runtime::InteropServices::ComTypes::IEnumFORMATETC ^ System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System::Runtime::InteropServices::ComTypes::DATADIR dwDirection) = System::Runtime::InteropServices::ComTypes::IDataObject::EnumFormatEtc;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.ComTypes.IEnumFORMATETC</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dwDirection" Type="System.Runtime.InteropServices.ComTypes.DATADIR" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dwDirection">Jedna z <see cref="T:System.Runtime.InteropServices.ComTypes.DATADIR" /> wartości, która określa kierunek danych.</param>
        <summary>Tworzy obiekt do wyliczania <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> struktur dla obiektu danych. Te struktury są używane w wywołaniach <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> do <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />lub.</summary>
        <returns>Ta metoda obsługuje standardowe wartości zwracane E_INVALIDARG i E_OUTOFMEMORY, a także następujące: 
 <list type="table"><listheader><term> Wartość 
 </term><description> Opis 
 </description></listheader><item><term> S_OK 
 </term><description> Obiekt modułu wyliczającego został pomyślnie utworzony.  
  
 </description></item><item><term> E_NOTIMPL 
 </term><description> Kierunek określony przez <paramref name="direction" /> parametr nie jest obsługiwany.  
  
 </description></item><item><term> OLE_S_USEREG 
 </term><description> Żądania, które OLE wyliczają formaty z rejestru.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.DataObject> gdy jest rzutowane <xref:System.Runtime.InteropServices.ComTypes.IDataObject> do interfejsu.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Wywoływanie niezarządzanego kodu. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc">
      <MemberSignature Language="C#" Value="int IDataObject.GetCanonicalFormatEtc (ref System.Runtime.InteropServices.ComTypes.FORMATETC pformatetcIn, out System.Runtime.InteropServices.ComTypes.FORMATETC pformatetcOut);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pformatetcIn, [out] valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pformatetcOut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)" />
      <MemberSignature Language="VB.NET" Value="Function GetCanonicalFormatEtc (ByRef pformatetcIn As FORMATETC, ByRef pformatetcOut As FORMATETC) As Integer Implements IDataObject.GetCanonicalFormatEtc" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System::Runtime::InteropServices::ComTypes::FORMATETC % pformatetcIn, [Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::FORMATETC % pformatetcOut) = System::Runtime::InteropServices::ComTypes::IDataObject::GetCanonicalFormatEtc;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pformatetcIn" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="ref" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="pformatetcOut" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="out" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="pformatetcIn">Wskaźnik do <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> struktury, który został przesłany przez odwołanie, który definiuje format, nośnik i urządzenie docelowe, których obiekt wywołujący ma używać do pobierania danych w kolejnym wywołaniu, takim jak <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. W tym przypadku element członkowski nie ma znaczenia i powinien zostać zignorowany. <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /></param>
        <param name="pformatetcOut">Gdy ta metoda zwraca, zawiera wskaźnik do <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> struktury zawierającej najbardziej ogólne informacje możliwe do określonego renderowania, co sprawia, że jest to kanoniczny odpowiednik <c>formatetcIn</c>. Obiekt wywołujący musi przydzielić tę strukturę <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)" /> , a metoda musi wypełnić dane. Aby pobrać dane w kolejnym wywołaniu, takim jak <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />, obiekt wywołujący używa dostarczonej wartości <c>formatOut</c>, chyba że podana wartość to <see langword="null" />. Ta wartość jest <see langword="null" /> w przypadku, gdy <see langword="DATA_S_SAMEFORMATETC" />Metoda zwraca. W tym przypadku element członkowski nie ma znaczenia i powinien zostać zignorowany. <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Zapewnia standardową <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> strukturę, która jest logicznie równoważna z bardziej złożoną strukturą. Użyj tej metody, aby określić, czy <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> dwie różne struktury zwracają te same dane, co eliminuje konieczność renderowania duplikatów.</summary>
        <returns>Ta metoda obsługuje standardowe wartości zwracane E_INVALIDARG, E_UNEXPECTED i E_OUTOFMEMORY, a także następujące: 
 <list type="table"><listheader><term> Wartość 
 </term><description> Opis 
 </description></listheader><item><term> S_OK 
 </term><description> Zwracana <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> struktura różni się od tej, która została przekazana.  
  
 </description></item><item><term> DATA_S_SAMEFORMATETC 
 </term><description> Struktury są takie same i <see langword="null" /> są zwracane w <paramref name="formatOut" /> parametrze. <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />  
  
 </description></item><item><term> DV_E_LINDEX 
 </term><description> Wartość parametru <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />jest nieprawidłowa: obecnie obsługiwana jest tylko-1.  
  
 </description></item><item><term> DV_E_FORMATETC 
 </term><description> Nieprawidłowa wartość <paramref name="pFormatetc" /> parametru.  
  
 </description></item><item><term> OLE_E_NOTRUNNING 
 </term><description> Aplikacja nie jest uruchomiona.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.DataObject> gdy jest rzutowane <xref:System.Runtime.InteropServices.ComTypes.IDataObject> do interfejsu.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Wywoływanie niezarządzanego kodu. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.GetData">
      <MemberSignature Language="C#" Value="void IDataObject.GetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc, out System.Runtime.InteropServices.ComTypes.STGMEDIUM medium);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.GetData(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; formatetc, [out] valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp; medium) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetData (ByRef formatetc As FORMATETC, ByRef medium As STGMEDIUM) Implements IDataObject.GetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System::Runtime::InteropServices::ComTypes::FORMATETC % formatetc, [Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::STGMEDIUM % medium) = System::Runtime::InteropServices::ComTypes::IDataObject::GetData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="ref" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="medium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM" RefType="out" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="formatetc">Wskaźnik do <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> struktury, przekazywany przez odwołanie, który definiuje format, średni i urządzenie docelowe do użycia podczas przekazywania danych. Można określić więcej niż jeden nośnik przy użyciu operatora logicznego OR, co pozwala metodu wybrać najlepszy nośnik spośród określonych.</param>
        <param name="medium">Gdy ta metoda zwraca, zawiera wskaźnik do <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> struktury, który wskazuje nośnik magazynu zawierający zwrócone dane za pomocą jego <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.tymed" /> elementu członkowskiego, oraz odpowiedzialność za zwolnienie nośnika przez wartość jego <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" />element członkowski. Jeśli <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> jest <see langword="null" />, odbiorca nośnika jest odpowiedzialny za jego zwolnienie; <see langword="IUnknown" /> w przeciwnym razie wskazuje interfejs na odpowiednim obiekcie, aby <see langword="Release" /> można było wywołać metodę. Średni musi być alokowany i wypełniany przez <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Pobiera dane z obiektu danych źródłowych. Metoda, która jest wywoływana przez odbiorcę danych, renderuje dane opisane w określonej <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> strukturze i przesyła je przez określoną <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> strukturę. <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> Następnie wywołujący przyjmuje odpowiedzialność za zwolnienie <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> struktury.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.DataObject> gdy jest rzutowane <xref:System.Runtime.InteropServices.ComTypes.IDataObject> do interfejsu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">Za mało pamięci, aby wykonać tę operację.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Wywoływanie niezarządzanego kodu. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere">
      <MemberSignature Language="C#" Value="void IDataObject.GetDataHere (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc, ref System.Runtime.InteropServices.ComTypes.STGMEDIUM medium);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; formatetc, valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp; medium) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetDataHere (ByRef formatetc As FORMATETC, ByRef medium As STGMEDIUM) Implements IDataObject.GetDataHere" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System::Runtime::InteropServices::ComTypes::FORMATETC % formatetc, System::Runtime::InteropServices::ComTypes::STGMEDIUM % medium) = System::Runtime::InteropServices::ComTypes::IDataObject::GetDataHere;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="ref" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="medium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM" RefType="ref" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="formatetc">Wskaźnik do <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> struktury, przekazywany przez odwołanie, który definiuje format, średni i urządzenie docelowe do użycia podczas przekazywania danych. W programie <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" />można określić tylko jeden nośnik, a tylko następujące <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> wartości są prawidłowe: <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTORAGE" />, <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTREAM" />, <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_HGLOBAL" />, lub <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_FILE" />.</param>
        <param name="medium">A <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, przekazane przez odwołanie, które definiuje nośnik magazynu zawierający przesyłane dane. Średni musi być alokowany przez obiekt wywołujący i wypełniany przez <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. Obiekt wywołujący musi również zwolnić średnią. Implementacja tej metody musi zawsze podawać wartość <see langword="null" /> <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> dla składowej <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> struktury, do której wskazuje ten parametr.</param>
        <summary>Pobiera dane z obiektu danych źródłowych. Ta metoda, która jest wywoływana przez odbiorcę danych, różni się <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> od metody w tym, że obiekt wywołujący musi przydzielić i zwolnić określony nośnik magazynu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.DataObject> gdy jest rzutowane <xref:System.Runtime.InteropServices.ComTypes.IDataObject> do interfejsu.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Wywoływanie niezarządzanego kodu. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData">
      <MemberSignature Language="C#" Value="int IDataObject.QueryGetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; formatetc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#QueryGetData(System.Runtime.InteropServices.ComTypes.FORMATETC@)" />
      <MemberSignature Language="VB.NET" Value="Function QueryGetData (ByRef formatetc As FORMATETC) As Integer Implements IDataObject.QueryGetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(System::Runtime::InteropServices::ComTypes::FORMATETC % formatetc) = System::Runtime::InteropServices::ComTypes::IDataObject::QueryGetData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(System.Runtime.InteropServices.ComTypes.FORMATETC@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="ref" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="formatetc">Wskaźnik do <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> struktury, zakończony przez odwołanie, który definiuje format, średni i urządzenie docelowe do użycia w zapytaniu.</param>
        <summary>Określa, czy obiekt danych jest w stanie zrenderować dane opisane w <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> strukturze. Obiekty próbujące wykonać operację wklejenia lub upuść mogą wywołać tę metodę przed wywołaniem <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> , aby uzyskać informację o tym, czy operacja może zakończyć się pomyślnie.</summary>
        <returns>Ta metoda obsługuje standardowe wartości zwracane E_INVALIDARG, E_UNEXPECTED i E_OUTOFMEMORY, a także następujące: 
 <list type="table"><listheader><term> Wartość 
 </term><description> Opis 
 </description></listheader><item><term> S_OK 
 </term><description> Kolejne wywołanie <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> prawdopodobnie zakończyło się pomyślnie.  
  
 </description></item><item><term> DV_E_LINDEX 
 </term><description> Nieprawidłowa wartość parametru <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; obecnie jest obsługiwana tylko-1.  
  
 </description></item><item><term> DV_E_FORMATETC 
 </term><description> Nieprawidłowa wartość <paramref name="pFormatetc" /> parametru.  
  
 </description></item><item><term> DV_E_TYMED 
 </term><description> Nieprawidłowa <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.tymed" /> wartość.  
  
 </description></item><item><term> DV_E_DVASPECT 
 </term><description> Nieprawidłowa <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect" /> wartość.  
  
 </description></item><item><term> OLE_E_NOTRUNNING 
 </term><description> Aplikacja nie jest uruchomiona.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.DataObject> gdy jest rzutowane <xref:System.Runtime.InteropServices.ComTypes.IDataObject> do interfejsu.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Wywoływanie niezarządzanego kodu. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.SetData">
      <MemberSignature Language="C#" Value="void IDataObject.SetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC pFormatetcIn, ref System.Runtime.InteropServices.ComTypes.STGMEDIUM pmedium, bool fRelease);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.SetData(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pFormatetcIn, valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp; pmedium, bool fRelease) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Sub SetData (ByRef pFormatetcIn As FORMATETC, ByRef pmedium As STGMEDIUM, fRelease As Boolean) Implements IDataObject.SetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System::Runtime::InteropServices::ComTypes::FORMATETC % pFormatetcIn, System::Runtime::InteropServices::ComTypes::STGMEDIUM % pmedium, bool fRelease) = System::Runtime::InteropServices::ComTypes::IDataObject::SetData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pFormatetcIn" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="ref" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="pmedium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM" RefType="ref" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="fRelease" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="pFormatetcIn"><see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> Struktura, która została przeniesiona przez odwołanie, która definiuje format używany przez obiekt danych podczas interpretowania danych znajdujących się na nośniku magazynującym.</param>
        <param name="pmedium"><see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> Struktura, która została przeniesiona przez odwołanie, która definiuje nośnik magazynu, w którym są przesyłane dane.</param>
        <param name="fRelease"><see langword="true" />Aby określić, że obiekt danych jest wywoływany, <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />który implementuje nośnik magazynu po wywołaniu wywołania. Oznacza to, że obiekt danych musi zwolnić nośnik po użyciu, wywołując <see langword="ReleaseStgMedium" /> funkcję. <see langword="false" />Aby określić, że obiekt wywołujący zachowuje własność nośnika magazynu, a obiekt danych o nazwie używa nośnika magazynu tylko na czas trwania wywołania.</param>
        <summary>Przesyła dane do obiektu, który implementuje tę metodę. Ta metoda jest wywoływana przez obiekt, który zawiera źródło danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.DataObject> gdy jest rzutowane <xref:System.Runtime.InteropServices.ComTypes.IDataObject> do interfejsu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Ta metoda nie obsługuje typu bazowego obiektu danych.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Wywoływanie niezarządzanego kodu. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>
