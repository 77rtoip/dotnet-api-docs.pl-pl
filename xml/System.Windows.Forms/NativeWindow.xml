<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="NativeWindow.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d4a3ca7cdea7a8179f3cad217bcd84e9c7f3aad2.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d4a3ca7cdea7a8179f3cad217bcd84e9c7f3aad2</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.NativeWindow">
          <source>Provides a low-level encapsulation of a window handle and a window procedure.</source>
          <target state="translated">Niskiego poziomu hermetyzację uchwyt okna i procedurę okna.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.NativeWindow">
          <source>This class automatically manages window class creation and registration.</source>
          <target state="translated">Ta klasa automatycznie zarządza Tworzenie klasy okien i rejestracji.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.NativeWindow">
          <source>A window is not eligible for garbage collection when it is associated with a window handle.</source>
          <target state="translated">Okno nie jest uprawniony do wyrzucanie elementów bezużytecznych, gdy jest on skojarzony z uchwytu okna.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.NativeWindow">
          <source>To ensure proper garbage collection, handles must either be destroyed manually using <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A&gt;</ph> or released using <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</ph>.</source>
          <target state="translated">W celu zapewnienia prawidłowego wyrzucanie elementów bezużytecznych, uchwytów musi albo zostać zniszczone ręcznie przy użyciu <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A&gt;</ph> lub przy użyciu <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.NativeWindow">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</ph> method is called when the WM_NCDESTROY message is processed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</ph> Metoda jest wywoływana podczas przetwarzania wiadomości WM_NCDESTROY.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.NativeWindow">
          <source>This means there are cases in which when you do not need to manually call <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</ph>, but it is good practice to do so.</source>
          <target state="translated">Oznacza to, istnieją przypadki, w których gdy jest konieczne ręczne wywołać <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</ph>, ale jest dobrym rozwiązaniem, aby to zrobić.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.NativeWindow">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> class provides the following properties and methods to manage handles: <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.NativeWindow.CreateHandle%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.NativeWindow.AssignHandle%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> Klasa udostępnia poniższe właściwości i metod do zarządzania uchwytów: <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.NativeWindow.CreateHandle%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.NativeWindow.AssignHandle%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A&gt;</ph>, i <ph id="ph6">&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.NativeWindow">
          <source>The following code example demonstrates intercepting operating system window messages in a window procedure, and creating a window with a specific operating system window class name.</source>
          <target state="translated">Poniższy przykład kodu pokazuje przechwytywaniu komunikaty okna systemu operacyjnego w procedurę okna i tworzenia okna z określonym systemem operacyjnym nazwa klasy okna.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.NativeWindow">
          <source>The example creates two classes that inherit from <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> that accomplish this.</source>
          <target state="translated">W przykładzie jest tworzony dwie klasy, które dziedziczą z <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> który w tym celu.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.NativeWindow">
          <source>The <ph id="ph1">`MyNativeWindowListener`</ph> class hooks into the window procedure of the form passed into the constructor, and overrides the <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</ph> method to intercept the <ph id="ph3">`WM_ACTIVATEAPP`</ph> window message.</source>
          <target state="translated"><ph id="ph1">`MyNativeWindowListener`</ph> Przechwytuje do procedury okna formularza przekazany do konstruktora klasy i zastępuje <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</ph> metodę, aby przechwycić <ph id="ph3">`WM_ACTIVATEAPP`</ph> komunikatów okien.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.NativeWindow">
          <source>The class demonstrates the usage of the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.AssignHandle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</ph> methods to identify the window handle the <ph id="ph3">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> will use.</source>
          <target state="translated">Klasa przedstawia użycie <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.AssignHandle%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</ph> metodami do identyfikowania uchwytu okna <ph id="ph3">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> będzie używana.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.NativeWindow">
          <source>The handle is assign based upon the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType&gt;</ph> events.</source>
          <target state="translated">Dojście jest przypisywanie na podstawie <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType&gt;</ph> i <ph id="ph2">&lt;xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType&gt;</ph> zdarzenia.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.NativeWindow">
          <source>When the <ph id="ph1">`WM_ACTIVATEAPP`</ph> window message is received, the class calls the <ph id="ph2">`form1.ApplicationActivated`</ph> method.</source>
          <target state="translated">Gdy <ph id="ph1">`WM_ACTIVATEAPP`</ph> okna wiadomość zostanie odebrana, wywołania klasy <ph id="ph2">`form1.ApplicationActivated`</ph> metody.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.NativeWindow">
          <source>The <ph id="ph1">`MyNativeWindow`</ph> class creates a new window with the <ph id="ph2">&lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;</ph> set to <ph id="ph3">`BUTTON`</ph>.</source>
          <target state="translated"><ph id="ph1">`MyNativeWindow`</ph> Klasy tworzy nowe okno z <ph id="ph2">&lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;</ph> ustawioną <ph id="ph3">`BUTTON`</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.NativeWindow">
          <source>The class demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.CreateHandle%2A&gt;</ph> method and overriding the <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</ph> method to intercept window messages that are received.</source>
          <target state="translated">Przedstawia klasy przy użyciu <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.CreateHandle%2A&gt;</ph> — metoda i zastępowanie <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</ph> metody do przechwycenia okna komunikatów, które są odbierane.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.NativeWindow">
          <source>for the immediate caller to call unmanaged code.</source>
          <target state="translated">do obiektu wywołującego bezpośrednio wywoływać kodu niezarządzanego.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.NativeWindow">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Wyliczenie skojarzone: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.#ctor">
          <source>Initializes an instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.NativeWindow" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Windows.Forms.NativeWindow" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.#ctor">
          <source>This is the default <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.%23ctor%2A&gt;</ph> constructor provided by the compiler.</source>
          <target state="translated">Jest to domyślny <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.%23ctor%2A&gt;</ph> Konstruktor udostępniane przez kompilator.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> class also has a static constructor that initializes application domain-wide message handlers and hash tables.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> Klasa ma również statycznego konstruktora, który inicjuje programy obsługi wiadomości w całej domenie aplikacji i tabele wyznaczania wartości skrótu.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)">
          <source>The handle to assign to this window.</source>
          <target state="translated">Dojście do przypisania do tego okna.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)">
          <source>Assigns a handle to this window.</source>
          <target state="translated">Przypisuje dojścia do tego okna.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</ph> intercepts window messages sent to the <ph id="ph2">`handle`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</ph> przechwytuje okna komunikatów wysyłanych do <ph id="ph2">`handle`</ph> parametru.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</ph> to reset the handle's window procedure to the default window procedure.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</ph> mają zostać przywrócone procedurę okna uchwytu domyślną procedurę okna.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.AssignHandle%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt;</ph> method to indicate that the value of the <ph id="ph3">&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</ph> property has changed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.AssignHandle%2A&gt;</ph> Wywołania metody <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt;</ph> metody w celu wskazania, że wartość <ph id="ph3">&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</ph> właściwość zostanie zmieniona.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)">
          <source>The handle to assign cannot be in a different application process.</source>
          <target state="translated">Dojście do przypisania nie może być w procesie inną aplikację.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)">
          <source>The following code example demonstrates intercepting operating system window messages in a window procedure.</source>
          <target state="translated">Poniższy przykład kodu pokazuje przechwycenia systemu operacyjnego okna komunikatów w procedurę okna.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)">
          <source>The example creates a class that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> to accomplish this.</source>
          <target state="translated">W przykładzie jest tworzony klasy, która dziedziczy <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> w tym celu.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)">
          <source>The <ph id="ph1">`MyNativeWindowListener`</ph> class hooks into the window procedure of the form passed into the constructor, and overrides the <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</ph> method to intercepts the <ph id="ph3">`WM_ACTIVATEAPP`</ph> window message.</source>
          <target state="translated"><ph id="ph1">`MyNativeWindowListener`</ph> Przechwytuje do procedury okna formularza przekazany do konstruktora klasy i zastępuje <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</ph> metodę przechwytuje <ph id="ph3">`WM_ACTIVATEAPP`</ph> komunikatów okien.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)">
          <source>The class demonstrates the use of the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.AssignHandle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</ph> methods to identify which window handle the <ph id="ph3">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> will use.</source>
          <target state="translated">Klasa zademonstrowano użycie <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.AssignHandle%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</ph> metodami do identyfikowania które okno obsługi <ph id="ph3">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> będzie używana.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)">
          <source>The handle is assigned based upon the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType&gt;</ph> events.</source>
          <target state="translated">Dojście jest przypisany na podstawie <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType&gt;</ph> i <ph id="ph2">&lt;xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType&gt;</ph> zdarzenia.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)">
          <source>When the <ph id="ph1">`WM_ACTIVATEAPP`</ph> window message is received, the class calls the <ph id="ph2">`form1.ApplicationActivated`</ph> method.</source>
          <target state="translated">Gdy <ph id="ph1">`WM_ACTIVATEAPP`</ph> okna wiadomość zostanie odebrana, wywołania klasy <ph id="ph2">`form1.ApplicationActivated`</ph> metody.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)">
          <source>This code is an excerpt from the example shown in the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> class overview.</source>
          <target state="translated">Ten kod jest fragment przykład pokazany na <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> Przegląd klasy.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)">
          <source>Some code is not shown for the purpose of brevity.</source>
          <target state="translated">Kod nie jest wyświetlana wyłącznie w celu skrócenia.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> for the whole code listing.</source>
          <target state="translated">Zobacz <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> listę całego kodu.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)">
          <source>This window already has a handle.</source>
          <target state="translated">To okno ma już dojścia.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)">
          <source>The windows procedure for the associated native window could not be retrieved.</source>
          <target state="translated">Nie można pobrać procedury windows skojarzone okna macierzystego.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.CreateParams" /&gt;</ph> that specifies the creation parameters for this window.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.CreateParams" /&gt;</ph> , który określa parametry tworzenia dla tego okna.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>Creates a window and its handle with the specified creation parameters.</source>
          <target state="translated">Tworzy i uchwytu okna z parametrami tworzenia określony.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>The <ph id="ph1">`cp`</ph> parameter specifies the values that are passed to the native Win32 <ph id="ph2">`CreateWindowEx`</ph> method to create a window and its handle.</source>
          <target state="translated"><ph id="ph1">`cp`</ph> Parametr określa wartości, które są przekazywane do natywnej Win32 <ph id="ph2">`CreateWindowEx`</ph> metodę w celu utworzenia i uchwytu okna.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;</ph> field is not <ph id="ph2">`null`</ph>, the newly created window handle inherits from the specified class.</source>
          <target state="translated">Gdy <ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;</ph> pole nie jest <ph id="ph2">`null`</ph>, uchwytu okna nowo utworzony dziedziczy określonej klasy.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>For example, if <ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;</ph> is set to <ph id="ph2">`BUTTON`</ph>, the newly created window is based on the Win32 <ph id="ph3">`BUTTON`</ph> window class.</source>
          <target state="translated">Na przykład jeśli <ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;</ph> ustawiono <ph id="ph2">`BUTTON`</ph>, nowo utworzony okna jest oparta na Win32 <ph id="ph3">`BUTTON`</ph> klasy okna.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams.Param%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;</ph> object must either be <ph id="ph3">`null`</ph> or reference an instance of a class that was declared as a structure.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams.Param%2A&gt;</ph> Właściwość <ph id="ph2">&lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;</ph> obiektu musi być <ph id="ph3">`null`</ph> lub odwołania do wystąpienia klasy, która została zadeklarowana jako struktura.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>This code is an excerpt from the example shown in the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> class overview.</source>
          <target state="translated">Ten kod jest fragment przykład pokazany na <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> Przegląd klasy.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>Some code is not shown for the purpose of brevity.</source>
          <target state="translated">Kod nie jest wyświetlana wyłącznie w celu skrócenia.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> for the whole code listing.</source>
          <target state="translated">Zobacz <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> listę całego kodu.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>The class name provided is registered with the operating system.</source>
          <target state="translated">Podana nazwa klasy jest zarejestrowany w systemie operacyjnym.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>The following code example demonstrates creating a window with a specific operating system window class name.</source>
          <target state="translated">Poniższy przykład kodu pokazuje tworzenia okna z określonym systemem operacyjnym nazwa klasy okna.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>The example creates a class that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> to accomplish this.</source>
          <target state="translated">W przykładzie jest tworzony klasy, która dziedziczy <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> w tym celu.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>The <ph id="ph1">`MyNativeWindow`</ph> class creates a new window with the <ph id="ph2">&lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;</ph> set to <ph id="ph3">`BUTTON`</ph>.</source>
          <target state="translated"><ph id="ph1">`MyNativeWindow`</ph> Klasy tworzy nowe okno z <ph id="ph2">&lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;</ph> ustawioną <ph id="ph3">`BUTTON`</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>This creates a Win32 button window.</source>
          <target state="translated">Spowoduje to utworzenie okna przycisk Win32.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>The location and size of the button is set, along with specifying additional window styles.</source>
          <target state="translated">Lokalizacja i rozmiar przycisku jest ustawiona, oraz określenia style dodatkowe okna.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>The class demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.CreateHandle%2A&gt;</ph> method and override the <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</ph> method to intercept window messages that are received.</source>
          <target state="translated">Klasa przedstawiono sposób użycia <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.CreateHandle%2A&gt;</ph> — metoda i zastąpienie <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</ph> metody do przechwycenia okna komunikatów, które są odbierane.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>Although the example looks for the WM_ACTIVATEAPP message, this can be replaced in a real program with window messages specific to the type created.</source>
          <target state="translated">Mimo że przykładzie szuka komunikat WM_ACTIVATEAPP, to można zastąpić w programie rzeczywistych komunikatów okien specyficzne dla typu utworzony.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>Some control types send their window messages to the window parent instead of the window.</source>
          <target state="translated">Niektóre typy formantów wysyłać ich okna do nadrzędnego okna zamiast okna.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>See the Windows Platform SDK for more information.</source>
          <target state="translated">Zobacz zestawu SDK platformy Windows, aby uzyskać więcej informacji.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>The operating system ran out of resources when trying to create the native window.</source>
          <target state="translated">Podczas próby utworzenia okna natywnego systemu operacyjnego za mało zasobów.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>The native Win32 API could not create the specified window.</source>
          <target state="translated">Natywnego interfejsu API Win32 nie może utworzyć określone okno.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>The handle of the current native window is already assigned; in explanation, the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.NativeWindow.Handle" /&gt;</ph> property is not equal to <ph id="ph2">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph>.</source>
          <target state="translated">Dojście bieżące okno natywnych jest już przypisany; w wyjaśnienie <ph id="ph1">&lt;see cref="P:System.Windows.Forms.NativeWindow.Handle" /&gt;</ph> właściwość nie jest równa <ph id="ph2">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>to create a top-level window.</source>
          <target state="translated">Aby utworzyć okno najwyższego poziomu.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>This permission is only demanded if the window style is not a child or if the window does not have a parent.</source>
          <target state="translated">To uprawnienie jest wymagane tylko, jeśli styl okna nie jest elementem podrzędnym lub jeśli okno nie ma elementu nadrzędnego.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Wyliczenie skojarzone: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.DefWndProc(System.Windows.Forms.Message@)">
          <source>The message that is currently being processed.</source>
          <target state="translated">Komunikat, który jest obecnie przetwarzane.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.DefWndProc(System.Windows.Forms.Message@)">
          <source>Invokes the default window procedure associated with this window.</source>
          <target state="translated">Wywołuje domyślną procedurę okna skojarzone z tego okna.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.DefWndProc(System.Windows.Forms.Message@)">
          <source>Typically, you only call the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.DefWndProc%2A&gt;</ph> method when you are intercepting window messages and would like the default window procedure to handle the message.</source>
          <target state="translated">Zazwyczaj można wywołać tylko <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.DefWndProc%2A&gt;</ph> metody, gdy są przechwytywaniu komunikatów okien i chcesz, by obsłużyć komunikat domyślną procedurę okna.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.DefWndProc(System.Windows.Forms.Message@)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.DefWndProc%2A&gt;</ph> should not be called to send a window message to the window; call the Win32 <ph id="ph2">`SendMessage`</ph> function instead.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.DefWndProc%2A&gt;</ph> Nie można wywołać, aby wysłać wiadomość okna dla okna; wywołanie Win32 <ph id="ph2">`SendMessage`</ph> zamiast tego działania.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.DefWndProc(System.Windows.Forms.Message@)">
          <source>It is an error to call <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.DefWndProc%2A&gt;</ph> when the <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</ph> property is 0.</source>
          <target state="translated">Błąd do wywołania <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.DefWndProc%2A&gt;</ph> podczas <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</ph> właściwości jest równa 0.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.DefWndProc(System.Windows.Forms.Message@)">
          <source>Override this method in a derived class to implement generalized custom message handling for a specific native window or .NET Windows Forms <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>.</source>
          <target state="translated">Należy przesłonić tę metodę w klasie pochodnej do zaimplementowania Obsługa określone okno native lub formularzy systemu Windows .NET ogólnych komunikatów niestandardowych <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.DefWndProc(System.Windows.Forms.Message@)">
          <source>Custom processing can be performed before, after, or instead of a call to the base class implementation of this method, which performs standard message processing.</source>
          <target state="translated">Niestandardowe przetwarzania mogą być wykonywane przed, po lub zamiast wywołanie implementacji klasy podstawowej tej metody, która wykonuje przetwarzanie komunikatów standardowych.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.DefWndProc(System.Windows.Forms.Message@)">
          <source>In contrast, adding customized message handling for an application can be accomplished through the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)" /&gt;</ph> method of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Application" /&gt;</ph> class.</source>
          <target state="translated">Z kolei dodawanie dostosowanych wiadomościami dla aplikacji, które można wykonywać za pomocą <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)" /&gt;</ph> metody <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Application" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.DestroyHandle">
          <source>Destroys the window and its handle.</source>
          <target state="translated">Niszczy okno i uchwytu.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.DestroyHandle">
          <source>This method destroys the window associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</ph>, sets the <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</ph> property to 0, and calls the <ph id="ph3">&lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt;</ph> method to reflect the change.</source>
          <target state="translated">Ta metoda niszczy okno skojarzone z <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</ph>, ustawia <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</ph> właściwości 0 i wywołania <ph id="ph3">&lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt;</ph> metody w celu odzwierciedlenia zmian.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.DestroyHandle">
          <source>Typically, you only call <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A&gt;</ph> when you are done with the native window.</source>
          <target state="translated">Zazwyczaj można wywołać tylko <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A&gt;</ph> po zakończeniu okno z macierzystego.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.DestroyHandle">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> class automatically will destroy the associated window and release its resources in response to a WM_DESTROY message.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> Klasy automatycznie będzie usunięcie skojarzone okna i wersji swoich zasobów w odpowiedzi na wiadomość WM_DESTROY.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.Finalize">
          <source>Releases the resources associated with this window.</source>
          <target state="translated">Zwalnia zasoby skojarzone z tego okna.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.Finalize">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.Finalize%2A&gt;</ph> method removes the Win32 derived class associated with the current <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> instance, releases the handle, and posts a WM_CLOSE message to the associated window.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.Finalize%2A&gt;</ph> Metoda usuwa klasy pochodnej Win32 skojarzone z bieżącym <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> wystąpienia, zwalnia dojście i zapisuje komunikat WM_CLOSE do odpowiedniego okna.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.FromHandle(System.IntPtr)">
          <source>A handle to a window.</source>
          <target state="translated">Dojście do okna.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.FromHandle(System.IntPtr)">
          <source>Retrieves the window associated with the specified handle.</source>
          <target state="translated">Pobiera skojarzone z określonego dojścia okna.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.FromHandle(System.IntPtr)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.NativeWindow" /&gt;</ph> associated with the specified handle.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.NativeWindow" /&gt;</ph> Skojarzone z określonego dojścia.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.FromHandle(System.IntPtr)">
          <source>This method returns <ph id="ph1">&lt;see langword="null" /&gt;</ph> when the handle does not have an associated window.</source>
          <target state="translated">Ta metoda zwraca <ph id="ph1">&lt;see langword="null" /&gt;</ph> gdy dojście nie ma odpowiedniego okna.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.FromHandle(System.IntPtr)">
          <source>If you receive a handle from another method, use this method to retrieve the window associated with the handle.</source>
          <target state="translated">Jeśli zostanie wyświetlony uchwyt z innej metody, ta metoda umożliwia pobieranie skojarzono uchwyt okna.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.FromHandle(System.IntPtr)">
          <source>The handle must already be owned by another <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> in the current process; otherwise, <ph id="ph2">`null`</ph> is returned.</source>
          <target state="translated">Dojście już musi należeć do żadnego innego <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> w bieżącym procesu; w przeciwnym razie <ph id="ph2">`null`</ph> jest zwracany.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.NativeWindow.Handle">
          <source>Gets the handle for this window.</source>
          <target state="translated">Pobiera dojście dla tego okna.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.NativeWindow.Handle">
          <source>If successful, an <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> representing the handle to the associated native Win32 window; otherwise, 0 if no handle is associated with the window.</source>
          <target state="translated">W przypadku powodzenia <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> reprezentujący dojście do skojarzonego natywnego okna Win32; w przeciwnym razie wartość 0, jeśli dojście nie jest skojarzony z oknem.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.NativeWindow.Handle">
          <source>Use this method when calling Windows API methods that require a handle for a window or control.</source>
          <target state="translated">Użyj tej metody, podczas wywoływania metody interfejsu API systemu Windows, które wymagają uchwyt okna lub kontrolki.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.NativeWindow.Handle">
          <source>The following code example demonstrates creating a window with a specific operating system window class name.</source>
          <target state="translated">Poniższy przykład kodu pokazuje tworzenia okna z określonym systemem operacyjnym nazwa klasy okna.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.NativeWindow.Handle">
          <source>The example creates a class that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> to accomplish this.</source>
          <target state="translated">W przykładzie jest tworzony klasy, która dziedziczy <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> w tym celu.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.NativeWindow.Handle">
          <source>The example also demonstrates overriding the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt;</ph> method to be notified when the <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</ph> changes.</source>
          <target state="translated">W przykładzie pokazano, zastępowanie <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt;</ph> metody, aby otrzymać powiadomienie po <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</ph> zmiany.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.NativeWindow.Handle">
          <source>The <ph id="ph1">`MyNativeWindow`</ph> class creates a new window with the <ph id="ph2">&lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;</ph> set to BUTTON.</source>
          <target state="translated"><ph id="ph1">`MyNativeWindow`</ph> Klasy tworzy nowe okno z <ph id="ph2">&lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;</ph> ustawioną przycisku.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.NativeWindow.Handle">
          <source>This creates a Win32 button window.</source>
          <target state="translated">Spowoduje to utworzenie okna przycisk Win32.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.NativeWindow.Handle">
          <source>The location and size of the button is set, along with specifying additional window styles.</source>
          <target state="translated">Lokalizacja i rozmiar przycisku jest ustawiona, oraz określenia style dodatkowe okna.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.NativeWindow.Handle">
          <source>The class demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.CreateHandle%2A&gt;</ph> method and override the <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</ph> method to intercept window messages that are received.</source>
          <target state="translated">Klasa przedstawiono sposób użycia <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.CreateHandle%2A&gt;</ph> — metoda i zastąpienie <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</ph> metody do przechwycenia okna komunikatów, które są odbierane.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.NativeWindow.Handle">
          <source>Although the example looks for the WM_ACTIVATEAPP message, this could be replaced in a real program with window messages specific to the type created.</source>
          <target state="translated">Mimo że przykładzie szuka komunikat WM_ACTIVATEAPP, to można zastąpione w programie rzeczywistych komunikatów okien specyficzne dla typu utworzony.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.NativeWindow.Handle">
          <source>Some control types send their window messages to the window parent instead of the window.</source>
          <target state="translated">Niektóre typy formantów wysyłać ich okna do nadrzędnego okna zamiast okna.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.NativeWindow.Handle">
          <source>See the Windows Platform SDK for more information.</source>
          <target state="translated">Zobacz zestawu SDK platformy Windows, aby uzyskać więcej informacji.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.OnHandleChange">
          <source>Specifies a notification method that is called when the handle for a window is changed.</source>
          <target state="translated">Określa metodę powiadomień, która jest wywoływana, gdy uchwyt okna zostanie zmieniona.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.OnHandleChange">
          <source>This method is invoked when the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</ph> property has changed.</source>
          <target state="translated">Ta metoda jest wywoływana po wartości <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</ph> właściwość zostanie zmieniona.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.OnHandleChange">
          <source>The following code example demonstrates creating a window with a specific operating system window class name.</source>
          <target state="translated">Poniższy przykład kodu pokazuje tworzenia okna z określonym systemem operacyjnym nazwa klasy okna.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.OnHandleChange">
          <source>The example creates a class that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> to accomplish this.</source>
          <target state="translated">W przykładzie jest tworzony klasy, która dziedziczy <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> w tym celu.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.OnHandleChange">
          <source>The example also demonstrates overriding the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt;</ph> method to be notified when the <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</ph> changes.</source>
          <target state="translated">W przykładzie pokazano, zastępowanie <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt;</ph> metody, aby otrzymać powiadomienie po <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</ph> zmiany.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.OnHandleChange">
          <source>The <ph id="ph1">`MyNativeWindow`</ph> class creates a new window with the <ph id="ph2">&lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;</ph> set to <ph id="ph3">`BUTTON`</ph>.</source>
          <target state="translated"><ph id="ph1">`MyNativeWindow`</ph> Klasy tworzy nowe okno z <ph id="ph2">&lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;</ph> ustawioną <ph id="ph3">`BUTTON`</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.OnHandleChange">
          <source>This creates a Win32 button window.</source>
          <target state="translated">Spowoduje to utworzenie okna przycisk Win32.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.OnHandleChange">
          <source>The location and size of the button is set, along with specifying additional window styles.</source>
          <target state="translated">Lokalizacja i rozmiar przycisku jest ustawiona, oraz określenia style dodatkowe okna.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.OnHandleChange">
          <source>The class demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.CreateHandle%2A&gt;</ph> method and override the <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</ph> method to intercept window messages that are received.</source>
          <target state="translated">Klasa przedstawiono sposób użycia <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.CreateHandle%2A&gt;</ph> — metoda i zastąpienie <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</ph> metody do przechwycenia okna komunikatów, które są odbierane.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.OnHandleChange">
          <source>Although the example looks for the WM_ACTIVATEAPP message, this can be replaced in a real program with window messages specific to the type created.</source>
          <target state="translated">Mimo że przykładzie szuka komunikat WM_ACTIVATEAPP, to można zastąpić w programie rzeczywistych komunikatów okien specyficzne dla typu utworzony.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.OnHandleChange">
          <source>This code is an excerpt from the example shown in the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> class overview.</source>
          <target state="translated">Ten kod jest fragment przykład pokazany na <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> Przegląd klasy.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.OnHandleChange">
          <source>Some code is not shown for the purpose of brevity.</source>
          <target state="translated">Kod nie jest wyświetlana wyłącznie w celu skrócenia.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.OnHandleChange">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> for the whole code listing.</source>
          <target state="translated">Zobacz <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> listę całego kodu.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.OnHandleChange">
          <source>Some control types send their window messages to the window parent instead of the window.</source>
          <target state="translated">Niektóre typy formantów wysyłać ich okna do nadrzędnego okna zamiast okna.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.OnHandleChange">
          <source>See the Windows Platform SDK for more information.</source>
          <target state="translated">Zobacz zestawu SDK platformy Windows, aby uzyskać więcej informacji.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.OnHandleChange">
          <source>Override this method to track changes that are made to the window handle.</source>
          <target state="translated">Zastępuje tę metodę, aby śledzić zmiany wprowadzone do uchwytu okna.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.OnThreadException(System.Exception)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> that specifies the unhandled thread exception.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> , Który określa wątku nieobsługiwany wyjątek.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.OnThreadException(System.Exception)">
          <source>When overridden in a derived class, manages an unhandled thread exception.</source>
          <target state="translated">W przypadku przesłonięcia w klasie pochodnej, zarządza wątku nieobsługiwany wyjątek.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.OnThreadException(System.Exception)">
          <source>Typically, <ph id="ph1">&lt;xref:System.Windows.Forms.Application.OnThreadException%2A&gt;</ph> handles thread exceptions.</source>
          <target state="translated">Zazwyczaj <ph id="ph1">&lt;xref:System.Windows.Forms.Application.OnThreadException%2A&gt;</ph> dojść wątku wyjątków.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.ReleaseHandle">
          <source>Releases the handle associated with this window.</source>
          <target state="translated">Zwalnia dojście skojarzone z tego okna.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.ReleaseHandle">
          <source>This method does not destroy the window handle.</source>
          <target state="translated">Ta metoda nie niszczy uchwytu okna.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.ReleaseHandle">
          <source>Instead, it sets the handle's window procedure to the default window procedure.</source>
          <target state="translated">Zamiast tego ustawia procedurę okna uchwytu domyślną procedurę okna.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.ReleaseHandle">
          <source>It sets the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</ph> property to 0 and calls <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt;</ph> to reflect the change.</source>
          <target state="translated">Ustawia <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</ph> właściwości 0 i wywołania <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt;</ph> celu odzwierciedlenia zmian.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.ReleaseHandle">
          <source>A window automatically calls this method if it receives a native Win32 WM_NCDESTROY message, indicating that Windows has destroyed the handle.</source>
          <target state="translated">Okno automatycznie wywołuje tę metodę, gdy odbierze wiadomość natywnego Win32 WM_NCDESTROY, wskazującą, czy system Windows ma zniszczone dojście.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.ReleaseHandle">
          <source>The following code example demonstrates intercepting operating system window messages in a window procedure.</source>
          <target state="translated">Poniższy przykład kodu pokazuje przechwycenia systemu operacyjnego okna komunikatów w procedurę okna.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.ReleaseHandle">
          <source>The example creates a class that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> to accomplish this.</source>
          <target state="translated">W przykładzie jest tworzony klasy, która dziedziczy <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> w tym celu.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.ReleaseHandle">
          <source>The <ph id="ph1">`MyNativeWindowListener`</ph> class hooks into the window procedure of the form passed into the constructor, and overrides the <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</ph> method to intercepts the <ph id="ph3">`WM_ACTIVATEAPP`</ph> window message.</source>
          <target state="translated"><ph id="ph1">`MyNativeWindowListener`</ph> Przechwytuje do procedury okna formularza przekazany do konstruktora klasy i zastępuje <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</ph> metodę przechwytuje <ph id="ph3">`WM_ACTIVATEAPP`</ph> komunikatów okien.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.ReleaseHandle">
          <source>The class demonstrates the use of the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.AssignHandle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</ph> methods to identify the window handle the <ph id="ph3">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> will use.</source>
          <target state="translated">Klasa zademonstrowano użycie <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.AssignHandle%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</ph> metodami do identyfikowania uchwytu okna <ph id="ph3">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> będzie używana.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.ReleaseHandle">
          <source>The handle is assign based upon the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType&gt;</ph> events.</source>
          <target state="translated">Dojście jest przypisywanie na podstawie <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType&gt;</ph> i <ph id="ph2">&lt;xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType&gt;</ph> zdarzenia.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.ReleaseHandle">
          <source>When the <ph id="ph1">`WM_ACTIVATEAPP`</ph> window message is received, the class calls the <ph id="ph2">`form1.ApplicationActivated`</ph> method.</source>
          <target state="translated">Gdy <ph id="ph1">`WM_ACTIVATEAPP`</ph> okna wiadomość zostanie odebrana, wywołania klasy <ph id="ph2">`form1.ApplicationActivated`</ph> metody.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.ReleaseHandle">
          <source>This code is an excerpt from the example shown in the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> class overview.</source>
          <target state="translated">Ten kod jest fragment przykład pokazany na <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> Przegląd klasy.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.ReleaseHandle">
          <source>Some code is not shown for the purpose of brevity.</source>
          <target state="translated">Kod nie jest wyświetlana wyłącznie w celu skrócenia.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.ReleaseHandle">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> for the whole code listing.</source>
          <target state="translated">Zobacz <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> listę całego kodu.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> that is associated with the current Windows message.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> skojarzonego z bieżącego komunikatu systemu Windows.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)">
          <source>Invokes the default window procedure associated with this window.</source>
          <target state="translated">Wywołuje domyślną procedurę okna skojarzone z tego okna.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)">
          <source>This method is called when a window message is sent to the handle of the window.</source>
          <target state="translated">Ta metoda jest wywoływana podczas wysyłania komunikatów okien do uchwytu okna.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)">
          <source>The following code example demonstrates intercepting operating system window messages in a window procedure.</source>
          <target state="translated">Poniższy przykład kodu pokazuje przechwycenia systemu operacyjnego okna komunikatów w procedurę okna.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)">
          <source>The example creates a class that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> to accomplish this.</source>
          <target state="translated">W przykładzie jest tworzony klasy, która dziedziczy <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> w tym celu.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)">
          <source>The <ph id="ph1">`MyNativeWindowListener`</ph> class hooks into the window procedure of the form passed into the constructor, and overrides the <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</ph> method to intercept the <ph id="ph3">`WM_ACTIVATEAPP`</ph> window message.</source>
          <target state="translated"><ph id="ph1">`MyNativeWindowListener`</ph> Przechwytuje do procedury okna formularza przekazany do konstruktora klasy i zastępuje <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</ph> metodę, aby przechwycić <ph id="ph3">`WM_ACTIVATEAPP`</ph> komunikatów okien.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)">
          <source>The class demonstrates the use of the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.AssignHandle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</ph> methods to identify the window handle the <ph id="ph3">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> will use.</source>
          <target state="translated">Klasa zademonstrowano użycie <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.AssignHandle%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</ph> metodami do identyfikowania uchwytu okna <ph id="ph3">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> będzie używana.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)">
          <source>The handle is assigned based upon the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType&gt;</ph> events.</source>
          <target state="translated">Dojście jest przypisany na podstawie <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType&gt;</ph> i <ph id="ph2">&lt;xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType&gt;</ph> zdarzenia.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)">
          <source>When the <ph id="ph1">`WM_ACTIVATEAPP`</ph> window message is received, the class calls the <ph id="ph2">`form1.ApplicationActivated`</ph> method.</source>
          <target state="translated">Gdy <ph id="ph1">`WM_ACTIVATEAPP`</ph> okna wiadomość zostanie odebrana, wywołania klasy <ph id="ph2">`form1.ApplicationActivated`</ph> metody.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)">
          <source>This code is an excerpt from the example shown in the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> class overview.</source>
          <target state="translated">Ten kod jest fragment przykład pokazany na <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> Przegląd klasy.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)">
          <source>Some code is not shown for the purpose of brevity.</source>
          <target state="translated">Kod nie jest wyświetlana wyłącznie w celu skrócenia.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> for the whole code listing.</source>
          <target state="translated">Zobacz <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> listę całego kodu.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)">
          <source>Override this method to implement specific message processing.</source>
          <target state="translated">Zastępuje tę metodę do zaimplementowania przetwarzania określonego komunikatu.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)">
          <source>Call <bpt id="p1">&lt;c&gt;</bpt>base.WndProc<ept id="p1">&lt;/c&gt;</ept> for unhandled messages.</source>
          <target state="translated">Wywołanie <bpt id="p1">&lt;c&gt;</bpt>podstawowej. WndProc<ept id="p1">&lt;/c&gt;</ept> nieobsługiwany komunikatów.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>