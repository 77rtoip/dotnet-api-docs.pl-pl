<Type Name="KeysConverter" FullName="System.Windows.Forms.KeysConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="89c011b4faf80ed6b7c2ef13e38431208c721d46" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69186350" /></Metadata><TypeSignature Language="C#" Value="public class KeysConverter : System.ComponentModel.TypeConverter, System.Collections.IComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeysConverter extends System.ComponentModel.TypeConverter implements class System.Collections.IComparer" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.KeysConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class KeysConverter&#xA;Inherits TypeConverter&#xA;Implements IComparer" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeysConverter : System::ComponentModel::TypeConverter, System::Collections::IComparer" />
  <TypeSignature Language="F#" Value="type KeysConverter = class&#xA;    inherit TypeConverter&#xA;    interface IComparer" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Zapewnia konwersję <see cref="T:System.Windows.Forms.Keys" /> obiektów do i z innych reprezentacji. <see cref="T:System.ComponentModel.TypeConverter" /></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Najczęściej konwerter <xref:System.Windows.Forms.Keys> <xref:System.String> typu służy do konwertowania wystąpień na i z odpowiednich zlokalizowanych reprezentacji. <xref:System.Windows.Forms.KeysConverter>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Windows.Forms.KeysConverter> jak używać klasy do <xref:System.Windows.Forms.Keys.KeyCode> konwersji do <xref:System.String>. W tym przykładzie przyjęto założenie <xref:System.Windows.Forms.TextBox> , `TextBox1` że istnieje <xref:System.Windows.Forms.Form> nazwa `Form1`w nazwanym.  
  
 [!code-csharp[SystemWindowsFormsKeys#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemWindowsFormsKeys/CS/Form1.cs#1)]
 [!code-vb[SystemWindowsFormsKeys#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemWindowsFormsKeys/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Keys" />
    <related type="Article" href="https://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada">Konwersja uogólnionych typów</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)">Instrukcje: Implementowanie konwertera typów</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeysConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeysConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeysConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje wystąpienie <see cref="T:System.Windows.Forms.KeysConverter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to domyślny, dostarczony przez kompilator Konstruktor dla <xref:System.Windows.Forms.KeysConverter> klasy.  
  
 Zazwyczaj nie można utworzyć wystąpienia <xref:System.Windows.Forms.KeysConverter>obiektu. Zamiast tego należy wywołać <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> <xref:System.ComponentModel.TypeDescriptor> metodę klasy. Aby uzyskać więcej informacji, zobacz przykłady w <xref:System.ComponentModel.TypeConverter> klasie bazowej.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Keys" />
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="keysConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zawiera kontekst formatu, który może służyć do wyodrębnienia dodatkowych informacji o środowisku, z którego ten konwerter jest wywoływany. Ten parametr lub właściwości tego parametru mogą być <see langword="null" />.</param>
        <param name="sourceType"><see cref="T:System.Type" /> Do konwersji z.</param>
        <summary>Zwraca wartość wskazującą, czy ten konwerter może skonwertować obiekt w określonym typie źródłowym na typ natywny konwertera przy użyciu określonego kontekstu.</summary>
        <returns><see langword="true" />Jeśli można wykonać konwersję, w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `sourceType` <xref:System.String> <xref:System.Enum> Metoda jest wyspecjalizowana do zwrócenia `true` , jeśli parametr jest typu lub Array; w przeciwnym razie wprowadza ocenę do podstawowej implementacji tej metody. <xref:System.Windows.Forms.KeysConverter.CanConvertFrom%2A>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Zastąp tę metodę, aby zapewnić własne wymagania dotyczące konwersji.  
  
Kontekst może służyć do wyodrębnienia dodatkowych informacji o środowisku, z którego ten konwerter jest wywoływany. Może to być <see langword="null" />, więc zawsze należy sprawdzać. Ponadto właściwości obiektu kontekstu mogą również zostać zwrócone <see langword="null" />.</para></block>
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.ConvertFrom" />
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.CanConvertTo" />
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="keysConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationType" Type="System.Type" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zawiera kontekst formatu, który może służyć do wyodrębnienia dodatkowych informacji o środowisku, z którego ten konwerter jest wywoływany. Ten parametr lub właściwości tego parametru mogą być <see langword="null" />.</param>
        <param name="destinationType"><see cref="T:System.Type" /> Do konwersji na.</param>
        <summary>Zwraca wartość wskazującą, czy ten konwerter może skonwertować obiekt w określonym typie źródłowym na typ natywny konwertera przy użyciu określonego kontekstu.</summary>
        <returns><see langword="true" />Jeśli można wykonać konwersję, w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wyspecjalizowana do zwrócenia `true` , jeśli `destinationType` parametr jest typu <xref:System.Enum> Array; w przeciwnym razie wprowadza ocenę do podstawowej implementacji tej metody. <xref:System.Windows.Forms.KeysConverter.CanConvertTo%2A>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Zastąp tę metodę, aby zapewnić własne wymagania dotyczące konwersji.  
  
Kontekst może służyć do wyodrębnienia dodatkowych informacji o środowisku, z którego ten konwerter jest wywoływany. Może to być <see langword="null" />, więc zawsze należy sprawdzać. Ponadto właściwości obiektu kontekstu mogą również zostać zwrócone <see langword="null" />.</para></block>
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.ConvertTo" />
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.CanConvertFrom" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public int Compare (object a, object b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(object a, object b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeysConverter.Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (a As Object, b As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::Object ^ a, System::Object ^ b);" />
      <MemberSignature Language="F#" Value="abstract member Compare : obj * obj -&gt; int&#xA;override this.Compare : obj * obj -&gt; int" Usage="keysConverter.Compare (a, b)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Object" />
        <Parameter Name="b" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="a"><see cref="T:System.Object" /> Reprezentuje pierwszy klucz do porównania.</param>
        <param name="b"><see cref="T:System.Object" /> Reprezentuje drugi klucz do porównania.</param>
        <summary>Porównuje dwie wartości klucza w celu zapewnienia równoważności.</summary>
        <returns>Liczba całkowita wskazująca relację między dwoma parametrami.  
  
 <list type="table"><listheader><term> Typ wartości 
 </term><description> Warunek 
 </description></listheader><item><term> Ujemna liczba całkowita.  
  
 </term><description><paramref name="a" />jest mniejsze niż <paramref name="b" />.  
  
 </description></item><item><term> zero 
 </term><description><paramref name="a" />równa <paramref name="b" />się.  
  
 </description></item><item><term> Dodatnia liczba całkowita.  
  
 </term><description><paramref name="a" />jest większa niż <paramref name="b" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda <xref:System.String.Compare%2A?displayProperty=nameWithType> służy do porównywania dwóch obiektów.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.Compare(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="keysConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><see langword="ITypeDescriptorContext" /> Zawiera kontekst formatu, który może służyć do wyodrębnienia dodatkowych informacji o środowisku, z którego ten konwerter jest wywoływany. Ten parametr lub właściwości tego parametru mogą mieć wartość null.</param>
        <param name="culture"><see langword="CultureInfo" /> Obiekt do zapewnienia informacji o ustawieniach regionalnych.</param>
        <param name="value">Obiekt do przekonwertowania.</param>
        <summary>Konwertuje określony obiekt na typ natywny konwertera.</summary>
        <returns>Obiekt reprezentujący przekonwertowane <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wyspecjalizowana do konwersji obiektów typu <xref:System.String> lub <xref:System.Enum> tablicy. <xref:System.Windows.Forms.KeysConverter.ConvertFrom%2A> W takim przypadku zwróci obiekt typu <xref:System.Windows.Forms.Keys>. W przeciwnym razie wprowadza ocenę do podstawowej implementacji tej metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">Podano nieprawidłową kombinację klucza.  
  
 —lub—  
  
 Podano nieprawidłową nazwę klucza.</exception>
        <block subset="none" type="overrides"><para>Ten <paramref name="context" /> parametr może służyć do wyodrębnienia dodatkowych informacji o środowisku, z którego ten konwerter jest wywoływany. Może to być <see langword="null" />, więc zawsze należy sprawdzać. Ponadto właściwości obiektu kontekstu mogą również zostać zwrócone <see langword="null" />.</para></block>
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.CanConvertFrom" />
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.ConvertTo" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="keysConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zawiera kontekst formatu, który może służyć do wyodrębnienia dodatkowych informacji o środowisku, z którego ten konwerter jest wywoływany. Ten parametr lub właściwości tego parametru mogą być <see langword="null" />.</param>
        <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> , aby podać informacje o ustawieniach regionalnych.</param>
        <param name="value"><see cref="T:System.Object" /> Do przekonwertowania.</param>
        <param name="destinationType">, <see cref="T:System.Type" /> Aby przekonwertować obiekt na.</param>
        <summary>Konwertuje określony obiekt na określony typ docelowy.</summary>
        <returns><see cref="T:System.Object" /> Reprezentuje przekonwertowane. <paramref name="value" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wyspecjalizowana do konwertowania obiektów typu <xref:System.Windows.Forms.Keys> lub <xref:System.Int32>. <xref:System.Windows.Forms.KeysConverter.ConvertTo%2A> W takim przypadku zwróci obiekt typu <xref:System.String>. W przeciwnym razie wprowadza ocenę do podstawowej implementacji tej metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="destinationType" />jest <see langword="null" />.</exception>
        <block subset="none" type="overrides"><para>Zastąp tę metodę, aby zapewnić własne wymagania dotyczące konwersji.  
  
Parametru kontekstowego można użyć do wyodrębnienia dodatkowych informacji o środowisku, z którego ten konwerter jest wywoływany. Może to być <see langword="null" />, dlatego należy zawsze sprawdzać podaną wartość zwracaną. Ponadto właściwości obiektu kontekstu mogą również zostać zwrócone <see langword="null" />.</para></block>
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.CanConvertTo" />
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.ConvertFrom" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeysConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="keysConverter.GetStandardValues context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zawiera kontekst formatu, który może służyć do wyodrębnienia dodatkowych informacji o środowisku, z którego ten konwerter jest wywoływany. Ten parametr lub właściwości tego parametru mogą być <see langword="null" />.</param>
        <summary>Zwraca kolekcję wartości standardowych dla typu danych, który jest przeznaczony dla tego konwertera typów, gdy jest dostarczany z kontekstem formatu.</summary>
        <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> , który zawiera standardowy zestaw prawidłowych wartości, które mogą być puste, jeśli typ danych nie obsługuje standardowego zestawu wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwracana kolekcja zawiera wartości kluczy, które mogą być konwertowane.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.GetStandardValuesSupported" />
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.GetStandardValuesExclusive" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeysConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="keysConverter.GetStandardValuesExclusive context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">Kontekst programu formatującego. Ten obiekt może służyć do wyodrębnienia dodatkowych informacji o środowisku, z którego ten konwerter jest wywoływany. Może to być <see langword="null" />, więc zawsze należy sprawdzać. Ponadto właściwości obiektu kontekstu mogą również zostać zwrócone <see langword="null" />.</param>
        <summary>Określa, czy lista wartości standardowych zwracanych z <see langword="GetStandardValues" /> jest listą wyłączną używającą <see cref="T:System.ComponentModel.ITypeDescriptorContext" />określonego.</summary>
        <returns><see langword="true" />Jeśli Kolekcja zwracana z programu <see cref="Overload:System.Windows.Forms.KeysConverter.GetStandardValues" /> jest wyczerpującą listą możliwych wartości; w przeciwnym <see langword="false" /> razie, jeśli są możliwe inne wartości. Domyślna implementacja tej metody zawsze zwraca wartość <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `context` Parametr nie jest używany w standardowej implementacji tej metody.  
  
 Jeśli lista ma wartość wyłączną, wówczas żadne inne wartości nie są prawidłowe, takie jak <xref:System.Enum> w przypadku typu danych. Jeśli lista nie jest wyłączna, wówczas istnieją inne prawidłowe wartości oprócz listy wartości <xref:System.Windows.Forms.KeysConverter.GetStandardValues%2A> standardowych.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.GetStandardValues" />
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.GetStandardValuesSupported" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeysConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="keysConverter.GetStandardValuesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zawiera kontekst formatu, który może służyć do wyodrębnienia dodatkowych informacji o środowisku, z którego ten konwerter jest wywoływany. Ten parametr lub właściwości tego parametru mogą być <see langword="null" />.</param>
        <summary>Pobiera wartość wskazującą, czy ten obiekt obsługuje standardowy zestaw wartości, które można pobrać z listy.</summary>
        <returns>Zawsze zwraca <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `context` Parametr nie jest używany w standardowej implementacji tej metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.GetStandardValues" />
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.GetStandardValuesExclusive" />
      </Docs>
    </Member>
  </Members>
</Type>
