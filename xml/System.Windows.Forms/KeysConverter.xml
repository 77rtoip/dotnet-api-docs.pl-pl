<Type Name="KeysConverter" FullName="System.Windows.Forms.KeysConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b824e1eaf734736c5e2d155d303859b9090a6b57" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30706256" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class KeysConverter : System.ComponentModel.TypeConverter, System.Collections.IComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeysConverter extends System.ComponentModel.TypeConverter implements class System.Collections.IComparer" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.KeysConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class KeysConverter&#xA;Inherits TypeConverter&#xA;Implements IComparer" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeysConverter : System::ComponentModel::TypeConverter, System::Collections::IComparer" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Udostępnia <see cref="T:System.ComponentModel.TypeConverter" /> przekonwertować <see cref="T:System.Windows.Forms.Keys" /> do i z innych reprezentacje obiektów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Najczęściej <xref:System.Windows.Forms.KeysConverter> konwerter typów służy do konwertowania <xref:System.Windows.Forms.Keys> wystąpień do i z odpowiednie zlokalizowane <xref:System.String> oświadczenia.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.KeysConverter> klasy w celu przekonwertowania <xref:System.Windows.Forms.Keys.KeyCode> do <xref:System.String>. W tym przykładzie założono, że <xref:System.Windows.Forms.TextBox> o nazwie `TextBox1` na <xref:System.Windows.Forms.Form> o nazwie `Form1`.  
  
 [!code-csharp[SystemWindowsFormsKeys#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemWindowsFormsKeys/CS/Form1.cs#1)]
 [!code-vb[SystemWindowsFormsKeys#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemWindowsFormsKeys/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Keys" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeysConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeysConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeysConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje wystąpienie klasy <see cref="T:System.Windows.Forms.KeysConverter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to ustawienie domyślne, dostarczone przez kompilator konstruktora dla <xref:System.Windows.Forms.KeysConverter> klasy.  
  
 Zazwyczaj nie bezpośrednio utworzysz wystąpienia <xref:System.Windows.Forms.KeysConverter>. Zamiast tego wywołać <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> metody <xref:System.ComponentModel.TypeDescriptor> klasy. Aby uzyskać więcej informacji, zobacz przykłady w <xref:System.ComponentModel.TypeConverter> klasy podstawowej.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Keys" />
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstem formatu, który może służyć do wyodrębnienia dodatkowe informacje o środowisku konwerter jest wywoływany z. Tego parametru lub właściwości tego parametru może być <see langword="null" />.</param>
        <param name="sourceType">
          <see cref="T:System.Type" /> Do przekonwertowania z.</param>
        <summary>Zwraca wartość wskazującą, czy ten konwerter można przekonwertować obiektu w określony typ źródła na typ macierzysty konwertera przy użyciu określonego kontekstu.</summary>
        <returns>
          <see langword="true" /> Jeśli można wykonać konwersji; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.KeysConverter.CanConvertFrom%2A> Metody jest przeznaczone do zwrócenia `true` Jeśli `sourceType` parametr jest typu <xref:System.String> lub <xref:System.Enum> tablica; w przeciwnym razie różni się ona oceny Podstawowa implementacja tej metody.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Przesłonić tę metodę w celu zapewnienia wymagań konwersji.  
  
 Kontekst może służyć do wyodrębnienia dodatkowe informacje o środowisku, które ten konwerter jest wywoływany z. Może to być <see langword="null" />, dlatego należy zawsze sprawdzić. Ponadto może również zwrócić właściwości obiektu context <see langword="null" />.</para>
        </block>
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.ConvertFrom" />
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.CanConvertTo" />
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstem formatu, który może służyć do wyodrębnienia dodatkowe informacje o środowisku konwerter jest wywoływany z. Tego parametru lub właściwości tego parametru może być <see langword="null" />.</param>
        <param name="destinationType">
          <see cref="T:System.Type" /> Do przekonwertowania na.</param>
        <summary>Zwraca wartość wskazującą, czy ten konwerter można przekonwertować obiektu w określony typ źródła na typ macierzysty konwertera przy użyciu określonego kontekstu.</summary>
        <returns>
          <see langword="true" /> Jeśli można wykonać konwersji; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.KeysConverter.CanConvertTo%2A> Metody jest przeznaczone do zwrócenia `true` Jeśli `destinationType` parametr jest typu <xref:System.Enum> tablica; w przeciwnym razie różni się ona oceny Podstawowa implementacja tej metody.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Przesłonić tę metodę w celu zapewnienia wymagań konwersji.  
  
 Kontekst może służyć do wyodrębnienia dodatkowe informacje o środowisku, które ten konwerter jest wywoływany z. Może to być <see langword="null" />, dlatego należy zawsze sprawdzić. Ponadto może również zwrócić właściwości obiektu context <see langword="null" />.</para>
        </block>
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.ConvertTo" />
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.CanConvertFrom" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public int Compare (object a, object b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(object a, object b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeysConverter.Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (a As Object, b As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::Object ^ a, System::Object ^ b);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Object" />
        <Parameter Name="b" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="a">
          <see cref="T:System.Object" /> Reprezentujący pierwszy klucz do porównania.</param>
        <param name="b">
          <see cref="T:System.Object" /> Reprezentujący drugi klucz do porównania.</param>
        <summary>Porównuje dwie wartości klucza do pełnienia roli równoważnika.</summary>
        <returns>Liczba całkowita wskazująca relacji między dwa parametry.  
  
 <list type="table"><listheader><term> Typ wartości  
  
 </term><description> Warunek  
  
 </description></listheader><item><term> Ujemnej liczby całkowitej.  
  
 </term><description><paramref name="a" /> jest mniejsza niż <paramref name="b" />.  
  
 </description></item><item><term> zero  
  
 </term><description><paramref name="a" /> Equals <paramref name="b" />.  
  
 </description></item><item><term> Dodatnia liczba całkowita.  
  
 </term><description><paramref name="a" /> jest większa niż <paramref name="b" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda używa <xref:System.String.Compare%2A?displayProperty=nameWithType> do porównywania dwóch obiektów.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.Compare(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <see langword="ITypeDescriptorContext" /> Zapewnia kontekstem formatu, który może służyć do wyodrębnienia dodatkowe informacje o środowisku konwerter jest wywoływany z. Tego parametru lub właściwości ten parametr może mieć wartości null.</param>
        <param name="culture">A <see langword="CultureInfo" /> obiektu w celu zapewnienia informacji o ustawieniach regionalnych.</param>
        <param name="value">Obiekt do przekonwertowania.</param>
        <summary>Konwertuje określony obiekt konwertera typu macierzystego.</summary>
        <returns>Obiekt reprezentujący skonwertowany <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.KeysConverter.ConvertFrom%2A> Metody jest przeznaczone do przekonwertowania obiektów typu <xref:System.String> lub <xref:System.Enum> tablicy. W takim przypadku zwracać obiekt typu <xref:System.Windows.Forms.Keys>. W przeciwnym razie go różni się oceny Podstawowa implementacja tej metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">Podano nieprawidłową kombinację klucza.  
  
 —lub—  
  
 Podano nieprawidłową nazwę klucza.</exception>
        <block subset="none" type="overrides">
          <para>
            <paramref name="context" /> Parametru można wyodrębnić dodatkowe informacje o środowisku konwerter jest wywoływany z. Może to być <see langword="null" />, dlatego należy zawsze sprawdzić. Ponadto może również zwrócić właściwości obiektu context <see langword="null" />.</para>
        </block>
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.CanConvertFrom" />
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.ConvertTo" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstem formatu, który może służyć do wyodrębnienia dodatkowe informacje o środowisku konwerter jest wywoływany z. Tego parametru lub właściwości tego parametru może być <see langword="null" />.</param>
        <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> zapewnienie informacji o ustawieniach regionalnych.</param>
        <param name="value">
          <see cref="T:System.Object" /> Do przekonwertowania.</param>
        <param name="destinationType">
          <see cref="T:System.Type" /> Można przekonwertować obiektu.</param>
        <summary>Konwertuje określony obiekt na typ docelowy.</summary>
        <returns>
          <see cref="T:System.Object" /> Reprezentujący skonwertowany <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.KeysConverter.ConvertTo%2A> Metody jest przeznaczone do przekonwertowania obiektów typu <xref:System.Windows.Forms.Keys> lub <xref:System.Int32>. W takim przypadku zwracać obiekt typu <xref:System.String>. W przeciwnym razie go różni się oceny Podstawowa implementacja tej metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="destinationType" /> jest <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>Przesłonić tę metodę w celu zapewnienia wymagań konwersji.  
  
 Parametr kontekstowy może służyć do wyodrębnienia dodatkowe informacje o środowisku, które ten konwerter jest wywoływany z. Może to być <see langword="null" />, dlatego należy zawsze sprawdzić, czy ta wartość zwrotna. Ponadto może również zwrócić właściwości obiektu context <see langword="null" />.</para>
        </block>
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.CanConvertTo" />
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.ConvertFrom" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeysConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstem formatu, który może służyć do wyodrębnienia dodatkowe informacje o środowisku konwerter jest wywoływany z. Tego parametru lub właściwości tego parametru może być <see langword="null" />.</param>
        <summary>Zwraca kolekcję wartości domyślnych dla tego konwertera typu jest zaprojektowany na potrzeby udostępniane z kontekstem formatu typu danych.</summary>
        <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> który zawiera standardowy zestaw prawidłowe wartości, które może być pusta, jeśli typ danych nie obsługuje standardowy zestaw wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kolekcja zwracana zawiera wartości kluczy, które mogą być konwertowane.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.GetStandardValuesSupported" />
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.GetStandardValuesExclusive" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeysConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">Kontekst elementu formatującego. Ten obiekt może służyć do wyodrębnić dodatkowe informacje o środowisku, które ten konwerter jest wywoływany z. Może to być <see langword="null" />, dlatego należy zawsze sprawdzić. Ponadto może również zwrócić właściwości obiektu context <see langword="null" />.</param>
        <summary>Określa, jeśli lista wartości standardowych zwracane z <see langword="GetStandardValues" /> jest wyłączną listę przy użyciu określonego <see cref="T:System.ComponentModel.ITypeDescriptorContext" />.</summary>
        <returns>
          <see langword="true" /> Jeśli kolekcja zwrócony z <see cref="Overload:System.Windows.Forms.KeysConverter.GetStandardValues" /> jest to pełna lista możliwych wartości; w przeciwnym razie <see langword="false" /> Jeśli inne wartości są możliwe. Domyślna implementacja tej metody zawsze zwraca <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `context` Parametr nie jest używany w standardowa implementacja tej metody.  
  
 Jeśli lista jest wyłączne, a następnie nie inne wartości są prawidłowe, takich jak w <xref:System.Enum> — typ danych. Jeśli lista nie jest zarezerwowana, a następnie istnieją inne prawidłowe wartości oprócz listy wartości standardowe <xref:System.Windows.Forms.KeysConverter.GetStandardValues%2A> udostępnia.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.GetStandardValues" />
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.GetStandardValuesSupported" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeysConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstem formatu, który może służyć do wyodrębnienia dodatkowe informacje o środowisku konwerter jest wywoływany z. Tego parametru lub właściwości tego parametru może być <see langword="null" />.</param>
        <summary>Pobiera wartość wskazującą, czy ten obiekt obsługuje standardowy zestaw wartości, które mogą być pobierane z listy.</summary>
        <returns>Zawsze zwraca <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `context` Parametr nie jest używany w standardowa implementacja tej metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.GetStandardValues" />
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.GetStandardValuesExclusive" />
      </Docs>
    </Member>
  </Members>
</Type>