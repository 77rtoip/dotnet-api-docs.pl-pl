<Type Name="LinkLabel" FullName="System.Windows.Forms.LinkLabel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="34aa104d6f8a7e322b568c0f33421023608ef36c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36519235" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LinkLabel : System.Windows.Forms.Label, System.Windows.Forms.IButtonControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinkLabel extends System.Windows.Forms.Label implements class System.Windows.Forms.IButtonControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.LinkLabel" />
  <TypeSignature Language="VB.NET" Value="Public Class LinkLabel&#xA;Inherits Label&#xA;Implements IButtonControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinkLabel : System::Windows::Forms::Label, System::Windows::Forms::IButtonControl" />
  <TypeSignature Language="F#" Value="type LinkLabel = class&#xA;    inherit Label&#xA;    interface IButtonControl" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Label</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Forms.IButtonControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("LinkClicked")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem("System.Windows.Forms.Design.AutoSizeToolboxItem,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje kontrolkę etykiety systemu Windows, która umożliwia wyświetlanie hiperłącza.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStripLabel> Kontroli zastępuje i dodaje funkcje do <xref:System.Windows.Forms.Label> i <xref:System.Windows.Forms.LinkLabel> kontrolki. Jednak <xref:System.Windows.Forms.Label> i <xref:System.Windows.Forms.LinkLabel> formanty zostaną zachowane dla zgodności z poprzednimi wersjami i użycia w przyszłości, jeśli zostanie wybrana.  
  
 <xref:System.Windows.Forms.LinkLabel> Formant jest podobny do <xref:System.Windows.Forms.Label> formantu, z wyjątkiem będzie możliwe wyświetlenie hiperłącze. W tekście formantu można określić wiele hiperłącza. Każde hiperłącze można wykonać inne zadanie w aplikacji. Na przykład można użyć hiperłącza, aby wyświetlić witrynę sieci Web w programie Internet Explorer lub załadować pliku dziennika skojarzone z aplikacją.  
  
 Każde hiperłącze wyświetlane w <xref:System.Windows.Forms.LinkLabel> kontroli jest wystąpieniem <xref:System.Windows.Forms.LinkLabel.Link> klasy. <xref:System.Windows.Forms.LinkLabel.Link> Klasa definiuje wyświetlane informacje, stanu i lokalizację hiperłącza. Ponadto <xref:System.Windows.Forms.LinkLabel.Link.LinkData%2A> właściwość <xref:System.Windows.Forms.LinkLabel.Link> klasy umożliwia kojarzenie informacje, takie jak adres URL do wyświetlenia z hiperłączem. Użytkownik klika hiperłącze w formancie, <xref:System.Windows.Forms.LinkLabel.LinkClicked> zdarzenie jest zgłaszane i <xref:System.Windows.Forms.LinkLabel.Link> obiekt reprezentujący hiperłącze, który został kliknięty jest przekazywany jako część <xref:System.Windows.Forms.LinkLabelLinkClickedEventArgs> obiekt, który jest przekazywany jako parametr do programu obsługi zdarzeń. Ten obiekt służy do uzyskania <xref:System.Windows.Forms.LinkLabel.Link> obiekt skojarzony z hiperłącza, który został kliknięty przez użytkownika. Wszystkie hiperłącza zawartych w <xref:System.Windows.Forms.LinkLabel> formantu są przechowywane w <xref:System.Windows.Forms.LinkLabel.LinkCollection> wystąpienie klasy formantu.  
  
 Istnieją dwa sposoby dodawania hiperłącza do <xref:System.Windows.Forms.LinkLabel> formantu. Najszybszą metodą jest określenie <xref:System.Windows.Forms.LinkArea> i przypisz go do <xref:System.Windows.Forms.LinkLabel.LinkArea%2A> właściwości. Dzięki temu można określić pojedynczy hiperłącze w tekście formantu. Aby dodać wiele hiperłącza, można użyć <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A> metody <xref:System.Windows.Forms.LinkLabel.LinkCollection> przy uzyskiwania dostępu do kolekcji za pomocą <xref:System.Windows.Forms.LinkLabel.Links%2A> właściwości.  
  
 Gdy <xref:System.Windows.Forms.LinkLabel> formant jest utworzony, domyślne hiperłącze, zawierający całego tekstu w <xref:System.Windows.Forms.LinkLabel> formant został dodany do <xref:System.Windows.Forms.LinkLabel.LinkCollection>. To łącze domyślne można zastąpić, określając nowy obszar łącza z <xref:System.Windows.Forms.LinkLabel.LinkArea%2A> właściwości, lub określ za pomocą łącza <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A> metody <xref:System.Windows.Forms.LinkLabel.LinkCollection>. Można również usunąć hiperłącze domyślne przy użyciu <xref:System.Windows.Forms.LinkLabel.LinkCollection.Remove%2A> metody <xref:System.Windows.Forms.LinkLabel.LinkCollection> klasy.  
  
 <xref:System.Windows.Forms.Label.TabStop%2A> Właściwość jest `true` domyślnie tak długo, jak istnieje co najmniej jedno łącze większym niż zerowej długości w <xref:System.Windows.Forms.LinkLabel.Links%2A> kolekcji. <xref:System.Windows.Forms.LinkLabel> Formant ma jeden <xref:System.Windows.Forms.Control.TabIndex%2A> wartość. Jednak każde łącze w większym niż zerowej długości pobiera własną tabulatora, w kolejności od lewej do prawej. Aby zapobiec karty nawigacji do <xref:System.Windows.Forms.LinkLabel> kontrolować, ustaw <xref:System.Windows.Forms.Label.TabStop%2A> właściwości `false`. Należy jednak pamiętać Dodawanie nowych łączący <xref:System.Windows.Forms.LinkLabel.Links%2A> automatycznie ustawi kolekcji <xref:System.Windows.Forms.Label.TabStop%2A> właściwości `true` ponownie.  
  
 <xref:System.Windows.Forms.LinkLabel> Zawiera wiele właściwości, które umożliwiają definiowanie wygląd ekranu hiperłączy w formancie. <xref:System.Windows.Forms.LinkLabel.ActiveLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>, I <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> właściwości definiują kolory używane przy wyświetlaniu hiperłącze w zależności od różnych stanów. <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A> Właściwość definiuje wyświetlania podkreślenia, który jest skojarzony z hiperłączem.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, przy użyciu <xref:System.Windows.Forms.LinkLabel> klasy. Uchwyty przykład <xref:System.Windows.Forms.LinkLabel.LinkClicked> zdarzenia przez otwarcie witryny sieci Web.  
  
 [!code-csharp[System.Windows.Forms.LinkLabelSimple#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelSimple/CS/form.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabelSimple#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelSimple/VB/form.vb#1)]  
  
 W poniższym przykładzie pokazano, za pomocą <xref:System.Windows.Forms.LinkLabel> klasa z wieloma <xref:System.Windows.Forms.LinkArea> sekcje zdefiniowane, aby wyświetlić etykiety na formularzu. W przykładzie pokazano ustawienie <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>, i <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> właściwości, aby dostosować wygląd <xref:System.Windows.Forms.LinkLabel>. Pierwszy <xref:System.Windows.Forms.LinkArea> zostanie określona przy użyciu <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType> właściwości. Linki do dodatkowych są dodawane do <xref:System.Windows.Forms.LinkLabel> przy użyciu <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType> metody. Uchwyty przykład <xref:System.Windows.Forms.LinkLabel.LinkClicked> zdarzenia uruchamiania przeglądarki sieci Web dla hiperłącza, i wyświetlając <xref:System.Windows.Forms.MessageBox> dla innego łącza.  
  
 [!code-cpp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CPP/linklabel.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CS/linklabel.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/VB/linklabel.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Label" />
    <altmember cref="T:System.Windows.Forms.LinkLabelLinkClickedEventArgs" />
    <altmember cref="T:System.Windows.Forms.LinkLabel.Link" />
    <altmember cref="T:System.Windows.Forms.LinkLabel.LinkCollection" />
    <altmember cref="T:System.Windows.Forms.ToolStripLabel" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinkLabel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinkLabel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie domyślnego <see cref="T:System.Windows.Forms.LinkLabel" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano, za pomocą <xref:System.Windows.Forms.LinkLabel> klasa z wieloma <xref:System.Windows.Forms.LinkArea> sekcje zdefiniowane, aby wyświetlić etykiety na formularzu. W przykładzie pokazano ustawienie <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>, i <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> właściwości, aby dostosować wygląd <xref:System.Windows.Forms.LinkLabel>. Pierwszy <xref:System.Windows.Forms.LinkArea> zostanie określona przy użyciu <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType> właściwości. Linki do dodatkowych są dodawane do <xref:System.Windows.Forms.LinkLabel> przy użyciu <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType> metody. Uchwyty przykład <xref:System.Windows.Forms.LinkLabel.LinkClicked> zdarzenia uruchamiania przeglądarki sieci Web dla hiperłącza, i wyświetlając <xref:System.Windows.Forms.MessageBox> dla innego łącza.  
  
 [!code-cpp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CPP/linklabel.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CS/linklabel.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/VB/linklabel.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveLinkColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ActiveLinkColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ActiveLinkColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.ActiveLinkColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ActiveLinkColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ActiveLinkColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ActiveLinkColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.LinkLabel.ActiveLinkColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor używany do wyświetlania aktywnego łącza.</summary>
        <value>A <see cref="T:System.Drawing.Color" /> reprezentujący kolor przeznaczony do wyświetlania aktywnego łącza. Domyślny kolor jest określany przez system, zazwyczaj jest to kolor <see langword="Color.Red" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aktywnego łącza to łącze, które jest w trakcie zostanie kliknięty. Jest to podobne do stanu wciśnięte <xref:System.Windows.Forms.Button> formantu. Ta właściwość służy do określ kolor łącza jest wyświetlana w, gdy trwa momencie kliknięcia łącza.  
  
 Istnieje wiele kolorów skojarzony z łączem. <xref:System.Windows.Forms.LinkLabel.LinkColor%2A> Określa kolor łącza wszystkich wyświetlanych w <xref:System.Windows.Forms.LinkLabel> formantu. <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> Właściwość umożliwia określenie kolor łącza po odwiedzeniu przez użytkownika. Gdy łącze jest wyłączona, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A> służy do wyświetlania łącze w stanie wyłączenia.  
  
> [!NOTE]
>  W przypadku ustawienia tej właściwości, upewnij się, że kolor ustawieniu właściwości nie powoduje konfliktu z kolor tła formantu lub tekst nie jest poprawnie wyświetlany. Na przykład, jeśli jest kolor tła formantu `Color.Red` i ta właściwość jest ustawiona na `Color.Red`, tekst nie jest wyświetlany poprawnie gdy trwa momencie kliknięcia łącza.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano ustawienie <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A> za pomocą właściwości <xref:System.Windows.Forms.LinkBehavior> wyliczenia. Ustawienie ilustruje też <xref:System.Windows.Forms.LinkLabel.ActiveLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A> i <xref:System.Windows.Forms.LinkLabel.LinkVisited%2A> właściwości. Do uruchomienia tego przykładu wklej go w postaci pustego i wywołanie `InitializeLinkLabel` z konstruktora formularza lub `Load` metody.  
  
 [!code-cpp[System.Windows.Forms.LinkLabelExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabelExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabelExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.DisabledLinkColor" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.LinkColor" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.VisitedLinkColor" />
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="linkLabel.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nowy obiekt ułatwień dostępu dla <see cref="T:System.Windows.Forms.LinkLabel" /> formantu.</summary>
        <returns>Nowy <see cref="T:System.Windows.Forms.AccessibleObject" /> dla formantu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie zostanie jawnie wywołana <xref:System.Windows.Forms.LinkLabel.CreateAccessibilityInstance%2A> metody, będzie ona wywoływana podczas <xref:System.Windows.Forms.Control.AccessibilityObject%2A> odwołuje się do właściwości.  
  
 Uwaga: aby get lub set <xref:System.Windows.Forms.Control.AccessibilityObject%2A> właściwość, należy dodać odwołanie do zestawu dostępności zainstalowany w środowisku .NET Framework.  
  
 Uwagi dotyczące obiektów dziedziczących: w przypadku przesłaniania <xref:System.Windows.Forms.LinkLabel.CreateAccessibilityInstance%2A> w klasie pochodnej nie należy wywoływać klasy podstawowej <xref:System.Windows.Forms.LinkLabel.CreateAccessibilityInstance%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateHandle();" />
      <MemberSignature Language="F#" Value="override this.CreateHandle : unit -&gt; unit" Usage="linkLabel.CreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy dojście dla tego formantu. Ta metoda jest wywoływana przez platformę .NET, to nie powinna być wywoływana. Dziedziczenie klas powinny wywoływać zawsze <see langword="base.createHandle" /> w przypadku przesłaniania tej metody.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisabledLinkColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color DisabledLinkColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color DisabledLinkColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.DisabledLinkColor" />
      <MemberSignature Language="VB.NET" Value="Public Property DisabledLinkColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color DisabledLinkColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.DisabledLinkColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.LinkLabel.DisabledLinkColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor używany podczas wyświetlania nieaktywny link.</summary>
        <value>A <see cref="T:System.Drawing.Color" /> reprezentuje kolor, wyświetlając nieaktywny link. Wartość domyślna to <see langword="Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia określenie kolor łącza, które są wyłączone w <xref:System.Windows.Forms.LinkLabel>. Wyłączone łącza nie powodują <xref:System.Windows.Forms.LinkLabel.LinkClicked> się zdarzenia.  
  
 Istnieje wiele kolorów skojarzony z łączem. Wszystkie linki w <xref:System.Windows.Forms.LinkLabel> początkowo są wyświetlane z koloru zdefiniowanego w <xref:System.Windows.Forms.LinkLabel.LinkColor%2A> właściwości. <xref:System.Windows.Forms.LinkLabel.ActiveLinkColor%2A> Właściwość umożliwia określenie kolor łącza, gdy trwa zostanie kliknięty. <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> Właściwość umożliwia określenie kolor łącza po odwiedzeniu przez użytkownika.  
  
> [!NOTE]
>  W przypadku ustawienia tej właściwości, upewnij się, że kolor ustawieniu właściwości nie powoduje konfliktu z kolor tła formantu lub tekst nie jest poprawnie wyświetlany. Na przykład, jeśli jest kolor tła formantu `Color.Red` i ta właściwość jest ustawiona na `Color.Red`, tekst nie jest wyświetlany poprawnie wtedy, gdy łącze jest wyłączony.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, za pomocą <xref:System.Windows.Forms.LinkLabel> klasa z wieloma <xref:System.Windows.Forms.LinkArea> sekcje zdefiniowane, aby wyświetlić etykiety na formularzu. W przykładzie pokazano ustawienie <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>, i <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> właściwości, aby dostosować wygląd <xref:System.Windows.Forms.LinkLabel>. Pierwszy <xref:System.Windows.Forms.LinkArea> zostanie określona przy użyciu <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType> właściwości. Linki do dodatkowych są dodawane do <xref:System.Windows.Forms.LinkLabel> przy użyciu <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType> metody. Uchwyty przykład <xref:System.Windows.Forms.LinkLabel.LinkClicked> zdarzenia uruchamiania przeglądarki sieci Web dla hiperłącza, i wyświetlając <xref:System.Windows.Forms.MessageBox> dla innego łącza.  
  
 [!code-cpp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CPP/linklabel.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CS/linklabel.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/VB/linklabel.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.LinkColor" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.ActiveLinkColor" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.VisitedLinkColor" />
      </Docs>
    </Member>
    <Member MemberName="FlatStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FlatStyle FlatStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.FlatStyle FlatStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.FlatStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property FlatStyle As FlatStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FlatStyle FlatStyle { System::Windows::Forms::FlatStyle get(); void set(System::Windows::Forms::FlatStyle value); };" />
      <MemberSignature Language="F#" Value="member this.FlatStyle : System.Windows.Forms.FlatStyle with get, set" Usage="System.Windows.Forms.LinkLabel.FlatStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FlatStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wygląd płaski <see cref="T:System.Windows.Forms.LinkLabel" />.</summary>
        <value>Jeden z <see cref="T:System.Windows.Forms.FlatStyle" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość nie jest ważna dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkArea">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.LinkArea LinkArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.LinkArea LinkArea" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.LinkArea" />
      <MemberSignature Language="VB.NET" Value="Public Property LinkArea As LinkArea" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::LinkArea LinkArea { System::Windows::Forms::LinkArea get(); void set(System::Windows::Forms::LinkArea value); };" />
      <MemberSignature Language="F#" Value="member this.LinkArea : System.Windows.Forms.LinkArea with get, set" Usage="System.Windows.Forms.LinkLabel.LinkArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.LinkAreaEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LinkArea</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zakres w tekście można traktować jako łącze.</summary>
        <value>A <see cref="T:System.Windows.Forms.LinkArea" /> reprezentujący obszaru traktowany jako łącze.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.LinkLabel.LinkArea%2A> Właściwości umożliwia szybkie do określenia pojedynczego hiperłącza do wyświetlenia w tekście <xref:System.Windows.Forms.LinkLabel> formantu. <xref:System.Windows.Forms.LinkArea> Obiektu udostępnia właściwości określające pozycję początkową łącza w tekst formantu i długość tekstu hiperłącza. Gdy hiperłącze jest określona za pomocą <xref:System.Windows.Forms.LinkLabel.LinkArea%2A> właściwość hiperłącze zostanie dodany do <xref:System.Windows.Forms.LinkLabel.LinkCollection> formantu. <xref:System.Windows.Forms.LinkLabel.LinkArea%2A> Konwertuje właściwości <xref:System.Windows.Forms.LinkArea> przypisany do obiektu <xref:System.Windows.Forms.LinkLabel.Link> obiekt, który jest przechowywany w kolekcji.  
  
 Aby dodać wiele hiperłącza do tekst formantu, można użyć <xref:System.Windows.Forms.LinkLabel.Links%2A> właściwości. <xref:System.Windows.Forms.LinkLabel.Links%2A> Właściwość umożliwia dostęp do właściwości i metod <xref:System.Windows.Forms.LinkLabel.LinkCollection>, która przechowuje łącza określony dla formantu. Ta metoda dodawania łączy do <xref:System.Windows.Forms.LinkLabel> umożliwia również określenie danych w <xref:System.Windows.Forms.LinkLabel.Link.LinkData%2A> właściwość, która jest skojarzona z łącza tworzenia. Wartość <xref:System.Windows.Forms.LinkLabel.Link.LinkData%2A> właściwości może służyć do przechowywania lokalizację pliku do wyświetlania lub adres witryny sieci Web.  
  
 Gdy <xref:System.Windows.Forms.LinkLabel> formant jest utworzony, domyślne hiperłącze, zawierający całego tekstu w <xref:System.Windows.Forms.LinkLabel> formant został dodany do <xref:System.Windows.Forms.LinkLabel.LinkCollection>. To łącze domyślne można zastąpić, określając nowy obszar łącza z <xref:System.Windows.Forms.LinkLabel.LinkArea%2A> właściwości, lub określ za pomocą łącza <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A> metody <xref:System.Windows.Forms.LinkLabel.LinkCollection>. Można również usunąć hiperłącze domyślne przy użyciu <xref:System.Windows.Forms.LinkLabel.LinkCollection.Remove%2A> metody <xref:System.Windows.Forms.LinkLabel.LinkCollection> klasy.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.LinkLabel.LinkArea%2A> Właściwość zawsze zwraca pierwszy element <xref:System.Windows.Forms.LinkLabel.LinkCollection>, niezależnie od tego, jak hiperłącze został dodany do kolekcji.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.LinkArea.Length%2A> Właściwość <xref:System.Windows.Forms.LinkArea> będą się różnić, jeśli wywołujesz <xref:System.Windows.Forms.LinkLabel.UseCompatibleTextRendering%2A>i <xref:System.Windows.Forms.LinkLabel.Text%2A> właściwość zawiera znaki dwubajtowe. Jeśli należy wywołać <xref:System.Windows.Forms.LinkLabel.UseCompatibleTextRendering%2A>, zwróci liczbę bajtów w ciągu. W przeciwnym razie zwróci liczbę rzeczywiste znaki.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, za pomocą <xref:System.Windows.Forms.LinkLabel> klasa z wieloma <xref:System.Windows.Forms.LinkArea> sekcje zdefiniowane, aby wyświetlić etykiety na formularzu. W przykładzie pokazano ustawienie <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>, i <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> właściwości, aby dostosować wygląd <xref:System.Windows.Forms.LinkLabel>. Pierwszy <xref:System.Windows.Forms.LinkArea> zostanie określona przy użyciu <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType> właściwości. Linki do dodatkowych są dodawane do <xref:System.Windows.Forms.LinkLabel> przy użyciu <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType> metody. Uchwyty przykład <xref:System.Windows.Forms.LinkLabel.LinkClicked> zdarzenia uruchamiania przeglądarki sieci Web dla hiperłącza, i wyświetlając <xref:System.Windows.Forms.MessageBox> dla innego łącza.  
  
 [!code-cpp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CPP/linklabel.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CS/linklabel.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/VB/linklabel.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Windows.Forms.LinkArea.Start" /> Właściwość <see cref="T:System.Windows.Forms.LinkArea" /> obiektów jest mniejsza od zera.  - lub - <see cref="P:System.Windows.Forms.LinkArea.Length" /> właściwość <see cref="T:System.Windows.Forms.LinkArea" /> obiektów jest mniejsza niż -1.</exception>
        <altmember cref="T:System.Drawing.Point" />
      </Docs>
    </Member>
    <Member MemberName="LinkBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.LinkBehavior LinkBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.LinkBehavior LinkBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.LinkBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property LinkBehavior As LinkBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::LinkBehavior LinkBehavior { System::Windows::Forms::LinkBehavior get(); void set(System::Windows::Forms::LinkBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.LinkBehavior : System.Windows.Forms.LinkBehavior with get, set" Usage="System.Windows.Forms.LinkLabel.LinkBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LinkBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość, która reprezentuje zachowanie łączy.</summary>
        <value>Jeden z <see cref="T:System.Windows.Forms.LinkBehavior" /> wartości. Wartość domyślna to <see langword="LinkBehavior.SystemDefault" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia określenie zachowanie łączy, gdy są one wyświetlane w formancie. Na przykład, jeśli chcesz podkreślenie wyświetlany tylko wtedy, gdy wskaźnik myszy znajduje się za pośrednictwem łącza, można ustawić tę właściwość `LinkBehavior.HoverUnderline`. Aby uzyskać więcej informacji na typach zachowania, które może być skojarzony z łączem, zobacz <xref:System.Windows.Forms.LinkBehavior>.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, za pomocą <xref:System.Windows.Forms.LinkLabel> klasa z wieloma <xref:System.Windows.Forms.LinkArea> sekcje zdefiniowane, aby wyświetlić etykiety na formularzu. W przykładzie pokazano ustawienie <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>, i <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> właściwości, aby dostosować wygląd <xref:System.Windows.Forms.LinkLabel>. Pierwszy <xref:System.Windows.Forms.LinkArea> zostanie określona przy użyciu <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType> właściwości. Linki do dodatkowych są dodawane do <xref:System.Windows.Forms.LinkLabel> przy użyciu <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType> metody. Uchwyty przykład <xref:System.Windows.Forms.LinkLabel.LinkClicked> zdarzenia uruchamiania przeglądarki sieci Web dla hiperłącza, i wyświetlając <xref:System.Windows.Forms.MessageBox> dla innego łącza.  
  
 [!code-cpp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CPP/linklabel.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CS/linklabel.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/VB/linklabel.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Wartość nie przypisano oznacza to nie jest elementem <see cref="T:System.Windows.Forms.LinkBehavior" /> wartości.</exception>
        <altmember cref="T:System.Windows.Forms.LinkBehavior" />
      </Docs>
    </Member>
    <Member MemberName="LinkClicked">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.LinkLabelLinkClickedEventHandler LinkClicked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.LinkLabelLinkClickedEventHandler LinkClicked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.LinkLabel.LinkClicked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LinkClicked As LinkLabelLinkClickedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::LinkLabelLinkClickedEventHandler ^ LinkClicked;" />
      <MemberSignature Language="F#" Value="member this.LinkClicked : System.Windows.Forms.LinkLabelLinkClickedEventHandler " Usage="member this.LinkClicked : System.Windows.Forms.LinkLabelLinkClickedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LinkLabelLinkClickedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po kliknięciu łącza wewnątrz formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj <xref:System.Windows.Forms.LinkLabel.LinkClicked> zdarzenie jest obsługiwane do wykonywania zadań, gdy użytkownik kliknie łącze w formancie. Program obsługi zdarzeń dla <xref:System.Windows.Forms.LinkLabel.LinkClicked> zdarzeń jest przekazywany wystąpienia <xref:System.Windows.Forms.LinkLabelLinkClickedEventArgs> klasę, która zawiera <xref:System.Windows.Forms.LinkLabel.Link> obiekt, który jest skojarzony z łączem, który został kliknięty. Korzystając z informacji określonych w <xref:System.Windows.Forms.LinkLabel.Link.LinkData%2A> właściwość <xref:System.Windows.Forms.LinkLabel.Link> kliknięto klasę, aby określić, które łącze lub typ zadania do wykonania, gdy łącze zostanie kliknięty. Na przykład jeśli <xref:System.Windows.Forms.LinkLabel> formant ma <xref:System.Windows.Forms.LinkLabel.Link> obiektu zdefiniowane z jego <xref:System.Windows.Forms.LinkLabel.Link.LinkData%2A> właściwość www.microsoft.com ciągu, można użyć tych informacji w obsłudze zdarzeń dla <xref:System.Windows.Forms.LinkLabel.LinkClicked> zdarzeń, aby wyświetlić witrynę sieci Web.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, przy użyciu <xref:System.Windows.Forms.LinkLabel> klasy. Uchwyty przykład <xref:System.Windows.Forms.LinkLabel.LinkClicked> zdarzenia przez otwarcie witryny sieci Web.  
  
 [!code-csharp[System.Windows.Forms.LinkLabelSimple#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelSimple/CS/form.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabelSimple#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelSimple/VB/form.vb#1)]  
  
 W poniższym przykładzie pokazano, za pomocą <xref:System.Windows.Forms.LinkLabel> klasa z wieloma <xref:System.Windows.Forms.LinkArea> sekcje zdefiniowane, aby wyświetlić etykiety na formularzu. W przykładzie pokazano ustawienie <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>, i <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> właściwości, aby dostosować wygląd <xref:System.Windows.Forms.LinkLabel>. Pierwszy <xref:System.Windows.Forms.LinkArea> zostanie określona przy użyciu <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType> właściwości. Linki do dodatkowych są dodawane do <xref:System.Windows.Forms.LinkLabel> przy użyciu <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType> metody. Uchwyty przykład <xref:System.Windows.Forms.LinkLabel.LinkClicked> zdarzenia uruchamiania przeglądarki sieci Web dla hiperłącza, i wyświetlając <xref:System.Windows.Forms.MessageBox> dla innego łącza.  
  
 [!code-cpp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CPP/linklabel.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CS/linklabel.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/VB/linklabel.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.LinkLabelLinkClickedEventHandler" />
        <altmember cref="M:System.Windows.Forms.LinkLabel.OnLinkClicked(System.Windows.Forms.LinkLabelLinkClickedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="LinkColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color LinkColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color LinkColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.LinkColor" />
      <MemberSignature Language="VB.NET" Value="Public Property LinkColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color LinkColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.LinkColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.LinkLabel.LinkColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor używany podczas wyświetlania normalne łącza.</summary>
        <value>A <see cref="T:System.Drawing.Color" /> reprezentujący kolor używany do wyświetlania normalne łącza. Domyślny kolor jest określany przez system, zazwyczaj jest to kolor <see langword="Color.Blue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia określenie kolor, który jest początkowo wyświetlana dla wszystkich łączy w <xref:System.Windows.Forms.LinkLabel>.  
  
 Istnieje wiele kolorów skojarzony z łączem. <xref:System.Windows.Forms.LinkLabel.ActiveLinkColor%2A> Właściwość umożliwia określenie kolor łącza, gdy trwa zostanie kliknięty. <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> Właściwość umożliwia określenie kolor łącza po odwiedzeniu przez użytkownika. Gdy łącze jest wyłączona, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A> służy do wyświetlania łącze w stanie wyłączenia.  
  
> [!NOTE]
>  W przypadku ustawienia tej właściwości, upewnij się, że kolor ustawieniu właściwości nie powoduje konfliktu z kolor tła formantu lub tekst nie jest poprawnie wyświetlany. Na przykład, jeśli jest kolor tła formantu `Color.Red` i ta właściwość jest ustawiona na `Color.Red`, tekstu łącza nie jest poprawnie wyświetlany.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, za pomocą <xref:System.Windows.Forms.LinkLabel> klasa z wieloma <xref:System.Windows.Forms.LinkArea> sekcje zdefiniowane, aby wyświetlić etykiety na formularzu. W przykładzie pokazano ustawienie <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>, i <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> właściwości, aby dostosować wygląd <xref:System.Windows.Forms.LinkLabel>. Pierwszy <xref:System.Windows.Forms.LinkArea> zostanie określona przy użyciu <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType> właściwości. Linki do dodatkowych są dodawane do <xref:System.Windows.Forms.LinkLabel> przy użyciu <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType> metody. Uchwyty przykład <xref:System.Windows.Forms.LinkLabel.LinkClicked> zdarzenia uruchamiania przeglądarki sieci Web dla hiperłącza, i wyświetlając <xref:System.Windows.Forms.MessageBox> dla innego łącza.  
  
 [!code-cpp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CPP/linklabel.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CS/linklabel.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/VB/linklabel.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.ActiveLinkColor" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.DisabledLinkColor" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.VisitedLinkColor" />
      </Docs>
    </Member>
    <Member MemberName="Links">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.LinkLabel.LinkCollection Links { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.LinkLabel/LinkCollection Links" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.Links" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Links As LinkLabel.LinkCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::LinkLabel::LinkCollection ^ Links { System::Windows::Forms::LinkLabel::LinkCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Links : System.Windows.Forms.LinkLabel.LinkCollection" Usage="System.Windows.Forms.LinkLabel.Links" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LinkLabel+LinkCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję powiązań zawartych w <see cref="T:System.Windows.Forms.LinkLabel" />.</summary>
        <value>A <see cref="T:System.Windows.Forms.LinkLabel.LinkCollection" /> reprezentujący łącza zawartych w <see cref="T:System.Windows.Forms.LinkLabel" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.Forms.LinkLabel> formantu można wyświetlić dowolną liczbę łączy w obrębie tekst formantu. Ta właściwość umożliwia dostęp do <xref:System.Windows.Forms.LinkLabel.LinkCollection> wystąpienia skojarzonego z <xref:System.Windows.Forms.LinkLabel> reprezentujący kolekcję łączy wyświetlanych w formancie. Następnie można użyć elementów członkowskich <xref:System.Windows.Forms.LinkLabel.LinkCollection> klasy w celu dodawania, usuwania i łącza w kolekcji. Aby uzyskać więcej informacji na typy zadań, można wykonać za pomocą kolekcji łączy, zobacz <xref:System.Windows.Forms.LinkLabel.LinkCollection>.  
  
 Gdy <xref:System.Windows.Forms.LinkLabel> formant jest utworzony, domyślne hiperłącze, zawierający całego tekstu w <xref:System.Windows.Forms.LinkLabel> formant został dodany do <xref:System.Windows.Forms.LinkLabel.LinkCollection>. To łącze domyślne można zastąpić, określając nowy obszar łącza z <xref:System.Windows.Forms.LinkLabel.LinkArea%2A> właściwości, lub określ za pomocą łącza <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A> metody <xref:System.Windows.Forms.LinkLabel.LinkCollection>. Można również usunąć hiperłącze domyślne przy użyciu <xref:System.Windows.Forms.LinkLabel.LinkCollection.Remove%2A> metody <xref:System.Windows.Forms.LinkLabel.LinkCollection> klasy.  
  
 Jeśli nie trzeba określić więcej niż jednego połączenia do wyświetlenia w ramach <xref:System.Windows.Forms.LinkLabel>, można użyć <xref:System.Windows.Forms.LinkLabel.LinkArea%2A> właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, za pomocą <xref:System.Windows.Forms.LinkLabel> klasa z wieloma <xref:System.Windows.Forms.LinkArea> sekcje zdefiniowane, aby wyświetlić etykiety na formularzu. W przykładzie pokazano ustawienie <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>, i <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> właściwości, aby dostosować wygląd <xref:System.Windows.Forms.LinkLabel>. Pierwszy <xref:System.Windows.Forms.LinkArea> zostanie określona przy użyciu <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType> właściwości. Linki do dodatkowych są dodawane do <xref:System.Windows.Forms.LinkLabel> przy użyciu <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType> metody. Uchwyty przykład <xref:System.Windows.Forms.LinkLabel.LinkClicked> zdarzenia uruchamiania przeglądarki sieci Web dla hiperłącza, i wyświetlając <xref:System.Windows.Forms.MessageBox> dla innego łącza.  
  
 [!code-cpp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CPP/linklabel.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CS/linklabel.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/VB/linklabel.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.LinkLabel.LinkCollection" />
      </Docs>
    </Member>
    <Member MemberName="LinkVisited">
      <MemberSignature Language="C#" Value="public bool LinkVisited { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LinkVisited" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.LinkVisited" />
      <MemberSignature Language="VB.NET" Value="Public Property LinkVisited As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LinkVisited { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LinkVisited : bool with get, set" Usage="System.Windows.Forms.LinkLabel.LinkVisited" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy łącze ma być wyświetlany tak, jakby jego zostały odwiedzone.</summary>
        <value>
          <see langword="true" /> Jeśli tak, jakby były to miało miejsce; powinna zostać wyświetlona łącza w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.Forms.LinkLabel> formantu nie automatycznie oznacza że łącze jest odwiedzonego łącza. Aby wyświetlić link jako odwiedzony łącza, należy ustawić wartość tej właściwości, aby `true` w obsłudze zdarzeń dla <xref:System.Windows.Forms.LinkLabel.LinkClicked> zdarzenie <xref:System.Windows.Forms.LinkLabel>. Odwiedzonego łącza jest wyświetlany kolor określone we <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> właściwość <xref:System.Windows.Forms.LinkLabel> formantu. Raz formularz zawierający <xref:System.Windows.Forms.LinkLabel> kontroli jest zamknięty, stan "wyświetlania wszystkich" skojarzony z łączem zostaną usunięte. Aby zachować stan wyświetlania łącza, należy przechowywać stanu wyświetlania łącza w ustawienie rejestru, skojarzone z aplikacją.  
  
> [!NOTE]
>  Ta właściwość dotyczy tylko pierwszy link zdefiniowane w <xref:System.Windows.Forms.LinkLabel> formantu. Jeśli masz więcej niż jednego połączenia określony w formancie, użyj <xref:System.Windows.Forms.LinkLabel.Link.Visited%2A> właściwość <xref:System.Windows.Forms.LinkLabel.Link> klasy. Są dostępne wszystkie linki, które są zdefiniowane w <xref:System.Windows.Forms.LinkLabel> przy użyciu <xref:System.Windows.Forms.LinkLabel.Links%2A> właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano ustawienie <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A> za pomocą właściwości <xref:System.Windows.Forms.LinkBehavior> wyliczenia. Ustawienie ilustruje też <xref:System.Windows.Forms.LinkLabel.ActiveLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A> i <xref:System.Windows.Forms.LinkLabel.LinkVisited%2A> właściwości. Do uruchomienia tego przykładu wklej go w postaci pustego i wywołanie `InitializeLinkLabel` z konstruktora formularza lub `Load` metody.  
  
 [!code-cpp[System.Windows.Forms.LinkLabelExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabelExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabelExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAutoSizeChanged">
      <MemberSignature Language="C#" Value="protected override void OnAutoSizeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAutoSizeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnAutoSizeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAutoSizeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnAutoSizeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnAutoSizeChanged : EventArgs -&gt; unit" Usage="linkLabel.OnAutoSizeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.Label.AutoSizeChanged" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.LinkLabel.OnAutoSizeChanged%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.LinkLabel.OnAutoSizeChanged(System.EventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.LinkLabel.OnAutoSizeChanged(System.EventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnEnabledChanged">
      <MemberSignature Language="C#" Value="protected override void OnEnabledChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEnabledChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnEnabledChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEnabledChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEnabledChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnEnabledChanged : EventArgs -&gt; unit" Usage="linkLabel.OnEnabledChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zapewnia obsługę <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.LinkLabel.OnEnabledChanged%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.LinkLabel.OnEnabledChanged(System.EventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.LinkLabel.OnEnabledChanged(System.EventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="linkLabel.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.Control.FontChanged" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnGotFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnGotFocus : EventArgs -&gt; unit" Usage="linkLabel.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.Control.GotFocus" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.LinkLabel.OnGotFocus(System.EventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" /> metody.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.Control" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="E:System.Windows.Forms.Control.GotFocus" />
        <altmember cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="linkLabel.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.LinkLabel.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> metody.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.Control" />
        <altmember cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
        <altmember cref="T:System.Windows.Forms.KeyEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnLinkClicked">
      <MemberSignature Language="C#" Value="protected virtual void OnLinkClicked (System.Windows.Forms.LinkLabelLinkClickedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLinkClicked(class System.Windows.Forms.LinkLabelLinkClickedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnLinkClicked(System.Windows.Forms.LinkLabelLinkClickedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLinkClicked (e As LinkLabelLinkClickedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLinkClicked(System::Windows::Forms::LinkLabelLinkClickedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLinkClicked : System.Windows.Forms.LinkLabelLinkClickedEventArgs -&gt; unit&#xA;override this.OnLinkClicked : System.Windows.Forms.LinkLabelLinkClickedEventArgs -&gt; unit" Usage="linkLabel.OnLinkClicked e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.LinkLabelLinkClickedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.LinkLabelLinkClickedEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.LinkLabel.LinkClicked" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.LinkLabel.OnLinkClicked%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.LinkLabel.OnLinkClicked(System.Windows.Forms.LinkLabelLinkClickedEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.LinkLabel.OnLinkClicked(System.Windows.Forms.LinkLabelLinkClickedEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.LinkLabelLinkClickedEventArgs" />
        <altmember cref="E:System.Windows.Forms.LinkLabel.LinkClicked" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnLostFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLostFocus : EventArgs -&gt; unit" Usage="linkLabel.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.Control.LostFocus" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.LinkLabel.OnLostFocus(System.EventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" /> metody.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.Control" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="E:System.Windows.Forms.Control.LostFocus" />
        <altmember cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDown : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="linkLabel.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.LinkLabel.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> metody.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.Control" />
        <altmember cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeave : EventArgs -&gt; unit" Usage="linkLabel.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.LinkLabel.OnMouseLeave(System.EventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /> metody.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.Control" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseMove : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="linkLabel.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.LinkLabel.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> metody.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.Control" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
        <altmember cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="linkLabel.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.LinkLabel.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> metody.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.Control" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
        <altmember cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPaddingChanged">
      <MemberSignature Language="C#" Value="protected override void OnPaddingChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaddingChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnPaddingChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaddingChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaddingChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaddingChanged : EventArgs -&gt; unit" Usage="linkLabel.OnPaddingChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.Control.PaddingChanged" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.LinkLabel.OnPaddingChanged%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.LinkLabel.OnPaddingChanged(System.EventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.LinkLabel.OnPaddingChanged(System.EventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="linkLabel.OnPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.LinkLabel.OnPaint(System.Windows.Forms.PaintEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" /> metody.</para>
        </block>
        <altmember cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" />
        <altmember cref="T:System.Windows.Forms.PaintEventArgs" />
        <altmember cref="T:System.Windows.Forms.Control" />
      </Docs>
    </Member>
    <Member MemberName="OnPaintBackground">
      <MemberSignature Language="C#" Value="protected override void OnPaintBackground (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaintBackground(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaintBackground (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaintBackground(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaintBackground : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="linkLabel.OnPaintBackground e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Umożliwia malowanie tła formantu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextAlignChanged">
      <MemberSignature Language="C#" Value="protected override void OnTextAlignChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextAlignChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnTextAlignChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextAlignChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextAlignChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextAlignChanged : EventArgs -&gt; unit" Usage="linkLabel.OnTextAlignChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.Label.TextAlignChanged" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Label.OnTextAlignChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected override void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextChanged : EventArgs -&gt; unit" Usage="linkLabel.OnTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zapewnia obsługę <see cref="E:System.Windows.Forms.Control.TextChanged" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OverrideCursor">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.Cursor OverrideCursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor OverrideCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.OverrideCursor" />
      <MemberSignature Language="VB.NET" Value="Protected Property OverrideCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Forms::Cursor ^ OverrideCursor { System::Windows::Forms::Cursor ^ get(); void set(System::Windows::Forms::Cursor ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OverrideCursor : System.Windows.Forms.Cursor with get, set" Usage="System.Windows.Forms.LinkLabel.OverrideCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wskaźnik myszy do użycia, gdy wskaźnik myszy znajduje się w granicach <see cref="T:System.Windows.Forms.LinkLabel" />.</summary>
        <value>
          <see cref="T:System.Windows.Forms.Cursor" /> Do użycia, gdy wskaźnik myszy znajduje się w <see cref="T:System.Windows.Forms.LinkLabel" /> granic.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.LinkLabel.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wewnętrzne odstępy w pikselach między krawędzi <see cref="T:System.Windows.Forms.LinkLabel" /> i jego zawartość.</summary>
        <value>
          <see cref="T:System.Windows.Forms.Padding" /> wartości reprezentują wewnętrzne odstępy w pikselach.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointInLink">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.LinkLabel.Link PointInLink (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Windows.Forms.LinkLabel/Link PointInLink(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.PointInLink(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Function PointInLink (x As Integer, y As Integer) As LinkLabel.Link" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Forms::LinkLabel::Link ^ PointInLink(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.PointInLink : int * int -&gt; System.Windows.Forms.LinkLabel.Link" Usage="linkLabel.PointInLink (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LinkLabel+Link</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">Poziomy współrzędnych punktu wyszukiwania dla łącza.</param>
        <param name="y">Pionowy współrzędnych punktu wyszukiwania dla łącza.</param>
        <summary>Pobiera link znajdujący się na współrzędne określonego klienta.</summary>
        <returns>A <see cref="T:System.Windows.Forms.LinkLabel.Link" /> reprezentujący łącze znajduje się w określonych współrzędnych. Jeśli punkt nie zawiera łącza, <see langword="null" /> jest zwracany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia określenie, czy łącze znajduje się w określonym punkcie w <xref:System.Windows.Forms.LinkLabel> formantu. Tej metody można użyć w obsłudze zdarzeń dla <xref:System.Windows.Forms.Control.MouseEnter> zdarzeń formantu, aby określić, czy wskaźnik myszy znajduje się za pośrednictwem łącza w formancie. Po określeniu, czy wskaźnik myszy znajduje się za pośrednictwem łącza, następnie można wyświetlić dodatkowe informacje o łączu za pośrednictwem <xref:System.Windows.Forms.StatusBar> tekstu lub <xref:System.Windows.Forms.ToolTip>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Point" />
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessDialogKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.ProcessDialogKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessDialogKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessDialogKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessDialogKey : System.Windows.Forms.Keys -&gt; bool" Usage="linkLabel.ProcessDialogKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Flagi klucza kodu i modyfikatora.</param>
        <summary>Przetwarza klucza okna dialogowego.</summary>
        <returns>
          <see langword="true" /> Użycie klucza; <see langword="false" /> umożliwia dalsze przetwarzanie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana podczas przetwarzania wstępnego komunikatu do obsługi okna dialogowego znaków, takich jak karty, RETURN ESCAPE i klawiszy strzałek. Ta metoda jest wywoływana tylko wtedy, gdy `isInputKey` metoda wskazuje, że formant nie jest zainteresowani klucz. `processDialogKey` po prostu wysyła do nadrzędnego znak `processDialogKey` metody lub zwraca wartość false, jeśli formant nie ma nadrzędnego. `Form` Klasa zastępuje tę metodę w celu przetwarzania rzeczywiste kluczy okna dialogowego. W przypadku przesłaniania `processDialogKey`, powinien zwrócić kontrolkę `true` aby wskazać, że został on przetworzony klucza. Dla kluczy, które nie są przetwarzane przez formant wynik `base.processDialogChar` ma zostać zwrócony. Formanty rzadko, jeśli w ogóle, należy przesłonić tę metodę.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="protected override void Select (bool directed, bool forward);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Select(bool directed, bool forward) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.Select(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Select (directed As Boolean, forward As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Select(bool directed, bool forward);" />
      <MemberSignature Language="F#" Value="override this.Select : bool * bool -&gt; unit" Usage="linkLabel.Select (directed, forward)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directed" Type="System.Boolean" />
        <Parameter Name="forward" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="directed">
          <see langword="true" /> Aby określić kierunek kontrolki, aby wybrać; w przeciwnym razie <see langword="false" />.</param>
        <param name="forward">
          <see langword="true" /> Aby przejść do przodu w kolejności tabulacji; <see langword="false" /> Aby poruszać się wstecz w kolejności tabulacji.</param>
        <summary>Aktywuje formant podrzędny. Opcjonalnie określa kierunek, w kolejności tabulacji, aby wybrać formantu z.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SetBoundsCore">
      <MemberSignature Language="C#" Value="protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetBoundsCore(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetBoundsCore (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetBoundsCore(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.SetBoundsCore : int * int * int * int * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="linkLabel.SetBoundsCore (x, y, width, height, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x">Nowy lewej strony kontrolki.</param>
        <param name="y">Nowe prawej stronie formantu.</param>
        <param name="width">Nową szerokość formantu.</param>
        <param name="height">Nową wysokość formantu.</param>
        <param name="specified">Wartości, które zostały określone. Ten parametr odzwierciedla zamiarów użytkownika, nie wartości, które zostały zmienione.</param>
        <summary>Wykonuje pracę ustawienia granic tego formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dziedziczenie klas mogą przesłaniać tę funkcję, aby dodać ograniczenia rozmiaru. Dziedziczenie klas należy wywołać `base.setBoundsCore` faktycznie spowodować granice formantu, aby zmienić.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IButtonControl.DialogResult">
      <MemberSignature Language="C#" Value="System.Windows.Forms.DialogResult System.Windows.Forms.IButtonControl.DialogResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DialogResult System.Windows.Forms.IButtonControl.DialogResult" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.System#Windows#Forms#IButtonControl#DialogResult" />
      <MemberSignature Language="VB.NET" Value=" Property DialogResult As DialogResult Implements IButtonControl.DialogResult" />
      <MemberSignature Language="C++ CLI" Value="property System::Windows::Forms::DialogResult System.Windows.Forms.IButtonControl.DialogResult { System::Windows::Forms::DialogResult get(); void set(System::Windows::Forms::DialogResult value); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.LinkLabel.System.Windows.Forms.IButtonControl.DialogResult" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.IButtonControl.DialogResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="P:System.Windows.Forms.IButtonControl.DialogResult" />.</summary>
        <value>Jeden z <see cref="T:System.Windows.Forms.DialogResult" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Forms.LinkLabel> wystąpienia jest rzutowane na <xref:System.Windows.Forms.IButtonControl> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IButtonControl.NotifyDefault">
      <MemberSignature Language="C#" Value="void IButtonControl.NotifyDefault (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Forms.IButtonControl.NotifyDefault(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.System#Windows#Forms#IButtonControl#NotifyDefault(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Sub NotifyDefault (value As Boolean) Implements IButtonControl.NotifyDefault" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Forms.IButtonControl.NotifyDefault(bool value) = System::Windows::Forms::IButtonControl::NotifyDefault;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IButtonControl.NotifyDefault(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <see langword="true" /> Jeśli formant zachowania w przypadku jako przycisk domyślny; w przeciwnym razie <see langword="false" />.</param>
        <summary>Powiadamia <see cref="T:System.Windows.Forms.LinkLabel" /> kontroli jest przycisk domyślny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.Forms.LinkLabel> kontroli, pojawi się taka sama niezależnie od tego, czy jest przycisk domyślny, dlatego wywołanie tej metody nie zmieni się wygląd i zachowanie <xref:System.Windows.Forms.LinkLabel>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IButtonControl.PerformClick">
      <MemberSignature Language="C#" Value="void IButtonControl.PerformClick ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Forms.IButtonControl.PerformClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.System#Windows#Forms#IButtonControl#PerformClick" />
      <MemberSignature Language="VB.NET" Value="Sub PerformClick () Implements IButtonControl.PerformClick" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Forms.IButtonControl.PerformClick() = System::Windows::Forms::IButtonControl::PerformClick;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IButtonControl.PerformClick</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Generuje <see cref="E:System.Windows.Forms.Control.Click" /> zdarzenia dla <see cref="T:System.Windows.Forms.LinkLabel" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie tej metody powoduje, że pierwszy link w <xref:System.Windows.Forms.LinkLabel.LinkCollection> do można klikać.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabStop">
      <MemberSignature Language="C#" Value="public bool TabStop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TabStop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.TabStop" />
      <MemberSignature Language="VB.NET" Value="Public Property TabStop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TabStop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TabStop : bool with get, set" Usage="System.Windows.Forms.LinkLabel.TabStop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy użytkownik może karty, aby <see cref="T:System.Windows.Forms.LinkLabel" />.</summary>
        <value>
          <see langword="true" /> Jeśli użytkownik może karty, aby <see cref="T:System.Windows.Forms.LinkLabel" />; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.LinkLabel.TabStop%2A> Właściwość jest `true` domyślnie tak długo, jak istnieje co najmniej jedno łącze większym niż zerowej długości w <xref:System.Windows.Forms.LinkLabel.Links%2A> kolekcji. <xref:System.Windows.Forms.LinkLabel> Formant ma jeden <xref:System.Windows.Forms.Control.TabIndex%2A> wartość. Jednak każde łącze w większym niż zerowej długości pobiera własną tabulatora, w kolejności od lewej do prawej. Aby zapobiec karty nawigacji do <xref:System.Windows.Forms.LinkLabel> kontrolować, ustaw <xref:System.Windows.Forms.LinkLabel.TabStop%2A> właściwości `false`. Należy jednak pamiętać Dodawanie nowych łączący <xref:System.Windows.Forms.LinkLabel.Links%2A> automatycznie ustawi kolekcji <xref:System.Windows.Forms.LinkLabel.TabStop%2A> właściwości `true` ponownie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabStopChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TabStopChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TabStopChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.LinkLabel.TabStopChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TabStopChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TabStopChanged;" />
      <MemberSignature Language="F#" Value="member this.TabStopChanged : EventHandler " Usage="member this.TabStopChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wartość <see cref="P:System.Windows.Forms.Label.TabStop" /> zmiany właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.LinkLabel.TabStopChanged> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.LinkLabel> o nazwie `LinkLabel1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.LinkLabel.TabStopChanged> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#460](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#460)]
 [!code-vb[System.Windows.Forms.EventExamples#460](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#460)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.LinkLabel.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst wyświetlany przez <see cref="T:System.Windows.Forms.LinkLabel" />.</summary>
        <value>Tekst wyświetlany przez <see cref="T:System.Windows.Forms.LinkLabel" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCompatibleTextRendering">
      <MemberSignature Language="C#" Value="public bool UseCompatibleTextRendering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCompatibleTextRendering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.UseCompatibleTextRendering" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCompatibleTextRendering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCompatibleTextRendering { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseCompatibleTextRendering : bool with get, set" Usage="System.Windows.Forms.LinkLabel.UseCompatibleTextRendering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy używać <see cref="T:System.Drawing.Graphics" /> klasy ([! INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-MD.MD)]) lub <see cref="T:System.Windows.Forms.TextRenderer" /> klasy ([! INCLUDE[ndptecgdi](~/includes/ndptecgdi-MD.MD)]) do renderowania tekstu.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Drawing.Graphics" /> klasy powinny być używane do przeprowadzenia renderowanie tekstu zgodność z wersjami 1.0 i 1.1. programu .NET Framework; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Windows.Forms.LinkLabel.UseCompatibleTextRendering%2A> właściwość jest ustawiona na `false`, <xref:System.Windows.Forms.LinkArea> obejmuje cały tekst. Na przykład tekst, takie jak "abcd" jest odwzorowywany z podkreślone spacje końcowe.  
  
 Jeśli <xref:System.Windows.Forms.LinkLabel.UseCompatibleTextRendering%2A> właściwość jest ustawiona na `true`, <xref:System.Windows.Forms.LinkArea> nie obejmuje całego tekstu.  
  
 `UseCompatibleTextRendering` Właściwości mają na celu dostarczenie visual zgodność formanty formularzy systemu Windows w tym renderowania tekstu przy użyciu <xref:System.Windows.Forms.TextRenderer> klasy i [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] i [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)] aplikacji, które wykonują renderowanie tekstu niestandardowego za pomocą <xref:System.Drawing.Graphics>klasy. W większości przypadków, jeśli aplikacja nie jest uaktualniany z [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] lub [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)], zaleca się pozostawienie `UseCompatibleTextRendering` ustawioną wartość domyślną `false`.  
  
 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] Na podstawie <xref:System.Windows.Forms.TextRenderer> klasy została wprowadzona w systemie [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] zwiększyć wydajność, aby tekst wygląd i lepszą obsługę międzynarodowe czcionki. W starszych wersjach [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] na podstawie <xref:System.Drawing.Graphics> klasa została użyta do wykonania wszystkich renderowanie tekstu. [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] oblicza odstępy i zawijanie zależy od [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]. W aplikacji formularzy systemu Windows, która używa <xref:System.Drawing.Graphics> klasy do renderowania tekstu, może to spowodować tekstu dla kontrolek, które używają <xref:System.Windows.Forms.TextRenderer> się pojawić różne od innego tekstu w aplikacji. Aby rozwiązać ten niezgodności, można ustawić `UseCompatibleTextRendering` właściwości `true` dla określonego formantu. Aby ustawić `UseCompatibleTextRendering` do `true` dla wszystkich obsługiwanych formantów w aplikacji, należy wywołać <xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A?displayProperty=nameWithType> metody z parametrem `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.LinkArea" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.LinkArea" />
        <altmember cref="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)" />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering" />
      </Docs>
    </Member>
    <Member MemberName="VisitedLinkColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color VisitedLinkColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color VisitedLinkColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.VisitedLinkColor" />
      <MemberSignature Language="VB.NET" Value="Public Property VisitedLinkColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color VisitedLinkColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.VisitedLinkColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.LinkLabel.VisitedLinkColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor używany podczas wyświetlania łącze czy który zostało wcześniej odwiedzone.</summary>
        <value>A <see cref="T:System.Drawing.Color" /> reprezentujący kolor używany do wyświetlenia łącza, które zostały odwiedzone. Domyślny kolor jest określany przez system, zazwyczaj jest to kolor <see langword="Color.Purple" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia określenie kolorów, która jest wyświetlana dla wszystkich łączy `LinkLabel` <xref:System.Windows.Forms> odwiedzone przez użytkownika.  
  
 Istnieje wiele kolorów skojarzony z łączem. Wszystkie linki w <xref:System.Windows.Forms.LinkLabel> początkowo są wyświetlane z koloru zdefiniowanego w <xref:System.Windows.Forms.LinkLabel.LinkColor%2A> właściwości. <xref:System.Windows.Forms.LinkLabel.ActiveLinkColor%2A> Właściwość umożliwia określenie kolor łącza, gdy trwa zostanie kliknięty. Gdy łącze jest wyłączona, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A> służy do wyświetlania łącze w stanie wyłączenia.  
  
> [!NOTE]
>  W przypadku ustawienia tej właściwości, upewnij się, że kolor ustawieniu właściwości nie powoduje konfliktu z kolor tła formantu lub tekst nie jest poprawnie wyświetlany. Na przykład, jeśli jest kolor tła formantu `Color.Red` i ta właściwość jest ustawiona na `Color.Red`, tekst nie jest wyświetlany prawidłowo po link jest wyświetlany jako odwiedzonego łącza.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, za pomocą <xref:System.Windows.Forms.LinkLabel> klasa z wieloma <xref:System.Windows.Forms.LinkArea> sekcje zdefiniowane, aby wyświetlić etykiety na formularzu. W przykładzie pokazano ustawienie <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>, i <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> właściwości, aby dostosować wygląd <xref:System.Windows.Forms.LinkLabel>. Pierwszy <xref:System.Windows.Forms.LinkArea> zostanie określona przy użyciu <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType> właściwości. Linki do dodatkowych są dodawane do <xref:System.Windows.Forms.LinkLabel> przy użyciu <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType> metody. Uchwyty przykład <xref:System.Windows.Forms.LinkLabel.LinkClicked> zdarzenia uruchamiania przeglądarki sieci Web dla hiperłącza, i wyświetlając <xref:System.Windows.Forms.MessageBox> dla innego łącza.  
  
 [!code-cpp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CPP/linklabel.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CS/linklabel.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/VB/linklabel.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.ActiveLinkColor" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.DisabledLinkColor" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.LinkColor" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message msg);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef msg As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % msg);" />
      <MemberSignature Language="F#" Value="override this.WndProc :  -&gt; unit" Usage="linkLabel.WndProc msg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="msg">Komunikat do przetworzenia.</param>
        <summary>Przetwarza określony komunikat systemu Windows.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem niezarządzanym. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>