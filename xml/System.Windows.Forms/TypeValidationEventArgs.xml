<Type Name="TypeValidationEventArgs" FullName="System.Windows.Forms.TypeValidationEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9d0eb47a8e35b626a1c89be275e931ce1b2e33f8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30706316" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TypeValidationEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeValidationEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TypeValidationEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeValidationEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeValidationEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia dane dla <see cref="E:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted" /> zdarzeń.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> Zdarzenie po <xref:System.Windows.Forms.MaskedTextBox> formant sprawdza poprawność typu opcjonalne. Typ weryfikacji występuje tylko gdy <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A?displayProperty=nameWithType> właściwość nie jest `null` i związku przyczynowo wystąpieniu akcji, takich jak <xref:System.Windows.Forms.MaskedTextBox> formant utraci fokus. *Sprawdzanie poprawności* jest możliwość przekonwertować ciągu wejściowego sformatowany na typ reprezentowany przez <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> właściwości. Aby uzyskać więcej informacji na temat procesu sprawdzania poprawności typu, zobacz <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> zdarzeń.  
  
 Jeśli program obsługi zdarzeń został zaimplementowany dla <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted>, program obsługi odbiera parametr typu <xref:System.Windows.Forms.TypeValidationEventArgs>. Ten parametr zawiera informacje o zdarzeniu, takie jak czy Proces konwersji typu zakończyło się pomyślnie, typ sprawdzania poprawności i tak dalej.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego typu. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.MaskedTextBox> o nazwie `MaskedTextBox1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#488](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#488)]
 [!code-vb[System.Windows.Forms.EventExamples#488](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#488)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.Forms.MaskedTextBox.ValidatingType" />
    <altmember cref="M:System.Windows.Forms.MaskedTextBox.ValidateText" />
    <altmember cref="E:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeValidationEventArgs (Type validatingType, bool isValidInput, object returnValue, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type validatingType, bool isValidInput, object returnValue, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TypeValidationEventArgs.#ctor(System.Type,System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (validatingType As Type, isValidInput As Boolean, returnValue As Object, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeValidationEventArgs(Type ^ validatingType, bool isValidInput, System::Object ^ returnValue, System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="validatingType" Type="System.Type" />
        <Parameter Name="isValidInput" Type="System.Boolean" />
        <Parameter Name="returnValue" Type="System.Object" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="validatingType">
          <see cref="T:System.Type" /> Który sformatowany ciąg wejściowy został sprawdzana względem.</param>
        <param name="isValidInput">A <see cref="T:System.Boolean" /> wartość wskazującą, czy sformatowany ciąg został pomyślnie przekonwertowany na typ sprawdzania poprawności.</param>
        <param name="returnValue">
          <see cref="T:System.Object" /> Czyli wynik sformatowanego ciągu konwersji na typ docelowy.</param>
        <param name="message">A <see cref="T:System.String" /> zawierający opis procesu konwersji.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.TypeValidationEventArgs" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametry <xref:System.Windows.Forms.TypeValidationEventArgs.%23ctor%2A> konstruktora są używane do zainicjowania odpowiednich właściwości tylko do odczytu tej klasy.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TypeValidationEventArgs.ValidatingType" />
        <altmember cref="P:System.Windows.Forms.TypeValidationEventArgs.IsValidInput" />
        <altmember cref="P:System.Windows.Forms.TypeValidationEventArgs.ReturnValue" />
        <altmember cref="P:System.Windows.Forms.TypeValidationEventArgs.Message" />
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public bool Cancel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Cancel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TypeValidationEventArgs.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Property Cancel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Cancel { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy zdarzenie powinno być anulowane.</summary>
        <value>
          <see langword="true" /> Jeśli zdarzenie powinno być anulowane i fokus zachowywane przez <see cref="T:System.Windows.Forms.MaskedTextBox" /> kontrolować; w przeciwnym razie <see langword="false" /> kontynuować przetwarzanie sprawdzania poprawności.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> Zdarzeń występuje tuż przed <xref:System.Windows.Forms.Control.Validating> zdarzeń.  
  
 Ustawienie <xref:System.Windows.Forms.TypeValidationEventArgs.Cancel%2A> właściwości `true` w <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> obsługi zdarzeń spowoduje anulowanie zdarzenia, powoduje <xref:System.Windows.Forms.MaskedTextBox> formantu, aby utrzymać fokus, chyba że kolejne <xref:System.Windows.Forms.Control.Validating> zdarzeń ustawia swoją wersję <xref:System.ComponentModel.CancelEventArgs.Cancel%2A?displayProperty=nameWithType> właściwości Aby `false`.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted?displayProperty=nameWithType> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.MaskedTextBox> o nazwie `MaskedTextBox1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#488](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#488)]
 [!code-vb[System.Windows.Forms.EventExamples#488](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#488)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted" />
        <altmember cref="E:System.Windows.Forms.Control.Validating" />
      </Docs>
    </Member>
    <Member MemberName="IsValidInput">
      <MemberSignature Language="C#" Value="public bool IsValidInput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValidInput" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TypeValidationEventArgs.IsValidInput" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsValidInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsValidInput { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy sformatowany ciąg wejściowy został pomyślnie przekonwertowany na typ sprawdzania poprawności.</summary>
        <value>
          <see langword="true" /> Jeśli sformatowany ciąg wejściowy można przekonwertować na typ określony przez <see cref="P:System.Windows.Forms.TypeValidationEventArgs.ValidatingType" /> właściwość; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TypeValidationEventArgs.IsValidInput%2A> Właściwość wskazuje Powodzenie `Parse` znaleziono metody w <xref:System.Type> reprezentowany przez <xref:System.Windows.Forms.TypeValidationEventArgs.ValidatingType%2A> właściwości. Ten typ musi zawierać `Parse` metody o jedną lub obie następujące podpisów:  
  
 `public static Object Parse(string)`  
  
 `public static Object Parse(string, IFormatProvider)`  
  
 `Parse` jest wywoływana przed <xref:System.Windows.Forms.MaskedTextBox> kontrolować zgłasza <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> zdarzeń. Ta metoda jest wywoływana z zawartością, minus znaki monitu o <xref:System.Windows.Forms.MaskedTextBox.Text%2A> właściwość <xref:System.Windows.Forms.MaskedTextBox> klasy. Jeśli to się powiedzie, zwraca przekonwertowany obiekt; w przeciwnym razie zwraca `null`.  
  
 Aby uzyskać więcej informacji na temat procesu sprawdzania poprawności typu, zobacz <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted?displayProperty=nameWithType> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.MaskedTextBox> o nazwie `MaskedTextBox1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#488](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#488)]
 [!code-vb[System.Windows.Forms.EventExamples#488](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#488)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TypeValidationEventArgs.ValidatingType" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ValidatingType" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Text" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TypeValidationEventArgs.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Message { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wiadomość SMS zawierająca opis procesu konwersji.</summary>
        <value>A <see cref="T:System.String" /> zawierający opis procesu konwersji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Proces weryfikacji pociąga za sobą Konwertowanie danych wejściowych użytkownika sformatowany na typ zdefiniowany przez <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> właściwości. <xref:System.Windows.Forms.TypeValidationEventArgs.Message%2A> Właściwość zawiera opis procesu konwersji. <xref:System.Windows.Forms.TypeValidationEventArgs.Message%2A> jest szczególnie przydatne w przypadku konwersji nie powiedzie się, wskazywany przez <xref:System.Windows.Forms.TypeValidationEventArgs.IsValidInput%2A> wartość właściwości `false`.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted?displayProperty=nameWithType> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.MaskedTextBox> o nazwie `MaskedTextBox1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#488](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#488)]
 [!code-vb[System.Windows.Forms.EventExamples#488](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#488)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ValidatingType" />
        <altmember cref="P:System.Windows.Forms.TypeValidationEventArgs.IsValidInput" />
      </Docs>
    </Member>
    <Member MemberName="ReturnValue">
      <MemberSignature Language="C#" Value="public object ReturnValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ReturnValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TypeValidationEventArgs.ReturnValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReturnValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ReturnValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który jest wynikiem konwersji sformatowany ciąg wejściowy.</summary>
        <value>Jeśli weryfikacja zakończy się pomyślnie, <see cref="T:System.Object" /> reprezentujący skonwertowany typu; w przeciwnym razie <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Proces weryfikacji typu próbuje przekonwertować ciągu wejściowego sformatowane, nie włączając znaki monitu na typ określony przez <xref:System.Windows.Forms.TypeValidationEventArgs.ValidatingType%2A> właściwości. <xref:System.Windows.Forms.TypeValidationEventArgs.ReturnValue%2A> Właściwość reprezentuje wynik konwersji i jest odpowiednikiem wartości zwracane przez <xref:System.Windows.Forms.MaskedTextBox.ValidateText%2A> metody <xref:System.Windows.Forms.MaskedTextBox> klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted?displayProperty=nameWithType> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.MaskedTextBox> o nazwie `MaskedTextBox1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#488](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#488)]
 [!code-vb[System.Windows.Forms.EventExamples#488](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#488)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TypeValidationEventArgs.ValidatingType" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.ValidateText" />
      </Docs>
    </Member>
    <Member MemberName="ValidatingType">
      <MemberSignature Language="C#" Value="public Type ValidatingType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValidatingType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TypeValidationEventArgs.ValidatingType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidatingType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ValidatingType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ, który sformatowany ciąg wejściowy jest sprawdzana względem.</summary>
        <value>Element docelowy <see cref="T:System.Type" /> procesu konwersji. Nigdy nie powinna być <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Proces weryfikacji tylko wtedy, gdy <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A?displayProperty=nameWithType> właściwość <xref:System.Windows.Forms.MaskedTextBox> klasa nie jest `null`. <xref:System.Windows.Forms.TypeValidationEventArgs.ValidatingType%2A> Właściwość odwołuje się ten sam typ, który reprezentuje typ docelowy procesu konwersji.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted?displayProperty=nameWithType> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.MaskedTextBox> o nazwie `MaskedTextBox1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#488](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#488)]
 [!code-vb[System.Windows.Forms.EventExamples#488](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#488)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TypeValidationEventArgs.ReturnValue" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ValidatingType" />
      </Docs>
    </Member>
  </Members>
</Type>