<Type Name="Timer" FullName="System.Windows.Forms.Timer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="edf81ff72ec14a0a499608d1879749fafd6f668b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Timer : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Timer extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Timer" />
  <TypeSignature Language="VB.NET" Value="Public Class Timer&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class Timer : System::ComponentModel::Component" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Tick")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Interval")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3eeaa-101">Implementuje czasomierza, który wywołuje zdarzenie w interwałach zdefiniowanych przez użytkownika.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3eeaa-101">Implements a timer that raises an event at user-defined intervals.</span>
      </span>
      <span data-ttu-id="3eeaa-102">Ten czasomierz jest zoptymalizowana pod kątem użycia w aplikacjach formularzy systemu Windows i mogą być używane w oknie.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3eeaa-102">This timer is optimized for use in Windows Forms applications and must be used in a window.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3eeaa-103">A <xref:System.Windows.Forms.Timer> służy do wywołaj zdarzenie w interwałach zdefiniowanych przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-103">A <xref:System.Windows.Forms.Timer> is used to raise an event at user-defined intervals.</span></span> <span data-ttu-id="3eeaa-104">Ten czasomierz systemu Windows jest przeznaczony dla jednowątkowe środowisko, w którym wątków interfejsu użytkownika są używane do przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-104">This Windows timer is designed for a single-threaded environment where UI threads are used to perform processing.</span></span> <span data-ttu-id="3eeaa-105">Go wymaga kod użytkownika ma przekazywanie komunikatów interfejsu użytkownika dostępne zawsze działać z tym samym wątku lub i zorganizowania wywołania do innego wątku.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-105">It requires that the user code have a UI message pump available and always operate from the same thread, or marshal the call onto another thread.</span></span>  
  
 <span data-ttu-id="3eeaa-106">W przypadku użycia tego czasomierza użyć <xref:System.Windows.Forms.Timer.Tick> zdarzenie można wykonać operacji sondowania lub do wyświetlania ekranu powitalnego w określonym przedziale czasu.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-106">When you use this timer, use the <xref:System.Windows.Forms.Timer.Tick> event to perform a polling operation or to display a splash screen for a specified period of time.</span></span> <span data-ttu-id="3eeaa-107">Zawsze, gdy <xref:System.Windows.Forms.Timer.Enabled%2A> właściwość jest ustawiona na `true` i <xref:System.Windows.Forms.Timer.Interval%2A> właściwości jest większa od zera, <xref:System.Windows.Forms.Timer.Tick> zdarzenie jest zgłaszane w odstępach czasu, na podstawie <xref:System.Windows.Forms.Timer.Interval%2A> ustawienie właściwości.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-107">Whenever the <xref:System.Windows.Forms.Timer.Enabled%2A> property is set to `true` and the <xref:System.Windows.Forms.Timer.Interval%2A> property is greater than zero, the <xref:System.Windows.Forms.Timer.Tick> event is raised at intervals based on the <xref:System.Windows.Forms.Timer.Interval%2A> property setting.</span></span>  
  
 <span data-ttu-id="3eeaa-108">Ta klasa dostarcza metody, aby ustawić interwał i aby uruchomić i zatrzymać czasomierza.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-108">This class provides methods to set the interval, and to start and stop the timer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3eeaa-109">Składnika Timer formularzy systemu Windows jest jednowątkowy i jest ograniczony z dokładnością do milisekund 55.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-109">The Windows Forms Timer component is single-threaded, and is limited to an accuracy of 55 milliseconds.</span></span> <span data-ttu-id="3eeaa-110">Jeśli potrzebujesz wielowątkowe czasomierza o większej dokładności, użyj <xref:System.Timers.Timer> klasy w <xref:System.Timers> przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-110">If you require a multithreaded timer with greater accuracy, use the <xref:System.Timers.Timer> class in the <xref:System.Timers> namespace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3eeaa-111">Poniższy przykład implementuje czasomierz proste interwału, który ustawia wyłączyć alarm co pięć sekund.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-111">The following example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="3eeaa-112">Po wystąpieniu alarmu, <xref:System.Windows.Forms.MessageBox> jest wyświetlana liczba Liczba alarm została uruchomiona i monituje użytkownika o to, czy czasomierz nadal uruchamiać.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-112">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user as to whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3eeaa-113">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.Timer" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3eeaa-113">Initializes a new instance of the <see cref="T:System.Windows.Forms.Timer" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3eeaa-114">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.Timer" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3eeaa-114">Initializes a new instance of the <see cref="T:System.Windows.Forms.Timer" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3eeaa-115">Po utworzeniu nowego czasomierza jest wyłączony; oznacza to <xref:System.Windows.Forms.Timer.Enabled%2A> ma ustawioną wartość `false`.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-115">When a new timer is created, it is disabled; that is, <xref:System.Windows.Forms.Timer.Enabled%2A> is set to `false`.</span></span> <span data-ttu-id="3eeaa-116">Aby włączyć czasomierza, należy wywołać <xref:System.Windows.Forms.Timer.Start%2A> metody lub zestawu <xref:System.Windows.Forms.Timer.Enabled%2A> do `true`.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-116">To enable the timer, call the <xref:System.Windows.Forms.Timer.Start%2A> method or set <xref:System.Windows.Forms.Timer.Enabled%2A> to `true`.</span></span>  
  
 <span data-ttu-id="3eeaa-117">Czasomierz jest wyłączona, czasomierza wykracza poza zakres czasomierza zostanie usunięta po wyrzucania.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-117">If the timer is disabled and the timer is out of scope, the timer will be disposed when garbage collection occurs.</span></span> <span data-ttu-id="3eeaa-118">Jeśli czasomierz jest włączony, nawet jeśli jest ona poza zakresem jej nie podlega wyrzucanie elementów bezużytecznych.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-118">If the timer is enabled, even if it is out of scope, it is not subject to garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Timer.Enabled" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(System::ComponentModel::IContainer ^ container);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="container">
          <span data-ttu-id="3eeaa-119">
            <see cref="T:System.ComponentModel.IContainer" /> Reprezentujący kontener dla czasomierza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3eeaa-119">An <see cref="T:System.ComponentModel.IContainer" /> that represents the container for the timer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3eeaa-120">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.Timer" /> klasy wraz z określonego kontenera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3eeaa-120">Initializes a new instance of the <see cref="T:System.Windows.Forms.Timer" /> class together with the specified container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3eeaa-121"><xref:System.Windows.Forms.Timer> Konstruktor umożliwia kojarzenie <xref:System.Windows.Forms.Timer> ze wszystkimi <xref:System.ComponentModel.Container> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-121">The <xref:System.Windows.Forms.Timer> constructor enables you to associate a <xref:System.Windows.Forms.Timer> with any <xref:System.ComponentModel.Container> object.</span></span> <span data-ttu-id="3eeaa-122">Kojarząc <xref:System.Windows.Forms.Timer> , jak ręcznie nad formantem okres istnienia <xref:System.Windows.Forms.Timer> do <xref:System.ComponentModel.Container>.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-122">By associating the <xref:System.Windows.Forms.Timer> like this, you hand over control of the lifetime of the <xref:System.Windows.Forms.Timer> to the <xref:System.ComponentModel.Container>.</span></span> <span data-ttu-id="3eeaa-123">Może to być przydatne, jeśli używasz liczby składników w aplikacji i chcesz jednocześnie usuwa wszystkie z nich.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-123">This can be useful if you use a number of components in your application and want to dispose of all of them simultaneously.</span></span> <span data-ttu-id="3eeaa-124">Na przykład, jeśli użytkownik jest kojarzony <xref:System.Windows.Forms.ToolTip>, <xref:System.Windows.Forms.ImageList>, a <xref:System.Windows.Forms.Timer> z <xref:System.ComponentModel.Container>, wywoływania <xref:System.ComponentModel.Container.Dispose%2A> na <xref:System.ComponentModel.Container> wymusi wszystkich tych składników oraz usuwania.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-124">For example, if you associate a <xref:System.Windows.Forms.ToolTip>, an <xref:System.Windows.Forms.ImageList>, and a <xref:System.Windows.Forms.Timer> with a <xref:System.ComponentModel.Container>, calling <xref:System.ComponentModel.Container.Dispose%2A> on the <xref:System.ComponentModel.Container> will force disposal of all of these components as well.</span></span>  
  
 <span data-ttu-id="3eeaa-125">Po utworzeniu nowego czasomierza jest wyłączony; oznacza to <xref:System.Windows.Forms.Timer.Enabled%2A> ma ustawioną wartość `false`.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-125">When a new timer is created, it is disabled; that is, <xref:System.Windows.Forms.Timer.Enabled%2A> is set to `false`.</span></span> <span data-ttu-id="3eeaa-126">Aby włączyć czasomierza, należy wywołać <xref:System.Windows.Forms.Timer.Start%2A> metody lub zestawu <xref:System.Windows.Forms.Timer.Enabled%2A> do `true`.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-126">To enable the timer, call the <xref:System.Windows.Forms.Timer.Start%2A> method or set <xref:System.Windows.Forms.Timer.Enabled%2A> to `true`.</span></span>  
  
 <span data-ttu-id="3eeaa-127">To wystąpienie będzie istnieć do czasu jego kontenera zwalnia jego wyrzucanie elementów bezużytecznych.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-127">This instance will exist until its container releases it to garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="3eeaa-128">
            <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3eeaa-128">
              <see langword="true" /> to release both managed and unmanaged resources.</span>
          </span>
          <span data-ttu-id="3eeaa-129">
            <see langword="false" /> Aby zwolnić tylko zasoby niezarządzane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3eeaa-129">
              <see langword="false" /> to release only the unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3eeaa-130">Usuwa zasoby, innego niż pamięci używane przez czasomierz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3eeaa-130">Disposes of the resources, other than memory, used by the timer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3eeaa-131">Wywołanie <xref:System.Windows.Forms.Timer.Dispose%2A> po zakończeniu za pomocą czasomierza.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-131">Call <xref:System.Windows.Forms.Timer.Dispose%2A> when you are finished using the timer.</span></span> <span data-ttu-id="3eeaa-132"><xref:System.Windows.Forms.Timer.Dispose%2A> — Metoda pozostawia czasomierza w stanie uniemożliwiającym jego używanie.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-132">The <xref:System.Windows.Forms.Timer.Dispose%2A> method leaves the timer in an unusable state.</span></span> <span data-ttu-id="3eeaa-133">Po wywołaniu metody <xref:System.Windows.Forms.Timer.Dispose%2A>, należy zwolnić wszystkie odwołania do czasomierza, więc będzie można odzyskać pamięci go klasy przez wyrzucanie elementów bezużytecznych.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-133">After you call <xref:System.Windows.Forms.Timer.Dispose%2A>, you must release all references to the timer so the memory it was occupying can be reclaimed by garbage collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3eeaa-134">Wywoływanie zawsze <xref:System.Windows.Forms.Timer.Dispose%2A> przed zwolnieniem ostatniego odwołania do czasomierza.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-134">Always call <xref:System.Windows.Forms.Timer.Dispose%2A> before you release your last reference to the timer.</span></span> <span data-ttu-id="3eeaa-135">W przeciwnym razie zasoby, które używa czasomierza nie zostanie zwolniona, dopóki wyrzucanie elementów bezużytecznych wywołuje destruktor obiektu czasomierza.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-135">Otherwise, the resources the timer is using will not be freed until garbage collection calls the destructor of the timer object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public virtual bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Timer.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3eeaa-136">Pobiera lub ustawia, czy czasomierz jest uruchomiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3eeaa-136">Gets or sets whether the timer is running.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3eeaa-137">
            <see langword="true" /> Jeśli włączona jest czasomierza; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3eeaa-137">
              <see langword="true" /> if the timer is currently enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3eeaa-138">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3eeaa-138">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3eeaa-139">Czasomierz nie podlega wyrzucanie elementów bezużytecznych gdy wartość jest `true`.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-139">The timer is not subject to garbage collection when the value is `true`.</span></span>  
  
 <span data-ttu-id="3eeaa-140">Wywoływanie <xref:System.Windows.Forms.Timer.Start%2A> metoda jest taka sama jak ustawienie <xref:System.Windows.Forms.Timer.Enabled%2A> do `true`.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-140">Calling the <xref:System.Windows.Forms.Timer.Start%2A> method is the same as setting <xref:System.Windows.Forms.Timer.Enabled%2A> to `true`.</span></span> <span data-ttu-id="3eeaa-141">Podobnie wywołanie <xref:System.Windows.Forms.Timer.Stop%2A> metoda jest taka sama jak ustawienie <xref:System.Windows.Forms.Timer.Enabled%2A> do `false`.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-141">Likewise, calling the <xref:System.Windows.Forms.Timer.Stop%2A> method is the same as setting <xref:System.Windows.Forms.Timer.Enabled%2A> to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3eeaa-142">Poniższy przykład implementuje czasomierz proste interwału, który ustawia wyłączyć alarm co pięć sekund.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-142">The following example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="3eeaa-143">Po wystąpieniu alarmu, <xref:System.Windows.Forms.MessageBox> jest wyświetlana liczba Liczba alarm została uruchomiona i monituje użytkownika, czy czasomierz nadal uruchamiać.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-143">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public int Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Interval" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Timer.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Interval { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(100)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3eeaa-144">Pobiera lub ustawia czas (w milisekundach), zanim <see cref="E:System.Windows.Forms.Timer.Tick" /> zdarzenie jest wywoływane względem ostatniego wystąpienia <see cref="E:System.Windows.Forms.Timer.Tick" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3eeaa-144">Gets or sets the time, in milliseconds, before the <see cref="E:System.Windows.Forms.Timer.Tick" /> event is raised relative to the last occurrence of the <see cref="E:System.Windows.Forms.Timer.Tick" /> event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3eeaa-145">
            <see cref="T:System.Int32" /> Określająca liczbę milisekund przed <see cref="E:System.Windows.Forms.Timer.Tick" /> zdarzenie jest wywoływane względem ostatniego wystąpienia <see cref="E:System.Windows.Forms.Timer.Tick" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3eeaa-145">An <see cref="T:System.Int32" /> specifying the number of milliseconds before the <see cref="E:System.Windows.Forms.Timer.Tick" /> event is raised relative to the last occurrence of the <see cref="E:System.Windows.Forms.Timer.Tick" /> event.</span>
          </span>
          <span data-ttu-id="3eeaa-146">Wartość nie może być mniejsza niż jedna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3eeaa-146">The value cannot be less than one.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3eeaa-147">Aby uzyskać liczbę sekund dla interwału, podzielić ten numer przez 1000.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-147">To get the number of seconds in the interval, divide this number by 1,000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3eeaa-148">Poniższy przykład kodu implementuje czasomierz proste interwału, który ustawia wyłączyć alarm co pięć sekund.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-148">The following code example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="3eeaa-149">Po wystąpieniu alarmu, <xref:System.Windows.Forms.MessageBox> jest wyświetlana liczba Liczba alarm została uruchomiona i monituje użytkownika, czy czasomierz nadal uruchamiać.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-149">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTick">
      <MemberSignature Language="C#" Value="protected virtual void OnTick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTick(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3eeaa-150">
            <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3eeaa-150">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="3eeaa-151">Jest to zawsze <see cref="F:System.EventArgs.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3eeaa-151">This is always <see cref="F:System.EventArgs.Empty" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3eeaa-152">Zgłasza <see cref="E:System.Windows.Forms.Timer.Tick" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3eeaa-152">Raises the <see cref="E:System.Windows.Forms.Timer.Tick" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3eeaa-153">Ta metoda jest wywoływana dla każdej znaczników czasomierza.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-153">This method is called for each timer tick.</span></span> <span data-ttu-id="3eeaa-154">Wywołuje żadnych metod, które zostały dodane za pośrednictwem <xref:System.Windows.Forms.Timer.Tick>.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-154">It calls any methods that are added through <xref:System.Windows.Forms.Timer.Tick>.</span></span> <span data-ttu-id="3eeaa-155">Jeśli są dziedziczone z <xref:System.Windows.Forms.Timer>, mogą przesłaniać tę metodę.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-155">If you are inheriting from <xref:System.Windows.Forms.Timer>, you can override this method.</span></span>  
  
 <span data-ttu-id="3eeaa-156">Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-156">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3eeaa-157">Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span><span class="sxs-lookup"><span data-stu-id="3eeaa-157">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3eeaa-158">W przypadku przesłaniania <see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /> w klasie pochodnej, upewnij się, że wywołanie klasy podstawowej <see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /> metody.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3eeaa-158">When overriding <see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /> in a derived class, make sure that you call the base class's <see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3eeaa-159">Uruchamia czasomierz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3eeaa-159">Starts the timer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3eeaa-160">Można również uruchomić czasomierza przez ustawienie <xref:System.Windows.Forms.Timer.Enabled%2A> właściwości `true`.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-160">You can also start the timer by setting the <xref:System.Windows.Forms.Timer.Enabled%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3eeaa-161">Poniższy przykład kodu implementuje czasomierz proste interwału, który ustawia wyłączyć alarm co pięć sekund.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-161">The following code example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="3eeaa-162">Po wystąpieniu alarmu, <xref:System.Windows.Forms.MessageBox> jest wyświetlana liczba Liczba alarm została uruchomiona i monituje użytkownika, czy czasomierz nadal uruchamiać.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-162">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Timer.Enabled" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3eeaa-163">Zatrzymuje czasomierza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3eeaa-163">Stops the timer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3eeaa-164">Można również zatrzymać czasomierza przez ustawienie <xref:System.Windows.Forms.Timer.Enabled%2A> właściwości `false`.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-164">You can also stop the timer by setting the <xref:System.Windows.Forms.Timer.Enabled%2A> property to `false`.</span></span> <span data-ttu-id="3eeaa-165">A <xref:System.Windows.Forms.Timer> obiektu może być włączone i wyłączone wielokrotnie w ramach tej samej sesji aplikacji.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-165">A <xref:System.Windows.Forms.Timer> object may be enabled and disabled multiple times within the same application session.</span></span>  
  
 <span data-ttu-id="3eeaa-166">Wywoływanie <xref:System.Windows.Forms.Timer.Start%2A> po wyłączeniu <xref:System.Windows.Forms.Timer> przez wywołanie metody <xref:System.Windows.Forms.Timer.Stop%2A> spowoduje, że <xref:System.Windows.Forms.Timer> ponownego uruchomienia przerwanego interwału.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-166">Calling <xref:System.Windows.Forms.Timer.Start%2A> after you have disabled a <xref:System.Windows.Forms.Timer> by calling <xref:System.Windows.Forms.Timer.Stop%2A> will cause the <xref:System.Windows.Forms.Timer> to restart the interrupted interval.</span></span> <span data-ttu-id="3eeaa-167">Jeśli Twoje <xref:System.Windows.Forms.Timer> ustawiono interwał 5000 milisekund, i wywołania <xref:System.Windows.Forms.Timer.Stop%2A> na około 3000 milisekund, wywoływania <xref:System.Windows.Forms.Timer.Start%2A> spowoduje, że <xref:System.Windows.Forms.Timer> oczekiwania przed zgłoszeniem 5000 MS <xref:System.Windows.Forms.Timer.Tick> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-167">If your <xref:System.Windows.Forms.Timer> is set for a 5000-millisecond interval, and you call <xref:System.Windows.Forms.Timer.Stop%2A> at around 3000 milliseconds, calling <xref:System.Windows.Forms.Timer.Start%2A> will cause the <xref:System.Windows.Forms.Timer> to wait 5000 milliseconds before raising the <xref:System.Windows.Forms.Timer.Tick> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3eeaa-168">Wywoływanie zatrzymania na dowolnym <xref:System.Windows.Forms.Timer> w formularzach systemu Windows aplikacja może spowodować wiadomości z innych <xref:System.Windows.Forms.Timer> składników w aplikacji do przetwarzania, ponieważ wszystkie <xref:System.Windows.Forms.Timer> składniki działają na wątku głównego aplikacji.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-168">Calling Stop on any <xref:System.Windows.Forms.Timer> within a Windows Forms application can cause messages from other <xref:System.Windows.Forms.Timer> components in the application to be processed immediately, because all <xref:System.Windows.Forms.Timer> components operate on the main application thread.</span></span> <span data-ttu-id="3eeaa-169">Jeśli masz dwa <xref:System.Windows.Forms.Timer> składników, jedna wartość w milisekundach 700 i jeden do 500 milisekund i wywołania <xref:System.Windows.Forms.Timer.Stop%2A> pierwszego <xref:System.Windows.Forms.Timer>, aplikacja może zostać najpierw wywołania zwrotnego zdarzeń dla drugiego składnika.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-169">If you have two <xref:System.Windows.Forms.Timer> components, one set to 700 milliseconds and one set to 500 milliseconds, and you call <xref:System.Windows.Forms.Timer.Stop%2A> on the first <xref:System.Windows.Forms.Timer>, your application may receive an event callback for the second component first.</span></span> <span data-ttu-id="3eeaa-170">Jeśli okaże się problemy, rozważ użycie <xref:System.Threading.Timer> klasy w <xref:System.Threading> przestrzeni nazw zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-170">If this proves problematic, consider using the <xref:System.Threading.Timer> class in the <xref:System.Threading> namespace instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3eeaa-171">Poniższy przykład kodu implementuje czasomierz proste interwału, który ustawia wyłączyć alarm co pięć sekund.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-171">The following code example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="3eeaa-172">Po wystąpieniu alarmu, <xref:System.Windows.Forms.MessageBox> jest wyświetlana liczba Liczba alarm została uruchomiona i monituje użytkownika, czy czasomierz nadal uruchamiać.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-172">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Timer.Enabled" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Timer.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3eeaa-173">Pobiera lub ustawia dowolny ciąg reprezentujący pewien typ stanu użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3eeaa-173">Gets or sets an arbitrary string representing some type of user state.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3eeaa-174">Dowolny ciąg reprezentujący pewien typ stanu użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3eeaa-174">An arbitrary string representing some type of user state.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tick">
      <MemberSignature Language="C#" Value="public event EventHandler Tick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Tick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Timer.Tick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Tick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Tick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3eeaa-175">Występuje po upłynięciu interwału czasomierza określonego i czasomierz jest włączony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3eeaa-175">Occurs when the specified timer interval has elapsed and the timer is enabled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3eeaa-176">Wywoływanie <xref:System.Diagnostics.Debug.Assert%2A> metoda <xref:System.Diagnostics.Debug> klasy z poziomu <xref:System.Windows.Forms.Timer.Tick> zdarzenie może nie działać zgodnie z oczekiwaniami, jak wyświetlanie okna dialogowego potwierdzenia pole może spowodować systemu Windows podnieść <xref:System.Windows.Forms.Timer.Tick> zdarzeń wielokrotnie.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-176">Calling the <xref:System.Diagnostics.Debug.Assert%2A> method on the <xref:System.Diagnostics.Debug> class from within the <xref:System.Windows.Forms.Timer.Tick> event may not behave as expected, as displaying the assertion dialog box may cause Windows to raise the <xref:System.Windows.Forms.Timer.Tick> event repeatedly.</span></span> <span data-ttu-id="3eeaa-177">Firma Microsoft zaleca zaniechania testowania potwierdzenia w ramach tego zdarzenia i użyj <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, lub <xref:System.Diagnostics.Debug.WriteLineIf%2A> metody zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-177">We recommend that you refrain from testing assertions within this event, and use the <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, or <xref:System.Diagnostics.Debug.WriteLineIf%2A> methods instead.</span></span>  
  
 <span data-ttu-id="3eeaa-178">Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span><span class="sxs-lookup"><span data-stu-id="3eeaa-178">For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3eeaa-179">Poniższy przykład kodu implementuje czasomierz proste interwału, który ustawia wyłączyć alarm co pięć sekund.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-179">The following code example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="3eeaa-180">Po wystąpieniu alarmu, <xref:System.Windows.Forms.MessageBox> jest wyświetlana liczba Liczba alarm została uruchomiona i monituje użytkownika, czy czasomierz nadal uruchamiać.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-180">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3eeaa-181">Zwraca ciąg reprezentujący <see cref="T:System.Windows.Forms.Timer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3eeaa-181">Returns a string that represents the <see cref="T:System.Windows.Forms.Timer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3eeaa-182">Ciąg reprezentujący bieżące <see cref="T:System.Windows.Forms.Timer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3eeaa-182">A string that represents the current <see cref="T:System.Windows.Forms.Timer" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3eeaa-183"><xref:System.Windows.Forms.Timer.ToString%2A> Metoda zwraca ciąg zawierający wartość <xref:System.Windows.Forms.Timer.Interval%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="3eeaa-183">The <xref:System.Windows.Forms.Timer.ToString%2A> method returns a string that includes the value of the <xref:System.Windows.Forms.Timer.Interval%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>