<Type Name="Timer" FullName="System.Windows.Forms.Timer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="605adb65317c3aed410b30da1253c4608ed2231d" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69178689" /></Metadata><TypeSignature Language="C#" Value="public class Timer : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Timer extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Timer" />
  <TypeSignature Language="VB.NET" Value="Public Class Timer&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class Timer : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type Timer = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Tick")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Interval")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="578a0-101">Implementuje czasomierz, który wywołuje zdarzenie w interwałach zdefiniowanych przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="578a0-101">Implements a timer that raises an event at user-defined intervals.</span></span> <span data-ttu-id="578a0-102">Ten czasomierz jest zoptymalizowany pod kątem używania w aplikacjach Windows Forms i musi być używany w oknie.</span><span class="sxs-lookup"><span data-stu-id="578a0-102">This timer is optimized for use in Windows Forms applications and must be used in a window.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="578a0-103">A <xref:System.Windows.Forms.Timer> służy do zgłaszania zdarzenia w interwałach zdefiniowanych przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="578a0-103">A <xref:System.Windows.Forms.Timer> is used to raise an event at user-defined intervals.</span></span> <span data-ttu-id="578a0-104">Ten czasomierz systemu Windows jest przeznaczony dla środowiska jednowątkowego, w którym wątki interfejsu użytkownika są używane do przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="578a0-104">This Windows timer is designed for a single-threaded environment where UI threads are used to perform processing.</span></span> <span data-ttu-id="578a0-105">Wymaga to, aby kod użytkownika miał dostępną pompę komunikatów interfejsu użytkownika i zawsze działał z tego samego wątku, lub kierowanie wywołania do innego wątku.</span><span class="sxs-lookup"><span data-stu-id="578a0-105">It requires that the user code have a UI message pump available and always operate from the same thread, or marshal the call onto another thread.</span></span>  
  
 <span data-ttu-id="578a0-106">Korzystając z tego czasomierza, użyj <xref:System.Windows.Forms.Timer.Tick> zdarzenia, aby wykonać operację sondowania lub wyświetlić ekran powitalny przez określony czas.</span><span class="sxs-lookup"><span data-stu-id="578a0-106">When you use this timer, use the <xref:System.Windows.Forms.Timer.Tick> event to perform a polling operation or to display a splash screen for a specified period of time.</span></span> <span data-ttu-id="578a0-107"><xref:System.Windows.Forms.Timer.Tick> `true` <xref:System.Windows.Forms.Timer.Interval%2A> Zawsze, gdy <xref:System.Windows.Forms.Timer.Interval%2A> właściwość jest ustawiona na, a właściwość jest większa od zera, zdarzenie jest zgłaszane w odstępach czasu na podstawie ustawienia właściwości. <xref:System.Windows.Forms.Timer.Enabled%2A></span><span class="sxs-lookup"><span data-stu-id="578a0-107">Whenever the <xref:System.Windows.Forms.Timer.Enabled%2A> property is set to `true` and the <xref:System.Windows.Forms.Timer.Interval%2A> property is greater than zero, the <xref:System.Windows.Forms.Timer.Tick> event is raised at intervals based on the <xref:System.Windows.Forms.Timer.Interval%2A> property setting.</span></span>  
  
 <span data-ttu-id="578a0-108">Ta klasa zawiera metody ustawiające interwał i uruchamiania i zatrzymywania czasomierza.</span><span class="sxs-lookup"><span data-stu-id="578a0-108">This class provides methods to set the interval, and to start and stop the timer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="578a0-109">Składnik czasomierza Windows Forms jest jednowątkowy i jest ograniczony do dokładności 55 milisekund.</span><span class="sxs-lookup"><span data-stu-id="578a0-109">The Windows Forms Timer component is single-threaded, and is limited to an accuracy of 55 milliseconds.</span></span> <span data-ttu-id="578a0-110">Jeśli potrzebujesz czasomierza wielowątkowości z większą dokładnością, użyj <xref:System.Timers.Timer> klasy <xref:System.Timers> w przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="578a0-110">If you require a multithreaded timer with greater accuracy, use the <xref:System.Timers.Timer> class in the <xref:System.Timers> namespace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="578a0-111">W poniższym przykładzie przedstawiono implementację prostego czasomierza interwału, który ustawia alarm co pięć sekund.</span><span class="sxs-lookup"><span data-stu-id="578a0-111">The following example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="578a0-112">Gdy wystąpi alarm, <xref:System.Windows.Forms.MessageBox> wyświetlana jest liczba uruchomień alarmu i zostanie wyświetlony komunikat z pytaniem o to, czy czasomierz powinien być nadal uruchamiany.</span><span class="sxs-lookup"><span data-stu-id="578a0-112">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user as to whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="578a0-113">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.Timer" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="578a0-113">Initializes a new instance of the <see cref="T:System.Windows.Forms.Timer" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="578a0-114">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.Timer" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="578a0-114">Initializes a new instance of the <see cref="T:System.Windows.Forms.Timer" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="578a0-115">Po utworzeniu nowego czasomierza jest on wyłączony; oznacza to, <xref:System.Windows.Forms.Timer.Enabled%2A> że jest ustawiona `false`na.</span><span class="sxs-lookup"><span data-stu-id="578a0-115">When a new timer is created, it is disabled; that is, <xref:System.Windows.Forms.Timer.Enabled%2A> is set to `false`.</span></span> <span data-ttu-id="578a0-116">Aby włączyć czasomierz, wywołaj <xref:System.Windows.Forms.Timer.Start%2A> metodę lub `true`ustaw wartość <xref:System.Windows.Forms.Timer.Enabled%2A> .</span><span class="sxs-lookup"><span data-stu-id="578a0-116">To enable the timer, call the <xref:System.Windows.Forms.Timer.Start%2A> method or set <xref:System.Windows.Forms.Timer.Enabled%2A> to `true`.</span></span>  
  
 <span data-ttu-id="578a0-117">Jeśli czasomierz jest wyłączony i czasomierz jest poza zakresem, czasomierz zostanie usunięty, gdy następuje wyrzucanie elementów bezużytecznych.</span><span class="sxs-lookup"><span data-stu-id="578a0-117">If the timer is disabled and the timer is out of scope, the timer will be disposed when garbage collection occurs.</span></span> <span data-ttu-id="578a0-118">Jeśli czasomierz jest włączony, nawet jeśli znajduje się poza zakresem, nie podlega wyrzucaniu elementów bezużytecznych.</span><span class="sxs-lookup"><span data-stu-id="578a0-118">If the timer is enabled, even if it is out of scope, it is not subject to garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Timer.Enabled" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(System::ComponentModel::IContainer ^ container);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Timer : System.ComponentModel.IContainer -&gt; System.Windows.Forms.Timer" Usage="new System.Windows.Forms.Timer container" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="container"><span data-ttu-id="578a0-119"><see cref="T:System.ComponentModel.IContainer" /> Reprezentuje kontener dla czasomierza.</span><span class="sxs-lookup"><span data-stu-id="578a0-119">An <see cref="T:System.ComponentModel.IContainer" /> that represents the container for the timer.</span></span></param>
        <summary><span data-ttu-id="578a0-120">Inicjuje nowe wystąpienie <see cref="T:System.Windows.Forms.Timer" /> klasy wraz z określonym kontenerem.</span><span class="sxs-lookup"><span data-stu-id="578a0-120">Initializes a new instance of the <see cref="T:System.Windows.Forms.Timer" /> class together with the specified container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="578a0-121">Konstruktor umożliwia skojarzenie z dowolnym <xref:System.ComponentModel.Container>obiektem. <xref:System.Windows.Forms.Timer> <xref:System.Windows.Forms.Timer></span><span class="sxs-lookup"><span data-stu-id="578a0-121">The <xref:System.Windows.Forms.Timer> constructor enables you to associate a <xref:System.Windows.Forms.Timer> with any <xref:System.ComponentModel.Container> object.</span></span> <span data-ttu-id="578a0-122">Dzięki skojarzeniu <xref:System.Windows.Forms.Timer> tego elementu można przejąć kontrolę nad okresem istnienia <xref:System.Windows.Forms.Timer> do <xref:System.ComponentModel.Container>.</span><span class="sxs-lookup"><span data-stu-id="578a0-122">By associating the <xref:System.Windows.Forms.Timer> like this, you hand over control of the lifetime of the <xref:System.Windows.Forms.Timer> to the <xref:System.ComponentModel.Container>.</span></span> <span data-ttu-id="578a0-123">Może to być przydatne, jeśli używasz kilku składników w aplikacji i chcesz usunąć wszystkie z nich jednocześnie.</span><span class="sxs-lookup"><span data-stu-id="578a0-123">This can be useful if you use a number of components in your application and want to dispose of all of them simultaneously.</span></span> <span data-ttu-id="578a0-124">Na przykład, jeśli <xref:System.Windows.Forms.ToolTip>kojarzy <xref:System.Windows.Forms.ImageList>, a <xref:System.ComponentModel.Container>, i <xref:System.Windows.Forms.Timer> a z, wywołując <xref:System.ComponentModel.Container.Dispose%2A> na <xref:System.ComponentModel.Container> wymuszenie usunięcia wszystkich tych składników.</span><span class="sxs-lookup"><span data-stu-id="578a0-124">For example, if you associate a <xref:System.Windows.Forms.ToolTip>, an <xref:System.Windows.Forms.ImageList>, and a <xref:System.Windows.Forms.Timer> with a <xref:System.ComponentModel.Container>, calling <xref:System.ComponentModel.Container.Dispose%2A> on the <xref:System.ComponentModel.Container> will force disposal of all of these components as well.</span></span>  
  
 <span data-ttu-id="578a0-125">Po utworzeniu nowego czasomierza jest on wyłączony; oznacza to, <xref:System.Windows.Forms.Timer.Enabled%2A> że jest ustawiona `false`na.</span><span class="sxs-lookup"><span data-stu-id="578a0-125">When a new timer is created, it is disabled; that is, <xref:System.Windows.Forms.Timer.Enabled%2A> is set to `false`.</span></span> <span data-ttu-id="578a0-126">Aby włączyć czasomierz, wywołaj <xref:System.Windows.Forms.Timer.Start%2A> metodę lub `true`ustaw wartość <xref:System.Windows.Forms.Timer.Enabled%2A> .</span><span class="sxs-lookup"><span data-stu-id="578a0-126">To enable the timer, call the <xref:System.Windows.Forms.Timer.Start%2A> method or set <xref:System.Windows.Forms.Timer.Enabled%2A> to `true`.</span></span>  
  
 <span data-ttu-id="578a0-127">To wystąpienie będzie istniało, dopóki jego kontener nie zwolni do wyrzucania elementów bezużytecznych.</span><span class="sxs-lookup"><span data-stu-id="578a0-127">This instance will exist until its container releases it to garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="timer.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="578a0-128"><see langword="true" />Aby zwolnić zasoby zarządzane i niezarządzane.</span><span class="sxs-lookup"><span data-stu-id="578a0-128"><see langword="true" /> to release both managed and unmanaged resources.</span></span> <span data-ttu-id="578a0-129"><see langword="false" />Aby zwolnić tylko niezarządzane zasoby.</span><span class="sxs-lookup"><span data-stu-id="578a0-129"><see langword="false" /> to release only the unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="578a0-130">Usuwa zasoby, inne niż pamięć, używane przez czasomierz.</span><span class="sxs-lookup"><span data-stu-id="578a0-130">Disposes of the resources, other than memory, used by the timer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="578a0-131">Wywołaj <xref:System.Windows.Forms.Timer.Dispose%2A> po zakończeniu korzystania z czasomierza.</span><span class="sxs-lookup"><span data-stu-id="578a0-131">Call <xref:System.Windows.Forms.Timer.Dispose%2A> when you are finished using the timer.</span></span> <span data-ttu-id="578a0-132"><xref:System.Windows.Forms.Timer.Dispose%2A> Metoda opuszcza czasomierz w stanie niezdatnym do użytku.</span><span class="sxs-lookup"><span data-stu-id="578a0-132">The <xref:System.Windows.Forms.Timer.Dispose%2A> method leaves the timer in an unusable state.</span></span> <span data-ttu-id="578a0-133">Po wywołaniu <xref:System.Windows.Forms.Timer.Dispose%2A>należy wydać wszystkie odwołania do czasomierza, aby pamięć, która zajmowała się, może być odzyskiwana przez wyrzucanie elementów bezużytecznych.</span><span class="sxs-lookup"><span data-stu-id="578a0-133">After you call <xref:System.Windows.Forms.Timer.Dispose%2A>, you must release all references to the timer so the memory it was occupying can be reclaimed by garbage collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="578a0-134">Zawsze wywołuj <xref:System.Windows.Forms.Timer.Dispose%2A> przed wydaniem ostatniego odwołania do czasomierza.</span><span class="sxs-lookup"><span data-stu-id="578a0-134">Always call <xref:System.Windows.Forms.Timer.Dispose%2A> before you release your last reference to the timer.</span></span> <span data-ttu-id="578a0-135">W przeciwnym razie zasoby, których czasomierz jest używany, nie zostaną zwolnione, dopóki wyrzucanie elementów bezużytecznych nie wywoła destruktora obiektu Timer.</span><span class="sxs-lookup"><span data-stu-id="578a0-135">Otherwise, the resources the timer is using will not be freed until garbage collection calls the destructor of the timer object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public virtual bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Timer.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Windows.Forms.Timer.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="578a0-136">Pobiera lub ustawia wartość określającą, czy czasomierz jest uruchomiony.</span><span class="sxs-lookup"><span data-stu-id="578a0-136">Gets or sets whether the timer is running.</span></span></summary>
        <value><span data-ttu-id="578a0-137"><see langword="true" />Jeśli czasomierz jest obecnie włączony; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="578a0-137"><see langword="true" /> if the timer is currently enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="578a0-138">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="578a0-138">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="578a0-139">Czasomierz nie podlega wyrzucaniu elementów bezużytecznych, gdy `true`wartość jest.</span><span class="sxs-lookup"><span data-stu-id="578a0-139">The timer is not subject to garbage collection when the value is `true`.</span></span>  
  
 <span data-ttu-id="578a0-140">Wywołanie metody jest takie samo jak `true`ustawienie <xref:System.Windows.Forms.Timer.Enabled%2A>. <xref:System.Windows.Forms.Timer.Start%2A></span><span class="sxs-lookup"><span data-stu-id="578a0-140">Calling the <xref:System.Windows.Forms.Timer.Start%2A> method is the same as setting <xref:System.Windows.Forms.Timer.Enabled%2A> to `true`.</span></span> <span data-ttu-id="578a0-141">Podobnie wywoływanie <xref:System.Windows.Forms.Timer.Stop%2A> metody jest takie samo jak `false`ustawienie <xref:System.Windows.Forms.Timer.Enabled%2A> .</span><span class="sxs-lookup"><span data-stu-id="578a0-141">Likewise, calling the <xref:System.Windows.Forms.Timer.Stop%2A> method is the same as setting <xref:System.Windows.Forms.Timer.Enabled%2A> to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="578a0-142">W poniższym przykładzie przedstawiono implementację prostego czasomierza interwału, który ustawia alarm co pięć sekund.</span><span class="sxs-lookup"><span data-stu-id="578a0-142">The following example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="578a0-143">Gdy wystąpi alarm, <xref:System.Windows.Forms.MessageBox> wyświetlana jest liczba uruchomień alarmu i zostanie wyświetlony komunikat z pytaniem o to, czy czasomierz ma nadal działać.</span><span class="sxs-lookup"><span data-stu-id="578a0-143">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public int Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Interval" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Timer.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Interval { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Interval : int with get, set" Usage="System.Windows.Forms.Timer.Interval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(100)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="578a0-144">Pobiera lub ustawia czas (w milisekundach), po <see cref="E:System.Windows.Forms.Timer.Tick" /> upływie którego zostanie wywołane zdarzenie względem ostatniego wystąpienia <see cref="E:System.Windows.Forms.Timer.Tick" /> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="578a0-144">Gets or sets the time, in milliseconds, before the <see cref="E:System.Windows.Forms.Timer.Tick" /> event is raised relative to the last occurrence of the <see cref="E:System.Windows.Forms.Timer.Tick" /> event.</span></span></summary>
        <value><span data-ttu-id="578a0-145">Określanie liczby milisekund <see cref="E:System.Windows.Forms.Timer.Tick" /> przed wyjęciem zdarzenia względem ostatniego wystąpienia <see cref="E:System.Windows.Forms.Timer.Tick" /> zdarzenia. <see cref="T:System.Int32" /></span><span class="sxs-lookup"><span data-stu-id="578a0-145">An <see cref="T:System.Int32" /> specifying the number of milliseconds before the <see cref="E:System.Windows.Forms.Timer.Tick" /> event is raised relative to the last occurrence of the <see cref="E:System.Windows.Forms.Timer.Tick" /> event.</span></span> <span data-ttu-id="578a0-146">Wartość nie może być mniejsza od jednej.</span><span class="sxs-lookup"><span data-stu-id="578a0-146">The value cannot be less than one.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="578a0-147">Aby uzyskać liczbę sekund w interwale, Podziel tę liczbę na 1 000.</span><span class="sxs-lookup"><span data-stu-id="578a0-147">To get the number of seconds in the interval, divide this number by 1,000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="578a0-148">Poniższy przykład kodu implementuje prosty czasomierz interwału, który ustawia alarm co pięć sekund.</span><span class="sxs-lookup"><span data-stu-id="578a0-148">The following code example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="578a0-149">Gdy wystąpi alarm, <xref:System.Windows.Forms.MessageBox> wyświetlana jest liczba uruchomień alarmu i zostanie wyświetlony komunikat z pytaniem o to, czy czasomierz ma nadal działać.</span><span class="sxs-lookup"><span data-stu-id="578a0-149">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTick">
      <MemberSignature Language="C#" Value="protected virtual void OnTick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTick : EventArgs -&gt; unit&#xA;override this.OnTick : EventArgs -&gt; unit" Usage="timer.OnTick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="578a0-150"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="578a0-150">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span> <span data-ttu-id="578a0-151">Jest to zawsze <see cref="F:System.EventArgs.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="578a0-151">This is always <see cref="F:System.EventArgs.Empty" />.</span></span></param>
        <summary><span data-ttu-id="578a0-152"><see cref="E:System.Windows.Forms.Timer.Tick" /> Podnosi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="578a0-152">Raises the <see cref="E:System.Windows.Forms.Timer.Tick" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="578a0-153">Ta metoda jest wywoływana dla każdego taktu czasomierza.</span><span class="sxs-lookup"><span data-stu-id="578a0-153">This method is called for each timer tick.</span></span> <span data-ttu-id="578a0-154">Wywołuje wszystkie metody, które są dodawane przez <xref:System.Windows.Forms.Timer.Tick>.</span><span class="sxs-lookup"><span data-stu-id="578a0-154">It calls any methods that are added through <xref:System.Windows.Forms.Timer.Tick>.</span></span> <span data-ttu-id="578a0-155">W przypadku dziedziczenia z programu <xref:System.Windows.Forms.Timer>można zastąpić tę metodę.</span><span class="sxs-lookup"><span data-stu-id="578a0-155">If you are inheriting from <xref:System.Windows.Forms.Timer>, you can override this method.</span></span>  
  
 <span data-ttu-id="578a0-156">Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata.</span><span class="sxs-lookup"><span data-stu-id="578a0-156">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="578a0-157">Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="578a0-157">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="578a0-158">Podczas zastępowania <see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /> w klasie pochodnej upewnij się, że wywoływana jest <see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /> metoda klasy bazowej.</span><span class="sxs-lookup"><span data-stu-id="578a0-158">When overriding <see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /> in a derived class, make sure that you call the base class's <see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="timer.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="578a0-159">Uruchamia czasomierz.</span><span class="sxs-lookup"><span data-stu-id="578a0-159">Starts the timer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="578a0-160">Czasomierz można również uruchomić przez ustawienie <xref:System.Windows.Forms.Timer.Enabled%2A> właściwości na. `true`</span><span class="sxs-lookup"><span data-stu-id="578a0-160">You can also start the timer by setting the <xref:System.Windows.Forms.Timer.Enabled%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="578a0-161">Poniższy przykład kodu implementuje prosty czasomierz interwału, który ustawia alarm co pięć sekund.</span><span class="sxs-lookup"><span data-stu-id="578a0-161">The following code example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="578a0-162">Gdy wystąpi alarm, <xref:System.Windows.Forms.MessageBox> wyświetlana jest liczba uruchomień alarmu i zostanie wyświetlony komunikat z pytaniem o to, czy czasomierz ma nadal działać.</span><span class="sxs-lookup"><span data-stu-id="578a0-162">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Timer.Enabled" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="timer.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="578a0-163">Powoduje zatrzymanie czasomierza.</span><span class="sxs-lookup"><span data-stu-id="578a0-163">Stops the timer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="578a0-164">Możesz również zatrzymać czasomierz, ustawiając <xref:System.Windows.Forms.Timer.Enabled%2A> właściwość na. `false`</span><span class="sxs-lookup"><span data-stu-id="578a0-164">You can also stop the timer by setting the <xref:System.Windows.Forms.Timer.Enabled%2A> property to `false`.</span></span> <span data-ttu-id="578a0-165"><xref:System.Windows.Forms.Timer> Obiekt może być włączony i wyłączony wielokrotnie w ramach tej samej sesji aplikacji.</span><span class="sxs-lookup"><span data-stu-id="578a0-165">A <xref:System.Windows.Forms.Timer> object may be enabled and disabled multiple times within the same application session.</span></span>  
  
 <span data-ttu-id="578a0-166">Wywołanie <xref:System.Windows.Forms.Timer.Start%2A> <xref:System.Windows.Forms.Timer.Stop%2A> po<xref:System.Windows.Forms.Timer> wyłączeniu <xref:System.Windows.Forms.Timer> przez wywołanie spowoduje ponowne uruchomienie przerwanego interwału.</span><span class="sxs-lookup"><span data-stu-id="578a0-166">Calling <xref:System.Windows.Forms.Timer.Start%2A> after you have disabled a <xref:System.Windows.Forms.Timer> by calling <xref:System.Windows.Forms.Timer.Stop%2A> will cause the <xref:System.Windows.Forms.Timer> to restart the interrupted interval.</span></span> <span data-ttu-id="578a0-167"><xref:System.Windows.Forms.Timer.Start%2A> <xref:System.Windows.Forms.Timer.Stop%2A> <xref:System.Windows.Forms.Timer.Tick> <xref:System.Windows.Forms.Timer> Jeśli ustawiono dla interwału 5000-milisekundowego i wywołasz około 3000 milisekund, wywołanie spowoduje odczekanie 5000 milisekund przed podniesieniem zdarzenia. <xref:System.Windows.Forms.Timer></span><span class="sxs-lookup"><span data-stu-id="578a0-167">If your <xref:System.Windows.Forms.Timer> is set for a 5000-millisecond interval, and you call <xref:System.Windows.Forms.Timer.Stop%2A> at around 3000 milliseconds, calling <xref:System.Windows.Forms.Timer.Start%2A> will cause the <xref:System.Windows.Forms.Timer> to wait 5000 milliseconds before raising the <xref:System.Windows.Forms.Timer.Tick> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="578a0-168">Wywołanie zatrzymania na dowolnym <xref:System.Windows.Forms.Timer> w aplikacji Windows Forms może spowodować natychmiastowe przetworzenie komunikatów <xref:System.Windows.Forms.Timer> z innych składników w aplikacji, ponieważ wszystkie <xref:System.Windows.Forms.Timer> składniki działają w głównym wątku aplikacji.</span><span class="sxs-lookup"><span data-stu-id="578a0-168">Calling Stop on any <xref:System.Windows.Forms.Timer> within a Windows Forms application can cause messages from other <xref:System.Windows.Forms.Timer> components in the application to be processed immediately, because all <xref:System.Windows.Forms.Timer> components operate on the main application thread.</span></span> <span data-ttu-id="578a0-169">Jeśli masz dwa <xref:System.Windows.Forms.Timer> składniki, jeden ustawiony do 700 milisekund i jeden ustawiony na 500 milisekundy, a ty wywołasz <xref:System.Windows.Forms.Timer.Stop%2A> pierwsze <xref:System.Windows.Forms.Timer>, aplikacja może najpierw odebrać wywołanie zwrotne dla drugiego składnika.</span><span class="sxs-lookup"><span data-stu-id="578a0-169">If you have two <xref:System.Windows.Forms.Timer> components, one set to 700 milliseconds and one set to 500 milliseconds, and you call <xref:System.Windows.Forms.Timer.Stop%2A> on the first <xref:System.Windows.Forms.Timer>, your application may receive an event callback for the second component first.</span></span> <span data-ttu-id="578a0-170">Jeśli spowoduje to problemy, rozważ użycie <xref:System.Threading.Timer> klasy <xref:System.Threading> w przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="578a0-170">If this proves problematic, consider using the <xref:System.Threading.Timer> class in the <xref:System.Threading> namespace instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="578a0-171">Poniższy przykład kodu implementuje prosty czasomierz interwału, który ustawia alarm co pięć sekund.</span><span class="sxs-lookup"><span data-stu-id="578a0-171">The following code example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="578a0-172">Gdy wystąpi alarm, <xref:System.Windows.Forms.MessageBox> wyświetlana jest liczba uruchomień alarmu i zostanie wyświetlony komunikat z pytaniem o to, czy czasomierz ma nadal działać.</span><span class="sxs-lookup"><span data-stu-id="578a0-172">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Timer.Enabled" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Timer.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.Timer.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="578a0-173">Pobiera lub ustawia dowolny ciąg reprezentujący rodzaj stanu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="578a0-173">Gets or sets an arbitrary string representing some type of user state.</span></span></summary>
        <value><span data-ttu-id="578a0-174">Dowolny ciąg reprezentujący rodzaj stanu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="578a0-174">An arbitrary string representing some type of user state.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tick">
      <MemberSignature Language="C#" Value="public event EventHandler Tick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Tick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Timer.Tick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Tick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Tick;" />
      <MemberSignature Language="F#" Value="member this.Tick : EventHandler " Usage="member this.Tick : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="578a0-175">Występuje po upłynięciu określonego interwału czasomierza i włączeniu czasomierza.</span><span class="sxs-lookup"><span data-stu-id="578a0-175">Occurs when the specified timer interval has elapsed and the timer is enabled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="578a0-176">Wywołanie metody na klasie z poziomu <xref:System.Windows.Forms.Timer.Tick> zdarzenia może nie zachowywać się zgodnie z oczekiwaniami, ponieważ wyświetlenie okna dialogowego potwierdzenia może spowodować powtarzanie zdarzenia w <xref:System.Windows.Forms.Timer.Tick> systemie Windows. <xref:System.Diagnostics.Debug> <xref:System.Diagnostics.Debug.Assert%2A></span><span class="sxs-lookup"><span data-stu-id="578a0-176">Calling the <xref:System.Diagnostics.Debug.Assert%2A> method on the <xref:System.Diagnostics.Debug> class from within the <xref:System.Windows.Forms.Timer.Tick> event may not behave as expected, as displaying the assertion dialog box may cause Windows to raise the <xref:System.Windows.Forms.Timer.Tick> event repeatedly.</span></span> <span data-ttu-id="578a0-177">Zalecamy, aby zrezygnować z testowania potwierdzeń w tym zdarzeniu i zamiast <xref:System.Diagnostics.Debug.Write%2A>tego <xref:System.Diagnostics.Debug.WriteIf%2A>użyć <xref:System.Diagnostics.Debug.WriteLine%2A>metod, <xref:System.Diagnostics.Debug.WriteLineIf%2A> ,, lub.</span><span class="sxs-lookup"><span data-stu-id="578a0-177">We recommend that you refrain from testing assertions within this event, and use the <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, or <xref:System.Diagnostics.Debug.WriteLineIf%2A> methods instead.</span></span>  
  
 <span data-ttu-id="578a0-178">Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="578a0-178">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="578a0-179">Poniższy przykład kodu implementuje prosty czasomierz interwału, który ustawia alarm co pięć sekund.</span><span class="sxs-lookup"><span data-stu-id="578a0-179">The following code example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="578a0-180">Gdy wystąpi alarm, <xref:System.Windows.Forms.MessageBox> wyświetlana jest liczba uruchomień alarmu i zostanie wyświetlony komunikat z pytaniem o to, czy czasomierz ma nadal działać.</span><span class="sxs-lookup"><span data-stu-id="578a0-180">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="timer.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="578a0-181">Zwraca ciąg, który reprezentuje <see cref="T:System.Windows.Forms.Timer" />.</span><span class="sxs-lookup"><span data-stu-id="578a0-181">Returns a string that represents the <see cref="T:System.Windows.Forms.Timer" />.</span></span></summary>
        <returns><span data-ttu-id="578a0-182">Ciąg, który reprezentuje bieżący <see cref="T:System.Windows.Forms.Timer" />.</span><span class="sxs-lookup"><span data-stu-id="578a0-182">A string that represents the current <see cref="T:System.Windows.Forms.Timer" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="578a0-183">Metoda zwraca ciąg, który zawiera wartość <xref:System.Windows.Forms.Timer.Interval%2A> właściwości. <xref:System.Windows.Forms.Timer.ToString%2A></span><span class="sxs-lookup"><span data-stu-id="578a0-183">The <xref:System.Windows.Forms.Timer.ToString%2A> method returns a string that includes the value of the <xref:System.Windows.Forms.Timer.Interval%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
