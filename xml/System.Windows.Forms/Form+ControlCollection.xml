<Type Name="Form+ControlCollection" FullName="System.Windows.Forms.Form+ControlCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="64f6b4fa639d51cf4122a62c526a2af39bddd4a3" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36521750" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Form.ControlCollection : System.Windows.Forms.Control.ControlCollection" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit Form/ControlCollection extends System.Windows.Forms.Control/ControlCollection" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Form.ControlCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class Form.ControlCollection&#xA;Inherits Control.ControlCollection" />
  <TypeSignature Language="C++ CLI" Value="public: ref class Form::ControlCollection : System::Windows::Forms::Control::ControlCollection" />
  <TypeSignature Language="F#" Value="type Form.ControlCollection = class&#xA;    inherit Control.ControlCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control+ControlCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje kolekcję kontrolek w formularzu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa reprezentuje kolekcja formantów zawarty w elemencie form. Można użyć <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> metodę, aby dodać kontrolkę w formularzu i <xref:System.Windows.Forms.Form.ControlCollection.Remove%2A> metodę, aby usunąć formant z formularza. Nie można utworzyć kolekcji formantów reprezentowanego przez tę klasę bez powiązania jej do określonego formularza. W związku z tym nie można utworzyć wiele wystąpień tej kolekcji formantów i interchange je z aktywnego formularza, aby zapewnić układów inny formant.  
  
   
  
## Examples  
 Poniższy przykładowy kod dodaje <xref:System.Windows.Forms.TextBox> i <xref:System.Windows.Forms.Label> sterowania do kolekcji formantów formularza. Przykład wymaga że formularz został utworzony i o nazwie `Form1`.  
  
 [!code-cpp[Classic Form.ControlCollection Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ControlCollection Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ControlCollection Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ControlCollection Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ControlCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ControlCollection Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Control.ControlCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlCollection (System.Windows.Forms.Form owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Form owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ControlCollection.#ctor(System.Windows.Forms.Form)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As Form)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlCollection(System::Windows::Forms::Form ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Form.ControlCollection : System.Windows.Forms.Form -&gt; System.Windows.Forms.Form.ControlCollection" Usage="new System.Windows.Forms.Form.ControlCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="owner">
          <see cref="T:System.Windows.Forms.Form" /> Zawiera formanty dodane do kolekcji formantów.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.Form.ControlCollection" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor umożliwia poprawnie powiązać kolekcji formantów do formularza, aby włączyć formanty ma zostać dodany do formularza.  
  
> [!NOTE]
>  Ponieważ kolekcji formantów musi zostać utworzona z podanym formularzu, nie można tworzyć wiele kolekcji formantów i interchange je za pomocą formularza.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public override void Add (System.Windows.Forms.Control value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Add(class System.Windows.Forms.Control value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ControlCollection.Add(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Add (value As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Add(System::Windows::Forms::Control ^ value);" />
      <MemberSignature Language="F#" Value="override this.Add : System.Windows.Forms.Control -&gt; unit" Usage="controlCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Windows.Forms.Control" /> Do dodania do formularza.</param>
        <summary>Dodaje kontrolkę w formularzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do dodawania formantów do formularza. Jeśli chcesz dodać grupy utworzone formantów w formularzu, należy użyć <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A?displayProperty=nameWithType> metody <xref:System.Windows.Forms.Control.ControlCollection> klasy.  
  
   
  
## Examples  
 Poniższy przykładowy kod dodaje <xref:System.Windows.Forms.TextBox> i <xref:System.Windows.Forms.Label> sterowania do kolekcji formantów formularza. Przykład wymaga że formularz został utworzony i o nazwie `Form1`.  
  
 [!code-cpp[Classic Form.ControlCollection Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ControlCollection Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ControlCollection Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ControlCollection Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ControlCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ControlCollection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Wiele formularza nadrzędnego interfejsu (MDI) dokumentu nie może mieć formanty dodane do niego.</exception>
        <altmember cref="M:System.Windows.Forms.Form.ControlCollection.Remove(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public override void Remove (System.Windows.Forms.Control value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Remove(class System.Windows.Forms.Control value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ControlCollection.Remove(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Remove (value As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Remove(System::Windows::Forms::Control ^ value);" />
      <MemberSignature Language="F#" Value="override this.Remove : System.Windows.Forms.Control -&gt; unit" Usage="controlCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="value">A <see cref="T:System.Windows.Forms.Control" /> do usunięcia z formularza.</param>
        <summary>Usuwa kontrolkę w formularzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia usuwanie formantów, które nie są już potrzebne w formularzu. Jeśli chcesz wyświetlić formantu po jego usunięciu, musisz dodać kontrolki do formularza, za pomocą <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> metody. Aby formant pozostają na formularzu, ale nie jest wyświetlane, użyj <xref:System.Windows.Forms.Control.Visible%2A> właściwości formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.ControlCollection.Add(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
  </Members>
</Type>