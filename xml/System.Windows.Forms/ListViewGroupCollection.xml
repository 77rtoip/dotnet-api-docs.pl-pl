<Type Name="ListViewGroupCollection" FullName="System.Windows.Forms.ListViewGroupCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0bcdeaf566c5053057291fcf612b4552616d300e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30706574" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListViewGroupCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListViewGroupCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListViewGroupCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListViewGroupCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListViewGroupCollection : System::Collections::IList" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje kolekcję grup, w ramach <see cref="T:System.Windows.Forms.ListView" /> formantu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> właściwości do pobrania <xref:System.Windows.Forms.ListViewGroupCollection> skojarzone z <xref:System.Windows.Forms.ListView> formantu. Ta kolekcja zawiera <xref:System.Windows.Forms.ListViewGroup> obiektów, które reprezentują grupy wyświetlane w formancie podczas <xref:System.Windows.Forms.ListView.View%2A?displayProperty=nameWithType> wartość właściwości jest równa wartości innych niż <xref:System.Windows.Forms.View.List?displayProperty=nameWithType>. Wszystkie elementy, które nie są przypisane do grupy będą wyświetlane w domyślnej grupie mającej etykiety nagłówka "DefaultGroup {0}". Domyślna grupa nie jest zawarta w <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> kolekcji i nie można zmienić. Jest szczególnie przydatna w debugowaniu, aby upewnić się, że wszystkie elementy zostały poprawnie dodane do grupy. Jeśli nie ma żadnych grup w <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> kolekcji, funkcja grupowanie jest wyłączone.  
  
 Użyj <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> metody w celu dodania do kolekcji pojedynczej grupy. Użyj <xref:System.Windows.Forms.ListViewGroupCollection.Insert%2A> metodę, aby dodać grupę pod określonym indeksem w kolekcji. Aby usunąć grupę, należy użyć <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A> metody. Użyj <xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A> metody, aby usunąć grupę od określonego indeksu.  
  
 Nie można dodać <xref:System.Windows.Forms.ListViewGroup> do kolekcji więcej niż raz. Aby zmienić grupę w kolekcji, musi on zostać usunięty z kolekcji, a następnie wstawione w wybranej lokalizacji. Użyj <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> metodę, aby określić, czy dana grupa jest już w kolekcji. Aby uzyskać indeks grupy w kolekcji, użyj <xref:System.Windows.Forms.ListViewGroupCollection.IndexOf%2A> metody. Można pobrać lub ustawić grupie od określonego indeksu z <xref:System.Windows.Forms.ListViewGroupCollection.Item%2A> indeksatora.  
  
 Użyj <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metody w celu dodania wielu grup w kolekcji. Można dodać wiele grup jako tablica grup lub jako <xref:System.Windows.Forms.ListViewGroupCollection> pobierane za pośrednictwem <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> właściwości innego <xref:System.Windows.Forms.ListView> formantu. Użyj <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> metody, aby usunąć wszystkie grupy z kolekcji.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A>, <xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A>, I <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> metody Usuń grupy z kolekcji, ale nie usunie żadnych elementów z <xref:System.Windows.Forms.ListView> formantu. Jeśli nie ma żadnych grup w <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> kolekcji, funkcja grupowanie jest wyłączone i zwykle wyświetlane są wszystkie elementy w formancie.  
  
 <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> i <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> metody są przydatne, gdy chcesz zapewnić wiele sposobów, aby grupować elementy w <xref:System.Windows.Forms.ListView> formantu. W tym celu należy utworzyć wiele tablic grupy. Aby zmienić grupowanie, należy najpierw użyć <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> metodę, aby usunąć wszystkie grupy z kolekcji, a następnie użyj <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metody w celu dodania dalej tablica grup do wyświetlenia.  
  
 Użyj <xref:System.Windows.Forms.ListViewGroupCollection.CopyTo%2A> metodę, aby skopiować grup w kolekcji do tablicy zgodne, zaczynając od określonego indeksu. Jest to przydatne, na przykład, jeśli chcesz posortować grupy, w kolekcji przy użyciu <xref:System.Array.Sort%2A?displayProperty=nameWithType> metody. Aby to zrobić, należy skopiować grupy do tablicy zgodne, a następnie Sortowanie tablicy. Następnie użyj <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> metodę, aby usunąć wszystkie grupy z kolekcji, a następnie użyj <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metodę, aby dodać posortowana tablica z powrotem do kolekcji.  
  
 Użyj <xref:System.Windows.Forms.ListViewGroupCollection.Count%2A> właściwości w celu określenia, ile grupy znajdują się w kolekcji. Do iterowania po kolekcji, użyj <xref:System.Collections.IEnumerator> zwrócony z <xref:System.Windows.Forms.ListViewGroupCollection.GetEnumerator%2A> metody.  
  
> [!NOTE]
>  Funkcja grupowania jest dostępna tylko w systemie Windows XP i z rodziny Windows Server 2003, gdy aplikacja wywołuje <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> metody. W starszych systemach operacyjnych dowolny kod odnoszących się do grupy zostanie zignorowany, a grupy nie będą wyświetlane. W związku z tym kodu, który jest zależny od funkcji grupowania mogą nie działać poprawnie. Możesz chcesz dołączyć test, który określa, czy dostępna jest funkcja grupowania i zapewniać funkcje alternatywne, gdy jest ona niedostępna. Na przykład można podać alternatywne sortowanie, gdy działających w systemach operacyjnych, które nie obsługują sortowanie według grupy.  
>   
>  Funkcja znacznika wstawiania są udostępniane przez tę samą bibliotekę, która udostępnia funkcję kompozycji systemu operacyjnego. Aby sprawdzić dostępność tej biblioteki, należy wywołać <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> przeciążenie metody i przekaż <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> wartość.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Windows.Forms.ListView> grupowania funkcji do organizowania elementów przez wartość podelementu w widoku details. Ten formularz grupowania jest podobny do grupowania użyte w Eksploratorze Windows. W tym przykładzie grupy są tworzone dynamicznie. Dla każdej kolumny podelementu jedna grupa jest tworzona dla każdej podelementu unikatowe wartości. Dla kolumny elementu nadrzędnego jedna grupa jest tworzona dla każdej początkowej litery. Kliknięcie nagłówka kolumny sortowania elementów do grup utworzonych dla tej kolumny. Ponowne kliknięcie nagłówka kolumny w tym samym Odwraca kolejność grup.  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListView" />
    <altmember cref="T:System.Windows.Forms.ListViewGroup" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje <see cref="T:System.Windows.Forms.ListViewGroup" /> do kolekcji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Add(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (group As ListViewGroup) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="group">
          <see cref="T:System.Windows.Forms.ListViewGroup" /> Do dodania do kolekcji.</param>
        <summary>Dodaje określony <see cref="T:System.Windows.Forms.ListViewGroup" /> do kolekcji.</summary>
        <returns>Indeks grupie w kolekcji lub -1, jeśli grupa jest już obecny w kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do dodawania istniejącego <xref:System.Windows.Forms.ListViewGroup> do kolekcji. Nie można dodać <xref:System.Windows.Forms.ListViewGroup> do kolekcji więcej niż raz. Podczas wywoływania <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> przy użyciu metody <xref:System.Windows.Forms.ListViewGroup> która jest już w kolekcji, dodanie kończy się niepowodzeniem i jest zwracana wartość -1.  
  
 Aby dodać wiele grup do kolekcji, użyj <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="group" /> zawiera co najmniej jeden <see cref="T:System.Windows.Forms.ListViewItem" /> należący do <see cref="T:System.Windows.Forms.ListView" /> kontroli innego niż ten, który jest właścicielem tego <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</exception>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroup Add (string key, string headerText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewGroup Add(string key, string headerText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (key As String, headerText As String) As ListViewGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewGroup ^ Add(System::String ^ key, System::String ^ headerText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="headerText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Początkowa wartość <see cref="P:System.Windows.Forms.ListViewGroup.Name" /> właściwości dla nowej grupy.</param>
        <param name="headerText">Początkowa wartość <see cref="P:System.Windows.Forms.ListViewGroup.Header" /> właściwości dla nowej grupy.</param>
        <summary>Dodaje nowy <see cref="T:System.Windows.Forms.ListViewGroup" /> do kolekcji przy użyciu określonych wartości zainicjować <see cref="P:System.Windows.Forms.ListViewGroup.Name" /> i <see cref="P:System.Windows.Forms.ListViewGroup.Header" /> właściwości</summary>
        <returns>Nowe <see cref="T:System.Windows.Forms.ListViewGroup" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje wiele grup do kolekcji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListViewGroup[] groups);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListViewGroup[] groups) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.AddRange(System.Windows.Forms.ListViewGroup[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (groups As ListViewGroup())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Windows::Forms::ListViewGroup ^&gt; ^ groups);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groups" Type="System.Windows.Forms.ListViewGroup[]" />
      </Parameters>
      <Docs>
        <param name="groups">Tablica typu <see cref="T:System.Windows.Forms.ListViewGroup" /> , który określa grupy do dodania do kolekcji.</param>
        <summary>Tablica grup dodaje do kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej wersji <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metody, aby dodać tablicę grup do kolekcji grupy. Ta metoda jest przydatna podczas tworzenia wielu <xref:System.Windows.Forms.ListViewGroup> obiekty i chcesz je dodać do kolekcji przy użyciu wywołania pojedynczej metody. Aby dodać poszczególne grupy do kolekcji, użyj <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> metody.  
  
 Ta metoda również jest przydatne, gdy chcesz zapewnić wiele sposobów, aby grupować elementy w <xref:System.Windows.Forms.ListView> formantu. W tym celu należy utworzyć wiele tablic grupy. Aby zmienić grupowanie, należy najpierw użyć <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> metodę, aby usunąć wszystkie grupy z kolekcji, a następnie użyj <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metodę, aby dodać tablicę różnych grup.  
  
 W odróżnieniu od <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> metody <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metoda nie ma wartości zwracanej, która może służyć do określenia, czy grupa dodawany jest już w kolekcji. Te informacje należy użyć <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> metoda przed użyciem <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metody.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metoda może być używana w aplikacji, która umożliwia organizowanie <xref:System.Windows.Forms.ListView> elementów przez wartość podelementu w widoku details. Ten formularz grupowania jest podobny do grupowania użyte w Eksploratorze Windows. W tym przykładzie grupy są tworzone dynamicznie. Dla każdej kolumny podelementu jedna grupa jest tworzona dla każdej podelementu unikatowe wartości. Dla kolumny elementu nadrzędnego jedna grupa jest tworzona dla każdej początkowej litery. Nazwa grupy utworzonej dla każdej kolumny są przechowywane w tablicy skrótów, wraz z podelementu tekst lub początkowej litery. Po kliknięciu nagłówka kolumny <xref:System.Windows.Forms.ListViewGroupCollection> jest wyczyszczone. Tablicy skrótów odpowiadające kolumnie klikniętej następnie są pobierane, a każdy element jest przypisany do odpowiedniej grupy. Na koniec posortowana tablica grup w tablicy skrótów jest dodawany do <xref:System.Windows.Forms.ListViewGroupCollection>.  
  
 Aby uzyskać pełny przykład, zobacz <xref:System.Windows.Forms.ListViewGroupCollection> temat odwołania.  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#2)]
 [!code-vb[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="groups" /> zawiera co najmniej jedną grupę z co najmniej jednym <see cref="T:System.Windows.Forms.ListViewItem" /> należący do <see cref="T:System.Windows.Forms.ListView" /> kontroli innego niż ten, który jest właścicielem tego <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</exception>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListViewGroupCollection groups);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListViewGroupCollection groups) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.AddRange(System.Windows.Forms.ListViewGroupCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (groups As ListViewGroupCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Windows::Forms::ListViewGroupCollection ^ groups);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groups" Type="System.Windows.Forms.ListViewGroupCollection" />
      </Parameters>
      <Docs>
        <param name="groups">A <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> zawierających grupy do dodania do kolekcji.</param>
        <summary>Dodaje grupy w istniejącym <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> do kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użycia tej wersji platformy <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metodę, aby dodać elementy <xref:System.Windows.Forms.ListViewGroupCollection> pobierane za pośrednictwem <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> inną właściwość <xref:System.Windows.Forms.ListView> formantu.  
  
 W odróżnieniu od <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> metody <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metoda nie ma wartości zwracanej, która może służyć do określenia, czy grupa dodawany jest już w kolekcji. Te informacje należy użyć <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> metoda przed użyciem <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="groups" /> zawiera co najmniej jedną grupę z co najmniej jednym <see cref="T:System.Windows.Forms.ListViewItem" /> należący do <see cref="T:System.Windows.Forms.ListView" /> kontroli innego niż ten, który jest właścicielem tego <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa wszystkie grupy z kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, aby usunąć wszystkie grupy z kolekcji. Należy pamiętać, że usunięcie grupy z <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> kolekcji nie powoduje usunięcia elementów z <xref:System.Windows.Forms.ListView> formantu.  
  
 Ta metoda jest przydatna wyłączyć funkcję grupowania. Jeśli nie ma żadnych grup w <xref:System.Windows.Forms.ListView> kontrolować, elementy pojawiają się normalnie. Aby usunąć pojedyncze grupy z kolekcji, użyj <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A> lub <xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A> metody.  
  
 Ta metoda przydaje się także, gdy chcesz zapewnić grupowania elementów na wiele sposobów. Aby zmienić grupowanie, należy najpierw użyć <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> metodę, aby usunąć wszystkie grupy z kolekcji, a następnie użyj <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metodę, aby dodać tablicę różnych grup.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> metoda może być używana w aplikacji, która umożliwia organizowanie <xref:System.Windows.Forms.ListView> elementów przez wartość podelementu w widoku details. Ten formularz grupowania jest podobny do grupowania użyte w Eksploratorze Windows. W tym przykładzie grupy są tworzone dynamicznie. Dla każdej kolumny podelementu jedna grupa jest tworzona dla każdej podelementu unikatowe wartości. Dla kolumny elementu nadrzędnego jedna grupa jest tworzona dla każdej początkowej litery. Nazwa grupy utworzonej dla każdej kolumny są przechowywane w tablicy skrótów, wraz z podelementu tekst lub początkowej litery. Po kliknięciu nagłówka kolumny <xref:System.Windows.Forms.ListViewGroupCollection> jest wyczyszczone. Tablicy skrótów odpowiadające kolumnie klikniętej następnie są pobierane, a każdy element jest przypisany do odpowiedniej grupy. Na koniec posortowana tablica grup w tablicy skrótów jest dodawany do <xref:System.Windows.Forms.ListViewGroupCollection>.  
  
 Aby uzyskać pełny przykład, zobacz <xref:System.Windows.Forms.ListViewGroupCollection> temat odwołania.  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#2)]
 [!code-vb[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.ListViewGroup value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.ListViewGroup value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Contains(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As ListViewGroup) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::ListViewGroup ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Windows.Forms.ListViewGroup" /> Do zlokalizowania w kolekcji.</param>
        <summary>Określa, czy określona grupa znajduje się w kolekcji.</summary>
        <returns>
          <see langword="true" /> Jeśli grupa znajduje się w kolekcji; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie można dodać <xref:System.Windows.Forms.ListViewGroup> do kolekcji więcej niż raz. Jednak próba dodania innej kopii nie spowoduje zgłoszenie wyjątku. Zamiast tego operacji dodawania po prostu nie powiedzie się. <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> Metoda zwróci wartość -1 w takim przypadku. <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> i <xref:System.Windows.Forms.ListViewGroupCollection.Insert%2A> metody, jednak nie ma wartości zwracanych. Podczas dodawania grup przy użyciu jednej z tych metod, <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> metodę, aby określić, czy do określonego <xref:System.Windows.Forms.ListViewGroup> znajduje się już w kolekcji.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <see cref="T:System.Array" /> Są kopiowane grup.</param>
        <param name="index">Pierwszy indeks w tablicy, do którego są kopiowane grup.</param>
        <summary>Kopiuje grup w kolekcji do jednowymiarowego zgodnego <see cref="T:System.Array" />, rozpoczynając od określonego indeksu tablicy docelowej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Windows.Forms.ListViewGroupCollection.CopyTo%2A> metody, aby skopiować grup w kolekcji (w tym odwołania do elementów, które zawierają) do zgodne tablicy, zaczynając od określonego indeksu. Jest to przydatne, na przykład, jeśli chcesz posortować grupy, w kolekcji przy użyciu <xref:System.Array.Sort%2A?displayProperty=nameWithType> metody. Aby to zrobić, należy skopiować grupy do tablicy zgodne, a następnie Sortowanie tablicy. Następnie użyj <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> metodę, aby usunąć wszystkie grupy z kolekcji, a następnie użyj <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metodę, aby dodać posortowana tablica z powrotem do kolekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę grup w kolekcji.</summary>
        <value>Liczba grup w kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia określenie liczby grup w kolekcji. Jest to przydatne, gdy trzeba pętli kolekcji i wykonaj operację w każdej grupie. Można również użyć <xref:System.Collections.IEnumerator> zwrócony przez <xref:System.Windows.Forms.ListViewGroupCollection.GetEnumerator%2A> metody do iterowania po kolekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca moduł wyliczający używany do iterowania po kolekcji.</summary>
        <returns>
          <see cref="T:System.Collections.IEnumerator" /> Reprezentujący kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest przydatna, gdy trzeba wykonać iterację kolekcji do wykonywania tej samej operacji w każdej grupie. Można również przeglądać kolekcji raz dla każdej grupy przy użyciu <xref:System.Windows.Forms.ListViewGroupCollection.Count%2A> właściwości, aby określić liczbę pętli.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.ListViewGroup value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.ListViewGroup value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.IndexOf(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As ListViewGroup) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::ListViewGroup ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Windows.Forms.ListViewGroup" /> Do zlokalizowania w kolekcji.</param>
        <summary>Zwraca indeks określonej <see cref="T:System.Windows.Forms.ListViewGroup" /> w kolekcji.</summary>
        <returns>Liczony od zera indeks w grupie w kolekcji lub -1, jeśli grupa nie jest w kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, aby określić indeks grupy w kolekcji. Jest to przydatne, na przykład, aby określić indeks każdej grupy podczas iteracji w kolekcji przy użyciu <xref:System.Collections.IEnumerator> zwrócony przez <xref:System.Windows.Forms.ListViewGroupCollection.GetEnumerator%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Insert(System.Int32,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="index">Indeks w kolekcji, w której mają zostać wstawione do grupy.</param>
        <param name="group">
          <see cref="T:System.Windows.Forms.ListViewGroup" /> Do wstawienia do kolekcji.</param>
        <summary>Wstawia określony <see cref="T:System.Windows.Forms.ListViewGroup" /> do kolekcji pod określonym indeksem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, aby wstawić istniejące <xref:System.Windows.Forms.ListViewGroup> pod określonym indeksem w kolekcji.  
  
 Nie można dodać <xref:System.Windows.Forms.ListViewGroup> do kolekcji więcej niż raz. Podczas wywoływania <xref:System.Windows.Forms.ListViewGroupCollection.Insert%2A> metodę przy użyciu grupy, który jest już w kolekcji, wstawiania po prostu kończy się niepowodzeniem. Użyj <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> metody przed wstawiania, aby określić, czy dana grupa jest już w kolekcji. Aby zmienić grupę w kolekcji, należy najpierw usuń go i wstaw go w żądanego indeksu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Forms.ListViewGroup" /> w kolekcji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroup this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewGroup Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As ListViewGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewGroup ^ default[int] { System::Windows::Forms::ListViewGroup ^ get(int index); void set(int index, System::Windows::Forms::ListViewGroup ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeks w kolekcji <see cref="T:System.Windows.Forms.ListViewGroup" /> można pobrać lub ustawić.</param>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Forms.ListViewGroup" /> pod określonym indeksem w kolekcji.</summary>
        <value>
          <see cref="T:System.Windows.Forms.ListViewGroup" /> Pod określonym indeksem w kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy do pobierania grupy pod określonym indeksem w kolekcji. Po zawierają odwołanie do obiektu grupy i indeksu należy używać <xref:System.Windows.Forms.ListViewGroupCollection.IndexOf%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> jest mniejsza niż 0 lub większą lub równą <see cref="P:System.Windows.Forms.ListViewGroupCollection.Count" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroup this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewGroup Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As ListViewGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewGroup ^ default[System::String ^] { System::Windows::Forms::ListViewGroup ^ get(System::String ^ key); void set(System::String ^ key, System::Windows::Forms::ListViewGroup ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nazwa grupy do pobrania lub ustawienia.</param>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Forms.ListViewGroup" /> z określonym <see cref="P:System.Windows.Forms.ListViewGroup.Name" /> wartości właściwości.</summary>
        <value>
          <see cref="T:System.Windows.Forms.ListViewGroup" /> o określonej nazwie lub <see langword="null" /> Jeśli nie ma takiego <see cref="T:System.Windows.Forms.ListViewGroup" /> istnieje.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Remove(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="group">
          <see cref="T:System.Windows.Forms.ListViewGroup" /> Do usunięcia z kolekcji.</param>
        <summary>Usuwa określoną <see cref="T:System.Windows.Forms.ListViewGroup" /> z kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, aby usunąć grupę z kolekcji, jeśli istnieje odwołanie do grupy. Usunięcie grupy z <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> kolekcji nie powoduje usunięcia elementów z <xref:System.Windows.Forms.ListView> formantu.  
  
 Aby usunąć grupę od określonego indeksu, należy użyć <xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A> metody zamiast tego. Aby usunąć wszystkie grupy z kolekcji, użyj <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeks w kolekcji <see cref="T:System.Windows.Forms.ListViewGroup" /> do usunięcia.</param>
        <summary>Usuwa <see cref="T:System.Windows.Forms.ListViewGroup" /> pod określonym indeksem w kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, aby usunąć grupę z kolekcji, jeśli masz indeks grupy w kolekcji. Należy pamiętać, że usunięcie grupy z <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> kolekcji nie powoduje usunięcia elementów z <xref:System.Windows.Forms.ListView> formantu.  
  
 Aby usunąć grupę przy użyciu odwołania do obiektu, należy użyć <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A> metody zamiast tego. Aby usunąć wszystkie grupy z kolekcji, użyj <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> metody. Po usunięciu elementu z kolekcji indeksów Zmień kolejnych elementów w kolekcji. Wszystkie informacje o elemencie usunięte zostaną usunięte.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy dostęp do kolekcji jest zsynchronizowany (wielowątkowość).</summary>
        <value>
          <see langword="true" /> we wszystkich przypadkach.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który może służyć do synchronizujący dostęp do kolekcji.</summary>
        <value>Obiekt używany do synchronizacji kolekcji.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Windows.Forms.ListViewGroup" /> Do dodania do <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</param>
        <summary>Dodaje nowy <see cref="T:System.Windows.Forms.ListViewGroup" /> do <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</summary>
        <returns>Indeks, w którym <see cref="T:System.Windows.Forms.ListViewGroup" /> został dodany.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> nie jest <see cref="T:System.Windows.Forms.ListViewGroup" />.  
  
 —lub—  
  
 <paramref name="value" /> zawiera co najmniej jeden <see cref="T:System.Windows.Forms.ListViewItem" /> należący do <see cref="T:System.Windows.Forms.ListView" /> kontroli innego niż ten, który jest właścicielem tego <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Obiekt reprezentujący <see cref="T:System.Windows.Forms.ListViewGroup" /> do zlokalizowania w kolekcji.</param>
        <summary>Określa, czy podana wartość znajduje się w kolekcji.</summary>
        <returns>
          <see langword="true" /> Jeśli <paramref name="value" /> jest <see cref="T:System.Windows.Forms.ListViewGroup" /> zawartych w kolekcji; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Windows.Forms.ListViewGroup" /> Można znaleźć w <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</param>
        <summary>Zwraca indeks w kolekcji określonej wartości.</summary>
        <returns>Liczony od zera indeks <paramref name="value" /> jeśli znajduje się w kolekcji; w przeciwnym razie wartość -1.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Położenie, w którym <see cref="T:System.Windows.Forms.ListViewGroup" /> zostanie dodany do kolekcji.</param>
        <param name="value">
          <see cref="T:System.Windows.Forms.ListViewGroup" /> Do dodania do kolekcji.</param>
        <summary>Wstawia <see cref="T:System.Windows.Forms.ListViewGroup" /> do <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `value` nie jest <xref:System.Windows.Forms.ListViewGroup>, nie został dodany do kolekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy kolekcja ma stały rozmiar.</summary>
        <value>
          <see langword="false" /> we wszystkich przypadkach.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy kolekcja jest tylko do odczytu.</summary>
        <value>
          <see langword="false" /> we wszystkich przypadkach.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks elementu, który ma zostać pobrany lub skonfigurowany.</param>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Forms.ListViewGroup" /> pod określonym indeksem w kolekcji.</summary>
        <value>A <see cref="T:System.Windows.Forms.ListViewGroup" /> reprezentujący element znajduje się pod określonym indeksem w kolekcji.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Windows.Forms.ListViewGroup" /> Do usunięcia z <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</param>
        <summary>Usuwa <see cref="T:System.Windows.Forms.ListViewGroup" /> z <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>