<Type Name="ListViewGroupCollection" FullName="System.Windows.Forms.ListViewGroupCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bcde4d2684289aff83686689b00672e824862370" />
    <Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/09/2018" />
    <Meta Name="ms.locfileid" Value="51314671" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListViewGroupCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListViewGroupCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListViewGroupCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListViewGroupCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListViewGroupCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ListViewGroupCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje kolekcję grup w ramach <see cref="T:System.Windows.Forms.ListView" /> kontroli.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> właściwości do pobrania <xref:System.Windows.Forms.ListViewGroupCollection> skojarzony <xref:System.Windows.Forms.ListView> kontroli. Ta kolekcja zawiera <xref:System.Windows.Forms.ListViewGroup> obiekty reprezentujące grupy wyświetlane w kontrolce po <xref:System.Windows.Forms.ListView.View%2A?displayProperty=nameWithType> właściwości jest równa wartości innych niż <xref:System.Windows.Forms.View.List?displayProperty=nameWithType>. Wszystkie elementy, które nie są przypisane do grupy, pojawi się w domyślnej grupie, które ma etykietę nagłówek "DefaultGroup{0}". Domyślna grupa nie jest zawarta w <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> kolekcji i nie można zmienić. Jest to szczególnie przydatne podczas debugowania, aby upewnić się, że wszystkie elementy zostały prawidłowo dodane do grupy. Jeśli nie ma żadnych grup w <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> zbieranie, funkcja grupowania jest wyłączone.  
  
 Użyj <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> metody w celu dodania jednej grupy do kolekcji. Użyj <xref:System.Windows.Forms.ListViewGroupCollection.Insert%2A> metodę, aby dodać grupę pod określonym indeksem w kolekcji. Aby usunąć grupę, należy użyć <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A> metody. Użyj <xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A> metodę, aby usunąć grupę pod określonym indeksem.  
  
 Nie można dodać <xref:System.Windows.Forms.ListViewGroup> w kolekcji więcej niż jeden raz. Aby zmienić położenie grupy w tej kolekcji, musi on zostać usunięty z kolekcji, a następnie wstawione w wybranej lokalizacji. Użyj <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> metodę pozwala ustalić, czy dana grupa jest już w kolekcji. Aby uzyskać indeks grupy w tej kolekcji, użyj <xref:System.Windows.Forms.ListViewGroupCollection.IndexOf%2A> metody. Można uzyskać lub ustawić grupę pod określonym indeksem przy użyciu <xref:System.Windows.Forms.ListViewGroupCollection.Item%2A> indeksatora.  
  
 Użyj <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metody w celu dodania wielu grup w kolekcji. Można dodać wiele grup albo jako tablica grup lub jako <xref:System.Windows.Forms.ListViewGroupCollection> pobieranych za pośrednictwem <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> własności innej <xref:System.Windows.Forms.ListView> kontroli. Użyj <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> metodę, aby usunąć wszystkie grupy z kolekcji.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A>, <xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A>, I <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> metod, Usuń grupy z kolekcji, ale nie usuwaj żadnych elementów z <xref:System.Windows.Forms.ListView> kontroli. Jeśli nie ma żadnych grup w <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> kolekcji, funkcja grupowania jest wyłączona, a zwykle wyświetlane są wszystkie elementy w kontrolce.  
  
 <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> i <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> metody są przydatne w przypadku, gdy chcesz udostępnić wiele sposobów, aby grupować elementy w <xref:System.Windows.Forms.ListView> kontroli. Aby to zrobić, należy utworzyć wiele tablic grupy. Aby zmienić grupowanie, należy najpierw użyć <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> metodę, aby usunąć wszystkie grupy z kolekcji, a następnie użyj <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metody w celu dodania dalej tablica grup do wyświetlenia.  
  
 Użyj <xref:System.Windows.Forms.ListViewGroupCollection.CopyTo%2A> metodę, aby skopiować do grup w kolekcji do tablicy zgodne, rozpoczynając od określonego indeksu. Jest to przydatne, na przykład, gdy chcesz posortować grup w kolekcji przy użyciu <xref:System.Array.Sort%2A?displayProperty=nameWithType> metody. Aby to zrobić, należy skopiować grup do tablicy zgodne, a następnie Sortowanie tablicy. Następnie użyj <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> metodę, aby usunąć wszystkie grupy z kolekcji, a następnie użyj <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metody w celu dodania posortowaną tablicę z powrotem do kolekcji.  
  
 Użyj <xref:System.Windows.Forms.ListViewGroupCollection.Count%2A> właściwości w celu określenia, ile grup znajdują się w kolekcji. Do iterowania po kolekcji, użyj <xref:System.Collections.IEnumerator> zwróciło <xref:System.Windows.Forms.ListViewGroupCollection.GetEnumerator%2A> metody.  
  
> [!NOTE]
>  Funkcja grupowania jest dostępna tylko na Windows XP i rodziny Windows Server 2003 w przypadku, gdy Twoja aplikacja wywołuje <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> metody. W starszych systemach operacyjnych jakiegokolwiek kodu dotyczące grup zostanie zignorowany, a grupy nie będą widoczne. W rezultacie wszelki kod, który jest zależny od funkcji grupowania mogą nie działać poprawnie. Może być mają zostać uwzględnione test, który określa, czy funkcja grupowania są dostępne, a także zapewnienia funkcji alternatywne, gdy jest ona niedostępna. Na przykład możesz chcieć zapewnić alternatywne sortowanie, podczas uruchamiania w systemach operacyjnych, które nie obsługują sortowanie według grupy.  
>   
>  Funkcja znacznika wstawiania znajduje się w tej samej bibliotece, który zapewnia funkcję kompozycje systemu operacyjnego. Aby sprawdzić dostępność tej biblioteki, należy wywołać <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> przeciążenie metody i przekaż <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> wartość.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Windows.Forms.ListView> funkcja grupowania do organizowania elementów przez wartość podelementu w widoku szczegółów. Ta forma grupowania jest podobny do grupowania użyte w Eksploratorze Windows. W tym przykładzie grupy są tworzone dynamicznie. Dla każdej kolumny podelement jedna grupa jest tworzony dla każdej podpozycji unikatowe wartości. Dla kolumny elementu nadrzędnego jedna grupa jest tworzona dla każdej początkowej litery. Kliknięcie nagłówka kolumny sortowania elementów do grup utworzonych dla tej kolumny. Ponowne kliknięcie nagłówka kolumny w tym samym Odwraca kolejność grup.  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListView" />
    <altmember cref="T:System.Windows.Forms.ListViewGroup" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje <see cref="T:System.Windows.Forms.ListViewGroup" /> do kolekcji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Add(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (group As ListViewGroup) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Forms.ListViewGroup -&gt; int" Usage="listViewGroupCollection.Add group" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="group">
          <see cref="T:System.Windows.Forms.ListViewGroup" /> Do dodania do kolekcji.</param>
        <summary>Dodaje określony <see cref="T:System.Windows.Forms.ListViewGroup" /> do kolekcji.</summary>
        <returns>Indeks grupy w obrębie kolekcji lub -1, jeśli grupa jest już obecny w kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do dodawania istniejących <xref:System.Windows.Forms.ListViewGroup> do kolekcji. Nie można dodać <xref:System.Windows.Forms.ListViewGroup> w kolekcji więcej niż jeden raz. Gdy wywołujesz <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> przy użyciu metody <xref:System.Windows.Forms.ListViewGroup> , znajduje się już w kolekcji, dodawania kończy się niepowodzeniem i jest zwracana wartość -1.  
  
 Aby dodać wiele grup do kolekcji, użyj <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="group" /> zawiera co najmniej jeden <see cref="T:System.Windows.Forms.ListViewItem" /> należący do <see cref="T:System.Windows.Forms.ListView" /> kontroli innym niż ten, który jest właścicielem tego <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</exception>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroup Add (string key, string headerText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewGroup Add(string key, string headerText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (key As String, headerText As String) As ListViewGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewGroup ^ Add(System::String ^ key, System::String ^ headerText);" />
      <MemberSignature Language="F#" Value="member this.Add : string * string -&gt; System.Windows.Forms.ListViewGroup" Usage="listViewGroupCollection.Add (key, headerText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="headerText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Początkowa wartość <see cref="P:System.Windows.Forms.ListViewGroup.Name" /> właściwości dla nowej grupy.</param>
        <param name="headerText">Początkowa wartość <see cref="P:System.Windows.Forms.ListViewGroup.Header" /> właściwości dla nowej grupy.</param>
        <summary>Dodaje nowy <see cref="T:System.Windows.Forms.ListViewGroup" /> do kolekcji przy użyciu określonych wartości do zainicjowania <see cref="P:System.Windows.Forms.ListViewGroup.Name" /> i <see cref="P:System.Windows.Forms.ListViewGroup.Header" /> właściwości</summary>
        <returns>Nowy <see cref="T:System.Windows.Forms.ListViewGroup" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wiele grup są dodawane do kolekcji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListViewGroup[] groups);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListViewGroup[] groups) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.AddRange(System.Windows.Forms.ListViewGroup[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (groups As ListViewGroup())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Windows::Forms::ListViewGroup ^&gt; ^ groups);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListViewGroup[] -&gt; unit" Usage="listViewGroupCollection.AddRange groups" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groups" Type="System.Windows.Forms.ListViewGroup[]" />
      </Parameters>
      <Docs>
        <param name="groups">Tablica typu <see cref="T:System.Windows.Forms.ListViewGroup" /> , który określa grupy do dodania do kolekcji.</param>
        <summary>Tablica grup są dodawane do kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej wersji <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metodę, aby dodać tablicę grup do kolekcji grupy. Ta metoda jest przydatna podczas tworzenia wielu <xref:System.Windows.Forms.ListViewGroup> obiektów i dodaj je do kolekcji o pojedynczym wywołaniu metody. Aby dodać poszczególne grupy do kolekcji, należy użyć <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> metody.  
  
 Ta metoda również jest przydatna, gdy chcesz udostępnić wiele sposobów, aby grupować elementy w <xref:System.Windows.Forms.ListView> kontroli. Aby to zrobić, należy utworzyć wiele tablic grupy. Aby zmienić grupowanie, należy najpierw użyć <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> metodę, aby usunąć wszystkie grupy z kolekcji, a następnie użyj <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metoda umożliwiająca dodanie innej tablicy grup.  
  
 W odróżnieniu od <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> metody <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metoda nie ma zwracanej wartości, która może służyć do określenia, czy dodawane grupy jest już w kolekcji. Jeśli ta informacja będzie potrzebna, należy użyć <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> metoda przed użyciem <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metody.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób, w jaki <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metoda może być używana w aplikacji, która organizuje <xref:System.Windows.Forms.ListView> elementów przez wartość podelementu w widoku szczegółów. Ta forma grupowania jest podobny do grupowania użyte w Eksploratorze Windows. W tym przykładzie grupy są tworzone dynamicznie. Dla każdej kolumny podelement jedna grupa jest tworzony dla każdej podpozycji unikatowe wartości. Dla kolumny elementu nadrzędnego jedna grupa jest tworzona dla każdej początkowej litery. Grup utworzonych dla każdej kolumny są przechowywane w tabeli wyznaczania wartości skrótu, wraz z tekstu podelement lub początkowej litery. Po kliknięciu nagłówka kolumny <xref:System.Windows.Forms.ListViewGroupCollection> jest wyczyszczone. Tabelę mieszania odpowiadający kliknięto kolumny jest następnie pobierana, a każdy element jest przypisany do odpowiedniej grupy. Na koniec posortowaną tablicę grup w tabeli skrótów jest dodawany do <xref:System.Windows.Forms.ListViewGroupCollection>.  
  
 Aby uzyskać kompletny przykład, zobacz <xref:System.Windows.Forms.ListViewGroupCollection> temat odwołania.  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#2)]
 [!code-vb[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="groups" /> zawiera co najmniej jedną grupę z co najmniej jednym <see cref="T:System.Windows.Forms.ListViewItem" /> należący do <see cref="T:System.Windows.Forms.ListView" /> kontroli innym niż ten, który jest właścicielem tego <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</exception>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListViewGroupCollection groups);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListViewGroupCollection groups) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.AddRange(System.Windows.Forms.ListViewGroupCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (groups As ListViewGroupCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Windows::Forms::ListViewGroupCollection ^ groups);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListViewGroupCollection -&gt; unit" Usage="listViewGroupCollection.AddRange groups" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groups" Type="System.Windows.Forms.ListViewGroupCollection" />
      </Parameters>
      <Docs>
        <param name="groups">A <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> zawierających grupy do dodania do kolekcji.</param>
        <summary>Dodaje grup w istniejącym <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> do kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Używać tej wersji <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metodę, aby dodać elementy <xref:System.Windows.Forms.ListViewGroupCollection> pobieranych za pośrednictwem <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> inną właściwość <xref:System.Windows.Forms.ListView> kontroli.  
  
 W odróżnieniu od <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> metody <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metoda nie ma zwracanej wartości, która może służyć do określenia, czy dodawane grupy jest już w kolekcji. Jeśli ta informacja będzie potrzebna, należy użyć <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> metoda przed użyciem <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="groups" /> zawiera co najmniej jedną grupę z co najmniej jednym <see cref="T:System.Windows.Forms.ListViewItem" /> należący do <see cref="T:System.Windows.Forms.ListView" /> kontroli innym niż ten, który jest właścicielem tego <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="listViewGroupCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa wszystkie grupy z kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia usunięcie wszystkich grup z kolekcji. Należy pamiętać, że usunięcie grupy z <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> kolekcji nie usuwa elementy z <xref:System.Windows.Forms.ListView> kontroli.  
  
 Ta metoda jest przydatna do wyłączenia funkcji grupowania. Jeśli nie ma żadnych grup w <xref:System.Windows.Forms.ListView> kontrolować, elementy pojawiają się w zwykły sposób. Aby usunąć pojedyncze grupy z kolekcji, użyj <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A> lub <xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A> metody.  
  
 Ta metoda jest przydatna również w przypadku, gdy chcesz udostępnić wiele sposobów, aby grupować elementy. Aby zmienić grupowanie, należy najpierw użyć <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> metodę, aby usunąć wszystkie grupy z kolekcji, a następnie użyj <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metoda umożliwiająca dodanie innej tablicy grup.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób, w jaki <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> metoda może być używana w aplikacji, która organizuje <xref:System.Windows.Forms.ListView> elementów przez wartość podelementu w widoku szczegółów. Ta forma grupowania jest podobny do grupowania użyte w Eksploratorze Windows. W tym przykładzie grupy są tworzone dynamicznie. Dla każdej kolumny podelement jedna grupa jest tworzony dla każdej podpozycji unikatowe wartości. Dla kolumny elementu nadrzędnego jedna grupa jest tworzona dla każdej początkowej litery. Grup utworzonych dla każdej kolumny są przechowywane w tabeli wyznaczania wartości skrótu, wraz z tekstu podelement lub początkowej litery. Po kliknięciu nagłówka kolumny <xref:System.Windows.Forms.ListViewGroupCollection> jest wyczyszczone. Tabelę mieszania odpowiadający kliknięto kolumny jest następnie pobierana, a każdy element jest przypisany do odpowiedniej grupy. Na koniec posortowaną tablicę grup w tabeli skrótów jest dodawany do <xref:System.Windows.Forms.ListViewGroupCollection>.  
  
 Aby uzyskać kompletny przykład, zobacz <xref:System.Windows.Forms.ListViewGroupCollection> temat odwołania.  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#2)]
 [!code-vb[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.ListViewGroup value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.ListViewGroup value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Contains(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As ListViewGroup) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::ListViewGroup ^ value);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Forms.ListViewGroup -&gt; bool" Usage="listViewGroupCollection.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Windows.Forms.ListViewGroup" /> Do zlokalizowania w kolekcji.</param>
        <summary>Określa, czy określona grupa znajduje się w kolekcji.</summary>
        <returns>
          <see langword="true" /> Jeśli grupa jest w kolekcji; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie można dodać <xref:System.Windows.Forms.ListViewGroup> w kolekcji więcej niż jeden raz. Jednak podjęto próbę dodania inna kopia nie spowoduje zgłoszenie wyjątku. Zamiast tego dodanie po prostu nie powiedzie się. <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> Metoda zwróci wartość -1, w tym przypadku. <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> i <xref:System.Windows.Forms.ListViewGroupCollection.Insert%2A> metod, jednak nie mają wartości zwracanej. Podczas dodawania grup przy użyciu jednej z następujących metod, użyj <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> metodę, aby określić, czy konkretny <xref:System.Windows.Forms.ListViewGroup> znajduje się już w kolekcji.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="listViewGroupCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <see cref="T:System.Array" /> Są kopiowane grup.</param>
        <param name="index">Pierwszy indeks w tablicy, do której grupy są kopiowane.</param>
        <summary>Kopiuje grup w kolekcji, zgodnego z jednowymiarowa <see cref="T:System.Array" />, rozpoczynając od określonego indeksu tablicy docelowej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Windows.Forms.ListViewGroupCollection.CopyTo%2A> metoda kopiowania grup w kolekcji (w tym odwołania do elementów, które zawierają) do zgodnych tablicy, zaczynając od określonego indeksu. Jest to przydatne, na przykład, gdy chcesz posortować grup w kolekcji przy użyciu <xref:System.Array.Sort%2A?displayProperty=nameWithType> metody. Aby to zrobić, należy skopiować grup do tablicy zgodne, a następnie Sortowanie tablicy. Następnie użyj <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> metodę, aby usunąć wszystkie grupy z kolekcji, a następnie użyj <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metody w celu dodania posortowaną tablicę z powrotem do kolekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.ListViewGroupCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę grup w kolekcji.</summary>
        <value>Liczba grup w kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy do określenia liczby grup w kolekcji. Jest to przydatne, gdy trzeba w pętli poprzez kolekcji oraz do tej samej operacji w każdej grupie. Można również użyć <xref:System.Collections.IEnumerator> zwrócone przez <xref:System.Windows.Forms.ListViewGroupCollection.GetEnumerator%2A> metodę do iterowania po kolekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="listViewGroupCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca moduł wyliczający używany do iterowania po kolekcji.</summary>
        <returns>
          <see cref="T:System.Collections.IEnumerator" /> Reprezentujący kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest przydatna, gdy trzeba wykonać iterację kolekcji do wykonania tych samych operacji w każdej grupie. Można również pętli kolekcji tylko jeden raz dla każdej grupy za pomocą <xref:System.Windows.Forms.ListViewGroupCollection.Count%2A> własność, aby określić liczbę pętli.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.ListViewGroup value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.ListViewGroup value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.IndexOf(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As ListViewGroup) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::ListViewGroup ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Forms.ListViewGroup -&gt; int" Usage="listViewGroupCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Windows.Forms.ListViewGroup" /> Do zlokalizowania w kolekcji.</param>
        <summary>Zwraca indeks określonej <see cref="T:System.Windows.Forms.ListViewGroup" /> w tej kolekcji.</summary>
        <returns>Liczony od zera indeks grupy w obrębie kolekcji lub -1, jeśli grupa nie jest w kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody można określić indeksu grupy w tej kolekcji. Jest to przydatne, na przykład, aby określić indeks każdej grupy podczas iteracji w kolekcji przy użyciu <xref:System.Collections.IEnumerator> zwrócone przez <xref:System.Windows.Forms.ListViewGroupCollection.GetEnumerator%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Insert(System.Int32,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Windows.Forms.ListViewGroup -&gt; unit" Usage="listViewGroupCollection.Insert (index, group)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="index">Indeks w kolekcji, w której mają zostać wstawione do grupy.</param>
        <param name="group">
          <see cref="T:System.Windows.Forms.ListViewGroup" /> Do wstawienia do kolekcji.</param>
        <summary>Wstawia określony <see cref="T:System.Windows.Forms.ListViewGroup" /> do kolekcji pod określonym indeksem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do wstawiania do istniejącego <xref:System.Windows.Forms.ListViewGroup> pod określonym indeksem w kolekcji.  
  
 Nie można dodać <xref:System.Windows.Forms.ListViewGroup> w kolekcji więcej niż jeden raz. Gdy wywołujesz <xref:System.Windows.Forms.ListViewGroupCollection.Insert%2A> metody przy użyciu grupy, która znajduje się już w kolekcji, wstawiania po prostu kończy się niepowodzeniem. Użyj <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> metody przed wstawiania, aby ustalić, czy dana grupa jest już w kolekcji. Aby zmienić położenie grupy w tej kolekcji, należy najpierw usuń go i wstaw go dla żądanego indeksu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Forms.ListViewGroup" /> w kolekcji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroup this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewGroup Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As ListViewGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewGroup ^ default[int] { System::Windows::Forms::ListViewGroup ^ get(int index); void set(int index, System::Windows::Forms::ListViewGroup ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.ListViewGroup with get, set" Usage="System.Windows.Forms.ListViewGroupCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeks w kolekcji <see cref="T:System.Windows.Forms.ListViewGroup" /> do pobierania lub ustawiania.</param>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Forms.ListViewGroup" /> w określonym indeksie kolekcji.</summary>
        <value>
          <see cref="T:System.Windows.Forms.ListViewGroup" /> w określonym indeksie kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy do pobierania grup o określonym indeksie kolekcji. Gdy występuje odwołanie do obiektu grupy i potrzebny indeks, użyj <xref:System.Windows.Forms.ListViewGroupCollection.IndexOf%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> jest mniejsza niż 0 lub większa niż lub równa <see cref="P:System.Windows.Forms.ListViewGroupCollection.Count" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroup this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewGroup Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As ListViewGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewGroup ^ default[System::String ^] { System::Windows::Forms::ListViewGroup ^ get(System::String ^ key); void set(System::String ^ key, System::Windows::Forms::ListViewGroup ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Windows.Forms.ListViewGroup with get, set" Usage="System.Windows.Forms.ListViewGroupCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nazwa grupy do pobierania lub ustawiania.</param>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Forms.ListViewGroup" /> z określonym <see cref="P:System.Windows.Forms.ListViewGroup.Name" /> wartości właściwości.</summary>
        <value>
          <see cref="T:System.Windows.Forms.ListViewGroup" /> o określonej nazwie lub <see langword="null" /> Jeśli nie ma takiego <see cref="T:System.Windows.Forms.ListViewGroup" /> istnieje.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Remove(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.Forms.ListViewGroup -&gt; unit" Usage="listViewGroupCollection.Remove group" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="group">
          <see cref="T:System.Windows.Forms.ListViewGroup" /> Do usunięcia z kolekcji.</param>
        <summary>Usuwa określony <see cref="T:System.Windows.Forms.ListViewGroup" /> z kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby usunąć grupę z kolekcji po uzyskaniu odwołania do grupy, należy użyć tej metody. Należy pamiętać, usuwając grupę z <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> kolekcji nie usuwa elementy z <xref:System.Windows.Forms.ListView> kontroli.  
  
 Aby usunąć grupę pod określonym indeksem, należy użyć <xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A> metody zamiast tego. Aby usunąć wszystkie grupy z kolekcji, użyj <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="listViewGroupCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeks w kolekcji <see cref="T:System.Windows.Forms.ListViewGroup" /> do usunięcia.</param>
        <summary>Usuwa <see cref="T:System.Windows.Forms.ListViewGroup" /> w określonym indeksie kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia usuwanie grupy z kolekcji, gdy indeks grupy w tej kolekcji. Należy pamiętać, że usunięcie grupy z <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> kolekcji nie usuwa elementy z <xref:System.Windows.Forms.ListView> kontroli.  
  
 Aby usunąć grupę za pomocą odwołania do obiektu, należy użyć <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A> metody zamiast tego. Aby usunąć wszystkie grupy z kolekcji, użyj <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> metody. Gdy usuniesz element z kolekcji indeksy zmienić w przypadku kolejnych elementów w kolekcji. Wszystkie informacje o usunięty element zostanie usunięty.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy jest zsynchronizowany dostęp do kolekcji (wątkowo).</summary>
        <value>
          <see langword="true" /> we wszystkich przypadkach.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który może służyć do synchronizowania dostępu do kolekcji.</summary>
        <value>Obiekt używany do synchronizowania kolekcji.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Windows.Forms.ListViewGroup" /> Do dodania do <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</param>
        <summary>Dodaje nowy <see cref="T:System.Windows.Forms.ListViewGroup" /> do <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</summary>
        <returns>Indeks, w którym <see cref="T:System.Windows.Forms.ListViewGroup" /> został dodany.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> nie jest <see cref="T:System.Windows.Forms.ListViewGroup" />.  
  
—lub— 
 <paramref name="value" /> zawiera co najmniej jeden <see cref="T:System.Windows.Forms.ListViewItem" /> należący do <see cref="T:System.Windows.Forms.ListView" /> kontroli innym niż ten, który jest właścicielem tego <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Obiekt, który reprezentuje <see cref="T:System.Windows.Forms.ListViewGroup" /> do zlokalizowania w kolekcji.</param>
        <summary>Określa, czy określona wartość znajduje się w kolekcji.</summary>
        <returns>
          <see langword="true" /> Jeśli <paramref name="value" /> jest <see cref="T:System.Windows.Forms.ListViewGroup" /> zawartych w kolekcji; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Windows.Forms.ListViewGroup" /> Można znaleźć w <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</param>
        <summary>Zwraca indeks w kolekcji określonej wartości.</summary>
        <returns>Liczony od zera indeks <paramref name="value" /> jeśli znajduje się w kolekcji; w przeciwnym razie, wartość -1.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Położenie, w którym <see cref="T:System.Windows.Forms.ListViewGroup" /> jest dodawany do kolekcji.</param>
        <param name="value">
          <see cref="T:System.Windows.Forms.ListViewGroup" /> Do dodania do kolekcji.</param>
        <summary>Wstawia <see cref="T:System.Windows.Forms.ListViewGroup" /> do <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `value` nie <xref:System.Windows.Forms.ListViewGroup>, nie została dodana do kolekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy kolekcja o stałym rozmiarze.</summary>
        <value>
          <see langword="false" /> we wszystkich przypadkach.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy kolekcja jest tylko do odczytu.</summary>
        <value>
          <see langword="false" /> we wszystkich przypadkach.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks elementu, który ma zostać pobrany lub skonfigurowany.</param>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Forms.ListViewGroup" /> w określonym indeksie kolekcji.</summary>
        <value>A <see cref="T:System.Windows.Forms.ListViewGroup" /> reprezentujący element znajdujący się w określonym indeksie kolekcji.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Windows.Forms.ListViewGroup" /> Do usunięcia z <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</param>
        <summary>Usuwa <see cref="T:System.Windows.Forms.ListViewGroup" /> z <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>