<Type Name="ListViewGroupCollection" FullName="System.Windows.Forms.ListViewGroupCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c1d796958bf65fd02d9720060716b8eb3306fb02" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69184957" /></Metadata><TypeSignature Language="C#" Value="public class ListViewGroupCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListViewGroupCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListViewGroupCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListViewGroupCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListViewGroupCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ListViewGroupCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje kolekcję grup w <see cref="T:System.Windows.Forms.ListView" /> kontrolce.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> , aby <xref:System.Windows.Forms.ListViewGroupCollection> uzyskać skojarzoną z <xref:System.Windows.Forms.ListView> kontrolką. Ta kolekcja zawiera <xref:System.Windows.Forms.ListViewGroup> obiekty, które reprezentują grupy wyświetlane w kontrolce, <xref:System.Windows.Forms.ListView.View%2A?displayProperty=nameWithType> gdy właściwość jest ustawiona na wartość inną niż <xref:System.Windows.Forms.View.List?displayProperty=nameWithType>. Wszystkie elementy, które nie są przypisane do grupy, pojawią się w grupie domyślnej, która ma etykietę nagłówka "default{0}Group". Grupa domyślna nie jest zawarta w <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> kolekcji i nie można jej zmienić. Jest to szczególnie przydatne w debugowaniu, aby upewnić się, że wszystkie elementy zostały prawidłowo dodane do grup. Jeśli <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> kolekcja nie zawiera żadnych grup, funkcja grupowania jest wyłączona.  
  
 Użyj metody <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> , aby dodać pojedynczą grupę do kolekcji. Użyj metody <xref:System.Windows.Forms.ListViewGroupCollection.Insert%2A> , aby dodać grupę w określonym indeksie w kolekcji. Aby usunąć grupę, użyj <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A> metody. Użyj metody <xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A> , aby usunąć grupę z określonym indeksem.  
  
 Nie można dodać <xref:System.Windows.Forms.ListViewGroup> do kolekcji więcej niż raz. Aby zmienić położenie grupy w kolekcji, najpierw należy ją usunąć z kolekcji, a następnie wstawić w odpowiedniej lokalizacji. Użyj metody <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> , aby określić, czy konkretna Grupa znajduje się już w kolekcji. Aby pobrać indeks grupy w kolekcji, użyj <xref:System.Windows.Forms.ListViewGroupCollection.IndexOf%2A> metody. Można pobrać lub ustawić grupę z określonym indeksem za pomocą <xref:System.Windows.Forms.ListViewGroupCollection.Item%2A> indeksatora.  
  
 Użyj metody <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> , aby dodać wiele grup do kolekcji. Można dodać wiele grup jako tablicę grup lub jako <xref:System.Windows.Forms.ListViewGroupCollection> pobraną <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> przez właściwość innej <xref:System.Windows.Forms.ListView> kontrolki. Użyj metody <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> , aby usunąć wszystkie grupy z kolekcji.  
  
> [!NOTE]
>  Metody <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A> <xref:System.Windows.Forms.ListView> , <xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A>i usuwajągrupyzkolekcji,alenieusuwajążadnychelementówzformantu.<xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> Jeśli <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> kolekcja nie zawiera żadnych grup, funkcja grupowania jest wyłączona, a wszystkie elementy kontrolki są wyświetlane normalnie.  
  
 Metody <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> <xref:System.Windows.Forms.ListView> i <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> są przydatne, gdy chcesz podać wiele sposobów grupowania elementów w formancie. W tym celu należy utworzyć wiele tablic grupowych. Aby zmienić grupowanie, najpierw Użyj metody, <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> aby usunąć wszystkie grupy z kolekcji, a następnie <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> Użyj metody, aby dodać następną tablicę grup do wyświetlenia.  
  
 Użyj metody <xref:System.Windows.Forms.ListViewGroupCollection.CopyTo%2A> , aby skopiować grupy w kolekcji do zgodnej tablicy, rozpoczynając od określonego indeksu. Jest to przydatne na przykład wtedy, gdy chcesz sortować grupy w kolekcji przy użyciu <xref:System.Array.Sort%2A?displayProperty=nameWithType> metody. Aby to zrobić, skopiuj grupy do zgodnej tablicy, a następnie posortuj tablicę. Następnie użyj <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> metody, aby usunąć wszystkie grupy z kolekcji, a następnie <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> Użyj metody, aby dodać posortowaną tablicę z powrotem do kolekcji.  
  
 Użyj właściwości <xref:System.Windows.Forms.ListViewGroupCollection.Count%2A> , aby określić, ile grup znajduje się w kolekcji. Aby wykonać iterację kolekcji, użyj <xref:System.Collections.IEnumerator> zwróconej <xref:System.Windows.Forms.ListViewGroupCollection.GetEnumerator%2A> metody.  
  
> [!NOTE]
>  Funkcja grupowania jest dostępna tylko w systemach Windows XP i Windows Server 2003, gdy aplikacja wywołuje <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> metodę. We wcześniejszych systemach operacyjnych każdy kod dotyczący grup zostanie zignorowany, a grupy nie będą wyświetlane. W efekcie każdy kod, który zależy od funkcji grupowania, może nie funkcjonować prawidłowo. Możesz chcieć uwzględnić test, który określa, czy funkcja grupowania jest dostępna, i zapewnia alternatywne funkcje, gdy jest ona niedostępna. Można na przykład podać alternatywne sortowanie w przypadku uruchamiania w systemach operacyjnych, które nie obsługują sortowania według grup.  
>   
>  Funkcja znacznika wstawiania jest udostępniana przez tę samą bibliotekę, która udostępnia funkcję motywów systemu operacyjnego. Aby sprawdzić dostępność tej biblioteki, wywołaj <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> metodę przeciążenia metody i przekaż <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> wartość.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Windows.Forms.ListView> funkcji grupowania do organizowania elementów według wartości elementu SubItem w widoku szczegółów. Ta forma grupowania przypomina grupowanie używane w Eksploratorze Windows. W tym przykładzie grupy są tworzone dynamicznie. Dla każdej kolumny SubItem jest tworzona jedna grupa dla każdej unikatowej wartości SubItem. Dla kolumny element nadrzędny jest tworzona jedna grupa dla każdej unikatowej litery początkowej. Kliknięcie nagłówka kolumny sortuje elementy do grup utworzonych dla tej kolumny. Kliknięcie tego samego nagłówka kolumny powoduje odwrócenie kolejności grup.  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListView" />
    <altmember cref="T:System.Windows.Forms.ListViewGroup" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ListViewGroup" /> Dodaje do kolekcji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Add(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (group As ListViewGroup) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Forms.ListViewGroup -&gt; int" Usage="listViewGroupCollection.Add group" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="group">, <see cref="T:System.Windows.Forms.ListViewGroup" /> Aby dodać do kolekcji.</param>
        <summary>Dodaje określony <see cref="T:System.Windows.Forms.ListViewGroup" /> do kolekcji.</summary>
        <returns>Indeks grupy w kolekcji lub-1, jeśli grupa już istnieje w kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, aby dodać istniejące <xref:System.Windows.Forms.ListViewGroup> do kolekcji. Nie można dodać <xref:System.Windows.Forms.ListViewGroup> do kolekcji więcej niż raz. Po wywołaniu <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> metody <xref:System.Windows.Forms.ListViewGroup> przy użyciu, która znajduje się już w kolekcji, operacja dodawania kończy się niepowodzeniem i zwracana jest wartość-1.  
  
 Aby dodać wiele grup do kolekcji, użyj <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="group" />zawiera co najmniej jeden <see cref="T:System.Windows.Forms.ListViewItem" /> , który należy do <see cref="T:System.Windows.Forms.ListView" /> formantu innego niż ten, który jest właścicielem <see cref="T:System.Windows.Forms.ListViewGroupCollection" />tego elementu.</exception>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroup Add (string key, string headerText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewGroup Add(string key, string headerText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (key As String, headerText As String) As ListViewGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewGroup ^ Add(System::String ^ key, System::String ^ headerText);" />
      <MemberSignature Language="F#" Value="member this.Add : string * string -&gt; System.Windows.Forms.ListViewGroup" Usage="listViewGroupCollection.Add (key, headerText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="headerText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Początkowa wartość <see cref="P:System.Windows.Forms.ListViewGroup.Name" /> właściwości dla nowej grupy.</param>
        <param name="headerText">Początkowa wartość <see cref="P:System.Windows.Forms.ListViewGroup.Header" /> właściwości dla nowej grupy.</param>
        <summary>Dodaje nowy <see cref="T:System.Windows.Forms.ListViewGroup" /> do kolekcji przy użyciu określonych wartości, aby <see cref="P:System.Windows.Forms.ListViewGroup.Name" /> zainicjować właściwości i <see cref="P:System.Windows.Forms.ListViewGroup.Header" /></summary>
        <returns>Nowy <see cref="T:System.Windows.Forms.ListViewGroup" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje wiele grup do kolekcji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListViewGroup[] groups);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListViewGroup[] groups) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.AddRange(System.Windows.Forms.ListViewGroup[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (groups As ListViewGroup())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Windows::Forms::ListViewGroup ^&gt; ^ groups);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListViewGroup[] -&gt; unit" Usage="listViewGroupCollection.AddRange groups" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groups" Type="System.Windows.Forms.ListViewGroup[]" />
      </Parameters>
      <Docs>
        <param name="groups">Tablica typu <see cref="T:System.Windows.Forms.ListViewGroup" /> , która określa grupy do dodania do kolekcji.</param>
        <summary>Dodaje tablicę grup do kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej wersji <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metody, aby dodać tablicę grup do kolekcji grup. Ta metoda jest przydatna podczas tworzenia wielu <xref:System.Windows.Forms.ListViewGroup> obiektów i dodawania ich do kolekcji przy użyciu jednego wywołania metody. Aby dodać poszczególne grupy do kolekcji, użyj <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> metody.  
  
 Ta metoda jest również przydatna, jeśli chcesz udostępnić wiele sposobów grupowania elementów w <xref:System.Windows.Forms.ListView> formancie. W tym celu należy utworzyć wiele tablic grupowych. Aby zmienić grupowanie, najpierw Użyj <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> metody, aby usunąć wszystkie grupy z kolekcji, a następnie <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> Użyj metody, aby dodać inną tablicę grup.  
  
 W przeciwieństwie <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> do metody <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> Metoda nie ma wartości zwracanej, która może służyć do określenia, czy dodawana Grupa znajduje się już w kolekcji. Jeśli potrzebujesz tych informacji, użyj <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> metody przed <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> użyciem metody.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> jak można użyć metody w aplikacji, która <xref:System.Windows.Forms.ListView> organizuje elementy według wartości SubItem w widoku szczegółów. Ta forma grupowania przypomina grupowanie używane w Eksploratorze Windows. W tym przykładzie grupy są tworzone dynamicznie. Dla każdej kolumny SubItem jest tworzona jedna grupa dla każdej unikatowej wartości SubItem. Dla kolumny element nadrzędny jest tworzona jedna grupa dla każdej unikatowej litery początkowej. Grupy utworzone dla każdej kolumny są przechowywane w tabeli skrótów wraz z tekstem podelementu lub początkową listą. Po kliknięciu <xref:System.Windows.Forms.ListViewGroupCollection> nagłówka kolumny jest wyczyszczone. Zostanie pobrana tabela skrótów odpowiadająca klikniętej kolumnie, a każdy element zostanie przypisany do odpowiedniej grupy. Na koniec posortowana tablica grup w tabeli skrótów jest dodawana do <xref:System.Windows.Forms.ListViewGroupCollection>.  
  
 Pełny przykład można znaleźć w <xref:System.Windows.Forms.ListViewGroupCollection> temacie Omówienie referencyjne.  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#2)]
 [!code-vb[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="groups" />zawiera co najmniej jedną grupę z co najmniej <see cref="T:System.Windows.Forms.ListViewItem" /> jedną grupą, która należy do formantu innego niż ten, który jest właścicielem tego <see cref="T:System.Windows.Forms.ListViewGroupCollection" />elementu <see cref="T:System.Windows.Forms.ListView" /> .</exception>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListViewGroupCollection groups);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListViewGroupCollection groups) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.AddRange(System.Windows.Forms.ListViewGroupCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (groups As ListViewGroupCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Windows::Forms::ListViewGroupCollection ^ groups);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListViewGroupCollection -&gt; unit" Usage="listViewGroupCollection.AddRange groups" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groups" Type="System.Windows.Forms.ListViewGroupCollection" />
      </Parameters>
      <Docs>
        <param name="groups">A <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> zawierający grupy do dodania do kolekcji.</param>
        <summary>Dodaje grupy w istniejącej <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> Użyj tej wersji <xref:System.Windows.Forms.ListView> metody <xref:System.Windows.Forms.ListViewGroupCollection> , aby dodać elementy pobrane przez Właściwośćinnejkontrolki.<xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType>  
  
 W przeciwieństwie <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> do metody <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> Metoda nie ma wartości zwracanej, która może służyć do określenia, czy dodawana Grupa znajduje się już w kolekcji. Jeśli potrzebujesz tych informacji, użyj <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> metody przed <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> użyciem metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="groups" />zawiera co najmniej jedną grupę z co najmniej <see cref="T:System.Windows.Forms.ListViewItem" /> jedną grupą, która należy do formantu innego niż ten, który jest właścicielem tego <see cref="T:System.Windows.Forms.ListViewGroupCollection" />elementu <see cref="T:System.Windows.Forms.ListView" /> .</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="listViewGroupCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa wszystkie grupy z kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, aby usunąć wszystkie grupy z kolekcji. Należy zauważyć, że usunięcie grup <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> z kolekcji nie powoduje usunięcia elementów <xref:System.Windows.Forms.ListView> z formantu.  
  
 Ta metoda jest przydatna do wyłączania funkcji grupowania. Gdy w <xref:System.Windows.Forms.ListView> formancie nie ma żadnych grup, elementy są wyświetlane normalnie. Aby usunąć pojedyncze grupy z kolekcji, użyj <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A> metody lub. <xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A>  
  
 Ta metoda jest również przydatna, jeśli chcesz udostępnić wiele sposobów grupowania elementów. Aby zmienić grupowanie, najpierw Użyj <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> metody, aby usunąć wszystkie grupy z kolekcji, a następnie <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> Użyj metody, aby dodać inną tablicę grup.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> jak można użyć metody w aplikacji, która <xref:System.Windows.Forms.ListView> organizuje elementy według wartości SubItem w widoku szczegółów. Ta forma grupowania przypomina grupowanie używane w Eksploratorze Windows. W tym przykładzie grupy są tworzone dynamicznie. Dla każdej kolumny SubItem jest tworzona jedna grupa dla każdej unikatowej wartości SubItem. Dla kolumny element nadrzędny jest tworzona jedna grupa dla każdej unikatowej litery początkowej. Grupy utworzone dla każdej kolumny są przechowywane w tabeli skrótów wraz z tekstem podelementu lub początkową listą. Po kliknięciu <xref:System.Windows.Forms.ListViewGroupCollection> nagłówka kolumny jest wyczyszczone. Zostanie pobrana tabela skrótów odpowiadająca klikniętej kolumnie, a każdy element zostanie przypisany do odpowiedniej grupy. Na koniec posortowana tablica grup w tabeli skrótów jest dodawana do <xref:System.Windows.Forms.ListViewGroupCollection>.  
  
 Pełny przykład można znaleźć w <xref:System.Windows.Forms.ListViewGroupCollection> temacie Omówienie referencyjne.  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#2)]
 [!code-vb[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.ListViewGroup value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.ListViewGroup value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Contains(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As ListViewGroup) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::ListViewGroup ^ value);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Forms.ListViewGroup -&gt; bool" Usage="listViewGroupCollection.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Windows.Forms.ListViewGroup" /> Aby zlokalizować w kolekcji.</param>
        <summary>Określa, czy określona grupa znajduje się w kolekcji.</summary>
        <returns><see langword="true" />Jeśli grupa znajduje się w kolekcji; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie można dodać <xref:System.Windows.Forms.ListViewGroup> do kolekcji więcej niż raz. Jednak próba dodania innej kopii nie spowoduje wygenerowania wyjątku. Zamiast tego, dodanie nie powiedzie się. <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> Metoda zwróci wartość-1 w tym przypadku. Jednakże metody <xref:System.Windows.Forms.ListViewGroupCollection.Insert%2A> i nie mają zwracanych wartości. <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> Podczas dodawania grup przy użyciu jednej z tych metod Użyj <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> metody, aby określić, czy dany <xref:System.Windows.Forms.ListViewGroup> element znajduje się już w kolekcji.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="listViewGroupCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><see cref="T:System.Array" /> Do którego są kopiowane grupy.</param>
        <param name="index">Pierwszy indeks w tablicy, do której zostaną skopiowane grupy.</param>
        <summary>Kopiuje grupy w kolekcji do zgodnego jednowymiarowego <see cref="T:System.Array" />, rozpoczynając od określonego indeksu tablicy docelowej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Windows.Forms.ListViewGroupCollection.CopyTo%2A> , aby skopiować grupy w kolekcji (łącznie z odwołaniami do elementów zawartych w nich) do zgodnej tablicy, rozpoczynając od określonego indeksu. Jest to przydatne na przykład wtedy, gdy chcesz sortować grupy w kolekcji przy użyciu <xref:System.Array.Sort%2A?displayProperty=nameWithType> metody. Aby to zrobić, skopiuj grupy do zgodnej tablicy, a następnie posortuj tablicę. Następnie użyj <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> metody, aby usunąć wszystkie grupy z kolekcji, a następnie <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> Użyj metody, aby dodać posortowaną tablicę z powrotem do kolekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.ListViewGroupCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę grup w kolekcji.</summary>
        <value>Liczba grup w kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia określenie liczby grup w kolekcji. Jest to przydatne, gdy zachodzi potrzeba przeprowadzenia pętli w kolekcji i wykonania tej samej operacji dla każdej grupy. Można również użyć <xref:System.Collections.IEnumerator> zwracanych <xref:System.Windows.Forms.ListViewGroupCollection.GetEnumerator%2A> przez metodę, aby wykonać iterację kolekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="listViewGroupCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca moduł wyliczający używany do iteracji kolekcji.</summary>
        <returns><see cref="T:System.Collections.IEnumerator" /> Reprezentuje kolekcję.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest przydatna, gdy trzeba wykonać iterację kolekcji w celu wykonania tej samej operacji dla każdej grupy. Możesz również wykonać pętlę przez kolekcję raz dla każdej grupy, używając <xref:System.Windows.Forms.ListViewGroupCollection.Count%2A> właściwości, aby określić liczbę pętli.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.ListViewGroup value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.ListViewGroup value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.IndexOf(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As ListViewGroup) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::ListViewGroup ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Forms.ListViewGroup -&gt; int" Usage="listViewGroupCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Windows.Forms.ListViewGroup" /> Aby zlokalizować w kolekcji.</param>
        <summary>Zwraca indeks określony <see cref="T:System.Windows.Forms.ListViewGroup" /> w kolekcji.</summary>
        <returns>Indeks (liczony od zera) grupy w kolekcji lub-1, jeśli grupa nie znajduje się w kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, aby określić indeks grupy w kolekcji. Jest to przydatne na przykład, aby określić indeks każdej z grup podczas iteracji w kolekcji przy użyciu <xref:System.Collections.IEnumerator> zwróconego <xref:System.Windows.Forms.ListViewGroupCollection.GetEnumerator%2A> przez metodę.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Insert(System.Int32,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Windows.Forms.ListViewGroup -&gt; unit" Usage="listViewGroupCollection.Insert (index, group)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="index">Indeks w kolekcji, w której ma zostać wstawiona Grupa.</param>
        <param name="group"><see cref="T:System.Windows.Forms.ListViewGroup" /> Do wstawienia do kolekcji.</param>
        <summary>Wstawia określony <see cref="T:System.Windows.Forms.ListViewGroup" /> do kolekcji o określonym indeksie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, aby wstawić istniejące <xref:System.Windows.Forms.ListViewGroup> w określonym indeksie w kolekcji.  
  
 Nie można dodać <xref:System.Windows.Forms.ListViewGroup> do kolekcji więcej niż raz. Po wywołaniu <xref:System.Windows.Forms.ListViewGroupCollection.Insert%2A> metody przy użyciu grupy, która znajduje się już w kolekcji, wstawianie po prostu kończy się niepowodzeniem. <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> Użyj metody przed wstawieniem, aby określić, czy konkretna Grupa znajduje się już w kolekcji. Aby zmienić położenie grupy w kolekcji, należy najpierw usunąć ją, a następnie wstawić do żądanego indeksu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera lub ustawia element <see cref="T:System.Windows.Forms.ListViewGroup" /> w kolekcji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroup this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewGroup Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As ListViewGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewGroup ^ default[int] { System::Windows::Forms::ListViewGroup ^ get(int index); void set(int index, System::Windows::Forms::ListViewGroup ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.ListViewGroup with get, set" Usage="System.Windows.Forms.ListViewGroupCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeks w kolekcji <see cref="T:System.Windows.Forms.ListViewGroup" /> do pobrania lub ustawienia.</param>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Forms.ListViewGroup" /> określony indeks w kolekcji.</summary>
        <value><see cref="T:System.Windows.Forms.ListViewGroup" /> Na określonym indeksie w kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia pobranie grupy pod określonym indeksem w kolekcji. Jeśli masz odwołanie do obiektu grupy i potrzebujesz indeksu, użyj <xref:System.Windows.Forms.ListViewGroupCollection.IndexOf%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />jest mniejsza niż 0 lub większa lub równa <see cref="P:System.Windows.Forms.ListViewGroupCollection.Count" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroup this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewGroup Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As ListViewGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewGroup ^ default[System::String ^] { System::Windows::Forms::ListViewGroup ^ get(System::String ^ key); void set(System::String ^ key, System::Windows::Forms::ListViewGroup ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Windows.Forms.ListViewGroup with get, set" Usage="System.Windows.Forms.ListViewGroupCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nazwa grupy do pobrania lub ustawienia.</param>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Forms.ListViewGroup" /> wartość z określoną <see cref="P:System.Windows.Forms.ListViewGroup.Name" /> wartością właściwości.</summary>
        <value>Z określoną nazwą lub <see langword="null" /> Jeśli nie <see cref="T:System.Windows.Forms.ListViewGroup" /> istnieje. <see cref="T:System.Windows.Forms.ListViewGroup" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Remove(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.Forms.ListViewGroup -&gt; unit" Usage="listViewGroupCollection.Remove group" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="group"><see cref="T:System.Windows.Forms.ListViewGroup" /> Do usunięcia z kolekcji.</param>
        <summary>Usuwa określony <see cref="T:System.Windows.Forms.ListViewGroup" /> z kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, aby usunąć grupę z kolekcji, gdy istnieje odwołanie do grupy. Należy zauważyć, że usunięcie grupy z <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> kolekcji nie powoduje usunięcia elementów <xref:System.Windows.Forms.ListView> z formantu.  
  
 Aby usunąć grupę z określonym indeksem, należy zamiast tego <xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A> użyć metody. Aby usunąć wszystkie grupy z kolekcji, użyj <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="listViewGroupCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeks w kolekcji <see cref="T:System.Windows.Forms.ListViewGroup" /> do usunięcia.</param>
        <summary><see cref="T:System.Windows.Forms.ListViewGroup" /> Usuwa określony indeks w kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, aby usunąć grupę z kolekcji, gdy masz indeks grupy w kolekcji. Należy zauważyć, że usunięcie grup <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> z kolekcji nie powoduje usunięcia elementów <xref:System.Windows.Forms.ListView> z formantu.  
  
 Aby usunąć grupę przy użyciu odwołania do obiektu, zamiast tego użyj <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A> metody. Aby usunąć wszystkie grupy z kolekcji, użyj <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> metody. Usunięcie elementu z kolekcji powoduje zmianę indeksów dla kolejnych elementów w kolekcji. Wszystkie informacje o usuniętym elemencie są usuwane.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy dostęp do kolekcji jest synchronizowany (bezpieczny wątkowo).</summary>
        <value><see langword="true" />we wszystkich przypadkach.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który może służyć do synchronizowania dostępu do kolekcji.</summary>
        <value>Obiekt używany do synchronizowania kolekcji.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">, <see cref="T:System.Windows.Forms.ListViewGroup" /> Aby dodać <see cref="T:System.Windows.Forms.ListViewGroupCollection" />do.</param>
        <summary>Dodaje nowy <see cref="T:System.Windows.Forms.ListViewGroup" /> <see cref="T:System.Windows.Forms.ListViewGroupCollection" />do.</summary>
        <returns>Indeks, w którym <see cref="T:System.Windows.Forms.ListViewGroup" /> został dodany.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="value" />nie <see cref="T:System.Windows.Forms.ListViewGroup" />jest.  
  
—lub— 
 <paramref name="value" />zawiera co najmniej jeden <see cref="T:System.Windows.Forms.ListViewItem" /> , który należy do <see cref="T:System.Windows.Forms.ListView" /> formantu innego niż ten, który jest właścicielem <see cref="T:System.Windows.Forms.ListViewGroupCollection" />tego elementu.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Obiekt, który reprezentuje <see cref="T:System.Windows.Forms.ListViewGroup" /> element do zlokalizowania w kolekcji.</param>
        <summary>Określa, czy określona wartość znajduje się w kolekcji.</summary>
        <returns><see langword="true" />Jeśli <paramref name="value" /> <see langword="false" />jest zawartywkolekcji;wprzeciwnymrazie.<see cref="T:System.Windows.Forms.ListViewGroup" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Windows.Forms.ListViewGroup" /> Aby znaleźć <see cref="T:System.Windows.Forms.ListViewGroupCollection" />w.</param>
        <summary>Zwraca indeks w kolekcji określonej wartości.</summary>
        <returns>Indeks (liczony od zera) <paramref name="value" /> , jeśli znajduje się w kolekcji; w przeciwnym razie-1.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Pozycja, do której <see cref="T:System.Windows.Forms.ListViewGroup" /> zostanie dodany do kolekcji.</param>
        <param name="value">, <see cref="T:System.Windows.Forms.ListViewGroup" /> Aby dodać do kolekcji.</param>
        <summary><see cref="T:System.Windows.Forms.ListViewGroup" /> Wstawia<see cref="T:System.Windows.Forms.ListViewGroupCollection" />do.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `value` Jeśli<xref:System.Windows.Forms.ListViewGroup>nie jest, nie zostanie dodany do kolekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy kolekcja ma stały rozmiar.</summary>
        <value><see langword="false" />we wszystkich przypadkach.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy kolekcja jest tylko do odczytu.</summary>
        <value><see langword="false" />we wszystkich przypadkach.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks elementu, który ma zostać pobrany lub skonfigurowany.</param>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Forms.ListViewGroup" /> określony indeks w kolekcji.</summary>
        <value><see cref="T:System.Windows.Forms.ListViewGroup" /> Reprezentuje element znajdujący się w określonym indeksie w kolekcji.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Windows.Forms.ListViewGroup" /> Do usunięcia <see cref="T:System.Windows.Forms.ListViewGroupCollection" />z.</param>
        <summary><see cref="T:System.Windows.Forms.ListViewGroup" /> Usuwa<see cref="T:System.Windows.Forms.ListViewGroupCollection" />z.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
