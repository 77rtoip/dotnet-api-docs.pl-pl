<Type Name="AccessibleObject" FullName="System.Windows.Forms.AccessibleObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bc5131245b0a151432b586f89dc5e9f963763dbb" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69196699" /></Metadata><TypeSignature Language="C#" Value="public class AccessibleObject : System.Runtime.InteropServices.StandardOleMarshalObject, Accessibility.IAccessible, System.Reflection.IReflect" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AccessibleObject extends System.Runtime.InteropServices.StandardOleMarshalObject implements class Accessibility.IAccessible, class System.Reflection.IReflect" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.AccessibleObject" />
  <TypeSignature Language="VB.NET" Value="Public Class AccessibleObject&#xA;Inherits StandardOleMarshalObject&#xA;Implements IAccessible, IReflect" />
  <TypeSignature Language="C++ CLI" Value="public ref class AccessibleObject : System::Runtime::InteropServices::StandardOleMarshalObject, Accessibility::IAccessible, System::Reflection::IReflect" />
  <TypeSignature Language="F#" Value="type AccessibleObject = class&#xA;    inherit StandardOleMarshalObject&#xA;    interface IReflect&#xA;    interface IAccessible" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.InteropServices.StandardOleMarshalObject</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Accessibility.IAccessible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Reflection.IReflect</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zawiera informacje, które są używane przez aplikacje ułatwień dostępu do dostosowywania interfejsu użytkownika aplikacji dla użytkowników z upośledzeniem.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacje ułatwień dostępu mogą dostosować funkcje aplikacji, aby zwiększyć użyteczność dla użytkowników niepełnosprawnych.  
  
 W przypadku użytkowników niedowidzących, można dostosować oprogramowanie i funkcje systemu operacyjnego w celu zapewnienia zgodności z ich potrzebami. Na przykład możesz powiększyć tekst i obrazy i renderować je z kontrastem. Ponadto można obsłużyć kolory niewidzące przy użyciu kolorów. W przypadku użytkowników, którzy są poważnie niesparowani, komputery są dostępne z ułatwieniami do przeglądu ekranu, które tłumaczą tekst na ekranie na mowę lub na dynamiczny, świeży ekran w języku Braille'a.  
  
 Dla użytkowników, którzy mają słabą słuch, można projektować programy korzystające z wizualnych podpowiedzi, takich jak migający pasek narzędzi. można też wyświetlać wiadomości mówione jako tekst. Na przykład po włączeniu `SoundSentry` funkcja, opcja ułatwień dostępu w panelu sterowania wyświetla wizualne ostrzeżenie, gdy system wykonuje dźwięk alarmowy.  
  
 W przypadku użytkowników z upośledzeniem ruchu można zaprojektować kontrolki, które ograniczają lub eliminują użycie klawiatury i myszy, a tym samym ulepszając dostępność komputera. Panel sterowania oferuje pomoc. Na przykład jedną alternatywą jest użycie klawiatury numerycznej zamiast myszy do nawigacji. Inna opcja, wywołana `StickyKeys`, umożliwia użytkownikom, którzy nie mogą przytrzymać jednocześnie dwóch lub więcej klawiszy (na przykład CTRL + P), aby uzyskać ten sam wynik, wpisując jeden klucz w danym momencie.  
  
 W przypadku użytkowników mających upośledzenie poznawczych i niezwiązanych z językiem można projektować programy w celu lepszego dopasowania do swoich potrzeb. Na przykład przy użyciu opcji cued lub sekwencji nieskomplikowanych ekranów, mniej słów i poziomów odczytu przeznaczonych dla podstawowych standardów szkoły mogą skorzystać z tych użytkowników.  
  
 W przypadku użytkowników z zaburzeniami przejmowania można projektować programy w celu wyeliminowania wzorców wywoływania zajmowania.  
  
 Aby uzyskać więcej informacji na temat ułatwień dostępu, w tym informacje o aplikacjach ułatwień dostępu, zobacz dokumentację dotyczącą ułatwień dostępu firmy Microsoft w bibliotece MSDN lub witrynie sieci Web firmy Microsoft.  
  
> [!NOTE]
>  Aby użyć <xref:System.Windows.Forms.AccessibleObject>, należy dodać odwołanie `Accessibility` do zestawu zainstalowanego z [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Windows Forms obsługuje tylko aktywne ułatwienia dostępu 2,0.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, <xref:System.Windows.Forms.AccessibleObject> jak utworzyć formant wykresu z obsługą ułatwień dostępu przy użyciu klas i <xref:System.Windows.Forms.Control.ControlAccessibleObject> , aby uwidocznić dostępne informacje. Kontrolka umieszcza dwie krzywe wraz z legendą. Klasa, która pochodzi od `ControlAccessibleObject` <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> , jest używana w metodzie, aby zapewnić niestandardowe informacje dostępne dla formantu wykresu. `ChartControlAccessibleObject` Ponieważ legenda wykresu nie jest rzeczywistą <xref:System.Windows.Forms.Control> kontrolką, ale zamiast tego jest rysowana przez formant wykresu, nie zawiera żadnych wbudowanych informacji. Z tego `ChartControlAccessibleObject` powodu Klasa <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> przesłania metodę w celu zwrócenia `CurveLegendAccessibleObject` , która reprezentuje dostępne informacje dla każdej części legendy. Gdy aplikacja obsługująca dostęp będzie korzystać z tego formantu, formant może udostępnić wymagane informacje.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#1)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#1)]
 [!code-vb[System.Windows.Forms.AccessibleObject#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Po dziedziczeniu z tej klasy można zastąpić wszystkie elementy członkowskie.</para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AccessibleObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AccessibleObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.AccessibleObject" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj w przypadku użycia tej metody do utworzenia dostępnego obiektu są udostępniane własne implementacje właściwości i metod klasy w celu zapewnienia funkcjonalności specyficznej dla aplikacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accChildCount">
      <MemberSignature Language="C#" Value="int Accessibility.IAccessible.accChildCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Accessibility.IAccessible.accChildCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accChildCount" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accChildCount As Integer Implements IAccessible.accChildCount" />
      <MemberSignature Language="C++ CLI" Value="property int Accessibility::IAccessible::accChildCount { int get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accChildCount" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accChildCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę interfejsów podrzędnych należących do tego obiektu. Aby uzyskać opis tego elementu członkowskiego, <see cref="P:Accessibility.IAccessible.accChildCount" />Zobacz.</summary>
        <value>Liczba podrzędnych dostępnych obiektów, które należą do tego obiektu. Jeśli obiekt nie ma obiektów podrzędnych, ta wartość jest równa 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.AccessibleObject> gdy wystąpienie jest rzutowane <xref:Accessibility.IAccessible> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accDoDefaultAction">
      <MemberSignature Language="C#" Value="void IAccessible.accDoDefaultAction (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.accDoDefaultAction(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accDoDefaultAction(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub accDoDefaultAction (childID As Object) Implements IAccessible.accDoDefaultAction" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.accDoDefaultAction(System::Object ^ childID) = Accessibility::IAccessible::accDoDefaultAction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accDoDefaultAction(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Identyfikator elementu podrzędnego w <see cref="T:Accessibility.IAccessible" /> parze interfejsu/elementu podrzędnego, który reprezentuje dostępny obiekt.</param>
        <summary>Wykonuje akcję domyślną określonego obiektu. Nie wszystkie obiekty mają akcję domyślną. Aby uzyskać opis tego elementu członkowskiego, <see cref="M:Accessibility.IAccessible.accDoDefaultAction(System.Object)" />Zobacz.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.AccessibleObject> gdy wystąpienie jest rzutowane <xref:Accessibility.IAccessible> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accFocus">
      <MemberSignature Language="C#" Value="object Accessibility.IAccessible.accFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Accessibility.IAccessible.accFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accFocus" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accFocus As Object Implements IAccessible.accFocus" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ Accessibility::IAccessible::accFocus { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accFocus" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który ma fokus klawiatury. Aby uzyskać opis tego elementu członkowskiego, <see cref="P:Accessibility.IAccessible.accFocus" />Zobacz.</summary>
        <value>Obiekt, który ma fokus klawiatury.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typ wartości zwracanej <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accFocus%2A> właściwości zależy od obiektu, który ma fokus klawiatury. W poniższej tabeli opisano typy <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accFocus%2A> obiektów zwracanych przez właściwość.  
  
|Typ|Opis|  
|----------|-----------------|  
|`null`|Ten obiekt nie ma fokusu klawiatury i nie zawiera elementu podrzędnego, który ma fokus klawiatury.|  
|integer|0, jeśli bieżący obiekt ma fokus klawiatury; w przeciwnym razie podrzędny identyfikator elementu podrzędnego dostępnego obiektu z fokusem klawiatury.|  
|<xref:Accessibility.IAccessible>|Obiekt podrzędnego dostępnego, który ma fokus klawiatury.|  
  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.AccessibleObject> gdy wystąpienie jest rzutowane <xref:Accessibility.IAccessible> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accHitTest">
      <MemberSignature Language="C#" Value="object IAccessible.accHitTest (int xLeft, int yTop);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.accHitTest(int32 xLeft, int32 yTop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accHitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function accHitTest (xLeft As Integer, yTop As Integer) As Object Implements IAccessible.accHitTest" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.accHitTest(int xLeft, int yTop) = Accessibility::IAccessible::accHitTest;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accHitTest(System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xLeft" Type="System.Int32" />
        <Parameter Name="yTop" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="xLeft">Współrzędne poziome.</param>
        <param name="yTop">Współrzędne pionowe.</param>
        <summary>Pobiera obiekt podrzędny na określonym Współrzędne ekranu. Aby uzyskać opis tego elementu członkowskiego, <see cref="M:Accessibility.IAccessible.accHitTest(System.Int32,System.Int32)" />Zobacz.</summary>
        <returns>Dostępny obiekt w punkcie określonym przez <paramref name="xLeft" /> i. <paramref name="yTop" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli opisano typy obiektów, które <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accHitTest%2A> mogą być zwracane przez metodę.  
  
|Typ|Opis|  
|----------|-----------------|  
|<xref:Accessibility.IAccessible>|Dostępny obiekt w określonym kierunku.|  
|integer|0, jeśli określony punkt jest obiektem bieżącym lub poza granicami obiektu; w przeciwnym razie identyfikator podrzędny, który identyfikuje dostęp do dostępnego obiektu w określonym kierunku.|  
  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.AccessibleObject> gdy wystąpienie jest rzutowane <xref:Accessibility.IAccessible> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accLocation">
      <MemberSignature Language="C#" Value="void IAccessible.accLocation (out int pxLeft, out int pyTop, out int pcxWidth, out int pcyHeight, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.accLocation([out] int32&amp; pxLeft, [out] int32&amp; pyTop, [out] int32&amp; pcxWidth, [out] int32&amp; pcyHeight, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub accLocation (ByRef pxLeft As Integer, ByRef pyTop As Integer, ByRef pcxWidth As Integer, ByRef pcyHeight As Integer, childID As Object) Implements IAccessible.accLocation" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.accLocation([Runtime::InteropServices::Out] int % pxLeft, [Runtime::InteropServices::Out] int % pyTop, [Runtime::InteropServices::Out] int % pcxWidth, [Runtime::InteropServices::Out] int % pcyHeight, System::Object ^ childID) = Accessibility::IAccessible::accLocation;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pxLeft" Type="System.Int32" RefType="out" />
        <Parameter Name="pyTop" Type="System.Int32" RefType="out" />
        <Parameter Name="pcxWidth" Type="System.Int32" RefType="out" />
        <Parameter Name="pcyHeight" Type="System.Int32" RefType="out" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pxLeft">Gdy ta metoda zwraca, zawiera współrzędną x lewej krawędzi obiektu. Ten parametr jest przekazywany niezainicjowany.</param>
        <param name="pyTop">Gdy ta metoda zwraca, zawiera współrzędną y górnej krawędzi obiektu. Ten parametr jest przekazywany niezainicjowany.</param>
        <param name="pcxWidth">Gdy ta metoda zwraca, zawiera szerokość obiektu. Ten parametr jest przekazywany niezainicjowany.</param>
        <param name="pcyHeight">Gdy ta metoda zwraca, zawiera wysokość obiektu. Ten parametr jest przekazywany niezainicjowany.</param>
        <param name="childID">Numer IDENTYFIKACYJNy dostępnego obiektu. Ten parametr ma wartość 0, aby uzyskać lokalizację obiektu lub podrzędny identyfikator, aby uzyskać lokalizację jednego z obiektów podrzędnych obiektu.</param>
        <summary>Pobiera bieżącą lokalizację ekranu obiektu. Aby uzyskać opis tego elementu członkowskiego, <see cref="M:Accessibility.IAccessible.accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)" />Zobacz.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.AccessibleObject> gdy wystąpienie jest rzutowane <xref:Accessibility.IAccessible> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accNavigate">
      <MemberSignature Language="C#" Value="object IAccessible.accNavigate (int navDir, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.accNavigate(int32 navDir, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accNavigate(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function accNavigate (navDir As Integer, childID As Object) As Object Implements IAccessible.accNavigate" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.accNavigate(int navDir, System::Object ^ childID) = Accessibility::IAccessible::accNavigate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accNavigate(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navDir" Type="System.Int32" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navDir">Jedno z <see cref="T:System.Windows.Forms.AccessibleNavigation" /> wyliczeń, które określa kierunek przejścia.</param>
        <param name="childID">Numer IDENTYFIKACYJNy dostępnego obiektu. Ten parametr ma wartość 0, aby uruchomić z obiektu, lub podrzędny identyfikator, aby rozpocząć od jednego z obiektów podrzędnych obiektu.</param>
        <summary>Przechodzi do dostępnego obiektu względem bieżącego obiektu. Aby uzyskać opis tego elementu członkowskiego, <see cref="M:Accessibility.IAccessible.accNavigate(System.Int32,System.Object)" />Zobacz.</summary>
        <returns>Dostępny obiekt umieszczony na wartości określonej przez <paramref name="navDir" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli opisano typy obiektów, które <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accNavigate%2A> mogą być zwracane przez metodę.  
  
|Typ|Opis|  
|----------|-----------------|  
|`null`|Nie ma dostępnego obiektu w określonym kierunku.|  
|<xref:Accessibility.IAccessible>|Dostępny obiekt w określonym kierunku.|  
|integer|Identyfikator elementu podrzędnego, który identyfikuje dostępny obiekt w określonym kierunku. Użyj identyfikatora nadrzędnego <xref:Accessibility.IAccessible> i podrzędnego, aby uzyskać dostęp do dostępnego obiektu.|  
  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.AccessibleObject> gdy wystąpienie jest rzutowane <xref:Accessibility.IAccessible> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accParent">
      <MemberSignature Language="C#" Value="object Accessibility.IAccessible.accParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Accessibility.IAccessible.accParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accParent" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accParent As Object Implements IAccessible.accParent" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ Accessibility::IAccessible::accParent { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accParent" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accParent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nadrzędny obiekt dostępny dla tego obiektu. Aby uzyskać opis tego elementu członkowskiego, <see cref="P:Accessibility.IAccessible.accParent" />Zobacz.</summary>
        <value>Reprezentuje element nadrzędny dostępnego obiektu lub <see langword="null" /> nie ma obiektu nadrzędnego. <see cref="T:Accessibility.IAccessible" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.AccessibleObject> gdy wystąpienie jest rzutowane <xref:Accessibility.IAccessible> do interfejsu. 
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accSelect">
      <MemberSignature Language="C#" Value="void IAccessible.accSelect (int flagsSelect, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.accSelect(int32 flagsSelect, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelect(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub accSelect (flagsSelect As Integer, childID As Object) Implements IAccessible.accSelect" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.accSelect(int flagsSelect, System::Object ^ childID) = Accessibility::IAccessible::accSelect;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accSelect(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flagsSelect" Type="System.Int32" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="flagsSelect">Bitowa kombinacja <see cref="T:System.Windows.Forms.AccessibleSelection" /> wartości.</param>
        <param name="childID">Numer IDENTYFIKACYJNy dostępnego obiektu, dla którego należy zmienić zaznaczenie. Ten parametr ma wartość 0, aby wybrać obiekt lub identyfikator podrzędny, aby wybrać jeden z obiektów podrzędnych obiektu.</param>
        <summary>Modyfikuje zaznaczenie lub przesuwa fokus klawiatury dla dostępnego obiektu. Aby uzyskać opis tego elementu członkowskiego, <see cref="M:Accessibility.IAccessible.accSelect(System.Int32,System.Object)" />Zobacz.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej opisano wartości, <xref:System.Windows.Forms.AccessibleSelection> które należy określić podczas wywoływania `Select` złożonych operacji wyboru.  
  
|Operacja|Oflaguj kombinację|  
|---------------|----------------------|  
|Aby zasymulować kliknięcie|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus>ORAZ<xref:System.Windows.Forms.AccessibleSelection.TakeSelection>|  
|Aby wybrać element docelowy przez symulację kombinacji CTRL + kliknięcie|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus>ORAZ<xref:System.Windows.Forms.AccessibleSelection.AddSelection>|  
|Aby anulować zaznaczenie elementu docelowego przez symulację kombinacji CTRL + kliknięcie|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus>ORAZ<xref:System.Windows.Forms.AccessibleSelection.RemoveSelection>|  
|Aby symulować SHIFT + kliknięcia|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus>ORAZ<xref:System.Windows.Forms.AccessibleSelection.ExtendSelection>|  
|Aby zaznaczyć zakres obiektów i umieścić fokus na ostatnim obiekcie|Określ <xref:System.Windows.Forms.AccessibleSelection.TakeFocus> w obiekcie początkowym, aby ustawić zakotwiczenie zaznaczenia. Następnie Wywołaj polecenie select ponownie <xref:System.Windows.Forms.AccessibleSelection.TakeFocus> i <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection> Określ lub dla ostatniego obiektu.|  
|Aby usunąć zaznaczenie wszystkich obiektów|Określ <xref:System.Windows.Forms.AccessibleSelection.TakeSelection> dla dowolnego obiektu. Ta flaga powoduje odwybór wszystkich wybranych obiektów z wyjątkiem zaznaczonego. Następnie Wywołaj polecenie select ponownie <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection> i określ dla tego samego obiektu.|  
  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.AccessibleObject> gdy wystąpienie jest rzutowane <xref:Accessibility.IAccessible> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accSelection">
      <MemberSignature Language="C#" Value="object Accessibility.IAccessible.accSelection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Accessibility.IAccessible.accSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accSelection As Object Implements IAccessible.accSelection" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ Accessibility::IAccessible::accSelection { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accSelection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accSelection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wybrane obiekty podrzędne dostępnego obiektu. Aby uzyskać opis tego elementu członkowskiego, <see cref="P:Accessibility.IAccessible.accSelection" />Zobacz.</summary>
        <value>Wybrane obiekty podrzędne dostępnego obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli opisano typy <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accSelection%2A> obiektów zwracanych przez właściwość  
  
|Typ|Opis|  
|----------|-----------------|  
|`null`|Nie wybrano żadnych obiektów podrzędnych.|  
|<xref:Accessibility.IAccessible>|Wybrany obiekt podrzędnego dostępnego obiektu.|  
|integer|Identyfikator elementu podrzędnego, który identyfikuje wybrany dostępny obiekt. Użyj identyfikatora nadrzędnego <xref:Accessibility.IAccessible> i podrzędnego, aby uzyskać dostęp do dostępnego obiektu.|  
|`IEnumVARIANT`|Lista wybranych obiektów podrzędnych.|  
  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.AccessibleObject> gdy wystąpienie jest rzutowane <xref:Accessibility.IAccessible> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accChild">
      <MemberSignature Language="C#" Value="object IAccessible.get_accChild (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.get_accChild(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accChild (childID As Object) As Object Implements IAccessible.get_accChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.get_accChild(System::Object ^ childID) = Accessibility::IAccessible::get_accChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Numer IDENTYFIKACYJNy obiektu podrzędnego do pobrania.</param>
        <summary>Pobiera określony obiekt podrzędny.</summary>
        <returns>Określony obiekt podrzędny, jeśli istnieje, lub <see langword="null" /> Jeśli nie istnieje.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accDefaultAction">
      <MemberSignature Language="C#" Value="string IAccessible.get_accDefaultAction (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accDefaultAction(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDefaultAction(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accDefaultAction (childID As Object) As String Implements IAccessible.get_accDefaultAction" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accDefaultAction(System::Object ^ childID) = Accessibility::IAccessible::get_accDefaultAction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accDefaultAction(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Numer IDENTYFIKACYJNy dostępnego obiektu, dla którego należy pobrać akcję domyślną. Ten parametr ma wartość 0, aby wybrać obiekt lub identyfikator podrzędny, aby wybrać jeden z obiektów podrzędnych obiektu.</param>
        <summary>Zwraca ciąg, który wskazuje akcję domyślną określonego obiektu.</summary>
        <returns>Ciąg, który wskazuje domyślną akcję <paramref name="childID" />, lub <see langword="name" /> Jeśli <paramref name="childID" /> nie ma domyślnej akcji.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accDescription">
      <MemberSignature Language="C#" Value="string IAccessible.get_accDescription (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accDescription(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDescription(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accDescription (childID As Object) As String Implements IAccessible.get_accDescription" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accDescription(System::Object ^ childID) = Accessibility::IAccessible::get_accDescription;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accDescription(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Numer IDENTYFIKACYJNy dostępnego obiektu, dla którego ma zostać wyświetlony opis. Ten parametr ma wartość 0, aby wybrać obiekt lub identyfikator podrzędny, aby wybrać jeden z obiektów podrzędnych obiektu.</param>
        <summary>Zwraca ciąg opisujący wygląd określonego dostępnego obiektu.</summary>
        <returns>Zlokalizowany ciąg, który opisuje określony dostępny obiekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accHelp">
      <MemberSignature Language="C#" Value="string IAccessible.get_accHelp (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accHelp(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelp(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accHelp (childID As Object) As String Implements IAccessible.get_accHelp" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accHelp(System::Object ^ childID) = Accessibility::IAccessible::get_accHelp;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accHelp(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Numer IDENTYFIKACYJNy dostępnego obiektu, dla którego można uzyskać informacje pomocy. Ten parametr ma wartość 0, aby wybrać obiekt lub identyfikator podrzędny, aby wybrać jeden z obiektów podrzędnych obiektu.</param>
        <summary>Pobiera pełną ścieżkę pliku WinHelp, który jest skojarzony z określonym dostępnym obiektem.</summary>
        <returns>Pełna ścieżka do pliku WinHelp, który jest skojarzony z <paramref name="childID" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accHelpTopic">
      <MemberSignature Language="C#" Value="int IAccessible.get_accHelpTopic (out string pszHelpFile, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 Accessibility.IAccessible.get_accHelpTopic([out] string&amp; pszHelpFile, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelpTopic(System.String@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accHelpTopic (ByRef pszHelpFile As String, childID As Object) As Integer Implements IAccessible.get_accHelpTopic" />
      <MemberSignature Language="C++ CLI" Value=" virtual int Accessibility.IAccessible.get_accHelpTopic([Runtime::InteropServices::Out] System::String ^ % pszHelpFile, System::Object ^ childID) = Accessibility::IAccessible::get_accHelpTopic;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accHelpTopic(System.String@,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pszHelpFile" Type="System.String" RefType="out" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pszHelpFile">Gdy metoda zwraca, pełna ścieżka do pliku WinHelp skojarzonego z określonym obiektem.</param>
        <param name="childID">Numer IDENTYFIKACYJNy dostępnego obiektu, dla którego ma zostać pobrany temat pomocy. Ten parametr ma wartość 0, aby wybrać obiekt lub identyfikator podrzędny, aby wybrać jeden z obiektów podrzędnych obiektu.</param>
        <summary>Pobiera pełną ścieżkę pliku WinHelp, który jest skojarzony z określonym obiektem wraz z identyfikatorem określonego tematu w pliku.</summary>
        <returns>Identyfikator określonego tematu w <paramref name="pszHelpFile" />temacie.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accKeyboardShortcut">
      <MemberSignature Language="C#" Value="string IAccessible.get_accKeyboardShortcut (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accKeyboardShortcut(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accKeyboardShortcut(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accKeyboardShortcut (childID As Object) As String Implements IAccessible.get_accKeyboardShortcut" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accKeyboardShortcut(System::Object ^ childID) = Accessibility::IAccessible::get_accKeyboardShortcut;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accKeyboardShortcut(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Numer IDENTYFIKACYJNy dostępnego obiektu, dla którego ma zostać wyświetlony skrót klawiaturowy. Ten parametr ma wartość 0, aby wybrać obiekt lub identyfikator podrzędny, aby wybrać jeden z obiektów podrzędnych obiektu.</param>
        <summary>Pobiera skrót klawiaturowy lub klawisz dostępu określonego obiektu.</summary>
        <returns>Zlokalizowany ciąg identyfikujący skrót klawiaturowy lub <see langword="null" /> brak skrótu klawiaturowego skojarzonego z określonym obiektem.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accName">
      <MemberSignature Language="C#" Value="string IAccessible.get_accName (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accName(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accName (childID As Object) As String Implements IAccessible.get_accName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accName(System::Object ^ childID) = Accessibility::IAccessible::get_accName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accName(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Numer IDENTYFIKACYJNy dostępnego obiektu, którego nazwa ma zostać pobrana. Ten parametr ma wartość 0, aby wybrać obiekt lub identyfikator podrzędny, aby wybrać jeden z obiektów podrzędnych obiektu.</param>
        <summary>Pobiera nazwę określonego obiektu.</summary>
        <returns>Nazwa określonego obiektu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accRole">
      <MemberSignature Language="C#" Value="object IAccessible.get_accRole (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.get_accRole(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accRole(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accRole (childID As Object) As Object Implements IAccessible.get_accRole" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.get_accRole(System::Object ^ childID) = Accessibility::IAccessible::get_accRole;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accRole(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Numer IDENTYFIKACYJNy dostępnego obiektu, dla którego mają zostać pobrane informacje o rolach. Ten parametr ma wartość 0, aby wybrać obiekt lub identyfikator podrzędny, aby wybrać jeden z obiektów podrzędnych obiektu.</param>
        <summary>Pobiera informacje opisujące rolę określonego obiektu.</summary>
        <returns>Obiekt, który dostarcza informacje o rolach określonego dostępnego obiektu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accState">
      <MemberSignature Language="C#" Value="object IAccessible.get_accState (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.get_accState(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accState (childID As Object) As Object Implements IAccessible.get_accState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.get_accState(System::Object ^ childID) = Accessibility::IAccessible::get_accState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Numer IDENTYFIKACYJNy dostępnego obiektu, dla którego mają zostać pobrane informacje o stanie. Ten parametr ma wartość 0, aby wybrać obiekt lub identyfikator podrzędny, aby wybrać jeden z obiektów podrzędnych obiektu.</param>
        <summary>Pobiera bieżący stan określonego dostępnego obiektu.</summary>
        <returns>Obiekt, który opisuje bieżący stan określonego dostępnego obiektu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accValue">
      <MemberSignature Language="C#" Value="string IAccessible.get_accValue (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accValue(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accValue (childID As Object) As String Implements IAccessible.get_accValue" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accValue(System::Object ^ childID) = Accessibility::IAccessible::get_accValue;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accValue(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Numer IDENTYFIKACYJNy dostępnego obiektu, którego wartość ma zostać pobrana. Ten parametr ma wartość 0, aby wybrać obiekt lub identyfikator podrzędny, aby wybrać jeden z obiektów podrzędnych obiektu.</param>
        <summary>Pobiera wartość określonego dostępnego obiektu. Nie wszystkie obiekty mają wartość.</summary>
        <returns>Wartość <paramref name="childID" /> lub<see langword="null" /> , jeśli obiekt nie ma wartości.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.set_accName">
      <MemberSignature Language="C#" Value="void IAccessible.set_accName (object childID, string newName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.set_accName(object childID, string newName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accName(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub set_accName (childID As Object, newName As String) Implements IAccessible.set_accName" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.set_accName(System::Object ^ childID, System::String ^ newName) = Accessibility::IAccessible::set_accName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.set_accName(System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
        <Parameter Name="newName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="childID">Numer IDENTYFIKACYJNy dostępnego obiektu, do którego należy przypisać nową nazwę. Ten parametr ma wartość 0, aby wybrać obiekt lub identyfikator podrzędny, aby wybrać jeden z obiektów podrzędnych obiektu.</param>
        <param name="newName">Nowa nazwa do przypisania <paramref name="childID" />.</param>
        <summary>Przypisuje nową nazwę dostępną do określonego elementu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.set_accValue">
      <MemberSignature Language="C#" Value="void IAccessible.set_accValue (object childID, string newValue);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.set_accValue(object childID, string newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub set_accValue (childID As Object, newValue As String) Implements IAccessible.set_accValue" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.set_accValue(System::Object ^ childID, System::String ^ newValue) = Accessibility::IAccessible::set_accValue;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.set_accValue(System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
        <Parameter Name="newValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="childID">Numer IDENTYFIKACYJNy dostępnego obiektu, do którego ma zostać przypisana nowa wartość. Ten parametr ma wartość 0, aby wybrać obiekt lub identyfikator podrzędny, aby wybrać jeden z obiektów podrzędnych obiektu.</param>
        <param name="newValue">Nowa wartość do przypisania do określonego dostępnego obiektu.</param>
        <summary>Przypisuje nową wartość do określonego elementu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.AccessibleObject.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lokalizację i rozmiar dostępnego obiektu.</summary>
        <value><see cref="T:System.Drawing.Rectangle" /> Reprezentuje granice dostępnego obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.AccessibleObject.Bounds%2A> Właściwość pobiera prostokąt ograniczenia obiektu we współrzędnych ekranu. Jeśli obiekt ma kształt nieprostokątny, ta właściwość reprezentuje najmniejszy prostokąt, który całkowicie obejmuje cały region obiektu. W związku z tym w przypadku obiektów nieprostokątnych, takich jak elementy widoku listy, współrzędne prostokąta ograniczonego obiektu mogą kończyć się niepowodzeniem, jeśli <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> są testowane, <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> wywołując metodę, ponieważ określa granice obiektu na podstawie piksela według pikseli.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Windows.Forms.AccessibleObject> jak utworzyć formant wykresu z obsługą ułatwień dostępu przy użyciu klas i <xref:System.Windows.Forms.Control.ControlAccessibleObject> , aby uwidocznić dostępne informacje. Kontrolka umieszcza dwie krzywe wraz z legendą. Klasa, która pochodzi od `ControlAccessibleObject` <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> , jest używana w metodzie, aby zapewnić niestandardowe informacje dostępne dla formantu wykresu. `ChartControlAccessibleObject` Ponieważ legenda wykresu nie jest rzeczywistą <xref:System.Windows.Forms.Control> kontrolką, ale zamiast tego jest rysowana przez formant wykresu, nie zawiera żadnych wbudowanych informacji. Z tego `ChartControlAccessibleObject` powodu Klasa <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> przesłania metodę w celu zwrócenia `CurveLegendAccessibleObject` , która reprezentuje dostępne informacje dla każdej części legendy. Gdy aplikacja obsługująca dostęp będzie korzystać z tego formantu, formant może udostępnić wymagane informacje.  
  
 Ten fragment kodu ilustruje zastępowanie <xref:System.Windows.Forms.AccessibleObject.Bounds%2A> właściwości. Zobacz Przegląd <xref:System.Windows.Forms.AccessibleObject> klasy, aby uzyskać pełny przykład kodu.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Nie można pobrać granic formantu.</exception>
        <block subset="none" type="overrides"><para>Domyślna implementacja zwraca prostokąt ograniczenia dostępnego obiektu, jeśli obiekt otacza formant systemowy; w przeciwnym razie zwraca <see cref="F:System.Drawing.Rectangle.Empty" />. Wszystkie widoczne dostępne obiekty muszą obsługiwać tę metodę. Obiekty Sound nie obsługują tej metody.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="DefaultAction">
      <MemberSignature Language="C#" Value="public virtual string DefaultAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultAction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultAction As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultAction { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultAction : string" Usage="System.Windows.Forms.AccessibleObject.DefaultAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ciąg opisujący domyślną akcję obiektu. Nie wszystkie obiekty mają akcję domyślną.</summary>
        <value>Opis akcji domyślnej dla obiektu lub <see langword="null" /> Jeśli ten obiekt nie ma domyślnej akcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ciąg opisuje akcję wykonywaną na obiekcie, a nie obiekt w wyniku. Oznacza to, że przycisk paska narzędzi, który drukuje dokument, ma domyślną akcję "naciśnij" zamiast "Drukuje bieżący dokument". Nie należy mylić domyślnej akcji obiektu z jej wartością.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Nie można pobrać domyślnej akcji dla formantu.</exception>
        <block subset="none" type="overrides"><para>Domyślna implementacja zwraca domyślną akcję dostępnego obiektu, jeśli obiekt otacza formant systemu z akcją domyślną; w przeciwnym razie zwraca <see langword="null" />. Ta metoda powinna obsługiwać tylko kontrolki, które wykonują działania. Nie wszystkie obiekty mają akcje domyślne, a niektóre obiekty mogą mieć domyślną akcję powiązaną z jej <see cref="P:System.Windows.Forms.AccessibleObject.Value" /> właściwością, na przykład w następujących przykładach: Zaznaczone pole wyboru ma domyślną akcję "Usuń zaznaczenie" i wartość "Checked". Wyczyszczone pole wyboru ma domyślną akcję "Check" i wartość "unchecked". Przycisk oznaczony etykietą "Drukuj" ma domyślną akcję "naciśnij", bez wartości. Kontrolka tekst statyczny lub kontrolka edycji, która pokazuje "drukarka", nie ma domyślnej akcji, ale ma wartość "drukarka". <see cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" /> Właściwość obiektu powinna być czasownikiem lub krótką frazą czasownikową.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.Windows.Forms.AccessibleObject.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ciąg opisujący wygląd określonego obiektu. Nie wszystkie obiekty mają opis.</summary>
        <value>Opis wyglądu obiektu dla użytkownika lub <see langword="null" /> , jeśli obiekt nie ma opisu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość opisuje wygląd obiektu dla użytkownika.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Nie można pobrać opisu formantu.</exception>
        <block subset="none" type="overrides"><para>Domyślna implementacja zwraca opis dostępnego obiektu, jeśli obiekt otacza formant systemowy; w przeciwnym razie zwraca <see langword="null" />. Opis jest zazwyczaj używany w celu zapewnienia większego kontekstu dla użytkowników niedowidzących lub niewidomych. Można go również użyć do wyszukiwania kontekstu lub innych aplikacji. Serwery muszą <see cref="P:System.Windows.Forms.AccessibleObject.Description" /> obsługiwać właściwość, jeśli opis nie jest oczywisty lub jeśli jest nadmiarowy w oparciu o <see cref="P:System.Windows.Forms.AccessibleObject.Role" /> <see cref="P:System.Windows.Forms.AccessibleObject.Name" />obiekt, <see cref="P:System.Windows.Forms.AccessibleObject.State" />, i <see cref="P:System.Windows.Forms.AccessibleObject.Value" /> właściwości. Na przykład przycisk z "OK" nie wymaga dodatkowych informacji, ale przycisk, który pokazuje obraz Kaktus. <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> <see cref="P:System.Windows.Forms.AccessibleObject.Description" /> Właściwości <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> ,<see cref="P:System.Windows.Forms.AccessibleObject.Role" />, i ewentualnie dla przycisku Kaktus opisują jego przeznaczenie, ale Właściwość przekazuje informacje, które są mniej materialne, takie jak "przycisk, który pokazuje obraz Kaktus".</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="DoDefaultAction">
      <MemberSignature Language="C#" Value="public virtual void DoDefaultAction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoDefaultAction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.DoDefaultAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DoDefaultAction ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DoDefaultAction();" />
      <MemberSignature Language="F#" Value="abstract member DoDefaultAction : unit -&gt; unit&#xA;override this.DoDefaultAction : unit -&gt; unit" Usage="accessibleObject.DoDefaultAction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wykonuje domyślną akcję skojarzoną z tym dostępnym obiektem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klienci mogą pobrać domyślną akcję obiektu, sprawdzając <xref:System.Windows.Forms.AccessibleObject.DefaultAction%2A> właściwość obiektu. Klient może użyć automatyzacji (jeśli jest obsługiwany), <xref:System.Windows.Forms.AccessibleObject.DoDefaultAction%2A> a nie do wykonywania domyślnej akcji obiektu. <xref:System.Windows.Forms.AccessibleObject.DoDefaultAction%2A> Jednak zapewnia łatwy sposób wykonywania najczęściej używanej akcji obiektu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Nie można wykonać domyślnej akcji dla kontrolki.</exception>
        <block subset="none" type="overrides"><para>Domyślna akcja wykonywana przez elementy interfejsu użytkownika udostępnianej przez system zależy od stanu klawiatury. Oznacza to, że jeśli klawisz modyfikujący, taki jak Shift, Alt lub CTRL jest wyłączony (przez akcję użytkownika lub programowo), gdy <see cref="M:System.Windows.Forms.AccessibleObject.DoDefaultAction" /> jest wywoływana, Akcja domyślna może nie być taka sama, jak w przypadku, gdy te klucze nie są wyłączone. Nie wszystkie obiekty mają akcję domyślną.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetChild">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject GetChild (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetChild(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChild (index As Integer) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetChild(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetChild : int -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.GetChild : int -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.GetChild index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeks (liczony od zera) dostępnego elementu podrzędnego.</param>
        <summary>Pobiera dostępny element podrzędny odpowiadający określonemu indeksowi.</summary>
        <returns><see cref="T:System.Windows.Forms.AccessibleObject" /> Reprezentujący dostępny element podrzędny odpowiadający określonemu indeksowi.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Windows.Forms.AccessibleObject> jak utworzyć formant wykresu z obsługą ułatwień dostępu przy użyciu klas i <xref:System.Windows.Forms.Control.ControlAccessibleObject> , aby uwidocznić dostępne informacje. Kontrolka umieszcza dwie krzywe wraz z legendą. Klasa, która pochodzi od `ControlAccessibleObject` <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> , jest używana w metodzie, aby zapewnić niestandardowe informacje dostępne dla formantu wykresu. `ChartControlAccessibleObject` Ponieważ legenda wykresu nie jest rzeczywistą <xref:System.Windows.Forms.Control> kontrolką, ale zamiast tego jest rysowana przez formant wykresu, nie zawiera żadnych wbudowanych informacji. Z tego `ChartControlAccessibleObject` powodu Klasa <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> przesłania metodę w celu zwrócenia `CurveLegendAccessibleObject` , która reprezentuje dostępne informacje dla każdej części legendy. Gdy aplikacja obsługująca dostęp będzie korzystać z tego formantu, formant może udostępnić wymagane informacje.  
  
 Ten fragment kodu ilustruje zastępowanie <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> metody. Zobacz Przegląd <xref:System.Windows.Forms.AccessibleObject> klasy, aby uzyskać pełny przykład kodu.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wszystkie dostępne obiekty muszą obsługiwać tę właściwość. Jeśli metoda nie zostanie zastąpiona, zwraca wartość <see langword="null" />. Zastąp tę metodę, gdy dostępny obiekt musi udostępniać niestandardowe dostępne elementy podrzędne. Jeśli indeks jest nieprawidłowy, ta metoda powinna zwrócić <see langword="null" />. Podczas zastępowania tej metody należy również przesłonić <see cref="M:System.Windows.Forms.AccessibleObject.GetChildCount" />.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetChildCount">
      <MemberSignature Language="C#" Value="public virtual int GetChildCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChildCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetChildCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChildCount () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChildCount();" />
      <MemberSignature Language="F#" Value="abstract member GetChildCount : unit -&gt; int&#xA;override this.GetChildCount : unit -&gt; int" Usage="accessibleObject.GetChildCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera liczbę elementów podrzędnych należących do dostępnego obiektu.</summary>
        <returns>Liczba elementów podrzędnych należących do dostępnego obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Windows.Forms.AccessibleObject> jak utworzyć formant wykresu z obsługą ułatwień dostępu przy użyciu klas i <xref:System.Windows.Forms.Control.ControlAccessibleObject> , aby uwidocznić dostępne informacje. Kontrolka umieszcza dwie krzywe wraz z legendą. Klasa, która pochodzi od `ControlAccessibleObject` <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> , jest używana w metodzie, aby zapewnić niestandardowe informacje dostępne dla formantu wykresu. `ChartControlAccessibleObject` Ponieważ legenda wykresu nie jest rzeczywistą <xref:System.Windows.Forms.Control> kontrolką, ale zamiast tego jest rysowana przez formant wykresu, nie zawiera żadnych wbudowanych informacji. Z tego `ChartControlAccessibleObject` powodu Klasa <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> przesłania metodę w celu zwrócenia `CurveLegendAccessibleObject` , która reprezentuje dostępne informacje dla każdej części legendy. Gdy aplikacja obsługująca dostęp będzie korzystać z tego formantu, formant może udostępnić wymagane informacje.  
  
 Ten kod ilustruje zastępowanie <xref:System.Windows.Forms.AccessibleObject.GetChildCount%2A> metody. Zobacz Przegląd <xref:System.Windows.Forms.AccessibleObject> klasy, aby uzyskać pełny przykład kodu.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wszystkie obiekty muszą obsługiwać tę właściwość. Domyślna implementacja zwraca wartość-1. Zastąp tę metodę, gdy dostępny obiekt musi udostępniać niestandardowe dostępne elementy podrzędne. Podczas zastępowania tej metody należy również przesłonić <see cref="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetFocused">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject GetFocused ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetFocused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetFocused" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFocused () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetFocused();" />
      <MemberSignature Language="F#" Value="abstract member GetFocused : unit -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.GetFocused : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.GetFocused " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera obiekt, który ma fokus klawiatury.</summary>
        <returns>Element <see cref="T:System.Windows.Forms.AccessibleObject" /> określający aktualnie ukierunkowany element podrzędny. Ta metoda zwraca obiekt wywołujący, jeśli sam obiekt jest skoncentrowany. Zwraca <see langword="null" /> wartość, jeśli żaden obiekt nie ma fokusu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Koncepcja fokusu klawiatury dotyczy aktywnego okna. Aktywne okno jest oknem pierwszego planu, w którym pracuje użytkownik. Obiekt z fokusem klawiatury jest aktywnym oknem lub obiektem podrzędnym aktywnego okna.  
  
 Tylko jeden obiekt lub element w obrębie kontenera może mieć fokus w dowolnym momencie. Obiekt z fokusem klawiatury nie musi być zaznaczonym obiektem.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Nie można pobrać formantu.</exception>
        <block subset="none" type="overrides"><para>Wszystkie obiekty, które mogą otrzymać fokus klawiatury, muszą obsługiwać tę właściwość.</para></block>
        <altmember cref="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetHelpTopic">
      <MemberSignature Language="C#" Value="public virtual int GetHelpTopic (out string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHelpTopic([out] string&amp; fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetHelpTopic(System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHelpTopic (ByRef fileName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHelpTopic([Runtime::InteropServices::Out] System::String ^ % fileName);" />
      <MemberSignature Language="F#" Value="abstract member GetHelpTopic :  -&gt; int&#xA;override this.GetHelpTopic :  -&gt; int" Usage="accessibleObject.GetHelpTopic fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="fileName">W przypadku powrotu ta właściwość zawiera ścieżkę do pliku pomocy skojarzonego z tym dostępnym obiektem.</param>
        <summary>Pobiera identyfikator tematu pomocy oraz ścieżkę do pliku pomocy skojarzonego z tym dostępnym obiektem.</summary>
        <returns>Identyfikator tematu pomocy lub-1, jeśli nie ma tematu pomocy. W przypadku <paramref name="fileName" /> powrotu parametr zawiera ścieżkę do pliku pomocy skojarzonego z tym dostępnym obiektem.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby wyświetlić pomoc <xref:System.Windows.Forms.AccessibleObject> dotyczącą korzystania z systemu pomocy systemu Windows, można przekazać nazwę pliku i identyfikator tematu do odpowiedniej <xref:System.Windows.Forms.Help.ShowHelp%2A?displayProperty=nameWithType> metody <xref:System.Windows.Forms.Help>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Nie można pobrać tematu pomocy dla formantu.</exception>
        <block subset="none" type="overrides"><para>Nie wszystkie obiekty muszą obsługiwać tę właściwość.</para></block>
        <altmember cref="T:System.Windows.Forms.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
      </Docs>
    </Member>
    <Member MemberName="GetSelected">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject GetSelected ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetSelected() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetSelected" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSelected () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetSelected();" />
      <MemberSignature Language="F#" Value="abstract member GetSelected : unit -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.GetSelected : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.GetSelected " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera aktualnie wybrany element podrzędny.</summary>
        <returns><see cref="T:System.Windows.Forms.AccessibleObject" /> Reprezentuje aktualnie wybrany element podrzędny. Ta metoda zwraca obiekt wywołujący, jeśli sam obiekt jest zaznaczony. Zwraca <see langword="null" /> wartość, jeśli nie jest aktualnie zaznaczone, a sam obiekt nie ma fokusu.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Nie można pobrać wybranego elementu podrzędnego.</exception>
        <block subset="none" type="overrides"><para>Wszystkie obiekty, które można wybrać, powinny obsługiwać tę właściwość.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Help">
      <MemberSignature Language="C#" Value="public virtual string Help { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Help" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Help" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Help As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Help { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Help : string" Usage="System.Windows.Forms.AccessibleObject.Help" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera opis obiektu lub sposobu użycia obiektu.</summary>
        <value>A <see cref="T:System.String" /> , który zawiera opis działania obiektu lub sposób użycia obiektu. Zwraca <see langword="null" /> wartość, jeśli nie zdefiniowano pomocy.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Nie można pobrać ciągu pomocy dla kontrolki.</exception>
        <block subset="none" type="overrides"><para>Nie wszystkie obiekty muszą obsługiwać tę właściwość. Zazwyczaj ta właściwość zawiera informacje o stylu etykietki narzędzia, które są używane do opisywania obiektu lub sposobu jego użycia. Na przykład <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> właściwość przycisku paska narzędzi, który pokazuje drukarkę, może mieć wartość "drukowanie bieżącego dokumentu". Tekst <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> właściwości nie musi być unikatowy w interfejsie użytkownika. Serwery nie muszą obsługiwać właściwości, <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> Jeśli inne właściwości dostarczają wystarczające informacje o przeznaczeniu obiektu i jakie akcje może wykonać obiekt.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject HitTest (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject HitTest(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.HitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HitTest (x As Integer, y As Integer) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ HitTest(int x, int y);" />
      <MemberSignature Language="F#" Value="abstract member HitTest : int * int -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.HitTest : int * int -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.HitTest (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">Współrzędne ekranu poziomego.</param>
        <param name="y">Współrzędne ekranu pionowego.</param>
        <summary>Pobiera obiekt podrzędny na określonych współrzędnych ekranu.</summary>
        <returns><see cref="T:System.Windows.Forms.AccessibleObject" /> Reprezentuje obiekt podrzędny na danej współrzędnej ekranu. Ta metoda zwraca obiekt wywołujący, jeśli sam obiekt znajduje się w określonej lokalizacji. Zwraca <see langword="null" /> Jeśli żaden obiekt nie znajduje się w przetestowanej lokalizacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku obiektów nieprostokątnych, takich jak elementy widoku listy, współrzędne prostokąta związanego z obiektem <xref:System.Windows.Forms.AccessibleObject.Bounds%2A> pobrane przez mogą kończyć się <xref:System.Windows.Forms.AccessibleObject.HitTest%2A>niepowodzeniem <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> w przypadku przetestowania za pomocą, ponieważ określa granice obiektu na podstawie pikseli.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Nie można sprawdzić trafień formantu.</exception>
        <block subset="none" type="overrides"><para>Wszystkie obiekty wizualne muszą obsługiwać tę metodę; obiekty Sound nie obsługują tego obiektu.</para></block>
      </Docs>
    </Member>
    <Member MemberName="KeyboardShortcut">
      <MemberSignature Language="C#" Value="public virtual string KeyboardShortcut { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyboardShortcut" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyboardShortcut As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ KeyboardShortcut { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyboardShortcut : string" Usage="System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera klawisz skrótu lub klawisz dostępu dla dostępnego obiektu.</summary>
        <value>Klawisz skrótu lub klawisz dostępu dla dostępnego obiektu lub <see langword="null" /> Jeśli nie ma żadnego klucza skrótu skojarzonego z obiektem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kluczem dostępu, znanym również jako element, jest podkreślony znak w tekście menu, element menu, etykieta przycisku lub innej kontrolki. Na przykład użytkownik może wyświetlić menu, naciskając klawisz Alt, a także naciskając wskazany klawisz podkreślony, taki jak Alt + F, aby otworzyć `File` menu. Aby użyć klucza dostępu do elementu menu, menu zawierające element musi być aktywny. Kontrolki, takie jak przyciski paska narzędzi i elementy menu, często mają skojarzony klawisz skrótu. Element menu może mieć zarówno klucz dostępu, jak i skojarzony z nim klucz skrótu. Jeśli wartość <xref:System.Windows.Forms.AccessibleObject.KeyboardShortcut%2A> właściwości jest pojedynczym znakiem, można założyć, że jest to klucz dostępu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Nie można pobrać skrótu dla kontrolki.</exception>
        <block subset="none" type="overrides"><para>Wszystkie obiekty, które mają klawisz skrótu lub klucz dostępu, powinny obsługiwać tę właściwość.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.AccessibleObject.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę obiektu.</summary>
        <value>Nazwa obiektu lub <see langword="null" /> właściwość nie została ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.AccessibleObject.Name%2A> Właściwość jest ciągiem używanym przez klientów do identyfikowania, znajdowania lub ogłaszania obiektu dla użytkownika. Aby uzyskać dostęp do nazwy obiektu podrzędnego, należy najpierw wywołać <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> z indeksem elementu podrzędnego, którego nazwa jest pobierana.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Windows.Forms.AccessibleObject> jak utworzyć formant wykresu z obsługą ułatwień dostępu przy użyciu klas i <xref:System.Windows.Forms.Control.ControlAccessibleObject> , aby uwidocznić dostępne informacje. Kontrolka umieszcza dwie krzywe wraz z legendą. Klasa, która pochodzi od `ControlAccessibleObject` <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> , jest używana w metodzie, aby zapewnić niestandardowe informacje dostępne dla formantu wykresu. `ChartControlAccessibleObject` Ponieważ legenda wykresu nie jest rzeczywistą <xref:System.Windows.Forms.Control> kontrolką, ale zamiast tego jest rysowana przez formant wykresu, nie zawiera żadnych wbudowanych informacji. Z tego `ChartControlAccessibleObject` powodu Klasa <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> przesłania metodę w celu zwrócenia `CurveLegendAccessibleObject` , która reprezentuje dostępne informacje dla każdej części legendy. Gdy aplikacja obsługująca dostęp będzie korzystać z tego formantu, formant może udostępnić wymagane informacje.  
  
 Ten fragment kodu ilustruje zastępowanie <xref:System.Windows.Forms.AccessibleObject.Name%2A> właściwości. Zobacz Przegląd <xref:System.Windows.Forms.AccessibleObject> klasy, aby uzyskać pełny przykład kodu.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Nie można pobrać lub ustawić nazwy formantu.</exception>
        <block subset="none" type="overrides"><para>Wszystkie obiekty powinny obsługiwać tę właściwość. Nazwa obiektu powinna być intuicyjna, aby użytkownicy rozumieli znaczenie lub znaczenie obiektu. Upewnij się również, że <see langword="Name" /> właściwość jest unikatowa względem wszystkich obiektów równorzędnych w obiekcie nadrzędnym. Nawigacja w tabelach prezentuje szczególnie trudne problemy dla niektórych użytkowników. W związku z tym deweloperzy serwerów powinni tworzyć nazwy komórek tabeli jako opisowe. Na przykład możesz utworzyć nazwę komórki, łącząc nazwy wierszy i kolumn, które zajmowano, na przykład "a1". Zwykle lepiej jest używać więcej opisowych nazw, takich jak "Karin, luty". Wiele obiektów, takich jak ikony, menu, pola wyboru, pola kombi i inne kontrolki, ma etykiety, które są wyświetlane użytkownikom. Każda etykieta wyświetlana dla użytkowników powinna być używana jako <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> właściwość obiektu. Aby uzyskać więcej informacji, zobacz <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> właściwość.  
  
W przypadku korzystania z menu lub tekstu przycisku dla <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> właściwości, należy oddzielić znaki handlowe (&amp;), które oznaczają klawisze dostępu klawiaturowego.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject Navigate (System.Windows.Forms.AccessibleNavigation navdir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject Navigate(valuetype System.Windows.Forms.AccessibleNavigation navdir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Navigate (navdir As AccessibleNavigation) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ Navigate(System::Windows::Forms::AccessibleNavigation navdir);" />
      <MemberSignature Language="F#" Value="abstract member Navigate : System.Windows.Forms.AccessibleNavigation -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.Navigate : System.Windows.Forms.AccessibleNavigation -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.Navigate navdir" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navdir" Type="System.Windows.Forms.AccessibleNavigation" />
      </Parameters>
      <Docs>
        <param name="navdir">Jedna z <see cref="T:System.Windows.Forms.AccessibleNavigation" /> wartości.</param>
        <summary>Przechodzi do innego dostępnego obiektu.</summary>
        <returns><see cref="T:System.Windows.Forms.AccessibleObject" /> Reprezentuje jedną<see cref="T:System.Windows.Forms.AccessibleNavigation" /> z wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nawigowanie, zarówno przestrzenne, jak i logiczne, jest zawsze ograniczone do elementów interfejsu użytkownika w kontenerze. Dzięki nawigacji przestrzennej klienci mogą nawigować tylko do elementu równorzędnego obiektu początkowego. W zależności od flagi nawigacyjnej używanej w nawigacji logicznej klienci mogą przechodzić do elementu podrzędnego lub do elementu równorzędnego obiektu początkowego. Ta metoda nie zmienia zaznaczenia ani fokusu. Aby zmienić fokus lub wybrać obiekt, użyj <xref:System.Windows.Forms.AccessibleObject.Select%2A>. <xref:System.Windows.Forms.AccessibleObject.Navigate%2A> Metoda pobiera tylko elementy interfejsu użytkownika, które mają zdefiniowaną lokalizację ekranu.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Windows.Forms.AccessibleObject> jak utworzyć formant wykresu z obsługą ułatwień dostępu przy użyciu klas i <xref:System.Windows.Forms.Control.ControlAccessibleObject> , aby uwidocznić dostępne informacje. Kontrolka umieszcza dwie krzywe wraz z legendą. Klasa, która pochodzi od `ControlAccessibleObject` <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> , jest używana w metodzie, aby zapewnić niestandardowe informacje dostępne dla formantu wykresu. `ChartControlAccessibleObject` Ponieważ legenda wykresu nie jest rzeczywistą <xref:System.Windows.Forms.Control> kontrolką, ale zamiast tego jest rysowana przez formant wykresu, nie zawiera żadnych wbudowanych informacji. Z tego `ChartControlAccessibleObject` powodu Klasa <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> przesłania metodę w celu zwrócenia `CurveLegendAccessibleObject` , która reprezentuje dostępne informacje dla każdej części legendy. Gdy aplikacja obsługująca dostęp będzie korzystać z tego formantu, formant może udostępnić wymagane informacje.  
  
 Ten kod ilustruje zastępowanie <xref:System.Windows.Forms.AccessibleObject.Navigate%2A> metody. Zobacz Przegląd <xref:System.Windows.Forms.AccessibleObject> klasy, aby uzyskać pełny przykład kodu.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Próba nawigacji nie powiedzie się.</exception>
        <block subset="none" type="overrides"><para>Wszystkie obiekty wizualne muszą obsługiwać tę metodę. Jeśli obiekt ma stan <see cref="F:System.Windows.Forms.AccessibleStates.Invisible" />, Nawigacja do tego ukrytego obiektu może zakończyć się niepowodzeniem. Niektóre elementy interfejsu zdefiniowane przez system, takie jak menu, elementy menu i menu podręczne umożliwiają nawigację do obiektów, które nie są widoczne. Jednak inne elementy interfejsu użytkownika zdefiniowane przez system nie obsługują tego programu. Jeśli to możliwe, serwery powinny obsługiwać nawigację do obiektów, które nie są widoczne, ale ta obsługa nie jest wymagana, a klienci nie powinny jej oczekiwać.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Parent As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleObject ^ Parent { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Forms.AccessibleObject" Usage="System.Windows.Forms.AccessibleObject.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera element nadrzędny dostępnego obiektu.</summary>
        <value>Reprezentuje element nadrzędny dostępnego obiektu lub <see langword="null" /> nie ma obiektu nadrzędnego. <see cref="T:System.Windows.Forms.AccessibleObject" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Windows.Forms.AccessibleObject> jak utworzyć formant wykresu z obsługą ułatwień dostępu przy użyciu klas i <xref:System.Windows.Forms.Control.ControlAccessibleObject> , aby uwidocznić dostępne informacje. Kontrolka umieszcza dwie krzywe wraz z legendą. Klasa, która pochodzi od `ControlAccessibleObject` <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> , jest używana w metodzie, aby zapewnić niestandardowe informacje dostępne dla formantu wykresu. `ChartControlAccessibleObject` Ponieważ legenda wykresu nie jest rzeczywistą <xref:System.Windows.Forms.Control> kontrolką, ale zamiast tego jest rysowana przez formant wykresu, nie zawiera żadnych wbudowanych informacji. Z tego `ChartControlAccessibleObject` powodu Klasa <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> przesłania metodę w celu zwrócenia `CurveLegendAccessibleObject` , która reprezentuje dostępne informacje dla każdej części legendy. Gdy aplikacja obsługująca dostęp będzie korzystać z tego formantu, formant może udostępnić wymagane informacje.  
  
 Ten fragment kodu ilustruje zastępowanie <xref:System.Windows.Forms.AccessibleObject.Parent%2A> właściwości. Zobacz Przegląd <xref:System.Windows.Forms.AccessibleObject> klasy, aby uzyskać pełny przykład kodu.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wszystkie obiekty powinny obsługiwać tę właściwość.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="RaiseAutomationNotification">
      <MemberSignature Language="C#" Value="public bool RaiseAutomationNotification (System.Windows.Forms.Automation.AutomationNotificationKind notificationKind, System.Windows.Forms.Automation.AutomationNotificationProcessing notificationProcessing, string notificationText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RaiseAutomationNotification(valuetype System.Windows.Forms.Automation.AutomationNotificationKind notificationKind, valuetype System.Windows.Forms.Automation.AutomationNotificationProcessing notificationProcessing, string notificationText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.RaiseAutomationNotification(System.Windows.Forms.Automation.AutomationNotificationKind,System.Windows.Forms.Automation.AutomationNotificationProcessing,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RaiseAutomationNotification (notificationKind As AutomationNotificationKind, notificationProcessing As AutomationNotificationProcessing, notificationText As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RaiseAutomationNotification(System::Windows::Forms::Automation::AutomationNotificationKind notificationKind, System::Windows::Forms::Automation::AutomationNotificationProcessing notificationProcessing, System::String ^ notificationText);" />
      <MemberSignature Language="F#" Value="member this.RaiseAutomationNotification : System.Windows.Forms.Automation.AutomationNotificationKind * System.Windows.Forms.Automation.AutomationNotificationProcessing * string -&gt; bool" Usage="accessibleObject.RaiseAutomationNotification (notificationKind, notificationProcessing, notificationText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notificationKind" Type="System.Windows.Forms.Automation.AutomationNotificationKind" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.8" />
        <Parameter Name="notificationProcessing" Type="System.Windows.Forms.Automation.AutomationNotificationProcessing" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.8" />
        <Parameter Name="notificationText" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="notificationKind">Typ powiadomienia.</param>
        <param name="notificationProcessing">Wskaźnik sposobu przetwarzania powiadomień.</param>
        <param name="notificationText">Tekst powiadomienia.</param>
        <summary>Podnosi zdarzenie powiadomienia automatyzacji interfejsu użytkownika.</summary>
        <returns><see langword="true" />Jeśli operacja się powiedzie; <see langword="false" /> Jeśli podstawowa infrastruktura systemu Windows jest niedostępna lub operacja nie powiodła się. Wywołaj <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error" /> , aby uzyskać szczegółowe informacje.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

To zdarzenie jest dostępne począwszy od systemu Windows 10 w wersji 1709.
  
       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseLiveRegionChanged">
      <MemberSignature Language="C#" Value="public virtual bool RaiseLiveRegionChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RaiseLiveRegionChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.RaiseLiveRegionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RaiseLiveRegionChanged () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool RaiseLiveRegionChanged();" />
      <MemberSignature Language="F#" Value="abstract member RaiseLiveRegionChanged : unit -&gt; bool&#xA;override this.RaiseLiveRegionChanged : unit -&gt; bool" Usage="accessibleObject.RaiseLiveRegionChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Podnosi zdarzenie automatyzacji interfejsu użytkownika LiveRegionChanged.</summary>
        <returns><see langword="true" />Jeśli operacja się powiedzie; <see langword="False" /> w przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

Ta metoda musi zostać przesłonięta w klasach pochodnych, które obsługują funkcję aktywnego regionu automatyzacji interfejsu użytkownika.
  
     ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Edytowalne regiony obiektów ułatwień dostępu nie są obsługiwane.</exception>
      </Docs>
    </Member>
    <Member MemberName="Role">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleRole Role { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AccessibleRole Role" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Role" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Role As AccessibleRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleRole Role { System::Windows::Forms::AccessibleRole get(); };" />
      <MemberSignature Language="F#" Value="member this.Role : System.Windows.Forms.AccessibleRole" Usage="System.Windows.Forms.AccessibleObject.Role" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleRole</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera rolę tego dostępnego obiektu.</summary>
        <value>Jedna z <see cref="T:System.Windows.Forms.AccessibleRole" /> wartości lub <see cref="F:System.Windows.Forms.AccessibleRole.None" /> Jeśli żadna rola nie została określona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rola obiektu pomaga opisać funkcję obiektu.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Windows.Forms.AccessibleObject> jak utworzyć formant wykresu z obsługą ułatwień dostępu przy użyciu klas i <xref:System.Windows.Forms.Control.ControlAccessibleObject> , aby uwidocznić dostępne informacje. Kontrolka umieszcza dwie krzywe wraz z legendą. Klasa, która pochodzi od `ControlAccessibleObject` <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> , jest używana w metodzie, aby zapewnić niestandardowe informacje dostępne dla formantu wykresu. `ChartControlAccessibleObject` Ponieważ legenda wykresu nie jest rzeczywistą <xref:System.Windows.Forms.Control> kontrolką, ale zamiast tego jest rysowana przez formant wykresu, nie zawiera żadnych wbudowanych informacji. Z tego `ChartControlAccessibleObject` powodu Klasa <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> przesłania metodę w celu zwrócenia `CurveLegendAccessibleObject` , która reprezentuje dostępne informacje dla każdej części legendy. Gdy aplikacja obsługująca dostęp będzie korzystać z tego formantu, formant może udostępnić wymagane informacje.  
  
 Ten fragment kodu ilustruje zastępowanie <xref:System.Windows.Forms.AccessibleObject.Role%2A> właściwości. Zobacz Przegląd <xref:System.Windows.Forms.AccessibleObject> klasy, aby uzyskać pełny przykład kodu.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wszystkie obiekty powinny obsługiwać tę właściwość.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="RuntimeIDFirstItem">
      <MemberSignature Language="C#" Value="protected const int RuntimeIDFirstItem = 42;" />
      <MemberSignature Language="ILAsm" Value=".field family static literal int32 RuntimeIDFirstItem = (42)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.AccessibleObject.RuntimeIDFirstItem" />
      <MemberSignature Language="VB.NET" Value="Protected Const RuntimeIDFirstItem As Integer  = 42" />
      <MemberSignature Language="C++ CLI" Value="protected: int RuntimeIDFirstItem = 42;" />
      <MemberSignature Language="F#" Value="val mutable RuntimeIDFirstItem : int" Usage="System.Windows.Forms.AccessibleObject.RuntimeIDFirstItem" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>42</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public virtual void Select (System.Windows.Forms.AccessibleSelection flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select(valuetype System.Windows.Forms.AccessibleSelection flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Select(System.Windows.Forms.AccessibleSelection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select (flags As AccessibleSelection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select(System::Windows::Forms::AccessibleSelection flags);" />
      <MemberSignature Language="F#" Value="abstract member Select : System.Windows.Forms.AccessibleSelection -&gt; unit&#xA;override this.Select : System.Windows.Forms.AccessibleSelection -&gt; unit" Usage="accessibleObject.Select flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Windows.Forms.AccessibleSelection" />
      </Parameters>
      <Docs>
        <param name="flags">Jedna z <see cref="T:System.Windows.Forms.AccessibleSelection" /> wartości.</param>
        <summary>Modyfikuje zaznaczenie lub przesuwa fokus klawiatury dla dostępnego obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacje mogą używać tej metody do wykonywania złożonych operacji wyboru.  
  
 Poniżej opisano wartości, <xref:System.Windows.Forms.AccessibleSelection> które należy określić podczas wywoływania <xref:System.Windows.Forms.AccessibleObject.Select%2A> złożonych operacji wyboru.  
  
|Operacja|Oflaguj kombinację|  
|---------------|----------------------|  
|Aby zasymulować kliknięcie|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType>`OR`Uwaga: <xref:System.Windows.Forms.AccessibleSelection.TakeSelection?displayProperty=nameWithType> ****  Ta kombinacja nie wybierze żądanej kontrolki, jeśli zostanie wywołana z poziomu własnej aplikacji. Będzie to miało żądany skutek, jeśli jest wywoływana z zewnętrznej aplikacji.|  
|Aby wybrać element docelowy przez symulację kombinacji CTRL + kliknięcie|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.AddSelection?displayProperty=nameWithType>|  
|Aby anulować zaznaczenie elementu docelowego przez symulację kombinacji CTRL + kliknięcie|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection?displayProperty=nameWithType>|  
|Aby symulować SHIFT + kliknięcia|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection?displayProperty=nameWithType>|  
|Aby zaznaczyć zakres obiektów i umieścić fokus na ostatnim obiekcie|Określ <xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> w obiekcie początkowym, aby ustawić zakotwiczenie zaznaczenia. Następnie ponownie <xref:System.Windows.Forms.AccessibleObject.Select%2A> Wywołaj i <xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` Określ<xref:System.Windows.Forms.AccessibleSelection.ExtendSelection?displayProperty=nameWithType> dla ostatniego obiektu.|  
|Aby usunąć zaznaczenie wszystkich obiektów|Określ <xref:System.Windows.Forms.AccessibleSelection.TakeSelection?displayProperty=nameWithType> dla dowolnego obiektu. Ta flaga powoduje odwybór wszystkich wybranych obiektów z wyjątkiem zaznaczonego. Następnie ponownie <xref:System.Windows.Forms.AccessibleObject.Select%2A> Wywołaj i <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection?displayProperty=nameWithType> Określ dla tego samego obiektu.|  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Windows.Forms.AccessibleObject> jak utworzyć formant wykresu z obsługą ułatwień dostępu przy użyciu klas i <xref:System.Windows.Forms.Control.ControlAccessibleObject> , aby uwidocznić dostępne informacje. Kontrolka umieszcza dwie krzywe wraz z legendą. Klasa, która pochodzi od `ControlAccessibleObject` <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> , jest używana w metodzie, aby zapewnić niestandardowe informacje dostępne dla formantu wykresu. `ChartControlAccessibleObject` Ponieważ legenda wykresu nie jest rzeczywistą <xref:System.Windows.Forms.Control> kontrolką, ale zamiast tego jest rysowana przez formant wykresu, nie zawiera żadnych wbudowanych informacji. Z tego `ChartControlAccessibleObject` powodu Klasa <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> przesłania metodę w celu zwrócenia `CurveLegendAccessibleObject` , która reprezentuje dostępne informacje dla każdej części legendy. Gdy aplikacja obsługująca dostęp będzie korzystać z tego formantu, formant może udostępnić wymagane informacje.  
  
 Ten kod ilustruje zastępowanie <xref:System.Windows.Forms.AccessibleObject.Select%2A> metody. Zobacz Przegląd <xref:System.Windows.Forms.AccessibleObject> klasy, aby uzyskać pełny przykład kodu.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Nie można wykonać wyboru.</exception>
        <block subset="none" type="overrides"><para>Wszystkie obiekty, które można wybrać lub otrzymać fokus klawiatury, muszą obsługiwać tę metodę.</para></block>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleStates State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AccessibleStates State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.State" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property State As AccessibleStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleStates State { System::Windows::Forms::AccessibleStates get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Windows.Forms.AccessibleStates" Usage="System.Windows.Forms.AccessibleObject.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera stan tego dostępnego obiektu.</summary>
        <value>Jedna z <see cref="T:System.Windows.Forms.AccessibleStates" /> wartości lub <see cref="F:System.Windows.Forms.AccessibleStates.None" />, jeśli żaden stan nie został ustawiony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Windows.Forms.AccessibleObject> jak utworzyć formant wykresu z obsługą ułatwień dostępu przy użyciu klas i <xref:System.Windows.Forms.Control.ControlAccessibleObject> , aby uwidocznić dostępne informacje. Kontrolka umieszcza dwie krzywe wraz z legendą. Klasa, która pochodzi od `ControlAccessibleObject` <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> , jest używana w metodzie, aby zapewnić niestandardowe informacje dostępne dla formantu wykresu. `ChartControlAccessibleObject` Ponieważ legenda wykresu nie jest rzeczywistą <xref:System.Windows.Forms.Control> kontrolką, ale zamiast tego jest rysowana przez formant wykresu, nie zawiera żadnych wbudowanych informacji. Z tego `ChartControlAccessibleObject` powodu Klasa <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> przesłania metodę w celu zwrócenia `CurveLegendAccessibleObject` , która reprezentuje dostępne informacje dla każdej części legendy. Gdy aplikacja obsługująca dostęp będzie korzystać z tego formantu, formant może udostępnić wymagane informacje.  
  
 Ten fragment kodu ilustruje zastępowanie <xref:System.Windows.Forms.AccessibleObject.State%2A> właściwości. Zobacz Przegląd <xref:System.Windows.Forms.AccessibleObject> klasy, aby uzyskać pełny przykład kodu.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wszystkie obiekty powinny obsługiwać tę właściwość.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetField">
      <MemberSignature Language="C#" Value="System.Reflection.FieldInfo IReflect.GetField (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.FieldInfo System.Reflection.IReflect.GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo Implements IReflect.GetField" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::FieldInfo ^ System.Reflection.IReflect.GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetField;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa pola do znalezienia.</param>
        <param name="bindingAttr">Atrybuty powiązania używane do sterowania wyszukiwaniem.</param>
        <summary><see cref="T:System.Reflection.FieldInfo" /> Pobiera obiekt odpowiadający określonemu fladze pola i powiązania. Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)" />Zobacz.</summary>
        <returns>Obiekt zawierający informacje o nazwanym obiekcie, który spełnia ograniczenia wyszukiwania określone w <paramref name="bindingAttr" />. <see cref="T:System.Reflection.FieldInfo" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.AccessibleObject> gdy wystąpienie jest rzutowane <xref:System.Reflection.IReflect> do interfejsu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Obiekt implementuje wiele pól o tej samej nazwie.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetFields">
      <MemberSignature Language="C#" Value="System.Reflection.FieldInfo[] IReflect.GetFields (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.FieldInfo[] System.Reflection.IReflect.GetFields(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetFields (bindingAttr As BindingFlags) As FieldInfo() Implements IReflect.GetFields" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ System.Reflection.IReflect.GetFields(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetFields;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">Atrybuty powiązania używane do sterowania wyszukiwaniem.</param>
        <summary>Pobiera tablicę <see cref="T:System.Reflection.FieldInfo" /> obiektów odpowiadającą wszystkim polom bieżącej klasy. Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)" />Zobacz.</summary>
        <returns>Tablica <see cref="T:System.Reflection.FieldInfo" /> obiektów zawierających wszystkie informacje pola dla tego obiektu odbicia, które spełniają ograniczenia wyszukiwania określone w <paramref name="bindingAttr" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każde pole musi mieć unikatową nazwę. <xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType> Flaga określa, że pola niepubliczne są uwzględniane w wyszukiwaniu. <xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType> Flaga określa, że pola publiczne są uwzględniane w wyszukiwaniu.  
  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.AccessibleObject> gdy wystąpienie jest rzutowane <xref:System.Reflection.IReflect> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMember">
      <MemberSignature Language="C#" Value="System.Reflection.MemberInfo[] IReflect.GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MemberInfo[] System.Reflection.IReflect.GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo() Implements IReflect.GetMember" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ System.Reflection.IReflect.GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMember;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa elementu członkowskiego do znalezienia.</param>
        <param name="bindingAttr">Atrybuty powiązania używane do sterowania wyszukiwaniem.</param>
        <summary>Pobiera tablicę <see cref="T:System.Reflection.MemberInfo" /> obiektów odpowiadającą wszystkim publicznym elementom członkowskim lub wszystkim członkom zgodnym z określoną nazwą. Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)" />Zobacz.</summary>
        <returns>Tablica <see cref="T:System.Reflection.MemberInfo" /> obiektów pasujących do parametru name.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.AccessibleObject> gdy wystąpienie jest rzutowane <xref:System.Reflection.IReflect> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMembers">
      <MemberSignature Language="C#" Value="System.Reflection.MemberInfo[] IReflect.GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MemberInfo[] System.Reflection.IReflect.GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMembers (bindingAttr As BindingFlags) As MemberInfo() Implements IReflect.GetMembers" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ System.Reflection.IReflect.GetMembers(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMembers;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">Atrybuty powiązania używane do sterowania wyszukiwaniem.</param>
        <summary>Pobiera tablicę <see cref="T:System.Reflection.MemberInfo" /> obiektów odpowiadającą wszystkim publicznym elementom członkowskim lub wszystkim członkom bieżącej klasy. Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)" />Zobacz.</summary>
        <returns>Tablica <see cref="T:System.Reflection.MemberInfo" /> obiektów zawierających wszystkie informacje o elementach członkowskich dla tego obiektu odbicia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.AccessibleObject> gdy wystąpienie jest rzutowane <xref:System.Reflection.IReflect> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMethod">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo IReflect.GetMethod (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo System.Reflection.IReflect.GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMethod (name As String, bindingAttr As BindingFlags) As MethodInfo Implements IReflect.GetMethod" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::MethodInfo ^ System.Reflection.IReflect.GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMethod;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa elementu członkowskiego do znalezienia.</param>
        <param name="bindingAttr">Atrybuty powiązania używane do sterowania wyszukiwaniem.</param>
        <summary><see cref="T:System.Reflection.MethodInfo" /> Pobiera obiekt odpowiadający określonej metodzie w określonych ograniczeniach wyszukiwania. Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)" />Zobacz.</summary>
        <returns>Obiekt zawierający informacje o metodzie, z dopasowaniem na podstawie nazwy metody i ograniczeń wyszukiwania określonych w <paramref name="bindingAttr" />. <see cref="T:System.Reflection.MethodInfo" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.AccessibleObject> gdy wystąpienie jest rzutowane <xref:System.Reflection.IReflect> do interfejsu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Obiekt implementuje wiele metod o tej samej nazwie.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMethod">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo IReflect.GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo System.Reflection.IReflect.GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::MethodInfo ^ System.Reflection.IReflect.GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers) = System::Reflection::IReflect::GetMethod;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa elementu członkowskiego do znalezienia.</param>
        <param name="bindingAttr">Atrybuty powiązania używane do sterowania wyszukiwaniem.</param>
        <param name="binder">Obiekt, który implementuje <see cref="T:System.Reflection.Binder" />, zawierający właściwości powiązane z tą metodą.</param>
        <param name="types">Tablica używana do wybierania przeciążonych metod.</param>
        <param name="modifiers">Tablica modyfikatorów parametrów służących do tworzenia powiązań z sygnaturami parametrów, w których typy zostały zmodyfikowane.</param>
        <summary><see cref="T:System.Reflection.MethodInfo" /> Pobiera obiekt odpowiadający określonej metodzie przy użyciu tablicy typów do wybrania spośród przeciążonych metod. Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />Zobacz.</summary>
        <returns>Żądana metoda zgodna ze wszystkimi określonymi parametrami.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zwracana jest zgodna na podstawie nazwy metody, <xref:System.Reflection.BindingFlags?displayProperty=nameWithType> wyliczenia, rodzaju konwersji typu określonego `binder` przez parametr, Przeciążenie i <xref:System.Reflection.ParameterInfo?displayProperty=nameWithType> opisujący sygnaturę metody.  
  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.AccessibleObject> gdy wystąpienie jest rzutowane <xref:System.Reflection.IReflect> do interfejsu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Obiekt implementuje wiele metod o tej samej nazwie.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMethods">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo[] IReflect.GetMethods (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo[] System.Reflection.IReflect.GetMethods(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMethods (bindingAttr As BindingFlags) As MethodInfo() Implements IReflect.GetMethods" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ System.Reflection.IReflect.GetMethods(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMethods;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">Atrybuty powiązania używane do sterowania wyszukiwaniem.</param>
        <summary>Pobiera tablicę <see cref="T:System.Reflection.MethodInfo" /> obiektów ze wszystkimi metodami publicznymi lub wszystkimi metodami bieżącej klasy. Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)" />Zobacz.</summary>
        <returns>Tablica <see cref="T:System.Reflection.MethodInfo" /> obiektów zawierających wszystkie metody zdefiniowane dla tego obiektu odbicia, które spełniają ograniczenia wyszukiwania określone w <see langword="bindingAttr" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.AccessibleObject> gdy wystąpienie jest rzutowane <xref:System.Reflection.IReflect> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetProperties">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo[] IReflect.GetProperties (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo[] System.Reflection.IReflect.GetProperties(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetProperties (bindingAttr As BindingFlags) As PropertyInfo() Implements IReflect.GetProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ System.Reflection.IReflect.GetProperties(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetProperties;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">Atrybut powiązania używany do sterowania wyszukiwaniem.</param>
        <summary>Pobiera tablicę <see cref="T:System.Reflection.PropertyInfo" /> obiektów odpowiadającą wszystkim właściwościom publicznym lub wszystkim właściwościom bieżącej klasy. Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)" />Zobacz.</summary>
        <returns>Tablica <see cref="T:System.Reflection.PropertyInfo" /> obiektów dla wszystkich właściwości zdefiniowanych w obiekcie odbicia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.AccessibleObject> gdy wystąpienie jest rzutowane <xref:System.Reflection.IReflect> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetProperty">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo IReflect.GetProperty (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo System.Reflection.IReflect.GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetProperty (name As String, bindingAttr As BindingFlags) As PropertyInfo Implements IReflect.GetProperty" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::PropertyInfo ^ System.Reflection.IReflect.GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetProperty;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa właściwości do znalezienia.</param>
        <param name="bindingAttr">Atrybuty powiązania używane do sterowania wyszukiwaniem.</param>
        <summary><see cref="T:System.Reflection.PropertyInfo" /> Pobiera obiekt odpowiadający określonej właściwości w określonych ograniczeniach wyszukiwania. Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)" />Zobacz.</summary>
        <returns>Obiekt dla właściwości zlokalizowanej, który spełnia ograniczenia wyszukiwania określone w <paramref name="bindingAttr" />lub <see langword="null" /> Jeśli właściwość nie została zlokalizowana. <see cref="T:System.Reflection.PropertyInfo" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.AccessibleObject> gdy wystąpienie jest rzutowane <xref:System.Reflection.IReflect> do interfejsu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Obiekt implementuje wiele metod o tej samej nazwie.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetProperty">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo IReflect.GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo System.Reflection.IReflect.GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::PropertyInfo ^ System.Reflection.IReflect.GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers) = System::Reflection::IReflect::GetProperty;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa elementu członkowskiego do znalezienia.</param>
        <param name="bindingAttr">Atrybuty powiązania używane do sterowania wyszukiwaniem.</param>
        <param name="binder">Obiekt, który implementuje spinacz, zawierający właściwości powiązane z tą metodą.</param>
        <param name="returnType">Tablica używana do wybierania przeciążonych metod.</param>
        <param name="types">Tablica modyfikatorów parametrów służących do tworzenia powiązań z sygnaturami parametrów, w których typy zostały zmodyfikowane.</param>
        <param name="modifiers">Tablica służąca do wybierania modyfikatorów parametrów.</param>
        <summary><see cref="T:System.Reflection.PropertyInfo" /> Pobiera obiekt odpowiadający określonej właściwości z określonymi ograniczeniami wyszukiwania. Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />Zobacz.</summary>
        <returns>Obiekt dla właściwości lokalizacji, jeśli właściwość o określonej nazwie znajdowała się w tym obiekcie odbicia lub <see langword="null" /> Jeśli właściwość nie została zlokalizowana. <see cref="T:System.Reflection.PropertyInfo" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.AccessibleObject> gdy wystąpienie jest rzutowane <xref:System.Reflection.IReflect> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.InvokeMember">
      <MemberSignature Language="C#" Value="object IReflect.InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Reflection.IReflect.InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo culture, string[] namedParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Reflection.IReflect.InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::String ^&gt; ^ namedParameters) = System::Reflection::IReflect::InvokeMember;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="namedParameters" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa elementu członkowskiego do znalezienia.</param>
        <param name="invokeAttr">Jeden z <see cref="T:System.Reflection.BindingFlags" /> atrybutów wywołania.</param>
        <param name="binder">Jedna z <see cref="T:System.Reflection.BindingFlags" /> flag bitowych. Implementuje spinacz zawierający właściwości powiązane z tą metodą.</param>
        <param name="target">Obiekt, na którym ma zostać wywołany określony element członkowski. Ten parametr jest ignorowany dla statycznych elementów członkowskich.</param>
        <param name="args">Tablica obiektów, która zawiera liczbę, kolejność i typ parametrów elementu członkowskiego, który ma zostać wywołany. Ta tablica jest pusta, jeśli nie ma żadnych parametrów.</param>
        <param name="modifiers">Tablica <see cref="T:System.Reflection.ParameterModifier" /> obiektów.</param>
        <param name="culture">Wystąpienie <see cref="T:System.Globalization.CultureInfo" /> używane do zarządzania przymusem typów.</param>
        <param name="namedParameters">Tablica ciągów parametrów.</param>
        <summary>Wywołuje określony element członkowski. Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />Zobacz.</summary>
        <returns>Określony element członkowski.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `invokeAttr` Parametr może być konstruktorem, metodą, właściwością lub polem. Należy określić odpowiedni atrybut wywołania. Wywołaj domyślny element członkowski klasy, przekazując ciąg pusty ("") jako nazwę elementu członkowskiego.  
  
 Parametr ma taką samą długość `args` jak parametr, reprezentujący atrybuty argumentu wywoływanego elementu członkowskiego w metadanych. `modifiers` Parametr może mieć następujące atrybuty: pdIn, pdOut, pdRetval, pdOptional i pdHasDefault. Reprezentują one [in], [out], [retval], [Optional] i domyślne parametry, odpowiednio.  
  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.AccessibleObject> gdy wystąpienie jest rzutowane <xref:System.Reflection.IReflect> do interfejsu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="invokeAttr" />jest <see cref="F:System.Reflection.BindingFlags.CreateInstance" /> również ustawiona inna flaga bitowa.

-lub- <paramref name="invokeAttr" /> nie <see cref="F:System.Reflection.BindingFlags.CreateInstance" /> jest i ma nazwę <see langword="null" />.

—lub—

<paramref name="invokeAttr" />nie jest atrybutem wywołania z <see cref="T:System.Reflection.BindingFlags" />elementu.

—lub—

<paramref name="invokeAttr" />określa zarówno Get, jak i Set dla właściwości lub pola.

—lub—

<paramref name="invokeAttr" />określa zarówno zestaw pól, jak i metodę Invoke.<paramref name="args" /> podano dla operacji pobierania pola.

—lub—

Określono więcej niż jeden argument dla operacji zestawu pól.</exception>
        <exception cref="T:System.MissingFieldException">Nie można znaleźć pola lub właściwości.</exception>
        <exception cref="T:System.MissingMethodException">Nie można znaleźć metody.</exception>
        <exception cref="T:System.Security.SecurityException">Prywatny element członkowski jest wywoływany bez konieczności <see cref="T:System.Security.Permissions.ReflectionPermission" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.UnderlyingSystemType">
      <MemberSignature Language="C#" Value="Type System.Reflection.IReflect.UnderlyingSystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#UnderlyingSystemType" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property UnderlyingSystemType As Type Implements IReflect.UnderlyingSystemType" />
      <MemberSignature Language="C++ CLI" Value="property Type ^ System::Reflection::IReflect::UnderlyingSystemType { Type ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Reflection.IReflect.UnderlyingSystemType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ podstawowy reprezentujący <see cref="T:System.Reflection.IReflect" /> obiekt. Aby uzyskać opis tego elementu członkowskiego, <see cref="P:System.Reflection.IReflect.UnderlyingSystemType" />Zobacz.</summary>
        <value>Typ podstawowy, który reprezentuje <see cref="T:System.Reflection.IReflect" /> obiekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.AccessibleObject> gdy wystąpienie jest rzutowane <xref:System.Reflection.IReflect> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UseStdAccessibleObjects">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Kojarzy obiekt z wystąpieniem <see cref="T:System.Windows.Forms.AccessibleObject" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UseStdAccessibleObjects">
      <MemberSignature Language="C#" Value="protected void UseStdAccessibleObjects (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UseStdAccessibleObjects(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UseStdAccessibleObjects (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UseStdAccessibleObjects(IntPtr handle);" />
      <MemberSignature Language="F#" Value="member this.UseStdAccessibleObjects : nativeint -&gt; unit" Usage="accessibleObject.UseStdAccessibleObjects handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle"><see cref="T:System.IntPtr" /> Zawierający uchwyt obiektu.</param>
        <summary>Kojarzy obiekt z wystąpieniem <see cref="T:System.Windows.Forms.AccessibleObject" /> w oparciu o uchwyt obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacje serwera mogą wywołać tę funkcję, gdy zawierają niestandardowy obiekt UI, podobny do obiektu dostarczonego przez system. Aplikacje serwera wywołania `CreateStdAccessibleObject` i <xref:Accessibility.IAccessible> przesłaniają metody i właściwości zgodnie z potrzebami w celu dopasowania ich do niestandardowego obiektu. Takie podejście umożliwia zaoszczędzenie deweloperom serwerów pracy w pełni <xref:Accessibility.IAccessible> implementując wszystkie właściwości i metody. Ta funkcja jest podobna do `CreateStdAccessibleProxy`, z tą `CreateStdAccessibleProxy` różnicą, że umożliwia określenie nazwy klasy jako parametru, podczas `CreateStdAccessibleObject` gdy używa nazwy klasy skojarzonej z `hwnd`.  
  
 Wywoływanie tej wersji `UseStdAccessible` programu jest takie samo jak wywołanie dwóch parametrów z objid klienta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseStdAccessibleObjects">
      <MemberSignature Language="C#" Value="protected void UseStdAccessibleObjects (IntPtr handle, int objid);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UseStdAccessibleObjects(native int handle, int32 objid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UseStdAccessibleObjects (handle As IntPtr, objid As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UseStdAccessibleObjects(IntPtr handle, int objid);" />
      <MemberSignature Language="F#" Value="member this.UseStdAccessibleObjects : nativeint * int -&gt; unit" Usage="accessibleObject.UseStdAccessibleObjects (handle, objid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="objid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="handle"><see cref="T:System.IntPtr" /> Zawierający uchwyt obiektu.</param>
        <param name="objid">Int, która definiuje typ obiektu, do którego <paramref name="handle" /> odwołuje się parametr.</param>
        <summary>Kojarzy obiekt z wystąpieniem <see cref="T:System.Windows.Forms.AccessibleObject" /> na podstawie uchwytu i identyfikatora obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tworzy dostępny obiekt z metodami i właściwościami określonego typu elementu interfejsu użytkownika dostarczonego przez system.  
  
 Aplikacje serwera mogą wywołać tę funkcję, gdy zawierają niestandardowy obiekt UI, podobny do obiektu dostarczonego przez system. Aplikacje serwera wywołania `CreateStdAccessibleObject` i <xref:Accessibility.IAccessible> przesłaniają metody i właściwości zgodnie z potrzebami w celu dopasowania ich do niestandardowego obiektu. Takie podejście umożliwia zaoszczędzenie deweloperom serwerów pracy w pełni <xref:Accessibility.IAccessible> implementując wszystkie właściwości i metody.  
  
 Prawidłowe `objid` wartości.  
  
|Obiekt|Wartość|Opis|  
|------------|-----------|-----------------|  
|WIADOM|0xFFFFFFF6|Odwołuje się do komunikatu skojarzonego z oknem lub aplikacją.|  
|UŻYCIU|0xFFFFFFF8|Odwołuje się do paska wstawiania tekstu (karetki) w oknie.|  
|KLIENT|0xFFFFFFFC|Odwołuje się do obszaru klienckiego okna. W większości przypadków system operacyjny kontroluje elementy ramki, a obiekt klienta zawiera wszystkie elementy, które kontroluje aplikacja.|  
|CURSOR|0xFFFFFFF7|Odwołuje się do wskaźnika myszy. W systemie istnieje tylko jeden wskaźnik myszy i nie jest on elementem podrzędnym okna.|  
|HSCROLL|0xFFFFFFFA|Odnosi się do poziomego paska przewijania okna.|  
|MENU|0xFFFFFFFD|Odwołuje się do paska menu okna.|  
|SIZEGRIP|0xFFFFFFF9|Odwołuje się do uchwytu rozmiaru okna, opcjonalnego składnika ramki znajdującego się w prawym dolnym rogu ramki okna.|  
|ZEWNĘTRZNEGO|0xFFFFFFF5|Odwołuje się do obiektu Sound. Obiekty Sound nie mają lokalizacji ekranu ani elementów podrzędnych, ale mają atrybuty nazwy i stanu. Są one elementami podrzędnymi aplikacji, które odtwarzają dźwięk.|  
|SYSMENU|0xFFFFFFFF|Odwołuje się do menu systemowego okna.|  
|PASEK|0xFFFFFFFE|Odwołuje się do paska tytułu okna.|  
|VSCROLL|0xFFFFFFFB|Odwołuje się do pionowego paska przewijania okna.|  
|DZIAŁ|0x00000000|Odwołuje się do samego okna, a nie do obiektu podrzędnego.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public virtual string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Windows.Forms.AccessibleObject.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość dostępnego obiektu.</summary>
        <value>Wartość dostępnego obiektu lub <see langword="null" /> Jeśli obiekt nie ma ustawionej wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.AccessibleObject.Value%2A> Zazwyczaj właściwość reprezentuje informacje wizualne zawarte w obiekcie. Nie wszystkie obiekty obsługują <xref:System.Windows.Forms.AccessibleObject.Value%2A> właściwość.  
  
 W większości przypadków <xref:System.Windows.Forms.AccessibleObject.Value%2A> właściwość służy do poinformowania klienta o tym, jakie informacje wizualne zawiera obiekt. Na przykład, wartość kontrolki edycji jest tekstem, który zawiera, ale element menu nie ma wartości.  
  
 <xref:System.Windows.Forms.AccessibleObject.Value%2A> Właściwość może udostępniać hierarchiczne informacje w przypadkach, takich jak kontrolka widoku drzewa. Chociaż obiekt nadrzędny w kontrolce widok drzewa nie zawiera informacji we <xref:System.Windows.Forms.AccessibleObject.Value%2A> właściwości, każdy element w kontrolce ma wartość zerową, która reprezentuje jej poziom w hierarchii. Elementy najwyższego poziomu mają wartość zero, a elementy drugiego poziomu mają wartość jeden i tak dalej.  
  
> [!NOTE]
>  Wartości zwracane z paska przewijania i dostępnych obiektów TrackBar wskazują wartości procentowe, więc są liczbami całkowitymi z zakresu od 0 do 100 włącznie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Nie można ustawić lub pobrać wartości.</exception>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
      </Docs>
    </Member>
  </Members>
</Type>
