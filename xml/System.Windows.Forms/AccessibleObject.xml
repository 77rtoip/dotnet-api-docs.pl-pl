<Type Name="AccessibleObject" FullName="System.Windows.Forms.AccessibleObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e4e3ea47c54f9f7582d16bcee6e549dcd41d56a9" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30703760" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AccessibleObject : System.Runtime.InteropServices.StandardOleMarshalObject, Accessibility.IAccessible, System.Reflection.IReflect" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AccessibleObject extends System.Runtime.InteropServices.StandardOleMarshalObject implements class Accessibility.IAccessible, class System.Reflection.IReflect" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.AccessibleObject" />
  <TypeSignature Language="VB.NET" Value="Public Class AccessibleObject&#xA;Inherits StandardOleMarshalObject&#xA;Implements IAccessible, IReflect" />
  <TypeSignature Language="C++ CLI" Value="public ref class AccessibleObject : System::Runtime::InteropServices::StandardOleMarshalObject, Accessibility::IAccessible, System::Reflection::IReflect" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.InteropServices.StandardOleMarshalObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Accessibility.IAccessible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Reflection.IReflect</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zawiera informacje, które umożliwiają dostosowanie interfejsu użytkownika (UI) aplikacji dla użytkowników z wzroku aplikacji ułatwień dostępu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dostępność aplikacji można dostosować funkcje aplikacji, aby poprawić użyteczność dla osób niepełnosprawnych.  
  
 Dla użytkowników, którzy są niedowidzących można dostosować funkcje oprogramowania i systemu operacyjnego do wykonania swoich potrzeb. Na przykład można powiększać tekst i obrazy i renderowanie je z kontrastu. Ponadto może obsłużyć color-blindness przy użyciu odpowiednich kolorów. Dla użytkowników, którzy są znacznie niedowidzących, komputery są dostępne z ekranu przeglądu pomocy, które translacji na ekranie tekst na mowę lub dynamicznych, odświeżane, wyświetlanie Braille'a.  
  
 Dla użytkowników, którzy są niedosłyszących można zaprojektować programów, które używają podpowiedzi wizualne, takie jak miga narzędzi; lub rozmowy komunikaty mogą być wyświetlane jako tekst. Na przykład po włączeniu `SoundSentry` funkcji opcji ułatwień dostępu w Panelu sterowania, zawiera ostrzeżenie visual, zawsze, gdy system umożliwia alarmu dźwięku.  
  
 Dla osób niepełnosprawnych ruchu można zaprojektować formantów, które zaktualizowania lub usunięcia Użyj klawiaturę i mysz, zwiększając ułatwień dostępu komputera. Panel sterowania oferuje pomocy. Na przykład jeden alternatywą jest użycie numerycznej zamiast myszy nawigacji. Inną opcją o nazwie `StickyKeys`, umożliwia użytkownikom, którzy nie przytrzymaj dwa lub więcej klucze w czasie (np. CTRL + P) do uzyskania tego samego rezultatu, wpisując jeden klucz w czasie.  
  
 W przypadku użytkowników z kognitywnych i języka niepełnosprawnych, można zaprojektować programów, aby lepiej dopasować ich potrzeb. Na przykład za pomocą widocznym lub liście sekwencjonowania, prostotę wyświetla mniejszą liczbą słów i na poziomie odczytu skierowane do normami szkole elementary mogą korzystać użytkownicy.  
  
 Dla użytkowników z zaburzenia zajęcia można zaprojektować programów, aby wyeliminować przejmowanie zdolnemu wzorców.  
  
 Aby uzyskać więcej informacji o ułatwieniach dostępu, w tym informacje o aplikacji ułatwień dostępu Zobacz dokumentację dla Microsoft Accessibility w bibliotece MSDN lub w witrynie sieci Web firmy Microsoft.  
  
> [!NOTE]
>  Aby użyć <xref:System.Windows.Forms.AccessibleObject>, należy dodać odwołanie do `Accessibility` zestawu z zainstalowanym [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Formularze systemu Windows obsługuje tylko Active Accessibility 2.0.  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano tworzenie wykresu obsługujący dostępności kontrolować za pomocą <xref:System.Windows.Forms.AccessibleObject> i <xref:System.Windows.Forms.Control.ControlAccessibleObject> klasy do udostępnienia dostępnych informacji. Formant zawiera dwie krzywe wraz z legendy. `ChartControlAccessibleObject` Klasy, która jest pochodną `ControlAccessibleObject`, jest używany w <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> metodę w celu zapewnienia niestandardowe informacje dostępne dla formantu wykresu. Ponieważ legendy wykresu nie jest rzeczywista <xref:System.Windows.Forms.Control> — na podstawie kontroli, ale zamiast tego jest rysowany przez formant wykresu nie ma żadnych dostępnych informacji wbudowanych. W związku z tym `ChartControlAccessibleObject` klasy zastąpienia <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> metodę, aby zwrócić `CurveLegendAccessibleObject` reprezentujący dostępnych informacji dla każdej części legendy. Gdy aplikacja dostępny obsługujący używa tego formantu, formantu zapewniają niezbędne informacje dostępne.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#1)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#1)]
 [!code-vb[System.Windows.Forms.AccessibleObject#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Przy dziedziczeniu z tej klasy można zastąpić wszystkie elementy członkowskie.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AccessibleObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AccessibleObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.AccessibleObject" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwykle gdy ta metoda umożliwia tworzenie dostępny obiekt, udostępniasz własne implementacje właściwości i metody klasy, aby umożliwić korzystanie z funkcji specyficznych dla aplikacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accChildCount">
      <MemberSignature Language="C#" Value="int Accessibility.IAccessible.accChildCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Accessibility.IAccessible.accChildCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accChildCount" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accChildCount As Integer Implements IAccessible.accChildCount" />
      <MemberSignature Language="C++ CLI" Value="property int Accessibility.IAccessible.accChildCount { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accChildCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę interfejsy podrzędne, które należą do tego obiektu. Opis tego elementu członkowskiego, zobacz <see cref="P:Accessibility.IAccessible.accChildCount" />.</summary>
        <value>Liczba dostępnych obiektów podrzędnych, które należą do tego obiektu. Jeśli obiekt ma obiektów podrzędnych, ta wartość wynosi 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowane na <xref:Accessibility.IAccessible> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accDoDefaultAction">
      <MemberSignature Language="C#" Value="void IAccessible.accDoDefaultAction (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.accDoDefaultAction(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accDoDefaultAction(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub accDoDefaultAction (childID As Object) Implements IAccessible.accDoDefaultAction" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.accDoDefaultAction(System::Object ^ childID) = Accessibility::IAccessible::accDoDefaultAction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accDoDefaultAction(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">ID elementu podrzędnego w <see cref="T:Accessibility.IAccessible" /> pary identyfikator interfejsu/podrzędny, która reprezentuje dostępny obiekt.</param>
        <summary>Wykonuje akcję domyślnego określonego obiektu. Nie wszystkie obiekty mają domyślnej akcji. Opis tego elementu członkowskiego, zobacz <see cref="M:Accessibility.IAccessible.accDoDefaultAction(System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowane na <xref:Accessibility.IAccessible> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accFocus">
      <MemberSignature Language="C#" Value="object Accessibility.IAccessible.accFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Accessibility.IAccessible.accFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accFocus" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accFocus As Object Implements IAccessible.accFocus" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ Accessibility.IAccessible.accFocus { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który ma fokus klawiatury. Opis tego elementu członkowskiego, zobacz <see cref="P:Accessibility.IAccessible.accFocus" />.</summary>
        <value>Obiekt, który ma fokus klawiatury.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typ zwracanej wartości <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accFocus%2A> właściwość zależy od obiektu, który ma fokus klawiatury. W poniższej tabeli opisano obiektu typy, które <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accFocus%2A> zwraca właściwości.  
  
|Typ|Opis|  
|----------|-----------------|  
|`null`|Ten obiekt nie ma fokus klawiatury się i nie zawiera elementu podrzędnego, który ma fokus klawiatury.|  
|integer|0, jeśli bieżący obiekt ma fokus klawiatury; w przeciwnym razie identyfikator podrzędnych dostępny obiekt podrzędny z fokusem klawiatury.|  
|<xref:Accessibility.IAccessible>|Dostępny obiekt podrzędny ma fokus klawiatury.|  
  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowane na <xref:Accessibility.IAccessible> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accHitTest">
      <MemberSignature Language="C#" Value="object IAccessible.accHitTest (int xLeft, int yTop);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.accHitTest(int32 xLeft, int32 yTop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accHitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function accHitTest (xLeft As Integer, yTop As Integer) As Object Implements IAccessible.accHitTest" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.accHitTest(int xLeft, int yTop) = Accessibility::IAccessible::accHitTest;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accHitTest(System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xLeft" Type="System.Int32" />
        <Parameter Name="yTop" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="xLeft">Współrzędna poziomej.</param>
        <param name="yTop">Współrzędna pionowej.</param>
        <summary>Pobiera obiekt podrzędny na współrzędne ekranu. Opis tego elementu członkowskiego, zobacz <see cref="M:Accessibility.IAccessible.accHitTest(System.Int32,System.Int32)" />.</summary>
        <returns>Dostępny obiekt w momencie określony przez <paramref name="xLeft" /> i <paramref name="yTop" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli opisano obiektu typy, które <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accHitTest%2A> może być zwracany przez metodę.  
  
|Typ|Opis|  
|----------|-----------------|  
|<xref:Accessibility.IAccessible>|Dostępny obiekt w określonym kierunku.|  
|integer|0, jeśli bieżący obiekt jest określony punkt lub poza granicami obiektu; w przeciwnym razie wartość Identyfikatora podrzędnego, który identyfikuje dostępny obiekt w określonym kierunku.|  
  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowane na <xref:Accessibility.IAccessible> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accLocation">
      <MemberSignature Language="C#" Value="void IAccessible.accLocation (out int pxLeft, out int pyTop, out int pcxWidth, out int pcyHeight, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.accLocation([out] int32&amp; pxLeft, [out] int32&amp; pyTop, [out] int32&amp; pcxWidth, [out] int32&amp; pcyHeight, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub accLocation (ByRef pxLeft As Integer, ByRef pyTop As Integer, ByRef pcxWidth As Integer, ByRef pcyHeight As Integer, childID As Object) Implements IAccessible.accLocation" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.accLocation([Runtime::InteropServices::Out] int % pxLeft, [Runtime::InteropServices::Out] int % pyTop, [Runtime::InteropServices::Out] int % pcxWidth, [Runtime::InteropServices::Out] int % pcyHeight, System::Object ^ childID) = Accessibility::IAccessible::accLocation;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pxLeft" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="pyTop" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="pcxWidth" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="pcyHeight" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pxLeft">Po powrocie z tej metody zawiera współrzędną x lewej krawędzi obiektu. Ten parametr jest przekazywany niezainicjowany.</param>
        <param name="pyTop">Po powrocie z tej metody zawiera współrzędną y górnej krawędzi obiektu. Ten parametr jest przekazywany niezainicjowany.</param>
        <param name="pcxWidth">Gdy metoda zwróci wartość, zawiera szerokość obiektu. Ten parametr jest przekazywany niezainicjowany.</param>
        <param name="pcyHeight">Po powrocie z tej metody zawiera wysokość obiektu. Ten parametr jest przekazywany niezainicjowany.</param>
        <param name="childID">Identyfikator obiektu dostępny. Ten parametr jest 0, aby pobrać lokalizacji obiektu lub Identyfikatora obiektu podrzędnego można pobrać lokalizacji obiektu obiektów podrzędnych.</param>
        <summary>Pobiera bieżącą lokalizację ekranu obiektu. Opis tego elementu członkowskiego, zobacz <see cref="M:Accessibility.IAccessible.accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowane na <xref:Accessibility.IAccessible> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accNavigate">
      <MemberSignature Language="C#" Value="object IAccessible.accNavigate (int navDir, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.accNavigate(int32 navDir, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accNavigate(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function accNavigate (navDir As Integer, childID As Object) As Object Implements IAccessible.accNavigate" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.accNavigate(int navDir, System::Object ^ childID) = Accessibility::IAccessible::accNavigate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accNavigate(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navDir" Type="System.Int32" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navDir">Jeden z <see cref="T:System.Windows.Forms.AccessibleNavigation" /> wyliczenia, które określa kierunek do nawigacji.</param>
        <param name="childID">Identyfikator obiektu dostępny. Ten parametr jest 0, aby uruchomić z obiektu lub Identyfikatora podrzędnego, można uruchomić w jednym z obiektów podrzędnych obiektu.</param>
        <summary>Przechodzi do dostępnego obiektu względem bieżącego obiektu. Opis tego elementu członkowskiego, zobacz <see cref="M:Accessibility.IAccessible.accNavigate(System.Int32,System.Object)" />.</summary>
        <returns>Dostępny obiekt znajduje się w określonym przez wartość <paramref name="navDir" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli opisano obiektu typy, które <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accNavigate%2A> może być zwracany przez metodę.  
  
|Typ|Opis|  
|----------|-----------------|  
|`null`|W określonym kierunku nie jest dostępny obiekt.|  
|<xref:Accessibility.IAccessible>|Dostępny obiekt w określonym kierunku.|  
|integer|Podrzędny identyfikator identyfikuje dostępny obiekt w określonym kierunku. Użyj nadrzędnego <xref:Accessibility.IAccessible> i Identyfikatora podrzędnego dostępu do obiektu dostępny.|  
  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowane na <xref:Accessibility.IAccessible> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accParent">
      <MemberSignature Language="C#" Value="object Accessibility.IAccessible.accParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Accessibility.IAccessible.accParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accParent" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accParent As Object Implements IAccessible.accParent" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ Accessibility.IAccessible.accParent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accParent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera element nadrzędny dostępny obiekt tego obiektu. Opis tego elementu członkowskiego, zobacz <see cref="P:Accessibility.IAccessible.accParent" />.</summary>
        <value>
          <see cref="T:Accessibility.IAccessible" /> Reprezentujący dostępny obiekt nadrzędny lub <see langword="null" /> , jeśli nie ma żadnego obiektu nadrzędnego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowane na <xref:Accessibility.IAccessible> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accSelect">
      <MemberSignature Language="C#" Value="void IAccessible.accSelect (int flagsSelect, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.accSelect(int32 flagsSelect, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelect(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub accSelect (flagsSelect As Integer, childID As Object) Implements IAccessible.accSelect" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.accSelect(int flagsSelect, System::Object ^ childID) = Accessibility::IAccessible::accSelect;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accSelect(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flagsSelect" Type="System.Int32" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="flagsSelect">Bitowe połączenie <see cref="T:System.Windows.Forms.AccessibleSelection" /> wartości.</param>
        <param name="childID">Numer identyfikacyjny dostępny obiekt, na którym należy wykonać zaznaczenia. Ten parametr jest 0, aby wybrać obiekt lub Identyfikatora podrzędnego, aby wybrać jeden z obiektów podrzędnych obiektu.</param>
        <summary>Modyfikuje zaznaczenie lub przenosi fokus klawiatury dostępny obiekt. Opis tego elementu członkowskiego, zobacz <see cref="M:Accessibility.IAccessible.accSelect(System.Int32,System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej opisano, które <xref:System.Windows.Forms.AccessibleSelection> wartości, aby określić podczas wywoływania metody `Select` do wykonywania operacji złożonych zaznaczenia.  
  
|Operacja|Kombinacja flag|  
|---------------|----------------------|  
|Aby symulować kliknięcia|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus> LUB <xref:System.Windows.Forms.AccessibleSelection.TakeSelection>|  
|Wybierz element docelowy symulując CTRL + kliknięcie|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus> LUB <xref:System.Windows.Forms.AccessibleSelection.AddSelection>|  
|Aby anulować wybór elementu docelowego symulując CTRL + kliknięcie|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus> LUB <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection>|  
|Aby symulować SHIFT + kliknięcie|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus> LUB <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection>|  
|Aby wybrać zakres obiektów i umieszczanie fokusu na ostatni obiekt|Określ <xref:System.Windows.Forms.AccessibleSelection.TakeFocus> na obiekt początkowy można ustawić zakotwiczenie zaznaczenia. Następnie ponownie wywołaj wybierz i określ <xref:System.Windows.Forms.AccessibleSelection.TakeFocus> lub <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection> ostatniego obiektu.|  
|Aby usunąć zaznaczenie wszystkich obiektów|Określ <xref:System.Windows.Forms.AccessibleSelection.TakeSelection> dowolnego obiektu. Ta flaga powoduje usunięcie zaznaczenia wszystkich wybranych obiektów, z wyjątkiem tego, po prostu wybrane. Następnie ponownie wywołaj wybierz i określ <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection> na tym samym obiekcie.|  
  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowane na <xref:Accessibility.IAccessible> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accSelection">
      <MemberSignature Language="C#" Value="object Accessibility.IAccessible.accSelection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Accessibility.IAccessible.accSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accSelection As Object Implements IAccessible.accSelection" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ Accessibility.IAccessible.accSelection { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accSelection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wybrane podrzędnych obiektów dostępny obiekt. Opis tego elementu członkowskiego, zobacz <see cref="P:Accessibility.IAccessible.accSelection" />.</summary>
        <value>Obiekty podrzędne wybranego dostępnego obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli opisano obiektu typy, które <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accSelection%2A> zwraca właściwości  
  
|Typ|Opis|  
|----------|-----------------|  
|`null`|Nie zaznaczono żadnych obiektów podrzędnych.|  
|<xref:Accessibility.IAccessible>|Dostępny obiekt podrzędny wybrany.|  
|integer|Identyfikator podrzędnego identyfikujący dostępny obiekt, który jest zaznaczone. Użyj nadrzędnego <xref:Accessibility.IAccessible> i Identyfikatora podrzędnego dostępu do obiektu dostępny.|  
|`IEnumVARIANT`|Lista wybranych obiektów podrzędnych.|  
  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowane na <xref:Accessibility.IAccessible> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accChild">
      <MemberSignature Language="C#" Value="object IAccessible.get_accChild (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.get_accChild(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accChild (childID As Object) As Object Implements IAccessible.get_accChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.get_accChild(System::Object ^ childID) = Accessibility::IAccessible::get_accChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accDefaultAction">
      <MemberSignature Language="C#" Value="string IAccessible.get_accDefaultAction (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accDefaultAction(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDefaultAction(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accDefaultAction (childID As Object) As String Implements IAccessible.get_accDefaultAction" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accDefaultAction(System::Object ^ childID) = Accessibility::IAccessible::get_accDefaultAction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accDefaultAction(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accDescription">
      <MemberSignature Language="C#" Value="string IAccessible.get_accDescription (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accDescription(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDescription(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accDescription (childID As Object) As String Implements IAccessible.get_accDescription" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accDescription(System::Object ^ childID) = Accessibility::IAccessible::get_accDescription;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accDescription(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accHelp">
      <MemberSignature Language="C#" Value="string IAccessible.get_accHelp (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accHelp(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelp(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accHelp (childID As Object) As String Implements IAccessible.get_accHelp" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accHelp(System::Object ^ childID) = Accessibility::IAccessible::get_accHelp;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accHelp(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accHelpTopic">
      <MemberSignature Language="C#" Value="int IAccessible.get_accHelpTopic (out string pszHelpFile, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 Accessibility.IAccessible.get_accHelpTopic([out] string&amp; pszHelpFile, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelpTopic(System.String@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accHelpTopic (ByRef pszHelpFile As String, childID As Object) As Integer Implements IAccessible.get_accHelpTopic" />
      <MemberSignature Language="C++ CLI" Value=" virtual int Accessibility.IAccessible.get_accHelpTopic([Runtime::InteropServices::Out] System::String ^ % pszHelpFile, System::Object ^ childID) = Accessibility::IAccessible::get_accHelpTopic;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accHelpTopic(System.String@,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pszHelpFile" Type="System.String&amp;" RefType="out" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pszHelpFile">To be added.</param>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accKeyboardShortcut">
      <MemberSignature Language="C#" Value="string IAccessible.get_accKeyboardShortcut (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accKeyboardShortcut(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accKeyboardShortcut(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accKeyboardShortcut (childID As Object) As String Implements IAccessible.get_accKeyboardShortcut" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accKeyboardShortcut(System::Object ^ childID) = Accessibility::IAccessible::get_accKeyboardShortcut;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accKeyboardShortcut(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accName">
      <MemberSignature Language="C#" Value="string IAccessible.get_accName (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accName(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accName (childID As Object) As String Implements IAccessible.get_accName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accName(System::Object ^ childID) = Accessibility::IAccessible::get_accName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accName(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accRole">
      <MemberSignature Language="C#" Value="object IAccessible.get_accRole (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.get_accRole(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accRole(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accRole (childID As Object) As Object Implements IAccessible.get_accRole" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.get_accRole(System::Object ^ childID) = Accessibility::IAccessible::get_accRole;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accRole(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accState">
      <MemberSignature Language="C#" Value="object IAccessible.get_accState (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.get_accState(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accState (childID As Object) As Object Implements IAccessible.get_accState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.get_accState(System::Object ^ childID) = Accessibility::IAccessible::get_accState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accValue">
      <MemberSignature Language="C#" Value="string IAccessible.get_accValue (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accValue(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accValue (childID As Object) As String Implements IAccessible.get_accValue" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accValue(System::Object ^ childID) = Accessibility::IAccessible::get_accValue;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accValue(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.set_accName">
      <MemberSignature Language="C#" Value="void IAccessible.set_accName (object childID, string newName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.set_accName(object childID, string newName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accName(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub set_accName (childID As Object, newName As String) Implements IAccessible.set_accName" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.set_accName(System::Object ^ childID, System::String ^ newName) = Accessibility::IAccessible::set_accName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.set_accName(System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
        <Parameter Name="newName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <param name="newName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.set_accValue">
      <MemberSignature Language="C#" Value="void IAccessible.set_accValue (object childID, string newValue);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.set_accValue(object childID, string newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub set_accValue (childID As Object, newValue As String) Implements IAccessible.set_accValue" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.set_accValue(System::Object ^ childID, System::String ^ newValue) = Accessibility::IAccessible::set_accValue;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.set_accValue(System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
        <Parameter Name="newValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <param name="newValue">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lokalizację i rozmiar dostępnego obiektu.</summary>
        <value>A <see cref="T:System.Drawing.Rectangle" /> reprezentujący granice dostępny obiekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.AccessibleObject.Bounds%2A> Właściwość pobiera prostokąt ograniczający obiektu we współrzędnych ekranu. Jeśli obiekt ma kształt nieprostokątny, ta właściwość reprezentuje najmniejszego prostokąta całkowicie obejmujący region całego obiektu. W związku z tym nieprostokątny obiektów, takich jak elementy widoku listy, współrzędne obiektu prostokątem może zakończyć się niepowodzeniem, jeśli badane, wywołując <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> metody, ponieważ <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> określa granice obiektu na podstawie poszczególne piksele.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano tworzenie wykresu obsługujący dostępności kontrolować za pomocą <xref:System.Windows.Forms.AccessibleObject> i <xref:System.Windows.Forms.Control.ControlAccessibleObject> klasy do udostępnienia dostępnych informacji. Formant zawiera dwie krzywe wraz z legendy. `ChartControlAccessibleObject` Klasy, która jest pochodną `ControlAccessibleObject`, jest używany w <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> metodę w celu zapewnienia niestandardowe informacje dostępne dla formantu wykresu. Ponieważ legendy wykresu nie jest to rzeczywiste <xref:System.Windows.Forms.Control> — na podstawie kontroli, ale zamiast tego jest rysowany przez formant wykresu nie ma żadnych dostępnych informacji wbudowanych. W związku z tym `ChartControlAccessibleObject` klasy zastąpienia <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> metodę, aby zwrócić `CurveLegendAccessibleObject` reprezentujący dostępnych informacji dla każdej części legendy. Gdy aplikacja dostępny obsługujący używa tego formantu, formantu zapewniają niezbędne informacje dostępne.  
  
 Tym fragmencie kodu pokazano zastępowanie <xref:System.Windows.Forms.AccessibleObject.Bounds%2A> właściwości. Zobacz <xref:System.Windows.Forms.AccessibleObject> Przegląd klasy na pełny przykład kodu.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Nie można pobrać granice formantu.</exception>
        <block subset="none" type="overrides">
          <para>Domyślna implementacja zwraca dostępny obiekt elementu obwiedni prostokąta, jeśli obiekt opakowuje system kontroli. w przeciwnym razie zwraca <see cref="F:System.Drawing.Rectangle.Empty" />. Wszystkie dostępne obiekty widoczne musi obsługiwać tę metodę. Obiekty dźwiękowe nie obsługuje tej metody.</para>
        </block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="DefaultAction">
      <MemberSignature Language="C#" Value="public virtual string DefaultAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultAction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultAction As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultAction { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ciąg opisujący domyślną akcję obiektu. Nie wszystkie obiekty mają domyślnej akcji.</summary>
        <value>Opis akcji domyślnej dla obiekt lub <see langword="null" /> Jeśli ten obiekt nie ma domyślnego działań.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ciąg opisuje akcję wykonywaną na obiekcie, nie jaki obiekt jest w wyniku. Oznacza to, że przycisk drukuje dokument ma domyślną akcję "Naciśnij" zamiast "Drukuje dokument." Nie należy mylić domyślną akcję obiektu z jego wartość.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Nie można pobrać domyślnej akcji dla formantu.</exception>
        <block subset="none" type="overrides">
          <para>Domyślna implementacja zwraca dostępny obiekt domyślną akcję, jeśli obiekt jest zawijana formantu system, który ma domyślne działanie; w przeciwnym razie zwraca <see langword="null" />. Tylko formanty, które wykonują akcje powinien obsługiwać tę metodę. Nie wszystkie obiekty nie mają akcje domyślne, a niektóre obiekty mogą mieć domyślne działanie, które jest powiązane z jego <see cref="P:System.Windows.Forms.AccessibleObject.Value" /> właściwości, takie jak następujące przykłady: zaznaczone pole wyboru ma domyślną akcję "Usuń zaznaczenie" i wartości "Zaznaczono". Wyczyszczone pole wyboru ma domyślną akcję "Sprawdź" i wartości "Niezaznaczone." Przycisk, którego etykietą "Print" ma domyślną akcję "Naciśnij," bez wartości. Formant tekst statyczny lub edycji pokazujący "Printer" nie ma domyślnego działań, ale będzie mieć wartość "Drukarki." Obiekt <see cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" /> właściwość powinna być zlecenie lub frazę zlecenie krótki.</para>
        </block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ciąg opisujący wygląd określonego obiektu. Nie wszystkie obiekty ma opisu.</summary>
        <value>Opis obiektu wygląd dla użytkownika lub <see langword="null" /> Jeśli obiekt nie ma opisu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość określa wygląd obiektu dla użytkownika.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Nie można pobrać opisu dla formantu.</exception>
        <block subset="none" type="overrides">
          <para>Domyślna implementacja zwraca dostępny opis obiektu, jeśli obiekt opakowuje system kontroli. w przeciwnym razie zwraca <see langword="null" />. Opis jest zazwyczaj używane do dostarczania kontekstu większa wizji małej lub ukryta użytkowników. Może również służyć dla kontekstu wyszukiwania lub innych aplikacji. Serwery muszą obsługiwać <see cref="P:System.Windows.Forms.AccessibleObject.Description" /> czy opis nie jest jasne, czy są one zbędne na podstawie właściwości w obiekcie <see cref="P:System.Windows.Forms.AccessibleObject.Name" />, <see cref="P:System.Windows.Forms.AccessibleObject.Role" />, <see cref="P:System.Windows.Forms.AccessibleObject.State" />, i <see cref="P:System.Windows.Forms.AccessibleObject.Value" /> właściwości. Na przykład przycisk "OK", nie wymaga informacji dodatkowych, ale będzie przycisku, który zawiera obraz kaktus. <see cref="P:System.Windows.Forms.AccessibleObject.Name" />, <see cref="P:System.Windows.Forms.AccessibleObject.Role" />i być może <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> właściwości dla przycisku kaktus opisują jego przeznaczenie, ale <see cref="P:System.Windows.Forms.AccessibleObject.Description" /> właściwości przekazuje informacje, które są mniej wymierne, takich jak "Przycisku, który zawiera obraz kaktus".</para>
        </block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="DoDefaultAction">
      <MemberSignature Language="C#" Value="public virtual void DoDefaultAction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoDefaultAction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.DoDefaultAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DoDefaultAction ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DoDefaultAction();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wykonuje akcję domyślne skojarzone z tym obiektem dostępny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klienci mogą pobierać domyślną akcję obiektu sprawdzając obiektu <xref:System.Windows.Forms.AccessibleObject.DefaultAction%2A> właściwości. Klient może używać automatyzacji, (jeśli jest to obsługiwane) w zamiast <xref:System.Windows.Forms.AccessibleObject.DoDefaultAction%2A> do wykonania akcji domyślnego obiektu. Jednak <xref:System.Windows.Forms.AccessibleObject.DoDefaultAction%2A> zapewnia prosty sposób wykonywania obiektu do najczęściej używanych akcji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Nie można wykonać akcji domyślnej dla formantu.</exception>
        <block subset="none" type="overrides">
          <para>Domyślne działanie wykonywane przez elementy interfejsu użytkownika dostarczane przez system, zależy od stanu klawiatury. Oznacza to, czy klawisz modyfikujący, takie jak SHIFT, ALT i CTRL działa (albo przez akcję użytkownika albo programowo) podczas <see cref="M:System.Windows.Forms.AccessibleObject.DoDefaultAction" /> nosi nazwę, wartość domyślna akcja nie może być taka sama jak kiedy te klucze nie są dół. Nie wszystkie obiekty mają domyślnej akcji.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetChild">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject GetChild (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetChild(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChild (index As Integer) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetChild(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks elementu podrzędnego dostępny.</param>
        <summary>Pobiera dostępny podrzędne odpowiadający określonym indeksie.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.AccessibleObject" /> Reprezentujący dostępny podrzędne odpowiadający określonym indeksie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano tworzenie wykresu obsługujący dostępności kontrolować za pomocą <xref:System.Windows.Forms.AccessibleObject> i <xref:System.Windows.Forms.Control.ControlAccessibleObject> klasy do udostępnienia dostępnych informacji. Formant zawiera dwie krzywe wraz z legendy. `ChartControlAccessibleObject` Klasy, która jest pochodną `ControlAccessibleObject`, jest używany w <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> metodę w celu zapewnienia niestandardowe informacje dostępne dla formantu wykresu. Ponieważ legendy wykresu nie jest to rzeczywiste <xref:System.Windows.Forms.Control> — na podstawie kontroli, ale zamiast tego jest rysowany przez formant wykresu nie ma żadnych dostępnych informacji wbudowanych. W związku z tym `ChartControlAccessibleObject` klasy zastąpienia <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> metodę, aby zwrócić `CurveLegendAccessibleObject` reprezentujący dostępnych informacji dla każdej części legendy. Gdy aplikacja dostępny obsługujący używa tego formantu, formantu zapewniają niezbędne informacje dostępne.  
  
 Tym fragmencie kodu pokazano zastępowanie <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> metody. Zobacz <xref:System.Windows.Forms.AccessibleObject> Przegląd klasy na pełny przykład kodu.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wszystkie dostępne obiekty muszą obsługiwać tej właściwości. Jeśli metoda nie została zastąpiona, zwraca <see langword="null" />. Należy przesłonić tę metodę, gdy dostępny obiekt, należy podać niestandardowe dostępne elementy podrzędne. Jeśli indeks jest nieprawidłowy, a następnie ta metoda powinna zwrócić <see langword="null" />. Aby zastąpić tę metodę, musi także zastępować <see cref="M:System.Windows.Forms.AccessibleObject.GetChildCount" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetChildCount">
      <MemberSignature Language="C#" Value="public virtual int GetChildCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChildCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetChildCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChildCount () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChildCount();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera liczbę elementów podrzędnych należących do dostępnego obiektu.</summary>
        <returns>Liczba elementów podrzędnych należących do dostępnego obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano tworzenie wykresu obsługujący dostępności kontrolować za pomocą <xref:System.Windows.Forms.AccessibleObject> i <xref:System.Windows.Forms.Control.ControlAccessibleObject> klasy do udostępnienia dostępnych informacji. Formant zawiera dwie krzywe wraz z legendy. `ChartControlAccessibleObject` Klasy, która jest pochodną `ControlAccessibleObject`, jest używany w <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> metodę w celu zapewnienia niestandardowe informacje dostępne dla formantu wykresu. Ponieważ legendy wykresu nie jest to rzeczywiste <xref:System.Windows.Forms.Control> — na podstawie kontroli, ale zamiast tego jest rysowany przez formant wykresu nie ma żadnych dostępnych informacji wbudowanych. W związku z tym `ChartControlAccessibleObject` klasy zastąpienia <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> metodę, aby zwrócić `CurveLegendAccessibleObject` reprezentujący dostępnych informacji dla każdej części legendy. Gdy aplikacja dostępny obsługujący używa tego formantu, formantu zapewniają niezbędne informacje dostępne.  
  
 Ten kod ilustruje pokazuje zastępowanie <xref:System.Windows.Forms.AccessibleObject.GetChildCount%2A> metody. Zobacz <xref:System.Windows.Forms.AccessibleObject> Przegląd klasy na pełny przykład kodu.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wszystkie obiekty muszą obsługiwać tej właściwości. Domyślna implementacja zwraca -1. Należy przesłonić tę metodę, gdy dostępny obiekt, należy podać niestandardowe dostępne elementy podrzędne. Aby zastąpić tę metodę, musi także zastępować <see cref="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetFocused">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject GetFocused ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetFocused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetFocused" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFocused () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetFocused();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera obiekt, który ma fokus klawiatury.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.AccessibleObject" /> , Który określa podrzędnych mającym aktualnie fokus. Ta metoda zwraca obiekt wywołujący, jeśli sam obiekt ma fokus. Zwraca <see langword="null" /> Jeśli obiekt nie ma fokusu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pojęcie fokus klawiatury jest powiązany z aktywnego okna. Aktywne okno jest oknem pierwszego planu, w którym użytkownik pracuje. Obiekt z fokusem klawiatury jest aktywne okno lub obiekt podrzędny aktywnego okna.  
  
 Tylko jeden obiekt lub elementu w kontenerze ma fokus w dowolnym momencie. Obiekt z fokusem klawiatury nie jest zawsze wybranego obiektu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Nie można pobrać formantu.</exception>
        <block subset="none" type="overrides">
          <para>Wszystkie obiekty, które może przyjmować fokus klawiatury musi obsługiwać tej właściwości.</para>
        </block>
        <altmember cref="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetHelpTopic">
      <MemberSignature Language="C#" Value="public virtual int GetHelpTopic (out string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHelpTopic([out] string&amp; fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetHelpTopic(System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHelpTopic (ByRef fileName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHelpTopic([Runtime::InteropServices::Out] System::String ^ % fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="fileName">Przy powrocie ta właściwość zawiera ścieżkę do pliku Pomocy skojarzone z tym obiektem dostępny.</param>
        <summary>Pobiera identyfikator dla identyfikatora tematu pomocy i ścieżkę do pliku Pomocy skojarzone z tym obiektem dostępny.</summary>
        <returns>Identyfikator tematu pomocy, lub wartość -1, jeśli Brak tematu Pomocy. Przy powrocie <paramref name="fileName" /> parametr zawiera ścieżkę do pliku Pomocy skojarzone z tym obiektem dostępny.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby wyświetlić Pomoc dla <xref:System.Windows.Forms.AccessibleObject> z pomocy systemu Windows, można przekazać pliku identyfikator nazwy i tematu do odpowiedniego <xref:System.Windows.Forms.Help.ShowHelp%2A?displayProperty=nameWithType> metody <xref:System.Windows.Forms.Help>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Nie można pobrać tematu pomocy dla formantu.</exception>
        <block subset="none" type="overrides">
          <para>Nie wszystkie obiekty muszą do obsługi tej właściwości.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
      </Docs>
    </Member>
    <Member MemberName="GetSelected">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject GetSelected ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetSelected() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetSelected" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSelected () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetSelected();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera aktualnie zaznaczonego podrzędnych.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.AccessibleObject" /> Reprezentujący aktualnie zaznaczonego podrzędnych. Ta metoda zwraca obiekt wywołujący, jeśli wybrano samego obiektu. Zwraca <see langword="null" /> Jeśli obecnie nie jest wybrane nie podrzędnych i sam obiekt nie ma fokusa.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Nie można pobrać wybranego podrzędnych.</exception>
        <block subset="none" type="overrides">
          <para>Wszystkie obiekty, które można wybrać powinien obsługiwać tej właściwości.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Help">
      <MemberSignature Language="C#" Value="public virtual string Help { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Help" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Help" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Help As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Help { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera opis obiektu jest lub korzystania z obiektu.</summary>
        <value>A <see cref="T:System.String" /> zawierający opis obiektu jest lub korzystania z obiektu. Zwraca <see langword="null" /> Jeśli zdefiniowano Pomoc.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Nie można pobrać ciąg pomocy dla formantu.</exception>
        <block subset="none" type="overrides">
          <para>Nie wszystkie obiekty muszą do obsługi tej właściwości. Zwykle ta właściwość zawiera informacje styl etykietka narzędzia, który jest używany do opisywania obiektu jest i jak z niego korzystać. Na przykład <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> właściwości przycisku paska narzędzi, pokazujący drukarki może być "drukuje dokument." Tekst dla <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> właściwość nie ma być unikatowe w obrębie interfejsu użytkownika. Serwery nie muszą obsługiwać <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> właściwości Jeśli inne właściwości dostarczają wystarczającej ilości informacji o obiekcie, jego cel i jakie akcje obiekt może wykonywać.</para>
        </block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject HitTest (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject HitTest(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.HitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HitTest (x As Integer, y As Integer) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ HitTest(int x, int y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">Współrzędne ekranu poziomej.</param>
        <param name="y">Współrzędne ekranu pionowej.</param>
        <summary>Pobiera obiekt podrzędny na współrzędne ekranu.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.AccessibleObject" /> Reprezentujący na współrzędne ekranu danego obiektu podrzędnego. Ta metoda zwraca obiekt wywołujący, jeśli sam obiekt jest w podanej lokalizacji. Zwraca <see langword="null" /> Jeśli obiekt nie znajduje się w lokalizacji przetestowane.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nieprostokątny obiektów, takich jak elementy widoku listy, współrzędne obiektu do ograniczenia prostokąt pobierane przez <xref:System.Windows.Forms.AccessibleObject.Bounds%2A> może zakończyć się niepowodzeniem, jeśli z <xref:System.Windows.Forms.AccessibleObject.HitTest%2A>, ponieważ <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> określa granice obiektu na podstawie poszczególne piksele.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Formant nie osiągnęła przetestowane.</exception>
        <block subset="none" type="overrides">
          <para>Wszystkie obiekty visual musi obsługiwać tę metodę; obiekty dźwięku nie jest obsługiwany.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="KeyboardShortcut">
      <MemberSignature Language="C#" Value="public virtual string KeyboardShortcut { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyboardShortcut" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyboardShortcut As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ KeyboardShortcut { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera klawisza skrótu lub klucz dostępu dla obiekt dostępny.</summary>
        <value>Klawisz skrótu lub klucz dostępu dla obiekt dostępny, lub <see langword="null" /> Jeśli klucz nie istnieje skrótu skojarzony z obiektem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klawisz dostępu, znanej także jako wartość jest podkreślony znak w tekście menu, element menu, etykieta przycisku lub niektóre inne formanty. Na przykład użytkownik może wyświetlić menu, naciskając klawisz ALT podczas również klawisza wskazanych podkreślone, takie jak ALT + F, aby otworzyć `File` menu. Aby użyć klucza dostępu do elementu menu, menu zawierający element musi być aktywne. Formanty, takie jak przyciski paska narzędzi i elementów menu często mają klawisz skrótu skojarzony. Element menu może mieć zarówno klucz dostępu, jak i klawisz skrótu skojarzony z nim. Jeśli wartość <xref:System.Windows.Forms.AccessibleObject.KeyboardShortcut%2A> właściwość jest pojedynczym znakiem, można założyć, jest klucz dostępu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Nie można pobrać skrót dla formantu.</exception>
        <block subset="none" type="overrides">
          <para>Wszystkie obiekty, które mają klawisz skrótu lub klawisza dostępu, powinien obsługiwać tej właściwości.</para>
        </block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę obiektu.</summary>
        <value>Nazwa obiektu lub <see langword="null" /> Jeśli właściwość nie została ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.AccessibleObject.Name%2A> Właściwość ma postać ciągu używany przez klientów do identyfikowania, Znajdź lub ogłaszamy obiektu użytkownika. Aby uzyskać dostęp do nazwy obiektu podrzędnego, należy najpierw wywołać <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> o indeksie podrzędnych, których nazwy są pobierane.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano tworzenie wykresu obsługujący dostępności kontrolować za pomocą <xref:System.Windows.Forms.AccessibleObject> i <xref:System.Windows.Forms.Control.ControlAccessibleObject> klasy do udostępnienia dostępnych informacji. Formant zawiera dwie krzywe wraz z legendy. `ChartControlAccessibleObject` Klasy, która jest pochodną `ControlAccessibleObject`, jest używany w <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> metodę w celu zapewnienia niestandardowe informacje dostępne dla formantu wykresu. Ponieważ legendy wykresu nie jest to rzeczywiste <xref:System.Windows.Forms.Control> — na podstawie kontroli, ale zamiast tego jest rysowany przez formant wykresu nie ma żadnych dostępnych informacji wbudowanych. W związku z tym `ChartControlAccessibleObject` klasy zastąpienia <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> metodę, aby zwrócić `CurveLegendAccessibleObject` reprezentujący dostępnych informacji dla każdej części legendy. Gdy aplikacja dostępny obsługujący używa tego formantu, formantu zapewniają niezbędne informacje dostępne.  
  
 Tym fragmencie kodu pokazano zastępowanie <xref:System.Windows.Forms.AccessibleObject.Name%2A> właściwości. Zobacz <xref:System.Windows.Forms.AccessibleObject> Przegląd klasy na pełny przykład kodu.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Nazwa formantu nie można pobrać lub ustawić.</exception>
        <block subset="none" type="overrides">
          <para>Wszystkie obiekty powinny obsługiwać tej właściwości. Nazwa obiektu powinien być intuicyjne, umożliwiając użytkownikom zrozumienie znaczenie lub cel obiektu. Ponadto upewnij się, że <see langword="Name" /> właściwości jest unikatowa względem wszelkie obiekty równorzędne w obiekcie nadrzędnym. Nawigacja w tabelach przedstawiono szczególnie trudne problemy w przypadku niektórych użytkowników. W związku z tym deweloperzy serwera należy wykonać nazwy komórek tabeli jak najbardziej opisowy. Na przykład można utworzyć nazwę komórki przez połączenie nazwy wierszy i kolumn, który zajmuje, takie jak "A1". Jednak jest zazwyczaj lepiej jest użyć nazwy opisowej, takie jak "Karin, luty." Wiele obiektów, takich jak ikony, menu pola wyboru, pól kombi i inne formanty, mieć etykiety, które są widoczne dla użytkowników. Jakakolwiek Etykieta wyświetlana dla użytkowników powinny być używane do obiektu <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> właściwości. Aby uzyskać więcej informacji, zobacz <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> właściwości.  
  
 Jeśli używasz menu lub przycisku tekst <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> właściwości, Usuń limit ampersandu (&amp;) oznakowanie klawiszy dostępu.</para>
        </block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject Navigate (System.Windows.Forms.AccessibleNavigation navdir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject Navigate(valuetype System.Windows.Forms.AccessibleNavigation navdir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Navigate (navdir As AccessibleNavigation) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ Navigate(System::Windows::Forms::AccessibleNavigation navdir);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navdir" Type="System.Windows.Forms.AccessibleNavigation" />
      </Parameters>
      <Docs>
        <param name="navdir">Jeden z <see cref="T:System.Windows.Forms.AccessibleNavigation" /> wartości.</param>
        <summary>Powoduje przejście do innego obiektu dostępny.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.AccessibleObject" /> Stanowi jeden z <see cref="T:System.Windows.Forms.AccessibleNavigation" /> wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nawigowanie, zarówno przestrzenne i logiczne, zawsze jest ograniczone do elementów interfejsu użytkownika w kontenerze. Z przestrzennego nawigacji klientów można przechodzić tylko z elementem równorzędnym węzła początkowego obiektu. W zależności od nawigacyjne flagę używane z logicznej nawigacji klientów można przechodzić albo element podrzędny lub element równorzędny obiekt początkowy. Ta metoda nie zmienia się zaznaczenie lub fokus. Aby zmienić fokus lub wybierz obiekt, należy użyć <xref:System.Windows.Forms.AccessibleObject.Select%2A>. <xref:System.Windows.Forms.AccessibleObject.Navigate%2A> Metoda pobiera tylko elementów interfejsu użytkownika, które mają lokalizacji zdefiniowanych ekranu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano tworzenie wykresu obsługujący dostępności kontrolować za pomocą <xref:System.Windows.Forms.AccessibleObject> i <xref:System.Windows.Forms.Control.ControlAccessibleObject> klasy do udostępnienia dostępnych informacji. Formant zawiera dwie krzywe wraz z legendy. `ChartControlAccessibleObject` Klasy, która jest pochodną `ControlAccessibleObject`, jest używany w <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> metodę w celu zapewnienia niestandardowe informacje dostępne dla formantu wykresu. Ponieważ legendy wykresu nie jest to rzeczywiste <xref:System.Windows.Forms.Control> — na podstawie kontroli, ale zamiast tego jest rysowany przez formant wykresu nie ma żadnych dostępnych informacji wbudowanych. W związku z tym `ChartControlAccessibleObject` klasy zastąpienia <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> metodę, aby zwrócić `CurveLegendAccessibleObject` reprezentujący dostępnych informacji dla każdej części legendy. Gdy aplikacja dostępny obsługujący używa tego formantu, formantu zapewniają niezbędne informacje dostępne.  
  
 Ten kod ilustruje pokazuje zastępowanie <xref:System.Windows.Forms.AccessibleObject.Navigate%2A> metody. Zobacz <xref:System.Windows.Forms.AccessibleObject> Przegląd klasy na pełny przykład kodu.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Próba nawigacji nie powiedzie się.</exception>
        <block subset="none" type="overrides">
          <para>Wszystkie obiekty visual musi obsługiwać tę metodę. Jeśli obiekt ma stan <see cref="F:System.Windows.Forms.AccessibleStates.Invisible" />, nawigacji do tego obiektu ukryte może zakończyć się niepowodzeniem. Zezwalaj na niektórych elementów interfejsu zdefiniowanym przez system, takich jak menu, elementy menu i menu wyskakujące nawigacji do obiektów, które nie są widoczne. Jednak inne elementy interfejsu użytkownika zdefiniowane w systemie nie obsługują to. Jeśli to możliwe serwery powinny obsługiwać nawigacji do obiektów, które nie są widoczne, ale ta obsługa nie jest wymagana i klientów nie należy spodziewać.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Parent As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleObject ^ Parent { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera dostępny obiekt nadrzędny.</summary>
        <value>
          <see cref="T:System.Windows.Forms.AccessibleObject" /> Reprezentujący dostępny obiekt nadrzędny lub <see langword="null" /> , jeśli nie ma żadnego obiektu nadrzędnego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano tworzenie wykresu obsługujący dostępności kontrolować za pomocą <xref:System.Windows.Forms.AccessibleObject> i <xref:System.Windows.Forms.Control.ControlAccessibleObject> klasy do udostępnienia dostępnych informacji. Formant zawiera dwie krzywe wraz z legendy. `ChartControlAccessibleObject` Klasy, która jest pochodną `ControlAccessibleObject`, jest używany w <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> metodę w celu zapewnienia niestandardowe informacje dostępne dla formantu wykresu. Ponieważ legendy wykresu nie jest to rzeczywiste <xref:System.Windows.Forms.Control> — na podstawie kontroli, ale zamiast tego jest rysowany przez formant wykresu nie ma żadnych dostępnych informacji wbudowanych. W związku z tym `ChartControlAccessibleObject` klasy zastąpienia <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> metodę, aby zwrócić `CurveLegendAccessibleObject` reprezentujący dostępnych informacji dla każdej części legendy. Gdy aplikacja dostępny obsługujący używa tego formantu, formantu zapewniają niezbędne informacje dostępne.  
  
 Tym fragmencie kodu pokazano zastępowanie <xref:System.Windows.Forms.AccessibleObject.Parent%2A> właściwości. Zobacz <xref:System.Windows.Forms.AccessibleObject> Przegląd klasy na pełny przykład kodu.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wszystkie obiekty powinny obsługiwać tej właściwości.</para>
        </block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Role">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleRole Role { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AccessibleRole Role" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Role" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Role As AccessibleRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleRole Role { System::Windows::Forms::AccessibleRole get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleRole</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera rolę dostępny obiekt.</summary>
        <value>Jeden z <see cref="T:System.Windows.Forms.AccessibleRole" /> wartości, lub <see cref="F:System.Windows.Forms.AccessibleRole.None" /> Jeśli nie podano żadnej roli.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rola obiektu pomaga opisano funkcji obiektu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano tworzenie wykresu obsługujący dostępności kontrolować za pomocą <xref:System.Windows.Forms.AccessibleObject> i <xref:System.Windows.Forms.Control.ControlAccessibleObject> klasy do udostępnienia dostępnych informacji. Formant zawiera dwie krzywe wraz z legendy. `ChartControlAccessibleObject` Klasy, która jest pochodną `ControlAccessibleObject`, jest używany w <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> metodę w celu zapewnienia niestandardowe informacje dostępne dla formantu wykresu. Ponieważ legendy wykresu nie jest to rzeczywiste <xref:System.Windows.Forms.Control> — na podstawie kontroli, ale zamiast tego jest rysowany przez formant wykresu nie ma żadnych dostępnych informacji wbudowanych. W związku z tym `ChartControlAccessibleObject` klasy zastąpienia <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> metodę, aby zwrócić `CurveLegendAccessibleObject` reprezentujący dostępnych informacji dla każdej części legendy. Gdy aplikacja dostępny obsługujący używa tego formantu, formantu zapewniają niezbędne informacje dostępne.  
  
 Tym fragmencie kodu pokazano zastępowanie <xref:System.Windows.Forms.AccessibleObject.Role%2A> właściwości. Zobacz <xref:System.Windows.Forms.AccessibleObject> Przegląd klasy na pełny przykład kodu.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wszystkie obiekty powinny obsługiwać tej właściwości.</para>
        </block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public virtual void Select (System.Windows.Forms.AccessibleSelection flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select(valuetype System.Windows.Forms.AccessibleSelection flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Select(System.Windows.Forms.AccessibleSelection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select (flags As AccessibleSelection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select(System::Windows::Forms::AccessibleSelection flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Windows.Forms.AccessibleSelection" />
      </Parameters>
      <Docs>
        <param name="flags">Jeden z <see cref="T:System.Windows.Forms.AccessibleSelection" /> wartości.</param>
        <summary>Modyfikuje zaznaczenie lub przenosi fokus klawiatury dostępny obiekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacje mogą używać tej metody w celu wykonania operacji złożonych zaznaczenia.  
  
 Poniżej opisano, które <xref:System.Windows.Forms.AccessibleSelection> wartości, aby określić podczas wywoływania metody <xref:System.Windows.Forms.AccessibleObject.Select%2A> do wykonywania operacji złożonych zaznaczenia.  
  
|Operacja|Kombinacja flag|  
|---------------|----------------------|  
|Aby symulować kliknięcia|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.TakeSelection?displayProperty=nameWithType> **Uwaga:** ta kombinacja nie wybierze żądanego formantu, jeśli wywołany z poziomu własnej aplikacji. Jej pożądanych efektów, jeśli wywoływana od aplikacji zewnętrznej.|  
|Wybierz element docelowy symulując CTRL + kliknięcie|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.AddSelection?displayProperty=nameWithType>|  
|Aby anulować wybór elementu docelowego symulując CTRL + kliknięcie|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection?displayProperty=nameWithType>|  
|Aby symulować SHIFT + kliknięcie|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection?displayProperty=nameWithType>|  
|Aby wybrać zakres obiektów i umieszczanie fokusu na ostatni obiekt|Określ <xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> na obiekt początkowy można ustawić zakotwiczenie zaznaczenia. Następnie wywołaj <xref:System.Windows.Forms.AccessibleObject.Select%2A> ponownie i określ <xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection?displayProperty=nameWithType> ostatniego obiektu.|  
|Aby usunąć zaznaczenie wszystkich obiektów|Określ <xref:System.Windows.Forms.AccessibleSelection.TakeSelection?displayProperty=nameWithType> dowolnego obiektu. Ta flaga powoduje usunięcie zaznaczenia wszystkich wybranych obiektów, z wyjątkiem tego, po prostu wybrane. Następnie wywołaj <xref:System.Windows.Forms.AccessibleObject.Select%2A> ponownie i określ <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection?displayProperty=nameWithType> na tym samym obiekcie.|  
  
   
  
## Examples  
 W poniższym przykładzie pokazano tworzenie wykresu obsługujący dostępności kontrolować za pomocą <xref:System.Windows.Forms.AccessibleObject> i <xref:System.Windows.Forms.Control.ControlAccessibleObject> klasy do udostępnienia dostępnych informacji. Formant zawiera dwie krzywe wraz z legendy. `ChartControlAccessibleObject` Klasy, która jest pochodną `ControlAccessibleObject`, jest używany w <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> metodę w celu zapewnienia niestandardowe informacje dostępne dla formantu wykresu. Ponieważ legendy wykresu nie jest to rzeczywiste <xref:System.Windows.Forms.Control> — na podstawie kontroli, ale zamiast tego jest rysowany przez formant wykresu nie ma żadnych dostępnych informacji wbudowanych. W związku z tym `ChartControlAccessibleObject` klasy zastąpienia <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> metodę, aby zwrócić `CurveLegendAccessibleObject` reprezentujący dostępnych informacji dla każdej części legendy. Gdy aplikacja dostępny obsługujący używa tego formantu, formantu zapewniają niezbędne informacje dostępne.  
  
 Ten kod ilustruje pokazuje zastępowanie <xref:System.Windows.Forms.AccessibleObject.Select%2A> metody. Zobacz <xref:System.Windows.Forms.AccessibleObject> Przegląd klasy na pełny przykład kodu.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Nie można wykonać zaznaczenia.</exception>
        <block subset="none" type="overrides">
          <para>Wszystkie obiekty, które można wybrać lub odebrać fokus klawiatury musi obsługiwać tę metodę.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleStates State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AccessibleStates State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.State" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property State As AccessibleStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleStates State { System::Windows::Forms::AccessibleStates get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera stan tego obiektu dostępny.</summary>
        <value>Jeden z <see cref="T:System.Windows.Forms.AccessibleStates" /> wartości, lub <see cref="F:System.Windows.Forms.AccessibleStates.None" />, jeżeli nie ustawiono żadnego stanu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano tworzenie wykresu obsługujący dostępności kontrolować za pomocą <xref:System.Windows.Forms.AccessibleObject> i <xref:System.Windows.Forms.Control.ControlAccessibleObject> klasy do udostępnienia dostępnych informacji. Formant zawiera dwie krzywe wraz z legendy. `ChartControlAccessibleObject` Klasy, która jest pochodną `ControlAccessibleObject`, jest używany w <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> metodę w celu zapewnienia niestandardowe informacje dostępne dla formantu wykresu. Ponieważ legendy wykresu nie jest to rzeczywiste <xref:System.Windows.Forms.Control> — na podstawie kontroli, ale zamiast tego jest rysowany przez formant wykresu nie ma żadnych dostępnych informacji wbudowanych. W związku z tym `ChartControlAccessibleObject` klasy zastąpienia <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> metodę, aby zwrócić `CurveLegendAccessibleObject` reprezentujący dostępnych informacji dla każdej części legendy. Gdy aplikacja dostępny obsługujący używa tego formantu, formantu zapewniają niezbędne informacje dostępne.  
  
 Tym fragmencie kodu pokazano zastępowanie <xref:System.Windows.Forms.AccessibleObject.State%2A> właściwości. Zobacz <xref:System.Windows.Forms.AccessibleObject> Przegląd klasy na pełny przykład kodu.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wszystkie obiekty powinny obsługiwać tej właściwości.</para>
        </block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetField">
      <MemberSignature Language="C#" Value="System.Reflection.FieldInfo IReflect.GetField (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.FieldInfo System.Reflection.IReflect.GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo Implements IReflect.GetField" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::FieldInfo ^ System.Reflection.IReflect.GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetField;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa pola można znaleźć.</param>
        <param name="bindingAttr">Atrybuty powiązanie używane do sterowania wyszukiwania.</param>
        <summary>Pobiera <see cref="T:System.Reflection.FieldInfo" /> odpowiadający określone pole i powiązanie flagi obiektów. Opis tego elementu członkowskiego, zobacz <see cref="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)" />.</summary>
        <returns>A <see cref="T:System.Reflection.FieldInfo" /> obiektu zawierającego informacje pola o nazwie obiektu spełniającego ograniczenia wyszukiwania określone w <paramref name="bindingAttr" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowane na <xref:System.Reflection.IReflect> interfejsu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Obiekt implementuje wiele pól o takiej samej nazwie.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetFields">
      <MemberSignature Language="C#" Value="System.Reflection.FieldInfo[] IReflect.GetFields (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.FieldInfo[] System.Reflection.IReflect.GetFields(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetFields (bindingAttr As BindingFlags) As FieldInfo() Implements IReflect.GetFields" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ System.Reflection.IReflect.GetFields(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetFields;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">Atrybuty powiązanie używane do sterowania wyszukiwania.</param>
        <summary>Pobiera tablicę <see cref="T:System.Reflection.FieldInfo" /> odpowiadający wszystkie pola bieżącej klasy obiektów. Opis tego elementu członkowskiego, zobacz <see cref="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)" />.</summary>
        <returns>Tablica <see cref="T:System.Reflection.FieldInfo" /> obiektów zawierających wszystkie informacje pola dla tego obiektu odbicia spełniającego ograniczenia wyszukiwania określone w <paramref name="bindingAttr" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każde pole musi mieć unikatową nazwę. <xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType> Flaga Określa, że niepubliczne pola są uwzględnione w wyszukiwaniu. <xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType> Flaga Określa, że pola publiczne są uwzględniane w wyszukiwaniu.  
  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowane na <xref:System.Reflection.IReflect> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMember">
      <MemberSignature Language="C#" Value="System.Reflection.MemberInfo[] IReflect.GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MemberInfo[] System.Reflection.IReflect.GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo() Implements IReflect.GetMember" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ System.Reflection.IReflect.GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMember;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa elementu członkowskiego do znalezienia.</param>
        <param name="bindingAttr">Atrybuty powiązanie używane do sterowania wyszukiwania.</param>
        <summary>Pobiera tablicę <see cref="T:System.Reflection.MemberInfo" /> obiekty odpowiadające wszystkich publicznych elementów członkowskich lub wszystkie elementy członkowskie, które odpowiada określonej nazwy. Opis tego elementu członkowskiego, zobacz <see cref="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)" />.</summary>
        <returns>Tablica <see cref="T:System.Reflection.MemberInfo" /> obiektów spełniających parametr name.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowane na <xref:System.Reflection.IReflect> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMembers">
      <MemberSignature Language="C#" Value="System.Reflection.MemberInfo[] IReflect.GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MemberInfo[] System.Reflection.IReflect.GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMembers (bindingAttr As BindingFlags) As MemberInfo() Implements IReflect.GetMembers" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ System.Reflection.IReflect.GetMembers(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMembers;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">Atrybuty powiązanie używane do sterowania wyszukiwania.</param>
        <summary>Pobiera tablicę <see cref="T:System.Reflection.MemberInfo" /> odpowiadającym wszystkich publicznych elementów członkowskich lub wszystkie elementy członkowskie klasy obiektów. Opis tego elementu członkowskiego, zobacz <see cref="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)" />.</summary>
        <returns>Tablica <see cref="T:System.Reflection.MemberInfo" /> obiektów zawierających wszystkie informacje elementu członkowskiego dla tego obiektu odbicia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowane na <xref:System.Reflection.IReflect> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMethod">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo IReflect.GetMethod (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo System.Reflection.IReflect.GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMethod (name As String, bindingAttr As BindingFlags) As MethodInfo Implements IReflect.GetMethod" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::MethodInfo ^ System.Reflection.IReflect.GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMethod;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa elementu członkowskiego do znalezienia.</param>
        <param name="bindingAttr">Atrybuty powiązanie używane do sterowania wyszukiwania.</param>
        <summary>Pobiera <see cref="T:System.Reflection.MethodInfo" /> obiekt odpowiadający określonej metody w obszarze określonej ograniczenia wyszukiwania. Opis tego elementu członkowskiego, zobacz <see cref="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)" />.</summary>
        <returns>A <see cref="T:System.Reflection.MethodInfo" /> obiekt zawierający informacje o metodzie dopasowany na ograniczenia nazwy i wyszukiwania metody określone w <paramref name="bindingAttr" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowane na <xref:System.Reflection.IReflect> interfejsu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Obiekt implementuje wiele metod o tej samej nazwie.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMethod">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo IReflect.GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo System.Reflection.IReflect.GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::MethodInfo ^ System.Reflection.IReflect.GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers) = System::Reflection::IReflect::GetMethod;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa elementu członkowskiego do znalezienia.</param>
        <param name="bindingAttr">Atrybuty powiązanie używane do sterowania wyszukiwania.</param>
        <param name="binder">Obiekt, który implementuje <see cref="T:System.Reflection.Binder" />, zawierający właściwości związanych z tej metody.</param>
        <param name="types">Tablica pozwala wybrać jedną z metod przeciążona.</param>
        <param name="modifiers">Tablica modyfikatorów parametrów umożliwia powiązanie pracować z podpisów parametru, w których typy zostały zmodyfikowane.</param>
        <summary>Pobiera <see cref="T:System.Reflection.MethodInfo" /> obiekt odpowiadający określonej metody, przy użyciu tablicy typu wyboru spośród z przeciążonej metody. Opis tego elementu członkowskiego, zobacz <see cref="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />.</summary>
        <returns>Żądana metoda zgodny z określonymi parametrami.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zwracana jest dopasowania na podstawie nazwy metody <xref:System.Reflection.BindingFlags?displayProperty=nameWithType> wyliczenia, rodzaj konwersji typu określony przez `binder` parametr, przeciążenia i <xref:System.Reflection.ParameterInfo?displayProperty=nameWithType> , który opisuje sygnaturę metody.  
  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowane na <xref:System.Reflection.IReflect> interfejsu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Obiekt implementuje wiele metod o tej samej nazwie.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMethods">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo[] IReflect.GetMethods (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo[] System.Reflection.IReflect.GetMethods(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMethods (bindingAttr As BindingFlags) As MethodInfo() Implements IReflect.GetMethods" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ System.Reflection.IReflect.GetMethods(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMethods;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">Atrybuty powiązanie używane do sterowania wyszukiwania.</param>
        <summary>Pobiera tablicę <see cref="T:System.Reflection.MethodInfo" /> obiekty o wszystkich metod publicznych lub wszystkie metody klasy. Opis tego elementu członkowskiego, zobacz <see cref="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)" />.</summary>
        <returns>Tablica <see cref="T:System.Reflection.MethodInfo" /> obiektów zawierających wszystkie metody zdefiniowane dla tego obiektu odbicia, spełniających ograniczenia wyszukiwania określone w <see langword="bindingAttr" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowane na <xref:System.Reflection.IReflect> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetProperties">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo[] IReflect.GetProperties (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo[] System.Reflection.IReflect.GetProperties(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetProperties (bindingAttr As BindingFlags) As PropertyInfo() Implements IReflect.GetProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ System.Reflection.IReflect.GetProperties(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetProperties;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">Atrybut wiązania użyć do kontrolowania wyszukiwania.</param>
        <summary>Pobiera tablicę <see cref="T:System.Reflection.PropertyInfo" /> odpowiadającym wszystkie właściwości publiczne lub na wszystkie właściwości bieżącej klasy obiektów. Opis tego elementu członkowskiego, zobacz <see cref="M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)" />.</summary>
        <returns>Tablica <see cref="T:System.Reflection.PropertyInfo" /> obiektów dla wszystkich właściwości zdefiniowane w obiekcie odbicia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowane na <xref:System.Reflection.IReflect> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetProperty">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo IReflect.GetProperty (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo System.Reflection.IReflect.GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetProperty (name As String, bindingAttr As BindingFlags) As PropertyInfo Implements IReflect.GetProperty" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::PropertyInfo ^ System.Reflection.IReflect.GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetProperty;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa właściwości, aby znaleźć.</param>
        <param name="bindingAttr">Atrybuty powiązanie używane do sterowania wyszukiwania.</param>
        <summary>Pobiera <see cref="T:System.Reflection.PropertyInfo" /> odpowiadający określonej właściwości w obiekcie określono ograniczenia wyszukiwania. Opis tego elementu członkowskiego, zobacz <see cref="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)" />.</summary>
        <returns>A <see cref="T:System.Reflection.PropertyInfo" /> obiektu właściwości zlokalizować spełniającego ograniczenia wyszukiwania określone w <paramref name="bindingAttr" />, lub <see langword="null" /> Jeśli właściwość nie znajduje się.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowane na <xref:System.Reflection.IReflect> interfejsu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Obiekt implementuje wiele metod o tej samej nazwie.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetProperty">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo IReflect.GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo System.Reflection.IReflect.GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::PropertyInfo ^ System.Reflection.IReflect.GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers) = System::Reflection::IReflect::GetProperty;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa elementu członkowskiego do znalezienia.</param>
        <param name="bindingAttr">Atrybuty powiązanie używane do sterowania wyszukiwania.</param>
        <param name="binder">Obiekt, który implementuje integratora zawierający właściwości powiązanych z tej metody.</param>
        <param name="returnType">Tablica pozwala wybrać jedną z metod przeciążona.</param>
        <param name="types">Tablica modyfikatorów parametrów umożliwia powiązanie pracować z podpisów parametru, w których typy zostały zmodyfikowane.</param>
        <param name="modifiers">Tablica pozwala wybrać modyfikatorów parametrów.</param>
        <summary>Pobiera <see cref="T:System.Reflection.PropertyInfo" /> obiekt odpowiadający określonej właściwości z określonych ograniczeń wyszukiwania. Opis tego elementu członkowskiego, zobacz <see cref="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />.</summary>
        <returns>A <see cref="T:System.Reflection.PropertyInfo" /> obiektu zlokalizować właściwości, jeśli właściwość o podanej nazwie znajdował się w tym obiekcie odbicia lub <see langword="null" /> Jeśli właściwość nie znajduje się.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowane na <xref:System.Reflection.IReflect> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.InvokeMember">
      <MemberSignature Language="C#" Value="object IReflect.InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Reflection.IReflect.InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo culture, string[] namedParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Reflection.IReflect.InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::String ^&gt; ^ namedParameters) = System::Reflection::IReflect::InvokeMember;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="namedParameters" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa elementu członkowskiego do znalezienia.</param>
        <param name="invokeAttr">Jeden z <see cref="T:System.Reflection.BindingFlags" /> atrybuty wywołania.</param>
        <param name="binder">Jeden z <see cref="T:System.Reflection.BindingFlags" /> bit flagi. Integrator implementuje zawierający właściwości powiązanych z tej metody.</param>
        <param name="target">Obiekt do wywołania określonego elementu członkowskiego. Ten parametr jest ignorowany dla statycznych elementów członkowskich.</param>
        <param name="args">Tablica obiektów zawierającą numer, kolejność i typy parametrów elementu członkowskiego, do wywołania. Jest to pusta tablica, jeśli nie ma żadnych parametrów.</param>
        <param name="modifiers">Tablica <see cref="T:System.Reflection.ParameterModifier" /> obiektów.</param>
        <param name="culture">Wystąpienie <see cref="T:System.Globalization.CultureInfo" /> używane do sterowania koercja typów.</param>
        <param name="namedParameters">Tablica ciągów parametrów.</param>
        <summary>Wywołuje określony element członkowski. Opis tego elementu członkowskiego, zobacz <see cref="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</summary>
        <returns>Określony element członkowski.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `invokeAttr` Parametr może być Konstruktor, metody, właściwości lub pola. Należy określić atrybut odpowiedniego wywołania. Wywołaj domyślny element członkowski klasy, przekazując pustego ciągu ("") jako nazwa elementu członkowskiego.  
  
 `modifiers` Parametr ma taką samą długość jak `args` parametr reprezentujący atrybuty argument wywołany członek zestawu w metadanych. Parametr może mieć następujące atrybuty: pdIn, pdOut, pdRetval, pdOptional i pdHasDefault. Te stanowią [In] [Out], [retval], [opcjonalnie] i domyślnego parametru, odpowiednio.  
  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowane na <xref:System.Reflection.IReflect> interfejsu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Określono więcej niż jeden argument operacji set pola.</exception>
        <exception cref="T:System.MissingFieldException">Nie można odnaleźć pola lub właściwości.</exception>
        <exception cref="T:System.MissingMethodException">Nie można odnaleźć metody.</exception>
        <exception cref="T:System.Security.SecurityException">Prywatnego elementu członkowskiego jest wywoływana bez potrzeby <see cref="T:System.Security.Permissions.ReflectionPermission" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.UnderlyingSystemType">
      <MemberSignature Language="C#" Value="Type System.Reflection.IReflect.UnderlyingSystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#UnderlyingSystemType" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property UnderlyingSystemType As Type Implements IReflect.UnderlyingSystemType" />
      <MemberSignature Language="C++ CLI" Value="property Type ^ System.Reflection.IReflect.UnderlyingSystemType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Reflection.IReflect.UnderlyingSystemType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ podstawowy, który reprezentuje <see cref="T:System.Reflection.IReflect" /> obiektu. Opis tego elementu członkowskiego, zobacz <see cref="P:System.Reflection.IReflect.UnderlyingSystemType" />.</summary>
        <value>Typ podstawowy, który reprezentuje <see cref="T:System.Reflection.IReflect" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowane na <xref:System.Reflection.IReflect> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UseStdAccessibleObjects">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Kojarzy z wystąpieniem obiektu <see cref="T:System.Windows.Forms.AccessibleObject" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UseStdAccessibleObjects">
      <MemberSignature Language="C#" Value="protected void UseStdAccessibleObjects (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UseStdAccessibleObjects(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UseStdAccessibleObjects (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UseStdAccessibleObjects(IntPtr handle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">
          <see cref="T:System.IntPtr" /> Zawierający uchwyt obiektu.</param>
        <summary>Kojarzy obiekt z wystąpieniem <see cref="T:System.Windows.Forms.AccessibleObject" /> oparte na uchwyt obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacje serwera mogą wywoływać tej funkcji, jeśli zawierają niestandardowego obiektu interfejsu użytkownika, która jest podobna do obiektu dostarczane przez system. Serwer aplikacji wywołania `CreateStdAccessibleObject` i zastąpić <xref:Accessibility.IAccessible> metody i właściwości zgodnie z potrzebami w celu dopasowania ich niestandardowego obiektu. Takie podejście zapisuje serwera deweloperom pracy pełni wykonania wszystkich <xref:Accessibility.IAccessible> właściwości i metody. Ta funkcja jest podobny do `CreateStdAccessibleProxy`, ale `CreateStdAccessibleProxy` umożliwia określenie nazwy klasy jako parametru, podczas gdy `CreateStdAccessibleObject` używa nazwy klasy skojarzone z `hwnd`.  
  
 Wywołanie tej wersji `UseStdAccessible` jest taka sama jak wywołanie wersji dwóch parametru z obiektu o identyfikatorze klienta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseStdAccessibleObjects">
      <MemberSignature Language="C#" Value="protected void UseStdAccessibleObjects (IntPtr handle, int objid);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UseStdAccessibleObjects(native int handle, int32 objid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UseStdAccessibleObjects (handle As IntPtr, objid As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UseStdAccessibleObjects(IntPtr handle, int objid);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="objid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="handle">
          <see cref="T:System.IntPtr" /> Zawierający uchwyt obiektu.</param>
        <param name="objid">Obiekt definiujący typ Int, który <c>obsługi</c> parametr odnosi się do.</param>
        <summary>Kojarzy z wystąpieniem obiektu <see cref="T:System.Windows.Forms.AccessibleObject" /> na podstawie dojście i identyfikator obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tworzy obiekt dostępny z metody i właściwości dla określonego typu elementu interfejsu użytkownika dostarczane przez system.  
  
 Aplikacje serwera mogą wywoływać tej funkcji, jeśli zawierają niestandardowego obiektu interfejsu użytkownika, która jest podobna do obiektu dostarczane przez system. Serwer aplikacji wywołania `CreateStdAccessibleObject` i zastąpić <xref:Accessibility.IAccessible> metody i właściwości zgodnie z potrzebami w celu dopasowania ich niestandardowego obiektu. Takie podejście zapisuje serwera deweloperom pracy pełni wykonania wszystkich <xref:Accessibility.IAccessible> właściwości i metody.  
  
 Nieprawidłowa `objid` wartości.  
  
|Obiekt|Wartość|Opis|  
|------------|-----------|-----------------|  
|ALERT|0xFFFFFFF6|Odnosi się do komunikat skojarzoną z okna lub aplikacji.|  
|DASZEK|0xFFFFFFF8|Odwołuje się do wstawiania tekstu pasek (daszek) w oknie.|  
|KLIENTA|0xFFFFFFFC|Odnosi się do obszaru klienckiego okna. W większości przypadków elementy ramki steruje systemu operacyjnego i obiektu klienta zawiera wszystkie elementy, które kontroluje aplikacji.|  
|CURSOR|0xFFFFFFF7|Odwołanie do wskaźnika myszy. Istnieje tylko jeden wskaźnik myszy w systemie i nie jest elementem podrzędnym okna.|  
|HSCROLL|0xFFFFFFFA|Odnosi się do okna poziomy pasek przewijania.|  
|MENU|0xFFFFFFFD|Odwołuje się do paska menu okna.|  
|WŁAŚCIWOŚĆ SIZEGRIPSTYLE|0xFFFFFFF9|Odnosi się do uchwytu rozmiar okna, składnik opcjonalny ramki znajdujący się w prawym dolnym rogu ramki okna.|  
|DŹWIĘK|0xFFFFFFF5|Odwołuje się do obiektu dźwięku. Obiekty dźwiękowe nie ma lokalizacji ekranu lub dzieci, ale atrybutów nazwy i stanu. Są one elementy podrzędne aplikacji odtwarzanie dźwięku.|  
|SYSMENU|0xFFFFFFFF|Odnosi się do menu okna systemu.|  
|TITLEBAR|0xFFFFFFFE|Odnosi się do pasek tytułu okna.|  
|VSCROLL|0xFFFFFFFB|Odnosi się do okna pionowy pasek przewijania.|  
|OKNO|0x00000000|Odwołuje się do samej siebie okna, a nie do obiektu podrzędnego.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public virtual string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość dostępny obiekt.</summary>
        <value>Wartość dostępnego obiektu lub <see langword="null" /> Jeśli obiekt nie ma wartości ustawić.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj <xref:System.Windows.Forms.AccessibleObject.Value%2A> właściwość reprezentuje visual informacji przechowywanych przez obiekt. Nie wszystkie obiekty obsługują <xref:System.Windows.Forms.AccessibleObject.Value%2A> właściwości.  
  
 W większości przypadków <xref:System.Windows.Forms.AccessibleObject.Value%2A> właściwość jest używana do Opisz klienta zawiera visual informacjach obiekt. Na przykład wartość kontrolki edycji jest tekst, który zawiera, ale element menu nie ma wartości.  
  
 <xref:System.Windows.Forms.AccessibleObject.Value%2A> Właściwość można udostępniać informacji hierarchicznych w przypadkach, takich jak kontrolki widoku drzewa. Mimo że obiektu nadrzędnego w drzewie widok nie zawiera informacji w <xref:System.Windows.Forms.AccessibleObject.Value%2A> właściwości każdego elementu w formancie ma liczony od zera wartość, która reprezentuje jego poziom w hierarchii. Elementy najwyższego poziomu mają wartość zero, drugiego poziomu elementów ma wartość jednego i tak dalej.  
  
> [!NOTE]
>  Wartości zwracane z paska przewijania i trackbar dostępne obiekty wskazywać wartości procentowych, dzięki czemu są one liczby całkowite z zakresu od 0 do 100 włącznie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Wartość nie może ustawić lub pobrać.</exception>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
      </Docs>
    </Member>
  </Members>
</Type>