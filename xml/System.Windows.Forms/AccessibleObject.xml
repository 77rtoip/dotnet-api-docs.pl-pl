<Type Name="AccessibleObject" FullName="System.Windows.Forms.AccessibleObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ece3e883ebc17686b814cd21a85fe163d137cd90" />
    <Meta Name="ms.sourcegitcommit" Value="6f3d3181d9ca22a1ab46a7f61f3ee152f2b844ea" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="10/27/2018" />
    <Meta Name="ms.locfileid" Value="50176355" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AccessibleObject : System.Runtime.InteropServices.StandardOleMarshalObject, Accessibility.IAccessible, System.Reflection.IReflect" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AccessibleObject extends System.Runtime.InteropServices.StandardOleMarshalObject implements class Accessibility.IAccessible, class System.Reflection.IReflect" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.AccessibleObject" />
  <TypeSignature Language="VB.NET" Value="Public Class AccessibleObject&#xA;Inherits StandardOleMarshalObject&#xA;Implements IAccessible, IReflect" />
  <TypeSignature Language="C++ CLI" Value="public ref class AccessibleObject : System::Runtime::InteropServices::StandardOleMarshalObject, Accessibility::IAccessible, System::Reflection::IReflect" />
  <TypeSignature Language="F#" Value="type AccessibleObject = class&#xA;    inherit StandardOleMarshalObject&#xA;    interface IReflect&#xA;    interface IAccessible" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.InteropServices.StandardOleMarshalObject</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Accessibility.IAccessible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Reflection.IReflect</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Dostarcza informacje o aplikacji ułatwień dostępu umożliwia dostosowanie aplikacji interfejsu użytkownika (UI) dla użytkowników z niedosłyszące.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacje ułatwień dostępu, możesz dostosować funkcje aplikacji, aby zwiększyć użyteczność dla użytkowników niepełnosprawnych.  
  
 Dla użytkowników, którzy niedowidzących można dostosować funkcje oprogramowania i systemu operacyjnego do wykonania swoich potrzeb. Na przykład możesz powiększyć tekst i obrazy i renderowanie je z kontrastem. Ponadto może obsłużyć color-blindness przy użyciu odpowiednich kolorów. Dla użytkowników, którzy poważnie niedowidzących komputery są dostępne z ekranu Przegląd pomocy, które na ekranie tłumaczenia tekstu na mowę w celu lub dynamicznych, są odświeżane, wyświetlanie Braille'a.  
  
 Dla użytkowników, którzy są niedosłyszących można zaprojektować programy, które używają podpowiedzi wizualne, takie jak migające narzędzi; albo wypowiadanych komunikaty mogą być wyświetlane jako tekst. Na przykład po włączeniu `SoundSentry` funkcji i opcji ułatwień dostępu w Panelu sterowania, zawiera ostrzeżenie visual, zawsze wtedy, gdy system ułatwia alarm dźwiękowy.  
  
 Dla użytkowników niepełnosprawnych ruchu można zaprojektować mechanizmy uściślić lub wyeliminowania użycia klawiatury i myszy, zwiększając w ten sposób ułatwień dostępu komputera. Panel sterowania oferuje pomoc. Na przykład jeden alternatywą jest użycie numerycznej zamiast myszy w nawigacji. Innym rozwiązaniem, o nazwie `StickyKeys`, umożliwia użytkownikom, którzy nie przytrzymaj dwa lub więcej klucze w czasie (np. CTRL + P) Aby uzyskać ten sam wynik, wpisując jeden klucz w danym momencie.  
  
 Usługi cognitive i niepełnosprawnym języka, można zaprojektować programy, aby lepiej dostosować się do swoich potrzeb. Na przykład za pomocą widocznym lub liście sekwencjonowania, wyświetla prostotę, mniejszą liczbą słów i docelowy poziom odczytu ze standardami elementary school mogą korzystać użytkownicy.  
  
 Dla użytkowników z autoimmunologicznymi zajęcia można zaprojektować programy wzorców zdolnemu zajęcia wyeliminować.  
  
 Aby uzyskać więcej informacji na temat dostępności, w tym informacje o aplikacji ułatwień dostępu Zobacz dokumentację dla Microsoft Accessibility w bibliotece MSDN lub w witrynie firmy Microsoft w sieci Web.  
  
> [!NOTE]
>  Aby użyć <xref:System.Windows.Forms.AccessibleObject>, należy dodać odwołanie do `Accessibility` zestawu zainstalowanego za pomocą [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Formularze Windows obsługuje tylko Active Accessibility 2.0.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje tworzenie organizacyjnego obsługujących ułatwień dostępu kontrolować, za pomocą <xref:System.Windows.Forms.AccessibleObject> i <xref:System.Windows.Forms.Control.ControlAccessibleObject> klasy do udostępnienia dostępne informacje. Kontrolka zawiera dwie krzywe wraz z legendy. `ChartControlAccessibleObject` Klasy, która jest pochodną `ControlAccessibleObject`, jest używany w <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> metodę w celu udostępnienia niestandardowych informacji dostępna dla formantu wykresu. Ponieważ legenda wykresu nie jest rzeczywisty <xref:System.Windows.Forms.Control> — na podstawie kontroli, ale zamiast tego jest rysowana przez formant wykresu nie ma żadnych wbudowanych dostępne informacje. W związku z tym `ChartControlAccessibleObject` klasy zastąpienia <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> metodę, aby zwrócić `CurveLegendAccessibleObject` reprezentujący dostępnych informacji dla każdej części legendy. Gdy aplikacja dostępny aware używa tego formantu, formant może zapewnić niezbędne informacje dostępne.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#1)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#1)]
 [!code-vb[System.Windows.Forms.AccessibleObject#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Przy dziedziczeniu z tej klasy można zastąpić wszystkie elementy członkowskie.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AccessibleObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AccessibleObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.AccessibleObject" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj gdy używasz tej metody do tworzenia obiektu dostępny udostępniasz własnych implementacji właściwości i metody klasy, które umożliwiają korzystanie z funkcji specyficznych dla aplikacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accChildCount">
      <MemberSignature Language="C#" Value="int Accessibility.IAccessible.accChildCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Accessibility.IAccessible.accChildCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accChildCount" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accChildCount As Integer Implements IAccessible.accChildCount" />
      <MemberSignature Language="C++ CLI" Value="property int Accessibility::IAccessible::accChildCount { int get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accChildCount" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accChildCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę interfejsów podrzędne, które należą do tego obiektu. Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="P:Accessibility.IAccessible.accChildCount" />.</summary>
        <value>Liczba dostępnych obiektów podrzędnych, które należą do tego obiektu. Jeśli obiekt nie ma podrzędnych obiektów, ta wartość to 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowany na <xref:Accessibility.IAccessible> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accDoDefaultAction">
      <MemberSignature Language="C#" Value="void IAccessible.accDoDefaultAction (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.accDoDefaultAction(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accDoDefaultAction(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub accDoDefaultAction (childID As Object) Implements IAccessible.accDoDefaultAction" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.accDoDefaultAction(System::Object ^ childID) = Accessibility::IAccessible::accDoDefaultAction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accDoDefaultAction(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Identyfikator podrzędny w <see cref="T:Accessibility.IAccessible" /> pary identyfikator interfejsu/podrzędny, który reprezentuje obiekt dostępne.</param>
        <summary>Wykonuje akcję domyślną określony obiekt. Nie wszystkie obiekty mają akcję domyślną. Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:Accessibility.IAccessible.accDoDefaultAction(System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowany na <xref:Accessibility.IAccessible> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accFocus">
      <MemberSignature Language="C#" Value="object Accessibility.IAccessible.accFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Accessibility.IAccessible.accFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accFocus" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accFocus As Object Implements IAccessible.accFocus" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ Accessibility::IAccessible::accFocus { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accFocus" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który ma fokus klawiatury. Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="P:Accessibility.IAccessible.accFocus" />.</summary>
        <value>Obiekt, który ma fokus klawiatury.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typ wartości zwracanej <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accFocus%2A> właściwości zależy od obiektu, który ma fokus klawiatury. W poniższej tabeli opisano obiekt typy, które <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accFocus%2A> zwraca właściwości.  
  
|Typ|Opis|  
|----------|-----------------|  
|`null`|Ten obiekt nie ma fokus klawiatury, sama i nie zawiera elementu podrzędnego, który ma fokus klawiatury.|  
|integer|0, jeśli bieżący obiekt ma fokus klawiatury; w przeciwnym razie ID elementu podrzędnego dostępny obiektu podrzędnego fokus klawiatury.|  
|<xref:Accessibility.IAccessible>|Dostępny obiekt podrzędny ma fokus klawiatury.|  
  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowany na <xref:Accessibility.IAccessible> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accHitTest">
      <MemberSignature Language="C#" Value="object IAccessible.accHitTest (int xLeft, int yTop);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.accHitTest(int32 xLeft, int32 yTop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accHitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function accHitTest (xLeft As Integer, yTop As Integer) As Object Implements IAccessible.accHitTest" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.accHitTest(int xLeft, int yTop) = Accessibility::IAccessible::accHitTest;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accHitTest(System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xLeft" Type="System.Int32" />
        <Parameter Name="yTop" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="xLeft">Pozioma współrzędne.</param>
        <param name="yTop">Współrzędna pionowy.</param>
        <summary>Pobiera obiekt podrzędny na współrzędne ekranu. Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:Accessibility.IAccessible.accHitTest(System.Int32,System.Int32)" />.</summary>
        <returns>Obiekt dostępne w punkcie określonym przez <paramref name="xLeft" /> i <paramref name="yTop" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli opisano obiekt typy, które <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accHitTest%2A> metoda może zwracać.  
  
|Typ|Opis|  
|----------|-----------------|  
|<xref:Accessibility.IAccessible>|Dostępny obiekt w określonym kierunku.|  
|integer|0 czy określony punkt jest bieżący obiekt poza granicami obiektu; w przeciwnym razie ID elementu podrzędnego, określające dostępny obiekt, w określonym kierunku.|  
  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowany na <xref:Accessibility.IAccessible> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accLocation">
      <MemberSignature Language="C#" Value="void IAccessible.accLocation (out int pxLeft, out int pyTop, out int pcxWidth, out int pcyHeight, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.accLocation([out] int32&amp; pxLeft, [out] int32&amp; pyTop, [out] int32&amp; pcxWidth, [out] int32&amp; pcyHeight, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub accLocation (ByRef pxLeft As Integer, ByRef pyTop As Integer, ByRef pcxWidth As Integer, ByRef pcyHeight As Integer, childID As Object) Implements IAccessible.accLocation" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.accLocation([Runtime::InteropServices::Out] int % pxLeft, [Runtime::InteropServices::Out] int % pyTop, [Runtime::InteropServices::Out] int % pcxWidth, [Runtime::InteropServices::Out] int % pcyHeight, System::Object ^ childID) = Accessibility::IAccessible::accLocation;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pxLeft" Type="System.Int32" RefType="out" />
        <Parameter Name="pyTop" Type="System.Int32" RefType="out" />
        <Parameter Name="pcxWidth" Type="System.Int32" RefType="out" />
        <Parameter Name="pcyHeight" Type="System.Int32" RefType="out" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pxLeft">Po powrocie z tej metody zawiera współrzędną x lewej krawędzi obiektu. Ten parametr jest przekazywany niezainicjowany.</param>
        <param name="pyTop">Po powrocie z tej metody zawiera współrzędną y górnej krawędzi obiektu. Ten parametr jest przekazywany niezainicjowany.</param>
        <param name="pcxWidth">Po powrocie z tej metody zawiera szerokość obiektu. Ten parametr jest przekazywany niezainicjowany.</param>
        <param name="pcyHeight">Po powrocie z tej metody zawiera wysokość obiektu. Ten parametr jest przekazywany niezainicjowany.</param>
        <param name="childID">Identyfikator obiektu dostępny. Ten parametr jest 0, aby uzyskać lokalizację obiektu lub ID elementu podrzędnego w lokalizacji w jednym z obiektów podrzędnych danego obiektu.</param>
        <summary>Pobiera bieżącą lokalizację ekranu obiektu. Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:Accessibility.IAccessible.accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowany na <xref:Accessibility.IAccessible> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accNavigate">
      <MemberSignature Language="C#" Value="object IAccessible.accNavigate (int navDir, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.accNavigate(int32 navDir, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accNavigate(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function accNavigate (navDir As Integer, childID As Object) As Object Implements IAccessible.accNavigate" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.accNavigate(int navDir, System::Object ^ childID) = Accessibility::IAccessible::accNavigate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accNavigate(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navDir" Type="System.Int32" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navDir">Jedną z <see cref="T:System.Windows.Forms.AccessibleNavigation" /> wyliczenia, które określa kierunek, w celu przejścia.</param>
        <param name="childID">Identyfikator obiektu dostępny. Ten parametr jest 0, aby uruchomić z obiektu lub ID elementu podrzędnego, aby uruchomić jeden z obiektów podrzędnych danego obiektu.</param>
        <summary>Powoduje przejście do dostępnego obiektu względem bieżącego obiektu. Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:Accessibility.IAccessible.accNavigate(System.Int32,System.Object)" />.</summary>
        <returns>Dostępnego obiektu ustawiony na wartość określoną przez <paramref name="navDir" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli opisano obiekt typy, które <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accNavigate%2A> metoda może zwracać.  
  
|Typ|Opis|  
|----------|-----------------|  
|`null`|Brak dostępnego obiektu w określonym kierunku.|  
|<xref:Accessibility.IAccessible>|Dostępny obiekt w określonym kierunku.|  
|integer|Identyfikator elementu podrzędnego, określające dostępny obiekt, w określonym kierunku. Użyj obiektu nadrzędnego <xref:Accessibility.IAccessible> i identyfikator elementu podrzędnego dostępu do obiektu dostępny.|  
  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowany na <xref:Accessibility.IAccessible> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accParent">
      <MemberSignature Language="C#" Value="object Accessibility.IAccessible.accParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Accessibility.IAccessible.accParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accParent" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accParent As Object Implements IAccessible.accParent" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ Accessibility::IAccessible::accParent { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accParent" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accParent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera element nadrzędny dostępnego obiektu tego obiektu. Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="P:Accessibility.IAccessible.accParent" />.</summary>
        <value>
          <see cref="T:Accessibility.IAccessible" /> Reprezentujący element nadrzędny dostępnego obiektu lub <see langword="null" /> Jeśli nie ma żadnego obiektu nadrzędnego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowany na <xref:Accessibility.IAccessible> interfejs...  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accSelect">
      <MemberSignature Language="C#" Value="void IAccessible.accSelect (int flagsSelect, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.accSelect(int32 flagsSelect, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelect(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub accSelect (flagsSelect As Integer, childID As Object) Implements IAccessible.accSelect" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.accSelect(int flagsSelect, System::Object ^ childID) = Accessibility::IAccessible::accSelect;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accSelect(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flagsSelect" Type="System.Int32" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="flagsSelect">Bitowa kombinacja <see cref="T:System.Windows.Forms.AccessibleSelection" /> wartości.</param>
        <param name="childID">Numer identyfikacyjny dostępny obiektu, na którym ma zostać wykonany zaznaczenie. Ten parametr ma wartość 0, aby zaznaczyć obiekt lub ID elementu podrzędnego, aby wybrać jeden z obiektów podrzędnych danego obiektu.</param>
        <summary>Modyfikuje zaznaczenie lub przenosi fokus klawiatury dostępne obiektu. Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:Accessibility.IAccessible.accSelect(System.Int32,System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej opisano, które <xref:System.Windows.Forms.AccessibleSelection> wartości, aby określić, kiedy wywołanie `Select` do wykonywania operacji złożonych zaznaczenia.  
  
|Operacja|Kombinacja flag|  
|---------------|----------------------|  
|Aby symulować kliknięć|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.TakeSelection>|  
|Aby wybrać element docelowy, symulując CTRL + kliknięcie|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.AddSelection>|  
|Aby anulować zaznaczenie elementu docelowego, symulując CTRL + kliknięcie|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection>|  
|Aby symulować SHIFT + kliknięcie|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection>|  
|Aby wybrać zakres obiektów, a następnie umieść fokus w ostatni obiekt|Określ <xref:System.Windows.Forms.AccessibleSelection.TakeFocus> na obiekt początkowy, aby ustawić zakotwiczenie zaznaczenia. Następnie ponownie wywołaj wybierz i określ <xref:System.Windows.Forms.AccessibleSelection.TakeFocus> lub <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection> na ostatni obiekt.|  
|Aby usunąć zaznaczenie wszystkich obiektów|Określ <xref:System.Windows.Forms.AccessibleSelection.TakeSelection> dowolnego obiektu. Ta flaga Odznacza wszystkie wybrane obiekty z wyjątkiem tego, który został właśnie wybranymi. Następnie ponownie wywołaj wybierz i określ <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection> na tym samym obiekcie.|  
  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowany na <xref:Accessibility.IAccessible> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accSelection">
      <MemberSignature Language="C#" Value="object Accessibility.IAccessible.accSelection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Accessibility.IAccessible.accSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accSelection As Object Implements IAccessible.accSelection" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ Accessibility::IAccessible::accSelection { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accSelection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accSelection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera podrzędne wybrane obiekty dostępnego obiektu. Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="P:Accessibility.IAccessible.accSelection" />.</summary>
        <value>Obiekty podrzędne wybranego dostępnego obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli opisano obiekt typy, które <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accSelection%2A> zwraca właściwości  
  
|Typ|Opis|  
|----------|-----------------|  
|`null`|Nie zaznaczono żadnych obiektów podrzędnych.|  
|<xref:Accessibility.IAccessible>|Dostępny obiekt podrzędny jest zaznaczone.|  
|integer|Identyfikator elementu podrzędnego, który identyfikuje dostępny obiekt, który wybrano. Użyj obiektu nadrzędnego <xref:Accessibility.IAccessible> i identyfikator elementu podrzędnego dostępu do obiektu dostępny.|  
|`IEnumVARIANT`|Lista obiektów podrzędnych, które są wybrane.|  
  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowany na <xref:Accessibility.IAccessible> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accChild">
      <MemberSignature Language="C#" Value="object IAccessible.get_accChild (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.get_accChild(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accChild (childID As Object) As Object Implements IAccessible.get_accChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.get_accChild(System::Object ^ childID) = Accessibility::IAccessible::get_accChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accDefaultAction">
      <MemberSignature Language="C#" Value="string IAccessible.get_accDefaultAction (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accDefaultAction(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDefaultAction(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accDefaultAction (childID As Object) As String Implements IAccessible.get_accDefaultAction" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accDefaultAction(System::Object ^ childID) = Accessibility::IAccessible::get_accDefaultAction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accDefaultAction(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accDescription">
      <MemberSignature Language="C#" Value="string IAccessible.get_accDescription (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accDescription(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDescription(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accDescription (childID As Object) As String Implements IAccessible.get_accDescription" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accDescription(System::Object ^ childID) = Accessibility::IAccessible::get_accDescription;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accDescription(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accHelp">
      <MemberSignature Language="C#" Value="string IAccessible.get_accHelp (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accHelp(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelp(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accHelp (childID As Object) As String Implements IAccessible.get_accHelp" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accHelp(System::Object ^ childID) = Accessibility::IAccessible::get_accHelp;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accHelp(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accHelpTopic">
      <MemberSignature Language="C#" Value="int IAccessible.get_accHelpTopic (out string pszHelpFile, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 Accessibility.IAccessible.get_accHelpTopic([out] string&amp; pszHelpFile, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelpTopic(System.String@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accHelpTopic (ByRef pszHelpFile As String, childID As Object) As Integer Implements IAccessible.get_accHelpTopic" />
      <MemberSignature Language="C++ CLI" Value=" virtual int Accessibility.IAccessible.get_accHelpTopic([Runtime::InteropServices::Out] System::String ^ % pszHelpFile, System::Object ^ childID) = Accessibility::IAccessible::get_accHelpTopic;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accHelpTopic(System.String@,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pszHelpFile" Type="System.String" RefType="out" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pszHelpFile">To be added.</param>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accKeyboardShortcut">
      <MemberSignature Language="C#" Value="string IAccessible.get_accKeyboardShortcut (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accKeyboardShortcut(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accKeyboardShortcut(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accKeyboardShortcut (childID As Object) As String Implements IAccessible.get_accKeyboardShortcut" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accKeyboardShortcut(System::Object ^ childID) = Accessibility::IAccessible::get_accKeyboardShortcut;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accKeyboardShortcut(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accName">
      <MemberSignature Language="C#" Value="string IAccessible.get_accName (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accName(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accName (childID As Object) As String Implements IAccessible.get_accName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accName(System::Object ^ childID) = Accessibility::IAccessible::get_accName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accName(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accRole">
      <MemberSignature Language="C#" Value="object IAccessible.get_accRole (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.get_accRole(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accRole(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accRole (childID As Object) As Object Implements IAccessible.get_accRole" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.get_accRole(System::Object ^ childID) = Accessibility::IAccessible::get_accRole;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accRole(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accState">
      <MemberSignature Language="C#" Value="object IAccessible.get_accState (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.get_accState(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accState (childID As Object) As Object Implements IAccessible.get_accState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.get_accState(System::Object ^ childID) = Accessibility::IAccessible::get_accState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accValue">
      <MemberSignature Language="C#" Value="string IAccessible.get_accValue (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accValue(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accValue (childID As Object) As String Implements IAccessible.get_accValue" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accValue(System::Object ^ childID) = Accessibility::IAccessible::get_accValue;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accValue(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.set_accName">
      <MemberSignature Language="C#" Value="void IAccessible.set_accName (object childID, string newName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.set_accName(object childID, string newName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accName(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub set_accName (childID As Object, newName As String) Implements IAccessible.set_accName" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.set_accName(System::Object ^ childID, System::String ^ newName) = Accessibility::IAccessible::set_accName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.set_accName(System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
        <Parameter Name="newName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <param name="newName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.set_accValue">
      <MemberSignature Language="C#" Value="void IAccessible.set_accValue (object childID, string newValue);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.set_accValue(object childID, string newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub set_accValue (childID As Object, newValue As String) Implements IAccessible.set_accValue" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.set_accValue(System::Object ^ childID, System::String ^ newValue) = Accessibility::IAccessible::set_accValue;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.set_accValue(System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
        <Parameter Name="newValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <param name="newValue">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.AccessibleObject.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lokalizację i rozmiar dostępnego obiektu.</summary>
        <value>A <see cref="T:System.Drawing.Rectangle" /> reprezentujący granice dostępnego obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.AccessibleObject.Bounds%2A> Właściwość pobiera obiekt prostokąt otaczający we współrzędnych ekranu. Jeśli obiekt ma kształt nieprostokątny, ta właściwość reprezentuje najmniejszego prostokąta, obejmującą całą region cały obiekt. W związku z tym, nieprostokątne obiektów, takich jak elementy widoku listy, współrzędne obiektu prostokąt otaczający może zakończyć się niepowodzeniem, jeśli zostało to przetestowane, wywołując <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> metody, ponieważ <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> określa krawędzi obiektu na podstawie poszczególne piksele.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano tworzenie organizacyjnego obsługujących ułatwień dostępu kontrolować, za pomocą <xref:System.Windows.Forms.AccessibleObject> i <xref:System.Windows.Forms.Control.ControlAccessibleObject> klasy do udostępnienia dostępne informacje. Kontrolka zawiera dwie krzywe wraz z legendy. `ChartControlAccessibleObject` Klasy, która jest pochodną `ControlAccessibleObject`, jest używany w <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> metodę w celu udostępnienia niestandardowych informacji dostępna dla formantu wykresu. Ponieważ legenda wykresu nie jest to rzeczywiste <xref:System.Windows.Forms.Control> — na podstawie kontroli, ale zamiast tego jest rysowana przez formant wykresu nie ma żadnych wbudowanych dostępne informacje. W związku z tym `ChartControlAccessibleObject` klasy zastąpienia <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> metodę, aby zwrócić `CurveLegendAccessibleObject` reprezentujący dostępnych informacji dla każdej części legendy. Gdy aplikacja dostępny aware używa tego formantu, formant może zapewnić niezbędne informacje dostępne.  
  
 Ten fragment kodu pokazuje, zastępowanie <xref:System.Windows.Forms.AccessibleObject.Bounds%2A> właściwości. Zobacz <xref:System.Windows.Forms.AccessibleObject> Omówienie klasy, na przykład kompletny kod.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Nie można pobrać granice formantu.</exception>
        <block subset="none" type="overrides">
          <para>Domyślna implementacja zwraca dostępnego obiektu przez prostokąt ograniczający Jeśli obiekt opakowuje formant systemu; w przeciwnym razie zwraca <see cref="F:System.Drawing.Rectangle.Empty" />. Widoczne dla wszystkich dostępnych obiektów musi obsługiwać tę metodę. Dźwięk obiektów nie obsługuje tej metody.</para>
        </block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="DefaultAction">
      <MemberSignature Language="C#" Value="public virtual string DefaultAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultAction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultAction As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultAction { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultAction : string" Usage="System.Windows.Forms.AccessibleObject.DefaultAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ciąg opisujący domyślną akcję obiektu. Nie wszystkie obiekty mają akcję domyślną.</summary>
        <value>Opis domyślna akcja dla obiektu lub <see langword="null" /> Jeśli ten obiekt nie ma żadnych akcję domyślną.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ciąg zawiera opis akcji, która jest wykonywana na obiekcie nie obiektu działania w wyniku. Oznacza to przycisk paska narzędzi, który drukuje dokument ma domyślnej akcji "naciśnij przycisk" zamiast "Drukuje bieżącego dokumentu." Nie należy mylić domyślną akcję obiektu z jego wartość.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Nie można pobrać domyślnej akcji dla formantu.</exception>
        <block subset="none" type="overrides">
          <para>Domyślna implementacja zwraca domyślną akcję obiektu dostępne, jeśli obiekt opakowuje formant systemu, który zawiera akcję domyślną; w przeciwnym razie zwraca <see langword="null" />. Tylko formanty, które wykonują akcje powinien obsługiwać tę metodę. Nie wszystkie obiekty mają domyślne akcje i niektóre obiekty mogą domyślną akcję, którą jest powiązany z jego <see cref="P:System.Windows.Forms.AccessibleObject.Value" /> właściwości, takie jak w następujących przykładach: zaznaczenie pola wyboru ma domyślną akcję "Usuń zaznaczenie" i wartość "Zaznaczone". Wyczyszczone pole wyboru ma domyślną akcję "Sprawdź" i wartość "Niezaznaczone." Przycisk z etykietą "Print" ma domyślną akcję "Press" bez wartości. Formant statyczny tekst lub formant edycji, który zawiera "Printer" ma żadna akcja domyślna, ale będzie miała wartość "Drukarka." Obiekt <see cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" /> właściwość powinna być czasownikiem lub frazy krótki zlecenie.</para>
        </block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.Windows.Forms.AccessibleObject.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ciąg opisujący wygląd określonego obiektu. Nie wszystkie obiekty mają opis.</summary>
        <value>Opis wygląd obiektu dla użytkownika lub <see langword="null" /> Jeśli obiekt nie ma opisu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość opisuje wygląd obiektu użytkownika.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Nie można pobrać opis formantu.</exception>
        <block subset="none" type="overrides">
          <para>Domyślna implementacja zwraca dostępny opis obiektu, jeśli obiekt opakowuje formant systemu; w przeciwnym razie zwraca <see langword="null" />. Opis zwykle jest używany do zapewniania kontekstu większa dla użytkowników z ograniczonymi możliwościami widzenia lub ukryta. Może również służyć dla kontekstu wyszukiwania lub innych aplikacji. Serwery muszą obsługiwać <see cref="P:System.Windows.Forms.AccessibleObject.Description" /> czy opis nie jest jasne, czy jest nadmiarowy na podstawie właściwości do obiektu <see cref="P:System.Windows.Forms.AccessibleObject.Name" />, <see cref="P:System.Windows.Forms.AccessibleObject.Role" />, <see cref="P:System.Windows.Forms.AccessibleObject.State" />, i <see cref="P:System.Windows.Forms.AccessibleObject.Value" /> właściwości. Na przykład przycisk "OK" nie jest konieczne dodatkowe informacje, ale będzie dostępny przycisk, który wyświetla obraz kaktus. <see cref="P:System.Windows.Forms.AccessibleObject.Name" />, <see cref="P:System.Windows.Forms.AccessibleObject.Role" />i być może <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> właściwości dla przycisku kaktus opisują jego przeznaczenie, ale <see cref="P:System.Windows.Forms.AccessibleObject.Description" /> właściwości powoduje informacje, które są mniej materialne, takich jak "Button, który wyświetla obraz kaktus".</para>
        </block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="DoDefaultAction">
      <MemberSignature Language="C#" Value="public virtual void DoDefaultAction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoDefaultAction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.DoDefaultAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DoDefaultAction ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DoDefaultAction();" />
      <MemberSignature Language="F#" Value="abstract member DoDefaultAction : unit -&gt; unit&#xA;override this.DoDefaultAction : unit -&gt; unit" Usage="accessibleObject.DoDefaultAction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wykonuje domyślne działanie skojarzone z tym obiektem dostępny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klienci mogą pobierać domyślną akcję obiektu, sprawdzając obiektu <xref:System.Windows.Forms.AccessibleObject.DefaultAction%2A> właściwości. Klient może używać usługi automation, (jeśli jest to obsługiwane) w zamiast <xref:System.Windows.Forms.AccessibleObject.DoDefaultAction%2A> do wykonania akcji domyślnego obiektu. Jednak <xref:System.Windows.Forms.AccessibleObject.DoDefaultAction%2A> zapewnia prosty sposób wykonywać obiekt użytkownika najczęściej używanych akcji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Nie można wykonać domyślna akcja dla formantu.</exception>
        <block subset="none" type="overrides">
          <para>Domyślne działanie wykonywane przez elementy interfejsu użytkownika dostarczane przez system, zależy od stanu klawiatury. Oznacza to, jeśli klawisz modyfikujący, takie jak SHIFT, ALT i CTRL nie działa (albo przez akcję użytkownika lub programowo) podczas <see cref="M:System.Windows.Forms.AccessibleObject.DoDefaultAction" /> nosi nazwę, wartość domyślna akcja nie może być taka sama jak kiedy tych kluczy nie są w dół. Nie wszystkie obiekty mają akcję domyślną.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetChild">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject GetChild (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetChild(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChild (index As Integer) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetChild(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetChild : int -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.GetChild : int -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.GetChild index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks elementu podrzędnego dostępny.</param>
        <summary>Pobiera dostępne podrzędnych, odpowiadający określonemu indeksowi.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.AccessibleObject" /> Reprezentujący dostępny element podrzędny odpowiadający określonemu indeksowi.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano tworzenie organizacyjnego obsługujących ułatwień dostępu kontrolować, za pomocą <xref:System.Windows.Forms.AccessibleObject> i <xref:System.Windows.Forms.Control.ControlAccessibleObject> klasy do udostępnienia dostępne informacje. Kontrolka zawiera dwie krzywe wraz z legendy. `ChartControlAccessibleObject` Klasy, która jest pochodną `ControlAccessibleObject`, jest używany w <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> metodę w celu udostępnienia niestandardowych informacji dostępna dla formantu wykresu. Ponieważ legenda wykresu nie jest to rzeczywiste <xref:System.Windows.Forms.Control> — na podstawie kontroli, ale zamiast tego jest rysowana przez formant wykresu nie ma żadnych wbudowanych dostępne informacje. W związku z tym `ChartControlAccessibleObject` klasy zastąpienia <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> metodę, aby zwrócić `CurveLegendAccessibleObject` reprezentujący dostępnych informacji dla każdej części legendy. Gdy aplikacja dostępny aware używa tego formantu, formant może zapewnić niezbędne informacje dostępne.  
  
 Ten fragment kodu pokazuje, zastępowanie <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> metody. Zobacz <xref:System.Windows.Forms.AccessibleObject> Omówienie klasy, na przykład kompletny kod.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wszystkich dostępnych obiektów musi obsługiwać tę właściwość. Jeśli metoda nie zostanie zastąpiona, zwraca <see langword="null" />. Należy przesłonić tę metodę, gdy dostępnego obiektu musi podać niestandardowy dostępne elementy podrzędne. Jeśli ten indeks jest nieprawidłowy, wówczas ta metoda powinna zwracać <see langword="null" />. Jeśli zastąpisz tę metodę, konieczne jest również przesłonięcie <see cref="M:System.Windows.Forms.AccessibleObject.GetChildCount" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetChildCount">
      <MemberSignature Language="C#" Value="public virtual int GetChildCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChildCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetChildCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChildCount () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChildCount();" />
      <MemberSignature Language="F#" Value="abstract member GetChildCount : unit -&gt; int&#xA;override this.GetChildCount : unit -&gt; int" Usage="accessibleObject.GetChildCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera liczbę elementów podrzędnych należących do dostępnego obiektu.</summary>
        <returns>Liczba elementów podrzędnych należących do dostępnego obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano tworzenie organizacyjnego obsługujących ułatwień dostępu kontrolować, za pomocą <xref:System.Windows.Forms.AccessibleObject> i <xref:System.Windows.Forms.Control.ControlAccessibleObject> klasy do udostępnienia dostępne informacje. Kontrolka zawiera dwie krzywe wraz z legendy. `ChartControlAccessibleObject` Klasy, która jest pochodną `ControlAccessibleObject`, jest używany w <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> metodę w celu udostępnienia niestandardowych informacji dostępna dla formantu wykresu. Ponieważ legenda wykresu nie jest to rzeczywiste <xref:System.Windows.Forms.Control> — na podstawie kontroli, ale zamiast tego jest rysowana przez formant wykresu nie ma żadnych wbudowanych dostępne informacje. W związku z tym `ChartControlAccessibleObject` klasy zastąpienia <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> metodę, aby zwrócić `CurveLegendAccessibleObject` reprezentujący dostępnych informacji dla każdej części legendy. Gdy aplikacja dostępny aware używa tego formantu, formant może zapewnić niezbędne informacje dostępne.  
  
 Ten kod przedstawia przedstawiono zastępowanie <xref:System.Windows.Forms.AccessibleObject.GetChildCount%2A> metody. Zobacz <xref:System.Windows.Forms.AccessibleObject> Omówienie klasy, na przykład kompletny kod.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wszystkie obiekty muszą obsługiwać tę właściwość. Domyślna implementacja zwraca wartość -1. Należy przesłonić tę metodę, gdy dostępnego obiektu musi podać niestandardowy dostępne elementy podrzędne. Jeśli zastąpisz tę metodę, konieczne jest również przesłonięcie <see cref="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetFocused">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject GetFocused ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetFocused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetFocused" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFocused () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetFocused();" />
      <MemberSignature Language="F#" Value="abstract member GetFocused : unit -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.GetFocused : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.GetFocused " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera obiekt, który ma fokus klawiatury.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.AccessibleObject" /> Określający podrzędnych mającym aktualnie fokus. Ta metoda zwraca obiekt wywołujący, jeśli sam obiekt ma fokus. Zwraca <see langword="null" /> Jeśli żaden obiekt nie jest ustawiony fokus.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pojęcie fokus klawiatury jest powiązana z aktywnego okna. Aktywne okno jest oknem pierwszego planu, w którym pracuje użytkownik. Obiekt mający fokus klawiatury jest aktywnym oknem lub obiekt podrzędny aktywnego okna.  
  
 Tylko jeden obiekt lub element w kontenerze ma fokus w dowolnym momencie. Obiekt mający fokus klawiatury nie jest koniecznie wybranego obiektu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Nie można pobrać formantu.</exception>
        <block subset="none" type="overrides">
          <para>Wszystkie obiekty, które może odebrać fokus klawiatury musi obsługiwać tę właściwość.</para>
        </block>
        <altmember cref="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetHelpTopic">
      <MemberSignature Language="C#" Value="public virtual int GetHelpTopic (out string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHelpTopic([out] string&amp; fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetHelpTopic(System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHelpTopic (ByRef fileName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHelpTopic([Runtime::InteropServices::Out] System::String ^ % fileName);" />
      <MemberSignature Language="F#" Value="abstract member GetHelpTopic :  -&gt; int&#xA;override this.GetHelpTopic :  -&gt; int" Usage="accessibleObject.GetHelpTopic fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="fileName">Przy powrocie ta właściwość zawiera ścieżkę do pliku Pomocy skojarzone z tym obiektem dostępny.</param>
        <summary>Pobiera identyfikator identyfikator tematu pomocy i ścieżkę do pliku Pomocy skojarzone z tym obiektem dostępny.</summary>
        <returns>Identyfikator tematu pomocy lub -1, jeśli Brak tematu Pomocy. Przy powrocie <paramref name="fileName" /> parametr zawiera ścieżkę do pliku Pomocy skojarzone z tym obiektem dostępny.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby wyświetlić Pomoc dla <xref:System.Windows.Forms.AccessibleObject> przy użyciu systemu Windows pomocy, można przekazać pliku identyfikator nazwy i tematu do odpowiedniego <xref:System.Windows.Forms.Help.ShowHelp%2A?displayProperty=nameWithType> metody <xref:System.Windows.Forms.Help>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Nie można pobrać tematu pomocy dla formantu.</exception>
        <block subset="none" type="overrides">
          <para>Nie wszystkie obiekty muszą obsługiwać tę właściwość.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
      </Docs>
    </Member>
    <Member MemberName="GetSelected">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject GetSelected ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetSelected() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetSelected" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSelected () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetSelected();" />
      <MemberSignature Language="F#" Value="abstract member GetSelected : unit -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.GetSelected : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.GetSelected " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera zaznaczony element podrzędny.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.AccessibleObject" /> Reprezentujący aktualnie wybranego elementu podrzędnego. Ta metoda zwraca obiekt wywołujący, jeśli wybrano samego obiektu. Zwraca <see langword="null" /> Jeśli podrzędny nie jest aktualnie wybrany i sam obiekt nie ma fokusu.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Nie można pobrać wybranego elementu podrzędnego.</exception>
        <block subset="none" type="overrides">
          <para>Wszystkie obiekty, które można wybrać powinien obsługiwać tę właściwość.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Help">
      <MemberSignature Language="C#" Value="public virtual string Help { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Help" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Help" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Help As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Help { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Help : string" Usage="System.Windows.Forms.AccessibleObject.Help" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera opis obiekt ma lub korzystania z obiektu.</summary>
        <value>Element <see cref="T:System.String" /> zawierający opis obiekt ma lub korzystania z obiektu. Zwraca <see langword="null" /> Jeśli nie zdefiniowano żadnych pomocy.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Nie można pobrać ciąg pomocy dla formantu.</exception>
        <block subset="none" type="overrides">
          <para>Nie wszystkie obiekty muszą obsługiwać tę właściwość. Zazwyczaj ta właściwość zawiera informacje styl etykietki narzędzi, który jest używany do opisania obiekt ma lub jak z niej korzystać. Na przykład <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> właściwości przycisku paska narzędzi, pokazujący, drukarki, może być "drukuje bieżącego dokumentu." Tekst dla <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> właściwości nie musi być unikatowa w obrębie interfejsu użytkownika. Serwery nie muszą obsługiwać <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> właściwość Jeśli inne właściwości dostarcza wystarczających informacji o obiekcie jego przeznaczenia i jakie akcje mogą wykonywać w obiekcie.</para>
        </block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject HitTest (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject HitTest(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.HitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HitTest (x As Integer, y As Integer) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ HitTest(int x, int y);" />
      <MemberSignature Language="F#" Value="abstract member HitTest : int * int -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.HitTest : int * int -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.HitTest (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">Współrzędna pozioma ekranu.</param>
        <param name="y">Współrzędna pionowa ekranu.</param>
        <summary>Pobiera obiekt podrzędny na współrzędne ekranu.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.AccessibleObject" /> Reprezentujący obiekt podrzędny na współrzędnych ekranów. Ta metoda zwraca obiekt wywołujący, jeśli sam obiekt znajduje się w podanej lokalizacji. Zwraca <see langword="null" /> Jeśli żaden obiekt nie znajduje się w lokalizacji przetestowane.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nieprostokątne obiektów, takich jak elementy widoku listy, współrzędne obiektu użytkownika prostokąt ograniczający pobierane przez <xref:System.Windows.Forms.AccessibleObject.Bounds%2A> może zakończyć się niepowodzeniem, jeśli zostało to przetestowane za pomocą <xref:System.Windows.Forms.AccessibleObject.HitTest%2A>, ponieważ <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> określa krawędzi obiektu na podstawie poszczególne piksele.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Kontrolka nie zostanie osiągnięty przetestowane.</exception>
        <block subset="none" type="overrides">
          <para>Wszystkie obiekty wizualne musi obsługiwać tę metodę; obiekty dźwięku nie jest obsługiwany.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="KeyboardShortcut">
      <MemberSignature Language="C#" Value="public virtual string KeyboardShortcut { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyboardShortcut" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyboardShortcut As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ KeyboardShortcut { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyboardShortcut : string" Usage="System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera klawisza skrótu lub klucz dostępu dla dostępnego obiektu.</summary>
        <value>Klawisz skrótu lub klucz dostępu dla dostępnego obiektu lub <see langword="null" /> Jeśli klucz nie istnieje skrótów skojarzony z obiektem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klucz dostępu, znany także jako skrót klawiszowy, jest podkreślony znak w tekście menu, element menu, etykieta przycisku lub niektóre inne kontrolki. Na przykład użytkownik może wyświetlić menu, naciskając klawisz ALT podczas również klawisza wskazany podkreślone, takich jak klawisze ALT + F, aby otworzyć `File` menu. Aby użyć klucza dostępu do elementu menu, menu, zawierające element musi być aktywne. Formanty, takie jak elementy menu i przycisków paska narzędzi często mają klawiszem skrótu skojarzone. Element menu może mieć klucza dostępu i skojarzone z nią klawisza skrótu. Jeśli wartość <xref:System.Windows.Forms.AccessibleObject.KeyboardShortcut%2A> właściwość pojedynczy znak, można założyć, jest klucz dostępu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Nie można pobrać skrót dla formantu.</exception>
        <block subset="none" type="overrides">
          <para>Wszystkie obiekty, które mają klawisza skrótu lub klawisza dostępu powinien obsługiwać tę właściwość.</para>
        </block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.AccessibleObject.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę obiektu.</summary>
        <value>Nazwa obiektu lub <see langword="null" /> Jeśli właściwość nie została ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.AccessibleObject.Name%2A> Właściwość ma postać ciągu używany przez klientów do identyfikowania, Znajdź lub ogłaszamy obiektu użytkownika. Dostęp do nazwy obiektu podrzędnego, najpierw musisz wywołać <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> z indeksem podrzędnych, których nazwy są pobierane.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano tworzenie organizacyjnego obsługujących ułatwień dostępu kontrolować, za pomocą <xref:System.Windows.Forms.AccessibleObject> i <xref:System.Windows.Forms.Control.ControlAccessibleObject> klasy do udostępnienia dostępne informacje. Kontrolka zawiera dwie krzywe wraz z legendy. `ChartControlAccessibleObject` Klasy, która jest pochodną `ControlAccessibleObject`, jest używany w <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> metodę w celu udostępnienia niestandardowych informacji dostępna dla formantu wykresu. Ponieważ legenda wykresu nie jest to rzeczywiste <xref:System.Windows.Forms.Control> — na podstawie kontroli, ale zamiast tego jest rysowana przez formant wykresu nie ma żadnych wbudowanych dostępne informacje. W związku z tym `ChartControlAccessibleObject` klasy zastąpienia <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> metodę, aby zwrócić `CurveLegendAccessibleObject` reprezentujący dostępnych informacji dla każdej części legendy. Gdy aplikacja dostępny aware używa tego formantu, formant może zapewnić niezbędne informacje dostępne.  
  
 Ten fragment kodu pokazuje, zastępowanie <xref:System.Windows.Forms.AccessibleObject.Name%2A> właściwości. Zobacz <xref:System.Windows.Forms.AccessibleObject> Omówienie klasy, na przykład kompletny kod.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Nazwa formantu nie można pobrać lub ustawić.</exception>
        <block subset="none" type="overrides">
          <para>Wszystkie obiekty powinien obsługiwać tę właściwość. Nazwa obiektu powinien być intuicyjne, umożliwiając użytkownikom zrozumienie przeznaczenia lub znaczenie obiektu. Ponadto upewnij się, że <see langword="Name" /> właściwość jest unikatowa względem wszystkie obiekty równorzędne w obiekcie nadrzędnym. Nawigacja w tabelach przedstawiono szczególnie trudne problemy w przypadku niektórych użytkowników. W związku z tym deweloperzy serwera należy ustawić nazwy komórek tabeli najbardziej opisowy. Na przykład utworzyć nazwę komórki, łącząc nazwy wierszy i kolumn, które zajmuje, takie jak "A1". Jednak go zazwyczaj lepiej jest używać nazwy opisowej, takie jak "Karin, luty." Wiele obiektów, takich jak ikony, menu, pola wyboru, pola kombi i inne kontrolki mają etykiety, które są widoczne dla użytkowników. Wszelkie etykiety widoczny dla użytkowników powinny być używane do obiektu <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> właściwości. Aby uzyskać więcej informacji, zobacz <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> właściwości.  
  
Jeśli używane są menu lub przycisku tekst <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> właściwości paska się ampersandu (&amp;), oznaczanie kluczy dostępu do klawiatury.</para>
        </block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject Navigate (System.Windows.Forms.AccessibleNavigation navdir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject Navigate(valuetype System.Windows.Forms.AccessibleNavigation navdir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Navigate (navdir As AccessibleNavigation) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ Navigate(System::Windows::Forms::AccessibleNavigation navdir);" />
      <MemberSignature Language="F#" Value="abstract member Navigate : System.Windows.Forms.AccessibleNavigation -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.Navigate : System.Windows.Forms.AccessibleNavigation -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.Navigate navdir" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navdir" Type="System.Windows.Forms.AccessibleNavigation" />
      </Parameters>
      <Docs>
        <param name="navdir">Jedną z <see cref="T:System.Windows.Forms.AccessibleNavigation" /> wartości.</param>
        <summary>Powoduje przejście do innego dostępnego obiektu.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.AccessibleObject" /> Stanowi jeden z <see cref="T:System.Windows.Forms.AccessibleNavigation" /> wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nawigacja, przestrzenne i logiczne, zawsze jest ograniczony do elementów interfejsu użytkownika w kontenerze. Z przestrzennego nawigacji klientów można przejść tylko z elementem równorzędnym, począwszy od obiektu. W zależności od nawigacyjne flagi używane z logiczną nawigację klientów można przejść do dowolnego elementu podrzędnego lub elementem równorzędnym węzła obiekt początkowy. Ta metoda nie zmienia zaznaczenia lub fokus. Aby zmienić fokus lub zaznacz obiekt, należy użyć <xref:System.Windows.Forms.AccessibleObject.Select%2A>. <xref:System.Windows.Forms.AccessibleObject.Navigate%2A> Metoda pobiera tylko elementy interfejsu użytkownika ma lokalizacji zdefiniowanej ekranu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano tworzenie organizacyjnego obsługujących ułatwień dostępu kontrolować, za pomocą <xref:System.Windows.Forms.AccessibleObject> i <xref:System.Windows.Forms.Control.ControlAccessibleObject> klasy do udostępnienia dostępne informacje. Kontrolka zawiera dwie krzywe wraz z legendy. `ChartControlAccessibleObject` Klasy, która jest pochodną `ControlAccessibleObject`, jest używany w <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> metodę w celu udostępnienia niestandardowych informacji dostępna dla formantu wykresu. Ponieważ legenda wykresu nie jest to rzeczywiste <xref:System.Windows.Forms.Control> — na podstawie kontroli, ale zamiast tego jest rysowana przez formant wykresu nie ma żadnych wbudowanych dostępne informacje. W związku z tym `ChartControlAccessibleObject` klasy zastąpienia <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> metodę, aby zwrócić `CurveLegendAccessibleObject` reprezentujący dostępnych informacji dla każdej części legendy. Gdy aplikacja dostępny aware używa tego formantu, formant może zapewnić niezbędne informacje dostępne.  
  
 Ten kod przedstawia przedstawiono zastępowanie <xref:System.Windows.Forms.AccessibleObject.Navigate%2A> metody. Zobacz <xref:System.Windows.Forms.AccessibleObject> Omówienie klasy, na przykład kompletny kod.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Próba nawigacji nie powiedzie się.</exception>
        <block subset="none" type="overrides">
          <para>Wszystkie obiekty wizualne musi obsługiwać tę metodę. Jeśli obiekt ma stan <see cref="F:System.Windows.Forms.AccessibleStates.Invisible" />, nawigacji do tego obiektu ukryte może zakończyć się niepowodzeniem. Niektóre elementy interfejsu zdefiniowaną przez system, takie jak menu, elementy menu i menu podręczne umożliwiają nawigację do obiektów, które nie są widoczne. Jednak inne elementy interfejsu użytkownika zdefiniowane przez system nie obsługują tego. Jeśli to możliwe serwery powinny obsługiwać nawigacji do obiektów, które nie są widoczne, ale ta funkcja nie jest wymagane i klienci nie powinni oczekiwać od jego.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Parent As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleObject ^ Parent { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Forms.AccessibleObject" Usage="System.Windows.Forms.AccessibleObject.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera element nadrzędny dostępnego obiektu.</summary>
        <value>
          <see cref="T:System.Windows.Forms.AccessibleObject" /> Reprezentujący element nadrzędny dostępnego obiektu lub <see langword="null" /> Jeśli nie ma żadnego obiektu nadrzędnego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano tworzenie organizacyjnego obsługujących ułatwień dostępu kontrolować, za pomocą <xref:System.Windows.Forms.AccessibleObject> i <xref:System.Windows.Forms.Control.ControlAccessibleObject> klasy do udostępnienia dostępne informacje. Kontrolka zawiera dwie krzywe wraz z legendy. `ChartControlAccessibleObject` Klasy, która jest pochodną `ControlAccessibleObject`, jest używany w <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> metodę w celu udostępnienia niestandardowych informacji dostępna dla formantu wykresu. Ponieważ legenda wykresu nie jest to rzeczywiste <xref:System.Windows.Forms.Control> — na podstawie kontroli, ale zamiast tego jest rysowana przez formant wykresu nie ma żadnych wbudowanych dostępne informacje. W związku z tym `ChartControlAccessibleObject` klasy zastąpienia <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> metodę, aby zwrócić `CurveLegendAccessibleObject` reprezentujący dostępnych informacji dla każdej części legendy. Gdy aplikacja dostępny aware używa tego formantu, formant może zapewnić niezbędne informacje dostępne.  
  
 Ten fragment kodu pokazuje, zastępowanie <xref:System.Windows.Forms.AccessibleObject.Parent%2A> właściwości. Zobacz <xref:System.Windows.Forms.AccessibleObject> Omówienie klasy, na przykład kompletny kod.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wszystkie obiekty powinien obsługiwać tę właściwość.</para>
        </block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="RaiseAutomationNotification">
      <MemberSignature Language="C#" Value="public bool RaiseAutomationNotification (System.Windows.Forms.Automation.AutomationNotificationKind notificationKind, System.Windows.Forms.Automation.AutomationNotificationProcessing notificationProcessing, string notificationText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RaiseAutomationNotification(valuetype System.Windows.Forms.Automation.AutomationNotificationKind notificationKind, valuetype System.Windows.Forms.Automation.AutomationNotificationProcessing notificationProcessing, string notificationText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.RaiseAutomationNotification(System.Windows.Forms.Automation.AutomationNotificationKind,System.Windows.Forms.Automation.AutomationNotificationProcessing,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RaiseAutomationNotification (notificationKind As AutomationNotificationKind, notificationProcessing As AutomationNotificationProcessing, notificationText As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RaiseAutomationNotification(System::Windows::Forms::Automation::AutomationNotificationKind notificationKind, System::Windows::Forms::Automation::AutomationNotificationProcessing notificationProcessing, System::String ^ notificationText);" />
      <MemberSignature Language="F#" Value="member this.RaiseAutomationNotification : System.Windows.Forms.Automation.AutomationNotificationKind * System.Windows.Forms.Automation.AutomationNotificationProcessing * string -&gt; bool" Usage="accessibleObject.RaiseAutomationNotification (notificationKind, notificationProcessing, notificationText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notificationKind" Type="System.Windows.Forms.Automation.AutomationNotificationKind" />
        <Parameter Name="notificationProcessing" Type="System.Windows.Forms.Automation.AutomationNotificationProcessing" />
        <Parameter Name="notificationText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="notificationKind">To be added.</param>
        <param name="notificationProcessing">To be added.</param>
        <param name="notificationText">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseLiveRegionChanged">
      <MemberSignature Language="C#" Value="public virtual bool RaiseLiveRegionChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RaiseLiveRegionChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.RaiseLiveRegionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RaiseLiveRegionChanged () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool RaiseLiveRegionChanged();" />
      <MemberSignature Language="F#" Value="abstract member RaiseLiveRegionChanged : unit -&gt; bool&#xA;override this.RaiseLiveRegionChanged : unit -&gt; bool" Usage="accessibleObject.RaiseLiveRegionChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Role">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleRole Role { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AccessibleRole Role" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Role" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Role As AccessibleRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleRole Role { System::Windows::Forms::AccessibleRole get(); };" />
      <MemberSignature Language="F#" Value="member this.Role : System.Windows.Forms.AccessibleRole" Usage="System.Windows.Forms.AccessibleObject.Role" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleRole</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera rolę ten dostępny obiekt.</summary>
        <value>Jedną z <see cref="T:System.Windows.Forms.AccessibleRole" /> wartości lub <see cref="F:System.Windows.Forms.AccessibleRole.None" /> określono żadnej roli.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rola obiektu pomaga opisują funkcji obiektu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano tworzenie organizacyjnego obsługujących ułatwień dostępu kontrolować, za pomocą <xref:System.Windows.Forms.AccessibleObject> i <xref:System.Windows.Forms.Control.ControlAccessibleObject> klasy do udostępnienia dostępne informacje. Kontrolka zawiera dwie krzywe wraz z legendy. `ChartControlAccessibleObject` Klasy, która jest pochodną `ControlAccessibleObject`, jest używany w <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> metodę w celu udostępnienia niestandardowych informacji dostępna dla formantu wykresu. Ponieważ legenda wykresu nie jest to rzeczywiste <xref:System.Windows.Forms.Control> — na podstawie kontroli, ale zamiast tego jest rysowana przez formant wykresu nie ma żadnych wbudowanych dostępne informacje. W związku z tym `ChartControlAccessibleObject` klasy zastąpienia <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> metodę, aby zwrócić `CurveLegendAccessibleObject` reprezentujący dostępnych informacji dla każdej części legendy. Gdy aplikacja dostępny aware używa tego formantu, formant może zapewnić niezbędne informacje dostępne.  
  
 Ten fragment kodu pokazuje, zastępowanie <xref:System.Windows.Forms.AccessibleObject.Role%2A> właściwości. Zobacz <xref:System.Windows.Forms.AccessibleObject> Omówienie klasy, na przykład kompletny kod.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wszystkie obiekty powinien obsługiwać tę właściwość.</para>
        </block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public virtual void Select (System.Windows.Forms.AccessibleSelection flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select(valuetype System.Windows.Forms.AccessibleSelection flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Select(System.Windows.Forms.AccessibleSelection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select (flags As AccessibleSelection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select(System::Windows::Forms::AccessibleSelection flags);" />
      <MemberSignature Language="F#" Value="abstract member Select : System.Windows.Forms.AccessibleSelection -&gt; unit&#xA;override this.Select : System.Windows.Forms.AccessibleSelection -&gt; unit" Usage="accessibleObject.Select flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Windows.Forms.AccessibleSelection" />
      </Parameters>
      <Docs>
        <param name="flags">Jedną z <see cref="T:System.Windows.Forms.AccessibleSelection" /> wartości.</param>
        <summary>Modyfikuje zaznaczenie lub przenosi fokus klawiatury dostępne obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacje można użyć tej metody do wykonywania operacji złożonych zaznaczenia.  
  
 Poniżej opisano, które <xref:System.Windows.Forms.AccessibleSelection> wartości, aby określić, kiedy wywołanie <xref:System.Windows.Forms.AccessibleObject.Select%2A> do wykonywania operacji złożonych zaznaczenia.  
  
|Operacja|Kombinacja flag|  
|---------------|----------------------|  
|Aby symulować kliknięć|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.TakeSelection?displayProperty=nameWithType> **Uwaga:** ta kombinacja nie będą zaznacz żądanego formantu, jeśli wywołane z wnętrza własną aplikację. Będzie ono pożądanych efektów, jeśli wywołania będą od aplikacji zewnętrznej.|  
|Aby wybrać element docelowy, symulując CTRL + kliknięcie|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.AddSelection?displayProperty=nameWithType>|  
|Aby anulować zaznaczenie elementu docelowego, symulując CTRL + kliknięcie|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection?displayProperty=nameWithType>|  
|Aby symulować SHIFT + kliknięcie|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection?displayProperty=nameWithType>|  
|Aby wybrać zakres obiektów, a następnie umieść fokus w ostatni obiekt|Określ <xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> na obiekt początkowy, aby ustawić zakotwiczenie zaznaczenia. Następnie wywołaj <xref:System.Windows.Forms.AccessibleObject.Select%2A> ponownie i określ <xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection?displayProperty=nameWithType> na ostatni obiekt.|  
|Aby usunąć zaznaczenie wszystkich obiektów|Określ <xref:System.Windows.Forms.AccessibleSelection.TakeSelection?displayProperty=nameWithType> dowolnego obiektu. Ta flaga Odznacza wszystkie wybrane obiekty z wyjątkiem tego, który został właśnie wybranymi. Następnie wywołaj <xref:System.Windows.Forms.AccessibleObject.Select%2A> ponownie i określ <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection?displayProperty=nameWithType> na tym samym obiekcie.|  
  
   
  
## Examples  
 W poniższym przykładzie pokazano tworzenie organizacyjnego obsługujących ułatwień dostępu kontrolować, za pomocą <xref:System.Windows.Forms.AccessibleObject> i <xref:System.Windows.Forms.Control.ControlAccessibleObject> klasy do udostępnienia dostępne informacje. Kontrolka zawiera dwie krzywe wraz z legendy. `ChartControlAccessibleObject` Klasy, która jest pochodną `ControlAccessibleObject`, jest używany w <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> metodę w celu udostępnienia niestandardowych informacji dostępna dla formantu wykresu. Ponieważ legenda wykresu nie jest to rzeczywiste <xref:System.Windows.Forms.Control> — na podstawie kontroli, ale zamiast tego jest rysowana przez formant wykresu nie ma żadnych wbudowanych dostępne informacje. W związku z tym `ChartControlAccessibleObject` klasy zastąpienia <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> metodę, aby zwrócić `CurveLegendAccessibleObject` reprezentujący dostępnych informacji dla każdej części legendy. Gdy aplikacja dostępny aware używa tego formantu, formant może zapewnić niezbędne informacje dostępne.  
  
 Ten kod przedstawia przedstawiono zastępowanie <xref:System.Windows.Forms.AccessibleObject.Select%2A> metody. Zobacz <xref:System.Windows.Forms.AccessibleObject> Omówienie klasy, na przykład kompletny kod.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Nie można wykonać zaznaczenia.</exception>
        <block subset="none" type="overrides">
          <para>Wszystkie obiekty, które można wybrać lub odebrać fokus klawiatury musi obsługiwać tę metodę.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleStates State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AccessibleStates State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.State" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property State As AccessibleStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleStates State { System::Windows::Forms::AccessibleStates get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Windows.Forms.AccessibleStates" Usage="System.Windows.Forms.AccessibleObject.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera stan tego obiektu dostępny.</summary>
        <value>Jedną z <see cref="T:System.Windows.Forms.AccessibleStates" /> wartości lub <see cref="F:System.Windows.Forms.AccessibleStates.None" />, jeśli stan nie został ustawiony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano tworzenie organizacyjnego obsługujących ułatwień dostępu kontrolować, za pomocą <xref:System.Windows.Forms.AccessibleObject> i <xref:System.Windows.Forms.Control.ControlAccessibleObject> klasy do udostępnienia dostępne informacje. Kontrolka zawiera dwie krzywe wraz z legendy. `ChartControlAccessibleObject` Klasy, która jest pochodną `ControlAccessibleObject`, jest używany w <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> metodę w celu udostępnienia niestandardowych informacji dostępna dla formantu wykresu. Ponieważ legenda wykresu nie jest to rzeczywiste <xref:System.Windows.Forms.Control> — na podstawie kontroli, ale zamiast tego jest rysowana przez formant wykresu nie ma żadnych wbudowanych dostępne informacje. W związku z tym `ChartControlAccessibleObject` klasy zastąpienia <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> metodę, aby zwrócić `CurveLegendAccessibleObject` reprezentujący dostępnych informacji dla każdej części legendy. Gdy aplikacja dostępny aware używa tego formantu, formant może zapewnić niezbędne informacje dostępne.  
  
 Ten fragment kodu pokazuje, zastępowanie <xref:System.Windows.Forms.AccessibleObject.State%2A> właściwości. Zobacz <xref:System.Windows.Forms.AccessibleObject> Omówienie klasy, na przykład kompletny kod.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wszystkie obiekty powinien obsługiwać tę właściwość.</para>
        </block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetField">
      <MemberSignature Language="C#" Value="System.Reflection.FieldInfo IReflect.GetField (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.FieldInfo System.Reflection.IReflect.GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo Implements IReflect.GetField" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::FieldInfo ^ System.Reflection.IReflect.GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetField;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa pola, aby znaleźć.</param>
        <param name="bindingAttr">Atrybutów powiązania, używane do kontrolowania wyszukiwania.</param>
        <summary>Pobiera <see cref="T:System.Reflection.FieldInfo" /> obiekt odpowiadający określone pole i powiązania flagi. Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)" />.</summary>
        <returns>A <see cref="T:System.Reflection.FieldInfo" /> obiektu zawierającego informacje pola dla obiektu o nazwie, która spełnia kryteria ograniczające wyszukiwanie określonych w <paramref name="bindingAttr" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowany na <xref:System.Reflection.IReflect> interfejsu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Obiekt implementuje wiele pól o takiej samej nazwie.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetFields">
      <MemberSignature Language="C#" Value="System.Reflection.FieldInfo[] IReflect.GetFields (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.FieldInfo[] System.Reflection.IReflect.GetFields(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetFields (bindingAttr As BindingFlags) As FieldInfo() Implements IReflect.GetFields" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ System.Reflection.IReflect.GetFields(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetFields;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">Atrybutów powiązania, używane do kontrolowania wyszukiwania.</param>
        <summary>Pobiera tablicę elementów <see cref="T:System.Reflection.FieldInfo" /> odpowiadający wszystkie pola bieżącej klasy obiektów. Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)" />.</summary>
        <returns>Tablica <see cref="T:System.Reflection.FieldInfo" /> obiektów zawierający wszystkie informacje dla tego obiektu odbicia, który spełnia kryteria ograniczające wyszukiwanie określonego w polu <paramref name="bindingAttr" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każde pole musi mieć unikatową nazwę. <xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType> Flaga Określa, czy niepubliczne pola są uwzględnione w wyszukiwaniu. <xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType> Flaga Określa, że pola publiczne są uwzględniane w wyszukiwaniu.  
  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowany na <xref:System.Reflection.IReflect> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMember">
      <MemberSignature Language="C#" Value="System.Reflection.MemberInfo[] IReflect.GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MemberInfo[] System.Reflection.IReflect.GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo() Implements IReflect.GetMember" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ System.Reflection.IReflect.GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMember;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa elementu członkowskiego, aby znaleźć.</param>
        <param name="bindingAttr">Atrybutów powiązania, używane do kontrolowania wyszukiwania.</param>
        <summary>Pobiera tablicę elementów <see cref="T:System.Reflection.MemberInfo" /> obiekty odpowiadające na wszystkie publiczne elementy Członkowskie lub wszystkie elementy członkowskie, które odpowiadają określonej nazwie. Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)" />.</summary>
        <returns>Tablica <see cref="T:System.Reflection.MemberInfo" /> obiektów parametrowi name.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowany na <xref:System.Reflection.IReflect> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMembers">
      <MemberSignature Language="C#" Value="System.Reflection.MemberInfo[] IReflect.GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MemberInfo[] System.Reflection.IReflect.GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMembers (bindingAttr As BindingFlags) As MemberInfo() Implements IReflect.GetMembers" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ System.Reflection.IReflect.GetMembers(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMembers;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">Atrybutów powiązania, używane do kontrolowania wyszukiwania.</param>
        <summary>Pobiera tablicę elementów <see cref="T:System.Reflection.MemberInfo" /> odpowiadającym wszystkie publiczne elementy Członkowskie lub wszystkie elementy członkowskie klasy obiektów. Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)" />.</summary>
        <returns>Tablica <see cref="T:System.Reflection.MemberInfo" /> obiektów zawierające wszystkie informacje o członkach dla tego obiektu odbicia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowany na <xref:System.Reflection.IReflect> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMethod">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo IReflect.GetMethod (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo System.Reflection.IReflect.GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMethod (name As String, bindingAttr As BindingFlags) As MethodInfo Implements IReflect.GetMethod" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::MethodInfo ^ System.Reflection.IReflect.GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMethod;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa elementu członkowskiego, aby znaleźć.</param>
        <param name="bindingAttr">Atrybutów powiązania, używane do kontrolowania wyszukiwania.</param>
        <summary>Pobiera <see cref="T:System.Reflection.MethodInfo" /> obiekt odpowiadający określonej metody w ramach określone kryteria ograniczające wyszukiwanie. Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)" />.</summary>
        <returns>A <see cref="T:System.Reflection.MethodInfo" /> obiekt zawierający informacje o metodzie dopasowany jest oparty na metody nazwę i wyszukaj ograniczenia określone w <paramref name="bindingAttr" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowany na <xref:System.Reflection.IReflect> interfejsu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Obiekt implementuje wiele metod o tej samej nazwie.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMethod">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo IReflect.GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo System.Reflection.IReflect.GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::MethodInfo ^ System.Reflection.IReflect.GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers) = System::Reflection::IReflect::GetMethod;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa elementu członkowskiego, aby znaleźć.</param>
        <param name="bindingAttr">Atrybutów powiązania, używane do kontrolowania wyszukiwania.</param>
        <param name="binder">Obiekt, który implementuje <see cref="T:System.Reflection.Binder" />, zawierający właściwości związane z tej metody.</param>
        <param name="types">Tablica umożliwia wybranie jednego z przeciążonych metod.</param>
        <param name="modifiers">Tablica Modyfikatory parametrów umożliwia powiązanie, Praca z sygnaturami parametru, w których typy zostały zmodyfikowane.</param>
        <summary>Pobiera <see cref="T:System.Reflection.MethodInfo" /> obiekt odpowiadający określonej metody, przy użyciu tablicy typu do wyboru z przeciążonych metod. Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />.</summary>
        <returns>Żądana metoda zgodny z określonymi parametrami.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwracana jest wartość dopasowania na podstawie nazwy metody <xref:System.Reflection.BindingFlags?displayProperty=nameWithType> wyliczenie, rodzaj konwersji typu określonego przez `binder` parametr, przeciążenia, a <xref:System.Reflection.ParameterInfo?displayProperty=nameWithType> opisujący podpis metody.  
  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowany na <xref:System.Reflection.IReflect> interfejsu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Obiekt implementuje wiele metod o tej samej nazwie.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMethods">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo[] IReflect.GetMethods (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo[] System.Reflection.IReflect.GetMethods(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMethods (bindingAttr As BindingFlags) As MethodInfo() Implements IReflect.GetMethods" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ System.Reflection.IReflect.GetMethods(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMethods;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">Atrybutów powiązania, używane do kontrolowania wyszukiwania.</param>
        <summary>Pobiera tablicę elementów <see cref="T:System.Reflection.MethodInfo" /> obiektów za pomocą wszystkich metod publicznych lub wszystkie metody klasy. Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)" />.</summary>
        <returns>Tablica <see cref="T:System.Reflection.MethodInfo" /> obiektów zawierające wszystkie metody zdefiniowane dla tego obiektu odbicia, spełniające kryteria ograniczające wyszukiwanie określonych w <see langword="bindingAttr" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowany na <xref:System.Reflection.IReflect> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetProperties">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo[] IReflect.GetProperties (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo[] System.Reflection.IReflect.GetProperties(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetProperties (bindingAttr As BindingFlags) As PropertyInfo() Implements IReflect.GetProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ System.Reflection.IReflect.GetProperties(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetProperties;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">Atrybut wiązania używane do kontrolowania wyszukiwania.</param>
        <summary>Pobiera tablicę elementów <see cref="T:System.Reflection.PropertyInfo" /> odpowiadające na wszystkie właściwości publiczne lub wszystkie właściwości bieżącej klasy obiektów. Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)" />.</summary>
        <returns>Tablica <see cref="T:System.Reflection.PropertyInfo" /> obiektów dla wszystkich właściwości, które są zdefiniowane w obiekcie odbicia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowany na <xref:System.Reflection.IReflect> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetProperty">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo IReflect.GetProperty (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo System.Reflection.IReflect.GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetProperty (name As String, bindingAttr As BindingFlags) As PropertyInfo Implements IReflect.GetProperty" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::PropertyInfo ^ System.Reflection.IReflect.GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetProperty;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa właściwości, aby znaleźć.</param>
        <param name="bindingAttr">Atrybutów powiązania, używane do kontrolowania wyszukiwania.</param>
        <summary>Pobiera <see cref="T:System.Reflection.PropertyInfo" /> obiekt odpowiadający określonej właściwości w obszarze określone kryteria ograniczające wyszukiwanie. Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)" />.</summary>
        <returns>A <see cref="T:System.Reflection.PropertyInfo" /> obiekt znajduje się właściwość, która spełnia kryteria ograniczające wyszukiwanie określonych w <paramref name="bindingAttr" />, lub <see langword="null" /> Jeśli właściwość nie znajduje się.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowany na <xref:System.Reflection.IReflect> interfejsu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Obiekt implementuje wiele metod o tej samej nazwie.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetProperty">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo IReflect.GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo System.Reflection.IReflect.GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::PropertyInfo ^ System.Reflection.IReflect.GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers) = System::Reflection::IReflect::GetProperty;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa elementu członkowskiego, aby znaleźć.</param>
        <param name="bindingAttr">Atrybutów powiązania, używane do kontrolowania wyszukiwania.</param>
        <param name="binder">Obiekt, który implementuje obiekt wiążący, zawierający właściwości powiązanych z tej metody.</param>
        <param name="returnType">Tablica umożliwia wybranie jednego z przeciążonych metod.</param>
        <param name="types">Tablica Modyfikatory parametrów umożliwia powiązanie, Praca z sygnaturami parametru, w których typy zostały zmodyfikowane.</param>
        <param name="modifiers">Tablica, używane do wybierania Modyfikatory parametrów.</param>
        <summary>Pobiera <see cref="T:System.Reflection.PropertyInfo" /> obiekt odpowiadający określonej właściwości przy użyciu określone kryteria ograniczające wyszukiwanie. Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />.</summary>
        <returns>A <see cref="T:System.Reflection.PropertyInfo" /> obiekt znajduje się właściwość, jeśli właściwość o podanej nazwie znajdują się w tym obiekcie odbicia lub <see langword="null" /> Jeśli właściwość nie znajduje się.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowany na <xref:System.Reflection.IReflect> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.InvokeMember">
      <MemberSignature Language="C#" Value="object IReflect.InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Reflection.IReflect.InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo culture, string[] namedParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Reflection.IReflect.InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::String ^&gt; ^ namedParameters) = System::Reflection::IReflect::InvokeMember;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="namedParameters" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa elementu członkowskiego, aby znaleźć.</param>
        <param name="invokeAttr">Jedną z <see cref="T:System.Reflection.BindingFlags" /> atrybuty wywołania.</param>
        <param name="binder">Jedną z <see cref="T:System.Reflection.BindingFlags" /> flagi bitowe. Integrator implementuje zawierający właściwości powiązanych z tej metody.</param>
        <param name="target">Obiekt do wywołania określonego elementu członkowskiego. Ten parametr jest ignorowany dla statycznych elementów członkowskich.</param>
        <param name="args">Tablica obiektów, która zawiera liczbę, kolejność i typ parametrów elementu członkowskiego, do wywołania. Jest to pusta tablica, jeśli nie ma żadnych parametrów.</param>
        <param name="modifiers">Tablica <see cref="T:System.Reflection.ParameterModifier" /> obiektów.</param>
        <param name="culture">Wystąpienie <see cref="T:System.Globalization.CultureInfo" /> używane do sterowania wymuszanie typów.</param>
        <param name="namedParameters">Tablica ciągu, parametrów.</param>
        <summary>Wywołuje określony element członkowski. Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</summary>
        <returns>Określony element członkowski.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `invokeAttr` Parametru może być Konstruktor, metody, właściwości lub pola. Należy określić atrybut odpowiedniego wywołania. Wywołaj domyślny element członkowski klasy, przekazując ciąg pusty ("") jako nazwę elementu członkowskiego.  
  
 `modifiers` Parametr ma taką samą długość jak `args` parametr reprezentujący atrybuty argument wywołanego elementu członkowskiego w metadanych. Parametr może mieć następujące atrybuty: pdIn, pdOut, pdRetval, pdOptional i pdHasDefault. Reprezentują one [In] [Out], [retval] [opcjonalnie] i domyślnego parametru, odpowiednio.  
  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowany na <xref:System.Reflection.IReflect> interfejsu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Określono więcej niż jeden argument operacji zestawu pól.</exception>
        <exception cref="T:System.MissingFieldException">Nie można odnaleźć pola lub właściwości.</exception>
        <exception cref="T:System.MissingMethodException">Nie można odnaleźć metody.</exception>
        <exception cref="T:System.Security.SecurityException">Od prywatnej składowej jest wywoływana bez koniecznego <see cref="T:System.Security.Permissions.ReflectionPermission" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.UnderlyingSystemType">
      <MemberSignature Language="C#" Value="Type System.Reflection.IReflect.UnderlyingSystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#UnderlyingSystemType" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property UnderlyingSystemType As Type Implements IReflect.UnderlyingSystemType" />
      <MemberSignature Language="C++ CLI" Value="property Type ^ System::Reflection::IReflect::UnderlyingSystemType { Type ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Reflection.IReflect.UnderlyingSystemType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bazowy typ, który reprezentuje <see cref="T:System.Reflection.IReflect" /> obiektu. Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="P:System.Reflection.IReflect.UnderlyingSystemType" />.</summary>
        <value>Bazowy typ, który reprezentuje <see cref="T:System.Reflection.IReflect" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.AccessibleObject> wystąpienia jest rzutowany na <xref:System.Reflection.IReflect> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UseStdAccessibleObjects">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Kojarzy obiekt z wystąpieniem <see cref="T:System.Windows.Forms.AccessibleObject" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UseStdAccessibleObjects">
      <MemberSignature Language="C#" Value="protected void UseStdAccessibleObjects (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UseStdAccessibleObjects(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UseStdAccessibleObjects (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UseStdAccessibleObjects(IntPtr handle);" />
      <MemberSignature Language="F#" Value="member this.UseStdAccessibleObjects : nativeint -&gt; unit" Usage="accessibleObject.UseStdAccessibleObjects handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">
          <see cref="T:System.IntPtr" /> Zawierający uchwyt obiektu.</param>
        <summary>Kojarzy obiekt z wystąpieniem <see cref="T:System.Windows.Forms.AccessibleObject" /> oparte na uchwyt obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacje serwera mogą Wywołaj tę funkcję, które zawierają niestandardowy obiekt interfejsu użytkownika, który jest podobny do obiektu dostarczane przez system. Wywoływanie aplikacji serwera `CreateStdAccessibleObject` i zastąpić <xref:Accessibility.IAccessible> metody i właściwości w celu dopasowania ich obiektów niestandardowych. To podejście zapisuje deweloperów serwera pełni wdrażania wszystkich <xref:Accessibility.IAccessible> właściwości i metody. Ta funkcja jest podobny do `CreateStdAccessibleProxy`, chyba że `CreateStdAccessibleProxy` pozwala na określenie nazwy klasy jako parametr, natomiast `CreateStdAccessibleObject` używa nazwy klasy skojarzonej z `hwnd`.  
  
 Wywoływanie tej wersji `UseStdAccessible` jest taka sama jak wersja dwóch parametrów za pomocą obiektu klienta podczas wywoływania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseStdAccessibleObjects">
      <MemberSignature Language="C#" Value="protected void UseStdAccessibleObjects (IntPtr handle, int objid);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UseStdAccessibleObjects(native int handle, int32 objid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UseStdAccessibleObjects (handle As IntPtr, objid As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UseStdAccessibleObjects(IntPtr handle, int objid);" />
      <MemberSignature Language="F#" Value="member this.UseStdAccessibleObjects : nativeint * int -&gt; unit" Usage="accessibleObject.UseStdAccessibleObjects (handle, objid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="objid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="handle">
          <see cref="T:System.IntPtr" /> Zawierający uchwyt obiektu.</param>
        <param name="objid">Obiekt definiujący typ Int <c>obsługi</c> parametr odnosi się do.</param>
        <summary>Kojarzy obiekt z wystąpieniem <see cref="T:System.Windows.Forms.AccessibleObject" /> na podstawie dojścia i identyfikator obiektu obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tworzy obiekt dostępny za pomocą metody i właściwości dla określonego typu elementu interfejsu użytkownika dostarczane przez system.  
  
 Aplikacje serwera mogą Wywołaj tę funkcję, które zawierają niestandardowy obiekt interfejsu użytkownika, który jest podobny do obiektu dostarczane przez system. Wywoływanie aplikacji serwera `CreateStdAccessibleObject` i zastąpić <xref:Accessibility.IAccessible> metody i właściwości w celu dopasowania ich obiektów niestandardowych. To podejście zapisuje deweloperów serwera pełni wdrażania wszystkich <xref:Accessibility.IAccessible> właściwości i metody.  
  
 Nieprawidłowa `objid` wartości.  
  
|Obiekt|Wartość|Opis|  
|------------|-----------|-----------------|  
|ZGŁOŚ ALERT|0xFFFFFFF6|Odnosi się do komunikatu skojarzonego z okna lub aplikacji.|  
|KARETKI|0xFFFFFFF8|Odwołuje się do wstawiania tekstu paska (daszek) w oknie.|  
|KLIENT|0xFFFFFFFC|Odnosi się do obszaru klienckiego okna. W większości przypadków system operacyjny kontroluje elementy frame, i obiektu klienta zawiera wszystkie elementy, którymi steruje aplikacja.|  
|CURSOR|0xFFFFFFF7|Odwołanie do wskaźnika myszy. Istnieje tylko jeden wskaźnik myszy w systemie i nie jest elementem podrzędnym okna.|  
|HSCROLL|0xFFFFFFFA|Odnosi się do okna poziomy pasek przewijania.|  
|MENU|0xFFFFFFFD|Odnosi się do okna paska menu.|  
|WŁAŚCIWOŚĆ SIZEGRIP MA|0xFFFFFFF9|Odnosi się do uchwytu rozmiar okna, jako składnik opcjonalny ramki znajdujący się w prawym dolnym rogu ramki okna.|  
|DŹWIĘK|0xFFFFFFF5|Odnosi się do obiektu sound. Obiekty dźwiękowe nie ma lokalizacji ekranu lub elementy podrzędne, ale atrybuty nazwy i stanu. Są one elementami podrzędnymi aplikacji odtwarzanie dźwięku.|  
|SYSMENU|0xFFFFFFFF|Odnosi się do okna, menu systemowego.|  
|PASEK TYTUŁU|0xFFFFFFFE|Odnosi się do pasek tytułu okna.|  
|VSCROLL|0xFFFFFFFB|Odnosi się do okna pionowy pasek przewijania.|  
|OKNO|0x00000000|Odnosi się do samego okna, a nie do obiektu podrzędnego.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public virtual string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Windows.Forms.AccessibleObject.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość dostępnego obiektu.</summary>
        <value>Wartość dostępnego obiektu lub <see langword="null" /> Jeśli obiekt nie ma ustawionej wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj <xref:System.Windows.Forms.AccessibleObject.Value%2A> właściwość reprezentuje informacje wizualne zawierana przez obiekt. Nie wszystkie obiekty obsługują <xref:System.Windows.Forms.AccessibleObject.Value%2A> właściwości.  
  
 W większości przypadków <xref:System.Windows.Forms.AccessibleObject.Value%2A> właściwość jest używana do poinformuj klienta o informacjach visual obiekt zawiera. Na przykład wartość kontrolki edycji to tekst, który zawiera, ale element menu nie ma wartości.  
  
 <xref:System.Windows.Forms.AccessibleObject.Value%2A> Właściwość może dostarczyć hierarchiczne informacji w przypadkach, takich jak kontrolki widoku drzewa. Mimo że obiektu nadrzędnego w kontrolce widok drzewa nie dostarcza informacji w <xref:System.Windows.Forms.AccessibleObject.Value%2A> właściwość, każdy element w kontrolce ma wartość liczony od zera, odpowiadająca jej poziom w hierarchii. Najwyższego poziomu elementy mają wartość zero, drugiego poziomu elementów ma wartość 1 i tak dalej.  
  
> [!NOTE]
>  Wartości zwracane z paska przewijania i trackbar dostępne obiekty wskazywać procenty, dzięki czemu są one liczby całkowite z zakresu od 0 do 100 (włącznie).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Wartość nie może ustawić lub pobrać.</exception>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
      </Docs>
    </Member>
  </Members>
</Type>