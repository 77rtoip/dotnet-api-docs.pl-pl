<Type Name="Binding" FullName="System.Windows.Forms.Binding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="142c020add27885f171a474501f9989b81000e3a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69195999" /></Metadata><TypeSignature Language="C#" Value="public class Binding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Binding extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Binding" />
  <TypeSignature Language="VB.NET" Value="Public Class Binding" />
  <TypeSignature Language="C++ CLI" Value="public ref class Binding" />
  <TypeSignature Language="F#" Value="type Binding = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ListBindingConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje proste powiązanie między wartością właściwości obiektu a wartością właściwości formantu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Binding> Użyj klasy, aby utworzyć i zachować proste powiązanie między właściwością kontrolki a właściwością obiektu lub właściwością bieżącego obiektu na liście obiektów.  
  
 Jako przykład pierwszego przypadku można <xref:System.Windows.Forms.Control.Text%2A> powiązać Właściwość <xref:System.Windows.Forms.TextBox> kontrolki `Customer` z `FirstName` właściwością obiektu. Przykładem drugiego przypadku może być <xref:System.Windows.Forms.Control.Text%2A> powiązanie właściwości <xref:System.Windows.Forms.TextBox> kontrolki `FirstName` z właściwością <xref:System.Data.DataTable> zawierającą klientów.  
  
 Klasa umożliwia również formatowanie wartości do wyświetlania <xref:System.Windows.Forms.Binding.Format> przez zdarzenie i <xref:System.Windows.Forms.Binding.Parse> pobieranie sformatowanych wartości za pomocą zdarzenia. <xref:System.Windows.Forms.Binding>  
  
 Podczas konstruowania <xref:System.Windows.Forms.Binding> wystąpienia z <xref:System.Windows.Forms.Binding.%23ctor%2A> konstruktorem należy określić trzy elementy:  
  
-   Nazwa właściwości kontrolki, z którą ma zostać utworzone powiązanie.  
  
-   Źródło danych.  
  
-   Ścieżka nawigacji, która jest rozpoznawana jako lista lub właściwość w źródle danych. Ścieżka nawigacji służy również do tworzenia <xref:System.Windows.Forms.Binding.BindingMemberInfo%2A> właściwości obiektu.  
  
 Najpierw należy określić nazwę właściwości kontrolki, do której mają być powiązane dane. Na przykład aby wyświetlić dane w <xref:System.Windows.Forms.TextBox> kontrolce, należy <xref:System.Windows.Forms.TextBoxBase.Text%2A> określić właściwość.  
  
 Następnie można określić wystąpienie jednej z klas w poniższej tabeli jako źródło danych.  
  
|Opis|C#przyklad|  
|-----------------|-----------------|  
|Każda klasa implementująca <xref:System.ComponentModel.IBindingList> lub <xref:System.ComponentModel.ITypedList>. Należą do nich następujące elementy <xref:System.Data.DataSet>: <xref:System.Data.DataTable>, <xref:System.Data.DataView>, lub <xref:System.Data.DataViewManager>.|`DataSet ds = new DataSet("myDataSet");`|  
|Każda klasa, która <xref:System.Collections.IList> implementuje tworzenie indeksowanych kolekcji obiektów. Przed utworzeniem programu <xref:System.Windows.Forms.Binding>należy utworzyć i wypełnić kolekcję. Wszystkie obiekty na liście muszą być tego samego typu; w przeciwnym razie zostanie zgłoszony wyjątek.|`ArrayList ar1 = new ArrayList;  Customer1 cust1 = new Customer("Louis");  ar1.Add(cust1);`|  
|Silnie wpisane <xref:System.Collections.IList> obiekty o jednoznacznie określonym typie|`Customer [] custList = new Customer[3];`|  
  
 Po trzecie należy określić ścieżkę nawigacji, która może być pustym ciągiem (""), pojedynczą nazwą właściwości lub hierarchią rozdzielaną kropką nazw. Jeśli ustawisz ścieżkę nawigacji do pustego ciągu, <xref:System.Object.ToString%2A> Metoda zostanie wywołana na źródłowym obiekcie źródła danych.  
  
 Jeśli źródło danych to <xref:System.Data.DataTable>, które może zawierać wiele <xref:System.Data.DataColumn> obiektów, ścieżka nawigacji musi być używana do rozpoznawania do konkretnej kolumny.  
  
> [!NOTE]
>  Gdy źródło danych <xref:System.Data.DataSet>jest, <xref:System.Data.DataViewManager>, lub <xref:System.Data.DataTable>, jest w rzeczywistości powiązane z <xref:System.Data.DataView>. W związku z tym wiersze powiązane są faktycznie <xref:System.Data.DataRowView> obiektami.  
  
 Ścieżka nawigacji rozdzielana kropkami jest wymagana, gdy źródło danych jest ustawione na obiekt, który zawiera wiele <xref:System.Data.DataTable> obiektów (takich <xref:System.Data.DataSet> jak lub <xref:System.Data.DataViewManager>). Można również użyć rozdzielanej kropką ścieżki nawigacji, gdy utworzysz powiązanie z obiektem, którego właściwości zwracają odwołania do innych obiektów (takich jak Klasa z właściwościami, które zwracają inne obiekty klasy). Na przykład następujące ścieżki nawigacji wszystkie opisują prawidłowe pola danych:  
  
-   "Size.Height"  
  
-   "Suppliers.CompanyName"  
  
-   "Regions.regionsToCustomers.CustomerFirstName"  
  
-   "Regions.regionsToCustomers.customersToOrders.ordersToDetails.Quantity"  
  
 Każdy element członkowski ścieżki może zwracać właściwość, która jest rozpoznawana jako pojedyncza wartość (na przykład liczba całkowita), lub listę wartości (takich jak tablica ciągów). Mimo że każdy element członkowski w ścieżce może być listą lub właściwością, końcowy element członkowski musi być rozpoznawany jako właściwość. Każdy członek kompiluje w poprzednim elemencie członkowskim: Wartość "size. Height" jest rozpoznawana <xref:System.Drawing.Size.Height%2A> jako właściwość bieżącego <xref:System.Drawing.Size>elementu; "Regiony. regionsToCustomers. CustomerFirstName" jest rozpoznawana jako imię dla bieżącego klienta, gdzie klient jest jednym z klientów w bieżącym regionie.  
  
 A <xref:System.Data.DataRelation> zwraca listę wartości, łącząc jeden <xref:System.Data.DataTable> <xref:System.Data.DataSet>z drugim <xref:System.Data.DataTable> w. <xref:System.Data.DataColumn.ColumnName%2A> <xref:System.Data.DataTable.TableName%2A> <xref:System.Data.DataRelation.RelationName%2A>Jeśli zawiera <xref:System.Data.DataSet> <xref:System.Data.DataRelation> obiekty, można określić składową danych, a po niej, a następnie a. Na przykład jeśli <xref:System.Data.DataTable> nazwa "dostawcy" <xref:System.Data.DataRelation> zawiera nazwę "suppliers2products", element członkowski danych może mieć wartość "dostawcy. suppliers2products. ProductName".  
  
 Źródło danych może składać się z zestawu klas pokrewnych. Załóżmy na przykład, że Przypuśćmy zestaw klas, które są katalogami systemów słonecznych. Klasa o nazwie `System` zawiera właściwość o nazwie `Stars` `Star` , która zwraca kolekcję obiektów. Każdy `Star` obiekt ma `Name` `Planets` `Planet` i `Mass` właściwości, a także Właściwość zwracająca kolekcję obiektów. W tym systemie każdy globalnej ma `Mass` także właściwości i. `Name` Każdy `Planet` `Moon` `Name` obiekt `Moons` ma dodatkowo Właściwość zwracającą kolekcję`Mass` obiektów, z których każdy ma również właściwości. Jeśli określisz `System` obiekt jako źródło danych, możesz określić dowolny z następujących elementów jako element członkowski danych:  
  
-   "Stars.Name"  
  
-   "Stars.Mass"  
  
-   "Stars.Planets.Name"  
  
-   "Stars.Planets.Mass"  
  
-   "Stars.Planets.Moons.Name"  
  
-   "Stars.Planets.Moons.Mass"  
  
 Kontrolki, które mogą być prostą funkcją powiązaną z <xref:System.Windows.Forms.Binding> kolekcją obiektów <xref:System.Windows.Forms.ControlBindingsCollection>w obiekcie, do których można <xref:System.Windows.Forms.Control.DataBindings%2A> uzyskać dostęp za pomocą właściwości kontrolki. Dodaj <xref:System.Windows.Forms.Binding> do kolekcji, <xref:System.Windows.Forms.ControlBindingsCollection.Add%2A> wywołując metodę, a tym samym powiązać właściwość kontrolki z właściwością obiektu (lub z właściwością bieżącego obiektu na liście).  
  
 Można utworzyć proste powiązania z dowolnym obiektem, który pochodzi z <xref:System.Windows.Forms.Control?displayProperty=nameWithType> klasy, na przykład następujące kontrolki systemu Windows:  
  
-   <xref:System.Windows.Forms.Button>  
  
-   <xref:System.Windows.Forms.CheckBox>  
  
-   <xref:System.Windows.Forms.CheckedListBox>  
  
-   <xref:System.Windows.Forms.ComboBox>  
  
-   <xref:System.Windows.Forms.DateTimePicker>  
  
-   <xref:System.Windows.Forms.DomainUpDown>  
  
-   <xref:System.Windows.Forms.GroupBox>  
  
-   <xref:System.Windows.Forms.HScrollBar>  
  
-   <xref:System.Windows.Forms.Label>  
  
-   <xref:System.Windows.Forms.LinkLabel>  
  
-   <xref:System.Windows.Forms.ListBox>  
  
-   <xref:System.Windows.Forms.ListView>  
  
-   <xref:System.Windows.Forms.MonthCalendar>  
  
-   <xref:System.Windows.Forms.NumericUpDown>  
  
-   <xref:System.Windows.Forms.PictureBox>  
  
-   <xref:System.Windows.Forms.ProgressBar>  
  
-   <xref:System.Windows.Forms.RadioButton>  
  
-   <xref:System.Windows.Forms.RichTextBox>  
  
-   <xref:System.Windows.Forms.ScrollBar>  
  
-   <xref:System.Windows.Forms.StatusBar>  
  
-   <xref:System.Windows.Forms.TextBox>  
  
-   <xref:System.Windows.Forms.TreeView>  
  
-   <xref:System.Windows.Forms.VScrollBar>  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListControl.SelectedValue%2A> Tylko właściwość <xref:System.Windows.Forms.ComboBox>, ,<xref:System.Windows.Forms.CheckedListBox>i kontrolka<xref:System.Windows.Forms.ListBox> jest prosta.  
  
 Klasa jest klasą abstrakcyjną, która zarządza <xref:System.Windows.Forms.Binding> wszystkimi obiektami dla określonego źródła danych i elementu członkowskiego danych. <xref:System.Windows.Forms.BindingManagerBase> Klasy pochodne od <xref:System.Windows.Forms.BindingManagerBase> <xref:System.Windows.Forms.CurrencyManager> są <xref:System.Windows.Forms.PropertyManager> klasami i. Sposób zarządzania jest zależny od tego, <xref:System.Windows.Forms.Binding> czy jest to powiązanie listy, czy powiązanie właściwości. <xref:System.Windows.Forms.Binding> Na przykład, jeśli jest to powiązanie listy, można użyć <xref:System.Windows.Forms.BindingManagerBase> , aby <xref:System.Windows.Forms.BindingManagerBase.Position%2A> określić na liście. <xref:System.Windows.Forms.BindingManagerBase.Position%2A>w związku z tym określa, który element (z wszystkich elementów na liście) jest rzeczywiście związany z kontrolką. Aby przywrócić odpowiednie <xref:System.Windows.Forms.BindingManagerBase>, <xref:System.Windows.Forms.BindingContext>Użyj.  
  
 Aby dodać nowy wiersz do zestawu kontrolek powiązanych z tym samym <xref:System.Windows.Forms.Binding.DataSource%2A>, <xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> Użyj metody <xref:System.Windows.Forms.BindingManagerBase> klasy. Użyj właściwości klasy, <xref:System.Windows.Forms.BindingContext> aby przywrócić odpowiednie <xref:System.Windows.Forms.CurrencyManager>. <xref:System.Windows.Forms.BindingContext.Item%2A> Aby pominąć dodanie nowego wiersza, użyj <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy formularz systemu Windows z kilkoma kontrolkami, które demonstrują proste powiązanie danych. <xref:System.Data.DataSet> Przykład tworzy przy użyciu dwóch tabel o nazwach `Orders` `Customers` i i <xref:System.Data.DataRelation> o nazwie `custToOrders`. Cztery kontrolki ( <xref:System.Windows.Forms.DateTimePicker> a i <xref:System.Windows.Forms.TextBox> trzy kontrolki) to dane powiązane z kolumnami w tabelach. Dla każdej kontrolki przykład tworzy i dodaje <xref:System.Windows.Forms.Binding> do kontrolki <xref:System.Windows.Forms.Control.DataBindings%2A> przez właściwość. Przykład zwraca <xref:System.Windows.Forms.BindingManagerBase> dla każdej tabeli za pomocą <xref:System.Windows.Forms.BindingContext>formularza. Cztery <xref:System.Windows.Forms.Button> kontrolki zwiększają lub <xref:System.Windows.Forms.BindingManagerBase.Position%2A> zmniejszają Właściwość <xref:System.Windows.Forms.BindingManagerBase> obiektów.  
  
 [!code-cpp[Classic Binding Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding Example/CS/source.cs#1)]
 [!code-vb[Classic Binding Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding Example/VB/source.vb#1)]  
 
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.BindingContext" />
    <altmember cref="T:System.Windows.Forms.BindingManagerBase" />
    <altmember cref="T:System.Windows.Forms.ComboBox" />
    <altmember cref="T:System.Windows.Forms.DataGrid" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.Binding" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string propertyName, object dataSource, string dataMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, object dataSource, string dataMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.#ctor(System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyName As String, dataSource As Object, dataMember As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ propertyName, System::Object ^ dataSource, System::String ^ dataMember);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Binding : string * obj * string -&gt; System.Windows.Forms.Binding" Usage="new System.Windows.Forms.Binding (propertyName, dataSource, dataMember)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Nazwa właściwości kontrolki, która ma zostać powiązana.</param>
        <param name="dataSource"><see cref="T:System.Object" /> Reprezentuje źródło danych.</param>
        <param name="dataMember">Właściwość lub lista, z którą ma zostać utworzone powiązanie.</param>
        <summary>Inicjuje nowe wystąpienie klasy, która <see cref="T:System.Windows.Forms.Binding" /> jest prosta — tworzy powiązanie wskazanej właściwości kontrolki z określonym elementem członkowskim danych źródła danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można określić wystąpienie dowolnej z następujących klas dla źródła danych:  
  
-   <xref:System.Data.DataSet>  
  
-   <xref:System.Data.DataTable>  
  
-   <xref:System.Data.DataView>  
  
-   <xref:System.Data.DataViewManager>  
  
-   <xref:System.Windows.Forms.BindingSource>  
  
-   Każda klasa implementująca <xref:System.Collections.IList> interfejs  
  
-   Dowolna klasa  
  
 Zapoznaj <xref:System.Windows.Forms.Binding> się z klasą, aby uzyskać `dataMember` więcej informacji na temat tworzenia ciągu.  
  
 Po utworzeniu powiązania z właściwością kontrolki nowy <xref:System.Windows.Forms.Binding> program sprawdza zdarzenia uwidocznione przez formant powiązany i dołącza do dwóch określonych zdarzeń:  
  
-   <xref:System.Windows.Forms.Control.Validating?displayProperty=nameWithType>  
  
-   Zdarzenie o nazwie *PropertyName* `Changed` <xref:System.Windows.Forms.Control.BackColorChanged?displayProperty=nameWithType>(na przykład)  
  
 Jeśli podjęto próbę utworzenia powiązania z właściwością, która nie istnieje <xref:System.ArgumentException> , zostanie ona zgłoszona <xref:System.Windows.Forms.Binding> , gdy zostanie <xref:System.Windows.Forms.Control.DataBindings%2A?displayProperty=nameWithType> dodany do kolekcji kontrolki.  
  
   
  
## Examples  
 Poniższy przykład kodu wiąże <xref:System.Windows.Forms.TextBox> formant z kolumną tabeli <xref:System.Data.DataSet> w nazwanym `myDataSet`. Przykład wymaga, aby został zadeklarowany `myDataSet` w sekcji deklaracji modułu.  
  
 [!code-cpp[Classic Binding.Binding Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.Binding Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.Binding Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.Binding Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.Binding Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.Binding Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><paramref name="propertyName" />nie jest prawidłową właściwością kontrolki ani pustym ciągiem ("").</exception>
        <exception cref="T:System.ArgumentException">Właściwość określona przez <paramref name="propertyName" /> nie istnieje w kontrolce.</exception>
        <altmember cref="T:System.Windows.Forms.BindingsCollection" />
        <altmember cref="T:System.Windows.Forms.CurrencyManager" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string propertyName, object dataSource, string dataMember, bool formattingEnabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, object dataSource, string dataMember, bool formattingEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.#ctor(System.String,System.Object,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyName As String, dataSource As Object, dataMember As String, formattingEnabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ propertyName, System::Object ^ dataSource, System::String ^ dataMember, bool formattingEnabled);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Binding : string * obj * string * bool -&gt; System.Windows.Forms.Binding" Usage="new System.Windows.Forms.Binding (propertyName, dataSource, dataMember, formattingEnabled)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataSource" Type="System.Object" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataMember" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="formattingEnabled" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="propertyName">Nazwa właściwości kontrolki, która ma zostać powiązana.</param>
        <param name="dataSource"><see cref="T:System.Object" /> Reprezentuje źródło danych.</param>
        <param name="dataMember">Właściwość lub lista, z którą ma zostać utworzone powiązanie.</param>
        <param name="formattingEnabled"><see langword="true" />Aby sformatować wyświetlane dane; w przeciwnym razie. <see langword="false" /></param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.Forms.Binding" /> klasy, która wiąże wskazanej właściwości kontrolki z określonym elementem członkowskim danych źródła danych i opcjonalnie umożliwia stosowanie formatowania.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Właściwość określona przez <paramref name="propertyName" /> nie istnieje w kontrolce.  
  
—lub— 
Dana właściwość jest właściwością tylko do odczytu.</exception>
        <exception cref="T:System.Exception">Formatowanie jest wyłączone i <paramref name="propertyName" /> nie jest prawidłową właściwością kontrolki ani pustym ciągiem ("").</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string propertyName, object dataSource, string dataMember, bool formattingEnabled, System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, object dataSource, string dataMember, bool formattingEnabled, valuetype System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.#ctor(System.String,System.Object,System.String,System.Boolean,System.Windows.Forms.DataSourceUpdateMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ propertyName, System::Object ^ dataSource, System::String ^ dataMember, bool formattingEnabled, System::Windows::Forms::DataSourceUpdateMode dataSourceUpdateMode);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Binding : string * obj * string * bool * System.Windows.Forms.DataSourceUpdateMode -&gt; System.Windows.Forms.Binding" Usage="new System.Windows.Forms.Binding (propertyName, dataSource, dataMember, formattingEnabled, dataSourceUpdateMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataSource" Type="System.Object" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataMember" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="formattingEnabled" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataSourceUpdateMode" Type="System.Windows.Forms.DataSourceUpdateMode" Index="4" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="propertyName">Nazwa właściwości kontrolki, która ma zostać powiązana.</param>
        <param name="dataSource"><see cref="T:System.Object" /> Reprezentujący źródło danych.</param>
        <param name="dataMember">Właściwość lub lista, z którą ma zostać utworzone powiązanie.</param>
        <param name="formattingEnabled"><see langword="true" />Aby sformatować wyświetlane dane; w przeciwnym razie. <see langword="false" /></param>
        <param name="dataSourceUpdateMode">Jedna z <see cref="T:System.Windows.Forms.DataSourceUpdateMode" /> wartości.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.Forms.Binding" /> klasy, która wiąże określoną właściwość kontrolki z określonym elementem członkowskim danych określonego źródła danych. Opcjonalnie umożliwia formatowanie i propagowanie wartości do źródła danych na podstawie określonego ustawienia aktualizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można określić wystąpienie dowolnej z następujących klas dla źródła danych:  
  
-   <xref:System.Data.DataSet>  
  
-   <xref:System.Data.DataTable>  
  
-   <xref:System.Data.DataView>  
  
-   <xref:System.Data.DataViewManager>  
  
-   <xref:System.Windows.Forms.BindingSource>  
  
-   Każda klasa implementująca <xref:System.Collections.IList> interfejs  
  
-   Dowolna klasa  
  
 Zapoznaj <xref:System.Windows.Forms.Binding> się z klasą, aby uzyskać `dataMember` więcej informacji na temat tworzenia ciągu.  
  
 Po utworzeniu powiązania z właściwością kontrolki nowy <xref:System.Windows.Forms.Binding> program sprawdza zdarzenia uwidocznione przez formant powiązany i dołącza do dwóch określonych zdarzeń:  
  
-   <xref:System.Windows.Forms.Control.Validating?displayProperty=nameWithType>.  
  
-   Zdarzenie o nazwie *PropertyName* `Changed` <xref:System.Windows.Forms.Control.BackColorChanged?displayProperty=nameWithType>(na przykład)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Właściwość określona przez <paramref name="propertyName" /> nie istnieje w kontrolce.  
  
—lub— 
Określone źródło danych lub element członkowski danych lub właściwość kontrolki są skojarzone z innym powiązaniem w kolekcji.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string propertyName, object dataSource, string dataMember, bool formattingEnabled, System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode, object nullValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, object dataSource, string dataMember, bool formattingEnabled, valuetype System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode, object nullValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.#ctor(System.String,System.Object,System.String,System.Boolean,System.Windows.Forms.DataSourceUpdateMode,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ propertyName, System::Object ^ dataSource, System::String ^ dataMember, bool formattingEnabled, System::Windows::Forms::DataSourceUpdateMode dataSourceUpdateMode, System::Object ^ nullValue);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Binding : string * obj * string * bool * System.Windows.Forms.DataSourceUpdateMode * obj -&gt; System.Windows.Forms.Binding" Usage="new System.Windows.Forms.Binding (propertyName, dataSource, dataMember, formattingEnabled, dataSourceUpdateMode, nullValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataSource" Type="System.Object" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataMember" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="formattingEnabled" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataSourceUpdateMode" Type="System.Windows.Forms.DataSourceUpdateMode" Index="4" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="nullValue" Type="System.Object" Index="5" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="propertyName">Nazwa właściwości kontrolki, która ma zostać powiązana.</param>
        <param name="dataSource"><see cref="T:System.Object" /> Reprezentujący źródło danych.</param>
        <param name="dataMember">Właściwość lub lista, z którą ma zostać utworzone powiązanie.</param>
        <param name="formattingEnabled"><see langword="true" />Aby sformatować wyświetlane dane; w przeciwnym razie. <see langword="false" /></param>
        <param name="dataSourceUpdateMode">Jedna z <see cref="T:System.Windows.Forms.DataSourceUpdateMode" /> wartości.</param>
        <param name="nullValue">Ma być stosowana do właściwości kontroli powiązanej, jeśli wartość źródła danych to <see cref="T:System.DBNull" />. <see cref="T:System.Object" /></param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.Forms.Binding" /> klasy, która wiąże wskazanej właściwości kontrolki z określonym elementem członkowskim danych określonego źródła danych. Opcjonalnie umożliwia formatowanie, propaguje wartości do źródła danych na podstawie określonego ustawienia aktualizacji i ustawia właściwość na wartość określoną, gdy <see cref="T:System.DBNull" /> zostanie zwrócona ze źródła danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można określić wystąpienie dowolnej z następujących klas dla źródła danych:  
  
-   <xref:System.Data.DataSet>  
  
-   <xref:System.Data.DataTable>  
  
-   <xref:System.Data.DataView>  
  
-   <xref:System.Data.DataViewManager>  
  
-   <xref:System.Windows.Forms.BindingSource>  
  
-   Każda klasa implementująca <xref:System.Collections.IList> interfejs  
  
-   Dowolna klasa  
  
 Zapoznaj <xref:System.Windows.Forms.Binding> się z klasą, aby uzyskać `dataMember` więcej informacji na temat tworzenia ciągu.  
  
 Po utworzeniu powiązania z właściwością kontrolki nowy <xref:System.Windows.Forms.Binding> program sprawdza zdarzenia uwidocznione przez formant powiązany i dołącza do dwóch określonych zdarzeń:  
  
-   <xref:System.Windows.Forms.Control.Validating?displayProperty=nameWithType>  
  
-   Zdarzenie o nazwie *PropertyName* `Changed` <xref:System.Windows.Forms.Control.BackColorChanged?displayProperty=nameWithType>(na przykład)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Właściwość określona przez <paramref name="propertyName" /> nie istnieje w kontrolce.  
  
—lub— 
Określone źródło danych lub element członkowski danych lub właściwość kontrolki są skojarzone z innym powiązaniem w kolekcji.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string propertyName, object dataSource, string dataMember, bool formattingEnabled, System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode, object nullValue, string formatString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, object dataSource, string dataMember, bool formattingEnabled, valuetype System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode, object nullValue, string formatString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.#ctor(System.String,System.Object,System.String,System.Boolean,System.Windows.Forms.DataSourceUpdateMode,System.Object,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ propertyName, System::Object ^ dataSource, System::String ^ dataMember, bool formattingEnabled, System::Windows::Forms::DataSourceUpdateMode dataSourceUpdateMode, System::Object ^ nullValue, System::String ^ formatString);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Binding : string * obj * string * bool * System.Windows.Forms.DataSourceUpdateMode * obj * string -&gt; System.Windows.Forms.Binding" Usage="new System.Windows.Forms.Binding (propertyName, dataSource, dataMember, formattingEnabled, dataSourceUpdateMode, nullValue, formatString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataSource" Type="System.Object" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataMember" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="formattingEnabled" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataSourceUpdateMode" Type="System.Windows.Forms.DataSourceUpdateMode" Index="4" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="nullValue" Type="System.Object" Index="5" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="formatString" Type="System.String" Index="6" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="propertyName">Nazwa właściwości kontrolki, która ma zostać powiązana.</param>
        <param name="dataSource"><see cref="T:System.Object" /> Reprezentujący źródło danych.</param>
        <param name="dataMember">Właściwość lub lista, z którą ma zostać utworzone powiązanie.</param>
        <param name="formattingEnabled"><see langword="true" />Aby sformatować wyświetlane dane; w przeciwnym razie. <see langword="false" /></param>
        <param name="dataSourceUpdateMode">Jedna z <see cref="T:System.Windows.Forms.DataSourceUpdateMode" /> wartości.</param>
        <param name="nullValue">Ma być stosowana do właściwości kontroli powiązanej, jeśli wartość źródła danych to <see cref="T:System.DBNull" />. <see cref="T:System.Object" /></param>
        <param name="formatString">Co najmniej jeden znak specyfikatora formatu, który wskazuje, jak ma być wyświetlana wartość.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.Forms.Binding" /> klasy, która wiąże określoną właściwość kontrolki z określonym elementem członkowskim danych określonego źródła danych. Opcjonalnie umożliwia formatowanie z określonym ciągiem formatu; propaguje wartości do źródła danych na podstawie określonego ustawienia aktualizacji. i ustawia właściwość na określoną wartość, gdy <see cref="T:System.DBNull" /> zostanie zwrócona ze źródła danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można określić wystąpienie dowolnej z następujących klas dla źródła danych:  
  
-   <xref:System.Data.DataSet>  
  
-   <xref:System.Data.DataTable>  
  
-   <xref:System.Data.DataView>  
  
-   <xref:System.Data.DataViewManager>  
  
-   <xref:System.Windows.Forms.BindingSource>  
  
-   Każda klasa implementująca <xref:System.Collections.IList> interfejs  
  
-   Dowolna klasa  
  
 Zapoznaj <xref:System.Windows.Forms.Binding> się z klasą, aby uzyskać `dataMember` więcej informacji na temat tworzenia ciągu.  
  
 Po utworzeniu powiązania z właściwością kontrolki nowy <xref:System.Windows.Forms.Binding> program sprawdza zdarzenia uwidocznione przez formant powiązany i dołącza do dwóch określonych zdarzeń:  
  
-   <xref:System.Windows.Forms.Control.Validating?displayProperty=nameWithType>  
  
-   Zdarzenie o nazwie *PropertyName* `Changed` <xref:System.Windows.Forms.Control.BackColorChanged?displayProperty=nameWithType>(na przykład)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Właściwość określona przez <paramref name="propertyName" /> nie istnieje w kontrolce.  
  
—lub— 
Określone źródło danych lub element członkowski danych lub właściwość kontrolki są skojarzone z innym powiązaniem w kolekcji.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string propertyName, object dataSource, string dataMember, bool formattingEnabled, System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode, object nullValue, string formatString, IFormatProvider formatInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, object dataSource, string dataMember, bool formattingEnabled, valuetype System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode, object nullValue, string formatString, class System.IFormatProvider formatInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.#ctor(System.String,System.Object,System.String,System.Boolean,System.Windows.Forms.DataSourceUpdateMode,System.Object,System.String,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ propertyName, System::Object ^ dataSource, System::String ^ dataMember, bool formattingEnabled, System::Windows::Forms::DataSourceUpdateMode dataSourceUpdateMode, System::Object ^ nullValue, System::String ^ formatString, IFormatProvider ^ formatInfo);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Binding : string * obj * string * bool * System.Windows.Forms.DataSourceUpdateMode * obj * string * IFormatProvider -&gt; System.Windows.Forms.Binding" Usage="new System.Windows.Forms.Binding (propertyName, dataSource, dataMember, formattingEnabled, dataSourceUpdateMode, nullValue, formatString, formatInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataSource" Type="System.Object" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataMember" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="formattingEnabled" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataSourceUpdateMode" Type="System.Windows.Forms.DataSourceUpdateMode" Index="4" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="nullValue" Type="System.Object" Index="5" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="formatString" Type="System.String" Index="6" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="formatInfo" Type="System.IFormatProvider" Index="7" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="propertyName">Nazwa właściwości kontrolki, która ma zostać powiązana.</param>
        <param name="dataSource"><see cref="T:System.Object" /> Reprezentujący źródło danych.</param>
        <param name="dataMember">Właściwość lub lista, z którą ma zostać utworzone powiązanie.</param>
        <param name="formattingEnabled"><see langword="true" />Aby sformatować wyświetlane dane; w przeciwnym razie. <see langword="false" /></param>
        <param name="dataSourceUpdateMode">Jedna z <see cref="T:System.Windows.Forms.DataSourceUpdateMode" /> wartości.</param>
        <param name="nullValue">Ma być stosowana do właściwości kontroli powiązanej, jeśli wartość źródła danych to <see cref="T:System.DBNull" />. <see cref="T:System.Object" /></param>
        <param name="formatString">Co najmniej jeden znak specyfikatora formatu, który wskazuje, jak ma być wyświetlana wartość.</param>
        <param name="formatInfo">Implementacja programu <see cref="T:System.IFormatProvider" /> w celu przesłania domyślnego zachowania formatowania.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.Forms.Binding" /> klasy z określoną właściwością kontrolki do określonego elementu członkowskiego danych określonego źródła danych. Opcjonalnie umożliwia formatowanie z określonym ciągiem formatu; propaguje wartości do źródła danych na podstawie określonego ustawienia aktualizacji. Włącza formatowanie z określonym ciągiem formatu; ustawia właściwość na określoną wartość, gdy <see cref="T:System.DBNull" /> zostanie zwrócona ze źródła danych, i ustawia określonego dostawcę formatu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można określić wystąpienie dowolnej z następujących klas dla źródła danych:  
  
-   <xref:System.Data.DataSet>  
  
-   <xref:System.Data.DataTable>  
  
-   <xref:System.Data.DataView>  
  
-   <xref:System.Data.DataViewManager>  
  
-   <xref:System.Windows.Forms.BindingSource>  
  
-   Każda klasa implementująca <xref:System.Collections.IList> interfejs  
  
-   Dowolna klasa  
  
 Zapoznaj <xref:System.Windows.Forms.Binding> się z klasą, aby uzyskać `dataMember` więcej informacji na temat tworzenia ciągu.  
  
 Po utworzeniu powiązania z właściwością kontrolki nowy <xref:System.Windows.Forms.Binding> program sprawdza zdarzenia uwidocznione przez formant powiązany i dołącza do dwóch określonych zdarzeń:  
  
-   <xref:System.Windows.Forms.Control.Validating?displayProperty=nameWithType>  
  
-   Zdarzenie o nazwie *PropertyName* `Changed` <xref:System.Windows.Forms.Control.BackColorChanged?displayProperty=nameWithType>(na przykład)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Właściwość określona przez <paramref name="propertyName" /> nie istnieje w kontrolce.  
  
—lub— 
Określone źródło danych lub element członkowski danych lub właściwość kontrolki są skojarzone z innym powiązaniem w kolekcji.</exception>
      </Docs>
    </Member>
    <Member MemberName="BindableComponent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IBindableComponent BindableComponent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.IBindableComponent BindableComponent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.BindableComponent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindableComponent As IBindableComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::IBindableComponent ^ BindableComponent { System::Windows::Forms::IBindableComponent ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BindableComponent : System.Windows.Forms.IBindableComponent" Usage="System.Windows.Forms.Binding.BindableComponent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IBindableComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera formant, z <see cref="T:System.Windows.Forms.Binding" /> którym jest skojarzony.</summary>
        <value><see cref="T:System.Windows.Forms.IBindableComponent" /> Skojarzona<see cref="T:System.Windows.Forms.Binding" /> z.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingComplete">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.BindingCompleteEventHandler BindingComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.BindingCompleteEventHandler BindingComplete" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Binding.BindingComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BindingComplete As BindingCompleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::BindingCompleteEventHandler ^ BindingComplete;" />
      <MemberSignature Language="F#" Value="member this.BindingComplete : System.Windows.Forms.BindingCompleteEventHandler " Usage="member this.BindingComplete : System.Windows.Forms.BindingCompleteEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingCompleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="P:System.Windows.Forms.Binding.FormattingEnabled" /> właściwość jest ustawiona na <see langword="true" /> i operacja powiązania jest ukończona, na przykład gdy dane są wypychane z kontrolki do źródła danych lub na odwrót</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest zgłaszane w następujących warunkach <xref:System.Windows.Forms.Binding.FormattingEnabled%2A>: `true`  
  
-   Dane ze źródła danych są przekazywane do właściwości kontrolki.  
  
-   Dane z właściwości kontrolki są wypychane do źródła danych.  
  
 To zdarzenie jest zgłaszane po zakończeniu tych operacji, niezależnie od stanu ukończenia. Na przykład jeśli operacja powiązania wiąże wartość null z <xref:System.Windows.Forms.DateTimePicker.Value%2A> właściwością, zgłaszany jest wyjątek, <xref:System.Windows.Forms.Binding.BindingComplete> ale zdarzenie nadal występuje. Procedura obsługi tego zdarzenia może wykonać odpowiednią akcję na podstawie sukcesu, błędu lub wyjątków w procesie powiązania, sprawdzając <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> Właściwość <xref:System.Windows.Forms.BindingCompleteEventArgs> parametru.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Windows.Forms.Binding.BindingComplete> jak obsłużyć zdarzenie.  
  
 [!code-cpp[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Binding.FormattingEnabled" />
        <altmember cref="M:System.Windows.Forms.Binding.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="BindingManagerBase">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BindingManagerBase BindingManagerBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.BindingManagerBase BindingManagerBase" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.BindingManagerBase" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingManagerBase As BindingManagerBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BindingManagerBase ^ BindingManagerBase { System::Windows::Forms::BindingManagerBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingManagerBase : System.Windows.Forms.BindingManagerBase" Usage="System.Windows.Forms.Binding.BindingManagerBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingManagerBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera dla tego <see cref="T:System.Windows.Forms.Binding" />elementu. <see cref="T:System.Windows.Forms.BindingManagerBase" /></summary>
        <value><see cref="T:System.Windows.Forms.BindingManagerBase" /> To<see cref="T:System.Windows.Forms.Binding" />zarządza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj, <xref:System.Windows.Forms.BindingManagerBase> aby wykonać iterację na liście powiązanej z danymi przez zwiększenie lub zmniejszenie <xref:System.Windows.Forms.BindingManagerBase.Position%2A> właściwości. <xref:System.Windows.Forms.BindingManagerBase> Klasa jest abstrakcyjna. Klasa, która zarządza listami związanymi <xref:System.Windows.Forms.BindingManagerBase> z danymi, dziedziczy z klasy. <xref:System.Windows.Forms.CurrencyManager>  
  
   
  
## Examples  
 Poniższy przykład kodu <xref:System.Windows.Forms.BindingManagerBase> pobiera każdy <xref:System.Windows.Forms.Binding> z <xref:System.Windows.Forms.BindingManagerBase.Position%2A> formularzy i drukuje właściwość dla każdej z nich <xref:System.Windows.Forms.BindingManagerBase>.  
  
 [!code-cpp[Classic Binding.BindingManagerBase Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.BindingManagerBase Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.BindingManagerBase Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.BindingManagerBase Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.BindingManagerBase Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.BindingManagerBase Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingMemberInfo">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BindingMemberInfo BindingMemberInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BindingMemberInfo BindingMemberInfo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.BindingMemberInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingMemberInfo As BindingMemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BindingMemberInfo BindingMemberInfo { System::Windows::Forms::BindingMemberInfo get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingMemberInfo : System.Windows.Forms.BindingMemberInfo" Usage="System.Windows.Forms.Binding.BindingMemberInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingMemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który zawiera informacje o tym powiązaniu na podstawie <paramref name="dataMember" /> parametru <see cref="Overload:System.Windows.Forms.Binding.#ctor" /> w konstruktorze.</summary>
        <value>A <see cref="T:System.Windows.Forms.BindingMemberInfo" /> , który zawiera informacje na <see cref="T:System.Windows.Forms.Binding" />ten temat.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest tworzony na `dataMember` podstawie ciągu przesłanego do <xref:System.Windows.Forms.Binding.%23ctor%2A> konstruktora. <xref:System.Windows.Forms.BindingMemberInfo>  
  
   
  
## Examples  
 Poniższy przykład kodu pobiera <xref:System.Windows.Forms.BindingMemberInfo> każdy <xref:System.Windows.Forms.Binding> w <xref:System.Windows.Forms.BindingMemberInfo.BindingPath%2A>formularzu i drukuje wartości <xref:System.Windows.Forms.Binding>właściwości, <xref:System.Windows.Forms.BindingMemberInfo.BindingField%2A>i <xref:System.Windows.Forms.BindingMemberInfo.BindingMember%2A> .  
  
 [!code-cpp[Classic Binding.BindingMemberInfo Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.BindingMemberInfo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.BindingMemberInfo Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.BindingMemberInfo Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.BindingMemberInfo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.BindingMemberInfo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.BindingsCollection" />
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control Control" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.Control" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Control As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ Control { System::Windows::Forms::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Control : System.Windows.Forms.Control" Usage="System.Windows.Forms.Binding.Control" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera formant, do którego należy powiązanie.</summary>
        <value><see cref="T:System.Windows.Forms.Control" /> , Do którego należy powiązanie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pobiera <xref:System.Windows.Forms.BindingManagerBase> dla określonego źródła danych i drukuje informacje o każdej <xref:System.Windows.Forms.Binding.Control%2A> właściwości powiązanej ze źródłem danych. W przykładzie zastosowano <xref:System.Windows.Forms.BindingManagerBase.Bindings%2A> właściwość, <xref:System.Windows.Forms.BindingManagerBase> aby pobrać wszystkie kontrolki.  
  
 [!code-cpp[Classic Binding.Control Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.Control Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.Control Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.Control Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.Control Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.Control Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlUpdateMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ControlUpdateMode ControlUpdateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ControlUpdateMode ControlUpdateMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.ControlUpdateMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlUpdateMode As ControlUpdateMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ControlUpdateMode ControlUpdateMode { System::Windows::Forms::ControlUpdateMode get(); void set(System::Windows::Forms::ControlUpdateMode value); };" />
      <MemberSignature Language="F#" Value="member this.ControlUpdateMode : System.Windows.Forms.ControlUpdateMode with get, set" Usage="System.Windows.Forms.Binding.ControlUpdateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlUpdateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia, kiedy zmiany w źródle danych są propagowane do właściwości kontroli powiązania.</summary>
        <value>Jedna z <see cref="T:System.Windows.Forms.ControlUpdateMode" /> wartości. Wartość domyślna to <see cref="F:System.Windows.Forms.ControlUpdateMode.OnPropertyChanged" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public object DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSource { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : obj" Usage="System.Windows.Forms.Binding.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera źródło danych dla tego powiązania.</summary>
        <value><see cref="T:System.Object" /> Reprezentuje źródło danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możliwe źródła danych obejmują:  
  
-   A <xref:System.Data.DataSet>  
  
-   A <xref:System.Data.DataTable>  
  
-   A <xref:System.Data.DataView>  
  
-   A <xref:System.Data.DataViewManager>  
  
-   Każdy obiekt, który implementuje <xref:System.Collections.IList> interfejs  
  
-   Dowolny obiekt  
  
   
  
## Examples  
 Poniższy przykład kodu używa właściwości, <xref:System.Windows.Forms.Binding.DataSource%2A> aby <xref:System.Data.DataSet>zwrócić.  
  
 [!code-cpp[Classic Binding.DataSource Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.DataSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.DataSource Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.DataSource Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.DataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.DataSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSourceNullValue">
      <MemberSignature Language="C#" Value="public object DataSourceNullValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSourceNullValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.DataSourceNullValue" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSourceNullValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSourceNullValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSourceNullValue : obj with get, set" Usage="System.Windows.Forms.Binding.DataSourceNullValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość, która ma być przechowywana w źródle danych, jeśli wartość kontrolki <see langword="null" /> jest pusta.</summary>
        <value>Wartość <see cref="T:System.Object" /> , która ma być przechowywana w źródle danych, gdy właściwość kontrolki jest <see langword="null" />pusta lub. Wartość domyślna to <see cref="T:System.DBNull" /> dla typów wartości i <see langword="null" /> dla typów innych niż wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Windows.Forms.Binding.NullValue%2A> właściwości, aby określić wartość wyświetlaną w kontrolce powiązanej, gdy źródło danych zawiera <xref:System.DBNull>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Binding.NullValue" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceUpdateMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataSourceUpdateMode DataSourceUpdateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataSourceUpdateMode DataSourceUpdateMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.DataSourceUpdateMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSourceUpdateMode As DataSourceUpdateMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataSourceUpdateMode DataSourceUpdateMode { System::Windows::Forms::DataSourceUpdateMode get(); void set(System::Windows::Forms::DataSourceUpdateMode value); };" />
      <MemberSignature Language="F#" Value="member this.DataSourceUpdateMode : System.Windows.Forms.DataSourceUpdateMode with get, set" Usage="System.Windows.Forms.Binding.DataSourceUpdateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataSourceUpdateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, kiedy zmiany właściwości kontroli powiązanej są propagowane do źródła danych.</summary>
        <value>Wartość wskazująca, kiedy zmiany są propagowane. Wartość domyślna to <see cref="F:System.Windows.Forms.DataSourceUpdateMode.OnValidation" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy pamiętać, że nawet jeśli ta właściwość jest <xref:System.Windows.Forms.DataSourceUpdateMode.Never>ustawiona na, powiązanie będzie aktualizować co najmniej jeden raz po raz pierwszy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ConvertEventHandler Format;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ConvertEventHandler Format" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Binding.Format" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Format As ConvertEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ConvertEventHandler ^ Format;" />
      <MemberSignature Language="F#" Value="member this.Format : System.Windows.Forms.ConvertEventHandler " Usage="member this.Format : System.Windows.Forms.ConvertEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ConvertEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy właściwość kontrolki jest powiązana z wartością danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Binding.Format> Zdarzenie jest zgłaszane, gdy dane są wypychane ze źródła danych do kontrolki. Można obsłużyć <xref:System.Windows.Forms.Binding.Format> zdarzenie w celu przekonwertowania niesformatowanych danych ze źródła danych na sformatowane dane na potrzeby wyświetlania. Gdy dane są ściągane z kontrolki do źródła danych, <xref:System.Windows.Forms.Binding.Parse> zdarzenie jest wywoływane w celu odformatowania wyświetlanej wartości, <xref:System.Windows.Forms.Binding.Format> a następnie nastąpi ponowne sformatowanie danych do wyświetlenia. Gwarantuje to, że formant powiązany wyświetla prawidłowo sformatowane dane, niezależnie od tego, czy użytkownik wprowadza sformatowane lub niesformatowane dane w kontrolce.  
  
 Zdarzenia <xref:System.Windows.Forms.Binding.Format> i<xref:System.Windows.Forms.Binding.Parse> umożliwiają tworzenie niestandardowych formatów do wyświetlania danych. Na przykład, jeśli dane <xref:System.Decimal>w tabeli są typu, można wyświetlić dane w formacie waluty lokalnej przez <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> ustawienie właściwości <xref:System.Windows.Forms.ConvertEventArgs> na wartość sformatowaną w <xref:System.Windows.Forms.Binding.Format> zdarzeniu. W związku z tym należy odfiltrować wartość wyświetlaną <xref:System.Windows.Forms.Binding.Parse> w zdarzeniu.  
  
 Zdarzenie występuje zawsze, <xref:System.Windows.Forms.BindingManagerBase> gdy wartośćzmian,któraobejmuje:<xref:System.Windows.Forms.BindingManagerBase.Current%2A> <xref:System.Windows.Forms.Binding.Format>  
  
-   Pierwszy raz, gdy właściwość jest powiązana.  
  
-   <xref:System.Windows.Forms.BindingManagerBase.Position%2A> Wszystkie zmiany.  
  
-   Za każdym razem, gdy lista powiązana z danymi jest sortowana lub filtrowana, która <xref:System.Data.DataView> jest wykonywana, gdy zawiera listę.  
  
 Zdarzenie <xref:System.Windows.Forms.Binding.Format> to również występuje <xref:System.Windows.Forms.Binding.Parse> po zdarzeniu. Na przykład gdy kontrolka utraci fokus, jego zawartość jest analizowana. Natychmiast po przejściu do kontrolki nowe dane zostaną przesunięte w <xref:System.Windows.Forms.Binding.Format> taki sposób, aby nowa zawartość była formatowana.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 <xref:System.Windows.Forms.Binding>Poniższy przykład kodu tworzy, <xref:System.Windows.Forms.ConvertEventHandler> dodaje delegata do obu <xref:System.Windows.Forms.Binding.Parse> zdarzeń <xref:System.Windows.Forms.BindingsCollection> i <xref:System.Windows.Forms.Binding.Format> i dodaje <xref:System.Windows.Forms.Binding> do <xref:System.Windows.Forms.TextBox> kontrolki za pomocą <xref:System.Windows.Forms.Control.DataBindings%2A> wartość. Delegat zdarzenia, <xref:System.Windows.Forms.Binding.Format> który został dodany do zdarzenia, formatuje wartość powiązaną ( <xref:System.Decimal> typ) jako walutę przy użyciu <xref:System.Decimal.ToString%2A> metody. `DecimalToCurrencyString` Obiekt delegowany <xref:System.Windows.Forms.Binding.Parse>zdarzenia, który został dodany do zdarzenia, konwertuje wartość wyświetlaną przez formant z powrotem <xref:System.Decimal> do typu. `CurrencyStringToDecimal`  
  
 W tym przykładzie założono obecność <xref:System.Data.DataSet> nazwy. `ds`  
  
 [!code-cpp[Classic Binding.Format Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.Format Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.Format Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.Format Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.Format Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.Format Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Binding.Parse" />
        <altmember cref="M:System.Windows.Forms.Binding.OnFormat(System.Windows.Forms.ConvertEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="FormatInfo">
      <MemberSignature Language="C#" Value="public IFormatProvider FormatInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IFormatProvider FormatInfo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.FormatInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property FormatInfo As IFormatProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IFormatProvider ^ FormatInfo { IFormatProvider ^ get(); void set(IFormatProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FormatInfo : IFormatProvider with get, set" Usage="System.Windows.Forms.Binding.FormatInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IFormatProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość <see cref="T:System.IFormatProvider" /> , która zapewnia zachowanie formatowania niestandardowego.</summary>
        <value><see cref="T:System.IFormatProvider" /> Implementacja, która zapewnia zachowanie formatowania niestandardowego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie tej właściwości spowoduje zastąpienie domyślnego zachowania formatowania, które używa <xref:System.Windows.Forms.Application.CurrentCulture%2A?displayProperty=nameWithType> ustawienia właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatString">
      <MemberSignature Language="C#" Value="public string FormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormatString" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.FormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property FormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FormatString : string with get, set" Usage="System.Windows.Forms.Binding.FormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia znaki specyfikatora formatu, które wskazują, jak ma być wyświetlana wartość.</summary>
        <value>Ciąg znaków specyfikatora formatu, który wskazuje, jak ma być wyświetlana wartość.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyty ciąg formatu powinien być zgodny ze specyfikacją standardowego formatu .NET Framework. Aby uzyskać więcej informacji, zobacz [Typy formatowania w .NET Framework](~/docs/standard/base-types/formatting-types.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormattingEnabled">
      <MemberSignature Language="C#" Value="public bool FormattingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FormattingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.FormattingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property FormattingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FormattingEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FormattingEnabled : bool with get, set" Usage="System.Windows.Forms.Binding.FormattingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy konwersja typu i formatowanie mają być stosowane do danych właściwości formantu.</summary>
        <value><see langword="true" />Jeśli jest włączona konwersja typu i formatowanie danych właściwości kontrolki; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie tej właściwości `true` umożliwia również zachowanie obsługi błędów i <xref:System.Windows.Forms.Binding.BindingComplete> powoduje wygenerowanie zdarzenia. Procedura obsługi tego zdarzenia może wykonać odpowiednią akcję na podstawie sukcesu, błędu lub wyjątków w procesie powiązania, sprawdzając <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> Właściwość <xref:System.Windows.Forms.BindingCompleteEventArgs> parametru.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Binding.BindingComplete" />
        <altmember cref="T:System.Windows.Forms.BindingCompleteEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="IsBinding">
      <MemberSignature Language="C#" Value="public bool IsBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBinding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.IsBinding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBinding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBinding { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBinding : bool" Usage="System.Windows.Forms.Binding.IsBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy powiązanie jest aktywne.</summary>
        <value><see langword="true" />Jeśli powiązanie jest aktywne; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Powiązanie jest aktywne, gdy spełnia następujące warunki:  
  
-   Wszystkie jego właściwości są ustawione.  
  
-   Użytkownik nie wywołał metody <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> lub <xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> w <xref:System.Windows.Forms.BindingManagerBase> tym, że <xref:System.Windows.Forms.Binding> należy do.  
  
-   Kontrolka, do której <xref:System.Windows.Forms.Binding> został utworzony.  
  
   
  
## Examples  
 Poniższy przykład kodu drukuje <xref:System.Windows.Forms.Binding.PropertyName%2A> wartość i <xref:System.Windows.Forms.Binding.IsBinding%2A> dla każdej z nich <xref:System.Windows.Forms.Binding> w formularzu.  
  
 [!code-cpp[Classic Binding.IsBinding Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.IsBinding Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.IsBinding Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.IsBinding Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.IsBinding Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.IsBinding Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NullValue">
      <MemberSignature Language="C#" Value="public object NullValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NullValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.NullValue" />
      <MemberSignature Language="VB.NET" Value="Public Property NullValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NullValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NullValue : obj with get, set" Usage="System.Windows.Forms.Binding.NullValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia właściwość <see cref="T:System.Object" /> , która ma być ustawiona, gdy źródło danych <see cref="T:System.DBNull" /> zawiera wartość.</summary>
        <value>Ustawienie do ustawienia jako właściwość kontrolki, gdy źródło danych <see cref="T:System.DBNull" /> zawiera wartość. <see cref="T:System.Object" /> Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Źródło danych musi zawierać <xref:System.DBNull> właściwość, <xref:System.Windows.Forms.Binding.NullValue%2A> która ma zostać prawidłowo zastosowana. Jeśli typ źródła danych jest typem, np. ciągiem lub liczbą całkowitą, wartość <xref:System.Windows.Forms.Binding.NullValue%2A> właściwości zostanie zignorowana. Ponadto <xref:System.Windows.Forms.Binding.NullValue%2A> właściwość jest ignorowana, jeśli jest ustawiona na `null`.  
  
 Wartość null zostanie dodana do źródła danych, gdy właściwość kontrolki jest ustawiona na obiekt <xref:System.Windows.Forms.Binding.NullValue%2A>. Jeśli <xref:System.Windows.Forms.Binding.NullValue%2A> jest ustawiona na wartość ciągu, porównania nie uwzględniają wielkości liter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBindingComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnBindingComplete (System.Windows.Forms.BindingCompleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBindingComplete(class System.Windows.Forms.BindingCompleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBindingComplete (e As BindingCompleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBindingComplete(System::Windows::Forms::BindingCompleteEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBindingComplete : System.Windows.Forms.BindingCompleteEventArgs -&gt; unit&#xA;override this.OnBindingComplete : System.Windows.Forms.BindingCompleteEventArgs -&gt; unit" Usage="binding.OnBindingComplete e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.BindingCompleteEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.Binding.BindingComplete" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.Binding.OnBindingComplete%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.Binding.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.Binding.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnFormat">
      <MemberSignature Language="C#" Value="protected virtual void OnFormat (System.Windows.Forms.ConvertEventArgs cevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFormat(class System.Windows.Forms.ConvertEventArgs cevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.OnFormat(System.Windows.Forms.ConvertEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFormat (cevent As ConvertEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFormat(System::Windows::Forms::ConvertEventArgs ^ cevent);" />
      <MemberSignature Language="F#" Value="abstract member OnFormat : System.Windows.Forms.ConvertEventArgs -&gt; unit&#xA;override this.OnFormat : System.Windows.Forms.ConvertEventArgs -&gt; unit" Usage="binding.OnFormat cevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cevent" Type="System.Windows.Forms.ConvertEventArgs" />
      </Parameters>
      <Docs>
        <param name="cevent">A <see cref="T:System.Windows.Forms.ConvertEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.Binding.Format" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.Binding.OnFormat%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.Binding.OnFormat(System.Windows.Forms.ConvertEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.Binding.OnFormat(System.Windows.Forms.ConvertEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
        <altmember cref="E:System.Windows.Forms.Binding.Format" />
        <altmember cref="M:System.Windows.Forms.Binding.OnParse(System.Windows.Forms.ConvertEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Binding.Parse" />
      </Docs>
    </Member>
    <Member MemberName="OnParse">
      <MemberSignature Language="C#" Value="protected virtual void OnParse (System.Windows.Forms.ConvertEventArgs cevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParse(class System.Windows.Forms.ConvertEventArgs cevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.OnParse(System.Windows.Forms.ConvertEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParse (cevent As ConvertEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParse(System::Windows::Forms::ConvertEventArgs ^ cevent);" />
      <MemberSignature Language="F#" Value="abstract member OnParse : System.Windows.Forms.ConvertEventArgs -&gt; unit&#xA;override this.OnParse : System.Windows.Forms.ConvertEventArgs -&gt; unit" Usage="binding.OnParse cevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cevent" Type="System.Windows.Forms.ConvertEventArgs" />
      </Parameters>
      <Docs>
        <param name="cevent">A <see cref="T:System.Windows.Forms.ConvertEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.Binding.Parse" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.Binding.OnParse%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.Binding.OnParse(System.Windows.Forms.ConvertEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.Binding.OnParse(System.Windows.Forms.ConvertEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
        <altmember cref="E:System.Windows.Forms.Binding.Format" />
        <altmember cref="M:System.Windows.Forms.Binding.OnFormat(System.Windows.Forms.ConvertEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Binding.Parse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ConvertEventHandler Parse;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ConvertEventHandler Parse" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Binding.Parse" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Parse As ConvertEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ConvertEventHandler ^ Parse;" />
      <MemberSignature Language="F#" Value="member this.Parse : System.Windows.Forms.ConvertEventHandler " Usage="member this.Parse : System.Windows.Forms.ConvertEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ConvertEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy zostanie zmieniona wartość kontrolki powiązanej z danymi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenia <xref:System.Windows.Forms.Binding.Format> i<xref:System.Windows.Forms.Binding.Parse> umożliwiają tworzenie niestandardowych formatów do wyświetlania danych. Na przykład, jeśli dane <xref:System.Decimal>w tabeli są typu, można wyświetlić dane w formacie waluty lokalnej przez <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> ustawienie właściwości <xref:System.Windows.Forms.ConvertEventArgs> na wartość sformatowaną w <xref:System.Windows.Forms.Binding.Format> zdarzeniu. W związku z tym należy odfiltrować wartość wyświetlaną <xref:System.Windows.Forms.Binding.Parse> w zdarzeniu.  
  
 <xref:System.Windows.Forms.Binding.Parse> Zdarzenie występuje w następujących warunkach:  
  
-   <xref:System.Windows.Forms.Control> Po wystąpieniu <xref:System.Windows.Forms.Control.Validated> zdarzenia.  
  
-   Gdy wywoływana <xref:System.Windows.Forms.BindingManagerBase> jest Metoda.<xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A>  
  
-   Gdy zmiany (<xref:System.Windows.Forms.BindingManagerBase.Position%2A> innymi słowy, po wprowadzeniu zmian). <xref:System.Windows.Forms.BindingManagerBase.Current%2A> <xref:System.Windows.Forms.BindingManagerBase>  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 <xref:System.Windows.Forms.Binding>Poniższy przykład kodu tworzy, <xref:System.Windows.Forms.ConvertEventHandler> dodaje delegata do obu <xref:System.Windows.Forms.Binding.Parse> zdarzeń <xref:System.Windows.Forms.BindingsCollection> i <xref:System.Windows.Forms.Binding.Format> i dodaje <xref:System.Windows.Forms.Binding> do <xref:System.Windows.Forms.TextBox> kontrolki za pomocą <xref:System.Windows.Forms.Control.DataBindings%2A> wartość. Delegat zdarzenia, <xref:System.Windows.Forms.Binding.Format> który został dodany do zdarzenia, formatuje wartość powiązaną ( <xref:System.Decimal> typ) jako walutę przy użyciu <xref:System.Decimal.ToString%2A> metody. `DecimalToCurrencyString` Obiekt delegowany <xref:System.Windows.Forms.Binding.Parse>zdarzenia, który został dodany do zdarzenia, konwertuje wartość wyświetlaną przez formant z powrotem <xref:System.Decimal> do typu. `CurrencyStringToDecimal`  
  
 [!code-cpp[Classic Binding.Parse Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.Parse Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.Parse Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.Parse Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.Parse Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.Parse Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Binding.Format" />
        <altmember cref="M:System.Windows.Forms.Binding.OnParse(System.Windows.Forms.ConvertEventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
      </Docs>
    </Member>
    <Member MemberName="PropertyName">
      <MemberSignature Language="C#" Value="public string PropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.PropertyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PropertyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyName : string" Usage="System.Windows.Forms.Binding.PropertyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę właściwości powiązanej z danymi.</summary>
        <value>Nazwa właściwości kontrolki, z którą ma zostać utworzone powiązanie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj, <xref:System.Windows.Forms.Binding.PropertyName%2A> aby określić właściwość kontrolki, która ma zostać powiązana z listą w źródle danych. Najczęściej należy powiązać Właściwość Display, taką jak <xref:System.Windows.Forms.Control.Text%2A> Właściwość <xref:System.Windows.Forms.TextBox> kontrolki. Jednak ze względu na to, że można powiązać każdą właściwość kontrolki, można programowo tworzyć kontrolki w czasie wykonywania przy użyciu danych z bazy danych.  
  
   
  
## Examples  
 Poniższy przykład kodu drukuje <xref:System.Windows.Forms.Binding.PropertyName%2A> wartość każdego <xref:System.Windows.Forms.Binding> dla każdej kontrolki w formularzu.  
  
 [!code-cpp[Classic Binding.PropertyName Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.PropertyName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.PropertyName Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.PropertyName Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.PropertyName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.PropertyName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadValue">
      <MemberSignature Language="C#" Value="public void ReadValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.ReadValue" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadValue ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadValue();" />
      <MemberSignature Language="F#" Value="member this.ReadValue : unit -&gt; unit" Usage="binding.ReadValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ustawia właściwość kontrolki na wartość odczytaną ze źródła danych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public void WriteValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.WriteValue" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteValue ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteValue();" />
      <MemberSignature Language="F#" Value="member this.WriteValue : unit -&gt; unit" Usage="binding.WriteValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Odczytuje bieżącą wartość z właściwości kontrolki i zapisuje ją w źródle danych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
