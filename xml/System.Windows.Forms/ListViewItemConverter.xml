<Type Name="ListViewItemConverter" FullName="System.Windows.Forms.ListViewItemConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="481e3d25e5a895d8722c126d155ecc04ede3bca7" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53505744" /></Metadata><TypeSignature Language="C#" Value="public class ListViewItemConverter : System.ComponentModel.ExpandableObjectConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListViewItemConverter extends System.ComponentModel.ExpandableObjectConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListViewItemConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class ListViewItemConverter&#xA;Inherits ExpandableObjectConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListViewItemConverter : System::ComponentModel::ExpandableObjectConverter" />
  <TypeSignature Language="F#" Value="type ListViewItemConverter = class&#xA;    inherit ExpandableObjectConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.ExpandableObjectConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8d8f8-101">Udostępnia konwertera typów, aby przekonwertować <see cref="T:System.Windows.Forms.ListViewItem" /> obiektów do i z różnych innych reprezentacji.</span><span class="sxs-lookup"><span data-stu-id="8d8f8-101">Provides a type converter to convert <see cref="T:System.Windows.Forms.ListViewItem" /> objects to and from various other representations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d8f8-102">Aby uzyskać więcej informacji na temat konwerterów typów zobacz <xref:System.ComponentModel.TypeConverter> klasy bazowej i [jak: Implementowanie konwertera typów](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)).</span><span class="sxs-lookup"><span data-stu-id="8d8f8-102">For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d8f8-103">Nigdy nie należy tworzyć wystąpienia <xref:System.Windows.Forms.ListViewItemConverter>.</span><span class="sxs-lookup"><span data-stu-id="8d8f8-103">You should never create an instance of a <xref:System.Windows.Forms.ListViewItemConverter>.</span></span> <span data-ttu-id="8d8f8-104">Zamiast tego należy wywołać <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> metody <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="8d8f8-104">Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="8d8f8-105">Aby uzyskać więcej informacji, zobacz przykłady w <xref:System.ComponentModel.TypeConverter> klasy bazowej.</span><span class="sxs-lookup"><span data-stu-id="8d8f8-105">For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListViewItem" />
    <altmember cref="T:System.ComponentModel.TypeConverter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItemConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItemConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItemConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d8f8-106">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ListViewItemConverter" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="8d8f8-106">Initializes a new instance of the <see cref="T:System.Windows.Forms.ListViewItemConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItemConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="listViewItemConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="8d8f8-107"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewniający kontekstu formatu.</span><span class="sxs-lookup"><span data-stu-id="8d8f8-107">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="destinationType"><span data-ttu-id="8d8f8-108">A <see cref="T:System.Type" /> reprezentujący typ chcesz przekonwertować.</span><span class="sxs-lookup"><span data-stu-id="8d8f8-108">A <see cref="T:System.Type" /> that represents the type you wish to convert to.</span></span></param>
        <summary><span data-ttu-id="8d8f8-109">Pobiera wartość wskazującą, czy tego konwertera można przekonwertować obiekt na typ zadanego miejsca docelowego przy użyciu tego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="8d8f8-109">Gets a value indicating whether this converter can convert an object to the given destination type using the context.</span></span></summary>
        <returns><span data-ttu-id="8d8f8-110"><see langword="true" /> w przypadku tego konwertera można wykonać konwersji; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8d8f8-110"><see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d8f8-111">`context` Parametru należy używać w celu wyodrębnienia dodatkowe informacje na temat środowiska tego konwertera jest wywoływana z.</span><span class="sxs-lookup"><span data-stu-id="8d8f8-111">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="8d8f8-112">Może to być `null`, dlatego należy zawsze sprawdzić.</span><span class="sxs-lookup"><span data-stu-id="8d8f8-112">This can be `null`, so always check.</span></span> <span data-ttu-id="8d8f8-113">Ponadto we właściwościach obiektu context może zwrócić `null`.</span><span class="sxs-lookup"><span data-stu-id="8d8f8-113">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8d8f8-114">Zastępuje tę metodę, aby zapewnić wymagań konwersji.</span><span class="sxs-lookup"><span data-stu-id="8d8f8-114">Override this method to provide your own conversion requirements.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItemConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="listViewItemConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="8d8f8-115">Kontekst elementu formatującego.</span><span class="sxs-lookup"><span data-stu-id="8d8f8-115">A formatter context.</span></span> <span data-ttu-id="8d8f8-116">Ten obiekt może służyć do wyodrębnienia dodatkowe informacje na temat środowiska, które tego konwertera jest wywoływana z.</span><span class="sxs-lookup"><span data-stu-id="8d8f8-116">This object can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="8d8f8-117">Może to być <see langword="null" />, więc należy zawsze sprawdzić.</span><span class="sxs-lookup"><span data-stu-id="8d8f8-117">This may be <see langword="null" />, so you should always check.</span></span> <span data-ttu-id="8d8f8-118">Ponadto we właściwościach obiektu context może również zwracać <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d8f8-118">Also, properties on the context object may also return <see langword="null" />.</span></span></param>
        <param name="culture"><span data-ttu-id="8d8f8-119">Informacje o opcjonalnych kultury.</span><span class="sxs-lookup"><span data-stu-id="8d8f8-119">An optional culture info.</span></span> <span data-ttu-id="8d8f8-120">Przyjęto, że jeśli nie podano bieżącej kultury.</span><span class="sxs-lookup"><span data-stu-id="8d8f8-120">If not supplied the current culture is assumed.</span></span></param>
        <param name="value"><span data-ttu-id="8d8f8-121">Obiekt do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="8d8f8-121">The object to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="8d8f8-122">Typ, który można przekonwertować obiekt na potrzeby.</span><span class="sxs-lookup"><span data-stu-id="8d8f8-122">The type to convert the object to.</span></span></param>
        <summary><span data-ttu-id="8d8f8-123">Konwertuje dany obiekt do innego typu.</span><span class="sxs-lookup"><span data-stu-id="8d8f8-123">Converts the given object to another type.</span></span></summary>
        <returns><span data-ttu-id="8d8f8-124">Przekonwertowany obiekt.</span><span class="sxs-lookup"><span data-stu-id="8d8f8-124">The converted object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d8f8-125">Najczęściej używane typy, aby przekonwertować są do i z obiektem ciągu.</span><span class="sxs-lookup"><span data-stu-id="8d8f8-125">The most common types to convert are to and from a string object.</span></span> <span data-ttu-id="8d8f8-126">Domyślna implementacja spowoduje, że wywołanie <xref:System.Object.ToString%2A> obiektu Jeśli obiekt jest prawidłowy, a jeśli typ docelowy jest ciągiem.</span><span class="sxs-lookup"><span data-stu-id="8d8f8-126">The default implementation will make a call to <xref:System.Object.ToString%2A> on the object if the object is valid and if the destination type is string.</span></span> <span data-ttu-id="8d8f8-127">Jeśli to nie można przekonwertować na typ docelowy, będzie to sygnalizować <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="8d8f8-127">If this cannot convert to the destination type, this will throw a <xref:System.NotSupportedException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>