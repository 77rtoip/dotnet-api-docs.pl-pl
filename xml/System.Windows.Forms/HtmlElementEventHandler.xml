<Type Name="HtmlElementEventHandler" FullName="System.Windows.Forms.HtmlElementEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ea915cc558ed6f5d83889518189ffba11199ff42" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69189852" /></Metadata><TypeSignature Language="C#" Value="public delegate void HtmlElementEventHandler(object sender, HtmlElementEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed HtmlElementEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.HtmlElementEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub HtmlElementEventHandler(sender As Object, e As HtmlElementEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void HtmlElementEventHandler(System::Object ^ sender, HtmlElementEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type HtmlElementEventHandler = delegate of obj * HtmlElementEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Forms.HtmlElementEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Źródło zdarzenia.</param>
    <param name="e"><see cref="T:System.Windows.Forms.HtmlElementEventArgs" /> Zawierający dane zdarzenia.</param>
    <summary>Reprezentuje metodę, która <see langword="Click" />będzie obsługiwać <see langword="MouseDown" /> i powiązane zdarzenia w <see cref="T:System.Windows.Forms.HtmlDocument" />, <see cref="T:System.Windows.Forms.HtmlElement" />i <see cref="T:System.Windows.Forms.HtmlWindow" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas tworzenia <xref:System.Windows.Forms.HtmlElementEventHandler> delegata należy określić metodę, która będzie obsługiwać zdarzenie. Aby skojarzyć zdarzenie z programem obsługi zdarzeń, Dodaj wystąpienie delegata do zdarzenia. Program obsługi zdarzeń jest wywoływany przy każdym wystąpieniu zdarzenia, o ile nie usunięto delegata. Aby uzyskać więcej informacji na temat delegatów obsługi zdarzeń, zobacz temat [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 Musisz poczekać na zakończenie ładowania dokumentu HTML, aby dołączyć procedurę obsługi zdarzeń do dokumentu. Jeśli próbujesz dołączyć procedurę obsługi przed ukończeniem ładowania, operacja dołączania może zakończyć się niepowodzeniem. Najlepszym miejscem do dołączania obsługi zdarzeń w nowym dokumencie jest <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> program obsługi zdarzeń <xref:System.Windows.Forms.WebBrowser> dla formantu.  
  
   
  
## Examples  
 Poniższy kod dołącza obsługę zdarzeń <xref:System.Windows.Forms.HtmlDocument.MouseDown>dla, <xref:System.Windows.Forms.HtmlDocument.MouseMove>i <xref:System.Windows.Forms.HtmlDocument.MouseUp> zdarzeń w <xref:System.Windows.Forms.HtmlDocument>. Ten przykładowy kod zakłada, <xref:System.Windows.Forms.WebBrowser> że projekt ma wystąpienie formantu o nazwie. `WebBrowser1`  
  
 [!code-cpp[HtmlElementEventHandler#1](~/samples/snippets/cpp/VS_Snippets_Winforms/HtmlElementEventHandler/CPP/form1.cpp#1)]
 [!code-csharp[HtmlElementEventHandler#1](~/samples/snippets/csharp/VS_Snippets_Winforms/HtmlElementEventHandler/CS/form1.cs#1)]
 [!code-vb[HtmlElementEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/HtmlElementEventHandler/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>
