<Type Name="GiveFeedbackEventArgs" FullName="System.Windows.Forms.GiveFeedbackEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dba2eda58366bd84b81407d145c3cc53a13c15b9" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69188600" /></Metadata><TypeSignature Language="C#" Value="public class GiveFeedbackEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GiveFeedbackEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.GiveFeedbackEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class GiveFeedbackEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class GiveFeedbackEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type GiveFeedbackEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Dostarcza dane dla <see cref="E:System.Windows.Forms.Control.GiveFeedback" /> zdarzenia, które występuje podczas operacji przeciągania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control.GiveFeedback> Zdarzenie występuje podczas operacji przeciągania. Umożliwia Źródło zdarzenia przeciągania, modyfikując wygląd wskaźnika myszy, aby dać użytkownikowi opinię wizualną podczas operacji przeciągania i upuszczania. <xref:System.Windows.Forms.GiveFeedbackEventArgs> Obiekt Określa typ operacji przeciągania i upuszczania oraz to, czy są używane domyślne kursory.  
  
 Informacje o modelu zdarzenia można znaleźć w temacie [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 W poniższym przykładzie zademonstrowano operację przeciągania i upuszczania między dwoma <xref:System.Windows.Forms.ListBox> kontrolkami. Przykład wywołuje metodę, <xref:System.Windows.Forms.Control.DoDragDrop%2A> gdy rozpocznie się akcja przeciągania. Akcja przeciągania rozpocznie się, jeśli mysz została przeniesiona <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> więcej niż z lokalizacji myszy <xref:System.Windows.Forms.Control.MouseDown> podczas zdarzenia. Metoda jest używana do określenia indeksu elementu do przeciągnięcia `MouseDown` podczas zdarzenia. <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>  
  
 W przykładzie pokazano również, jak używać niestandardowych kursorów dla operacji przeciągania i upuszczania. W przykładzie przyjęto założenie, że `3dwarro.cur` dwa `3dwno.cur`pliki kursora i, istnieją w katalogu aplikacji, odpowiednio dla kursorów niestandardowych przeciągnij i nie upuszczaj. Kursory niestandardowe będą używane, jeśli `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> jest zaznaczone. Kursory niestandardowe są ustawiane w <xref:System.Windows.Forms.Control.GiveFeedback> programie obsługi zdarzeń.  
  
 Stan klawiatury jest obliczany w <xref:System.Windows.Forms.Control.DragOver> procedurze obsługi zdarzeń po prawej stronie `ListBox`, aby określić, jaka operacja przeciągania będzie oparta na stanie klawiszy Shift, Ctrl, Alt lub Ctrl + Alt. Lokalizacja w `ListBox` miejscu, w którym występuje porzucanie, jest również określana `DragOver` podczas zdarzenia. Jeśli dane do porzucenia nie `String`są, <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> wówczas jest ustawione na <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Na koniec stan upuszczenia jest wyświetlany w `DropLocationLabel`. <xref:System.Windows.Forms.Label>  
  
 Dane do porzucenia po prawej stronie `ListBox` są określane <xref:System.Windows.Forms.Control.DragDrop> w programie obsługi zdarzeń, a `String` wartość `ListBox`jest dodawana w odpowiednim miejscu w. Jeśli operacja przeciągania przesunie się poza granice formularza, operacja przeciągania i upuszczania zostanie anulowana w <xref:System.Windows.Forms.Control.QueryContinueDrag> obsłudze zdarzeń.  
  
 Ten fragment kodu ilustruje użycie <xref:System.Windows.Forms.GiveFeedbackEventArgs> klasy. <xref:System.Windows.Forms.Control.DoDragDrop%2A> Zobacz metodę pełnego przykładu kodu.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GiveFeedbackEventArgs (System.Windows.Forms.DragDropEffects effect, bool useDefaultCursors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Forms.DragDropEffects effect, bool useDefaultCursors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.GiveFeedbackEventArgs.#ctor(System.Windows.Forms.DragDropEffects,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (effect As DragDropEffects, useDefaultCursors As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GiveFeedbackEventArgs(System::Windows::Forms::DragDropEffects effect, bool useDefaultCursors);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.GiveFeedbackEventArgs : System.Windows.Forms.DragDropEffects * bool -&gt; System.Windows.Forms.GiveFeedbackEventArgs" Usage="new System.Windows.Forms.GiveFeedbackEventArgs (effect, useDefaultCursors)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="effect" Type="System.Windows.Forms.DragDropEffects" />
        <Parameter Name="useDefaultCursors" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="effect">Typ operacji przeciągania i upuszczania. Możliwe wartości są uzyskiwane przez zastosowanie operacji bitowej lub (|) do stałych zdefiniowanych w <see cref="T:System.Windows.Forms.DragDropEffects" />obiekcie.</param>
        <param name="useDefaultCursors"><see langword="true" />Jeśli są używane domyślne wskaźniki; w przeciwnym razie. <see langword="false" /></param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragDropEffects Effect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DragDropEffects Effect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Effect As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DragDropEffects Effect { System::Windows::Forms::DragDropEffects get(); };" />
      <MemberSignature Language="F#" Value="member this.Effect : System.Windows.Forms.DragDropEffects" Usage="System.Windows.Forms.GiveFeedbackEventArgs.Effect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragDropEffects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera opinię dotyczącą operacji przeciągania i upuszczania.</summary>
        <value>Jedna z <see cref="T:System.Windows.Forms.DragDropEffects" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie zademonstrowano operację przeciągania i upuszczania między dwoma <xref:System.Windows.Forms.ListBox> kontrolkami. Przykład wywołuje metodę, <xref:System.Windows.Forms.Control.DoDragDrop%2A> gdy rozpocznie się akcja przeciągania. Akcja przeciągania rozpocznie się, jeśli mysz została przeniesiona <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> więcej niż z lokalizacji myszy <xref:System.Windows.Forms.Control.MouseDown> podczas zdarzenia. Metoda jest używana do określenia indeksu elementu do przeciągnięcia `MouseDown` podczas zdarzenia. <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>  
  
 W przykładzie pokazano również, jak używać niestandardowych kursorów dla operacji przeciągania i upuszczania. W przykładzie przyjęto założenie, że `3dwarro.cur` dwa `3dwno.cur`pliki kursora i, istnieją w katalogu aplikacji, odpowiednio dla kursorów niestandardowych przeciągnij i nie upuszczaj. Kursory niestandardowe będą używane, jeśli `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> jest zaznaczone. Kursory niestandardowe są ustawiane w <xref:System.Windows.Forms.Control.GiveFeedback> programie obsługi zdarzeń.  
  
 Stan klawiatury jest obliczany w <xref:System.Windows.Forms.Control.DragOver> procedurze obsługi zdarzeń po prawej stronie `ListBox`, aby określić, jaka operacja przeciągania będzie oparta na stanie klawiszy Shift, Ctrl, Alt lub Ctrl + Alt. Lokalizacja w `ListBox` miejscu, w którym występuje porzucanie, jest również określana `DragOver` podczas zdarzenia. Jeśli dane do porzucenia nie `String`są, <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> wówczas jest ustawione na <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Na koniec stan upuszczenia jest wyświetlany w `DropLocationLabel`. <xref:System.Windows.Forms.Label>  
  
 Dane do porzucenia po prawej stronie `ListBox` są określane <xref:System.Windows.Forms.Control.DragDrop> w programie obsługi zdarzeń, a `String` wartość `ListBox`jest dodawana w odpowiednim miejscu w. Jeśli operacja przeciągania przesunie się poza granice formularza, operacja przeciągania i upuszczania zostanie anulowana w <xref:System.Windows.Forms.Control.QueryContinueDrag> obsłudze zdarzeń.  
  
 Ten fragment kodu ilustruje użycie <xref:System.Windows.Forms.GiveFeedbackEventArgs> klasy. <xref:System.Windows.Forms.Control.DoDragDrop%2A> Zobacz metodę pełnego przykładu kodu.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCursors">
      <MemberSignature Language="C#" Value="public bool UseDefaultCursors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCursors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCursors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCursors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCursors : bool with get, set" Usage="System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy operacja przeciągania ma używać domyślnych kursorów, które są skojarzone z efektami przeciągania i upuszczania.</summary>
        <value><see langword="true" />Jeśli są używane domyślne wskaźniki; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 System zawiera domyślne kursory przeciągania i upuszczania dla różnych operacji przeciągania i upuszczania, takich jak przenoszenie lub kopiowanie. Jeśli <xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A> jest ustawiona na `false`, jest odpowiedzialna za źródło zdarzenia w celu ustawienia odpowiedniego kursora.  
  
   
  
## Examples  
 W poniższym przykładzie zademonstrowano operację przeciągania i upuszczania między dwoma <xref:System.Windows.Forms.ListBox> kontrolkami. Przykład wywołuje metodę, <xref:System.Windows.Forms.Control.DoDragDrop%2A> gdy rozpocznie się akcja przeciągania. Akcja przeciągania rozpocznie się, jeśli mysz została przeniesiona <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> więcej niż z lokalizacji myszy <xref:System.Windows.Forms.Control.MouseDown> podczas zdarzenia. Metoda jest używana do określenia indeksu elementu do przeciągnięcia `MouseDown` podczas zdarzenia. <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>  
  
 W przykładzie pokazano również, jak używać niestandardowych kursorów dla operacji przeciągania i upuszczania. W przykładzie przyjęto założenie, że `3dwarro.cur` dwa `3dwno.cur`pliki kursora i, istnieją w katalogu aplikacji, odpowiednio dla kursorów niestandardowych przeciągnij i nie upuszczaj. Kursory niestandardowe będą używane, jeśli `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> jest zaznaczone. Kursory niestandardowe są ustawiane w <xref:System.Windows.Forms.Control.GiveFeedback> programie obsługi zdarzeń.  
  
 Stan klawiatury jest obliczany w <xref:System.Windows.Forms.Control.DragOver> procedurze obsługi zdarzeń po prawej stronie `ListBox`, aby określić, jaka operacja przeciągania będzie oparta na stanie klawiszy Shift, Ctrl, Alt lub Ctrl + Alt. Lokalizacja w `ListBox` miejscu, w którym występuje porzucanie, jest również określana `DragOver` podczas zdarzenia. Jeśli dane do porzucenia nie `String`są, <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> wówczas jest ustawione na <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Na koniec stan upuszczenia jest wyświetlany w `DropLocationLabel`. <xref:System.Windows.Forms.Label>  
  
 Dane do porzucenia po prawej stronie `ListBox` są określane <xref:System.Windows.Forms.Control.DragDrop> w programie obsługi zdarzeń, a `String` wartość `ListBox`jest dodawana w odpowiednim miejscu w. Jeśli operacja przeciągania przesunie się poza granice formularza, operacja przeciągania i upuszczania zostanie anulowana w <xref:System.Windows.Forms.Control.QueryContinueDrag> obsłudze zdarzeń.  
  
 Ten fragment kodu ilustruje użycie <xref:System.Windows.Forms.GiveFeedbackEventArgs> klasy. <xref:System.Windows.Forms.Control.DoDragDrop%2A> Zobacz metodę pełnego przykładu kodu.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
