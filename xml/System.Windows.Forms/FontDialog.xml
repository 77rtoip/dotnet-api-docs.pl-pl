<Type Name="FontDialog" FullName="System.Windows.Forms.FontDialog">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5841638a6e476800fcaa7c2df9a32ef20a4cf535" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36521818" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FontDialog : System.Windows.Forms.CommonDialog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FontDialog extends System.Windows.Forms.CommonDialog" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.FontDialog" />
  <TypeSignature Language="VB.NET" Value="Public Class FontDialog&#xA;Inherits CommonDialog" />
  <TypeSignature Language="C++ CLI" Value="public ref class FontDialog : System::Windows::Forms::CommonDialog" />
  <TypeSignature Language="F#" Value="type FontDialog = class&#xA;    inherit CommonDialog" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.CommonDialog</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Apply")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Font")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Monituje użytkownika o wybranie czcionki spośród zainstalowane na komputerze lokalnym.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dziedziczony element członkowski <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> musi wywoływane w celu utworzenia określonych wspólnych okno dialogowe. <xref:System.Windows.Forms.CommonDialog.HookProc%2A> może zostać zastąpiona w celu wykonania funkcji punktów zaczepienia pole określonego okna dialogowego.  
  
 Podczas tworzenia wystąpienia <xref:System.Windows.Forms.FontDialog>, niektóre właściwości odczytu/zapisu są ustawione na wartości początkowe. Aby uzyskać listę tych wartości, zobacz <xref:System.Windows.Forms.FontDialog.%23ctor%2A> konstruktora.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> do wyświetlenia <xref:System.Windows.Forms.FontDialog>. Ten kod wymaga, aby <xref:System.Windows.Forms.Form> została już utworzona z <xref:System.Windows.Forms.TextBox> i przycisk umieścić na nim. On również wymaga, aby `fontDialog1` został utworzony. <xref:System.Drawing.Font> Zawiera informacje o rozmiarze, ale nie dane koloru.  
  
 [!code-cpp[Classic FontDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic FontDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FontDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic FontDialog Example/CS/source.cs#1)]
 [!code-vb[Classic FontDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic FontDialog Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.CommonDialog" />
    <altmember cref="T:System.Drawing.Font" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FontDialog.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontDialog();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.FontDialog" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas tworzenia wystąpienia <xref:System.Windows.Forms.FontDialog>, są inicjowane następujące właściwości odczytu/zapisu.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Windows.Forms.FontDialog.AllowSimulations%2A>|`true`|  
|<xref:System.Windows.Forms.FontDialog.AllowVectorFonts%2A>|`true`|  
|<xref:System.Windows.Forms.FontDialog.AllowVerticalFonts%2A>|`true`|  
|<xref:System.Windows.Forms.FontDialog.AllowScriptChange%2A>|`true`|  
|<xref:System.Windows.Forms.FontDialog.Color%2A>|`Color.Black`|  
|<xref:System.Windows.Forms.FontDialog.FixedPitchOnly%2A>|`false`|  
|<xref:System.Windows.Forms.FontDialog.MaxSize%2A>|0|  
|<xref:System.Windows.Forms.FontDialog.MinSize%2A>|0|  
|<xref:System.Windows.Forms.FontDialog.ScriptsOnly%2A>|`false`|  
|<xref:System.Windows.Forms.FontDialog.ShowApply%2A>|`false`|  
|<xref:System.Windows.Forms.FontDialog.ShowColor%2A>|`false`|  
|<xref:System.Windows.Forms.FontDialog.ShowEffects%2A>|`true`|  
|<xref:System.Windows.Forms.FontDialog.ShowHelp%2A>|`false`|  
  
 Można zmienić wartości dla żadnego z tych właściwości, za pomocą oddzielnego wywołania do właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="AllowScriptChange">
      <MemberSignature Language="C#" Value="public bool AllowScriptChange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowScriptChange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.AllowScriptChange" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowScriptChange As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowScriptChange { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowScriptChange : bool with get, set" Usage="System.Windows.Forms.FontDialog.AllowScriptChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy użytkownik może zmienić zestawu znaków określonego w ** skryptu ** pole kombi, aby wyświetlić znak Ustaw inne niż aktualnie wyświetlany.</summary>
        <value>
          <see langword="true" /> Jeśli użytkownik może zmienić zestawu znaków określonego w ** skryptu ** pola kombi; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **Skryptu** znalezione pole kombi na **czcionki** okno dialogowe zawiera znak zestawów skojarzonych z wybranej czcionki.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowSimulations" />
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowVectorFonts" />
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowVerticalFonts" />
      </Docs>
    </Member>
    <Member MemberName="AllowSimulations">
      <MemberSignature Language="C#" Value="public bool AllowSimulations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowSimulations" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.AllowSimulations" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowSimulations As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowSimulations { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowSimulations : bool with get, set" Usage="System.Windows.Forms.FontDialog.AllowSimulations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy okno dialogowe umożliwia grafiki symulacje czcionek urządzenia (GDI) interfejsu.</summary>
        <value>
          <see langword="true" /> Jeśli są dozwolone symulacje czcionek; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowScriptChange" />
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowVectorFonts" />
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowVerticalFonts" />
      </Docs>
    </Member>
    <Member MemberName="AllowVectorFonts">
      <MemberSignature Language="C#" Value="public bool AllowVectorFonts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowVectorFonts" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.AllowVectorFonts" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowVectorFonts As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowVectorFonts { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowVectorFonts : bool with get, set" Usage="System.Windows.Forms.FontDialog.AllowVectorFonts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy okno dialogowe umożliwia wektor wyboru czcionki.</summary>
        <value>
          <see langword="true" /> Jeśli dozwolone są czcionki wektorowe; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowScriptChange" />
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowSimulations" />
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowVerticalFonts" />
      </Docs>
    </Member>
    <Member MemberName="AllowVerticalFonts">
      <MemberSignature Language="C#" Value="public bool AllowVerticalFonts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowVerticalFonts" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.AllowVerticalFonts" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowVerticalFonts As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowVerticalFonts { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowVerticalFonts : bool with get, set" Usage="System.Windows.Forms.FontDialog.AllowVerticalFonts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy okno dialogowe wyświetla zarówno poziome i pionowe czcionek lub tylko poziomej.</summary>
        <value>
          <see langword="true" /> Jeśli zarówno poziome i pionowe czcionek są dozwolone; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowScriptChange" />
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowSimulations" />
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowVectorFonts" />
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public event EventHandler Apply;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Apply" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.FontDialog.Apply" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Apply As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Apply;" />
      <MemberSignature Language="F#" Value="member this.Apply : EventHandler " Usage="member this.Apply : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy użytkownik kliknie ** przycisk Zastosuj ** w oknie dialogowym czcionki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Za każdym razem, gdy **Zastosuj** kliknięciu przycisku innego <xref:System.Windows.Forms.FontDialog.Apply> zdarzenia.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, za pomocą <xref:System.Windows.Forms.FontDialog.MinSize%2A>, <xref:System.Windows.Forms.FontDialog.MaxSize%2A>, <xref:System.Windows.Forms.FontDialog.ShowEffects%2A> i <xref:System.Windows.Forms.FontDialog.FontMustExist%2A> obsługi i elementy członkowskie <xref:System.Windows.Forms.FontDialog.Apply> zdarzeń. Aby uruchomić ten przykład Wklej poniższy kod w nadrzędnym formularza <xref:System.Windows.Forms.FontDialog> o nazwie `FontDialog1` i <xref:System.Windows.Forms.Button> o nazwie `Button1`.  
  
 [!code-cpp[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.FontDialog.OnApply(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Color">
      <MemberSignature Language="C#" Value="public System.Drawing.Color Color { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color Color" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.Color" />
      <MemberSignature Language="VB.NET" Value="Public Property Color As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color Color { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.Color : System.Drawing.Color with get, set" Usage="System.Windows.Forms.FontDialog.Color" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor wybranej czcionki.</summary>
        <value>Kolor wybranej czcionki. Wartość domyślna to <see cref="P:System.Drawing.Color.Black" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> do wyświetlenia <xref:System.Windows.Forms.FontDialog>. Ten kod wymaga, aby <xref:System.Windows.Forms.Form> została już utworzona z <xref:System.Windows.Forms.TextBox> i przycisk umieścić na nim. On również wymaga, aby `fontDialog1` został utworzony. <xref:System.Drawing.Font> Zawiera informacje o rozmiarze, ale nie dane koloru.  
  
 [!code-cpp[Classic FontDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic FontDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FontDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic FontDialog Example/CS/source.cs#1)]
 [!code-vb[Classic FontDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic FontDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="P:System.Windows.Forms.FontDialog.Font" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowColor" />
      </Docs>
    </Member>
    <Member MemberName="EventApply">
      <MemberSignature Language="C#" Value="protected static readonly object EventApply;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly object EventApply" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.FontDialog.EventApply" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly EventApply As Object " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::Object ^ EventApply;" />
      <MemberSignature Language="F#" Value=" staticval mutable EventApply : obj" Usage="System.Windows.Forms.FontDialog.EventApply" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Właścicielem <see cref="E:System.Windows.Forms.FontDialog.Apply" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FixedPitchOnly">
      <MemberSignature Language="C#" Value="public bool FixedPitchOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FixedPitchOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.FixedPitchOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property FixedPitchOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FixedPitchOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FixedPitchOnly : bool with get, set" Usage="System.Windows.Forms.FontDialog.FixedPitchOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy okno dialogowe umożliwia wybór czcionki o stałej wysokości.</summary>
        <value>
          <see langword="true" /> Jeśli tylko można wybierać czcionki o stałej wysokości; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.FontMustExist" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ScriptsOnly" />
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.Font" />
      <MemberSignature Language="VB.NET" Value="Public Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font with get, set" Usage="System.Windows.Forms.FontDialog.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia czcionkę.</summary>
        <value>Wybranej czcionki.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> do wyświetlenia <xref:System.Windows.Forms.FontDialog>. Ten kod wymaga, aby <xref:System.Windows.Forms.Form> została już utworzona z <xref:System.Windows.Forms.TextBox> i przycisk umieścić na nim. On również wymaga, aby `fontDialog1` został utworzony. <xref:System.Drawing.Font> Zawiera informacje o rozmiarze, ale nie dane koloru.  
  
 [!code-cpp[Classic FontDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic FontDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FontDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic FontDialog Example/CS/source.cs#1)]
 [!code-vb[Classic FontDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic FontDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Font" />
        <altmember cref="P:System.Windows.Forms.FontDialog.Color" />
      </Docs>
    </Member>
    <Member MemberName="FontMustExist">
      <MemberSignature Language="C#" Value="public bool FontMustExist { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FontMustExist" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.FontMustExist" />
      <MemberSignature Language="VB.NET" Value="Public Property FontMustExist As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FontMustExist { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FontMustExist : bool with get, set" Usage="System.Windows.Forms.FontDialog.FontMustExist" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy okno dialogowe określa warunek błędu, jeśli użytkownik próbuje wybierz czcionki lub styl, który nie istnieje.</summary>
        <value>
          <see langword="true" /> Jeśli okno dialogowe określa warunek błędu, gdy użytkownik próbuje wybierz czcionki lub styl, który nie istnieje; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje, za pomocą <xref:System.Windows.Forms.FontDialog.MinSize%2A>, <xref:System.Windows.Forms.FontDialog.MaxSize%2A>, <xref:System.Windows.Forms.FontDialog.ShowEffects%2A> i <xref:System.Windows.Forms.FontDialog.FontMustExist%2A> obsługi i elementy członkowskie <xref:System.Windows.Forms.FontDialog.Apply> zdarzeń. Aby uruchomić ten przykład Wklej poniższy kod w nadrzędnym formularza <xref:System.Windows.Forms.FontDialog> o nazwie `FontDialog1` i <xref:System.Windows.Forms.Button> o nazwie `Button1`.  
  
 [!code-cpp[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.FixedPitchOnly" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ScriptsOnly" />
      </Docs>
    </Member>
    <Member MemberName="HookProc">
      <MemberSignature Language="C#" Value="protected override IntPtr HookProc (IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance native int HookProc(native int hWnd, int32 msg, native int wparam, native int lparam) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FontDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HookProc (hWnd As IntPtr, msg As Integer, wparam As IntPtr, lparam As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override IntPtr HookProc(IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);" />
      <MemberSignature Language="F#" Value="override this.HookProc : nativeint * int * nativeint * nativeint -&gt; nativeint" Usage="fontDialog.HookProc (hWnd, msg, wparam, lparam)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hWnd" Type="System.IntPtr" />
        <Parameter Name="msg" Type="System.Int32" />
        <Parameter Name="wparam" Type="System.IntPtr" />
        <Parameter Name="lparam" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hWnd">Dojście do okna — okno dialogowe.</param>
        <param name="msg">Trwa odebranej wiadomości.</param>
        <param name="wparam">Dodatkowe informacje na temat wiadomości.</param>
        <param name="lparam">Dodatkowe informacje na temat wiadomości.</param>
        <summary>Określa wspólnego okna dialogowego pole punktu zaczepienia procedury, która zostanie zastąpiona do dodania określonych funkcji do typowych okno dialogowe.</summary>
        <returns>Wartość zero, jeśli procedury okna dialogowego domyślne przetwarza komunikat; wartość niezerowa Jeśli procedury okna dialogowego domyślne ignoruje komunikat.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Procedura haka jest mechanizm, za pomocą którego funkcji można przechwycić zdarzeń przed dotarciem aplikacji. Jeśli zastąpienie <xref:System.Windows.Forms.CommonDialog.HookProc%2A?displayProperty=nameWithType> metodę <xref:System.Windows.Forms.CommonDialog> klasy, system operacyjny wywołuje zastąpienia funkcji publikowania systemu operacyjnego wiadomości do okna.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Windows.Forms.FontDialog.HookProc%2A> metody. Przykład składa się z klasy, która dziedziczy <xref:System.Windows.Forms.FontDialog> klasy. W tej klasie <xref:System.Windows.Forms.FontDialog.HookProc%2A> zastąpienia, w tym przykładzie ocenia metody `msg` parametru względem wartości stałej dla konkretnego komunikatów systemu Windows. Jeśli `msg` parametru jest równe określonej stałej, przykładzie zapisuje dane wyjściowe śledzenia komunikatów systemu Windows, który został przekazany do identyfikowania <xref:System.Windows.Forms.FontDialog.HookProc%2A> metody. W tym przykładzie wymaga, aby klasy, w której <xref:System.Windows.Forms.FontDialog.HookProc%2A> metoda jest zadeklarowana dziedziczy <xref:System.Windows.Forms.FontDialog> klasy.  
  
 [!code-cpp[HookProc Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/HookProc Example/CPP/fontdialogoverride.cpp#1)]
 [!code-csharp[HookProc Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/HookProc Example/CS/fontdialogoverride.cs#1)]
 [!code-vb[HookProc Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/HookProc Example/VB/fontdialogoverride.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.FontDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.FontDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" /> metody.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.CommonDialog" />
      </Docs>
    </Member>
    <Member MemberName="MaxSize">
      <MemberSignature Language="C#" Value="public int MaxSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.MaxSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxSize : int with get, set" Usage="System.Windows.Forms.FontDialog.MaxSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia rozmiar maksymalny punktu, który użytkownik może wybrać.</summary>
        <value>Maksymalna punktu rozmiar, który użytkownik może wybrać. Wartość domyślna to 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby ustawienia minimalny i maksymalny rozmiar zaczęły obowiązywać <xref:System.Windows.Forms.FontDialog.MaxSize%2A> musi być większa niż <xref:System.Windows.Forms.FontDialog.MinSize%2A>, i jednocześnie musi być większa niż 0.  
  
 Wartość 0, używane spowoduje prób, aby ustawić tę właściwość do wartości mniejszej niż 0. Jeśli ustawisz <xref:System.Windows.Forms.FontDialog.MaxSize%2A> do wartości mniejszej niż <xref:System.Windows.Forms.FontDialog.MinSize%2A>, <xref:System.Windows.Forms.FontDialog.MinSize%2A> ma ustawioną wartość <xref:System.Windows.Forms.FontDialog.MaxSize%2A>. Wpływ ustawienia <xref:System.Windows.Forms.FontDialog.MinSize%2A> i <xref:System.Windows.Forms.FontDialog.MaxSize%2A> na te same wartości jest ograniczenie zaznaczenie rozmiar, aby rozmiar czcionki pojedynczego.  
  
 Jeśli rozmiar czcionki jest 0, nie ma żadnych limity rozmiaru czcionki.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, za pomocą <xref:System.Windows.Forms.FontDialog.MinSize%2A>, <xref:System.Windows.Forms.FontDialog.MaxSize%2A>, <xref:System.Windows.Forms.FontDialog.ShowEffects%2A> i <xref:System.Windows.Forms.FontDialog.FontMustExist%2A> obsługi i elementy członkowskie <xref:System.Windows.Forms.FontDialog.Apply> zdarzeń. Aby uruchomić ten przykład Wklej poniższy kod w nadrzędnym formularza <xref:System.Windows.Forms.FontDialog> o nazwie `FontDialog1` i <xref:System.Windows.Forms.Button> o nazwie `Button1`.  
  
 [!code-cpp[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.MinSize" />
      </Docs>
    </Member>
    <Member MemberName="MinSize">
      <MemberSignature Language="C#" Value="public int MinSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.MinSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MinSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinSize : int with get, set" Usage="System.Windows.Forms.FontDialog.MinSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia minimalny rozmiar czcionki, którego użytkownik może wybrać.</summary>
        <value>Minimalna punktu rozmiar, który użytkownik może wybrać. Wartość domyślna to 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby ustawienia minimalny i maksymalny rozmiar zaczęły obowiązywać <xref:System.Windows.Forms.FontDialog.MaxSize%2A> musi być większa niż <xref:System.Windows.Forms.FontDialog.MinSize%2A>, i jednocześnie musi być większa niż 0.  
  
 Wartość 0, używane spowoduje prób, aby ustawić tę właściwość do wartości mniejszej niż 0. Jeśli ustawisz <xref:System.Windows.Forms.FontDialog.MinSize%2A> do wartości większej niż <xref:System.Windows.Forms.FontDialog.MaxSize%2A>, <xref:System.Windows.Forms.FontDialog.MaxSize%2A> ma ustawioną wartość <xref:System.Windows.Forms.FontDialog.MinSize%2A>. Wpływ ustawienia <xref:System.Windows.Forms.FontDialog.MinSize%2A> i <xref:System.Windows.Forms.FontDialog.MaxSize%2A> na tę samą wartość jest ograniczenie zaznaczenie rozmiar, aby rozmiar czcionki pojedynczego.  
  
 Jeśli rozmiar czcionki jest 0, nie ma żadnych limity rozmiaru czcionki.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, za pomocą <xref:System.Windows.Forms.FontDialog.MinSize%2A>, <xref:System.Windows.Forms.FontDialog.MaxSize%2A>, <xref:System.Windows.Forms.FontDialog.ShowEffects%2A> i <xref:System.Windows.Forms.FontDialog.FontMustExist%2A> obsługi i elementy członkowskie <xref:System.Windows.Forms.FontDialog.Apply> zdarzeń. Aby uruchomić ten przykład Wklej poniższy kod w nadrzędnym formularza <xref:System.Windows.Forms.FontDialog> o nazwie `FontDialog1` i <xref:System.Windows.Forms.Button> o nazwie `Button1`.  
  
 [!code-cpp[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.MaxSize" />
      </Docs>
    </Member>
    <Member MemberName="OnApply">
      <MemberSignature Language="C#" Value="protected virtual void OnApply (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnApply(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FontDialog.OnApply(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnApply (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnApply(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnApply : EventArgs -&gt; unit&#xA;override this.OnApply : EventArgs -&gt; unit" Usage="fontDialog.OnApply e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.FontDialog.Apply" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać ogólne informacje, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.FontDialog.OnApply(System.EventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.FontDialog.OnApply(System.EventArgs)" /> metody.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.FontDialog.Apply" />
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="protected int Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Options" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.Options" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Options As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int Options { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Options : int" Usage="System.Windows.Forms.FontDialog.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartości w celu zainicjowania <see cref="T:System.Windows.Forms.FontDialog" />.</summary>
        <value>Bitowe połączenie wartości wewnętrznej, która inicjuje <see cref="T:System.Windows.Forms.FontDialog" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.FontDialog.Options%2A> Właściwość odpowiada flagi używaną do inicjalizacji okno dialogowe kolorów przy użyciu systemu Win32. Użyj właściwości <xref:System.Windows.Forms.FontDialog> klasy do pobierania i ustawiania opcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FontDialog.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberSignature Language="F#" Value="override this.Reset : unit -&gt; unit" Usage="fontDialog.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje wszystkie opcje okien dialogowych do wartości domyślnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli opcje są resetowania, przekreślenia i podkreślenia oraz efekty koloru są włączone. Czcionki, na liście zawierają tylko czcionki ekranu obsługiwana przez system.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunDialog">
      <MemberSignature Language="C#" Value="protected override bool RunDialog (IntPtr hWndOwner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool RunDialog(native int hWndOwner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FontDialog.RunDialog(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function RunDialog (hWndOwner As IntPtr) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool RunDialog(IntPtr hWndOwner);" />
      <MemberSignature Language="F#" Value="override this.RunDialog : nativeint -&gt; bool" Usage="fontDialog.RunDialog hWndOwner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hWndOwner" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hWndOwner">Uchwyt okna okno właściciela wspólnego okna dialogowego.</param>
        <summary>Określa okno dialogowe pliku.</summary>
        <returns>
          <see langword="true" /> Jeśli okno dialogowe został uruchomiony pomyślnie; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.FontDialog.RunDialog%2A> Metoda jest wywoływana, gdy użytkownik czcionki — okno dialogowe wywołuje <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScriptsOnly">
      <MemberSignature Language="C#" Value="public bool ScriptsOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScriptsOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.ScriptsOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ScriptsOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScriptsOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ScriptsOnly : bool with get, set" Usage="System.Windows.Forms.FontDialog.ScriptsOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy okno dialogowe umożliwia wybór czcionki dla wszystkich innych niż OEM i Symbol znak zestawy, a także zestaw znaków ANSI.</summary>
        <value>
          <see langword="true" /> czy wybór czcionki dla wszystkich innych niż OEM i Symbol znak zestawy, a także zestaw znaków ANSI jest dozwolony; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.FixedPitchOnly" />
        <altmember cref="P:System.Windows.Forms.FontDialog.FontMustExist" />
      </Docs>
    </Member>
    <Member MemberName="ShowApply">
      <MemberSignature Language="C#" Value="public bool ShowApply { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowApply" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.ShowApply" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowApply As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowApply { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowApply : bool with get, set" Usage="System.Windows.Forms.FontDialog.ShowApply" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy okno dialogowe zawiera ** przycisk Zastosuj **.</summary>
        <value>
          <see langword="true" /> Jeśli okno dialogowe zawiera ** Zastosuj ** przycisk; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób zastosowania wyborów w <xref:System.Windows.Forms.FontDialog> w tekście <xref:System.Windows.Forms.RichTextBox>. W przypadku obsługi, która zostanie wyświetlone okno dialogowe, w przykładzie są inicjowane <xref:System.Windows.Forms.FontDialog.ShowApply%2A> właściwości `true` , a następnie wyświetla <xref:System.Windows.Forms.FontDialog>. W <xref:System.Windows.Forms.FontDialog.Apply> program obsługi zdarzeń, <xref:System.Windows.Forms.FontDialog.Font%2A> właściwości jest przypisany do <xref:System.Windows.Forms.Control.Font%2A?displayProperty=nameWithType> właściwości.  
  
 [!code-cpp[FontDialog.ShowApply#1](~/samples/snippets/cpp/VS_Snippets_Winforms/FontDialog.ShowApply/CPP/form1.cpp#1)]
 [!code-csharp[FontDialog.ShowApply#1](~/samples/snippets/csharp/VS_Snippets_Winforms/FontDialog.ShowApply/CS/form1.cs#1)]
 [!code-vb[FontDialog.ShowApply#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/FontDialog.ShowApply/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowColor" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowEffects" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowHelp" />
      </Docs>
    </Member>
    <Member MemberName="ShowColor">
      <MemberSignature Language="C#" Value="public bool ShowColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.ShowColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowColor { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowColor : bool with get, set" Usage="System.Windows.Forms.FontDialog.ShowColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy okno dialogowe wyświetla wybór koloru.</summary>
        <value>
          <see langword="true" /> Jeśli okno dialogowe wyświetla wybór koloru; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> do wyświetlenia <xref:System.Windows.Forms.FontDialog>. Ten kod wymaga, aby <xref:System.Windows.Forms.Form> została już utworzona z <xref:System.Windows.Forms.TextBox> i przycisk umieścić na nim. On również wymaga, aby `fontDialog1` został utworzony. <xref:System.Drawing.Font> Zawiera informacje o rozmiarze, ale nie dane koloru.  
  
 [!code-cpp[Classic FontDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic FontDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FontDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic FontDialog Example/CS/source.cs#1)]
 [!code-vb[Classic FontDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic FontDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.Color" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowApply" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowEffects" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowHelp" />
      </Docs>
    </Member>
    <Member MemberName="ShowEffects">
      <MemberSignature Language="C#" Value="public bool ShowEffects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowEffects" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.ShowEffects" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowEffects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowEffects { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowEffects : bool with get, set" Usage="System.Windows.Forms.FontDialog.ShowEffects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy okno dialogowe zawiera formanty, które umożliwiają użytkownikowi określenie przekreślenia, podkreślenia i opcje kolor tekstu.</summary>
        <value>
          <see langword="true" /> Jeśli okno dialogowe zawiera formanty można ustawić przekreślenia, podkreślenia i opcje kolor tekstu; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje, za pomocą <xref:System.Windows.Forms.FontDialog.MinSize%2A>, <xref:System.Windows.Forms.FontDialog.MaxSize%2A>, <xref:System.Windows.Forms.FontDialog.ShowEffects%2A> i <xref:System.Windows.Forms.FontDialog.FontMustExist%2A> obsługi i elementy członkowskie <xref:System.Windows.Forms.FontDialog.Apply> zdarzeń. Aby uruchomić ten przykład Wklej poniższy kod w nadrzędnym formularza <xref:System.Windows.Forms.FontDialog> o nazwie `FontDialog1` i <xref:System.Windows.Forms.Button> o nazwie `Button1`.  
  
 [!code-cpp[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowApply" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowColor" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowHelp" />
      </Docs>
    </Member>
    <Member MemberName="ShowHelp">
      <MemberSignature Language="C#" Value="public bool ShowHelp { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowHelp" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.ShowHelp" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowHelp As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowHelp { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowHelp : bool with get, set" Usage="System.Windows.Forms.FontDialog.ShowHelp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy okno dialogowe wyświetla przycisk Pomoc.</summary>
        <value>
          <see langword="true" /> Jeśli w oknie dialogowym wyświetlany przycisk Pomoc; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowApply" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowColor" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowEffects" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FontDialog.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string&#xA;override this.ToString : unit -&gt; string" Usage="fontDialog.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera ciąg, który zawiera nazwę bieżącego Czcionka zaznaczona w oknie dialogowym.</summary>
        <returns>Ciąg, który zawiera nazwę aktualnie wybranej czcionki.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>