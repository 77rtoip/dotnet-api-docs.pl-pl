<Type Name="TableLayoutPanel" FullName="System.Windows.Forms.TableLayoutPanel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7b70a3408584c76493a6fc58d76c3c3e22c148a3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30706673" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TableLayoutPanel : System.Windows.Forms.Panel, System.ComponentModel.IExtenderProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TableLayoutPanel extends System.Windows.Forms.Panel implements class System.ComponentModel.IExtenderProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TableLayoutPanel" />
  <TypeSignature Language="VB.NET" Value="Public Class TableLayoutPanel&#xA;Inherits Panel&#xA;Implements IExtenderProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class TableLayoutPanel : System::Windows::Forms::Panel, System::ComponentModel::IExtenderProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Panel</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IExtenderProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("ColumnCount")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer("System.Windows.Forms.Design.TableLayoutPanelCodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.TableLayoutPanelDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ProvideProperty("ColumnSpan", typeof(System.Windows.Forms.Control))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ProvideProperty("RowSpan", typeof(System.Windows.Forms.Control))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ProvideProperty("Row", typeof(System.Windows.Forms.Control))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ProvideProperty("Column", typeof(System.Windows.Forms.Control))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ProvideProperty("CellPosition", typeof(System.Windows.Forms.Control))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Forms.Docking(System.Windows.Forms.DockingBehavior.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje panelu, który dynamicznie wychodzi poza swoją zawartość w siatce składa się z wierszy i kolumn.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TableLayoutPanel> Kontroli rozmieszcza jego zawartość w siatce. Ponieważ układ jest wykonywane zarówno w czasie projektowania i czas wykonywania, może zmieniać dynamicznie jako zmian środowiska aplikacji. To umożliwia formantów w panelu proporcjonalnie zmiany rozmiaru, dlatego może odpowiadać na zmiany, takie jak zmiana rozmiaru kontrolki nadrzędnej lub tekst długość zmianę z powodu lokalizacji.  
  
 Wszystkie kontrolki formularza systemu Windows może być elementem podrzędnym elementu <xref:System.Windows.Forms.TableLayoutPanel> formantu, łącznie z innymi wystąpieniami <xref:System.Windows.Forms.TableLayoutPanel>. Dzięki temu można tworzyć zaawansowane układy dostosować do zmian w czasie wykonywania.  
  
 <xref:System.Windows.Forms.TableLayoutPanel> Formantu można rozwinąć w celu uwzględnienia nowych formantów, gdy zostaną dodane, w zależności od wartości <xref:System.Windows.Forms.TableLayoutPanel.RowCount%2A>, <xref:System.Windows.Forms.TableLayoutPanel.ColumnCount%2A>, i <xref:System.Windows.Forms.TableLayoutPanel.GrowStyle%2A> właściwości. Ustawienie albo <xref:System.Windows.Forms.TableLayoutPanel.RowCount%2A> lub <xref:System.Windows.Forms.TableLayoutPanel.ColumnCount%2A> właściwości na wartość 0 oznacza, że <xref:System.Windows.Forms.TableLayoutPanel> zostanie anulowane w odpowiednich kierunku.  
  
 Można również sterować kierunek rozwoju (poziomą lub pionową) po <xref:System.Windows.Forms.TableLayoutPanel> formant jest pełna formantów podrzędnych. Domyślnie <xref:System.Windows.Forms.TableLayoutPanel> kontroli dół rozszerza przez dodanie wierszy.  
  
 Jeśli chcesz wierszy i kolumn, które działają inaczej niż domyślne zachowanie właściwości wierszy i kolumn można kontrolować przy użyciu <xref:System.Windows.Forms.TableLayoutPanel.RowStyles%2A> i <xref:System.Windows.Forms.TableLayoutPanel.ColumnStyles%2A> właściwości. Można ustawić właściwości wierszy lub kolumn pojedynczo.  
  
 <xref:System.Windows.Forms.TableLayoutPanel> Kontroli dodaje następujące właściwości do jej kontrolkach podrzędnych: `Cell`, `Column`, `Row`, `ColumnSpan`, i `RowSpan`.  
  
 Można scalać komórek w <xref:System.Windows.Forms.TableLayoutPanel> kontroli przez ustawienie `ColumnSpan` lub `RowSpan` właściwości kontrolki podrzędnej.  
  
> [!NOTE]
>  Aby ustawić `Cell`, `Column`, `Row`, `ColumnSpan`, i `RowSpan` właściwości w czasie wykonywania, użyj <xref:System.Windows.Forms.TableLayoutPanel.SetCellPosition%2A>, <xref:System.Windows.Forms.TableLayoutPanel.SetColumn%2A>, <xref:System.Windows.Forms.TableLayoutPanel.SetRow%2A>, <xref:System.Windows.Forms.TableLayoutPanel.SetColumnSpan%2A>, i <xref:System.Windows.Forms.TableLayoutPanel.SetRowSpan%2A> metody.  
>   
>  Aby odczytać `Cell`, `Column`, `Row`, `ColumnSpan`, i `RowSpan` właściwości w czasie wykonywania, użyj <xref:System.Windows.Forms.TableLayoutPanel.GetCellPosition%2A>, <xref:System.Windows.Forms.TableLayoutPanel.GetColumn%2A>, <xref:System.Windows.Forms.TableLayoutPanel.GetRow%2A>, <xref:System.Windows.Forms.TableLayoutPanel.GetColumnSpan%2A>, i <xref:System.Windows.Forms.TableLayoutPanel.GetRowSpan%2A> metody.  
  
 Zachowanie dokowanie formantów podrzędnych jest taki sam jak inne formanty kontenera.  
  
 Zachowanie kotwiące formantów podrzędnych w <xref:System.Windows.Forms.TableLayoutPanel> różni się od zachowania w innych kontrolek w kontenerze. Jeśli wartość formantu podrzędnego <xref:System.Windows.Forms.Control.Anchor%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.AnchorStyles.Left> lub <xref:System.Windows.Forms.AnchorStyles.Right>formantu zostanie umieszczony przed lewej lub prawej krawędzi komórki, w odległości, który jest sumą formantu <xref:System.Windows.Forms.Control.Margin%2A> właściwości i Panelu<xref:System.Windows.Forms.Control.Padding%2A> właściwości. Jeśli oba <xref:System.Windows.Forms.AnchorStyles.Left> i <xref:System.Windows.Forms.AnchorStyles.Right> wartości są ustawiane, kontrolka będzie ustalany szerokość komórki, z <xref:System.Windows.Forms.Control.Margin%2A> i <xref:System.Windows.Forms.Control.Padding%2A> wartości brana pod uwagę. Zachowanie <xref:System.Windows.Forms.AnchorStyles.Top> i <xref:System.Windows.Forms.AnchorStyles.Bottom> Zakotwiczanie jest analogiczna. Aby uzyskać więcej informacji, zobacz [porady: zakotwiczenie i formantów podrzędnych Dock w formancie TableLayoutPanel](~/docs/framework/winforms/controls/how-to-anchor-and-dock-child-controls-in-a-tablelayoutpanel-control.md).  
  
 Jeśli potrzebujesz formant podrzędny, aby naśladował domyślne zachowanie kotwiące w innych kontrolek w kontenerze, można dostosować <xref:System.Windows.Forms.Control.Margin%2A> i <xref:System.Windows.Forms.Control.Padding%2A> właściwości, aby obsługiwać stałą odległość między obramowania formantu i krawędzi komórki.  
  
 Ustawianie wartości obu `Column` i `Row` właściwości kontrolki podrzędnej-1 spowoduje, że kontrolka zostanie przeniesiony na pierwszy pustej komórki w <xref:System.Windows.Forms.TableLayoutPanel> formantu. Puste komórki zostanie wybrany wyszukiwania, które będzie kontynuowane od lewej do prawej i od góry do dołu. Porządek ten jest zależny od kultury, więc będzie działać poprawnie w układów (od prawej do lewej) od prawej do lewej.  
  
> [!NOTE]
>  Tylko formanty, które mają <xref:System.Windows.Forms.Control.Visible%2A> ustawioną właściwość `true` uczestniczyć w <xref:System.Windows.Forms.TableLayoutPanel> obliczenia układ formantu.  
  
 Zobacz też:  
  
-   [Instrukcje: wyrównywanie i rozciąganie kontrolki w kontrolce TableLayoutPanel](~/docs/framework/winforms/controls/how-to-align-and-stretch-a-control-in-a-tablelayoutpanel-control.md)  
  
-   [Instrukcje: obejmowanie rzędów i kolumn w kontrolce TableLayoutPanel](~/docs/framework/winforms/controls/how-to-span-rows-and-columns-in-a-tablelayoutpanel-control.md)  
  
-   [Instrukcje: edytowanie rzędów i kolumn w kontrolce TableLayoutPanel](~/docs/framework/winforms/controls/how-to-edit-columns-and-rows-in-a-tablelayoutpanel-control.md)  
  
-   [Przewodnik: rozmieszczanie kontrolek w aplikacji Windows Forms za pomocą kontrolki TableLayoutPanel](~/docs/framework/winforms/controls/walkthrough-arranging-controls-on-windows-forms-using-a-tablelayoutpanel.md)  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Windows.Forms.TableLayoutPanel.OnCellPaint%2A> metodę w celu utworzenia niestandardowych wygląd komórek.  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#100](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#100)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#100](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#100)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.FlowLayoutPanel" />
    <altmember cref="T:System.Windows.Forms.TableLayoutSettings" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableLayoutPanel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TableLayoutPanel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.TableLayoutPanel" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor ustawia <xref:System.Windows.Forms.TableLayoutPanel.BorderStyle%2A>, <xref:System.Windows.Forms.TableLayoutPanel.ColumnCount%2A>, <xref:System.Windows.Forms.TableLayoutPanel.RowCount%2A>, i <xref:System.Windows.Forms.TableLayoutPanel.GrowStyle%2A> właściwości do wartości domyślnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TableLayoutPanel.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BorderStyle BorderStyle { System::Windows::Forms::BorderStyle get(); void set(System::Windows::Forms::BorderStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia styl obramowania panelu.</summary>
        <value>Jeden z <see cref="T:System.Windows.Forms.BorderStyle" /> wartości opisujące styl obramowania panelu. Wartość domyślna to <see cref="F:System.Windows.Forms.BorderStyle.None" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CellBorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TableLayoutPanelCellBorderStyle CellBorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.TableLayoutPanelCellBorderStyle CellBorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TableLayoutPanel.CellBorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property CellBorderStyle As TableLayoutPanelCellBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TableLayoutPanelCellBorderStyle CellBorderStyle { System::Windows::Forms::TableLayoutPanelCellBorderStyle get(); void set(System::Windows::Forms::TableLayoutPanelCellBorderStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TableLayoutPanelCellBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia styl obramowania komórki.</summary>
        <value>Jeden z <see cref="T:System.Windows.Forms.TableLayoutPanelCellBorderStyle" /> wartości opisujące styl obramowania komórek w tabeli. Wartość domyślna to <see cref="F:System.Windows.Forms.TableLayoutPanelCellBorderStyle.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie tej wartości spowoduje, że panelu ponowne się i jego zawartość.  
  
   
  
## Examples  
 Poniższy przykład kodu określa wartość <xref:System.Windows.Forms.TableLayoutPanel.BorderStyle%2A> właściwości, w zależności od wybranego <xref:System.Windows.Forms.RadioButton>.  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.BorderStyle" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.ColumnStyles" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.RowStyles" />
      </Docs>
    </Member>
    <Member MemberName="CellPaint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TableLayoutCellPaintEventHandler CellPaint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TableLayoutCellPaintEventHandler CellPaint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TableLayoutPanel.CellPaint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellPaint As TableLayoutCellPaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TableLayoutCellPaintEventHandler ^ CellPaint;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TableLayoutCellPaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy komórka jest rysowane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.TableLayoutPanel.CellPaint> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.TableLayoutPanel> o nazwie `TableLayoutPanel1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.TableLayoutPanel.CellPaint> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#561](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#561)]
 [!code-vb[System.Windows.Forms.EventExamples#561](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#561)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnCount">
      <MemberSignature Language="C#" Value="public int ColumnCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TableLayoutPanel.ColumnCount" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę kolumn w tabeli.</summary>
        <value>Liczba kolumn w <see cref="T:System.Windows.Forms.TableLayoutPanel" /> formantu. Wartość domyślna to 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można określić zarówno <xref:System.Windows.Forms.TableLayoutPanel.ColumnCount%2A> i <xref:System.Windows.Forms.TableLayoutPanel.RowCount%2A> właściwości układów ze znanych i stałe liczbę komórek. Można również określić jedną właściwość lub innych jeśli oczekujesz liczbę komórek w układzie rośnie, przy założeniu, że <xref:System.Windows.Forms.TableLayoutPanel.GrowStyle%2A> właściwość umożliwia takie wzrostu. Jeśli wartość <xref:System.Windows.Forms.TableLayoutPanel.RowCount%2A> wynosi 0, panelu będzie rosnąć przez dodanie wierszy i w przypadku wartości <xref:System.Windows.Forms.TableLayoutPanel.ColumnCount%2A> wynosi 0, panelu będzie rosnąć przez dodanie kolumny. Określanie wzrostu panel z <xref:System.Windows.Forms.TableLayoutPanel.GrowStyle%2A> właściwości jest preferowana względem ustawienie <xref:System.Windows.Forms.TableLayoutPanel.RowCount%2A> lub <xref:System.Windows.Forms.TableLayoutPanel.ColumnCount%2A> 0, jednak.  
  
 Formanty można dodawać lub usuwać z tabeli przy użyciu <xref:System.Windows.Forms.TableLayoutPanel.Controls%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.GrowStyle" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.RowCount" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetColumn(System.Windows.Forms.Control)" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.Controls" />
      </Docs>
    </Member>
    <Member MemberName="ColumnStyles">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TableLayoutColumnStyleCollection ColumnStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TableLayoutColumnStyleCollection ColumnStyles" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TableLayoutPanel.ColumnStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnStyles As TableLayoutColumnStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TableLayoutColumnStyleCollection ^ ColumnStyles { System::Windows::Forms::TableLayoutColumnStyleCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("Columns")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TableLayoutColumnStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję Style kolumn dla <see cref="T:System.Windows.Forms.TableLayoutPanel" />.</summary>
        <value>A <see cref="T:System.Windows.Forms.TableLayoutColumnStyleCollection" /> zawierający <see cref="T:System.Windows.Forms.ColumnStyle" /> dla każdej kolumny w <see cref="T:System.Windows.Forms.TableLayoutPanel" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Windows.Forms.TableLayoutPanel.ColumnStyles%2A> właściwość, aby uzyskać dostęp do właściwości stylu określonych kolumn. Korzystając z członkami <xref:System.Windows.Forms.ColumnStyle> klasy można ustawić właściwości poszczególnych kolumn w tabeli.  
  
 Gdy <xref:System.Windows.Forms.TableLayoutPanel> kontroli rozmieszcza kolumn, przypisuje do każdego z priorytetów <xref:System.Windows.Forms.ColumnStyle> w następującej kolejności:  
  
1.  Kolumny z <xref:System.Windows.Forms.ColumnStyle> ustawioną <xref:System.Windows.Forms.SizeType.Absolute> są traktowane jako pierwszy, a ich stałej szerokości są przydzielone.  
  
2.  Kolumny z <xref:System.Windows.Forms.ColumnStyle> ustawioną <xref:System.Windows.Forms.SizeType.AutoSize> jest dopasowywany do ich zawartości.  
  
3.  Pozostałe miejsce jest podzielony między kolumny z <xref:System.Windows.Forms.ColumnStyle> ustawioną <xref:System.Windows.Forms.SizeType.Percent>.  
  
   
  
## Examples  
 Poniższy kod przykładzie <xref:System.Windows.Forms.ColumnStyle> właściwości każdej kolumny po <xref:System.Windows.Forms.Button> zostanie kliknięty.  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#8)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ColumnStyle" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.RowStyles" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TableLayoutControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TableLayoutControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TableLayoutPanel.Controls" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Controls As TableLayoutControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TableLayoutControlCollection ^ Controls { System::Windows::Forms::TableLayoutControlCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TableLayoutControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję formanty zawarte w <see cref="T:System.Windows.Forms.TableLayoutPanel" />.</summary>
        <value>A <see cref="T:System.Windows.Forms.TableLayoutControlCollection" /> zawierające kontrolki skojarzone z bieżącym <see cref="T:System.Windows.Forms.TableLayoutPanel" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TableLayoutPanel.Controls%2A> Właściwość zawiera wszystkie formanty skojarzonej z tabelą, łącznie z formantami, które nie może być aktualnie wyświetlany z powodu <xref:System.Windows.Forms.TableLayoutPanel.GrowStyle%2A>, <xref:System.Windows.Forms.TableLayoutPanel.ColumnCount%2A>, lub <xref:System.Windows.Forms.TableLayoutPanel.RowCount%2A> ograniczenia.  
  
   
  
## Examples  
 Poniższy przykład kodu wylicza formantów podrzędnych w <xref:System.Windows.Forms.TableLayoutPanel>.  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
        <altmember cref="T:System.Windows.Forms.TableLayoutControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlsInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.Control.ControlCollection CreateControlsInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.Control/ControlCollection CreateControlsInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.CreateControlsInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlsInstance () As Control.ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::Control::ControlCollection ^ CreateControlsInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control+ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie klasy kolekcji formantów dla formantu.</summary>
        <returns>Nowe wystąpienie klasy <see cref="T:System.Windows.Forms.Control.ControlCollection" /> przypisany do kontrolki.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCellPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TableLayoutPanelCellPosition GetCellPosition (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.TableLayoutPanelCellPosition GetCellPosition(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.GetCellPosition(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::TableLayoutPanelCellPosition GetCellPosition(System::Windows::Forms::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Windows.Forms.TableLayoutPanelCellPosition), "-1,-1")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("Cell")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TableLayoutPanelCellPosition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">Formant zawartej w komórce.</param>
        <summary>Pobiera <see cref="T:System.Windows.Forms.TableLayoutPanelCellPosition" /> reprezentujący wiersz i kolumnę komórki.</summary>
        <returns>A <see cref="T:System.Windows.Forms.TableLayoutPanelCellPosition" /> reprezentujący pozycji komórki.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumn">
      <MemberSignature Language="C#" Value="public int GetColumn (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetColumn(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.GetColumn(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetColumn(System::Windows::Forms::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("Column")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">Formant podrzędny <see cref="T:System.Windows.Forms.TableLayoutPanel" />.</param>
        <summary>Zwraca pozycja kolumny określonego formantu podrzędnego.</summary>
        <returns>Kolumna położenia określonego formantu podrzędnego lub wartość-1, jeśli pozycja <paramref name="control" /> jest określany przez <see cref="P:System.Windows.Forms.TableLayoutPanel.LayoutEngine" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `control` obejmuje dwa lub więcej kolumn, <xref:System.Windows.Forms.TableLayoutPanel.GetColumn%2A> metoda zwróci najniższym indeksie kolumny.  
  
 Wartość pozycji kolumny się od zera, dzięki czemu można używać jako indeks tablicy zwrócony przez <xref:System.Windows.Forms.TableLayoutPanel.GetColumnWidths%2A>.  
  
 Ta metoda jest wywoływana przez `Column` właściwość, która panelu dodaje do jego formantów podrzędnych w czasie projektowania.  
  
 Aby uzyskać aktualne położenie `control`nawet wtedy, gdy jego położenie jest określany przez <xref:System.Windows.Forms.TableLayoutPanel.LayoutEngine%2A>, wywołania <xref:System.Windows.Forms.TableLayoutPanel.GetPositionFromControl%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu wylicza formantów podrzędnych w <xref:System.Windows.Forms.TableLayoutPanel> i wyszukuje indeks kolumny dla każdego formantu przy użyciu <xref:System.Windows.Forms.TableLayoutPanel.GetColumn%2A> metody.  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="control" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="control" /> nie jest typem, który można uporządkować to <see cref="T:System.Windows.Forms.Layout.LayoutEngine" />.</exception>
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetColumnWidths" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetRow(System.Windows.Forms.Control)" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetControlFromPosition(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnSpan">
      <MemberSignature Language="C#" Value="public int GetColumnSpan (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetColumnSpan(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.GetColumnSpan(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetColumnSpan(System::Windows::Forms::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("ColumnSpan")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">Formant podrzędny <see cref="T:System.Windows.Forms.TableLayoutPanel" />.</param>
        <summary>Zwraca liczbę kolumn pochodzących z określonego formantu podrzędnego.</summary>
        <returns>Liczba kolumn formantu podrzędnego. Domyślnym ustawieniem jest 1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Łączenie węzłów kolumny często jest przydatna do rozmieszczania formant, który jest znacznie szerszy niż jego elementów równorzędnych.  
  
 Ta metoda jest wywoływana przez `ColumnSpan` właściwość, która panelu dodaje do jego formantów podrzędnych w czasie projektowania.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.TableLayoutPanel.GetColumnSpan%2A> i <xref:System.Windows.Forms.TableLayoutPanel.SetColumnSpan%2A> metod, aby ustawić szerokość <xref:System.Windows.Forms.Button> kontroli w <xref:System.Windows.Forms.TableLayoutPanel>.  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#11)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.SetColumnSpan(System.Windows.Forms.Control,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetRowSpan(System.Windows.Forms.Control)" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.ColumnCount" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetColumn(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnWidths">
      <MemberSignature Language="C#" Value="public int[] GetColumnWidths ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] GetColumnWidths() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.GetColumnWidths" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnWidths () As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;int&gt; ^ GetColumnWidths();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca tablicę reprezentujący szerokości, w kolumny w pikselach <see cref="T:System.Windows.Forms.TableLayoutPanel" />.</summary>
        <returns>Tablica typu <see cref="T:System.Int32" /> zawierający szerokości, w kolumny w pikselach <see cref="T:System.Windows.Forms.TableLayoutPanel" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetControlFromPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control GetControlFromPosition (int column, int row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.Control GetControlFromPosition(int32 column, int32 row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.GetControlFromPosition(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetControlFromPosition (column As Integer, row As Integer) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::Control ^ GetControlFromPosition(int column, int row);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Int32" />
        <Parameter Name="row" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="column">Pozycja kolumny formantu do pobrania.</param>
        <param name="row">Położenie wiersza formantu do pobrania.</param>
        <summary>Zwraca formant podrzędny zajmujące określonej pozycji.</summary>
        <returns>Formant podrzędny zajmujące określona komórka; w przeciwnym razie <see langword="null" /> czy kontrolka nie istnieje w określonym kolumn i wierszy, czy formant ma jego <see cref="P:System.Windows.Forms.Control.Visible" /> ustawioną właściwość <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartości pozycji kolumn i wierszy są wartości początkowej zero.  
  
   
  
## Examples  
 Poniższy przykład kodu wylicza wszystkie pozycje komórki w <xref:System.Windows.Forms.TableLayoutPanel> według kolumn i wierszy przez pętli <xref:System.Windows.Forms.TableLayoutPanel.ColumnCount%2A> i <xref:System.Windows.Forms.TableLayoutPanel.RowCount%2A>i wywołując <xref:System.Windows.Forms.TableLayoutPanel.GetControlFromPosition%2A> metoda pobierania formantu w każdej komórki.  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Albo <paramref name="column" /> lub <paramref name="row" /> (lub obie) jest mniejsza niż 0.</exception>
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetRow(System.Windows.Forms.Control)" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetColumn(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="GetPositionFromControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TableLayoutPanelCellPosition GetPositionFromControl (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.TableLayoutPanelCellPosition GetPositionFromControl(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.GetPositionFromControl(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::TableLayoutPanelCellPosition GetPositionFromControl(System::Windows::Forms::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TableLayoutPanelCellPosition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">Formant zawartej w komórce.</param>
        <summary>Pobiera <see cref="T:System.Windows.Forms.TableLayoutPanelCellPosition" /> reprezentujący wiersz i kolumnę komórki z formantem.</summary>
        <returns>A <see cref="T:System.Windows.Forms.TableLayoutPanelCellPosition" /> reprezentujący pozycji komórki.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TableLayoutPanel.GetPositionFromControl%2A> Metoda zwraca wartość rzeczywista bieżącej pozycji `control`, nawet jeśli jego położenie jest określany przez <xref:System.Windows.Forms.TableLayoutPanel.LayoutEngine%2A>. Ta metoda uwzględnia cały <xref:System.Windows.Forms.TableLayoutPanel> stan kontrolki, w tym kolumn lub wierszy, gdy <xref:System.Windows.Forms.TableLayoutPanel.LayoutEngine%2A> umieścił formantu o jego `Column` i `Row` właściwości ustawioną wartość -1. Jest to równoważne sytuację, w którym <xref:System.Windows.Forms.TableLayoutPanel.GetColumn%2A> i <xref:System.Windows.Forms.TableLayoutPanel.GetRow%2A> Zwróć -1.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRow">
      <MemberSignature Language="C#" Value="public int GetRow (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetRow(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.GetRow(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetRow(System::Windows::Forms::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("Row")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">Formant podrzędny <see cref="T:System.Windows.Forms.TableLayoutPanel" />.</param>
        <summary>Zwraca pozycję wiersza określonego formantu podrzędnego.</summary>
        <returns>Położenie wiersza <paramref name="control" />, lub wartość-1, jeśli pozycja <paramref name="control" /> jest określany przez <see cref="P:System.Windows.Forms.TableLayoutPanel.LayoutEngine" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `control` obejmuje dwa lub więcej wierszy, <xref:System.Windows.Forms.TableLayoutPanel.GetRow%2A> metoda zwróci najniższym indeksie wiersza.  
  
 Wartość pozycji wiersza się od zera, dzięki czemu można używać jako indeks tablicy zwrócony przez <xref:System.Windows.Forms.TableLayoutPanel.GetRowHeights%2A>.  
  
 Ta metoda jest wywoływana przez `Row` właściwość, która panelu dodaje do jego formantów podrzędnych w czasie projektowania.  
  
 Aby uzyskać aktualne położenie `control`nawet wtedy, gdy jego położenie jest określany przez <xref:System.Windows.Forms.TableLayoutPanel.LayoutEngine%2A>, wywołania <xref:System.Windows.Forms.TableLayoutPanel.GetPositionFromControl%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu wylicza formantów podrzędnych w <xref:System.Windows.Forms.TableLayoutPanel> i wyszukuje indeks wiersza dla każdego przy użyciu <xref:System.Windows.Forms.TableLayoutPanel.GetRow%2A> metody.  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="control" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="control" /> nie jest typem, który można uporządkować to <see cref="T:System.Windows.Forms.Layout.LayoutEngine" />.</exception>
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetRowHeights" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetColumn(System.Windows.Forms.Control)" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetControlFromPosition(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetRowHeights">
      <MemberSignature Language="C#" Value="public int[] GetRowHeights ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] GetRowHeights() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.GetRowHeights" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRowHeights () As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;int&gt; ^ GetRowHeights();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca tablicę reprezentujący wysokości wierszy w pikselach <see cref="T:System.Windows.Forms.TableLayoutPanel" />.</summary>
        <returns>Tablica typu <see cref="T:System.Int32" /> zawierający wysokości wierszy w pikselach <see cref="T:System.Windows.Forms.TableLayoutPanel" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRowSpan">
      <MemberSignature Language="C#" Value="public int GetRowSpan (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetRowSpan(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.GetRowSpan(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetRowSpan(System::Windows::Forms::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("RowSpan")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">Formant podrzędny <see cref="T:System.Windows.Forms.TableLayoutPanel" />.</param>
        <summary>Zwraca liczbę wierszy, pochodzących z określonego formantu podrzędnego.</summary>
        <returns>Liczba wierszy łączone przez formant podrzędny. Domyślnym ustawieniem jest 1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Często jest przydatna do rozmieszczania formant, który jest znacznie większa niż jego elementów równorzędnych wierszy.  
  
 Ta metoda jest wywoływana przez `RowSpan` właściwość, która panelu dodaje do jego formantów podrzędnych w czasie projektowania.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.TableLayoutPanel.GetRowSpan%2A> i <xref:System.Windows.Forms.TableLayoutPanel.SetRowSpan%2A> metod, aby ustawić szerokość <xref:System.Windows.Forms.Button> kontroli w <xref:System.Windows.Forms.TableLayoutPanel>.  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#11)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.SetRowSpan(System.Windows.Forms.Control,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetColumnSpan(System.Windows.Forms.Control)" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.ColumnCount" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetRow(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="GrowStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TableLayoutPanelGrowStyle GrowStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.TableLayoutPanelGrowStyle GrowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TableLayoutPanel.GrowStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property GrowStyle As TableLayoutPanelGrowStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TableLayoutPanelGrowStyle GrowStyle { System::Windows::Forms::TableLayoutPanelGrowStyle get(); void set(System::Windows::Forms::TableLayoutPanelGrowStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TableLayoutPanelGrowStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą czy <see cref="T:System.Windows.Forms.TableLayoutPanel" /> kontroli powinien rozwinąć w celu uwzględnienia nowych komórek, gdy wszystkie istniejące komórki są zajęte.</summary>
        <value>A <see cref="T:System.Windows.Forms.TableLayoutPanelGrowStyle" /> wskazujący schemat wzrostu. Wartość domyślna to <see cref="F:System.Windows.Forms.TableLayoutPanelGrowStyle.AddRows" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie <xref:System.Windows.Forms.TableLayoutPanel> kontroli dół rozszerza przez dodanie wierszy.  
  
> [!NOTE]
>  Jeśli próby Dodawanie formantu do pełnej <xref:System.Windows.Forms.TableLayoutPanel> kontroli i wartość <xref:System.Windows.Forms.TableLayoutPanel.GrowStyle%2A> jest <xref:System.Windows.Forms.TableLayoutPanelGrowStyle.FixedSize>, a następnie <xref:System.ArgumentException> jest generowany.  
  
   
  
## Examples  
 Poniższy przykład kodu określa wartość <xref:System.Windows.Forms.TableLayoutPanel.GrowStyle%2A> właściwości, w zależności od wybranego <xref:System.Windows.Forms.RadioButton>. W czasie, gdy użytkownik kliknie przycisk wykonywania **GrowStyle testu**, <xref:System.Windows.Forms.Button> formant został dodany do <xref:System.Windows.Forms.TableLayoutPanel> formantu. Jeśli <xref:System.Windows.Forms.TableLayoutPanel> formant jest pełna, rozszerza przez dodanie wiersz lub kolumnę lub zgłasza wyjątek, w zależności od wartości <xref:System.Windows.Forms.TableLayoutPanel.GrowStyle%2A>.  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość właściwości jest nieprawidłowa dla <see cref="T:System.Windows.Forms.TableLayoutPanelGrowStyle" /> wyliczenia.</exception>
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.ColumnCount" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.RowCount" />
      </Docs>
    </Member>
    <Member MemberName="LayoutEngine">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.Layout.LayoutEngine LayoutEngine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Layout.LayoutEngine LayoutEngine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TableLayoutPanel.LayoutEngine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LayoutEngine As LayoutEngine" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Layout::LayoutEngine ^ LayoutEngine { System::Windows::Forms::Layout::LayoutEngine ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Layout.LayoutEngine</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wystąpienie pamięci podręcznej aparatu układu panelu.</summary>
        <value>
          <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> Dla panelu zawartości.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutSettings">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TableLayoutSettings LayoutSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TableLayoutSettings LayoutSettings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TableLayoutPanel.LayoutSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property LayoutSettings As TableLayoutSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TableLayoutSettings ^ LayoutSettings { System::Windows::Forms::TableLayoutSettings ^ get(); void set(System::Windows::Forms::TableLayoutSettings ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TableLayoutSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość reprezentującą ustawień układu tabeli.</summary>
        <value>A <see cref="T:System.Windows.Forms.TableLayoutSettings" /> zawierający ustawienia układu tabeli.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Wartość właściwości jest <see langword="null" />, lub próbowano ustawić <see cref="T:System.Windows.Forms.TableLayoutSettings" /> bezpośrednio, który jest nie jest obsługiwana; zamiast tego należy ustawić poszczególnych właściwości.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnCellPaint">
      <MemberSignature Language="C#" Value="protected virtual void OnCellPaint (System.Windows.Forms.TableLayoutCellPaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellPaint(class System.Windows.Forms.TableLayoutCellPaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.OnCellPaint(System.Windows.Forms.TableLayoutCellPaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellPaint (e As TableLayoutCellPaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellPaint(System::Windows::Forms::TableLayoutCellPaintEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TableLayoutCellPaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.TableLayoutCellPaintEventArgs" /> udostępniające dane dla zdarzenia.</param>
        <summary>Odbiera połączenie, gdy komórka powinny być odświeżane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Windows.Forms.TableLayoutPanel.OnCellPaint%2A> metodę w celu utworzenia niestandardowych wygląd komórek.  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#100](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#100)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#100](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#100)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLayout">
      <MemberSignature Language="C#" Value="protected override void OnLayout (System.Windows.Forms.LayoutEventArgs levent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLayout(class System.Windows.Forms.LayoutEventArgs levent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLayout (levent As LayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLayout(System::Windows::Forms::LayoutEventArgs ^ levent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="levent" Type="System.Windows.Forms.LayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="levent">A <see cref="T:System.Windows.Forms.LayoutEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.Control.Layout" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaintBackground">
      <MemberSignature Language="C#" Value="protected override void OnPaintBackground (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaintBackground(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaintBackground (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaintBackground(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> zawierający informacje o panelu do malowania.</param>
        <summary>Umożliwia malowanie tła panelu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowCount">
      <MemberSignature Language="C#" Value="public int RowCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TableLayoutPanel.RowCount" />
      <MemberSignature Language="VB.NET" Value="Public Property RowCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RowCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę wierszy w tabeli.</summary>
        <value>Liczba wierszy w <see cref="T:System.Windows.Forms.TableLayoutPanel" /> formantu. Wartość domyślna to 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można określić zarówno <xref:System.Windows.Forms.TableLayoutPanel.ColumnCount%2A> i <xref:System.Windows.Forms.TableLayoutPanel.RowCount%2A> właściwości układów ze znanych i stałe liczbę komórek. Można również określić jedną właściwość lub innych jeśli oczekujesz liczbę komórek w układzie rośnie, przy założeniu, że <xref:System.Windows.Forms.TableLayoutPanel.GrowStyle%2A> właściwość umożliwia takie wzrostu. Jeśli wartość <xref:System.Windows.Forms.TableLayoutPanel.RowCount%2A> wynosi 0, panelu będzie rosnąć przez dodanie wierszy i w przypadku wartości <xref:System.Windows.Forms.TableLayoutPanel.ColumnCount%2A> wynosi 0, panelu będzie rosnąć przez dodanie kolumny. Określanie wzrostu panel z <xref:System.Windows.Forms.TableLayoutPanel.GrowStyle%2A> właściwości jest preferowana względem ustawienie <xref:System.Windows.Forms.TableLayoutPanel.RowCount%2A> lub <xref:System.Windows.Forms.TableLayoutPanel.ColumnCount%2A> 0, jednak.  
  
 Formanty można dodawać lub usuwać z tabeli przy użyciu <xref:System.Windows.Forms.TableLayoutPanel.Controls%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.GrowStyle" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.ColumnCount" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetRow(System.Windows.Forms.Control)" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.Controls" />
      </Docs>
    </Member>
    <Member MemberName="RowStyles">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TableLayoutRowStyleCollection RowStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TableLayoutRowStyleCollection RowStyles" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TableLayoutPanel.RowStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowStyles As TableLayoutRowStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TableLayoutRowStyleCollection ^ RowStyles { System::Windows::Forms::TableLayoutRowStyleCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("Rows")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TableLayoutRowStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję style wierszy dla <see cref="T:System.Windows.Forms.TableLayoutPanel" />.</summary>
        <value>A <see cref="T:System.Windows.Forms.TableLayoutRowStyleCollection" /> zawierający <see cref="T:System.Windows.Forms.RowStyle" /> dla każdego wiersza w <see cref="T:System.Windows.Forms.TableLayoutPanel" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Windows.Forms.TableLayoutPanel.RowStyles%2A> właściwość, aby uzyskać dostęp do właściwości stylu określonych wierszy. Korzystając z członkami <xref:System.Windows.Forms.RowStyle> klasy można ustawić właściwości poszczególnych wierszy w tabeli.  
  
 Gdy <xref:System.Windows.Forms.TableLayoutPanel> kontroli rozmieszcza wiersze, przypisuje do każdego z priorytetów <xref:System.Windows.Forms.RowStyle> w następującej kolejności:  
  
1.  Wiersze z <xref:System.Windows.Forms.RowStyle> ustawioną <xref:System.Windows.Forms.SizeType.Absolute> są traktowane jako pierwszy, a ich stałej wysokości są przydzielone.  
  
2.  Wiersze z <xref:System.Windows.Forms.RowStyle> ustawioną <xref:System.Windows.Forms.SizeType.AutoSize> jest dopasowywany do ich zawartości.  
  
3.  Pozostałe miejsce jest podzielony między wiersze z <xref:System.Windows.Forms.RowStyle> ustawioną <xref:System.Windows.Forms.SizeType.Percent>.  
  
   
  
## Examples  
 Poniższy kod przykładzie <xref:System.Windows.Forms.RowStyle> właściwości każdego wiersza, kiedy <xref:System.Windows.Forms.Button> zostanie kliknięty.  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#9)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.RowStyle" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.ColumnStyles" />
      </Docs>
    </Member>
    <Member MemberName="ScaleControl">
      <MemberSignature Language="C#" Value="protected override void ScaleControl (System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ScaleControl(valuetype System.Drawing.SizeF factor, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ScaleControl (factor As SizeF, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ScaleControl(System::Drawing::SizeF factor, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="System.Drawing.SizeF" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="factor">Wysokość i szerokość granice formantu.</param>
        <param name="specified">Jedną z wartości <see cref="T:System.Windows.Forms.BoundsSpecified" /> , który określa granice formantu do użycia podczas definiowania jego rozmiar i położenie.</param>
        <summary>Skaluje formantu lokalizacji, rozmiar, dopełnienie i margines.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleCore">
      <MemberSignature Language="C#" Value="protected override void ScaleCore (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ScaleCore(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.ScaleCore(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ScaleCore (dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ScaleCore(float dx, float dy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx">Stosunek za pomocą którego można skalować w poziomie formantu.</param>
        <param name="dy">Współczynnik za pomocą którego można skalować w pionie formantu</param>
        <summary>Wykonuje pracę skalowania cały panel i formanty podrzędne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TableLayoutPanel.ScaleCore%2A> Używa metody `dx` i `dy` wartości parametrów niezależne skalowanie wysokość i szerokość panelu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCellPosition">
      <MemberSignature Language="C#" Value="public void SetCellPosition (System.Windows.Forms.Control control, System.Windows.Forms.TableLayoutPanelCellPosition position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCellPosition(class System.Windows.Forms.Control control, valuetype System.Windows.Forms.TableLayoutPanelCellPosition position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.SetCellPosition(System.Windows.Forms.Control,System.Windows.Forms.TableLayoutPanelCellPosition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCellPosition(System::Windows::Forms::Control ^ control, System::Windows::Forms::TableLayoutPanelCellPosition position);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="position" Type="System.Windows.Forms.TableLayoutPanelCellPosition" />
      </Parameters>
      <Docs>
        <param name="control">Formant zawartej w komórce.</param>
        <param name="position">A <see cref="T:System.Windows.Forms.TableLayoutPanelCellPosition" /> reprezentujący wiersz i kolumnę komórki.</param>
        <summary>Ustawia <see cref="T:System.Windows.Forms.TableLayoutPanelCellPosition" /> reprezentujący wiersz i kolumnę komórki.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColumn">
      <MemberSignature Language="C#" Value="public void SetColumn (System.Windows.Forms.Control control, int column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumn(class System.Windows.Forms.Control control, int32 column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.SetColumn(System.Windows.Forms.Control,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumn(System::Windows::Forms::Control ^ control, int column);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="column" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="control">Formant można przenieść do innej kolumny.</param>
        <param name="column">Kolumna, do której <c>kontroli</c> zostaną przeniesione.</param>
        <summary>Ustawia pozycja kolumny określonego formantu podrzędnego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TableLayoutPanel.SetColumn%2A> Metody przenosi formantu do innej kolumny w <xref:System.Windows.Forms.TableLayoutPanel>. Kolumn i wierszy mają indeksy liczony od zera. Ustawienie pozycja kolumny na -1 określa, czy formant będzie przepływać do pierwszej pustej komórki.  
  
 Ta metoda układu tabeli spowoduje ponowne zastosowanie do wszystkich kontrolek w <xref:System.Windows.Forms.TableLayoutPanel>.  
  
 Ta metoda jest wywoływana przez `Column` właściwość, która panelu dodaje do jego formantów podrzędnych w czasie projektowania.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.TableLayoutPanel.SetColumn%2A> metody można zamienić dwa formanty zawarte w <xref:System.Windows.Forms.TableLayoutPanel> formantu. W przykładzie założono <xref:System.Windows.Forms.TableLayoutPanel> kontrolki z co najmniej dwa wiersze.  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#12)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.SetRow(System.Windows.Forms.Control,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetColumn(System.Windows.Forms.Control)" />
        <altmember cref="Overload:System.Windows.Forms.Control.Invalidate" />
      </Docs>
    </Member>
    <Member MemberName="SetColumnSpan">
      <MemberSignature Language="C#" Value="public void SetColumnSpan (System.Windows.Forms.Control control, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnSpan(class System.Windows.Forms.Control control, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.SetColumnSpan(System.Windows.Forms.Control,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnSpan(System::Windows::Forms::Control ^ control, int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="control">Formant podrzędny <see cref="T:System.Windows.Forms.TableLayoutPanel" />.</param>
        <param name="value">Liczba kolumn zakresu.</param>
        <summary>Ustawia liczbę kolumn formantu podrzędnego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Łączenie węzłów kolumny często jest przydatna do rozmieszczania formant, który jest znacznie szerszy niż jego elementów równorzędnych.  
  
 Ta metoda jest wywoływana przez `ColumnSpan` właściwość, która panelu dodaje do jego formantów podrzędnych w czasie projektowania.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.TableLayoutPanel.GetColumnSpan%2A> i <xref:System.Windows.Forms.TableLayoutPanel.SetColumnSpan%2A> metod, aby ustawić szerokość <xref:System.Windows.Forms.Button> kontroli w <xref:System.Windows.Forms.TableLayoutPanel>.  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#11)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="value" /> jest mniejsza niż 1.</exception>
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetColumnSpan(System.Windows.Forms.Control)" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.SetRowSpan(System.Windows.Forms.Control,System.Int32)" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.ColumnCount" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetColumn(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="SetRow">
      <MemberSignature Language="C#" Value="public void SetRow (System.Windows.Forms.Control control, int row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRow(class System.Windows.Forms.Control control, int32 row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.SetRow(System.Windows.Forms.Control,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRow(System::Windows::Forms::Control ^ control, int row);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="row" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="control">Formant można przenieść do innego wiersza.</param>
        <param name="row">Wiersz, do którego <c>kontroli</c> zostaną przeniesione.</param>
        <summary>Ustawia położenie wiersza określonego formantu podrzędnego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TableLayoutPanel.SetRow%2A> Metody przenosi formantu do kolejnego wiersza w <xref:System.Windows.Forms.TableLayoutPanel> formantu. Kolumn i wierszy mają indeksy liczony od zera. Ustawienie pozycji wiersza na -1 określa, czy formant będzie przepływać do pierwszej pustej komórki.  
  
 Ta metoda układu tabeli spowoduje ponowne zastosowanie do wszystkich kontrolek w <xref:System.Windows.Forms.TableLayoutPanel>.  
  
 Ta metoda jest wywoływana przez `Row` właściwość, która panelu dodaje do jego formantów podrzędnych w czasie projektowania.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.TableLayoutPanel.SetColumn%2A> metody można zamienić dwa formanty zawarte w <xref:System.Windows.Forms.TableLayoutPanel> formantu. W przykładzie założono <xref:System.Windows.Forms.TableLayoutPanel> kontrolki z co najmniej dwa wiersze.  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#13)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.SetRow(System.Windows.Forms.Control,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetRow(System.Windows.Forms.Control)" />
        <altmember cref="Overload:System.Windows.Forms.Control.Invalidate" />
      </Docs>
    </Member>
    <Member MemberName="SetRowSpan">
      <MemberSignature Language="C#" Value="public void SetRowSpan (System.Windows.Forms.Control control, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRowSpan(class System.Windows.Forms.Control control, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.SetRowSpan(System.Windows.Forms.Control,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRowSpan(System::Windows::Forms::Control ^ control, int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="control">Formant podrzędny <see cref="T:System.Windows.Forms.TableLayoutPanel" />.</param>
        <param name="value">Liczba wierszy zakresu.</param>
        <summary>Ustawia liczbę wierszy łączone przez formant podrzędny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Często jest przydatna do rozmieszczania formant, który jest znacznie większa niż jego elementów równorzędnych wierszy.  
  
 Ta metoda jest wywoływana przez `RowSpan` właściwość, która panelu dodaje do jego formantów podrzędnych w czasie projektowania.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.TableLayoutPanel.GetRowSpan%2A> i <xref:System.Windows.Forms.TableLayoutPanel.SetRowSpan%2A> metod, aby ustawić szerokość <xref:System.Windows.Forms.Button> kontroli w <xref:System.Windows.Forms.TableLayoutPanel>.  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#11)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="value" /> jest mniejsza niż 1.</exception>
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetRowSpan(System.Windows.Forms.Control)" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.SetColumnSpan(System.Windows.Forms.Control,System.Int32)" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.ColumnCount" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetRow(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IExtenderProvider.CanExtend">
      <MemberSignature Language="C#" Value="bool IExtenderProvider.CanExtend (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.ComponentModel.IExtenderProvider.CanExtend(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.System#ComponentModel#IExtenderProvider#CanExtend(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CanExtend (obj As Object) As Boolean Implements IExtenderProvider.CanExtend" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.ComponentModel.IExtenderProvider.CanExtend(System::Object ^ obj) = System::ComponentModel::IExtenderProvider::CanExtend;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <see cref="T:System.Object" /> Do odbierania właściwości rozszerzeń.</param>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)" />.</summary>
        <returns>
          <see langword="true" /> Jeśli ten obiekt może zapewnić właściwości rozszerzeń do określonego obiektu. w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Forms.TableLayoutPanel> wystąpienia jest rzutowane na <xref:System.ComponentModel.IExtenderProvider> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>