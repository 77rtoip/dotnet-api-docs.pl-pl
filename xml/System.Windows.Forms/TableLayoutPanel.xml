<Type Name="TableLayoutPanel" FullName="System.Windows.Forms.TableLayoutPanel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="725928d53379940c6c4e04057e1dfff99dcb2c47" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69178670" /></Metadata><TypeSignature Language="C#" Value="public class TableLayoutPanel : System.Windows.Forms.Panel, System.ComponentModel.IExtenderProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TableLayoutPanel extends System.Windows.Forms.Panel implements class System.ComponentModel.IExtenderProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TableLayoutPanel" />
  <TypeSignature Language="VB.NET" Value="Public Class TableLayoutPanel&#xA;Inherits Panel&#xA;Implements IExtenderProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class TableLayoutPanel : System::Windows::Forms::Panel, System::ComponentModel::IExtenderProvider" />
  <TypeSignature Language="F#" Value="type TableLayoutPanel = class&#xA;    inherit Panel&#xA;    interface IExtenderProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Panel</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IExtenderProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("ColumnCount")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer("System.Windows.Forms.Design.TableLayoutPanelCodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.TableLayoutPanelDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ProvideProperty("ColumnSpan", typeof(System.Windows.Forms.Control))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ProvideProperty("RowSpan", typeof(System.Windows.Forms.Control))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ProvideProperty("Row", typeof(System.Windows.Forms.Control))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ProvideProperty("Column", typeof(System.Windows.Forms.Control))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ProvideProperty("CellPosition", typeof(System.Windows.Forms.Control))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Forms.Docking(System.Windows.Forms.DockingBehavior.Never)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer("System.Windows.Forms.Design.TableLayoutPanelCodeDomSerializer, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.TableLayoutPanelDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje Panel, który dynamicznie ustala zawartość w siatce składającej się z wierszy i kolumn.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TableLayoutPanel> Formant rozmieszcza swoją zawartość w siatce. Ponieważ układ jest wykonywany zarówno w czasie projektowania, jak i w czasie wykonywania, może zmieniać się dynamicznie w miarę zmiany środowiska aplikacji. Dzięki temu kontrolki w panelu mogą zmieniać rozmiar proporcjonalnie do rozmiaru, dzięki czemu może reagować na zmiany, takie jak zmiana rozmiaru kontrolki nadrzędnej lub długość tekstu zmieniana z powodu lokalizacji.  
  
 Każdy formant Windows Forms może być elementem podrzędnym <xref:System.Windows.Forms.TableLayoutPanel> formantu, w tym innymi <xref:System.Windows.Forms.TableLayoutPanel>wystąpieniami. Dzięki temu można tworzyć zaawansowane układy, które dostosowują się do zmian w czasie wykonywania.  
  
 Formant można rozszerzyć, aby uwzględnić nowe kontrolki po ich dodaniu, w zależności od wartości <xref:System.Windows.Forms.TableLayoutPanel.RowCount%2A>właściwości, <xref:System.Windows.Forms.TableLayoutPanel.ColumnCount%2A>i <xref:System.Windows.Forms.TableLayoutPanel.GrowStyle%2A>. <xref:System.Windows.Forms.TableLayoutPanel> Ustawienie właściwości <xref:System.Windows.Forms.TableLayoutPanel.ColumnCount%2A> <xref:System.Windows.Forms.TableLayoutPanel> lub na wartość 0 oznacza, że zostanie ona anulowana w odpowiednim kierunku. <xref:System.Windows.Forms.TableLayoutPanel.RowCount%2A>  
  
 Można również kontrolować kierunek rozwinięcia (w poziomie lub w pionie), <xref:System.Windows.Forms.TableLayoutPanel> gdy kontrolka jest zapełniona kontrolkami podrzędnymi. Domyślnie kontrolka rozszerza <xref:System.Windows.Forms.TableLayoutPanel> się w dół przez dodanie wierszy.  
  
 Jeśli chcesz, aby wiersze i kolumny zachowywały się inaczej niż zachowanie domyślne, możesz kontrolować właściwości wierszy i kolumn za pomocą <xref:System.Windows.Forms.TableLayoutPanel.RowStyles%2A> właściwości i. <xref:System.Windows.Forms.TableLayoutPanel.ColumnStyles%2A> Można ustawić właściwości wierszy lub kolumn pojedynczo.  
  
 `Row` `Column` `Cell` `RowSpan` `ColumnSpan`Kontrolka dodaje następujące właściwości do swoich formantów podrzędnych:,,, i. <xref:System.Windows.Forms.TableLayoutPanel>  
  
 Komórki w <xref:System.Windows.Forms.TableLayoutPanel> kontrolce można scalać, `ColumnSpan` ustawiając właściwości lub `RowSpan` w kontrolce podrzędnej.  
  
> [!NOTE]
>  Aby `Cell`ustawić właściwości, `Column`, `Row`, <xref:System.Windows.Forms.TableLayoutPanel.SetCellPosition%2A> iwczasie<xref:System.Windows.Forms.TableLayoutPanel.SetColumn%2A>wykonywania, użyj metod ,<xref:System.Windows.Forms.TableLayoutPanel.SetRow%2A> ,,<xref:System.Windows.Forms.TableLayoutPanel.SetRowSpan%2A> i. <xref:System.Windows.Forms.TableLayoutPanel.SetColumnSpan%2A> `ColumnSpan` `RowSpan`  
>   
>  Aby `Cell`odczytać właściwości, `Column`, `Row`, <xref:System.Windows.Forms.TableLayoutPanel.GetCellPosition%2A> iwczasie<xref:System.Windows.Forms.TableLayoutPanel.GetColumn%2A>wykonywania, użyj metod ,<xref:System.Windows.Forms.TableLayoutPanel.GetRow%2A> ,,<xref:System.Windows.Forms.TableLayoutPanel.GetRowSpan%2A> i. <xref:System.Windows.Forms.TableLayoutPanel.GetColumnSpan%2A> `ColumnSpan` `RowSpan`  
  
 Zachowanie dokowania formantów podrzędnych jest takie samo jak w przypadku innych kontrolek kontenera.  
  
 Zachowanie zakotwiczone w kontrolkach podrzędnych w <xref:System.Windows.Forms.TableLayoutPanel> innym zakresie niż zachowanie w innych kontrolkach kontenera. Jeśli wartość <xref:System.Windows.Forms.Control.Anchor%2A> właściwości kontrolki podrzędnej jest ustawiona na <xref:System.Windows.Forms.AnchorStyles.Left> lub <xref:System.Windows.Forms.AnchorStyles.Right>, formant zostanie umieszczony względem lewej lub prawej krawędzi komórki, na odległość, <xref:System.Windows.Forms.Control.Margin%2A> która jest sumą właściwości kontrolki i panelu <xref:System.Windows.Forms.Control.Padding%2A> właściwość. <xref:System.Windows.Forms.AnchorStyles.Left> Jeśli obie <xref:System.Windows.Forms.AnchorStyles.Right> wartości są ustawione, rozmiar kontrolki zmieni się na szerokość komórki, z <xref:System.Windows.Forms.Control.Margin%2A> uwzględnieniem wartości i <xref:System.Windows.Forms.Control.Padding%2A> . Zachowanie <xref:System.Windows.Forms.AnchorStyles.Top> i<xref:System.Windows.Forms.AnchorStyles.Bottom> Kotwice są analogiczne. Aby uzyskać więcej informacji, zobacz [jak: Zakotwiczenie i dokowanie formantów podrzędnych w formancie](~/docs/framework/winforms/controls/how-to-anchor-and-dock-child-controls-in-a-tablelayoutpanel-control.md)TableLayoutPanel.  
  
 Jeśli potrzebujesz formantu podrzędnego do naśladowania domyślnego zachowania zakotwiczonego w innych kontrolkach kontenera, możesz dostosować <xref:System.Windows.Forms.Control.Margin%2A> właściwości i <xref:System.Windows.Forms.Control.Padding%2A> , aby zachować stałą odległość między obramowaniem kontrolki a obramowaniem komórki.  
  
 Ustawienie wartości `Column` właściwości i `Row` kontrolki podrzędnej na-1 spowoduje, że formant zostanie przeniesiony do <xref:System.Windows.Forms.TableLayoutPanel> pierwszej pustej komórki w formancie. Pusta komórka zostanie wybrana w wyszukiwaniu, która przechodzi od lewej do prawej i od góry do dołu. Ta kolejność jest zależna od kultury, więc działa prawidłowo w układach od prawej do lewej (RTL).  
  
> [!NOTE]
>  Tylko kontrolki, które <xref:System.Windows.Forms.Control.Visible%2A> mają właściwość ustawioną na `true` uczestnictwo w <xref:System.Windows.Forms.TableLayoutPanel> obliczeniach układu formantu.  
  
 Zobacz również:  
  
-   [Instrukcje: Wyrównywanie i rozciąganie kontrolki w kontrolce TableLayoutPanel](~/docs/framework/winforms/controls/how-to-align-and-stretch-a-control-in-a-tablelayoutpanel-control.md)  
  
-   [Instrukcje: Rozciągaj wiersze i kolumny w kontrolce TableLayoutPanel](~/docs/framework/winforms/controls/how-to-span-rows-and-columns-in-a-tablelayoutpanel-control.md)  
  
-   [Instrukcje: Edytowanie kolumn i wierszy w kontrolce TableLayoutPanel](~/docs/framework/winforms/controls/how-to-edit-columns-and-rows-in-a-tablelayoutpanel-control.md)  
  
-   [Przewodnik: Rozmieszczanie kontrolek na Windows Forms przy użyciu TableLayoutPanel](~/docs/framework/winforms/controls/walkthrough-arranging-controls-on-windows-forms-using-a-tablelayoutpanel.md)  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób przesłaniania <xref:System.Windows.Forms.TableLayoutPanel.OnCellPaint%2A> metody w celu utworzenia niestandardowego wyglądu komórki.  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#100](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#100)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#100](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#100)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.FlowLayoutPanel" />
    <altmember cref="T:System.Windows.Forms.TableLayoutSettings" />
    <related type="Article" href="https://msdn.microsoft.com/library/b6706efb-d7a4-45ec-8cf4-08fa993e3afb">Najlepsze praktyki dotyczące formantu TableLayoutPanel</related>
    <related type="Article" href="https://msdn.microsoft.com/library/9233e0c3-2fa6-405e-8701-959479b1250e">Zachowanie AutoSize w formancie TableLayoutPanel</related>
    <related type="Article" href="https://msdn.microsoft.com/library/0d267c35-25f1-49b8-8976-c64e8f0ddc0b">Instrukcje: zakotwiczenie i dokowanie kontrolek podrzędnych w kontrolce TableLayoutPanel</related>
    <related type="Article" href="https://msdn.microsoft.com/library/d13eff2d-701c-4b6e-8838-3885cbfb7223">Instrukcje: projektowanie układu formularzy systemu Windows dobrze reagującego na lokalizację</related>
    <related type="Article" href="https://msdn.microsoft.com/library/babdf198-404c-485d-a914-ed370c6ecd99">Instrukcje: tworzenie formularza systemu Windows o zmiennych rozmiarach do wpisywania danych</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableLayoutPanel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TableLayoutPanel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.TableLayoutPanel" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor ustawia <xref:System.Windows.Forms.TableLayoutPanel.BorderStyle%2A>wartości domyślne <xref:System.Windows.Forms.TableLayoutPanel.ColumnCount%2A> <xref:System.Windows.Forms.TableLayoutPanel.RowCount%2A>,,, <xref:System.Windows.Forms.TableLayoutPanel.GrowStyle%2A> i.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TableLayoutPanel.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BorderStyle BorderStyle { System::Windows::Forms::BorderStyle get(); void set(System::Windows::Forms::BorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderStyle : System.Windows.Forms.BorderStyle with get, set" Usage="System.Windows.Forms.TableLayoutPanel.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia styl obramowania panelu.</summary>
        <value>Jedna z <see cref="T:System.Windows.Forms.BorderStyle" /> wartości opisujących styl obramowania panelu. Wartość domyślna to <see cref="F:System.Windows.Forms.BorderStyle.None" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CellBorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TableLayoutPanelCellBorderStyle CellBorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.TableLayoutPanelCellBorderStyle CellBorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TableLayoutPanel.CellBorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property CellBorderStyle As TableLayoutPanelCellBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TableLayoutPanelCellBorderStyle CellBorderStyle { System::Windows::Forms::TableLayoutPanelCellBorderStyle get(); void set(System::Windows::Forms::TableLayoutPanelCellBorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.CellBorderStyle : System.Windows.Forms.TableLayoutPanelCellBorderStyle with get, set" Usage="System.Windows.Forms.TableLayoutPanel.CellBorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TableLayoutPanelCellBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia styl obramowania komórki.</summary>
        <value>Jedna z <see cref="T:System.Windows.Forms.TableLayoutPanelCellBorderStyle" /> wartości opisujących styl wszystkich obramowań komórek w tabeli. Wartość domyślna to <see cref="F:System.Windows.Forms.TableLayoutPanelCellBorderStyle.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie tej wartości spowoduje, że panel będzie ponownie rysowany i jego zawartość.  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia wartość właściwości w <xref:System.Windows.Forms.TableLayoutPanel.BorderStyle%2A> zależności od wybranej. <xref:System.Windows.Forms.RadioButton>  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.BorderStyle" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.ColumnStyles" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.RowStyles" />
      </Docs>
    </Member>
    <Member MemberName="CellPaint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TableLayoutCellPaintEventHandler CellPaint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TableLayoutCellPaintEventHandler CellPaint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TableLayoutPanel.CellPaint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellPaint As TableLayoutCellPaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TableLayoutCellPaintEventHandler ^ CellPaint;" />
      <MemberSignature Language="F#" Value="member this.CellPaint : System.Windows.Forms.TableLayoutCellPaintEventHandler " Usage="member this.CellPaint : System.Windows.Forms.TableLayoutCellPaintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TableLayoutCellPaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy komórka zostanie narysowana ponownie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportuje wystąpienie <xref:System.Windows.Forms.TableLayoutPanel.CellPaint> zdarzenia. Ten raport pomaga dowiedzieć się, kiedy wystąpi zdarzenie i może pomóc w debugowaniu.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu zawierającego wystąpienie typu <xref:System.Windows.Forms.TableLayoutPanel> o nazwie. `TableLayoutPanel1` Następnie upewnij się, że program obsługi zdarzeń jest skojarzony <xref:System.Windows.Forms.TableLayoutPanel.CellPaint> ze zdarzeniem.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#561](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#561)]
 [!code-vb[System.Windows.Forms.EventExamples#561](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#561)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnCount">
      <MemberSignature Language="C#" Value="public int ColumnCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TableLayoutPanel.ColumnCount" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnCount : int with get, set" Usage="System.Windows.Forms.TableLayoutPanel.ColumnCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę kolumn w tabeli.</summary>
        <value>Liczba kolumn w <see cref="T:System.Windows.Forms.TableLayoutPanel" /> kontrolce. Wartość domyślna to 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można określić <xref:System.Windows.Forms.TableLayoutPanel.ColumnCount%2A> <xref:System.Windows.Forms.TableLayoutPanel.RowCount%2A> właściwości i dla układów o znanej i stałej liczbie komórek. Możesz również określić jedną właściwość lub drugą, jeśli oczekujesz, że liczba komórek w układzie zostanie powiększona, przy założeniu, <xref:System.Windows.Forms.TableLayoutPanel.GrowStyle%2A> że Właściwość pozwala na taki wzrost. Jeśli wartość <xref:System.Windows.Forms.TableLayoutPanel.RowCount%2A> wynosi 0, panel zostanie powiększony przez dodanie wierszy, a jeśli <xref:System.Windows.Forms.TableLayoutPanel.ColumnCount%2A> wartość wynosi 0, panel zostanie powiększony przez dodanie kolumn. Określanie wzrostu panelu z <xref:System.Windows.Forms.TableLayoutPanel.GrowStyle%2A> właściwością jest preferowany do ustawienia <xref:System.Windows.Forms.TableLayoutPanel.ColumnCount%2A> <xref:System.Windows.Forms.TableLayoutPanel.RowCount%2A> lub 0.  
  
 Kontrolki można dodawać lub usuwać z tabeli przy użyciu <xref:System.Windows.Forms.TableLayoutPanel.Controls%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.GrowStyle" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.RowCount" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetColumn(System.Windows.Forms.Control)" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.Controls" />
      </Docs>
    </Member>
    <Member MemberName="ColumnStyles">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TableLayoutColumnStyleCollection ColumnStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TableLayoutColumnStyleCollection ColumnStyles" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TableLayoutPanel.ColumnStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnStyles As TableLayoutColumnStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TableLayoutColumnStyleCollection ^ ColumnStyles { System::Windows::Forms::TableLayoutColumnStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnStyles : System.Windows.Forms.TableLayoutColumnStyleCollection" Usage="System.Windows.Forms.TableLayoutPanel.ColumnStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("Columns")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TableLayoutColumnStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję stylów kolumn dla <see cref="T:System.Windows.Forms.TableLayoutPanel" />.</summary>
        <value>A <see cref="T:System.Windows.Forms.TableLayoutColumnStyleCollection" /> dlakażdejkolumnywkontrolce.<see cref="T:System.Windows.Forms.ColumnStyle" /> <see cref="T:System.Windows.Forms.TableLayoutPanel" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TableLayoutPanel.ColumnStyles%2A> Użyj właściwości, aby uzyskać dostęp do właściwości stylu określonych kolumn. Można użyć elementów członkowskich <xref:System.Windows.Forms.ColumnStyle> klasy, aby ustawić cechy poszczególnych kolumn w tabeli.  
  
 Gdy kontrolka porządkuje kolumny, przypisuje priorytety do poszczególnych <xref:System.Windows.Forms.ColumnStyle> w następującej kolejności: <xref:System.Windows.Forms.TableLayoutPanel>  
  
1.  Kolumny z <xref:System.Windows.Forms.ColumnStyle> <xref:System.Windows.Forms.SizeType.Absolute> ustawioną opcją są traktowane jako pierwsze, a ich stałe szerokości są przydzieleni.  
  
2.  Kolumny o <xref:System.Windows.Forms.ColumnStyle> <xref:System.Windows.Forms.SizeType.AutoSize> ustawionym rozmiarze mają rozmiar do zawartości.  
  
3.  Pozostałe miejsce jest dzielone między kolumnami <xref:System.Windows.Forms.ColumnStyle> z ustawioną na. <xref:System.Windows.Forms.SizeType.Percent>  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia <xref:System.Windows.Forms.ColumnStyle> właściwości każdej kolumny <xref:System.Windows.Forms.Button> po kliknięciu.  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#8)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ColumnStyle" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.RowStyles" />
        <related type="Article" href="https://msdn.microsoft.com/library/9233e0c3-2fa6-405e-8701-959479b1250e">Zachowanie AutoSize w formancie TableLayoutPanel</related>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TableLayoutControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TableLayoutControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TableLayoutPanel.Controls" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Controls As TableLayoutControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TableLayoutControlCollection ^ Controls { System::Windows::Forms::TableLayoutControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Windows.Forms.TableLayoutControlCollection" Usage="System.Windows.Forms.TableLayoutPanel.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TableLayoutControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję kontrolek zawartych w elemencie <see cref="T:System.Windows.Forms.TableLayoutPanel" />.</summary>
        <value>Zawiera kontrolki skojarzone z bieżącym <see cref="T:System.Windows.Forms.TableLayoutPanel" />. <see cref="T:System.Windows.Forms.TableLayoutControlCollection" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość zawiera wszystkie kontrolki skojarzone z tabelą, w tym kontrolki, które mogą nie być aktualnie <xref:System.Windows.Forms.TableLayoutPanel.ColumnCount%2A>wyświetlane z <xref:System.Windows.Forms.TableLayoutPanel.GrowStyle%2A> <xref:System.Windows.Forms.TableLayoutPanel.RowCount%2A> powodu ograniczeń. <xref:System.Windows.Forms.TableLayoutPanel.Controls%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu wylicza wszystkie kontrolki podrzędne w <xref:System.Windows.Forms.TableLayoutPanel>.  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
        <altmember cref="T:System.Windows.Forms.TableLayoutControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlsInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.Control.ControlCollection CreateControlsInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.Control/ControlCollection CreateControlsInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.CreateControlsInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlsInstance () As Control.ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::Control::ControlCollection ^ CreateControlsInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateControlsInstance : unit -&gt; System.Windows.Forms.Control.ControlCollection" Usage="tableLayoutPanel.CreateControlsInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control+ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie kolekcji formantów dla kontrolki.</summary>
        <returns>Nowe wystąpienie <see cref="T:System.Windows.Forms.Control.ControlCollection" /> przypisane do kontrolki.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCellPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TableLayoutPanelCellPosition GetCellPosition (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.TableLayoutPanelCellPosition GetCellPosition(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.GetCellPosition(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::TableLayoutPanelCellPosition GetCellPosition(System::Windows::Forms::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.GetCellPosition : System.Windows.Forms.Control -&gt; System.Windows.Forms.TableLayoutPanelCellPosition" Usage="tableLayoutPanel.GetCellPosition control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Windows.Forms.TableLayoutPanelCellPosition), "-1,-1")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("Cell")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0">
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TableLayoutPanelCellPosition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">Kontrolka znajdująca się w komórce.</param>
        <summary><see cref="T:System.Windows.Forms.TableLayoutPanelCellPosition" /> Pobiera, który reprezentuje wiersz i kolumnę komórki.</summary>
        <returns><see cref="T:System.Windows.Forms.TableLayoutPanelCellPosition" /> Reprezentujący położenie komórki.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumn">
      <MemberSignature Language="C#" Value="public int GetColumn (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetColumn(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.GetColumn(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetColumn(System::Windows::Forms::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.GetColumn : System.Windows.Forms.Control -&gt; int" Usage="tableLayoutPanel.GetColumn control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("Column")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">Kontrolka podrzędna elementu <see cref="T:System.Windows.Forms.TableLayoutPanel" />.</param>
        <summary>Zwraca położenie kolumny określonego formantu podrzędnego.</summary>
        <returns>Pozycja kolumny określonego formantu podrzędnego lub-1, jeśli pozycja <paramref name="control" /> jest określona przez. <see cref="P:System.Windows.Forms.TableLayoutPanel.LayoutEngine" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `control` obejmuje dwie lub więcej kolumn <xref:System.Windows.Forms.TableLayoutPanel.GetColumn%2A> , metoda zwróci najniższy indeks kolumny.  
  
 Wartość pozycji kolumny jest zależna od zera, więc można jej użyć jako indeksu tablicy zwracanej przez <xref:System.Windows.Forms.TableLayoutPanel.GetColumnWidths%2A>.  
  
 Ta metoda jest wywoływana przez `Column` właściwość, którą panel dodaje do swoich formantów podrzędnych w czasie projektowania.  
  
 Aby uzyskać rzeczywistą pozycję `control`, nawet gdy jej położenie jest określone przez <xref:System.Windows.Forms.TableLayoutPanel.LayoutEngine%2A>, wywołaj <xref:System.Windows.Forms.TableLayoutPanel.GetPositionFromControl%2A> metodę.  
  
   
  
## Examples  
 Poniższy przykład kodu wylicza wszystkie kontrolki podrzędne w <xref:System.Windows.Forms.TableLayoutPanel> i odnajduje indeks kolumny dla każdej kontrolki <xref:System.Windows.Forms.TableLayoutPanel.GetColumn%2A> przy użyciu metody.  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="control" />jest <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="control" />nie jest typem, który można uporządkować w ten <see cref="T:System.Windows.Forms.Layout.LayoutEngine" />sposób.</exception>
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetColumnWidths" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetRow(System.Windows.Forms.Control)" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetControlFromPosition(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnSpan">
      <MemberSignature Language="C#" Value="public int GetColumnSpan (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetColumnSpan(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.GetColumnSpan(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetColumnSpan(System::Windows::Forms::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.GetColumnSpan : System.Windows.Forms.Control -&gt; int" Usage="tableLayoutPanel.GetColumnSpan control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("ColumnSpan")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">Kontrolka podrzędna elementu <see cref="T:System.Windows.Forms.TableLayoutPanel" />.</param>
        <summary>Zwraca liczbę kolumn łączonych przez określoną kontrolkę podrzędną.</summary>
        <returns>Liczba kolumn łączonych przez formant podrzędny. Domyślnym ustawieniem jest 1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Łączenie kolumn jest często przydatne do pozycjonowania formantów, które są znacznie szersze niż jego elementy równorzędne.  
  
 Ta metoda jest wywoływana przez `ColumnSpan` właściwość, którą panel dodaje do swoich formantów podrzędnych w czasie projektowania.  
  
   
  
## Examples  
 Poniższy <xref:System.Windows.Forms.TableLayoutPanel.GetColumnSpan%2A> przykład kodu używa metod i <xref:System.Windows.Forms.TableLayoutPanel.SetColumnSpan%2A> , aby <xref:System.Windows.Forms.Button> ustawić szerokość kontrolki w <xref:System.Windows.Forms.TableLayoutPanel>.  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#11)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.SetColumnSpan(System.Windows.Forms.Control,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetRowSpan(System.Windows.Forms.Control)" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.ColumnCount" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetColumn(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnWidths">
      <MemberSignature Language="C#" Value="public int[] GetColumnWidths ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] GetColumnWidths() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.GetColumnWidths" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnWidths () As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;int&gt; ^ GetColumnWidths();" />
      <MemberSignature Language="F#" Value="member this.GetColumnWidths : unit -&gt; int[]" Usage="tableLayoutPanel.GetColumnWidths " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca tablicę reprezentującą szerokości (w pikselach) kolumn w <see cref="T:System.Windows.Forms.TableLayoutPanel" />.</summary>
        <returns>Tablica typu <see cref="T:System.Int32" /> , która zawiera szerokości (w pikselach) kolumn <see cref="T:System.Windows.Forms.TableLayoutPanel" />w.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetControlFromPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control GetControlFromPosition (int column, int row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.Control GetControlFromPosition(int32 column, int32 row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.GetControlFromPosition(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetControlFromPosition (column As Integer, row As Integer) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::Control ^ GetControlFromPosition(int column, int row);" />
      <MemberSignature Language="F#" Value="member this.GetControlFromPosition : int * int -&gt; System.Windows.Forms.Control" Usage="tableLayoutPanel.GetControlFromPosition (column, row)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Int32" />
        <Parameter Name="row" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="column">Położenie kolumny formantu do pobrania.</param>
        <param name="row">Położenie wiersza formantu do pobrania.</param>
        <summary>Zwraca kontrolkę podrzędną zajmującą się określoną pozycją.</summary>
        <returns>Formant podrzędny zajmują określoną komórkę; w przeciwnym <see langword="null" /> razie, jeśli żadna kontrolka nie istnieje w określonej kolumnie i wierszu lub Jeśli kontrolka <see cref="P:System.Windows.Forms.Control.Visible" /> ma ustawioną <see langword="false" />właściwość.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartości pozycji kolumny i wiersza są równe zero.  
  
   
  
## Examples  
 Poniższy przykład kodu wylicza wszystkie położenia <xref:System.Windows.Forms.TableLayoutPanel> komórek w pętli przez zapętlenie przez kolumny i wiersze dostarczone <xref:System.Windows.Forms.TableLayoutPanel.RowCount%2A>przez <xref:System.Windows.Forms.TableLayoutPanel.ColumnCount%2A> , a następnie wywołanie <xref:System.Windows.Forms.TableLayoutPanel.GetControlFromPosition%2A> metody w celu pobrania kontrolki w każdej komórce.  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość <paramref name="column" /> lub<paramref name="row" /> (lub obie) jest mniejsza niż 0.</exception>
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetRow(System.Windows.Forms.Control)" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetColumn(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="GetPositionFromControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TableLayoutPanelCellPosition GetPositionFromControl (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.TableLayoutPanelCellPosition GetPositionFromControl(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.GetPositionFromControl(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::TableLayoutPanelCellPosition GetPositionFromControl(System::Windows::Forms::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.GetPositionFromControl : System.Windows.Forms.Control -&gt; System.Windows.Forms.TableLayoutPanelCellPosition" Usage="tableLayoutPanel.GetPositionFromControl control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TableLayoutPanelCellPosition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">Kontrolka znajdująca się w komórce.</param>
        <summary><see cref="T:System.Windows.Forms.TableLayoutPanelCellPosition" /> Pobiera, który reprezentuje wiersz i kolumnę komórki zawierającej kontrolkę.</summary>
        <returns><see cref="T:System.Windows.Forms.TableLayoutPanelCellPosition" /> Reprezentujący położenie komórki.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zwraca rzeczywistą bieżącą `control`pozycję, nawet jeśli jej <xref:System.Windows.Forms.TableLayoutPanel.LayoutEngine%2A>pozycja jest określona przez. <xref:System.Windows.Forms.TableLayoutPanel.GetPositionFromControl%2A> Ta <xref:System.Windows.Forms.TableLayoutPanel> Metoda uwzględnia cały stan kontroli, w tym łączenie kolumn lub wierszy, a <xref:System.Windows.Forms.TableLayoutPanel.LayoutEngine%2A> po `Column` umieszczeniu kontrolki z właściwościami i `Row` ustawionymi na wartość-1. Jest to równoznaczne z sytuacją, <xref:System.Windows.Forms.TableLayoutPanel.GetColumn%2A> w <xref:System.Windows.Forms.TableLayoutPanel.GetRow%2A> której i zwrócić-1.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRow">
      <MemberSignature Language="C#" Value="public int GetRow (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetRow(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.GetRow(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetRow(System::Windows::Forms::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.GetRow : System.Windows.Forms.Control -&gt; int" Usage="tableLayoutPanel.GetRow control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("Row")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">Kontrolka podrzędna elementu <see cref="T:System.Windows.Forms.TableLayoutPanel" />.</param>
        <summary>Zwraca pozycję wiersza określonej kontrolki podrzędnej.</summary>
        <returns>Pozycja <paramref name="control" />wiersza, lub-1, jeśli <paramref name="control" /> pozycja jest określana przez <see cref="P:System.Windows.Forms.TableLayoutPanel.LayoutEngine" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `control` obejmuje dwa lub więcej wierszy <xref:System.Windows.Forms.TableLayoutPanel.GetRow%2A> , metoda zwróci najniższy indeks wiersza.  
  
 Wartość pozycji wiersza jest zależna od zera, więc można jej użyć jako indeksu tablicy zwracanej przez <xref:System.Windows.Forms.TableLayoutPanel.GetRowHeights%2A>.  
  
 Ta metoda jest wywoływana przez `Row` właściwość, którą panel dodaje do swoich formantów podrzędnych w czasie projektowania.  
  
 Aby uzyskać rzeczywistą pozycję `control`, nawet gdy jej położenie jest określone przez <xref:System.Windows.Forms.TableLayoutPanel.LayoutEngine%2A>, wywołaj <xref:System.Windows.Forms.TableLayoutPanel.GetPositionFromControl%2A> metodę.  
  
   
  
## Examples  
 Poniższy przykład kodu wylicza wszystkie kontrolki podrzędne w <xref:System.Windows.Forms.TableLayoutPanel> i odnajduje indeks wierszy dla każdego z nich <xref:System.Windows.Forms.TableLayoutPanel.GetRow%2A> przy użyciu metody.  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="control" />jest <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="control" />nie jest typem, który można uporządkować w ten <see cref="T:System.Windows.Forms.Layout.LayoutEngine" />sposób.</exception>
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetRowHeights" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetColumn(System.Windows.Forms.Control)" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetControlFromPosition(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetRowHeights">
      <MemberSignature Language="C#" Value="public int[] GetRowHeights ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] GetRowHeights() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.GetRowHeights" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRowHeights () As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;int&gt; ^ GetRowHeights();" />
      <MemberSignature Language="F#" Value="member this.GetRowHeights : unit -&gt; int[]" Usage="tableLayoutPanel.GetRowHeights " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca tablicę reprezentującą wysokość (w pikselach) wierszy w <see cref="T:System.Windows.Forms.TableLayoutPanel" />.</summary>
        <returns>Tablica typu <see cref="T:System.Int32" /> , która zawiera wysokość (w pikselach) wierszy <see cref="T:System.Windows.Forms.TableLayoutPanel" />w.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRowSpan">
      <MemberSignature Language="C#" Value="public int GetRowSpan (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetRowSpan(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.GetRowSpan(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetRowSpan(System::Windows::Forms::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.GetRowSpan : System.Windows.Forms.Control -&gt; int" Usage="tableLayoutPanel.GetRowSpan control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("RowSpan")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">Kontrolka podrzędna elementu <see cref="T:System.Windows.Forms.TableLayoutPanel" />.</param>
        <summary>Zwraca liczbę wierszy, które są objęte przez określoną kontrolkę podrzędną.</summary>
        <returns>Liczba wierszy łączonych przez formant podrzędny. Domyślnym ustawieniem jest 1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Łączenie wierszy jest często przydatne do pozycjonowania kontrolki, która jest znacznie większa niż jego elementy równorzędne.  
  
 Ta metoda jest wywoływana przez `RowSpan` właściwość, którą panel dodaje do swoich formantów podrzędnych w czasie projektowania.  
  
   
  
## Examples  
 Poniższy <xref:System.Windows.Forms.TableLayoutPanel.GetRowSpan%2A> przykład kodu używa metod i <xref:System.Windows.Forms.TableLayoutPanel.SetRowSpan%2A> , aby <xref:System.Windows.Forms.Button> ustawić szerokość kontrolki w <xref:System.Windows.Forms.TableLayoutPanel>.  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#11)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.SetRowSpan(System.Windows.Forms.Control,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetColumnSpan(System.Windows.Forms.Control)" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.ColumnCount" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetRow(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="GrowStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TableLayoutPanelGrowStyle GrowStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.TableLayoutPanelGrowStyle GrowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TableLayoutPanel.GrowStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property GrowStyle As TableLayoutPanelGrowStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TableLayoutPanelGrowStyle GrowStyle { System::Windows::Forms::TableLayoutPanelGrowStyle get(); void set(System::Windows::Forms::TableLayoutPanelGrowStyle value); };" />
      <MemberSignature Language="F#" Value="member this.GrowStyle : System.Windows.Forms.TableLayoutPanelGrowStyle with get, set" Usage="System.Windows.Forms.TableLayoutPanel.GrowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TableLayoutPanelGrowStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Windows.Forms.TableLayoutPanel" /> kontrolka powinna zostać rozwinięta w celu uwzględnienia nowych komórek, gdy wszystkie istniejące komórki są zajęte.</summary>
        <value><see cref="T:System.Windows.Forms.TableLayoutPanelGrowStyle" /> Wskazujący schemat wzrostu. Wartość domyślna to <see cref="F:System.Windows.Forms.TableLayoutPanelGrowStyle.AddRows" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie kontrolka rozszerza <xref:System.Windows.Forms.TableLayoutPanel> się w dół przez dodanie wierszy.  
  
> [!NOTE]
>  Jeśli podjęto próbę dodania kontrolki <xref:System.Windows.Forms.TableLayoutPanel> do pełnej kontroli i <xref:System.Windows.Forms.TableLayoutPanel.GrowStyle%2A> wartość parametru is <xref:System.Windows.Forms.TableLayoutPanelGrowStyle.FixedSize>, <xref:System.ArgumentException> jest zgłaszany.  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia wartość właściwości w <xref:System.Windows.Forms.TableLayoutPanel.GrowStyle%2A> zależności od wybranej. <xref:System.Windows.Forms.RadioButton> W czasie wykonywania, gdy użytkownik kliknie przycisk z etykietą Powiększ **test**, <xref:System.Windows.Forms.Button> do <xref:System.Windows.Forms.TableLayoutPanel> kontrolki zostanie dodany formant. Jeśli formant jest zapełniony, rozszerza przez dodanie wiersza lub kolumny lub wywołuje wyjątek, w zależności od <xref:System.Windows.Forms.TableLayoutPanel.GrowStyle%2A>wartości. <xref:System.Windows.Forms.TableLayoutPanel>  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość właściwości jest nieprawidłowa dla <see cref="T:System.Windows.Forms.TableLayoutPanelGrowStyle" /> wyliczenia.</exception>
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.ColumnCount" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.RowCount" />
      </Docs>
    </Member>
    <Member MemberName="LayoutEngine">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.Layout.LayoutEngine LayoutEngine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Layout.LayoutEngine LayoutEngine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TableLayoutPanel.LayoutEngine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LayoutEngine As LayoutEngine" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Layout::LayoutEngine ^ LayoutEngine { System::Windows::Forms::Layout::LayoutEngine ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LayoutEngine : System.Windows.Forms.Layout.LayoutEngine" Usage="System.Windows.Forms.TableLayoutPanel.LayoutEngine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Layout.LayoutEngine</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera buforowane wystąpienie aparatu układu panelu.</summary>
        <value><see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> Dla zawartości panelu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutSettings">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TableLayoutSettings LayoutSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TableLayoutSettings LayoutSettings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TableLayoutPanel.LayoutSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property LayoutSettings As TableLayoutSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TableLayoutSettings ^ LayoutSettings { System::Windows::Forms::TableLayoutSettings ^ get(); void set(System::Windows::Forms::TableLayoutSettings ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LayoutSettings : System.Windows.Forms.TableLayoutSettings with get, set" Usage="System.Windows.Forms.TableLayoutPanel.LayoutSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TableLayoutSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość reprezentującą ustawienia układu tabeli.</summary>
        <value>A <see cref="T:System.Windows.Forms.TableLayoutSettings" /> zawiera ustawienia układu tabeli.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Wartość właściwości to <see langword="null" />lub podjęto próbę ustawienia <see cref="T:System.Windows.Forms.TableLayoutSettings" /> bezpośrednio, co nie jest obsługiwane. zamiast tego należy ustawić poszczególne właściwości.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnCellPaint">
      <MemberSignature Language="C#" Value="protected virtual void OnCellPaint (System.Windows.Forms.TableLayoutCellPaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellPaint(class System.Windows.Forms.TableLayoutCellPaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.OnCellPaint(System.Windows.Forms.TableLayoutCellPaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellPaint (e As TableLayoutCellPaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellPaint(System::Windows::Forms::TableLayoutCellPaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellPaint : System.Windows.Forms.TableLayoutCellPaintEventArgs -&gt; unit&#xA;override this.OnCellPaint : System.Windows.Forms.TableLayoutCellPaintEventArgs -&gt; unit" Usage="tableLayoutPanel.OnCellPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TableLayoutCellPaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.TableLayoutCellPaintEventArgs" /> , która dostarcza dane dla zdarzenia.</param>
        <summary>Odbiera wywołanie, gdy komórka powinna zostać odświeżona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje sposób przesłaniania <xref:System.Windows.Forms.TableLayoutPanel.OnCellPaint%2A> metody w celu utworzenia niestandardowego wyglądu komórki.  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#100](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#100)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#100](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#100)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLayout">
      <MemberSignature Language="C#" Value="protected override void OnLayout (System.Windows.Forms.LayoutEventArgs levent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLayout(class System.Windows.Forms.LayoutEventArgs levent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLayout (levent As LayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLayout(System::Windows::Forms::LayoutEventArgs ^ levent);" />
      <MemberSignature Language="F#" Value="override this.OnLayout : System.Windows.Forms.LayoutEventArgs -&gt; unit" Usage="tableLayoutPanel.OnLayout levent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="levent" Type="System.Windows.Forms.LayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="levent">A <see cref="T:System.Windows.Forms.LayoutEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.Control.Layout" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaintBackground">
      <MemberSignature Language="C#" Value="protected override void OnPaintBackground (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaintBackground(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaintBackground (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaintBackground(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaintBackground : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="tableLayoutPanel.OnPaintBackground e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> , który zawiera informacje o panelu do malowania.</param>
        <summary>Maluje tło panelu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowCount">
      <MemberSignature Language="C#" Value="public int RowCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TableLayoutPanel.RowCount" />
      <MemberSignature Language="VB.NET" Value="Public Property RowCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RowCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RowCount : int with get, set" Usage="System.Windows.Forms.TableLayoutPanel.RowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę wierszy w tabeli.</summary>
        <value>Liczba wierszy w <see cref="T:System.Windows.Forms.TableLayoutPanel" /> formancie. Wartość domyślna to 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można określić <xref:System.Windows.Forms.TableLayoutPanel.ColumnCount%2A> <xref:System.Windows.Forms.TableLayoutPanel.RowCount%2A> właściwości i dla układów o znanej i stałej liczbie komórek. Możesz również określić jedną właściwość lub drugą, jeśli oczekujesz, że liczba komórek w układzie zostanie powiększona, przy założeniu, <xref:System.Windows.Forms.TableLayoutPanel.GrowStyle%2A> że Właściwość pozwala na taki wzrost. Jeśli wartość <xref:System.Windows.Forms.TableLayoutPanel.RowCount%2A> wynosi 0, panel zostanie powiększony przez dodanie wierszy, a jeśli <xref:System.Windows.Forms.TableLayoutPanel.ColumnCount%2A> wartość wynosi 0, panel zostanie powiększony przez dodanie kolumn. Określanie wzrostu panelu z <xref:System.Windows.Forms.TableLayoutPanel.GrowStyle%2A> właściwością jest preferowany do ustawienia <xref:System.Windows.Forms.TableLayoutPanel.ColumnCount%2A> <xref:System.Windows.Forms.TableLayoutPanel.RowCount%2A> lub 0.  
  
 Kontrolki można dodawać lub usuwać z tabeli przy użyciu <xref:System.Windows.Forms.TableLayoutPanel.Controls%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.GrowStyle" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.ColumnCount" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetRow(System.Windows.Forms.Control)" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.Controls" />
      </Docs>
    </Member>
    <Member MemberName="RowStyles">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TableLayoutRowStyleCollection RowStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TableLayoutRowStyleCollection RowStyles" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TableLayoutPanel.RowStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowStyles As TableLayoutRowStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TableLayoutRowStyleCollection ^ RowStyles { System::Windows::Forms::TableLayoutRowStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RowStyles : System.Windows.Forms.TableLayoutRowStyleCollection" Usage="System.Windows.Forms.TableLayoutPanel.RowStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("Rows")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TableLayoutRowStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję stylów wierszy dla <see cref="T:System.Windows.Forms.TableLayoutPanel" />.</summary>
        <value>A <see cref="T:System.Windows.Forms.TableLayoutRowStyleCollection" /> dlakażdegowierszawkontrolce.<see cref="T:System.Windows.Forms.RowStyle" /> <see cref="T:System.Windows.Forms.TableLayoutPanel" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TableLayoutPanel.RowStyles%2A> Użyj właściwości, aby uzyskać dostęp do właściwości stylu określonych wierszy. Można użyć elementów członkowskich <xref:System.Windows.Forms.RowStyle> klasy, aby ustawić cechy poszczególnych wierszy w tabeli.  
  
 Gdy formant rozmieszcza swoje wiersze, przypisuje priorytety do każdego <xref:System.Windows.Forms.RowStyle> w następującej kolejności: <xref:System.Windows.Forms.TableLayoutPanel>  
  
1.  Wiersze z <xref:System.Windows.Forms.RowStyle> <xref:System.Windows.Forms.SizeType.Absolute> ustawioną opcją są traktowane jako pierwsze, a ich stałe wysokości są przyliczane.  
  
2.  Wiersze o <xref:System.Windows.Forms.RowStyle> <xref:System.Windows.Forms.SizeType.AutoSize> ustawionym rozmiarze mają rozmiar do zawartości.  
  
3.  Pozostałe miejsce jest dzielone między wiersze z <xref:System.Windows.Forms.RowStyle> ustawioną <xref:System.Windows.Forms.SizeType.Percent>na.  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia <xref:System.Windows.Forms.RowStyle> właściwości każdego wiersza <xref:System.Windows.Forms.Button> po kliknięciu.  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#9)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.RowStyle" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.ColumnStyles" />
        <related type="Article" href="https://msdn.microsoft.com/library/9233e0c3-2fa6-405e-8701-959479b1250e">Zachowanie AutoSize w formancie TableLayoutPanel</related>
      </Docs>
    </Member>
    <Member MemberName="ScaleControl">
      <MemberSignature Language="C#" Value="protected override void ScaleControl (System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ScaleControl(valuetype System.Drawing.SizeF factor, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ScaleControl (factor As SizeF, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ScaleControl(System::Drawing::SizeF factor, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.ScaleControl : System.Drawing.SizeF * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="tableLayoutPanel.ScaleControl (factor, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="System.Drawing.SizeF" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="factor">Wysokość i szerokość granic formantu.</param>
        <param name="specified">Jedna z wartości <see cref="T:System.Windows.Forms.BoundsSpecified" /> , która określa granice formantu do użycia podczas definiowania jego rozmiaru i położenia.</param>
        <summary>Skaluje lokalizację, rozmiar, wypełnienie i margines formantu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleCore">
      <MemberSignature Language="C#" Value="protected override void ScaleCore (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ScaleCore(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.ScaleCore(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ScaleCore (dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ScaleCore(float dx, float dy);" />
      <MemberSignature Language="F#" Value="override this.ScaleCore : single * single -&gt; unit" Usage="tableLayoutPanel.ScaleCore (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx">Stosunek skalowania w poziomie.</param>
        <param name="dy">Współczynnik skalowania kontrolki w pionie.</param>
        <summary>Wykonuje prace nad skalowaniem całego panelu i dowolnymi kontrolkami podrzędnymi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda używa wartości parametrów `dy` i, aby niezależnie skalować wysokość i szerokość panelu. `dx` <xref:System.Windows.Forms.TableLayoutPanel.ScaleCore%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCellPosition">
      <MemberSignature Language="C#" Value="public void SetCellPosition (System.Windows.Forms.Control control, System.Windows.Forms.TableLayoutPanelCellPosition position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCellPosition(class System.Windows.Forms.Control control, valuetype System.Windows.Forms.TableLayoutPanelCellPosition position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.SetCellPosition(System.Windows.Forms.Control,System.Windows.Forms.TableLayoutPanelCellPosition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCellPosition(System::Windows::Forms::Control ^ control, System::Windows::Forms::TableLayoutPanelCellPosition position);" />
      <MemberSignature Language="F#" Value="member this.SetCellPosition : System.Windows.Forms.Control * System.Windows.Forms.TableLayoutPanelCellPosition -&gt; unit" Usage="tableLayoutPanel.SetCellPosition (control, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="position" Type="System.Windows.Forms.TableLayoutPanelCellPosition" />
      </Parameters>
      <Docs>
        <param name="control">Kontrolka znajdująca się w komórce.</param>
        <param name="position"><see cref="T:System.Windows.Forms.TableLayoutPanelCellPosition" /> Reprezentujący wiersz i kolumnę komórki.</param>
        <summary>Ustawia wartość <see cref="T:System.Windows.Forms.TableLayoutPanelCellPosition" /> reprezentującą wiersz i kolumnę komórki.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColumn">
      <MemberSignature Language="C#" Value="public void SetColumn (System.Windows.Forms.Control control, int column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumn(class System.Windows.Forms.Control control, int32 column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.SetColumn(System.Windows.Forms.Control,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumn(System::Windows::Forms::Control ^ control, int column);" />
      <MemberSignature Language="F#" Value="member this.SetColumn : System.Windows.Forms.Control * int -&gt; unit" Usage="tableLayoutPanel.SetColumn (control, column)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="column" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="control">Kontrolka, która ma zostać przeniesiona do innej kolumny.</param>
        <param name="column">Kolumna, która <paramref name="control" /> ma zostać przeniesiona.</param>
        <summary>Ustawia położenie kolumny określonego formantu podrzędnego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda przenosi formant do innej kolumny <xref:System.Windows.Forms.TableLayoutPanel>w. <xref:System.Windows.Forms.TableLayoutPanel.SetColumn%2A> Kolumny i wiersze mają indeksy oparte na zero. Ustawienie położenia kolumny na-1 określa, że formant będzie przepływał do pierwszej pustej komórki.  
  
 Ta metoda ponownie stosuje układ tabeli do wszystkich kontrolek w <xref:System.Windows.Forms.TableLayoutPanel>.  
  
 Ta metoda jest wywoływana przez `Column` właściwość, którą panel dodaje do swoich formantów podrzędnych w czasie projektowania.  
  
   
  
## Examples  
 Poniższy przykład kodu używa <xref:System.Windows.Forms.TableLayoutPanel.SetColumn%2A> metody do zamiany dwóch kontrolek zawartych <xref:System.Windows.Forms.TableLayoutPanel> w kontrolce. W przykładzie założono <xref:System.Windows.Forms.TableLayoutPanel> kontrolkę z co najmniej dwoma wierszami.  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#12)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.SetRow(System.Windows.Forms.Control,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetColumn(System.Windows.Forms.Control)" />
        <altmember cref="Overload:System.Windows.Forms.Control.Invalidate" />
      </Docs>
    </Member>
    <Member MemberName="SetColumnSpan">
      <MemberSignature Language="C#" Value="public void SetColumnSpan (System.Windows.Forms.Control control, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnSpan(class System.Windows.Forms.Control control, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.SetColumnSpan(System.Windows.Forms.Control,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnSpan(System::Windows::Forms::Control ^ control, int value);" />
      <MemberSignature Language="F#" Value="member this.SetColumnSpan : System.Windows.Forms.Control * int -&gt; unit" Usage="tableLayoutPanel.SetColumnSpan (control, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="control">Kontrolka podrzędna elementu <see cref="T:System.Windows.Forms.TableLayoutPanel" />.</param>
        <param name="value">Liczba kolumn do przedziału.</param>
        <summary>Ustawia liczbę kolumn łączonych przez formant podrzędny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Łączenie kolumn jest często przydatne do pozycjonowania formantów, które są znacznie szersze niż jego elementy równorzędne.  
  
 Ta metoda jest wywoływana przez `ColumnSpan` właściwość, którą panel dodaje do swoich formantów podrzędnych w czasie projektowania.  
  
   
  
## Examples  
 Poniższy <xref:System.Windows.Forms.TableLayoutPanel.GetColumnSpan%2A> przykład kodu używa metod i <xref:System.Windows.Forms.TableLayoutPanel.SetColumnSpan%2A> , aby <xref:System.Windows.Forms.Button> ustawić szerokość kontrolki w <xref:System.Windows.Forms.TableLayoutPanel>.  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#11)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="value" />jest mniejsza niż 1.</exception>
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetColumnSpan(System.Windows.Forms.Control)" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.SetRowSpan(System.Windows.Forms.Control,System.Int32)" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.ColumnCount" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetColumn(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="SetRow">
      <MemberSignature Language="C#" Value="public void SetRow (System.Windows.Forms.Control control, int row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRow(class System.Windows.Forms.Control control, int32 row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.SetRow(System.Windows.Forms.Control,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRow(System::Windows::Forms::Control ^ control, int row);" />
      <MemberSignature Language="F#" Value="member this.SetRow : System.Windows.Forms.Control * int -&gt; unit" Usage="tableLayoutPanel.SetRow (control, row)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="row" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="control">Kontrolka, która ma zostać przeniesiona do innego wiersza.</param>
        <param name="row">Wiersz, do którego <paramref name="control" /> zostanie przeniesiony.</param>
        <summary>Ustawia położenie wiersza określonej kontrolki podrzędnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda przenosi formant do innego wiersza <xref:System.Windows.Forms.TableLayoutPanel> w kontrolce. <xref:System.Windows.Forms.TableLayoutPanel.SetRow%2A> Kolumny i wiersze mają indeksy oparte na zero. Ustawienie położenia wiersza na-1 określa, że formant będzie przepływał do pierwszej pustej komórki.  
  
 Ta metoda ponownie stosuje układ tabeli do wszystkich kontrolek w <xref:System.Windows.Forms.TableLayoutPanel>.  
  
 Ta metoda jest wywoływana przez `Row` właściwość, którą panel dodaje do swoich formantów podrzędnych w czasie projektowania.  
  
   
  
## Examples  
 Poniższy przykład kodu używa <xref:System.Windows.Forms.TableLayoutPanel.SetColumn%2A> metody do zamiany dwóch kontrolek zawartych <xref:System.Windows.Forms.TableLayoutPanel> w kontrolce. W przykładzie założono <xref:System.Windows.Forms.TableLayoutPanel> kontrolkę z co najmniej dwoma wierszami.  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#13)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.SetRow(System.Windows.Forms.Control,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetRow(System.Windows.Forms.Control)" />
        <altmember cref="Overload:System.Windows.Forms.Control.Invalidate" />
      </Docs>
    </Member>
    <Member MemberName="SetRowSpan">
      <MemberSignature Language="C#" Value="public void SetRowSpan (System.Windows.Forms.Control control, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRowSpan(class System.Windows.Forms.Control control, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.SetRowSpan(System.Windows.Forms.Control,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRowSpan(System::Windows::Forms::Control ^ control, int value);" />
      <MemberSignature Language="F#" Value="member this.SetRowSpan : System.Windows.Forms.Control * int -&gt; unit" Usage="tableLayoutPanel.SetRowSpan (control, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="control">Kontrolka podrzędna elementu <see cref="T:System.Windows.Forms.TableLayoutPanel" />.</param>
        <param name="value">Liczba wierszy do przedziału.</param>
        <summary>Ustawia liczbę wierszy objętych przez formant podrzędny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Łączenie wierszy jest często przydatne do pozycjonowania kontrolki, która jest znacznie większa niż jego elementy równorzędne.  
  
 Ta metoda jest wywoływana przez `RowSpan` właściwość, którą panel dodaje do swoich formantów podrzędnych w czasie projektowania.  
  
   
  
## Examples  
 Poniższy <xref:System.Windows.Forms.TableLayoutPanel.GetRowSpan%2A> przykład kodu używa metod i <xref:System.Windows.Forms.TableLayoutPanel.SetRowSpan%2A> , aby <xref:System.Windows.Forms.Button> ustawić szerokość kontrolki w <xref:System.Windows.Forms.TableLayoutPanel>.  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#11)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="value" />jest mniejsza niż 1.</exception>
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetRowSpan(System.Windows.Forms.Control)" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.SetColumnSpan(System.Windows.Forms.Control,System.Int32)" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.ColumnCount" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetRow(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IExtenderProvider.CanExtend">
      <MemberSignature Language="C#" Value="bool IExtenderProvider.CanExtend (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.ComponentModel.IExtenderProvider.CanExtend(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.System#ComponentModel#IExtenderProvider#CanExtend(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CanExtend (obj As Object) As Boolean Implements IExtenderProvider.CanExtend" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.ComponentModel.IExtenderProvider.CanExtend(System::Object ^ obj) = System::ComponentModel::IExtenderProvider::CanExtend;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><see cref="T:System.Object" /> Do odbierania właściwości rozszerzenia.</param>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)" />Zobacz.</summary>
        <returns><see langword="true" />Jeśli ten obiekt może dostarczyć właściwości rozszerzenia do określonego obiektu; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.TableLayoutPanel> gdy wystąpienie jest rzutowane <xref:System.ComponentModel.IExtenderProvider> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
