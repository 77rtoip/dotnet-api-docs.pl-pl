<Type Name="RightToLeft" FullName="System.Windows.Forms.RightToLeft">
  <Metadata><Meta Name="ms.openlocfilehash" Value="73325158877205206b3da706af9bd553d3809f3e" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37565617" /></Metadata><TypeSignature Language="C#" Value="public enum RightToLeft" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RightToLeft extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.RightToLeft" />
  <TypeSignature Language="VB.NET" Value="Public Enum RightToLeft" />
  <TypeSignature Language="C++ CLI" Value="public enum class RightToLeft" />
  <TypeSignature Language="F#" Value="type RightToLeft = " />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Określa wartość wskazującą, czy zostanie wyświetlony tekst od prawej do lewej, takich jak podczas korzystania z hebrajskiego i arabskiego czcionki.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To wyliczenie jest używane przez <xref:System.Windows.Forms.ContextMenu>, <xref:System.Windows.Forms.MainMenu>, <xref:System.Windows.Forms.ProgressBar>, <xref:System.Text.RegularExpressions.Regex> i <xref:System.Windows.Forms.Control>.  
  
 Podczas pobierania wartości `RightToLeft` właściwość <xref:System.Windows.Forms.ContextMenu>, <xref:System.Windows.Forms.MainMenu>, i <xref:System.Windows.Forms.ProgressBar> otrzyma wartość <xref:System.Windows.Forms.RightToLeft> przypisana. Z drugiej strony, jeśli są wyprowadzanie klasy z <xref:System.Windows.Forms.Control>, i przypisz wartość `Inherit` do <xref:System.Windows.Forms.Control.RightToLeft%2A> właściwości, zwrócona wartość będzie miała na ustawienie <xref:System.Windows.Forms.Control.RightToLeft%2A> właściwości kontrolki nadrzędnej. W przypadku nie kontroli nadrzędnej, zwróci wartość `No`. W przeciwnym razie zwraca wartość `Yes` lub `No`, w zależności od wartości, która została przypisana do <xref:System.Windows.Forms.Control.RightToLeft%2A> właściwości klasy pochodnej.  
  
> [!NOTE]
>  Aby uzyskać więcej informacji na temat włączania wyrównanie od prawej do lewej wpływ kontrolek formularzy Windows Forms, zobacz <xref:System.Windows.Forms.Control.RightToLeft%2A?displayProperty=nameWithType> właściwości.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Inherit">
      <MemberSignature Language="C#" Value="Inherit" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.RightToLeft Inherit = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.RightToLeft.Inherit" />
      <MemberSignature Language="VB.NET" Value="Inherit" />
      <MemberSignature Language="C++ CLI" Value="Inherit" />
      <MemberSignature Language="F#" Value="Inherit = 2" Usage="System.Windows.Forms.RightToLeft.Inherit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RightToLeft</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Kierunek tekstu odczytu są dziedziczone z kontrolki nadrzędnej.</summary>
      </Docs>
    </Member>
    <Member MemberName="No">
      <MemberSignature Language="C#" Value="No" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.RightToLeft No = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.RightToLeft.No" />
      <MemberSignature Language="VB.NET" Value="No" />
      <MemberSignature Language="C++ CLI" Value="No" />
      <MemberSignature Language="F#" Value="No = 0" Usage="System.Windows.Forms.RightToLeft.No" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RightToLeft</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Odczytuje tekst od lewej do prawej. Domyślnie włączone.</summary>
      </Docs>
    </Member>
    <Member MemberName="Yes">
      <MemberSignature Language="C#" Value="Yes" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.RightToLeft Yes = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.RightToLeft.Yes" />
      <MemberSignature Language="VB.NET" Value="Yes" />
      <MemberSignature Language="C++ CLI" Value="Yes" />
      <MemberSignature Language="F#" Value="Yes = 1" Usage="System.Windows.Forms.RightToLeft.Yes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RightToLeft</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Odczytuje tekst od prawej do lewej.</summary>
      </Docs>
    </Member>
  </Members>
</Type>