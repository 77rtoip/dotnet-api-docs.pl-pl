<Type Name="DataGridViewRowPostPaintEventArgs" FullName="System.Windows.Forms.DataGridViewRowPostPaintEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fc79a3da88f4b893a5aaf6dc59eab7f0f8115bc3" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69190810" /></Metadata><TypeSignature Language="C#" Value="public class DataGridViewRowPostPaintEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewRowPostPaintEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewRowPostPaintEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridViewRowPostPaintEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridViewRowPostPaintEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DataGridViewRowPostPaintEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Dostarcza dane dla <see cref="E:System.Windows.Forms.DataGridView.RowPostPaint" /> zdarzenia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie występuje po narysowaniu wiersza <xref:System.Windows.Forms.DataGridView> w kontrolce. <xref:System.Windows.Forms.DataGridView.RowPostPaint> <xref:System.Windows.Forms.DataGridView.RowPostPaint>umożliwia ręczne dostosowanie wyglądu wiersza po narysowaniu komórek w wierszu. Jest to przydatne, jeśli chcesz dostosować wiersz.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak obsłużyć <xref:System.Windows.Forms.DataGridView.RowPostPaint> zdarzenie, aby zawartość komórki była rozciągana na cały wiersz. Ten przykład kodu jest częścią większego przykładu przedstawionego [w temacie How to: Dostosuj wygląd wierszy w kontrolce](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)DataGridView Windows Forms.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#30)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#30)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <related type="Article" href="https://msdn.microsoft.com/library/d40b53d2-7e7c-48c5-8570-6e79d15c3bbb">Instrukcje: dostosowywanie wyglądu wierszy w kontrolce DataGridView formularzy systemu Windows</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewRowPostPaintEventArgs (System.Windows.Forms.DataGridView dataGridView, System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle rowBounds, int rowIndex, System.Windows.Forms.DataGridViewElementStates rowState, string errorText, System.Windows.Forms.DataGridViewCellStyle inheritedRowStyle, bool isFirstDisplayedRow, bool isLastVisibleRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.DataGridView dataGridView, class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipBounds, valuetype System.Drawing.Rectangle rowBounds, int32 rowIndex, valuetype System.Windows.Forms.DataGridViewElementStates rowState, string errorText, class System.Windows.Forms.DataGridViewCellStyle inheritedRowStyle, bool isFirstDisplayedRow, bool isLastVisibleRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.#ctor(System.Windows.Forms.DataGridView,System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridViewRowPostPaintEventArgs(System::Windows::Forms::DataGridView ^ dataGridView, System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipBounds, System::Drawing::Rectangle rowBounds, int rowIndex, System::Windows::Forms::DataGridViewElementStates rowState, System::String ^ errorText, System::Windows::Forms::DataGridViewCellStyle ^ inheritedRowStyle, bool isFirstDisplayedRow, bool isLastVisibleRow);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataGridViewRowPostPaintEventArgs : System.Windows.Forms.DataGridView * System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * string * System.Windows.Forms.DataGridViewCellStyle * bool * bool -&gt; System.Windows.Forms.DataGridViewRowPostPaintEventArgs" Usage="new System.Windows.Forms.DataGridViewRowPostPaintEventArgs (dataGridView, graphics, clipBounds, rowBounds, rowIndex, rowState, errorText, inheritedRowStyle, isFirstDisplayedRow, isLastVisibleRow)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataGridView" Type="System.Windows.Forms.DataGridView" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="rowState" Type="System.Windows.Forms.DataGridViewElementStates" />
        <Parameter Name="errorText" Type="System.String" />
        <Parameter Name="inheritedRowStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="isFirstDisplayedRow" Type="System.Boolean" />
        <Parameter Name="isLastVisibleRow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataGridView"><see cref="T:System.Windows.Forms.DataGridView" /> Który jest właścicielem wiersza, który jest namalowany.</param>
        <param name="graphics"><see cref="T:System.Drawing.Graphics" /> Używane do malowania <see cref="T:System.Windows.Forms.DataGridViewRow" />.</param>
        <param name="clipBounds"><see cref="T:System.Drawing.Rectangle" /> Reprezentuje obszar<see cref="T:System.Windows.Forms.DataGridView" /> , który musi być namalowany.</param>
        <param name="rowBounds">A <see cref="T:System.Drawing.Rectangle" /> , który zawiera granice <see cref="T:System.Windows.Forms.DataGridViewRow" /> , które są rysowane.</param>
        <param name="rowIndex">Indeks wiersza komórki, która jest używana.</param>
        <param name="rowState">Bitowa kombinacja <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> wartości, która określa stan wiersza.</param>
        <param name="errorText">Komunikat o błędzie skojarzony z wierszem.</param>
        <param name="inheritedRowStyle">A <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> , który zawiera informacje o formatowaniu i stylu wiersza.</param>
        <param name="isFirstDisplayedRow"><see langword="true" /><see cref="T:System.Windows.Forms.DataGridView" /> ,<see langword="false" />aby wskazać, czy bieżący wiersz jest pierwszym wierszem aktualnie wyświetlanym w; w przeciwnym razie.</param>
        <param name="isLastVisibleRow"><see langword="true" />, <see cref="T:System.Windows.Forms.DataGridView" /> <see cref="P:System.Windows.Forms.DataGridViewRow.Visible" /> <see langword="true" />aby wskazać, czy bieżący wiersz jest ostatnim wierszem w elemencie, który ma właściwość ustawioną na; w przeciwnym razie. <see langword="false" /></param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.DataGridViewRowPostPaintEventArgs" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dataGridView" />jest <see langword="null" />.  
  
—lub— 
 <paramref name="graphics" />jest <see langword="null" />.  
  
—lub— 
 <paramref name="inheritedRowStyle" />jest <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Windows.Forms.DataGridViewElementStates" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
      </Docs>
    </Member>
    <Member MemberName="ClipBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle ClipBounds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle ClipBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.ClipBounds" />
      <MemberSignature Language="VB.NET" Value="Public Property ClipBounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle ClipBounds { System::Drawing::Rectangle get(); void set(System::Drawing::Rectangle value); };" />
      <MemberSignature Language="F#" Value="member this.ClipBounds : System.Drawing.Rectangle with get, set" Usage="System.Windows.Forms.DataGridViewRowPostPaintEventArgs.ClipBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obszar <see cref="T:System.Windows.Forms.DataGridView" /> , który musi zostać odmalowany.</summary>
        <value><see cref="T:System.Drawing.Rectangle" /> Reprezentuje obszar<see cref="T:System.Windows.Forms.DataGridView" /> , który musi zostać odmalowany.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość reprezentuje obszar <xref:System.Windows.Forms.DataGridView> , który musi zostać odmalowany. <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.ClipBounds%2A> Na przykład, jeśli użytkownik pokryje cały <xref:System.Windows.Forms.DataGridView> czas w innym oknie, a następnie odzyskuje go, a następnie <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.ClipBounds%2A> reprezentuje <xref:System.Windows.Forms.DataGridView>cały. Jeśli użytkownik odnosi się do małego obszaru <xref:System.Windows.Forms.DataGridView> i odzyskuje go, a następnie <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.ClipBounds%2A> reprezentuje mały obszar, który został pokryty.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportuje wystąpienie <xref:System.Windows.Forms.DataGridView.RowPostPaint?displayProperty=nameWithType> zdarzenia. Ten raport pomaga dowiedzieć się, kiedy wystąpi zdarzenie i może pomóc w debugowaniu.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu zawierającego wystąpienie typu <xref:System.Windows.Forms.DataGridView> o nazwie. `DataGridView1` Następnie upewnij się, że program obsługi zdarzeń jest skojarzony <xref:System.Windows.Forms.DataGridView.RowPostPaint?displayProperty=nameWithType> ze zdarzeniem.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#355](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#355)]
 [!code-vb[System.Windows.Forms.EventExamples#355](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#355)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Drawing.Rectangle" />
      </Docs>
    </Member>
    <Member MemberName="DrawFocus">
      <MemberSignature Language="C#" Value="public void DrawFocus (System.Drawing.Rectangle bounds, bool cellsPaintSelectionBackground);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawFocus(valuetype System.Drawing.Rectangle bounds, bool cellsPaintSelectionBackground) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.DrawFocus(System.Drawing.Rectangle,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawFocus (bounds As Rectangle, cellsPaintSelectionBackground As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawFocus(System::Drawing::Rectangle bounds, bool cellsPaintSelectionBackground);" />
      <MemberSignature Language="F#" Value="member this.DrawFocus : System.Drawing.Rectangle * bool -&gt; unit" Usage="dataGridViewRowPostPaintEventArgs.DrawFocus (bounds, cellsPaintSelectionBackground)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="cellsPaintSelectionBackground" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bounds">A <see cref="T:System.Drawing.Rectangle" /> , który określa obszar koncentracji uwagi.</param>
        <param name="cellsPaintSelectionBackground"><see langword="true" />Aby użyć <see cref="P:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor" /> właściwości <see cref="P:System.Windows.Forms.DataGridViewRow.InheritedStyle" /> właściwości do określenia koloru prostokąta fokusu; <see langword="false" /> aby użyć<see cref="P:System.Windows.Forms.DataGridViewRow.InheritedStyle" /> właściwości właściwości. <see cref="P:System.Windows.Forms.DataGridViewCellStyle.BackColor" /></param>
        <summary>Rysuje prostokąt fokusu wokół określonych granic.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody, aby samodzielnie <xref:System.Windows.Forms.DataGridViewRow> narysować zawartość i jej komórki. <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.DrawFocus%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.DrawFocus%2A> metody do rysowania fokusu wokół widocznych komórek wiersza. Ten przykład jest częścią większego przykładu dostępnego [w następujących sposób: Dostosuj wygląd wierszy w kontrolce](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)DataGridView Windows Forms.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#30)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.RowIndex" />jest mniejsza od zera lub większa niż liczba wierszy w <see cref="T:System.Windows.Forms.DataGridView" /> kontrolce minus jeden.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.BackColor" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="ErrorText">
      <MemberSignature Language="C#" Value="public string ErrorText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.ErrorText" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ErrorText : string" Usage="System.Windows.Forms.DataGridViewRowPostPaintEventArgs.ErrorText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ciąg, który reprezentuje komunikat o błędzie dla bieżącego <see cref="T:System.Windows.Forms.DataGridViewRow" />elementu.</summary>
        <value>Ciąg, który reprezentuje komunikat o błędzie dla bieżącego <see cref="T:System.Windows.Forms.DataGridViewRow" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.ErrorText%2A> właściwości jest taka sama jak <xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A?displayProperty=nameWithType> Właściwość bieżącego wiersza.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportuje wystąpienie <xref:System.Windows.Forms.DataGridView.RowPostPaint?displayProperty=nameWithType> zdarzenia. Ten raport pomaga dowiedzieć się, kiedy wystąpi zdarzenie i może pomóc w debugowaniu.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu zawierającego wystąpienie typu <xref:System.Windows.Forms.DataGridView> o nazwie. `DataGridView1` Następnie upewnij się, że program obsługi zdarzeń jest skojarzony <xref:System.Windows.Forms.DataGridView.RowPostPaint?displayProperty=nameWithType> ze zdarzeniem.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#355](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#355)]
 [!code-vb[System.Windows.Forms.EventExamples#355](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#355)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.ErrorText" />
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Graphics : System.Drawing.Graphics" Usage="System.Windows.Forms.DataGridViewRowPostPaintEventArgs.Graphics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera używany do malowania bieżącym <see cref="T:System.Windows.Forms.DataGridViewRow" />. <see cref="T:System.Drawing.Graphics" /></summary>
        <value>Używane do malowania bieżącym <see cref="T:System.Windows.Forms.DataGridViewRow" />. <see cref="T:System.Drawing.Graphics" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Graphics> Klasa zawiera właściwości i metody, które są przydatne do rysowania niestandardowego.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.Graphics%2A> jak używać właściwości do malowania niestandardowym tłem. Chociaż kod faktycznie używa <xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs.Graphics%2A?displayProperty=nameWithType> właściwości, ta właściwość jest niemal identyczna <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.Graphics%2A> z właściwością <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs>. Zmienna, `e`, jest typu <xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs>. Ten przykład kodu jest częścią większego przykładu przedstawionego [w temacie How to: Dostosuj wygląd wierszy w kontrolce](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)DataGridView Windows Forms.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#25](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#25)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#25](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#25)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="InheritedRowStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellStyle InheritedRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle InheritedRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.InheritedRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InheritedRowStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellStyle ^ InheritedRowStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InheritedRowStyle : System.Windows.Forms.DataGridViewCellStyle" Usage="System.Windows.Forms.DataGridViewRowPostPaintEventArgs.InheritedRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera styl komórki zastosowany do bieżącego <see cref="T:System.Windows.Forms.DataGridViewRow" />.</summary>
        <value>A <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> , który zawiera styl komórki zastosowany do bieżącego <see cref="T:System.Windows.Forms.DataGridViewRow" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość zawiera te same wartości, co <xref:System.Windows.Forms.DataGridViewRow.InheritedStyle%2A> Właściwość bieżącego wiersza. <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.InheritedRowStyle%2A> Bezpośredni dostęp do <xref:System.Windows.Forms.DataGridViewRow> programu <xref:System.Windows.Forms.DataGridView> w programie może mieć wpływ na wydajność. <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.InheritedRowStyle%2A> Użyj<xref:System.Windows.Forms.DataGridView.RowPostPaint> w zdarzeniu, aby uniknąć nieudostępniania wiersza i zachować optymalną wydajność.  
  
 Właściwość <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.InheritedRowStyle%2A> jest tylko do odczytu. Chociaż można ustawić właściwości <xref:System.Windows.Forms.DataGridViewCellStyle> pobrane <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.InheritedRowStyle%2A> przez właściwość, nowe ustawienia nie będą miały żadnego efektu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć, <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.InheritedRowStyle%2A> aby określić kolor używany do rysowania zawartości. Zmienna, `e`, jest typu <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs>. Ten przykład kodu jest częścią większego przykładu przedstawionego [w temacie How to: Dostosuj wygląd wierszy w kontrolce](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)DataGridView Windows Forms.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#34](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#34)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#34](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#34)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowPostPaint" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.DefaultCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows</related>
      </Docs>
    </Member>
    <Member MemberName="IsFirstDisplayedRow">
      <MemberSignature Language="C#" Value="public bool IsFirstDisplayedRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFirstDisplayedRow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.IsFirstDisplayedRow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFirstDisplayedRow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFirstDisplayedRow { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFirstDisplayedRow : bool" Usage="System.Windows.Forms.DataGridViewRowPostPaintEventArgs.IsFirstDisplayedRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy bieżący wiersz jest pierwszym wierszem wyświetlanym w <see cref="T:System.Windows.Forms.DataGridView" />.</summary>
        <value><see langword="true" />Jeśli wiersz jest malowany jest obecnie pierwszym wierszem wyświetlanym w <see cref="T:System.Windows.Forms.DataGridView" />; w przeciwnym <see langword="false" />razie,.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportuje wystąpienie <xref:System.Windows.Forms.DataGridView.RowPostPaint?displayProperty=nameWithType> zdarzenia. Ten raport pomaga dowiedzieć się, kiedy wystąpi zdarzenie i może pomóc w debugowaniu.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu zawierającego wystąpienie typu <xref:System.Windows.Forms.DataGridView> o nazwie. `DataGridView1` Następnie upewnij się, że program obsługi zdarzeń jest skojarzony <xref:System.Windows.Forms.DataGridView.RowPostPaint?displayProperty=nameWithType> ze zdarzeniem.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#355](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#355)]
 [!code-vb[System.Windows.Forms.EventExamples#355](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#355)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="IsLastVisibleRow">
      <MemberSignature Language="C#" Value="public bool IsLastVisibleRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLastVisibleRow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.IsLastVisibleRow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLastVisibleRow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLastVisibleRow { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLastVisibleRow : bool" Usage="System.Windows.Forms.DataGridViewRowPostPaintEventArgs.IsLastVisibleRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy bieżący wiersz jest ostatnim widocznym wierszem wyświetlanym w <see cref="T:System.Windows.Forms.DataGridView" />.</summary>
        <value><see langword="true" />Jeśli bieżący <see cref="T:System.Windows.Forms.DataGridView" /> wiersz jest ostatnim wierszem w elemencie, który <see cref="P:System.Windows.Forms.DataGridViewRow.Visible" /> ma właściwość <see langword="false" />ustawioną na <see langword="true" />; w przeciwnym razie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportuje wystąpienie <xref:System.Windows.Forms.DataGridView.RowPostPaint?displayProperty=nameWithType> zdarzenia. Ten raport pomaga dowiedzieć się, kiedy wystąpi zdarzenie i może pomóc w debugowaniu.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu zawierającego wystąpienie typu <xref:System.Windows.Forms.DataGridView> o nazwie. `DataGridView1` Następnie upewnij się, że program obsługi zdarzeń jest skojarzony <xref:System.Windows.Forms.DataGridView.RowPostPaint?displayProperty=nameWithType> ze zdarzeniem.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#355](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#355)]
 [!code-vb[System.Windows.Forms.EventExamples#355](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#355)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="PaintCells">
      <MemberSignature Language="C#" Value="public void PaintCells (System.Drawing.Rectangle clipBounds, System.Windows.Forms.DataGridViewPaintParts paintParts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PaintCells(valuetype System.Drawing.Rectangle clipBounds, valuetype System.Windows.Forms.DataGridViewPaintParts paintParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.PaintCells(System.Drawing.Rectangle,System.Windows.Forms.DataGridViewPaintParts)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PaintCells (clipBounds As Rectangle, paintParts As DataGridViewPaintParts)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PaintCells(System::Drawing::Rectangle clipBounds, System::Windows::Forms::DataGridViewPaintParts paintParts);" />
      <MemberSignature Language="F#" Value="member this.PaintCells : System.Drawing.Rectangle * System.Windows.Forms.DataGridViewPaintParts -&gt; unit" Usage="dataGridViewRowPostPaintEventArgs.PaintCells (clipBounds, paintParts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="paintParts" Type="System.Windows.Forms.DataGridViewPaintParts" />
      </Parameters>
      <Docs>
        <param name="clipBounds">Obiekt <see cref="T:System.Drawing.Rectangle" /> , który określa obszar <see cref="T:System.Windows.Forms.DataGridView" /> do narysowania.</param>
        <param name="paintParts">Bitowa kombinacja <see cref="T:System.Windows.Forms.DataGridViewPaintParts" /> wartości określająca części do malowania.</param>
        <summary>Maluje określone części komórek dla obszaru w określonych granicach.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.RowIndex" />jest mniejsza od zera lub większa niż liczba wierszy w <see cref="T:System.Windows.Forms.DataGridView" /> kontrolce minus jeden.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="PaintCellsBackground">
      <MemberSignature Language="C#" Value="public void PaintCellsBackground (System.Drawing.Rectangle clipBounds, bool cellsPaintSelectionBackground);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PaintCellsBackground(valuetype System.Drawing.Rectangle clipBounds, bool cellsPaintSelectionBackground) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.PaintCellsBackground(System.Drawing.Rectangle,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PaintCellsBackground (clipBounds As Rectangle, cellsPaintSelectionBackground As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PaintCellsBackground(System::Drawing::Rectangle clipBounds, bool cellsPaintSelectionBackground);" />
      <MemberSignature Language="F#" Value="member this.PaintCellsBackground : System.Drawing.Rectangle * bool -&gt; unit" Usage="dataGridViewRowPostPaintEventArgs.PaintCellsBackground (clipBounds, cellsPaintSelectionBackground)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="cellsPaintSelectionBackground" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="clipBounds">Obiekt <see cref="T:System.Drawing.Rectangle" /> , który określa obszar <see cref="T:System.Windows.Forms.DataGridView" /> do narysowania.</param>
        <param name="cellsPaintSelectionBackground"><see langword="true" />Aby malować tło określonych granic z kolorem <see cref="P:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor" /> właściwości; <see cref="P:System.Windows.Forms.DataGridViewRow.InheritedStyle" /> Aby malować tło określonych granic z kolorem <see cref="P:System.Windows.Forms.DataGridViewCellStyle.BackColor" /> właściwości <see cref="P:System.Windows.Forms.DataGridViewRow.InheritedStyle" />. <see langword="false" /></param>
        <summary>Maluje tła komórek dla obszaru w określonych granicach.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.RowIndex" />jest mniejsza od zera lub większa niż liczba wierszy w <see cref="T:System.Windows.Forms.DataGridView" /> kontrolce minus jeden.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.BackColor" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor" />
      </Docs>
    </Member>
    <Member MemberName="PaintCellsContent">
      <MemberSignature Language="C#" Value="public void PaintCellsContent (System.Drawing.Rectangle clipBounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PaintCellsContent(valuetype System.Drawing.Rectangle clipBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.PaintCellsContent(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PaintCellsContent (clipBounds As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PaintCellsContent(System::Drawing::Rectangle clipBounds);" />
      <MemberSignature Language="F#" Value="member this.PaintCellsContent : System.Drawing.Rectangle -&gt; unit" Usage="dataGridViewRowPostPaintEventArgs.PaintCellsContent clipBounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="clipBounds">Obiekt <see cref="T:System.Drawing.Rectangle" /> , który określa obszar <see cref="T:System.Windows.Forms.DataGridView" /> do narysowania.</param>
        <summary>Maluje zawartość komórki obszaru w określonych granicach.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.RowIndex" />jest mniejsza od zera lub większa niż liczba wierszy w <see cref="T:System.Windows.Forms.DataGridView" /> kontrolce minus jeden.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PaintHeader">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Maluje nagłówek wiersza bieżącego wiersza.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PaintHeader">
      <MemberSignature Language="C#" Value="public void PaintHeader (bool paintSelectionBackground);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PaintHeader(bool paintSelectionBackground) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.PaintHeader(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PaintHeader (paintSelectionBackground As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PaintHeader(bool paintSelectionBackground);" />
      <MemberSignature Language="F#" Value="member this.PaintHeader : bool -&gt; unit" Usage="dataGridViewRowPostPaintEventArgs.PaintHeader paintSelectionBackground" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paintSelectionBackground" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="paintSelectionBackground"><see langword="true" />Aby malować nagłówek wiersza z kolorem <see cref="P:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor" /> właściwości; <see cref="P:System.Windows.Forms.DataGridViewRow.InheritedStyle" /> Aby malować nagłówek wiersza <see cref="P:System.Windows.Forms.DataGridViewCellStyle.BackColor" /> z <see cref="P:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle" /> właściwością. <see langword="false" /></param>
        <summary>Maluje cały nagłówek wiersza bieżącego <see cref="T:System.Windows.Forms.DataGridViewRow" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.RowIndex" />jest mniejsza od zera lub większa niż liczba wierszy w <see cref="T:System.Windows.Forms.DataGridView" /> kontrolce minus jeden.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor" />
      </Docs>
    </Member>
    <Member MemberName="PaintHeader">
      <MemberSignature Language="C#" Value="public void PaintHeader (System.Windows.Forms.DataGridViewPaintParts paintParts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PaintHeader(valuetype System.Windows.Forms.DataGridViewPaintParts paintParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.PaintHeader(System.Windows.Forms.DataGridViewPaintParts)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PaintHeader (paintParts As DataGridViewPaintParts)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PaintHeader(System::Windows::Forms::DataGridViewPaintParts paintParts);" />
      <MemberSignature Language="F#" Value="member this.PaintHeader : System.Windows.Forms.DataGridViewPaintParts -&gt; unit" Usage="dataGridViewRowPostPaintEventArgs.PaintHeader paintParts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paintParts" Type="System.Windows.Forms.DataGridViewPaintParts" />
      </Parameters>
      <Docs>
        <param name="paintParts">Bitowa kombinacja <see cref="T:System.Windows.Forms.DataGridViewPaintParts" /> wartości określająca części do malowania.</param>
        <summary>Maluje określone części nagłówka wiersza w bieżącym wierszu.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.RowIndex" />jest mniejsza od zera lub większa niż liczba wierszy w <see cref="T:System.Windows.Forms.DataGridView" /> kontrolce minus jeden.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="RowBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle RowBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle RowBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.RowBounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowBounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle RowBounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.RowBounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.DataGridViewRowPostPaintEventArgs.RowBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobierz granice bieżącego <see cref="T:System.Windows.Forms.DataGridViewRow" />elementu.</summary>
        <value>Reprezentujące granice bieżącego <see cref="T:System.Windows.Forms.DataGridViewRow" />elementu. <see cref="T:System.Drawing.Rectangle" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Szerokość <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.RowBounds%2A> właściwości jest taka sama jak szerokość <xref:System.Windows.Forms.DataGridView>. Aby uzyskać szerokość kolumn w <xref:System.Windows.Forms.DataGridView>, <xref:System.Windows.Forms.DataGridViewColumnCollection.GetColumnsWidth%2A> Użyj metody.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.RowBounds%2A> właściwości, aby określić granice widocznych komórek w wierszu. Ten przykład kodu jest częścią większego przykładu przedstawionego [w temacie How to: Dostosuj wygląd wierszy w kontrolce](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)DataGridView Windows Forms.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#30)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#30)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewColumnCollection.GetColumnsWidth(System.Windows.Forms.DataGridViewElementStates)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Drawing.Rectangle" />
      </Docs>
    </Member>
    <Member MemberName="RowIndex">
      <MemberSignature Language="C#" Value="public int RowIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.RowIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RowIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RowIndex : int" Usage="System.Windows.Forms.DataGridViewRowPostPaintEventArgs.RowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera indeks bieżącego <see cref="T:System.Windows.Forms.DataGridViewRow" />elementu.</summary>
        <value>Indeks bieżącego <see cref="T:System.Windows.Forms.DataGridViewRow" />elementu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Indeks wiersza może służyć do uzyskiwania dostępu do bieżącego wiersza w obrębie <xref:System.Windows.Forms.DataGridViewRowCollection>.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.RowIndex%2A> właściwości, aby uzyskać dostęp do bieżącego wiersza. Kod pobiera wartość komórki na przecięciu zaznaczonego wiersza i trzeciej kolumny, a następnie maluje tę wartość w całym wierszu. Zmienna, `e`, jest typu <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs>. Ten przykład kodu jest częścią większego przykładu przedstawionego [w temacie How to: Dostosuj wygląd wierszy w kontrolce](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)DataGridView Windows Forms.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#35](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#35)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#35](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#35)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewElementStates State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewElementStates State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As DataGridViewElementStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewElementStates State { System::Windows::Forms::DataGridViewElementStates get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Windows.Forms.DataGridViewElementStates" Usage="System.Windows.Forms.DataGridViewRowPostPaintEventArgs.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewElementStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera stan bieżącego <see cref="T:System.Windows.Forms.DataGridViewRow" />elementu.</summary>
        <value>Bitowa kombinacja <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> wartości, która określa stan wiersza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość może służyć do określenia, czy wiersz jest zamrożony, tylko do odczytu lub zaznaczony, między innymi stanami.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.State%2A> jak użyć właściwości, aby określić, czy bieżący wiersz jest zaznaczony. Zmienna, `e`, jest typu <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs>. Ten przykład kodu jest częścią większego przykładu przedstawionego [w temacie How to: Dostosuj wygląd wierszy w kontrolce](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)DataGridView Windows Forms.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#34](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#34)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#34](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#34)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewElementStates" />
      </Docs>
    </Member>
  </Members>
</Type>
