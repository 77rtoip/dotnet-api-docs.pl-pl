<Type Name="TextRenderer" FullName="System.Windows.Forms.TextRenderer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3e0e8f3cdd9a1dfa8d2486cf1fb30e8cc25ef41d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36513554" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TextRenderer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TextRenderer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TextRenderer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TextRenderer" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextRenderer sealed" />
  <TypeSignature Language="F#" Value="type TextRenderer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia metody używane do mierzenia i renderowania tekstu. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TextRenderer> Klasy zawiera zestaw `static` metod, które mogą służyć do pomiaru i rysowanie tekstu w kontrolce formularza systemu Windows.  
  
 Można manipulować, jak tekst jest rysowane przy użyciu jednej z <xref:System.Windows.Forms.TextRenderer.DrawText%2A> przeciążeń, które przyjmuje <xref:System.Windows.Forms.TextFormatFlags> parametru. Na przykład domyślnego zachowania <xref:System.Windows.Forms.TextRenderer> jest dodanie uzupełnienie do prostokątem narysowanego tekstu, aby zmieścił się w ich symboli. Jeśli należy narysować wiersza tekstu bez te dodatkowe spacje należy użyć wersji <xref:System.Windows.Forms.TextRenderer.DrawText%2A> i <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> które trwają <xref:System.Drawing.Size> i <xref:System.Windows.Forms.TextFormatFlags> parametru. Na przykład zobacz <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Metody <xref:System.Windows.Forms.TextRenderer> nie są obsługiwane na potrzeby drukowania. Zawsze należy używać <xref:System.Drawing.Graphics.DrawString%2A> metody <xref:System.Drawing.Graphics> klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metody. Aby uruchomić ten przykład, Wklej kod do formularza systemu Windows i wywołanie `RenderText1` z formularza <xref:System.Windows.Forms.Control.Paint> program obsługi zdarzeń, przekazywanie `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="DrawText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rysuje określonego tekstu w określonej lokalizacji przy użyciu kontekstu określonego urządzenia, kolorów i czcionek.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Renderowanie tekstu oferowane przez <xref:System.Windows.Forms.TextRenderer> klasy jest oparta na renderowanie tekstu z GDI i nie jest obsługiwana dla drukowanie formularzy systemu Windows. Zamiast tego należy użyć <xref:System.Drawing.Graphics.DrawString%2A> metody <xref:System.Drawing.Graphics> klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Point pt, System.Drawing.Color foreColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Point pt, valuetype System.Drawing.Color foreColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Point pt, System::Drawing::Color foreColor);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Point * System.Drawing.Color -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, pt, foreColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="dc">Kontekst urządzenia, w którym ma zostać narysowany tekst.</param>
        <param name="text">Tekst do rysowania.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> Do zastosowania do narysowanego tekstu.</param>
        <param name="pt">
          <see cref="T:System.Drawing.Point" /> Reprezentujący lewego górnego rogu narysowanego tekstu.</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" /> Do zastosowania do narysowanego tekstu.</param>
        <summary>Rysuje określonego tekstu w określonej lokalizacji przy użyciu kontekstu określonego urządzenia, czcionek i kolorów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można manipulować, jak tekst jest rysowane przy użyciu jednej z <xref:System.Windows.Forms.TextRenderer.DrawText%2A> przeciążeń, które przyjmuje <xref:System.Windows.Forms.TextFormatFlags> parametru.  
  
 Jeśli `font` jest `null` lub `forecolor` jest <xref:System.Drawing.Color.Empty?displayProperty=nameWithType>, <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metoda będzie rysowanie tekstu w czcionek i kolorów aktualnie wybrane w kontekście urządzenia określonego przez `dc`. Jeśli `forecolor` jest <xref:System.Drawing.Color.Transparent%2A>, tekst nie będą pobierane.  
  
 Renderowanie tekstu oferowane przez <xref:System.Windows.Forms.TextRenderer> klasy jest oparta na renderowanie tekstu z GDI i nie jest obsługiwana dla drukowanie formularzy systemu Windows. Zamiast tego należy użyć <xref:System.Drawing.Graphics.DrawString%2A> metody <xref:System.Drawing.Graphics> klasy.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Metod, które określają <xref:System.Drawing.Point> w lewym górnym rogu narysowanego tekstu nie są poprawnie w systemie Windows 2000. Jeśli aplikacja jest przeznaczona do użycia na komputerach z systemem Windows 2000, należy użyć jednej z <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metod, które określają <xref:System.Drawing.Rectangle> dla granice narysowanego tekstu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metody. Aby uruchomić ten przykład, Wklej kod do formularza systemu Windows i wywołanie `RenderText1` z formularza <xref:System.Windows.Forms.Control.Paint> program obsługi zdarzeń, przekazywanie `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.Drawing.IDeviceContext" />
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Rectangle bounds, System.Drawing.Color foreColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color foreColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Rectangle bounds, System::Drawing::Color foreColor);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Rectangle * System.Drawing.Color -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, bounds, foreColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="dc">Kontekst urządzenia, w którym ma zostać narysowany tekst.</param>
        <param name="text">Tekst do rysowania.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> Do zastosowania do narysowanego tekstu.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> Reprezentujący granicami wartości tekstowej.</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" /> Do zastosowania do narysowanego tekstu.</param>
        <summary>Rysuje określony tekst w granicach określonego, przy użyciu kontekstu określonego urządzenia, czcionek i kolorów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `font` lub `forecolor` jest `null` lub <xref:System.Drawing.Color.Empty?displayProperty=nameWithType>odpowiednio; <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metoda będzie rysowanie tekstu w czcionek i kolorów aktualnie wybrane w kontekście urządzenia określonego przez `dc`. Jeśli `forecolor` jest <xref:System.Drawing.Color.Transparent%2A>, tekst nie będą pobierane.  
  
 Ta metoda spowoduje tekst, który poziomie i w pionie jest wyśrodkowane na prostokąt określony przez `bounds` parametru. Aby zmienić sposób tekstu jest rysowana, użyj wersji <xref:System.Windows.Forms.TextRenderer.DrawText%2A> pobierającej <xref:System.Windows.Forms.TextFormatFlags> typ parametru.  
  
 Renderowanie tekstu oferowane przez <xref:System.Windows.Forms.TextRenderer> klasy jest oparta na renderowanie tekstu z GDI i nie jest obsługiwana dla drukowanie formularzy systemu Windows. Zamiast tego należy użyć <xref:System.Drawing.Graphics.DrawString%2A> metody <xref:System.Drawing.Graphics> klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metody. Aby uruchomić ten przykład, Wklej kod do formularza systemu Windows i wywołanie `RenderText2` z formularza <xref:System.Windows.Forms.Control.Paint> program obsługi zdarzeń, przekazywanie `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#3)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.Drawing.IDeviceContext" />
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Point pt, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Point pt, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Point pt, System::Drawing::Color foreColor, System::Drawing::Color backColor);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Point * System.Drawing.Color * System.Drawing.Color -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, pt, foreColor, backColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="dc">Kontekst urządzenia, w którym ma zostać narysowany tekst.</param>
        <param name="text">Tekst do rysowania.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> Do zastosowania do narysowanego tekstu.</param>
        <param name="pt">
          <see cref="T:System.Drawing.Point" /> Reprezentujący lewego górnego rogu narysowanego tekstu.</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" /> Do zastosowania do narysowanego tekstu.</param>
        <param name="backColor">
          <see cref="T:System.Drawing.Color" /> Do zastosowania do obszaru tła narysowanego tekstu.</param>
        <summary>Rysuje określonego tekstu w określonej lokalizacji przy użyciu kontekstu określonego urządzenia, czcionkę, kolor i kolor tyłu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `backColor` Parametr jest stosowany do prostokątny obszar zawierający narysowanego tekstu. Jeśli `font`, `backcolor` lub `forecolor` jest `null` lub <xref:System.Drawing.Color.Empty?displayProperty=nameWithType>odpowiednio; <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metoda będzie rysowanie tekstu w czcionek i kolorów aktualnie wybrane w kontekście urządzenia określonego przez `dc`. Jeśli `forecolor` jest <xref:System.Drawing.Color.Transparent%2A>, tekst nie będą pobierane.  
  
 Można manipulować, jak tekst jest rysowane przy użyciu jednej z <xref:System.Windows.Forms.TextRenderer.DrawText%2A> przeciążeń, które przyjmuje <xref:System.Windows.Forms.TextFormatFlags> parametru.  
  
 Renderowanie tekstu oferowane przez <xref:System.Windows.Forms.TextRenderer> klasy jest oparta na renderowanie tekstu z GDI i nie jest obsługiwana dla drukowanie formularzy systemu Windows. Zamiast tego należy użyć <xref:System.Drawing.Graphics.DrawString%2A> metody <xref:System.Drawing.Graphics> klasy.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Metod, które określają <xref:System.Drawing.Point> w lewym górnym rogu narysowanego tekstu nie są poprawnie w systemie Windows 2000. Jeśli aplikacja jest przeznaczona do użycia na komputerach z systemem Windows 2000, należy użyć jednej z <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metod, które określają <xref:System.Drawing.Rectangle> dla granice narysowanego tekstu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metody. Aby uruchomić ten przykład, Wklej kod do formularza systemu Windows i wywołanie `RenderText3` z formularza <xref:System.Windows.Forms.Control.Paint> program obsługi zdarzeń, przekazywanie `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Point pt, System.Drawing.Color foreColor, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Point pt, valuetype System.Drawing.Color foreColor, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Point pt, System::Drawing::Color foreColor, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Point * System.Drawing.Color * System.Windows.Forms.TextFormatFlags -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, pt, foreColor, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Kontekst urządzenia, w którym ma zostać narysowany tekst.</param>
        <param name="text">Tekst do rysowania.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> Do zastosowania do narysowanego tekstu.</param>
        <param name="pt">
          <see cref="T:System.Drawing.Point" /> Reprezentujący lewego górnego rogu narysowanego tekstu.</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" /> Do zastosowania do narysowanego tekstu.</param>
        <param name="flags">Bitowe połączenie <see cref="T:System.Windows.Forms.TextFormatFlags" /> wartości.</param>
        <summary>Rysuje określonego tekstu w określonej lokalizacji przy użyciu kontekstu określonego urządzenia, czcionkę, kolor i formatowanie instrukcje.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można manipulować, jak tekst jest rysowane przy użyciu jednej z <xref:System.Windows.Forms.TextRenderer.DrawText%2A> przeciążeń, które przyjmuje <xref:System.Windows.Forms.TextFormatFlags> parametru. Na przykład domyślnego zachowania <xref:System.Windows.Forms.TextRenderer> jest dodanie uzupełnienie do prostokątem narysowanego tekstu, aby zmieścił się w ich symboli. Jeśli należy narysować wiersza tekstu bez te dodatkowe spacje należy użyć wersji <xref:System.Windows.Forms.TextRenderer.DrawText%2A> i <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> które trwają <xref:System.Drawing.Size> i <xref:System.Windows.Forms.TextFormatFlags> parametru. Na przykład zobacz <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
 `backColor` Parametru jest stosowany do obszaru wewnątrz `bounds` parametru. Jeśli `font` lub `forecolor` jest `null` lub <xref:System.Drawing.Color.Empty?displayProperty=nameWithType>odpowiednio; <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metoda będzie rysowanie tekstu w czcionek i kolorów aktualnie wybrane w kontekście urządzenia określonego przez `dc`. Jeśli `forecolor` jest <xref:System.Drawing.Color.Transparent%2A>, tekst nie będą pobierane.  
  
 Renderowanie tekstu oferowane przez <xref:System.Windows.Forms.TextRenderer> klasy jest oparta na renderowanie tekstu z GDI i nie jest obsługiwana dla drukowanie formularzy systemu Windows. Zamiast tego należy użyć <xref:System.Drawing.Graphics.DrawString%2A> metody <xref:System.Drawing.Graphics> klasy.  
  
 <xref:System.Windows.Forms.TextRenderer> Ma obsługuje dodawanie punktów tabulacji narysowanego tekstu, mimo że można rozszerzyć istniejącą kartę przestanie używać <xref:System.Windows.Forms.TextFormatFlags.ExpandTabs> flagi.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Metod, które określają <xref:System.Drawing.Point> w lewym górnym rogu narysowanego tekstu nie są poprawnie w systemie Windows 2000. Jeśli aplikacja jest przeznaczona do użycia na komputerach z systemem Windows 2000, należy użyć jednej z <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metod, które określają <xref:System.Drawing.Rectangle> dla granice narysowanego tekstu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metody. Aby uruchomić ten przykład, Wklej kod do formularza systemu Windows i wywołanie `RenderText5` z formularza <xref:System.Windows.Forms.Control.Paint> program obsługi zdarzeń, przekazywanie `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#6)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Rectangle bounds, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Rectangle bounds, System::Drawing::Color foreColor, System::Drawing::Color backColor);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Rectangle * System.Drawing.Color * System.Drawing.Color -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, bounds, foreColor, backColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="dc">Kontekst urządzenia, w którym ma zostać narysowany tekst.</param>
        <param name="text">Tekst do rysowania.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> Do zastosowania do narysowanego tekstu.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> Reprezentujący granicami wartości tekstowej.</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" /> Do zastosowania do narysowanego tekstu.</param>
        <param name="backColor">
          <see cref="T:System.Drawing.Color" /> Do zastosowania do obszaru reprezentowany przez <c>granice</c>.</param>
        <summary>Rysuje określony tekst w granicach określonego za pomocą kontekstu określonego urządzenia, czcionkę, kolor i kolor tyłu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `backColor` Parametru jest stosowany do obszaru wewnątrz `bounds` parametru. Jeśli `font`, `backcolor` lub `forecolor` jest `null` lub <xref:System.Drawing.Color.Empty>odpowiednio; <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metoda będzie rysowanie tekstu w czcionek i kolorów aktualnie wybrane w kontekście urządzenia określonego przez `dc`. Jeśli `forecolor` jest <xref:System.Drawing.Color.Transparent%2A>, tekst nie będą pobierane.  
  
 Ta metoda spowoduje tekst, który poziomie i w pionie jest wyśrodkowane na prostokąt określony przez `bounds` parametru. Aby zmienić sposób tekstu jest rysowana, użyj wersji <xref:System.Windows.Forms.TextRenderer.DrawText%2A> pobierającej <xref:System.Windows.Forms.TextFormatFlags> typ parametru.  
  
 Renderowanie tekstu oferowane przez <xref:System.Windows.Forms.TextRenderer> klasy jest oparta na renderowanie tekstu z GDI i nie jest obsługiwana dla drukowanie formularzy systemu Windows. Zamiast tego należy użyć <xref:System.Drawing.Graphics.DrawString%2A> metody <xref:System.Drawing.Graphics> klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metody. Aby uruchomić ten przykład, Wklej kod do formularza systemu Windows i wywołanie `RenderText4` z formularza <xref:System.Windows.Forms.Control.Paint> program obsługi zdarzeń, przekazywanie `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#5)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Rectangle bounds, System.Drawing.Color foreColor, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color foreColor, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Rectangle bounds, System::Drawing::Color foreColor, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Rectangle * System.Drawing.Color * System.Windows.Forms.TextFormatFlags -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, bounds, foreColor, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Kontekst urządzenia, w którym ma zostać narysowany tekst.</param>
        <param name="text">Tekst do rysowania.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> Do zastosowania do narysowanego tekstu.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> Reprezentujący granicami wartości tekstowej.</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" /> Do zastosowania do narysowanego tekstu.</param>
        <param name="flags">Bitowe połączenie <see cref="T:System.Windows.Forms.TextFormatFlags" /> wartości.</param>
        <summary>Rysuje określony tekst w granicach określonego przy użyciu kontekstu określonego urządzenia, czcionkę, kolor i formatowanie instrukcje.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `font` lub `color` jest `null` lub <xref:System.Drawing.Color.Empty>odpowiednio; <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metoda będzie rysowanie tekstu w czcionek i kolorów aktualnie wybrane w kontekście urządzenia określonego przez `dc`. Jeśli `forecolor` jest <xref:System.Drawing.Color.Transparent%2A>, tekst nie będą pobierane.  
  
 Można manipulować, jak tekst jest rysowane przy użyciu jednej z <xref:System.Windows.Forms.TextRenderer.DrawText%2A> przeciążeń, które przyjmuje <xref:System.Windows.Forms.TextFormatFlags> parametru. Na przykład domyślnego zachowania <xref:System.Windows.Forms.TextRenderer> jest dodanie uzupełnienie do prostokątem narysowanego tekstu, aby zmieścił się w ich symboli. Jeśli należy narysować wiersza tekstu bez te dodatkowe spacje należy użyć wersji <xref:System.Windows.Forms.TextRenderer.DrawText%2A> i <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> które trwają <xref:System.Drawing.Size> i <xref:System.Windows.Forms.TextFormatFlags> parametru. Na przykład zobacz <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
 Renderowanie tekstu oferowane przez <xref:System.Windows.Forms.TextRenderer> klasy jest oparta na renderowanie tekstu z GDI i nie jest obsługiwana dla drukowanie formularzy systemu Windows. Zamiast tego należy użyć <xref:System.Drawing.Graphics.DrawString%2A> metody <xref:System.Drawing.Graphics> klasy.  
  
 <xref:System.Windows.Forms.TextRenderer> Ma obsługuje dodawanie punktów tabulacji narysowanego tekstu, mimo że można rozszerzyć istniejącą kartę przestanie używać <xref:System.Windows.Forms.TextFormatFlags.ExpandTabs> flagi.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metody. Aby uruchomić ten przykład, Wklej kod do formularza systemu Windows i wywołanie `RenderText6` z formularza <xref:System.Windows.Forms.Control.Paint> program obsługi zdarzeń, przekazywanie `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#7)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Point pt, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Point pt, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Point pt, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Point * System.Drawing.Color * System.Drawing.Color * System.Windows.Forms.TextFormatFlags -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, pt, foreColor, backColor, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Kontekst urządzenia, w którym ma zostać narysowany tekst.</param>
        <param name="text">Tekst do rysowania.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> Do zastosowania do narysowanego tekstu.</param>
        <param name="pt">
          <see cref="T:System.Drawing.Point" /> Reprezentujący lewego górnego rogu narysowanego tekstu.</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" /> Do zastosowania w tekście.</param>
        <param name="backColor">
          <see cref="T:System.Drawing.Color" /> Do zastosowania do obszaru tła narysowanego tekstu.</param>
        <param name="flags">Bitowe połączenie <see cref="T:System.Windows.Forms.TextFormatFlags" /> wartości.</param>
        <summary>Rysuje określonego tekstu w określonej lokalizacji przy użyciu kontekstu określonego urządzenia, czcionek, kolorów, kolor tła i formatowanie</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `backcolor` Jest stosowany parametr prostokątny obszar zawierający narysowanego tekstu. Jeśli `font` lub `forecolor` jest `null` lub <xref:System.Drawing.Color.Empty>odpowiednio; <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metoda będzie rysowanie tekstu w czcionek i kolorów aktualnie wybrane w kontekście urządzenia określonego przez `dc`. Jeśli `forecolor` jest <xref:System.Drawing.Color.Transparent%2A>, tekst nie będą pobierane.  
  
 Można manipulować, jak tekst jest rysowane przy użyciu jednej z <xref:System.Windows.Forms.TextRenderer.DrawText%2A> przeciążeń, które przyjmuje <xref:System.Windows.Forms.TextFormatFlags> parametru. Na przykład domyślnego zachowania <xref:System.Windows.Forms.TextRenderer> jest dodanie uzupełnienie do prostokątem narysowanego tekstu, aby zmieścił się w ich symboli. Jeśli należy narysować wiersza tekstu bez te dodatkowe spacje należy użyć wersji <xref:System.Windows.Forms.TextRenderer.DrawText%2A> i <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> które trwają <xref:System.Drawing.Size> i <xref:System.Windows.Forms.TextFormatFlags> parametru. Na przykład zobacz <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
 Renderowanie tekstu oferowane przez <xref:System.Windows.Forms.TextRenderer> klasy jest oparta na renderowanie tekstu z GDI i nie jest obsługiwana dla drukowanie formularzy systemu Windows. Zamiast tego należy użyć <xref:System.Drawing.Graphics.DrawString%2A> metody <xref:System.Drawing.Graphics> klasy.  
  
 <xref:System.Windows.Forms.TextRenderer> Ma obsługuje dodawanie punktów tabulacji narysowanego tekstu, mimo że można rozszerzyć istniejącą kartę przestanie używać <xref:System.Windows.Forms.TextFormatFlags.ExpandTabs> flagi.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Metod, które określają <xref:System.Drawing.Point> w lewym górnym rogu narysowanego tekstu nie są poprawnie w systemie Windows 2000. Jeśli aplikacja jest przeznaczona do użycia na komputerach z systemem Windows 2000, należy użyć jednej z <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metod, które określają <xref:System.Drawing.Rectangle> dla granice narysowanego tekstu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metody. Aby uruchomić ten przykład, Wklej kod do formularza systemu Windows i wywołanie `RenderText7` z formularza <xref:System.Windows.Forms.Control.Paint> program obsługi zdarzeń, przekazywanie `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#8)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Rectangle bounds, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Rectangle bounds, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Rectangle * System.Drawing.Color * System.Drawing.Color * System.Windows.Forms.TextFormatFlags -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, bounds, foreColor, backColor, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Kontekst urządzenia, w którym ma zostać narysowany tekst.</param>
        <param name="text">Tekst do rysowania.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> Do zastosowania do narysowanego tekstu.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> Reprezentujący granicami wartości tekstowej.</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" /> Do zastosowania w tekście.</param>
        <param name="backColor">
          <see cref="T:System.Drawing.Color" /> Do zastosowania do obszaru reprezentowany przez <c>granice</c>.</param>
        <param name="flags">Bitowe połączenie <see cref="T:System.Windows.Forms.TextFormatFlags" /> wartości.</param>
        <summary>Rysuje określony tekst w granicach określonego przy użyciu kontekstu określonego urządzenia, czcionek, kolorów, kolor tła i formatowanie instrukcje.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `backcolor` Parametru jest stosowany do obszaru wewnątrz `bounds` parametru`.` Jeśli `font`, `forecolor` lub `backcolor` jest `null` lub <xref:System.Drawing.Color.Empty>odpowiednio; <xref:System.Windows.Forms.TextRenderer.DrawText%2A> zostanie — metoda Rysowanie tekstu w czcionek i kolorów aktualnie wybrane w kontekście urządzenia określonego przez `dc`. Jeśli `forecolor` jest <xref:System.Drawing.Color.Transparent%2A>, tekst nie będą pobierane.  
  
 Można manipulować, jak tekst jest rysowane przy użyciu jednej z <xref:System.Windows.Forms.TextRenderer.DrawText%2A> przeciążeń, które przyjmuje <xref:System.Windows.Forms.TextFormatFlags> parametru. Na przykład domyślnego zachowania <xref:System.Windows.Forms.TextRenderer> jest dodanie uzupełnienie do prostokątem narysowanego tekstu, aby zmieścił się w ich symboli. Jeśli należy narysować wiersza tekstu bez te dodatkowe spacje należy użyć wersji <xref:System.Windows.Forms.TextRenderer.DrawText%2A> i <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> które trwają <xref:System.Drawing.Size> i <xref:System.Windows.Forms.TextFormatFlags> parametru. Na przykład zobacz <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
 Renderowanie tekstu oferowane przez <xref:System.Windows.Forms.TextRenderer> klasy jest oparta na renderowanie tekstu z GDI i nie jest obsługiwana dla drukowanie formularzy systemu Windows. Zamiast tego należy użyć <xref:System.Drawing.Graphics.DrawString%2A> metody <xref:System.Drawing.Graphics> klasy.  
  
 <xref:System.Windows.Forms.TextRenderer> Ma obsługuje dodawanie punktów tabulacji narysowanego tekstu, mimo że można rozszerzyć istniejącą kartę przestanie używać <xref:System.Windows.Forms.TextFormatFlags.ExpandTabs> flagi.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metody. Aby uruchomić ten przykład, Wklej kod do formularza systemu Windows i wywołanie `RenderText8` z formularza <xref:System.Windows.Forms.Control.Paint> program obsługi zdarzeń, przekazywanie `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#9)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="MeasureText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Mierzy określony tekst narysować z określonej czcionki.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (string text, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(string text, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.String,System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::String ^ text, System::Drawing::Font ^ font);" />
      <MemberSignature Language="F#" Value="static member MeasureText : string * System.Drawing.Font -&gt; System.Drawing.Size" Usage="System.Windows.Forms.TextRenderer.MeasureText (text, font)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do pomiaru.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> Do zastosowania do zmierzona tekstu.</param>
        <summary>Udostępnia rozmiar w pikselach określony tekst narysować z określonej czcionki.</summary>
        <returns>
          <see cref="T:System.Drawing.Size" />, W pikselach, o <paramref name="text" /> rysowana w jednym wierszu z określonym <paramref name="font" />. Można manipulować, jak tekst jest rysowane przy użyciu jednej z <see cref="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" /> przeciążeń, które przyjmuje <see cref="T:System.Windows.Forms.TextFormatFlags" /> parametru. Na przykład domyślnego zachowania <see cref="T:System.Windows.Forms.TextRenderer" /> jest dodanie uzupełnienie do prostokątem narysowanego tekstu, aby zmieścił się w ich symboli. Jeśli należy narysować wiersza tekstu bez te dodatkowe spacje należy użyć wersji <see cref="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)" /> i <see cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font)" /> które trwają <see cref="T:System.Drawing.Size" /> i <see cref="T:System.Windows.Forms.TextFormatFlags" /> parametru. Na przykład zobacz <see cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> Metoda wymaga, aby tekstu jest rysowana w jednym wierszu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> metody. Aby uruchomić ten przykład, Wklej kod do formularza systemu Windows i wywołanie `MeasureText1` z formularza <xref:System.Windows.Forms.Control.Paint> program obsługi zdarzeń, przekazywanie `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font);" />
      <MemberSignature Language="F#" Value="static member MeasureText : System.Drawing.IDeviceContext * string * System.Drawing.Font -&gt; System.Drawing.Size" Usage="System.Windows.Forms.TextRenderer.MeasureText (dc, text, font)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="dc">Kontekst urządzenia, w którym do mierzenia tekst.</param>
        <param name="text">Tekst do pomiaru.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> Do zastosowania do zmierzona tekstu.</param>
        <summary>Udostępnia rozmiar wyrażony w pikselach określony tekst z określonej czcionki w kontekście określonego urządzenia.</summary>
        <returns>
          <see cref="T:System.Drawing.Size" />, W pikselach, o <paramref name="text" /> rysowane w jednym wierszu z określonym <paramref name="font" /> w kontekście określonego urządzenia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> Metoda wymaga, aby tekstu jest rysowana w jednym wierszu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak używać jednej z <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> metody. Aby uruchomić ten przykład, Wklej kod do formularza systemu Windows i wywołanie `DrawALineOfText` z formularza <xref:System.Windows.Forms.Control.Paint> program obsługi zdarzeń, przekazywanie `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (string text, System.Drawing.Font font, System.Drawing.Size proposedSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(string text, class System.Drawing.Font font, valuetype System.Drawing.Size proposedSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.String,System.Drawing.Font,System.Drawing.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Size proposedSize);" />
      <MemberSignature Language="F#" Value="static member MeasureText : string * System.Drawing.Font * System.Drawing.Size -&gt; System.Drawing.Size" Usage="System.Windows.Forms.TextRenderer.MeasureText (text, font, proposedSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="proposedSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do pomiaru.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> Do zastosowania do zmierzona tekstu.</param>
        <param name="proposedSize">
          <see cref="T:System.Drawing.Size" /> z początkowej prostokątem.</param>
        <summary>Udostępnia rozmiar w pikselach określony tekst narysować z określonej czcionki, tworzenie początkowej prostokątem przy użyciu określonego rozmiaru.</summary>
        <returns>
          <see cref="T:System.Drawing.Size" />, W pikselach, o <paramref name="text" /> rysowane z określonym <paramref name="font" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> Używa metody `proposedSize` parametr, aby wskazać relacji wysokości i szerokości podczas określania rozmiaru tekstu. Gdy pomiaru tekst w jednym wierszu, jeśli `proposedSize` reprezentuje parametr <xref:System.Drawing.Size> o wymiarze wysokość jest większa niż <xref:System.Int32.MaxValue?displayProperty=nameWithType>, zwracana <xref:System.Drawing.Size> zostanie dostosowana do uwzględnienia rzeczywista wysokość tekstu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak używać jednej z <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> metody. Aby uruchomić ten przykład, Wklej kod do formularza systemu Windows i wywołanie `DrawALineOfText` z formularza <xref:System.Windows.Forms.Control.Paint> program obsługi zdarzeń, przekazywanie `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Size proposedSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Size proposedSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Size proposedSize);" />
      <MemberSignature Language="F#" Value="static member MeasureText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Size -&gt; System.Drawing.Size" Usage="System.Windows.Forms.TextRenderer.MeasureText (dc, text, font, proposedSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="proposedSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="dc">Kontekst urządzenia, w którym do mierzenia tekst.</param>
        <param name="text">Tekst do pomiaru.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> Do zastosowania do zmierzona tekstu.</param>
        <param name="proposedSize">
          <see cref="T:System.Drawing.Size" /> z początkowej prostokątem.</param>
        <summary>Udostępnia rozmiar w pikselach określony tekst narysować z określonej czcionki w kontekście określonego urządzenia, tworzenie początkowej prostokąt ograniczający tekstu przy użyciu określonego rozmiaru.</summary>
        <returns>
          <see cref="T:System.Drawing.Size" />, W pikselach, o <paramref name="text" /> rysowane z określonym <paramref name="font" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> Używa metody `proposedSize` parametr, aby wskazać relacji wysokości i szerokości podczas określania rozmiaru tekstu. Gdy pomiaru tekst w jednym wierszu, jeśli `proposedSize` reprezentuje parametr <xref:System.Drawing.Size> o wymiarze wysokość jest większa niż <xref:System.Int32.MaxValue?displayProperty=nameWithType>, zwracana <xref:System.Drawing.Size> zostanie dostosowana do uwzględnienia rzeczywista wysokość tekstu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak używać jednej z <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> metody. Aby uruchomić ten przykład, Wklej kod do formularza systemu Windows i wywołanie `DrawALineOfText` z formularza <xref:System.Windows.Forms.Control.Paint> program obsługi zdarzeń, przekazywanie `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (string text, System.Drawing.Font font, System.Drawing.Size proposedSize, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(string text, class System.Drawing.Font font, valuetype System.Drawing.Size proposedSize, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Size proposedSize, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member MeasureText : string * System.Drawing.Font * System.Drawing.Size * System.Windows.Forms.TextFormatFlags -&gt; System.Drawing.Size" Usage="System.Windows.Forms.TextRenderer.MeasureText (text, font, proposedSize, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="proposedSize" Type="System.Drawing.Size" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do pomiaru.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> Do zastosowania do zmierzona tekstu.</param>
        <param name="proposedSize">
          <see cref="T:System.Drawing.Size" /> z początkowej prostokątem.</param>
        <param name="flags">Formatowanie instrukcje dotyczą zmierzona tekstu.</param>
        <summary>Udostępnia rozmiar w pikselach określonego tekstu podczas rysowania z określonej czcionki i instrukcje formatowania, tworzenie początkowej prostokątem tekstu przy użyciu określonego rozmiaru.</summary>
        <returns>
          <see cref="T:System.Drawing.Size" />, W pikselach, o <paramref name="text" /> rysowane z określonym <paramref name="font" /> i format.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> używa `proposedSize` i `flags` parametry, aby wskazać relacji wysokości i szerokości podczas określania rozmiaru tekstu. Gdy pomiaru tekst w jednym wierszu, jeśli `proposedSize` reprezentuje parametr <xref:System.Drawing.Size> o wymiarze wysokość jest większa niż <xref:System.Int32.MaxValue?displayProperty=nameWithType>, zwracana <xref:System.Drawing.Size> zostanie dostosowana do uwzględnienia rzeczywista wysokość tekstu.  
  
 Można manipulować, jak tekst jest rysowane przy użyciu jednej z <xref:System.Windows.Forms.TextRenderer.DrawText%2A> przeciążeń, które przyjmuje <xref:System.Windows.Forms.TextFormatFlags> parametru. Na przykład domyślnego zachowania <xref:System.Windows.Forms.TextRenderer> jest dodanie uzupełnienie do prostokątem narysowanego tekstu, aby zmieścił się w ich symboli. Jeśli należy narysować wiersza tekstu bez te dodatkowe spacje należy użyć wersji <xref:System.Windows.Forms.TextRenderer.DrawText%2A> i <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> które trwają <xref:System.Drawing.Size> i <xref:System.Windows.Forms.TextFormatFlags> parametru. Na przykład zobacz <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
> [!NOTE]
>  To przeciążenie metody <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29> zignoruje <xref:System.Windows.Forms.TextFormatFlags> wartość <xref:System.Windows.Forms.TextFormatFlags.NoPadding> lub <xref:System.Windows.Forms.TextFormatFlags.LeftAndRightPadding>. Jeśli określisz dopełnienie wartość inna niż domyślna, należy użyć przeciążenia <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29> pobierającej <xref:System.Drawing.IDeviceContext> obiektu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak używać jednej z <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> metody. Aby uruchomić ten przykład, Wklej kod do formularza systemu Windows i wywołanie `DrawALineOfText` z formularza <xref:System.Windows.Forms.Control.Paint> program obsługi zdarzeń, przekazywanie `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Size proposedSize, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Size proposedSize, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Size proposedSize, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member MeasureText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Size * System.Windows.Forms.TextFormatFlags -&gt; System.Drawing.Size" Usage="System.Windows.Forms.TextRenderer.MeasureText (dc, text, font, proposedSize, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="proposedSize" Type="System.Drawing.Size" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Kontekst urządzenia, w którym do mierzenia tekst.</param>
        <param name="text">Tekst do pomiaru.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> Do zastosowania do zmierzona tekstu.</param>
        <param name="proposedSize">
          <see cref="T:System.Drawing.Size" /> z początkowej prostokątem.</param>
        <param name="flags">Formatowanie instrukcje dotyczą zmierzona tekstu.</param>
        <summary>Udostępnia rozmiar wyrażony w pikselach określony tekst narysować o kontekście określonego urządzenia, czcionki i instrukcje formatowania, tworzenie początkowej prostokątem tekstu przy użyciu określonego rozmiaru.</summary>
        <returns>
          <see cref="T:System.Drawing.Size" />, W pikselach, o <paramref name="text" /> rysowane z określonym <paramref name="font" /> i format.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> Używa metody `proposedSize` i `flags` parametry, aby wskazać relacji wysokości i szerokości podczas określania rozmiaru tekstu. Gdy pomiaru tekst w jednym wierszu, jeśli `proposedSize` reprezentuje parametr <xref:System.Drawing.Size> o wymiarze wysokość jest większa niż <xref:System.Int32.MaxValue?displayProperty=nameWithType>, zwracana <xref:System.Drawing.Size> zostanie dostosowana do uwzględnienia rzeczywista wysokość tekstu.  
  
 Można manipulować, jak tekst jest rysowane przy użyciu jednej z <xref:System.Windows.Forms.TextRenderer.DrawText%2A> przeciążeń, które przyjmuje <xref:System.Windows.Forms.TextFormatFlags> parametru. Na przykład domyślnego zachowania <xref:System.Windows.Forms.TextRenderer> jest dodanie uzupełnienie do prostokątem narysowanego tekstu, aby zmieścił się w ich symboli. Jeśli trzeba narysować wiersza tekstu bez te dodatkowe spacje, użyj wersji <xref:System.Windows.Forms.TextRenderer.DrawText%2A> i <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> które trwają <xref:System.Drawing.Size> i <xref:System.Windows.Forms.TextFormatFlags> parametru, jak pokazano w przykładzie.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> i <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metody do rysowania pojedynczy wiersz tekstu w różnych style. Aby uruchomić ten przykład Wklej poniższy kod w formularzu systemu Windows i wywołanie `DrawALineOfText` z formularza <xref:System.Windows.Forms.Control.Paint> program obsługi zdarzeń, przekazywanie `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>