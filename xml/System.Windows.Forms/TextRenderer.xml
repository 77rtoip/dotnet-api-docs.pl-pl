<Type Name="TextRenderer" FullName="System.Windows.Forms.TextRenderer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4933b91dbe21adab9af815c11dba96e2d5e8c411" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69178319" /></Metadata><TypeSignature Language="C#" Value="public sealed class TextRenderer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TextRenderer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TextRenderer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TextRenderer" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextRenderer sealed" />
  <TypeSignature Language="F#" Value="type TextRenderer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Dostarcza metody służące do mierzenia i renderowania tekstu. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TextRenderer> Klasa zawiera`static` zestaw metod, których można użyć do mierzenia i rysowania tekstu w kontrolce formularza systemu Windows.  
  
 Można manipulować sposobem rysowania tekstu przy użyciu jednego z <xref:System.Windows.Forms.TextRenderer.DrawText%2A> przeciążeń, które <xref:System.Windows.Forms.TextFormatFlags> pobiera parametr. Na przykład domyślnym zachowaniem <xref:System.Windows.Forms.TextRenderer> jest dodanie dopełnienia do otaczającego prostokąta rysowanego tekstu w celu dopasowania symboli. Jeśli konieczne jest narysowanie wiersza tekstu bez dodatkowych spacji, należy <xref:System.Windows.Forms.TextRenderer.DrawText%2A> użyć wersji i <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> , która przyjmuje <xref:System.Drawing.Size> parametr i <xref:System.Windows.Forms.TextFormatFlags> . Aby zapoznać się z przykładem, zobacz <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Metodyniesą<xref:System.Windows.Forms.TextRenderer> obsługiwane na potrzeby drukowania. Należy zawsze używać <xref:System.Drawing.Graphics.DrawString%2A> metod <xref:System.Drawing.Graphics> klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metody. Aby uruchomić ten przykład, wklej kod do formularza systemu Windows i Wywołaj `RenderText1` z programu obsługi <xref:System.Windows.Forms.Control.Paint> zdarzeń formularza, przekazując `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="DrawText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rysuje określony tekst w określonej lokalizacji przy użyciu określonego kontekstu, koloru i czcionki urządzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Renderowanie tekstu oferowane przez <xref:System.Windows.Forms.TextRenderer> klasę jest oparte na renderowaniu tekstu GDI i nie jest obsługiwane na potrzeby drukowania z Windows Forms. Zamiast tego należy użyć <xref:System.Drawing.Graphics.DrawString%2A> metod <xref:System.Drawing.Graphics> klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Point pt, System.Drawing.Color foreColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Point pt, valuetype System.Drawing.Color foreColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Point pt, System::Drawing::Color foreColor);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Point * System.Drawing.Color -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, pt, foreColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="dc">Kontekst urządzenia, w którym ma zostać narysowany tekst.</param>
        <param name="text">Tekst do narysowania.</param>
        <param name="font"><see cref="T:System.Drawing.Font" /> Do zastosowania do rysowanego tekstu.</param>
        <param name="pt"><see cref="T:System.Drawing.Point" /> Reprezentuje lewy górny róg rysowanego tekstu.</param>
        <param name="foreColor"><see cref="T:System.Drawing.Color" /> Do zastosowania do rysowanego tekstu.</param>
        <summary>Rysuje określony tekst w określonej lokalizacji przy użyciu określonego kontekstu urządzenia, czcionki i koloru.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można manipulować sposobem rysowania tekstu przy użyciu jednego z <xref:System.Windows.Forms.TextRenderer.DrawText%2A> przeciążeń, które <xref:System.Windows.Forms.TextFormatFlags> pobiera parametr.  
  
 Jeśli `font` jest `null` lub jest,<xref:System.Drawing.Color.Empty?displayProperty=nameWithType>Metoda narysuje tekst w czcionce lub kolorze aktualnie wybranym w kontekście urządzenia określonym przez `dc`. `forecolor` <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Jeśli `forecolor` jest<xref:System.Drawing.Color.Transparent%2A>, tekst nie zostanie narysowany.  
  
 Renderowanie tekstu oferowane przez <xref:System.Windows.Forms.TextRenderer> klasę jest oparte na renderowaniu tekstu GDI i nie jest obsługiwane na potrzeby drukowania z Windows Forms. Zamiast tego należy użyć <xref:System.Drawing.Graphics.DrawString%2A> metod <xref:System.Drawing.Graphics> klasy.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Metody określającejakolewygórnyrógrysowanegotekstuniesąpoprawnierenderowane<xref:System.Drawing.Point> w systemie Windows 2000. Jeśli aplikacja jest przeznaczona do użytku na komputerach z systemem Windows 2000, należy użyć jednej z <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metod, które <xref:System.Drawing.Rectangle> określają dla granic rysowanego tekstu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metody. Aby uruchomić ten przykład, wklej kod do formularza systemu Windows i Wywołaj `RenderText1` z programu obsługi <xref:System.Windows.Forms.Control.Paint> zdarzeń formularza, przekazując `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" />jest <see langword="null" />.</exception>
        <altmember cref="T:System.Drawing.IDeviceContext" />
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Rectangle bounds, System.Drawing.Color foreColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color foreColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Rectangle bounds, System::Drawing::Color foreColor);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Rectangle * System.Drawing.Color -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, bounds, foreColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="dc">Kontekst urządzenia, w którym ma zostać narysowany tekst.</param>
        <param name="text">Tekst do narysowania.</param>
        <param name="font"><see cref="T:System.Drawing.Font" /> Do zastosowania do rysowanego tekstu.</param>
        <param name="bounds"><see cref="T:System.Drawing.Rectangle" /> Reprezentuje granice tekstu.</param>
        <param name="foreColor"><see cref="T:System.Drawing.Color" /> Do zastosowania do rysowanego tekstu.</param>
        <summary>Rysuje określony tekst w określonych granicach przy użyciu określonego kontekstu urządzenia, czcionki i koloru.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `font` lub `forecolor` jest `dc`lub odpowiednio lub<xref:System.Drawing.Color.Empty?displayProperty=nameWithType>, metodaspowodujenarysowanietekstuwczcioncelubkolorzeaktualniewybranymwkontekścieurządzeniaokreślonymprzez.<xref:System.Windows.Forms.TextRenderer.DrawText%2A> `null` Jeśli `forecolor` jest<xref:System.Drawing.Color.Transparent%2A>, tekst nie zostanie narysowany.  
  
 Ta metoda spowoduje, że tekst jest w poziomie i w pionie wyśrodkowany w prostokącie określonym `bounds` przez parametr. Aby zmienić sposób rysowania tekstu, użyj wersji <xref:System.Windows.Forms.TextRenderer.DrawText%2A> , która <xref:System.Windows.Forms.TextFormatFlags> przyjmuje typ parametru.  
  
 Renderowanie tekstu oferowane przez <xref:System.Windows.Forms.TextRenderer> klasę jest oparte na renderowaniu tekstu GDI i nie jest obsługiwane na potrzeby drukowania z Windows Forms. Zamiast tego należy użyć <xref:System.Drawing.Graphics.DrawString%2A> metod <xref:System.Drawing.Graphics> klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metody. Aby uruchomić ten przykład, wklej kod do formularza systemu Windows i Wywołaj `RenderText2` z programu obsługi <xref:System.Windows.Forms.Control.Paint> zdarzeń formularza, przekazując `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#3)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" />jest <see langword="null" />.</exception>
        <altmember cref="T:System.Drawing.IDeviceContext" />
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Point pt, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Point pt, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Point pt, System::Drawing::Color foreColor, System::Drawing::Color backColor);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Point * System.Drawing.Color * System.Drawing.Color -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, pt, foreColor, backColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="dc">Kontekst urządzenia, w którym ma zostać narysowany tekst.</param>
        <param name="text">Tekst do narysowania.</param>
        <param name="font"><see cref="T:System.Drawing.Font" /> Do zastosowania do rysowanego tekstu.</param>
        <param name="pt"><see cref="T:System.Drawing.Point" /> Reprezentuje lewy górny róg rysowanego tekstu.</param>
        <param name="foreColor"><see cref="T:System.Drawing.Color" /> Do zastosowania do rysowanego tekstu.</param>
        <param name="backColor"><see cref="T:System.Drawing.Color" /> Do zastosowania do obszaru tła rysowanego tekstu.</param>
        <summary>Rysuje określony tekst w określonej lokalizacji przy użyciu określonego kontekstu urządzenia, czcionki, koloru i koloru tyłu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `backColor` Parametr jest stosowany do prostokątnego obszaru zawierającego rysowany tekst. `font` Jeślilub`null` `dc`jest lub odpowiednio ,<xref:System.Windows.Forms.TextRenderer.DrawText%2A> Metoda narysuje tekst w czcionce lub kolorze aktualnie wybranym w kontekście urządzenia określonym przez. <xref:System.Drawing.Color.Empty?displayProperty=nameWithType> `backcolor` `forecolor` Jeśli `forecolor` jest<xref:System.Drawing.Color.Transparent%2A>, tekst nie zostanie narysowany.  
  
 Można manipulować sposobem rysowania tekstu przy użyciu jednego z <xref:System.Windows.Forms.TextRenderer.DrawText%2A> przeciążeń, które <xref:System.Windows.Forms.TextFormatFlags> pobiera parametr.  
  
 Renderowanie tekstu oferowane przez <xref:System.Windows.Forms.TextRenderer> klasę jest oparte na renderowaniu tekstu GDI i nie jest obsługiwane na potrzeby drukowania z Windows Forms. Zamiast tego należy użyć <xref:System.Drawing.Graphics.DrawString%2A> metod <xref:System.Drawing.Graphics> klasy.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Metody określającejakolewygórnyrógrysowanegotekstuniesąpoprawnierenderowane<xref:System.Drawing.Point> w systemie Windows 2000. Jeśli aplikacja jest przeznaczona do użytku na komputerach z systemem Windows 2000, należy użyć jednej z <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metod, które <xref:System.Drawing.Rectangle> określają dla granic rysowanego tekstu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metody. Aby uruchomić ten przykład, wklej kod do formularza systemu Windows i Wywołaj `RenderText3` z programu obsługi <xref:System.Windows.Forms.Control.Paint> zdarzeń formularza, przekazując `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Point pt, System.Drawing.Color foreColor, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Point pt, valuetype System.Drawing.Color foreColor, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Point pt, System::Drawing::Color foreColor, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Point * System.Drawing.Color * System.Windows.Forms.TextFormatFlags -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, pt, foreColor, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Kontekst urządzenia, w którym ma zostać narysowany tekst.</param>
        <param name="text">Tekst do narysowania.</param>
        <param name="font"><see cref="T:System.Drawing.Font" /> Do zastosowania do rysowanego tekstu.</param>
        <param name="pt"><see cref="T:System.Drawing.Point" /> Reprezentuje lewy górny róg rysowanego tekstu.</param>
        <param name="foreColor"><see cref="T:System.Drawing.Color" /> Do zastosowania do rysowanego tekstu.</param>
        <param name="flags">Bitowa kombinacja <see cref="T:System.Windows.Forms.TextFormatFlags" /> wartości.</param>
        <summary>Rysuje określony tekst w określonej lokalizacji przy użyciu określonych instrukcji dotyczących kontekstu, czcionki, koloru i formatowania dla urządzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można manipulować sposobem rysowania tekstu przy użyciu jednego z <xref:System.Windows.Forms.TextRenderer.DrawText%2A> przeciążeń, które <xref:System.Windows.Forms.TextFormatFlags> pobiera parametr. Na przykład domyślnym zachowaniem <xref:System.Windows.Forms.TextRenderer> jest dodanie dopełnienia do otaczającego prostokąta rysowanego tekstu w celu dopasowania symboli. Jeśli konieczne jest narysowanie wiersza tekstu bez dodatkowych spacji, należy <xref:System.Windows.Forms.TextRenderer.DrawText%2A> użyć wersji i <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> , która przyjmuje <xref:System.Drawing.Size> parametr i <xref:System.Windows.Forms.TextFormatFlags> . Aby zapoznać się z przykładem, zobacz <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
 Parametr jest stosowany do obszaru `bounds` w obrębie parametru. `backColor` Jeśli `font` lub `forecolor` jest `dc`lub odpowiednio lub<xref:System.Drawing.Color.Empty?displayProperty=nameWithType>, metodaspowodujenarysowanietekstuwczcioncelubkolorzeaktualniewybranymwkontekścieurządzeniaokreślonymprzez.<xref:System.Windows.Forms.TextRenderer.DrawText%2A> `null` Jeśli `forecolor` jest<xref:System.Drawing.Color.Transparent%2A>, tekst nie zostanie narysowany.  
  
 Renderowanie tekstu oferowane przez <xref:System.Windows.Forms.TextRenderer> klasę jest oparte na renderowaniu tekstu GDI i nie jest obsługiwane na potrzeby drukowania z Windows Forms. Zamiast tego należy użyć <xref:System.Drawing.Graphics.DrawString%2A> metod <xref:System.Drawing.Graphics> klasy.  
  
 Nie obsługuje dodawania tabulatora do rysowanego tekstu, chociaż można rozwinąć istniejące tabulatory <xref:System.Windows.Forms.TextFormatFlags.ExpandTabs> przy użyciu flagi. <xref:System.Windows.Forms.TextRenderer>  
  
> [!NOTE]
>  <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Metody określającejakolewygórnyrógrysowanegotekstuniesąpoprawnierenderowane<xref:System.Drawing.Point> w systemie Windows 2000. Jeśli aplikacja jest przeznaczona do użytku na komputerach z systemem Windows 2000, należy użyć jednej z <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metod, które <xref:System.Drawing.Rectangle> określają dla granic rysowanego tekstu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metody. Aby uruchomić ten przykład, wklej kod do formularza systemu Windows i Wywołaj `RenderText5` z programu obsługi <xref:System.Windows.Forms.Control.Paint> zdarzeń formularza, przekazując `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#6)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Rectangle bounds, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Rectangle bounds, System::Drawing::Color foreColor, System::Drawing::Color backColor);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Rectangle * System.Drawing.Color * System.Drawing.Color -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, bounds, foreColor, backColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="dc">Kontekst urządzenia, w którym ma zostać narysowany tekst.</param>
        <param name="text">Tekst do narysowania.</param>
        <param name="font"><see cref="T:System.Drawing.Font" /> Do zastosowania do rysowanego tekstu.</param>
        <param name="bounds"><see cref="T:System.Drawing.Rectangle" /> Reprezentuje granice tekstu.</param>
        <param name="foreColor"><see cref="T:System.Drawing.Color" /> Do zastosowania do rysowanego tekstu.</param>
        <param name="backColor">Do zastosowania do obszaru reprezentowanego przez <paramref name="bounds" />. <see cref="T:System.Drawing.Color" /></param>
        <summary>Rysuje określony tekst w określonych granicach przy użyciu określonego kontekstu urządzenia, czcionki, koloru i koloru tyłu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr jest stosowany do obszaru `bounds` w obrębie parametru. `backColor` `font` Jeślilub`null` `dc`jest lub odpowiednio ,<xref:System.Windows.Forms.TextRenderer.DrawText%2A> Metoda narysuje tekst w czcionce lub kolorze aktualnie wybranym w kontekście urządzenia określonym przez. <xref:System.Drawing.Color.Empty> `backcolor` `forecolor` Jeśli `forecolor` jest<xref:System.Drawing.Color.Transparent%2A>, tekst nie zostanie narysowany.  
  
 Ta metoda spowoduje, że tekst jest w poziomie i w pionie wyśrodkowany w prostokącie określonym `bounds` przez parametr. Aby zmienić sposób rysowania tekstu, użyj wersji <xref:System.Windows.Forms.TextRenderer.DrawText%2A> , która <xref:System.Windows.Forms.TextFormatFlags> przyjmuje typ parametru.  
  
 Renderowanie tekstu oferowane przez <xref:System.Windows.Forms.TextRenderer> klasę jest oparte na renderowaniu tekstu GDI i nie jest obsługiwane na potrzeby drukowania z Windows Forms. Zamiast tego należy użyć <xref:System.Drawing.Graphics.DrawString%2A> metod <xref:System.Drawing.Graphics> klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metody. Aby uruchomić ten przykład, wklej kod do formularza systemu Windows i Wywołaj `RenderText4` z programu obsługi <xref:System.Windows.Forms.Control.Paint> zdarzeń formularza, przekazując `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#5)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Rectangle bounds, System.Drawing.Color foreColor, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color foreColor, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Rectangle bounds, System::Drawing::Color foreColor, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Rectangle * System.Drawing.Color * System.Windows.Forms.TextFormatFlags -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, bounds, foreColor, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Kontekst urządzenia, w którym ma zostać narysowany tekst.</param>
        <param name="text">Tekst do narysowania.</param>
        <param name="font"><see cref="T:System.Drawing.Font" /> Do zastosowania do rysowanego tekstu.</param>
        <param name="bounds"><see cref="T:System.Drawing.Rectangle" /> Reprezentuje granice tekstu.</param>
        <param name="foreColor"><see cref="T:System.Drawing.Color" /> Do zastosowania do rysowanego tekstu.</param>
        <param name="flags">Bitowa kombinacja <see cref="T:System.Windows.Forms.TextFormatFlags" /> wartości.</param>
        <summary>Rysuje określony tekst w określonych granicach przy użyciu określonego kontekstu urządzenia, czcionki, koloru i instrukcji formatowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `font` lub `color` jest `dc`lub odpowiednio lub<xref:System.Drawing.Color.Empty>, metodaspowodujenarysowanietekstuwczcioncelubkolorzeaktualniewybranymwkontekścieurządzeniaokreślonymprzez.<xref:System.Windows.Forms.TextRenderer.DrawText%2A> `null` Jeśli `forecolor` jest<xref:System.Drawing.Color.Transparent%2A>, tekst nie zostanie narysowany.  
  
 Można manipulować sposobem rysowania tekstu przy użyciu jednego z <xref:System.Windows.Forms.TextRenderer.DrawText%2A> przeciążeń, które <xref:System.Windows.Forms.TextFormatFlags> pobiera parametr. Na przykład domyślnym zachowaniem <xref:System.Windows.Forms.TextRenderer> jest dodanie dopełnienia do otaczającego prostokąta rysowanego tekstu w celu dopasowania symboli. Jeśli konieczne jest narysowanie wiersza tekstu bez dodatkowych spacji, należy <xref:System.Windows.Forms.TextRenderer.DrawText%2A> użyć wersji i <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> , która przyjmuje <xref:System.Drawing.Size> parametr i <xref:System.Windows.Forms.TextFormatFlags> . Aby zapoznać się z przykładem, zobacz <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
 Renderowanie tekstu oferowane przez <xref:System.Windows.Forms.TextRenderer> klasę jest oparte na renderowaniu tekstu GDI i nie jest obsługiwane na potrzeby drukowania z Windows Forms. Zamiast tego należy użyć <xref:System.Drawing.Graphics.DrawString%2A> metod <xref:System.Drawing.Graphics> klasy.  
  
 Nie obsługuje dodawania tabulatora do rysowanego tekstu, chociaż można rozwinąć istniejące tabulatory <xref:System.Windows.Forms.TextFormatFlags.ExpandTabs> przy użyciu flagi. <xref:System.Windows.Forms.TextRenderer>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metody. Aby uruchomić ten przykład, wklej kod do formularza systemu Windows i Wywołaj `RenderText6` z programu obsługi <xref:System.Windows.Forms.Control.Paint> zdarzeń formularza, przekazując `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#7)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Point pt, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Point pt, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Point pt, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Point * System.Drawing.Color * System.Drawing.Color * System.Windows.Forms.TextFormatFlags -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, pt, foreColor, backColor, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Kontekst urządzenia, w którym ma zostać narysowany tekst.</param>
        <param name="text">Tekst do narysowania.</param>
        <param name="font"><see cref="T:System.Drawing.Font" /> Do zastosowania do rysowanego tekstu.</param>
        <param name="pt"><see cref="T:System.Drawing.Point" /> Reprezentuje lewy górny róg rysowanego tekstu.</param>
        <param name="foreColor"><see cref="T:System.Drawing.Color" /> Do zastosowania do tekstu.</param>
        <param name="backColor"><see cref="T:System.Drawing.Color" /> Do zastosowania do obszaru tła rysowanego tekstu.</param>
        <param name="flags">Bitowa kombinacja <see cref="T:System.Windows.Forms.TextFormatFlags" /> wartości.</param>
        <summary>Rysuje określony tekst w określonej lokalizacji przy użyciu określonego kontekstu urządzenia, czcionki, koloru, koloru tyłu i instrukcji formatowania</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `backcolor` Parametr jest stosowany prostokątny obszar zawierający rysowany tekst. Jeśli `font` lub `forecolor` jest `dc`lub odpowiednio lub<xref:System.Drawing.Color.Empty>, metodaspowodujenarysowanietekstuwczcioncelubkolorzeaktualniewybranymwkontekścieurządzeniaokreślonymprzez.<xref:System.Windows.Forms.TextRenderer.DrawText%2A> `null` Jeśli `forecolor` jest<xref:System.Drawing.Color.Transparent%2A>, tekst nie zostanie narysowany.  
  
 Można manipulować sposobem rysowania tekstu przy użyciu jednego z <xref:System.Windows.Forms.TextRenderer.DrawText%2A> przeciążeń, które <xref:System.Windows.Forms.TextFormatFlags> pobiera parametr. Na przykład domyślnym zachowaniem <xref:System.Windows.Forms.TextRenderer> jest dodanie dopełnienia do otaczającego prostokąta rysowanego tekstu w celu dopasowania symboli. Jeśli konieczne jest narysowanie wiersza tekstu bez dodatkowych spacji, należy <xref:System.Windows.Forms.TextRenderer.DrawText%2A> użyć wersji i <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> , która przyjmuje <xref:System.Drawing.Size> parametr i <xref:System.Windows.Forms.TextFormatFlags> . Aby zapoznać się z przykładem, zobacz <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
 Renderowanie tekstu oferowane przez <xref:System.Windows.Forms.TextRenderer> klasę jest oparte na renderowaniu tekstu GDI i nie jest obsługiwane na potrzeby drukowania z Windows Forms. Zamiast tego należy użyć <xref:System.Drawing.Graphics.DrawString%2A> metod <xref:System.Drawing.Graphics> klasy.  
  
 Nie obsługuje dodawania tabulatora do rysowanego tekstu, chociaż można rozwinąć istniejące tabulatory <xref:System.Windows.Forms.TextFormatFlags.ExpandTabs> przy użyciu flagi. <xref:System.Windows.Forms.TextRenderer>  
  
> [!NOTE]
>  <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Metody określającejakolewygórnyrógrysowanegotekstuniesąpoprawnierenderowane<xref:System.Drawing.Point> w systemie Windows 2000. Jeśli aplikacja jest przeznaczona do użytku na komputerach z systemem Windows 2000, należy użyć jednej z <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metod, które <xref:System.Drawing.Rectangle> określają dla granic rysowanego tekstu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metody. Aby uruchomić ten przykład, wklej kod do formularza systemu Windows i Wywołaj `RenderText7` z programu obsługi <xref:System.Windows.Forms.Control.Paint> zdarzeń formularza, przekazując `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#8)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Rectangle bounds, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Rectangle bounds, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Rectangle * System.Drawing.Color * System.Drawing.Color * System.Windows.Forms.TextFormatFlags -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, bounds, foreColor, backColor, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Kontekst urządzenia, w którym ma zostać narysowany tekst.</param>
        <param name="text">Tekst do narysowania.</param>
        <param name="font"><see cref="T:System.Drawing.Font" /> Do zastosowania do rysowanego tekstu.</param>
        <param name="bounds"><see cref="T:System.Drawing.Rectangle" /> Reprezentuje granice tekstu.</param>
        <param name="foreColor"><see cref="T:System.Drawing.Color" /> Do zastosowania do tekstu.</param>
        <param name="backColor">Do zastosowania do obszaru reprezentowanego przez <paramref name="bounds" />. <see cref="T:System.Drawing.Color" /></param>
        <param name="flags">Bitowa kombinacja <see cref="T:System.Windows.Forms.TextFormatFlags" /> wartości.</param>
        <summary>Rysuje określony tekst w określonych granicach przy użyciu określonego kontekstu urządzenia, czcionki, koloru, koloru tyłu i instrukcji formatowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `font` `forecolor` Parametrjest`backcolor` stosowany `bounds` do obszaru w ramach parametru`.` , jeśli lub jest `null` lub odpowiednio<xref:System.Drawing.Color.Empty> ;<xref:System.Windows.Forms.TextRenderer.DrawText%2A> Metoda zostanie `backcolor` Narysuj tekst w czcionce lub kolorze aktualnie wybranym w kontekście urządzenia określonym przez `dc`. Jeśli `forecolor` jest<xref:System.Drawing.Color.Transparent%2A>, tekst nie zostanie narysowany.  
  
 Można manipulować sposobem rysowania tekstu przy użyciu jednego z <xref:System.Windows.Forms.TextRenderer.DrawText%2A> przeciążeń, które <xref:System.Windows.Forms.TextFormatFlags> pobiera parametr. Na przykład domyślnym zachowaniem <xref:System.Windows.Forms.TextRenderer> jest dodanie dopełnienia do otaczającego prostokąta rysowanego tekstu w celu dopasowania symboli. Jeśli konieczne jest narysowanie wiersza tekstu bez dodatkowych spacji, należy <xref:System.Windows.Forms.TextRenderer.DrawText%2A> użyć wersji i <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> , która przyjmuje <xref:System.Drawing.Size> parametr i <xref:System.Windows.Forms.TextFormatFlags> . Aby zapoznać się z przykładem, zobacz <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
 Renderowanie tekstu oferowane przez <xref:System.Windows.Forms.TextRenderer> klasę jest oparte na renderowaniu tekstu GDI i nie jest obsługiwane na potrzeby drukowania z Windows Forms. Zamiast tego należy użyć <xref:System.Drawing.Graphics.DrawString%2A> metod <xref:System.Drawing.Graphics> klasy.  
  
 Nie obsługuje dodawania tabulatora do rysowanego tekstu, chociaż można rozwinąć istniejące tabulatory <xref:System.Windows.Forms.TextFormatFlags.ExpandTabs> przy użyciu flagi. <xref:System.Windows.Forms.TextRenderer>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metody. Aby uruchomić ten przykład, wklej kod do formularza systemu Windows i Wywołaj `RenderText8` z programu obsługi <xref:System.Windows.Forms.Control.Paint> zdarzeń formularza, przekazując `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#9)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="MeasureText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Mierzy określony tekst podczas rysowania z określoną czcionką.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (string text, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(string text, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.String,System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::String ^ text, System::Drawing::Font ^ font);" />
      <MemberSignature Language="F#" Value="static member MeasureText : string * System.Drawing.Font -&gt; System.Drawing.Size" Usage="System.Windows.Forms.TextRenderer.MeasureText (text, font)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do pomiaru.</param>
        <param name="font"><see cref="T:System.Drawing.Font" /> Do zastosowania do mierzonego tekstu.</param>
        <summary>Zapewnia rozmiar (w pikselach) określonego tekstu podczas rysowania z określoną czcionką.</summary>
        <returns>, W pikselach <paramref name="text" /> , rysowanych w jednym wierszu o określonym <paramref name="font" />. <see cref="T:System.Drawing.Size" /> Można manipulować sposobem rysowania tekstu przy użyciu jednego z <see cref="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" /> przeciążeń, które <see cref="T:System.Windows.Forms.TextFormatFlags" /> pobiera parametr. Na przykład domyślnym zachowaniem <see cref="T:System.Windows.Forms.TextRenderer" /> jest dodanie dopełnienia do otaczającego prostokąta rysowanego tekstu w celu dopasowania symboli. Jeśli konieczne jest narysowanie wiersza tekstu bez dodatkowych spacji, należy <see cref="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)" /> użyć wersji i <see cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font)" /> , która przyjmuje <see cref="T:System.Drawing.Size" /> parametr i <see cref="T:System.Windows.Forms.TextFormatFlags" /> . Aby zapoznać się z przykładem, zobacz <see cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> Metoda wymaga, aby tekst był rysowany w pojedynczym wierszu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> metody. Aby uruchomić ten przykład, wklej kod do formularza systemu Windows i Wywołaj `MeasureText1` z programu obsługi <xref:System.Windows.Forms.Control.Paint> zdarzeń formularza, przekazując `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font);" />
      <MemberSignature Language="F#" Value="static member MeasureText : System.Drawing.IDeviceContext * string * System.Drawing.Font -&gt; System.Drawing.Size" Usage="System.Windows.Forms.TextRenderer.MeasureText (dc, text, font)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="dc">Kontekst urządzenia służący do mierzenia tekstu.</param>
        <param name="text">Tekst do pomiaru.</param>
        <param name="font"><see cref="T:System.Drawing.Font" /> Do zastosowania do mierzonego tekstu.</param>
        <summary>Zapewnia rozmiar (w pikselach) określonego tekstu rysowanego przy użyciu określonej czcionki w określonym kontekście urządzenia.</summary>
        <returns>, W pikselach <paramref name="text" /> , rysowany w pojedynczym wierszu z określonym <paramref name="font" /> w określonym kontekście urządzenia. <see cref="T:System.Drawing.Size" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> Metoda wymaga, aby tekst był rysowany w pojedynczym wierszu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> jak używać jednej z metod. Aby uruchomić ten przykład, wklej kod do formularza systemu Windows i Wywołaj `DrawALineOfText` z programu obsługi <xref:System.Windows.Forms.Control.Paint> zdarzeń formularza, przekazując `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (string text, System.Drawing.Font font, System.Drawing.Size proposedSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(string text, class System.Drawing.Font font, valuetype System.Drawing.Size proposedSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.String,System.Drawing.Font,System.Drawing.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Size proposedSize);" />
      <MemberSignature Language="F#" Value="static member MeasureText : string * System.Drawing.Font * System.Drawing.Size -&gt; System.Drawing.Size" Usage="System.Windows.Forms.TextRenderer.MeasureText (text, font, proposedSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="proposedSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do pomiaru.</param>
        <param name="font"><see cref="T:System.Drawing.Font" /> Do zastosowania do mierzonego tekstu.</param>
        <param name="proposedSize"><see cref="T:System.Drawing.Size" /> Początkowy prostokąt ograniczający.</param>
        <summary>Zapewnia rozmiar (w pikselach) określonego tekstu podczas rysowania z określoną czcionką, przy użyciu określonego rozmiaru, aby utworzyć początkowy prostokąt ograniczający.</summary>
        <returns>, W pikselach <paramref name="text" /> , rysowany z określonym <paramref name="font" />. <see cref="T:System.Drawing.Size" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> Metoda`proposedSize` używa parametru, aby określić relację wysokości do szerokości podczas określania rozmiaru tekstu. Podczas mierzenia tekstu w pojedynczym wierszu, `proposedSize` Jeśli parametr <xref:System.Drawing.Size> reprezentuje wymiar o wysokości większej niż <xref:System.Int32.MaxValue?displayProperty=nameWithType>, zwracana <xref:System.Drawing.Size> wartość zostanie dopasowana w celu odzwierciedlenia rzeczywistej wysokości tekstu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> jak używać jednej z metod. Aby uruchomić ten przykład, wklej kod do formularza systemu Windows i Wywołaj `DrawALineOfText` z programu obsługi <xref:System.Windows.Forms.Control.Paint> zdarzeń formularza, przekazując `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Size proposedSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Size proposedSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Size proposedSize);" />
      <MemberSignature Language="F#" Value="static member MeasureText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Size -&gt; System.Drawing.Size" Usage="System.Windows.Forms.TextRenderer.MeasureText (dc, text, font, proposedSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="proposedSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="dc">Kontekst urządzenia służący do mierzenia tekstu.</param>
        <param name="text">Tekst do pomiaru.</param>
        <param name="font"><see cref="T:System.Drawing.Font" /> Do zastosowania do mierzonego tekstu.</param>
        <param name="proposedSize"><see cref="T:System.Drawing.Size" /> Początkowy prostokąt ograniczający.</param>
        <summary>Zapewnia rozmiar (w pikselach) określonego tekstu podczas rysowania z określoną czcionką w określonym kontekście urządzenia przy użyciu określonego rozmiaru, aby utworzyć początkowy prostokąt ograniczający dla tekstu.</summary>
        <returns>, W pikselach <paramref name="text" /> , rysowany z określonym <paramref name="font" />. <see cref="T:System.Drawing.Size" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> Metoda`proposedSize` używa parametru, aby określić relację wysokości do szerokości podczas określania rozmiaru tekstu. Podczas mierzenia tekstu w pojedynczym wierszu, `proposedSize` Jeśli parametr <xref:System.Drawing.Size> reprezentuje wymiar o wysokości większej niż <xref:System.Int32.MaxValue?displayProperty=nameWithType>, zwracana <xref:System.Drawing.Size> wartość zostanie dopasowana w celu odzwierciedlenia rzeczywistej wysokości tekstu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> jak używać jednej z metod. Aby uruchomić ten przykład, wklej kod do formularza systemu Windows i Wywołaj `DrawALineOfText` z programu obsługi <xref:System.Windows.Forms.Control.Paint> zdarzeń formularza, przekazując `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (string text, System.Drawing.Font font, System.Drawing.Size proposedSize, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(string text, class System.Drawing.Font font, valuetype System.Drawing.Size proposedSize, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Size proposedSize, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member MeasureText : string * System.Drawing.Font * System.Drawing.Size * System.Windows.Forms.TextFormatFlags -&gt; System.Drawing.Size" Usage="System.Windows.Forms.TextRenderer.MeasureText (text, font, proposedSize, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="proposedSize" Type="System.Drawing.Size" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do pomiaru.</param>
        <param name="font"><see cref="T:System.Drawing.Font" /> Do zastosowania do mierzonego tekstu.</param>
        <param name="proposedSize"><see cref="T:System.Drawing.Size" /> Początkowy prostokąt ograniczający.</param>
        <param name="flags">Instrukcje formatowania, które mają zostać zastosowane do mierzonego tekstu.</param>
        <summary>Zapewnia rozmiar, w pikselach, określonego tekstu podczas rysowania z określonymi instrukcjami dotyczącymi czcionek i formatowania, przy użyciu określonego rozmiaru, aby utworzyć początkowy prostokąt ograniczający dla tekstu.</summary>
        <returns>(W pikselach <paramref name="text" /> ) rysowane z określonym <paramref name="font" /> formatem i. <see cref="T:System.Drawing.Size" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TextRenderer.MeasureText%2A>używa parametrów `flags` i, aby określić relację wysokości do szerokości podczas określania rozmiaru tekstu. `proposedSize` Podczas mierzenia tekstu w pojedynczym wierszu, `proposedSize` Jeśli parametr <xref:System.Drawing.Size> reprezentuje wymiar o wysokości większej niż <xref:System.Int32.MaxValue?displayProperty=nameWithType>, zwracana <xref:System.Drawing.Size> wartość zostanie dopasowana w celu odzwierciedlenia rzeczywistej wysokości tekstu.  
  
 Można manipulować sposobem rysowania tekstu przy użyciu jednego z <xref:System.Windows.Forms.TextRenderer.DrawText%2A> przeciążeń, które <xref:System.Windows.Forms.TextFormatFlags> pobiera parametr. Na przykład domyślnym zachowaniem <xref:System.Windows.Forms.TextRenderer> jest dodanie dopełnienia do otaczającego prostokąta rysowanego tekstu w celu dopasowania symboli. Jeśli konieczne jest narysowanie wiersza tekstu bez dodatkowych spacji, należy <xref:System.Windows.Forms.TextRenderer.DrawText%2A> użyć wersji i <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> , która przyjmuje <xref:System.Drawing.Size> parametr i <xref:System.Windows.Forms.TextFormatFlags> . Aby zapoznać się z przykładem, zobacz <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
> [!NOTE]
>  To Przeciążenie <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29> <xref:System.Windows.Forms.TextFormatFlags.NoPadding> zignoruje <xref:System.Windows.Forms.TextFormatFlags> wartość lub <xref:System.Windows.Forms.TextFormatFlags.LeftAndRightPadding>. Jeśli określisz wartość uzupełniania inną niż domyślna, należy użyć przeciążenia <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29> , która <xref:System.Drawing.IDeviceContext> pobiera obiekt.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> jak używać jednej z metod. Aby uruchomić ten przykład, wklej kod do formularza systemu Windows i Wywołaj `DrawALineOfText` z programu obsługi <xref:System.Windows.Forms.Control.Paint> zdarzeń formularza, przekazując `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Size proposedSize, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Size proposedSize, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Size proposedSize, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member MeasureText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Size * System.Windows.Forms.TextFormatFlags -&gt; System.Drawing.Size" Usage="System.Windows.Forms.TextRenderer.MeasureText (dc, text, font, proposedSize, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="proposedSize" Type="System.Drawing.Size" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Kontekst urządzenia służący do mierzenia tekstu.</param>
        <param name="text">Tekst do pomiaru.</param>
        <param name="font"><see cref="T:System.Drawing.Font" /> Do zastosowania do mierzonego tekstu.</param>
        <param name="proposedSize"><see cref="T:System.Drawing.Size" /> Początkowy prostokąt ograniczający.</param>
        <param name="flags">Instrukcje formatowania, które mają zostać zastosowane do mierzonego tekstu.</param>
        <summary>Zapewnia rozmiar (w pikselach) określonego tekstu podczas rysowania z określonym kontekstem urządzenia, czcionką i instrukcjami formatowania przy użyciu określonego rozmiaru, aby utworzyć początkowy prostokąt ograniczający dla tekstu.</summary>
        <returns>(W pikselach <paramref name="text" /> ) rysowane z określonym <paramref name="font" /> formatem i. <see cref="T:System.Drawing.Size" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda używa parametrów`flags` i, aby określić relację wysokości do szerokości podczas określania rozmiaru tekstu. `proposedSize` <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> Podczas mierzenia tekstu w pojedynczym wierszu, `proposedSize` Jeśli parametr <xref:System.Drawing.Size> reprezentuje wymiar o wysokości większej niż <xref:System.Int32.MaxValue?displayProperty=nameWithType>, zwracana <xref:System.Drawing.Size> wartość zostanie dopasowana w celu odzwierciedlenia rzeczywistej wysokości tekstu.  
  
 Można manipulować sposobem rysowania tekstu przy użyciu jednego z <xref:System.Windows.Forms.TextRenderer.DrawText%2A> przeciążeń, które <xref:System.Windows.Forms.TextFormatFlags> pobiera parametr. Na przykład domyślnym zachowaniem <xref:System.Windows.Forms.TextRenderer> jest dodanie dopełnienia do otaczającego prostokąta rysowanego tekstu w celu dopasowania symboli. Jeśli konieczne jest narysowanie wiersza tekstu bez dodatkowych spacji, należy <xref:System.Windows.Forms.TextRenderer.DrawText%2A> użyć wersji i <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> , która przyjmuje <xref:System.Drawing.Size> parametr i <xref:System.Windows.Forms.TextFormatFlags> , jak pokazano w przykładzie.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób używania <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> metod i <xref:System.Windows.Forms.TextRenderer.DrawText%2A> do rysowania pojedynczego wiersza tekstu w różnych stylach czcionek. Aby uruchomić ten przykład, wklej następujący kod w formularzu systemu Windows i Wywołaj `DrawALineOfText` z programu obsługi <xref:System.Windows.Forms.Control.Paint> zdarzeń formularza, przekazując `e` jako. <xref:System.Windows.Forms.PaintEventArgs>  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
