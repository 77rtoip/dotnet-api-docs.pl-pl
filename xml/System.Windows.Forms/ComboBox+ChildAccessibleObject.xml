<Type Name="ComboBox+ChildAccessibleObject" FullName="System.Windows.Forms.ComboBox+ChildAccessibleObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="76452306bc1d370b227c00712e7e276085e384cb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30702428" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ComboBox.ChildAccessibleObject : System.Windows.Forms.AccessibleObject" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ComboBox/ChildAccessibleObject extends System.Windows.Forms.AccessibleObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ComboBox.ChildAccessibleObject" />
  <TypeSignature Language="VB.NET" Value="Public Class ComboBox.ChildAccessibleObject&#xA;Inherits AccessibleObject" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ComboBox::ChildAccessibleObject : System::Windows::Forms::AccessibleObject" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.AccessibleObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zawiera informacje na temat <see cref="T:System.Windows.Forms.ComboBox" /> kontroli dla aplikacji ułatwień dostępu klienta.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formularze systemu Windows została wbudowana obsługa ułatwień dostępu i zawiera informacje o aplikacji, która umożliwia ona do pracy z aplikacjami klienckimi ułatwień dostępu. Przykłady aplikacji ułatwień dostępu klienta są ekranu narzędzie i weryfikacja, głosowych wejściowych narzędzia, klawiatura ekranowa, alternatywne urządzenia wejściowe i narzędzia ulepszenie klawiatury. <xref:System.Windows.Forms.ComboBox.ChildAccessibleObject> Klasa dziedziczy <xref:System.Windows.Forms.AccessibleObject> klasy, aby podać informacje o <xref:System.Windows.Forms.ComboBox> kontroli dla aplikacji ułatwień dostępu klienta.  
  
 Istnieją wystąpienia, gdy użytkownik chce dostarczyć niestandardowe informacje, takie jak nazwa lub opis, aby aplikacje klienckie ułatwień dostępu formantu. Istnieją dwa sposoby udostępniania tych informacji. Aby podać informacje ograniczenia ułatwień dostępu dla istniejących formantów, ustaw dla formantu <xref:System.Windows.Forms.Control.AccessibleName%2A>, <xref:System.Windows.Forms.Control.AccessibleDescription%2A>, <xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A>, i <xref:System.Windows.Forms.Control.AccessibleRole%2A> wartości właściwości, które będą zgłaszane dla aplikacji ułatwień dostępu klienta.  
  
 Jeśli potrzebujesz więcej informacji o dostępności zostanie uwzględniona w formantu można pisać własne klasy, która jest pochodną <xref:System.Windows.Forms.AccessibleObject> lub <xref:System.Windows.Forms.Control.ControlAccessibleObject> klasy. Na przykład, jeśli piszesz własnego formantu, który nie pochodzi od formantów wspólnych lub wymagają działania, takie jak testowania trafień wewnątrz formantu, należy utworzyć <xref:System.Windows.Forms.Control.ControlAccessibleObject> dla formantu przez wywołanie metody <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> metody.  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChildAccessibleObject (System.Windows.Forms.ComboBox owner, IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ComboBox owner, native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ChildAccessibleObject.#ctor(System.Windows.Forms.ComboBox,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ComboBox, handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChildAccessibleObject(System::Windows::Forms::ComboBox ^ owner, IntPtr handle);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ComboBox" />
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="owner">
          <see cref="T:System.Windows.Forms.ComboBox" /> Formant, który jest właścicielem <see cref="T:System.Windows.Forms.ComboBox.ChildAccessibleObject" />.</param>
        <param name="handle">Dojście do części <see cref="T:System.Windows.Forms.ComboBox" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ComboBox.ChildAccessibleObject" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ComboBox> Kontroli wewnętrznie składa się z więcej niż jeden formant. <xref:System.Windows.Forms.ComboBox.ChildAccessibleObject> Musi wiedzieć, który dojścia do użycia. Ponieważ dojścia do poszczególnych kontrolek prywatnego elementu członkowskiego, konsumentów nie powinny wywoływać tego konstruktora.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ChildAccessibleObject.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę obiektu.</summary>
        <value>Wartość <see cref="P:System.Windows.Forms.ComboBox.ChildAccessibleObject.Name" /> właściwości jest taka sama jak <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> właściwość <see cref="T:System.Windows.Forms.AccessibleObject" /> z <see cref="T:System.Windows.Forms.ComboBox" />.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>