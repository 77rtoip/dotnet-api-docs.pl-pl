<Type Name="IDataGridViewEditingControl" FullName="System.Windows.Forms.IDataGridViewEditingControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8cf70025672eef1809a1d73788bb5fcdfe86a940" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69187770" /></Metadata><TypeSignature Language="C#" Value="public interface IDataGridViewEditingControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataGridViewEditingControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IDataGridViewEditingControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataGridViewEditingControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataGridViewEditingControl" />
  <TypeSignature Language="F#" Value="type IDataGridViewEditingControl = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiuje typowe funkcje formantów, które są hostowane w komórkach <see cref="T:System.Windows.Forms.DataGridView" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten interfejs jest implementowany przez kontrolki, <xref:System.Windows.Forms.DataGridViewComboBoxEditingControl> takie <xref:System.Windows.Forms.DataGridViewTextBoxEditingControl>jak i, które są hostowane przez odpowiadające <xref:System.Windows.Forms.DataGridViewComboBoxCell> im <xref:System.Windows.Forms.DataGridViewTextBoxCell> <xref:System.Windows.Forms.DataGridView> komórki, takie jak i, gdy znajdują się w trybie edycji.  
  
 Typy komórek, które mogą hostować kontrolki <xref:System.Windows.Forms.DataGridViewCell.EditType%2A> edycji, ustawiają <xref:System.Type> ich właściwość na reprezentującą typ kontrolki edycji. Gdy komórka przejdzie do trybu edycji, wykonywane są następujące czynności:  
  
1.  <xref:System.Windows.Forms.DataGridView> Formant tworzy wystąpienie typu kontrolki edycji.  
  
2.  Kontrolka wywołuje metodę komórki <xref:System.Windows.Forms.DataGridViewCell.InitializeEditingControl%2A>. <xref:System.Windows.Forms.DataGridView> Można zastąpić tę metodę, aby przenieść wartość komórki do kontrolki edycji.  
  
3.  Kontrolka wywołuje metodę kontrolki <xref:System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl%2A> edycji i przechodzi w bieżącym stylu komórki. <xref:System.Windows.Forms.DataGridView> Można zaimplementować tę metodę w celu zainicjowania wyglądu kontrolki edycji tak, aby była zgodna z wyglądem komórki.  
  
4.  Kontrolka wywołuje metodę kontroli <xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A> edycji. <xref:System.Windows.Forms.DataGridView> Można zaimplementować tę metodę, aby wprowadzić ostateczne korekty kontrolki edycji, na przykład wybierając wartość kontrolki.  
  
 Aby uzyskać więcej informacji na <xref:System.Windows.Forms.IDataGridViewEditingControl>temat implementowania, zobacz [How to: Kontrolki hosta w Windows Forms komórkach](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)DataGridView.  
  
 Typy komórek, takie <xref:System.Windows.Forms.DataGridViewCheckBoxCell> jak zapewnianie interfejsu użytkownika (UI) do określania wartości bez hostowania formantu edycji <xref:System.Windows.Forms.IDataGridViewEditingCell> implementują interfejs. Interfejs użytkownika w tym przypadku jest wyświetlany niezależnie od tego, czy komórka jest w trybie edycji.  
  
 Inne typy komórek, takie jak <xref:System.Windows.Forms.DataGridViewButtonCell>, udostępniają interfejs użytkownika, ale nie przechowują wartości określonych przez użytkownika. W takim przypadku typ komórki nie implementuje <xref:System.Windows.Forms.IDataGridViewEditingCell> ani nie obsługuje kontrolki edycji.  
  
   
  
## Examples  
 Poniższy przykład kodu zawiera implementację tego interfejsu, który pochodzi od <xref:System.Windows.Forms.DateTimePicker>. Ten przykład jest częścią większego przykładu dostępnego [w następujących sposób: Kontrolki hosta w Windows Forms komórkach](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)DataGridView.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#300](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#300)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#300](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#300)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
    <altmember cref="T:System.Windows.Forms.IDataGridViewEditingCell" />
    <altmember cref="T:System.Windows.Forms.DataGridViewComboBoxCell" />
    <altmember cref="T:System.Windows.Forms.DataGridViewComboBoxEditingControl" />
    <altmember cref="T:System.Windows.Forms.DataGridViewTextBoxCell" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCell.EditType" />
    <altmember cref="T:System.Windows.Forms.DataGridViewTextBoxEditingControl" />
    <related type="Article" href="https://msdn.microsoft.com/library/e79a9d4e-64ec-41f5-93ec-f5492633cbb2">Instrukcje: kontrolki hosta w komórkach DataGridView formularzy systemu Windows</related>
  </Docs>
  <Members>
    <Member MemberName="ApplyCellStyleToEditingControl">
      <MemberSignature Language="C#" Value="public void ApplyCellStyleToEditingControl (System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyCellStyleToEditingControl(class System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl(System.Windows.Forms.DataGridViewCellStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyCellStyleToEditingControl(System::Windows::Forms::DataGridViewCellStyle ^ dataGridViewCellStyle);" />
      <MemberSignature Language="F#" Value="abstract member ApplyCellStyleToEditingControl : System.Windows.Forms.DataGridViewCellStyle -&gt; unit" Usage="iDataGridViewEditingControl.ApplyCellStyleToEditingControl dataGridViewCellStyle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewCellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
      </Parameters>
      <Docs>
        <param name="dataGridViewCellStyle"><see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> Do użycia jako model interfejsu użytkownika.</param>
        <summary>Zmienia interfejs użytkownika (UI) kontrolki tak, aby był spójny z określonym stylem komórki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwykle implementacja tej metody ustawia właściwości interfejsu użytkownika dla kontrolki edycji, takie jak czcionka, kolor tła i kolor pierwszego planu, do wartości odpowiednich właściwości w `dataGridViewCellStyle`, który jest stylem używanym w komórce hostującym kontroli.  
  
   
  
## Examples  
 Poniższy przykład kodu zawiera implementację tego elementu członkowskiego. Ten przykład jest częścią większego przykładu dostępnego [w następujących sposób: Kontrolki hosta w Windows Forms komórkach](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)DataGridView.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#303](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#303)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#303](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#303)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlDataGridView">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridView EditingControlDataGridView { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridView EditingControlDataGridView" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingControlDataGridView As DataGridView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridView ^ EditingControlDataGridView { System::Windows::Forms::DataGridView ^ get(); void set(System::Windows::Forms::DataGridView ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditingControlDataGridView : System.Windows.Forms.DataGridView with get, set" Usage="System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Forms.DataGridView" /> , który zawiera komórkę.</summary>
        <value><see cref="T:System.Windows.Forms.DataGridView" /> Zawieradane<see cref="T:System.Windows.Forms.DataGridViewCell" /> , które są edytowane; Jeśli nie ma żadnych skojarzonych <see cref="T:System.Windows.Forms.DataGridView" />. <see langword="null" /></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlFormattedValue">
      <MemberSignature Language="C#" Value="public object EditingControlFormattedValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object EditingControlFormattedValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingControlFormattedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ EditingControlFormattedValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditingControlFormattedValue : obj with get, set" Usage="System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość sformatowaną komórki modyfikowanej przez Edytor.</summary>
        <value><see cref="T:System.Object" /> Reprezentuje sformatowaną wartość komórki.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sformatowana wartość reprezentuje wartość, która jest wyświetlana w interfejsie użytkownika formantu. Sformatowana wartość może być inna niż wartość bezwzględna, a nawet typ danych z wartości rzeczywistej zawartej w kontrolce.  
  
   
  
## Examples  
 Poniższy przykład kodu zawiera implementację tego elementu członkowskiego. Ten przykład jest częścią większego przykładu dostępnego [w następujących sposób: Kontrolki hosta w Windows Forms komórkach](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)DataGridView.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#301](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#301)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#301](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#301)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlRowIndex">
      <MemberSignature Language="C#" Value="public int EditingControlRowIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditingControlRowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlRowIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingControlRowIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EditingControlRowIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.EditingControlRowIndex : int with get, set" Usage="System.Windows.Forms.IDataGridViewEditingControl.EditingControlRowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia indeks wiersza nadrzędnego komórki hostingu.</summary>
        <value>Indeks wiersza, który zawiera komórkę lub-1, jeśli nie ma żadnego wiersza nadrzędnego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Interfejs nie definiuje odpowiedniej `ColumnIndex` właściwości. <xref:System.Windows.Forms.IDataGridViewEditingControl> Możesz użyć <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView%2A> właściwości, aby pobrać formant nadrzędny <xref:System.Windows.Forms.DataGridView> i użyć <xref:System.Windows.Forms.DataGridView.CurrentCellAddress%2A?displayProperty=nameWithType> właściwości, aby określić indeksy wierszy i kolumn dla aktywnej komórki.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.RowIndex" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlValueChanged">
      <MemberSignature Language="C#" Value="public bool EditingControlValueChanged { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EditingControlValueChanged" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingControlValueChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EditingControlValueChanged { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EditingControlValueChanged : bool with get, set" Usage="System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy wartość kontrolki edycji różni się od wartości komórki hostingu.</summary>
        <value><see langword="true" />Jeśli wartość kontrolki różni się od wartości komórki; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość jest ustawiona na `true` tak, aby wskazywała, że stan komórki hostingu został zmieniony i interfejs użytkownika (UI) musi zostać zaktualizowany w celu odzwierciedlenia tej zmiany wartości. <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged%2A> Komórka lub tabela będąca właścicielem spowoduje zresetowanie tej `false` właściwości do po aktualizacji.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Zwrócenie <see langword="true" /> w implementacji tej właściwości nie powoduje automatycznej zmiany wartości wyświetlanej. Po zmianie wartości w kontrolce edycji należy powiadomić <see cref="T:System.Windows.Forms.DataGridView" /> o zmianach, przekazując <see langword="true" /> do <see cref="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)" /> metody.</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue" />
        <altmember cref="M:System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlWantsInputKey">
      <MemberSignature Language="C#" Value="public bool EditingControlWantsInputKey (System.Windows.Forms.Keys keyData, bool dataGridViewWantsInputKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EditingControlWantsInputKey(valuetype System.Windows.Forms.Keys keyData, bool dataGridViewWantsInputKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey(System.Windows.Forms.Keys,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function EditingControlWantsInputKey (keyData As Keys, dataGridViewWantsInputKey As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EditingControlWantsInputKey(System::Windows::Forms::Keys keyData, bool dataGridViewWantsInputKey);" />
      <MemberSignature Language="F#" Value="abstract member EditingControlWantsInputKey : System.Windows.Forms.Keys * bool -&gt; bool" Usage="iDataGridViewEditingControl.EditingControlWantsInputKey (keyData, dataGridViewWantsInputKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
        <Parameter Name="dataGridViewWantsInputKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="keyData"><see cref="T:System.Windows.Forms.Keys" /> Reprezentujący klawisz, który został naciśnięty.</param>
        <param name="dataGridViewWantsInputKey"><see langword="true" />gdy chce przetworzyć <paramref name="keyData" />wprogramie; w przeciwnym <see langword="false" />razie. <see cref="T:System.Windows.Forms.Keys" /> <see cref="T:System.Windows.Forms.DataGridView" /></param>
        <summary>Określa, czy określony klucz jest zwykłym kluczem wejściowym, który powinien być przetwarzany przez kontrolkę edycji, <see cref="T:System.Windows.Forms.DataGridView" /> czy specjalnym kluczem, który powinien być przetwarzany.</summary>
        <returns><see langword="true" />Jeśli określony klucz jest zwykłym kluczem wejściowym, który powinien być obsługiwany przez kontrolkę edycji; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrolka edycji implementuje tę metodę, aby określić, które klucze wejściowe powinny być przetwarzane przez formant i które klucze wejściowe powinny być przetwarzane przez <xref:System.Windows.Forms.DataGridView>.  
  
 Metoda jest wywoływana <xref:System.Windows.Forms.DataGridView>przez. <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A> Program zostanie `true` przekazany do `dataGridViewWantsInputKey` momentu, w którym może przetworzyć `keyData`. <xref:System.Windows.Forms.DataGridView> Jeśli kontrolka edycji <xref:System.Windows.Forms.DataGridView> może pozwolić na `keyData`uchwyt, należy <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A> zwrócić `false` , gdy `dataGridViewWantsInputKey` jest `true`. Inne implementacje <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A> programu mogą `dataGridViewWantsInputKey` `true` ignorować`keyData` wartość i obsłużyć w kontrolce edycji.  
  
   
  
## Examples  
 Poniższy przykład kodu zawiera implementację tego elementu członkowskiego. Ten przykład jest częścią większego przykładu dostępnego [w następujących sposób: Kontrolki hosta w Windows Forms komórkach](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)DataGridView.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#305](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#305)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#305](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#305)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="EditingPanelCursor">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Cursor EditingPanelCursor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor EditingPanelCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditingPanelCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Cursor ^ EditingPanelCursor { System::Windows::Forms::Cursor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditingPanelCursor : System.Windows.Forms.Cursor" Usage="System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kursor używany, gdy wskaźnik myszy znajduje się nad <see cref="P:System.Windows.Forms.DataGridView.EditingPanel" /> kontrolką edycji.</summary>
        <value><see cref="T:System.Windows.Forms.Cursor" /> Reprezentuje wskaźnik myszy używany przez panel edycji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Panel edycji jest <xref:System.Windows.Forms.Panel> hostem kontrolki edycji, <xref:System.Windows.Forms.DataGridView> gdy kontrolka jest w trybie edycji. Rzeczywista kontrolka edycji może nie obejmować całego obszaru panelu edycji. W takim przypadku <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor%2A> implementacja powinna zwrócić kursor, który ma być używany, gdy wskaźnik myszy znajduje się nad panelem, ale nie nad kontrolką. Zazwyczaj należy zwrócić ten sam kursor, który jest wykorzystywany przez formant. Aby zmienić kursor, który pojawia się, gdy wskaźnik myszy znajduje się nad formantem, należy ustawić <xref:System.Windows.Forms.Control.Cursor%2A> właściwość. Można ustawić ten element w konstruktorze <xref:System.Windows.Forms.IDataGridViewEditingControl> implementacji lub ustawić go <xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A> w implementacji.  
  
   
  
## Examples  
 Poniższy przykład kodu zawiera implementację tego elementu członkowskiego. Ten przykład jest częścią większego przykładu dostępnego [w następujących sposób: Kontrolki hosta w Windows Forms komórkach](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)DataGridView.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#311](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#311)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#311](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#311)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.Panel" />
        <altmember cref="P:System.Windows.Forms.Control.Cursor" />
        <altmember cref="M:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetEditingControlFormattedValue">
      <MemberSignature Language="C#" Value="public object GetEditingControlFormattedValue (System.Windows.Forms.DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetEditingControlFormattedValue(valuetype System.Windows.Forms.DataGridViewDataErrorContexts context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEditingControlFormattedValue (context As DataGridViewDataErrorContexts) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetEditingControlFormattedValue(System::Windows::Forms::DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="F#" Value="abstract member GetEditingControlFormattedValue : System.Windows.Forms.DataGridViewDataErrorContexts -&gt; obj" Usage="iDataGridViewEditingControl.GetEditingControlFormattedValue context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Parameters>
      <Docs>
        <param name="context">Bitowa kombinacja <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> wartości, która określa kontekst, w którym dane są zbędne.</param>
        <summary>Pobiera sformatowaną wartość komórki.</summary>
        <returns><see cref="T:System.Object" /> Reprezentuje sformatowaną wersję zawartości komórki.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sformatowana wartość reprezentuje wartość, która jest wyświetlana w interfejsie użytkownika formantu. Sformatowana wartość może być inna niż wartość bezwzględna, a nawet typ danych z wartości rzeczywistej zawartej w kontrolce.  
  
 Aby ustawić sformatowaną wartość kontrolki, użyj <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Zmiana wartości zwracanej w implementacji tej metody nie powoduje automatycznej zmiany wartości wyświetlanej. Po zmianie wartości w kontrolce edycji należy powiadomić <see cref="T:System.Windows.Forms.DataGridView" /> o zmianach, przekazując <see langword="true" /> do <see cref="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)" /> metody.</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged" />
      </Docs>
    </Member>
    <Member MemberName="PrepareEditingControlForEdit">
      <MemberSignature Language="C#" Value="public void PrepareEditingControlForEdit (bool selectAll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrepareEditingControlForEdit(bool selectAll) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrepareEditingControlForEdit (selectAll As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrepareEditingControlForEdit(bool selectAll);" />
      <MemberSignature Language="F#" Value="abstract member PrepareEditingControlForEdit : bool -&gt; unit" Usage="iDataGridViewEditingControl.PrepareEditingControlForEdit selectAll" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectAll" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="selectAll"><see langword="true" />Aby zaznaczyć całą zawartość komórki; w przeciwnym razie. <see langword="false" /></param>
        <summary>Przygotowuje aktualnie wybraną komórkę do edycji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Celem tej metody jest przygotowanie kontrolki i jej zawartości do edycji. Na przykład możesz chcieć umieścić punkt wstawiania na końcu zawartości lub zmienić sposób wyrównywania zawartości.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="RepositionEditingControlOnValueChange">
      <MemberSignature Language="C#" Value="public bool RepositionEditingControlOnValueChange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RepositionEditingControlOnValueChange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.RepositionEditingControlOnValueChange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RepositionEditingControlOnValueChange As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RepositionEditingControlOnValueChange { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RepositionEditingControlOnValueChange : bool" Usage="System.Windows.Forms.IDataGridViewEditingControl.RepositionEditingControlOnValueChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy zawartość komórki musi być zmieniana przy każdej zmianie wartości.</summary>
        <value><see langword="true" />Jeśli zawartość musi być zmieniana. w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Niektóre sytuacje wymagają zmiany położenia zawartości komórki po zmianie wartości. Na przykład zawartość komórki może wymagać zmiany położenia, gdy komórka zawija tekst i zawartość staje się większa.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
  </Members>
</Type>
