<Type Name="UnhandledExceptionMode" FullName="System.Windows.Forms.UnhandledExceptionMode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f5b835900e0bdf8c4c5b449221edca9c69715161" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69175645" /></Metadata><TypeSignature Language="C#" Value="public enum UnhandledExceptionMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UnhandledExceptionMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.UnhandledExceptionMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum UnhandledExceptionMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class UnhandledExceptionMode" />
  <TypeSignature Language="F#" Value="type UnhandledExceptionMode = " />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Definiuje, gdzie aplikacja Windows Forms powinna wysyłać Nieobsłużone wyjątki.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To wyliczenie jest używane przez <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A>program.  
  
> [!NOTE]
>  W .NET Framework w wersji 2,0 zachowanie środowiska uruchomieniowego języka wspólnego zostało zmienione tak, aby zezwalało nieobsługiwanym wyjątkom na propagację stosu wywołań. Takie zachowanie można wyłączyć za pomocą pliku konfiguracji aplikacji. Aby uzyskać więcej informacji, zobacz [wyjątki w zarządzanych wątkach](~/docs/standard/threading/exceptions-in-managed-threads.md).  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia programy obsługi zdarzeń dla obu błędów występujących na Windows Forms wątki i błędy występujące w innych wątkach. Ustawia <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A> je tak, aby wszystkie błędy były obsługiwane przez aplikację, niezależnie od ustawień w pliku konfiguracji użytkownika aplikacji. Używa <xref:System.Windows.Forms.Application.ThreadException> zdarzenia dla dawna <xref:System.AppDomain.UnhandledException> i zdarzenia dla tego ostatniego. Ponieważ <xref:System.AppDomain.UnhandledException> program nie może uniemożliwić zakończenie działania aplikacji, przykład po prostu rejestruje błąd w dzienniku zdarzeń systemu przed zakończeniem.  
  
 W tym przykładzie przyjęto założenie, <xref:System.Windows.Forms.Button> że zdefiniowano `button2`dwie `button1` kontrolki <xref:System.Windows.Forms.Form> i, w klasie.  
  
 [!code-cpp[Classic Application.ThreadException Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Application.ThreadException Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Application.ThreadException Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Application.ThreadException Example/CS/source.cs#1)]
 [!code-vb[Classic Application.ThreadException Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Application.ThreadException Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Automatic">
      <MemberSignature Language="C#" Value="Automatic" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.UnhandledExceptionMode Automatic = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.UnhandledExceptionMode.Automatic" />
      <MemberSignature Language="VB.NET" Value="Automatic" />
      <MemberSignature Language="C++ CLI" Value="Automatic" />
      <MemberSignature Language="F#" Value="Automatic = 0" Usage="System.Windows.Forms.UnhandledExceptionMode.Automatic" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.UnhandledExceptionMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Skieruj wszystkie wyjątki do <see cref="E:System.Windows.Forms.Application.ThreadException" /> programu obsługi, chyba że plik konfiguracyjny aplikacji określi inaczej.</summary>
      </Docs>
    </Member>
    <Member MemberName="CatchException">
      <MemberSignature Language="C#" Value="CatchException" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.UnhandledExceptionMode CatchException = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.UnhandledExceptionMode.CatchException" />
      <MemberSignature Language="VB.NET" Value="CatchException" />
      <MemberSignature Language="C++ CLI" Value="CatchException" />
      <MemberSignature Language="F#" Value="CatchException = 2" Usage="System.Windows.Forms.UnhandledExceptionMode.CatchException" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.UnhandledExceptionMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Zawsze kieruj wyjątki do <see cref="E:System.Windows.Forms.Application.ThreadException" /> procedury obsługi. Zignoruj plik konfiguracyjny aplikacji.</summary>
      </Docs>
    </Member>
    <Member MemberName="ThrowException">
      <MemberSignature Language="C#" Value="ThrowException" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.UnhandledExceptionMode ThrowException = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.UnhandledExceptionMode.ThrowException" />
      <MemberSignature Language="VB.NET" Value="ThrowException" />
      <MemberSignature Language="C++ CLI" Value="ThrowException" />
      <MemberSignature Language="F#" Value="ThrowException = 1" Usage="System.Windows.Forms.UnhandledExceptionMode.ThrowException" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.UnhandledExceptionMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Nigdy nie kieruj wyjątkami <see cref="E:System.Windows.Forms.Application.ThreadException" /> do programu obsługi. Zignoruj plik konfiguracyjny aplikacji.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
