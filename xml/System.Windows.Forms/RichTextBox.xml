<Type Name="RichTextBox" FullName="System.Windows.Forms.RichTextBox">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f6bc4582e825296fa306e1a8f5b9ad0a64930707" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36516167" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RichTextBox : System.Windows.Forms.TextBoxBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RichTextBox extends System.Windows.Forms.TextBoxBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.RichTextBox" />
  <TypeSignature Language="VB.NET" Value="Public Class RichTextBox&#xA;Inherits TextBoxBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class RichTextBox : System::Windows::Forms::TextBoxBase" />
  <TypeSignature Language="F#" Value="type RichTextBox = class&#xA;    inherit TextBoxBase" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.TextBoxBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.RichTextBoxDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Forms.Docking(System.Windows.Forms.DockingBehavior.Ask)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje kontrolkę pole tekstu sformatowanego systemu Windows.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Z <xref:System.Windows.Forms.RichTextBox> kontroli, użytkownik może wprowadzić i edytować tekst. Formant zawiera również bardziej zaawansowane funkcje formatowania niż standardowy <xref:System.Windows.Forms.TextBox> formantu. Tekst można przypisać bezpośrednio do formantu lub mogą zostać załadowane z formatu tekstu sformatowanego (RTF) lub plik tekstowy. Formatowanie znaków i akapitów można przypisać tekstu wewnątrz formantu.  
  
 <xref:System.Windows.Forms.RichTextBox> Formant zawiera wiele właściwości, można użyć do formatowania do jakiejkolwiek jego części tekstu wewnątrz formantu. Aby zmienić formatowanie tekstu, musi ona najpierw zostać wybrana. Formatowanie znaków i akapitów można przypisać tylko zaznaczonego tekstu. Gdy wprowadzono ustawienie do sekcji zaznaczonego tekstu, cały tekst wprowadzony po zaznaczenie jest sformatowany także z tymi samymi ustawieniami, dopóki nie zostaną zmienione ustawienie lub różnych części dokumentu formantu jest zaznaczone. <xref:System.Windows.Forms.RichTextBox.SelectionFont%2A> Właściwości można wprowadzić tekst pogrubieniem lub kursywą. Ta właściwość umożliwia również zmienić rozmiar i krój czcionki tekstu. <xref:System.Windows.Forms.RichTextBox.SelectionColor%2A> Właściwości umożliwia zmianę koloru tekstu. Do utworzenia listy punktowane można użyć <xref:System.Windows.Forms.RichTextBox.SelectionBullet%2A> właściwości. Można również dostosować formatowanie przez ustawienie akapitu <xref:System.Windows.Forms.RichTextBox.SelectionIndent%2A>, <xref:System.Windows.Forms.RichTextBox.SelectionRightIndent%2A>, i <xref:System.Windows.Forms.RichTextBox.SelectionHangingIndent%2A> właściwości.  
  
 <xref:System.Windows.Forms.RichTextBox> Kontroli udostępnia metody, które zapewniają funkcje otwieranie i zapisywanie plików. <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> Metoda umożliwia załadować istniejący plik RTF lub ASCII tekst w formancie. Można również ładować danych ze strumienia danych już otwarty. <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> Umożliwia zapisywanie pliku w formacie RTF lub tekstowym ASCII. Podobnie jak <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> metody, można również użyć <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> metodę, aby zapisać w strumieniu danych otwartych. <xref:System.Windows.Forms.RichTextBox> Sterowania oferuje również funkcje do znajdowania ciągów tekstowych. <xref:System.Windows.Forms.RichTextBox.Find%2A> Metody jest przeciążona, aby znaleźć zarówno ciągów tekstowych także jako określone znaki w tekście formantu.  
  
 Można również zainicjować <xref:System.Windows.Forms.RichTextBox> kontroli danych przechowywanych w pamięci. Na przykład można zainicjować <xref:System.Windows.Forms.RichTextBox.Rtf%2A> właściwości na ciąg, który zawiera tekst do wyświetlenia, w tym kody RTF, które określają sposób formatowania tekstu.  
  
 Jeśli tekst wewnątrz formantu zawiera łącza, takie jak łącze do witryny sieci Web, możesz użyć <xref:System.Windows.Forms.RichTextBox.DetectUrls%2A> właściwości do wyświetlenia łącza odpowiednio tekst formantu. Następnie można obsługiwać <xref:System.Windows.Forms.RichTextBox.LinkClicked> zdarzenie, aby wykonywać zadania związane z łączem. <xref:System.Windows.Forms.RichTextBox.SelectionProtected%2A> Właściwości umożliwia ochronę tekstu wewnątrz formantu z operacji wykonywanych przez użytkownika. Z chroniony tekst formantu można obsługiwać <xref:System.Windows.Forms.RichTextBox.Protected> zdarzenia w celu określenia, kiedy użytkownik próbował zmodyfikować chroniony tekst i alertów albo użytkownik, czy tekst jest chroniona lub udostępnić użytkownik standardowy sposób modyfikowania chroniony tekst.  
  
 Aplikacje, które już używają <xref:System.Windows.Forms.TextBox> formanty łatwo można dostosować tak, aby korzystać z <xref:System.Windows.Forms.RichTextBox> formantów. Jednak <xref:System.Windows.Forms.RichTextBox> formant nie ma do tego samego 64K znak limitu pojemności <xref:System.Windows.Forms.TextBox> formantu. <xref:System.Windows.Forms.RichTextBox> Zwykle służy do zapewnienia manipulowania tekstu i wyświetlić funkcje podobne do edytora aplikacji, takich jak Microsoft Word.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.TextBoxBase.Undo%2A?displayProperty=nameWithType> Nie obsługuje metody <xref:System.Windows.Forms.Control.KeyPress> lub <xref:System.Windows.Forms.Control.TextChanged> zdarzenia.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.RichTextBox> formant, który ładuje plik RTF do kontrolki i wyszukiwania dla pierwszego wystąpienia wyrazu "Text". Następnie kod zmienia styl czcionki, rozmiaru czcionki i koloru czcionki zaznaczonego tekstu i zapisuje zmiany oryginalnego pliku. Przykładowy kod zakończy przez dodawanie formantu do jego <xref:System.Windows.Forms.Form>. W tym przykładzie wymaga dodania do metody utworzone w przykładowym kodzie <xref:System.Windows.Forms.Form> klasy i wywoływana z konstruktora w postaci. Przykład wymaga również, że plik RTF jest tworzony w folderze głównym dysku C, zawierające słowo "Text".  
  
 [!code-cpp[Classic RichTextBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.TextBoxBase" />
    <altmember cref="T:System.Windows.Forms.TextBox" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RichTextBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RichTextBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.RichTextBox" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> ma ustawioną właściwość formantu `true`.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.RichTextBox> formant, który ładuje plik RTF do kontrolki i wyszukiwania dla pierwszego wystąpienia wyrazu "Text". Następnie kod zmienia styl czcionki, rozmiaru czcionki i koloru czcionki zaznaczonego tekstu i zapisuje zmiany oryginalnego pliku. Przykładowy kod zakończy przez dodawanie formantu do jego <xref:System.Windows.Forms.Form>. W tym przykładzie wymaga dodania do metody utworzone w przykładowym kodzie <xref:System.Windows.Forms.Form> klasy i wywoływana z konstruktora w postaci. Przykład wymaga również, że plik RTF jest tworzony w folderze głównym dysku C, zawierające słowo "Text".  
  
 [!code-cpp[Classic RichTextBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Multiline" />
      </Docs>
    </Member>
    <Member MemberName="AllowDrop">
      <MemberSignature Language="C#" Value="public override bool AllowDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.AllowDrop" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AllowDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowDrop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDrop : bool with get, set" Usage="System.Windows.Forms.RichTextBox.AllowDrop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy formant spowoduje włączenie operacji przeciągania i upuszczania.</summary>
        <value>
          <see langword="true" /> Jeśli włączono przeciągania i upuszczania w formancie; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje sposób wykonywania operacji przeciągania i upuszczania za pomocą <xref:System.Windows.Forms.ListBox> formant, który zawiera elementy, aby porzucić do <xref:System.Windows.Forms.RichTextBox> formantu. Konstruktor zestawów formularza <xref:System.Windows.Forms.RichTextBox.AllowDrop%2A> właściwości `true` umożliwiające operacji przeciągania i upuszczania w <xref:System.Windows.Forms.RichTextBox>. W przykładzie użyto <xref:System.Windows.Forms.Control.MouseDown> zdarzenie <xref:System.Windows.Forms.ListBox> rozpocząć operację przeciągania przez wywołanie metody <xref:System.Windows.Forms.Control.DoDragDrop%2A> metody. W przykładzie użyto <xref:System.Windows.Forms.Control.DragEnter> zdarzeń, aby ustalić, czy element zostanie przeciągnięty do <xref:System.Windows.Forms.RichTextBox> jest prawidłowy typ danych. <xref:System.Windows.Forms.Control.DragDrop> Zdarzeń wykonuje rzeczywiste zaniechaniem przeciąganego elementu do <xref:System.Windows.Forms.RichTextBox> kontroli w bieżącej lokalizacji kursora w <xref:System.Windows.Forms.RichTextBox>. W tym przykładzie wymaga, aby <xref:System.Windows.Forms.Control.DragDrop> i <xref:System.Windows.Forms.Control.DragEnter> zdarzenia były podłączone do obsługi zdarzeń zdefiniowanych w przykładzie.  
  
 [!code-cpp[RichTextBox.AllowDrop#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.AllowDrop/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.AllowDrop#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.AllowDrop/CS/form1.cs#1)]
 [!code-vb[RichTextBox.AllowDrop#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.AllowDrop/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSize">
      <MemberSignature Language="C#" Value="public override bool AutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.AutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoSize { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSize : bool with get, set" Usage="System.Windows.Forms.RichTextBox.AutoSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ta właściwość nie jest ważna dla tej klasy.</summary>
        <value>
          <see langword="true" /> Jeśli włączona; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   Ta właściwość nie jest ważna dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoWordSelection">
      <MemberSignature Language="C#" Value="public bool AutoWordSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoWordSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.AutoWordSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoWordSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoWordSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoWordSelection : bool with get, set" Usage="System.Windows.Forms.RichTextBox.AutoWordSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy jest włączone automatyczne zaznaczanie słów.</summary>
        <value>
          <see langword="true" /> Jeśli włączono automatyczne zaznaczanie słów; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ta właściwość jest ustawiona na `true`, wybierając dowolną część tekstu w formancie wybiera całe wyrazy.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób tworzenia <xref:System.Windows.Forms.RichTextBox> który powiększa tekstu, automatycznie wybiera słów w tekst formantu, gdy słowem zostanie dwukrotnie kliknięty i ma margines po prawej stronie obszaru klienckiego formantu. Jeśli <xref:System.Windows.Forms.RichTextBox> formant ma Mała szerokość, przy użyciu tego kodu utworzy <xref:System.Windows.Forms.RichTextBox> którym każdego znaku tekstu jest wyświetlana w osobnym wierszu. W tym miejscu wyświetlania pionowego kliknięcie dowolnej części słowa wybierze wszystkich znaków wyrazu niezależnie od tego, czy tekst jest wyświetlany w pionie. W tym przykładzie wymaga formularz, który zawiera <xref:System.Windows.Forms.RichTextBox> formantu o nazwie `richTextBox1`.  
  
 [!code-cpp[RichTextBox.ZoomFactor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.ZoomFactor/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.ZoomFactor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.ZoomFactor/CS/form1.cs#1)]
 [!code-vb[RichTextBox.ZoomFactor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.ZoomFactor/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImage : System.Drawing.Image with get, set" Usage="System.Windows.Forms.RichTextBox.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ta właściwość nie jest ważna dla tej klasy.</summary>
        <value>Obraz tła wyświetlany w formancie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość nie jest ważna dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageChanged : EventHandler " Usage="member this.BackgroundImageChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wartość <see cref="P:System.Windows.Forms.RichTextBox.BackgroundImage" /> zmiany właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayout : System.Windows.Forms.ImageLayout with get, set" Usage="System.Windows.Forms.RichTextBox.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ta właściwość nie jest ważna dla tej klasy.</summary>
        <value>Układ obrazu tła wyświetlany w formancie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość nie jest ważna dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayoutChanged : EventHandler " Usage="member this.BackgroundImageLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wartość <see cref="P:System.Windows.Forms.RichTextBox.BackgroundImageLayout" /> zmiany właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie nie jest ważna dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BulletIndent">
      <MemberSignature Language="C#" Value="public int BulletIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BulletIndent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.BulletIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property BulletIndent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BulletIndent { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BulletIndent : int with get, set" Usage="System.Windows.Forms.RichTextBox.BulletIndent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wcięcie używane w <see cref="T:System.Windows.Forms.RichTextBox" /> kontroli, gdy styl punktora jest stosowany do tekstu.</summary>
        <value>Liczba pikseli wstawiane jako wcięcie po punktor. Wartością domyślną jest zero.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby zastosować styl punktora akapit tekstu, należy ustawić <xref:System.Windows.Forms.RichTextBox.SelectionBullet%2A> właściwości `true` , a następnie ustaw <xref:System.Windows.Forms.RichTextBox.BulletIndent%2A> właściwości tekst powinien być wcięty w pikselach. Akapit będzie mieć styl punktora zastosować dla niego z określoną ilością wcięcia po punktor. Ta właściwość dotyczy tylko bieżącego akapitu w tekst formantu i aktualnie zaznaczonego punktor w postaci listy punktowanej elementów. Aby zastosować poziom wcięcia różnych całą listę elementów Lista punktowana, należy wybrać cały tekst punktowanej elementów przed ustawieniem <xref:System.Windows.Forms.RichTextBox.BulletIndent%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.RichTextBox.SelectionBullet%2A> właściwości o <xref:System.Windows.Forms.RichTextBox.BulletIndent%2A>, <xref:System.Windows.Forms.RichTextBox.SelectionFont%2A>, <xref:System.Windows.Forms.RichTextBox.SelectedText%2A>, i <xref:System.Windows.Forms.RichTextBox.SelectionColor%2A> właściwości w celu utworzenia listy punktowanej w <xref:System.Windows.Forms.RichTextBox> formantu. W tym przykładzie wymaga, aby <xref:System.Windows.Forms.RichTextBox> formantu o nazwie `richTextBox1` jest tworzony w formularzu.  
  
 [!code-cpp[RichTextBox.BulletIndent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.BulletIndent/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.BulletIndent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.BulletIndent/CS/form1.cs#1)]
 [!code-vb[RichTextBox.BulletIndent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.BulletIndent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Określona wcięcie była mniejsza od zera.</exception>
        <altmember cref="P:System.Windows.Forms.RichTextBox.SelectionBullet" />
      </Docs>
    </Member>
    <Member MemberName="CanPaste">
      <MemberSignature Language="C#" Value="public bool CanPaste (System.Windows.Forms.DataFormats.Format clipFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanPaste(class System.Windows.Forms.DataFormats/Format clipFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.CanPaste(System.Windows.Forms.DataFormats.Format)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanPaste (clipFormat As DataFormats.Format) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanPaste(System::Windows::Forms::DataFormats::Format ^ clipFormat);" />
      <MemberSignature Language="F#" Value="member this.CanPaste : System.Windows.Forms.DataFormats.Format -&gt; bool" Usage="richTextBox.CanPaste clipFormat" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clipFormat" Type="System.Windows.Forms.DataFormats+Format" />
      </Parameters>
      <Docs>
        <param name="clipFormat">Jeden z <see cref="T:System.Windows.Forms.DataFormats.Format" /> wartości.</param>
        <summary>Określa, czy możesz wkleić informacje ze Schowka w formacie określone dane.</summary>
        <returns>
          <see langword="true" /> Jeśli możesz wkleić danych ze Schowka w formacie określone dane. w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do określenia, czy bieżący zawartość Schowka są określonego formatu danych schowka przed włączeniem użytkownikowi Wklej informacje w <xref:System.Windows.Forms.RichTextBox> formantu. Na przykład można utworzyć programu obsługi zdarzeń dla <xref:System.Windows.Forms.MenuItem.Popup> zdarzeń polecenie Wklej <xref:System.Windows.Forms.MenuItem> i ta metoda służy do określenia czy Wklej <xref:System.Windows.Forms.MenuItem> powinno być włączone na podstawie typu danych w Schowku.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.RichTextBox.Paste%2A> metodę, aby wkleić mapy bitowej do <xref:System.Windows.Forms.RichTextBox> formantu. Po otwarciu mapy bitowej z pliku, w przykładzie użyto <xref:System.Windows.Forms.Clipboard.SetDataObject%2A> metody, aby skopiować mapy bitowej do Schowka systemu Windows. Na koniec przykład pobiera format <xref:System.Drawing.Bitmap> obiektu, używa <xref:System.Windows.Forms.RichTextBox.CanPaste%2A> metody, aby sprawdzić, czy format można wkleić do <xref:System.Windows.Forms.RichTextBox> sterowania, a następnie używa <xref:System.Windows.Forms.RichTextBox.Paste%2A> metodę, aby wkleić dane.  
  
 [!code-cpp[RichText_Paste#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichText_Paste/CPP/form1.cpp#1)]
 [!code-csharp[RichText_Paste#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichText_Paste/CS/form1.cs#1)]
 [!code-vb[RichText_Paste#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichText_Paste/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.RichTextBox.Paste(System.Windows.Forms.DataFormats.Format)" />
        <altmember cref="T:System.Windows.Forms.DataFormats.Format" />
      </Docs>
    </Member>
    <Member MemberName="CanRedo">
      <MemberSignature Language="C#" Value="public bool CanRedo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRedo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.CanRedo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRedo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRedo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRedo : bool" Usage="System.Windows.Forms.RichTextBox.CanRedo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy istnieją akcje, które wystąpiły w <see cref="T:System.Windows.Forms.RichTextBox" /> która może być stosowana.</summary>
        <value>
          <see langword="true" /> w przypadku operacji, które zostały cofnięte który można ją ponownie zastosować do zawartości kontrolki; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy do określenia czy ostatnią operację cofnięte w <xref:System.Windows.Forms.RichTextBox> stosowana przy użyciu <xref:System.Windows.Forms.RichTextBox.Redo%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.RichTextBox.CanRedo%2A> i <xref:System.Windows.Forms.RichTextBox.RedoActionName%2A> właściwości oraz <xref:System.Windows.Forms.RichTextBox.Redo%2A> metody, aby ograniczyć na operacji ponownego wykonywania żadnych działań z wyjątkiem usunięcia tekstu. W tym przykładzie wymaga formularz, który zawiera <xref:System.Windows.Forms.RichTextBox> kontroli oraz że operacji w ramach <xref:System.Windows.Forms.RichTextBox> wykonywane i cofnąć przed wywołaniem kod w tym przykładzie.  
  
 [!code-cpp[RichTextBox.RedoAction#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.RedoAction/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.RedoAction#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.RedoAction/CS/form1.cs#1)]
 [!code-vb[RichTextBox.RedoAction#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.RedoAction/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.RichTextBox.Redo" />
      </Docs>
    </Member>
    <Member MemberName="ContentsResized">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ContentsResizedEventHandler ContentsResized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ContentsResizedEventHandler ContentsResized" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.ContentsResized" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContentsResized As ContentsResizedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ContentsResizedEventHandler ^ ContentsResized;" />
      <MemberSignature Language="F#" Value="member this.ContentsResized : System.Windows.Forms.ContentsResizedEventHandler " Usage="member this.ContentsResized : System.Windows.Forms.ContentsResizedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContentsResizedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy zmieniany jest rozmiar zawartości wewnątrz formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.RichTextBox.ContentsResized> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.RichTextBox> o nazwie `RichTextBox1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.RichTextBox.ContentsResized> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#537](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#537)]
 [!code-vb[System.Windows.Forms.EventExamples#537](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#537)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ContentsResizedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.RichTextBox.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera parametry tworzenia wymagane, gdy zostanie utworzony uchwyt formantu.</summary>
        <value>A <see cref="T:System.Windows.Forms.CreateParams" /> zawierający tworzenia wymaganych parametrów podczas tworzenia uchwytu do formantu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRichEditOleCallback">
      <MemberSignature Language="C#" Value="protected virtual object CreateRichEditOleCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object CreateRichEditOleCallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.CreateRichEditOleCallback" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateRichEditOleCallback () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ CreateRichEditOleCallback();" />
      <MemberSignature Language="F#" Value="abstract member CreateRichEditOleCallback : unit -&gt; obj&#xA;override this.CreateRichEditOleCallback : unit -&gt; obj" Usage="richTextBox.CreateRichEditOleCallback " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy <see langword="IRichEditOleCallback" />-niezgodny obiekt do obsługi operacji edycji wzbogaconej wywołania zwrotnego.</summary>
        <returns>Obiekt, który implementuje <see langword="IRichEditOleCallback" /> interfejsu.</returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do obiektu wywołującego bezpośrednio wywoływać kodu niezarządzanego. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <block subset="none" type="overrides">
          <para>Mogą przesłaniać tę metodę w klasie pochodnej, aby umożliwić dostęp do funkcji edycji wzbogaconej. Jeśli przesłonić tę metodę, wszystkie zdarzenia przeciągania i upuszczania nie zostanie wygenerowany. W związku z tym należy zapewnić własną obsługę dla operacji przeciągania i upuszczania. Aby uzyskać więcej informacji na temat <see langword="IRichEditOleCallback" /> interfejsu, zapoznaj się z dokumentacją zestawu SDK platformy w http://msdn.microsoft.com.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.RichTextBox.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera domyślny rozmiar formantu.</summary>
        <value>A <see cref="T:System.Drawing.Size" /> wartość.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.DefaultSize" />
      </Docs>
    </Member>
    <Member MemberName="DetectUrls">
      <MemberSignature Language="C#" Value="public bool DetectUrls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DetectUrls" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.DetectUrls" />
      <MemberSignature Language="VB.NET" Value="Public Property DetectUrls As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DetectUrls { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DetectUrls : bool with get, set" Usage="System.Windows.Forms.RichTextBox.DetectUrls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Windows.Forms.RichTextBox" /> automatycznie sformatuje Uniform Resource Locator (URL), gdy są wpisywane w formancie.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Windows.Forms.RichTextBox" /> zostanie automatycznie Formatuj adresów URL, które są typu w formancie jako łącze; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ta właściwość jest ustawiona na `true`, dowolny tekst w formancie, który jest określany przez <xref:System.Windows.Forms.RichTextBox> jako adres URL są automatycznie formatowane jako łącza. Można utworzyć programu obsługi zdarzeń dla <xref:System.Windows.Forms.RichTextBox.LinkClicked> zdarzeń do obsługi wszystkich łączy kliknięty w formancie. <xref:System.Windows.Forms.LinkClickedEventArgs> Dostarczanym do programu obsługi zdarzeń dla <xref:System.Windows.Forms.RichTextBox.LinkClicked> zdarzenia zawiera dane, które umożliwia określenie, które łącze został kliknięty w formancie, aby przetworzyć łącze.  
  
   
  
## Examples  
 Poniższy przykład kodu zawiera program obsługi zdarzeń dla <xref:System.Windows.Forms.RichTextBox.LinkClicked> zdarzeń. Przetwarza program obsługi zdarzeń kliknięcia łącza w dokumencie programu <xref:System.Windows.Forms.RichTextBox> kontroli i uruchamia wystąpienie domyślnej przeglądarki (przy użyciu <xref:System.Diagnostics.Process.Start%2A?displayProperty=nameWithType> metody), strona łącza, który został kliknięty. W tym przykładzie wymaga, aby program obsługi zdarzeń został połączony z <xref:System.Windows.Forms.RichTextBox.LinkClicked> zdarzenia dla <xref:System.Windows.Forms.RichTextBox>.  
  
 [!code-cpp[Classic RichTextBox.LinkClicked Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox.LinkClicked Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox.LinkClicked Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox.LinkClicked Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox.LinkClicked Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox.LinkClicked Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.RichTextBox.LinkClicked" />
        <altmember cref="T:System.Windows.Forms.LinkClickedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="DragDrop">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DragEventHandler DragDrop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DragEventHandler DragDrop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.DragDrop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragDrop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DragEventHandler ^ DragDrop;" />
      <MemberSignature Language="F#" Value="member this.DragDrop : System.Windows.Forms.DragEventHandler " Usage="member this.DragDrop : System.Windows.Forms.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy użytkownik kończy przeciągania i upuszczania</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DragEventHandler DragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DragEventHandler DragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.DragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DragEventHandler ^ DragEnter;" />
      <MemberSignature Language="F#" Value="member this.DragEnter : System.Windows.Forms.DragEventHandler " Usage="member this.DragEnter : System.Windows.Forms.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po przeciągnięciu obiektu w granice formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.RichTextBox.DragEnter> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.RichTextBox> o nazwie `RichTextBox1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.RichTextBox.DragEnter> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#539](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#539)]
 [!code-vb[System.Windows.Forms.EventExamples#539](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#539)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragLeave">
      <MemberSignature Language="C#" Value="public event EventHandler DragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.DragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragLeave As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DragLeave;" />
      <MemberSignature Language="F#" Value="member this.DragLeave : EventHandler " Usage="member this.DragLeave : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy obiekt zostanie przeciągnięty poza granice formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie nie jest ważna dla tej klasy. Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DragEventHandler DragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DragEventHandler DragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.DragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DragEventHandler ^ DragOver;" />
      <MemberSignature Language="F#" Value="member this.DragOver : System.Windows.Forms.DragEventHandler " Usage="member this.DragOver : System.Windows.Forms.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy obiekt zostanie przeciągnięty nad granicami formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie nie jest ważna dla tej klasy. Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawToBitmap">
      <MemberSignature Language="C#" Value="public void DrawToBitmap (System.Drawing.Bitmap bitmap, System.Drawing.Rectangle targetBounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawToBitmap(class System.Drawing.Bitmap bitmap, valuetype System.Drawing.Rectangle targetBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawToBitmap(System::Drawing::Bitmap ^ bitmap, System::Drawing::Rectangle targetBounds);" />
      <MemberSignature Language="F#" Value="override this.DrawToBitmap : System.Drawing.Bitmap * System.Drawing.Rectangle -&gt; unit" Usage="richTextBox.DrawToBitmap (bitmap, targetBounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmap" Type="System.Drawing.Bitmap" />
        <Parameter Name="targetBounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="bitmap">A <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="targetBounds">A <see cref="T:System.Drawing.Rectangle" />.</param>
        <summary>Ta metoda nie jest ważna dla tej klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda nie jest ważna dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAutoDragDrop">
      <MemberSignature Language="C#" Value="public bool EnableAutoDragDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAutoDragDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.EnableAutoDragDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAutoDragDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAutoDragDrop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableAutoDragDrop : bool with get, set" Usage="System.Windows.Forms.RichTextBox.EnableAutoDragDrop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość, która umożliwia operacji przeciągania i upuszczania na tekst, obrazy i innych danych.</summary>
        <value>
          <see langword="true" /> Aby włączyć operacji przeciągania i upuszczania; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Find">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wyszukiwanie tekstu w zawartości <see cref="T:System.Windows.Forms.RichTextBox" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public int Find (char[] characterSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Find(char[] characterSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.Find(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (characterSet As Char()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Find(cli::array &lt;char&gt; ^ characterSet);" />
      <MemberSignature Language="F#" Value="member this.Find : char[] -&gt; int" Usage="richTextBox.Find characterSet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="characterSet" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="characterSet">Tablica znaków do wyszukania.</param>
        <summary>Wyszukuje tekst <see cref="T:System.Windows.Forms.RichTextBox" /> kontroli w pierwszym wystąpieniu znak z listy znaków.</summary>
        <returns>Lokalizacja w formancie, gdy znaleziono znaki wyszukiwania lub wartość -1, jeśli nie ma znaków wyszukiwania lub znak wyszukiwania puste jest określona w <paramref name="char" /> parametru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wersja <xref:System.Windows.Forms.RichTextBox.Find%2A> metoda szuka w pierwszym wystąpieniu znaku z listy znaków określonych w `characterSet` parametrów i zwraca lokalizację znaku. Na przykład należy przekazać tablicę zawierającą znak "Q" znaków. Jeśli formant zawiera tekst "szybki lis brązowy", <xref:System.Windows.Forms.RichTextBox.Find%2A> metoda zwróci wartość cztery. Znak wielkie i małe litery są traktowane jako różne wartości w wyszukiwaniu.  
  
 Jeśli właściwość zwraca wartość ujemną, znaki wyszukane nie znaleziono w zawartości formantu. Ta metoda służy do wyszukiwania grupy znaków wewnątrz formantu. Ta wersja <xref:System.Windows.Forms.RichTextBox.Find%2A> metoda wymaga całego dokumentu zawartego w formancie jest wyszukiwany znaki. Jeśli znak z podanej listy znaków w metodzie `characterSet` zostanie znaleziony, wartość zwracana przez tę metodę jest liczony od zera indeks znaku na pozycji w formancie. Odstęp jest traktowany jako znak przez metodę podczas określania lokalizacji znaku.  
  
   
  
## Examples  
 Poniższy przykład kodu wyszukuje zawartość <xref:System.Windows.Forms.RichTextBox> znaków, które są przekazywane do metody w `text` parametru. Jeśli zawartość `text` tablicy znajdują się w <xref:System.Windows.Forms.RichTextBox>, metoda zwraca indeks wartość, która zostanie odnaleziony; w przeciwnym razie, zwraca -1. Przykład wymaga, aby ta metoda jest umieszczane w klasie <xref:System.Windows.Forms.Form> zawierający <xref:System.Windows.Forms.RichTextBox> formantu o nazwie `richTextBox1` i <xref:System.Windows.Forms.Button> formantu o nazwie `button1`, która jest połączona `Click` obsługi zdarzeń zdefiniowanych w przykład.  
  
 [!code-cpp[RichTextBox.FindChar1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.FindChar1/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.FindChar1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.FindChar1/CS/form1.cs#1)]
 [!code-vb[RichTextBox.FindChar1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.FindChar1/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public int Find (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Find(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.Find(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (str As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Find(System::String ^ str);" />
      <MemberSignature Language="F#" Value="member this.Find : string -&gt; int" Usage="richTextBox.Find str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">Tekst, który można znaleźć w formancie.</param>
        <summary>Wyszukiwanie tekstu w <see cref="T:System.Windows.Forms.RichTextBox" /> kontroli ciągu.</summary>
        <returns>Wewnątrz formantu w lokalizacji, w którym znaleziono szukanego tekstu lub -1, jeśli nie znaleziono ciągu wyszukiwania lub ciąg pusty wyszukiwania jest określony w <paramref name="str" /> parametru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.RichTextBox.Find%2A> Metody wyszukuje tekst określony w `str` parametrów i zwraca położenie pierwszego znaku w formancie. Właściwość zwraca wartość ujemną, jest wyszukiwany ciąg tekstowy nie został znaleziony w zawartości formantu. Ta metoda umożliwia utworzenie funkcje wyszukiwania, które można podać użytkownikowi formantu. Ta metoda umożliwia również wyszukać tekst do zastąpienia w określonym formacie. Na przykład, jeśli użytkownik wprowadził dat w formancie, można użyć <xref:System.Windows.Forms.RichTextBox.Find%2A> metody, aby wyszukać wszystkie daty w dokumencie i zastąpić je odpowiedni format przed użyciem <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> metody formantu.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.RichTextBox.Find%2A> Metod, które akceptują `string` jako parametr nie może odnaleźć tekst, który znajduje się na więcej niż jeden wiersz tekstu w <xref:System.Windows.Forms.RichTextBox>. Takie wyszukiwania zwróci wartość ujemna (-1).  
  
   
  
## Examples  
 Poniższy przykład kodu wyszukuje całą zawartość <xref:System.Windows.Forms.RichTextBox> po raz pierwszy wyszukiwanego ciągu przekazany do parametru tekstu metody. W przypadku znalezienia ciągu wyszukiwania w <xref:System.Windows.Forms.RichTextBox>, metoda zwraca wartość `true` i zaznacza wyszukiwany tekst, w przeciwnym razie zwraca `false`. Przykład wymaga, aby ta metoda jest umieszczane w klasie <xref:System.Windows.Forms.Form> zawierający <xref:System.Windows.Forms.RichTextBox> o nazwie `richTextBox1`.  
  
 [!code-cpp[Classic RichTextBox.Find Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox.Find Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox.Find Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox.Find Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox.Find Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox.Find Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public int Find (char[] characterSet, int start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Find(char[] characterSet, int32 start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.Find(System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (characterSet As Char(), start As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Find(cli::array &lt;char&gt; ^ characterSet, int start);" />
      <MemberSignature Language="F#" Value="member this.Find : char[] * int -&gt; int" Usage="richTextBox.Find (characterSet, start)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="characterSet" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="characterSet">Tablica znaków do wyszukania.</param>
        <param name="start">Lokalizacja w tekście formantu, w którym należy rozpocząć wyszukiwanie.</param>
        <summary>Wyszukuje tekst <see cref="T:System.Windows.Forms.RichTextBox" /> kontroli w określonym punkcie wyjścia w pierwszym wystąpieniu znak z listy znaków.</summary>
        <returns>Lokalizacja w formancie, gdzie znajdują się znaki wyszukiwania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wersja <xref:System.Windows.Forms.RichTextBox.Find%2A> metoda szuka w pierwszym wystąpieniu znaku z listy znaków określonych w `characterSet` parametrów i zwraca lokalizację znaku. Na przykład należy przekazać tablicę zawierającą znak "Q" znaków. Jeśli formant zawiera tekst "szybki lis brązowy", <xref:System.Windows.Forms.RichTextBox.Find%2A> metoda zwróci wartość cztery. Znak wielkie i małe litery są traktowane jako różne wartości w wyszukiwaniu.  
  
 Jeśli właściwość zwraca wartość ujemną, znaki wyszukane nie znaleziono w zawartości formantu. Ta metoda służy do wyszukiwania grupy znaków wewnątrz formantu. Jeśli znak z podanej listy znaków w metodzie `characterSet` zostanie znaleziony, wartość zwracana przez tę metodę jest liczony od zera indeks znaku na pozycji w formancie. Odstęp jest traktowany jako znak przez metodę podczas określania lokalizacji znaku.  
  
 Ta wersja <xref:System.Windows.Forms.RichTextBox.Find%2A> metoda umożliwia wyszukiwanie zestawu znaków z określonym początkowe położenie w tekście formantu, określając wartość `start` parametru. Wartość zerowa wskazuje, czy wyszukiwanie ma się rozpoczynać od początku dokumentu formantu. Można użyć tej wersji <xref:System.Windows.Forms.RichTextBox.Find%2A> metodę, aby zawęzić kryteria wyszukiwania, aby uniknąć tekst, który znasz już nie zawiera określonego znaków wyszukiwania lub nie są ważne w wyszukiwaniu.  
  
   
  
## Examples  
 Poniższy przykład kodu wyszukuje zawartość <xref:System.Windows.Forms.RichTextBox> znaków, które są przekazywane do metody w `text` parametru. Wyszukiwanie rozpoczyna się od lokalizacji w ramach <xref:System.Windows.Forms.RichTextBox> określonego przez `start` parametr `FindMyText` metody. Jeśli zawartość tablicy tekstu znajdują się w <xref:System.Windows.Forms.RichTextBox>, metoda zwraca indeks wartość, która zostanie odnaleziony; w przeciwnym razie, zwraca -1. Przykład wymaga, aby ta metoda jest umieszczane w klasie <xref:System.Windows.Forms.Form> zawierający <xref:System.Windows.Forms.RichTextBox> formantu o nazwie `richTextBox1` i <xref:System.Windows.Forms.Button> formantu o nazwie `button1` podłączonego do <xref:System.Windows.Forms.Control.Click> obsługi zdarzeń zdefiniowanych w przykład.  
  
 [!code-cpp[RichTextBox.FindChar2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.FindChar2/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.FindChar2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.FindChar2/CS/form1.cs#1)]
 [!code-vb[RichTextBox.FindChar2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.FindChar2/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public int Find (string str, System.Windows.Forms.RichTextBoxFinds options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Find(string str, valuetype System.Windows.Forms.RichTextBoxFinds options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.Find(System.String,System.Windows.Forms.RichTextBoxFinds)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (str As String, options As RichTextBoxFinds) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Find(System::String ^ str, System::Windows::Forms::RichTextBoxFinds options);" />
      <MemberSignature Language="F#" Value="member this.Find : string * System.Windows.Forms.RichTextBoxFinds -&gt; int" Usage="richTextBox.Find (str, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="options" Type="System.Windows.Forms.RichTextBoxFinds" />
      </Parameters>
      <Docs>
        <param name="str">Tekst, który można znaleźć w formancie.</param>
        <param name="options">Bitowe połączenie <see cref="T:System.Windows.Forms.RichTextBoxFinds" /> wartości.</param>
        <summary>Wyszukiwanie tekstu w <see cref="T:System.Windows.Forms.RichTextBox" /> kontroli dla ciągu z określonych opcji stosowane do wyszukiwania.</summary>
        <returns>Lokalizacja wewnątrz formantu, w którym znaleziono szukanego tekstu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.RichTextBox.Find%2A> Metody wyszukuje tekst określony w `str` parametrów i zwraca położenie pierwszego znaku w formancie. Właściwość zwraca wartość ujemną, jest wyszukiwany ciąg tekstowy nie został znaleziony w zawartości formantu. Ta metoda umożliwia utworzenie funkcje wyszukiwania, które można podać użytkownikowi formantu. Ta metoda umożliwia również wyszukać tekst do zastąpienia w określonym formacie. Na przykład, jeśli użytkownik wprowadził dat w formancie, można użyć <xref:System.Windows.Forms.RichTextBox.Find%2A> metody, aby wyszukać wszystkie daty w dokumencie i zastąpić je odpowiedni format przed użyciem <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> metody formantu.  
  
 Z tą wersją <xref:System.Windows.Forms.RichTextBox.Find%2A> metody, można określić opcje, które umożliwiają rozwijanie lub zawęzić kryteria wyszukiwania. Można określić opcje, które pozwalają pasuje do wielkości liter wyszukiwanego lub Wyszukaj całe wyrazy zamiast słowa częściowej. Określając `RichTextBoxFinds.Reverse` wyliczanie w `options` parametru, możesz wyszukać tekst w dolnej części dokumentu do góry zamiast na górze domyślne do dołu metody search.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.RichTextBox.Find%2A> Metod, które akceptują `string` jako parametr nie może odnaleźć tekst, który znajduje się na więcej niż jeden wiersz tekstu w <xref:System.Windows.Forms.RichTextBox>. Takie wyszukiwania zwróci wartość ujemna (-1).  
  
   
  
## Examples  
 Poniższy przykład kodu wyszukuje całą zawartość <xref:System.Windows.Forms.RichTextBox> po raz pierwszy wyszukiwanego ciągu przekazany do parametru tekstu metody. W przypadku znalezienia ciągu wyszukiwania w <xref:System.Windows.Forms.RichTextBox>, metoda zwraca wartość `true` i zaznacza tekst; w przeciwnym razie zwraca `false`. Przykład określa również opcje wyszukiwania do dopasowania w przypadku określonego ciągu wyszukiwania. Przykład wymaga, aby ta metoda jest umieszczane w klasie <xref:System.Windows.Forms.Form> zawierający <xref:System.Windows.Forms.RichTextBox> o nazwie `richTextBox1`.  
  
 [!code-cpp[Classic RichTextBox.Find1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox.Find1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox.Find1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox.Find1 Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox.Find1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox.Find1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public int Find (char[] characterSet, int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Find(char[] characterSet, int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.Find(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (characterSet As Char(), start As Integer, end As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Find(cli::array &lt;char&gt; ^ characterSet, int start, int end);" />
      <MemberSignature Language="F#" Value="member this.Find : char[] * int * int -&gt; int" Usage="richTextBox.Find (characterSet, start, end)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="characterSet" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="characterSet">Tablica znaków do wyszukania.</param>
        <param name="start">Lokalizacja w tekście formantu, w którym należy rozpocząć wyszukiwanie.</param>
        <param name="end">Lokalizacja w tekście kontrolki, na których należy zakończyć wyszukiwania.</param>
        <summary>Wyszukuje zakres tekstu w <see cref="T:System.Windows.Forms.RichTextBox" /> kontroli w pierwszym wystąpieniu znak z listy znaków.</summary>
        <returns>Lokalizacja w formancie, gdzie znajdują się znaki wyszukiwania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wersja <xref:System.Windows.Forms.RichTextBox.Find%2A> metoda szuka w pierwszym wystąpieniu znaku z listy znaków określonych w `characterSet` parametrów i zwraca lokalizację znaku. Na przykład należy przekazać tablicę zawierającą znak "Q" znaków. Jeśli formant zawiera tekst "szybki lis brązowy", <xref:System.Windows.Forms.RichTextBox.Find%2A> metoda zwróci wartość cztery. Znak wielkie i małe litery są traktowane jako różne wartości w wyszukiwaniu.  
  
 Jeśli właściwość zwraca wartość ujemną, znaki wyszukane nie znaleziono w zawartości formantu. Ta metoda służy do wyszukiwania grupy znaków wewnątrz formantu. Jeśli znak z podanej listy znaków w metodzie `characterSet` zostanie znaleziony, wartość zwracana przez tę metodę się od zera indeks znaku na pozycji w formancie. Odstęp jest traktowany jako znak przez metodę podczas określania lokalizacji znaku.  
  
 Ta wersja <xref:System.Windows.Forms.RichTextBox.Find%2A> metoda umożliwia wyszukiwanie zestawu znaków z zakresu tekstu w formancie, określając wartość `start` i `end` parametrów. Wartość zero dla `start` parametr wskazuje, czy wyszukiwanie ma się rozpoczynać od początku dokumentu formantu. Wartość-1 `end` parametr wskazuje, czy wyszukiwania powinny kończyć się na końcu tekstu wewnątrz formantu. Można użyć tej wersji <xref:System.Windows.Forms.RichTextBox.Find%2A> metodę, aby zawęzić kryteria wyszukiwania do określonego zakresu tekstu wewnątrz formantu, aby uniknąć wyszukiwania obszarów dokumentów, które nie są ważne na potrzeby aplikacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="characterSet" /> ma wartość null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="start" /> jest mniejsza niż 0 lub większa niż długość tekstu w formancie.</exception>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public int Find (string str, int start, System.Windows.Forms.RichTextBoxFinds options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Find(string str, int32 start, valuetype System.Windows.Forms.RichTextBoxFinds options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.Find(System.String,System.Int32,System.Windows.Forms.RichTextBoxFinds)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (str As String, start As Integer, options As RichTextBoxFinds) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Find(System::String ^ str, int start, System::Windows::Forms::RichTextBoxFinds options);" />
      <MemberSignature Language="F#" Value="member this.Find : string * int * System.Windows.Forms.RichTextBoxFinds -&gt; int" Usage="richTextBox.Find (str, start, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="options" Type="System.Windows.Forms.RichTextBoxFinds" />
      </Parameters>
      <Docs>
        <param name="str">Tekst, który można znaleźć w formancie.</param>
        <param name="start">Lokalizacja w tekście formantu, w którym należy rozpocząć wyszukiwanie.</param>
        <param name="options">Bitowe połączenie <see cref="T:System.Windows.Forms.RichTextBoxFinds" /> wartości.</param>
        <summary>Wyszukiwanie tekstu w <see cref="T:System.Windows.Forms.RichTextBox" /> kontroli ciągu z określonej lokalizacji w formancie i z określonych opcji stosowane do wyszukiwania.</summary>
        <returns>Lokalizacja wewnątrz formantu, w którym znaleziono szukanego tekstu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.RichTextBox.Find%2A> Metody wyszukuje tekst określony w `str` parametrów i zwraca położenie pierwszego znaku, wyszukiwania ciągów wewnątrz formantu. Właściwość zwraca wartość ujemną, jest wyszukiwany ciąg tekstowy nie został znaleziony w zawartości formantu. Ta metoda umożliwia utworzenie funkcje wyszukiwania, które można podać użytkownikowi formantu. Ta metoda umożliwia również wyszukać tekst do zastąpienia w określonym formacie. Na przykład, jeśli użytkownik wprowadził dat w formancie, można użyć <xref:System.Windows.Forms.RichTextBox.Find%2A> metody, aby wyszukać wszystkie daty w dokumencie i zastąpić je odpowiedni format przed użyciem <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> metody formantu.  
  
 Z tą wersją <xref:System.Windows.Forms.RichTextBox.Find%2A> metody, można określić opcje, które umożliwiają rozwijanie lub zawęzić kryteria wyszukiwania. Można określić opcje, które pozwalają pasuje do wielkości liter wyszukiwanego lub Wyszukaj całe wyrazy zamiast słowa częściowej. Określając `RichTextBoxFinds.Reverse` wyliczanie w `options` parametru, możesz wyszukać tekst w dolnej części dokumentu do góry zamiast na górze domyślne do dołu metody search. Ta wersja <xref:System.Windows.Forms.RichTextBox.Find%2A> metody można również ograniczyć wyniki wyszukiwania tekstu przez wybranie określonych pozycji początkowej w tekście formantu. Ta funkcja pozwala uniknąć tekst, który może być już Przeszukano lub gdy wiadomo określony tekst, którego szukasz, nie ma. Gdy `RichTextBoxFinds.Reverse` wartość została określona w `options` parametru, wartość `start` parametr wskazuje pozycję gdzie wyszukiwania wstecznego zostanie zakończone, ponieważ rozpocznie się wyszukiwanie w dolnej części dokumentu przy użyciu tej wersji <xref:System.Windows.Forms.RichTextBox.Find%2A> metody.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.RichTextBox.Find%2A> Metod, które akceptują `string` jako parametr nie może odnaleźć tekst, który znajduje się na więcej niż jeden wiersz tekstu w <xref:System.Windows.Forms.RichTextBox>. Takie wyszukiwania zwróci wartość ujemna (-1).  
  
   
  
## Examples  
 Poniższy przykład kodu wyszukuje całą zawartość <xref:System.Windows.Forms.RichTextBox> po raz pierwszy wyszukiwanego ciągu przekazany do parametru tekstu metody. Wyszukiwanie lokalizacji jest określony przez parametr rozpoczęcia metody. W przypadku znalezienia ciągu wyszukiwania w <xref:System.Windows.Forms.RichTextBox>, metoda zwraca lokalizację indeks pierwszego znaku znaleziony tekst i zaznacza znaleziony tekst; w przeciwnym razie zwraca wartość -1. Przykład określa również opcje wyszukiwania do dopasowania w przypadku określonego ciągu wyszukiwania. Przykład wymaga, aby ta metoda jest umieszczane w klasie <xref:System.Windows.Forms.Form> zawierający <xref:System.Windows.Forms.RichTextBox> o nazwie `richTextBox1`. W tym przykładzie służy do wykonywania operacji typu "Znajdź następny". Po znalezieniu wystąpienia tekstu wyszukiwania można znaleźć inne wystąpienia tekstu, zmieniając wartość `start` parametru do wyszukiwania w lokalizacji poza pozycja bieżące dopasowanie.  
  
 [!code-cpp[Classic RichTextBox.Find2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox.Find2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox.Find2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox.Find2 Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox.Find2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox.Find2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public int Find (string str, int start, int end, System.Windows.Forms.RichTextBoxFinds options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Find(string str, int32 start, int32 end, valuetype System.Windows.Forms.RichTextBoxFinds options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.Find(System.String,System.Int32,System.Int32,System.Windows.Forms.RichTextBoxFinds)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (str As String, start As Integer, end As Integer, options As RichTextBoxFinds) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Find(System::String ^ str, int start, int end, System::Windows::Forms::RichTextBoxFinds options);" />
      <MemberSignature Language="F#" Value="member this.Find : string * int * int * System.Windows.Forms.RichTextBoxFinds -&gt; int" Usage="richTextBox.Find (str, start, end, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="options" Type="System.Windows.Forms.RichTextBoxFinds" />
      </Parameters>
      <Docs>
        <param name="str">Tekst, który można znaleźć w formancie.</param>
        <param name="start">Lokalizacja w tekście formantu, w którym należy rozpocząć wyszukiwanie.</param>
        <param name="end">Lokalizacja w tekście kontrolki, na których należy zakończyć wyszukiwania. Ta wartość musi być równa ujemną (-1) lub większa niż lub równa <c>start</c> parametru.</param>
        <param name="options">Bitowe połączenie <see cref="T:System.Windows.Forms.RichTextBoxFinds" /> wartości.</param>
        <summary>Wyszukiwanie tekstu w <see cref="T:System.Windows.Forms.RichTextBox" /> kontroli ciągu w zakresie tekstu wewnątrz formantu i z określonych opcji stosowane do wyszukiwania.</summary>
        <returns>Lokalizacja wewnątrz formantu, w którym znaleziono szukanego tekstu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.RichTextBox.Find%2A> Metody wyszukuje tekst określony w `str` parametrów i zwraca położenie pierwszego znaku, wyszukiwania ciągów wewnątrz formantu. Właściwość zwraca wartość ujemną, jest wyszukiwany ciąg tekstowy nie został znaleziony w zawartości formantu. Ta metoda umożliwia utworzenie funkcje wyszukiwania, które można podać użytkownikowi formantu. Ta metoda umożliwia również wyszukać tekst do zastąpienia w określonym formacie. Na przykład, jeśli użytkownik wprowadził dat w formancie, można użyć <xref:System.Windows.Forms.RichTextBox.Find%2A> metody, aby wyszukać wszystkie daty w dokumencie i zastąpić je odpowiedni format przed użyciem <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> metody formantu.  
  
 Z tą wersją <xref:System.Windows.Forms.RichTextBox.Find%2A> metody, można określić opcje, które umożliwiają rozwijanie lub zawęzić kryteria wyszukiwania. Można określić opcje, które pozwalają pasuje do wielkości liter wyszukiwanego lub Wyszukaj całe wyrazy zamiast słowa częściowej. Określając `RichTextBoxFinds.Reverse` wyliczanie w `options` parametru, możesz wyszukać tekst w dolnej części dokumentu do góry zamiast na górze domyślne do dołu metody search. Ta wersja <xref:System.Windows.Forms.RichTextBox.Find%2A> metody można również ograniczyć wyniki wyszukiwania tekstu przez wybranie określonych położenie początkowe i końcowe w tekście formantu. Ta funkcja pozwala ograniczyć zakres wyszukiwania do określonej sekcji tekstu formantu. Jeśli wartość ujemna (-1) jest przypisany do `end` parametr, metoda umożliwia wyszukiwanie aż do zakończenia tekstu w <xref:System.Windows.Forms.RichTextBox> do normalnej wyszukiwania. Do wyszukiwania wstecznego, wartość wartość ujemną (-1) przypisany do `end` parametr wskazuje przeszukiwane na końcu tekstu (u dołu) do pozycji zdefiniowane przez tekst `start` parametru. Gdy `start` i `end` parametry znajdują się taką samą wartość cały formant jest wyszukiwany w normalnych operacji wyszukiwania. Wyszukiwania wstecznego przeszukiwany jest formant całego, ale wyszukiwanie rozpoczyna się w dolnej części dokumentu i wyszukiwania w górnej części dokumentu.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.RichTextBox.Find%2A> Metod, które akceptują `string` jako parametr nie może odnaleźć tekst, który znajduje się na więcej niż jeden wiersz tekstu w <xref:System.Windows.Forms.RichTextBox>. Takie wyszukiwania zwróci wartość ujemna (-1).  
  
   
  
## Examples  
 Poniższy przykład kodu wyszukuje fragment tekstu w <xref:System.Windows.Forms.RichTextBox> dla pierwszego wystąpienia wyszukiwanego ciągu przekazany do `searchText` parametru metody. Zakres do wyszukiwania tekstu wewnątrz formantu jest określona przez `searchStart` i `searchEnd` parametry metody. W przypadku znalezienia ciągu wyszukiwania w <xref:System.Windows.Forms.RichTextBox>, metoda zwraca lokalizację indeks pierwszego znaku znaleziony tekst i zaznacza znaleziony tekst; w przeciwnym razie zwraca wartość -1. Funkcja `options` parametr <xref:System.Windows.Forms.RichTextBox.Find%2A> metodę, aby określić, że znaleziony tekst powinien być zgodny wielkość liter w ciągu wyszukiwania. Przykład wymaga, aby ta metoda jest umieszczane w klasie <xref:System.Windows.Forms.Form> zawierający <xref:System.Windows.Forms.RichTextBox> formantu o nazwie `richTextBox1`. Po pierwsze wystąpienie ciągu wyszukiwania znaleziono, w tym przykładzie umożliwia znalezienie innych wystąpień w tekście.  
  
 [!code-cpp[RichTextBox.FindStringStartEnd#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.FindStringStartEnd/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.FindStringStartEnd#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.FindStringStartEnd/CS/form1.cs#1)]
 [!code-vb[RichTextBox.FindStringStartEnd#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.FindStringStartEnd/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> Parametru <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="end" /> Parametru była mniejsza <paramref name="start" /> parametru.</exception>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public override System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.Font" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font with get, set" Usage="System.Windows.Forms.RichTextBox.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia czcionkę tekstu wyświetlanego przez formant.</summary>
        <value>
          <see cref="T:System.Drawing.Font" /> Do zastosowania do tekstu wyświetlanego przez formant. Wartość domyślna to wartość <see cref="P:System.Windows.Forms.Control.DefaultFont" /> właściwości.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.Font" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.RichTextBox.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor pierwszego planu formantu.</summary>
        <value>A <see cref="T:System.Drawing.Color" /> reprezentujący kolor pierwszego planu formantu.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="GetCharIndexFromPosition">
      <MemberSignature Language="C#" Value="public override int GetCharIndexFromPosition (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharIndexFromPosition(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.GetCharIndexFromPosition(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharIndexFromPosition (pt As Point) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharIndexFromPosition(System::Drawing::Point pt);" />
      <MemberSignature Language="F#" Value="override this.GetCharIndexFromPosition : System.Drawing.Point -&gt; int" Usage="richTextBox.GetCharIndexFromPosition pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt">Lokalizacja do wyszukiwania.</param>
        <summary>Pobiera indeks znak znajdujący się najbliżej określonej lokalizacji.</summary>
        <returns>Znak liczony od zera indeks w określonej lokalizacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zwraca indeks znaków najbliższą określonej w pozycji `pt` parametru. Indeks znaków jest liczony od zera indeks tekst w formancie, łącznie ze spacjami. Ta metoda umożliwia Określa, gdzie w tekście użytkownik ma myszy przez przekazanie współrzędne myszy do tej metody. Może to być przydatne, jeśli chcesz wykonywać zadania, gdy użytkownik zatrzyma wskaźnik myszy na wyraz tekstu formantu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.RichTextBox.GetCharIndexFromPosition%2A> metody z <xref:System.Windows.Forms.RichTextBox.Find%2A> metody do wyszukiwania określonego ciągu w <xref:System.Windows.Forms.RichTextBox> kontroli i wyświetlić indeks znaków, gdzie znaleziony ciąg znajduje się w <xref:System.Windows.Forms.RichTextBox> formant. Przykład wyszukiwania dla słowa "brązowy" w zawartości formantu i zwraca znak indeks, gdy zostanie znaleziony ciąg wyszukiwania. W tym przykładzie wymaga formularz, który zawiera <xref:System.Windows.Forms.RichTextBox> formantu o nazwie `richTextBox1` zawierający tekst. Wymagany jest również czy kod w tym przykładzie jest połączony <xref:System.Windows.Forms.Control.MouseDown> zdarzenie <xref:System.Windows.Forms.RichTextBox>.  
  
 [!code-cpp[RichTextBox.GetCharIndexFromPosition#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.GetCharIndexFromPosition/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.GetCharIndexFromPosition#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.GetCharIndexFromPosition/CS/form1.cs#1)]
 [!code-vb[RichTextBox.GetCharIndexFromPosition#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.GetCharIndexFromPosition/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.RichTextBox.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.RichTextBox.GetPositionFromCharIndex(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetLineFromCharIndex">
      <MemberSignature Language="C#" Value="public override int GetLineFromCharIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLineFromCharIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.GetLineFromCharIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLineFromCharIndex (index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetLineFromCharIndex(int index);" />
      <MemberSignature Language="F#" Value="override this.GetLineFromCharIndex : int -&gt; int" Usage="richTextBox.GetLineFromCharIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Pozycja znaku indeksu wyszukiwania.</param>
        <summary>Pobiera numer wiersza od położenia określony znak w tekście <see cref="T:System.Windows.Forms.RichTextBox" /> formantu.</summary>
        <returns>Numer wiersza od zera, w którym znajduje się indeks znaków.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia określenie numer wiersza na indeks znaków określonych w podstawie `index` parametru metody. Pierwszy wiersz tekstu w formancie zwraca wartość zero. <xref:System.Windows.Forms.RichTextBox.GetLineFromCharIndex%2A> Metoda zwraca numer wiersza fizycznych którym indeksowanego znak znajduje się wewnątrz formantu. Na przykład jeśli części logiczne pierwszy wiersz tekstu w formantu jest zawijany do następnego wiersza <xref:System.Windows.Forms.RichTextBox.GetLineFromCharIndex%2A> — metoda zwraca wartość 1, jeśli znak na pozycji indeksu określony znak jest opakowany w drugim wierszu fizycznych. Jeśli <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> ustawiono `false`opakowuje nie części wiersza do następnego i metoda zwraca wartość 0 dla indeksu określony znak. Ta metoda służy do określenia, który wiersz indeksu określonego znaku znajduje się w. Na przykład po wywołaniu <xref:System.Windows.Forms.RichTextBox.Find%2A> metody do wyszukiwania tekstu, możesz uzyskać indeks znaków, na którym znajdują się w wynikach wyszukiwania. Tę metodę można wywołać z zwrócony przez indeks znaków <xref:System.Windows.Forms.RichTextBox.Find%2A> metodę, aby określić, który wiersz wyraz został znaleziony.  
  
 W niektórych przypadkach <xref:System.Windows.Forms.RichTextBox.GetLineFromCharIndex%2A> nie zgłasza wyjątek podczas `index` parametr ma nieprawidłową wartość. Na przykład:  
  
-   Jeśli `index` parametr jest <xref:System.Int32.MinValue> lub wartość -1, <xref:System.Windows.Forms.RichTextBox.GetLineFromCharIndex%2A> zwraca wartość 0.  
  
-   Jeśli `index` parametr ma długość tekstu lub <xref:System.Int32.MaxValue>, <xref:System.Windows.Forms.RichTextBox.GetLineFromCharIndex%2A> zwraca numer ostatniego wiersza tekstu, który nie musi być taka sama jak `Lines.Length-1`w zależności od wartości <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> właściwości.  
  
 W takich przypadkach sprawdzanie poprawności danych wejściowych przed wywołaniem <xref:System.Windows.Forms.RichTextBox.GetLineFromCharIndex%2A>.  
  
> [!NOTE]
>  Jeśli indeks znaków `index` parametr jest poza dostępne liczbę wierszy zawartych w kontrolce, ostatni numer wiersza jest zwracany.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, przy użyciu <xref:System.Windows.Forms.RichTextBox.GetLineFromCharIndex%2A> metody. Aby uruchomić przykład, wklej następujący kod w nadrzędnym formularza <xref:System.Windows.Forms.RichTextBox> formantu o nazwie `RichTextBox1`, przycisk o nazwie `Button1` i polami tekstowymi o nazwie `TextBox1` i `TextBox2`. Kiedy przykładzie jest uruchomiona, wprowadź ciąg wyszukiwania w `TextBox2` i kliknij przycisk, aby wyświetlić wyniki wyszukiwania.  
  
 [!code-cpp[System.Windows.Forms.RichTextBoxGetLine#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxGetLine/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.RichTextBoxGetLine#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxGetLine/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.RichTextBoxGetLine#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxGetLine/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.RichTextBox.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.RichTextBox.GetPositionFromCharIndex(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetPositionFromCharIndex">
      <MemberSignature Language="C#" Value="public override System.Drawing.Point GetPositionFromCharIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Drawing.Point GetPositionFromCharIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.GetPositionFromCharIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPositionFromCharIndex (index As Integer) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Drawing::Point GetPositionFromCharIndex(int index);" />
      <MemberSignature Language="F#" Value="override this.GetPositionFromCharIndex : int -&gt; System.Drawing.Point" Usage="richTextBox.GetPositionFromCharIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeks znak, dla którego można pobrać lokalizacji.</param>
        <summary>Pobiera lokalizację w formancie w indeksie określony znak.</summary>
        <returns>Lokalizacja określony znak.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia określenie, gdzie w formancie indeksu określonego znaku znajduje się. Ta metoda służy do zadania, takie jak wyświetlanie skrótów informacji elementy lub pomocy menu wyrazu w formancie. Na przykład, jeśli chcesz wyświetlić menu opcji dla użytkownika, po kliknięciu prawym przyciskiem myszy na wyraz w formancie zostanie ta metoda służy do określenia pozycji programu word do prawidłowego wyświetlenia <xref:System.Windows.Forms.ContextMenu> formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.RichTextBox.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.RichTextBox.GetLineFromCharIndex(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.GiveFeedbackEventHandler GiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.GiveFeedbackEventHandler GiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.GiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::GiveFeedbackEventHandler ^ GiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.GiveFeedback : System.Windows.Forms.GiveFeedbackEventHandler " Usage="member this.GiveFeedback : System.Windows.Forms.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje podczas operacji przeciągania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie nie jest ważna dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HScroll">
      <MemberSignature Language="C#" Value="public event EventHandler HScroll;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HScroll" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.HScroll" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HScroll As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HScroll;" />
      <MemberSignature Language="F#" Value="member this.HScroll : EventHandler " Usage="member this.HScroll : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy zostanie kliknięty poziomy pasek przewijania formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.RichTextBox.HScroll> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.RichTextBox> o nazwie `RichTextBox1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.RichTextBox.HScroll> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#540](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#540)]
 [!code-vb[System.Windows.Forms.EventExamples#540](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#540)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImeChange">
      <MemberSignature Language="C#" Value="public event EventHandler ImeChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ImeChange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.ImeChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ImeChange As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ImeChange;" />
      <MemberSignature Language="F#" Value="member this.ImeChange : EventHandler " Usage="member this.ImeChange : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy użytkownik zmienia metody wprowadzania tekstu, w przypadku wersji systemu operacyjnego Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.RichTextBox.ImeChange> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.RichTextBox> o nazwie `RichTextBox1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.RichTextBox.ImeChange> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#542](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#542)]
 [!code-vb[System.Windows.Forms.EventExamples#542](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#542)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageOption">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.RichTextBoxLanguageOptions LanguageOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.RichTextBoxLanguageOptions LanguageOption" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.LanguageOption" />
      <MemberSignature Language="VB.NET" Value="Public Property LanguageOption As RichTextBoxLanguageOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::RichTextBoxLanguageOptions LanguageOption { System::Windows::Forms::RichTextBoxLanguageOptions get(); void set(System::Windows::Forms::RichTextBoxLanguageOptions value); };" />
      <MemberSignature Language="F#" Value="member this.LanguageOption : System.Windows.Forms.RichTextBoxLanguageOptions with get, set" Usage="System.Windows.Forms.RichTextBox.LanguageOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RichTextBoxLanguageOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą <see cref="T:System.Windows.Forms.RichTextBox" /> ustawienia dla edytora Input Method Editor (IME) i azjatyckich pomocy technicznej.</summary>
        <value>Jeden z <see cref="T:System.Windows.Forms.RichTextBoxLanguageOptions" /> wartości. Wartość domyślna to <see cref="F:System.Windows.Forms.RichTextBoxLanguageOptions.AutoFontSizeAdjust" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkClicked">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.LinkClickedEventHandler LinkClicked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.LinkClickedEventHandler LinkClicked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.LinkClicked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LinkClicked As LinkClickedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::LinkClickedEventHandler ^ LinkClicked;" />
      <MemberSignature Language="F#" Value="member this.LinkClicked : System.Windows.Forms.LinkClickedEventHandler " Usage="member this.LinkClicked : System.Windows.Forms.LinkClickedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LinkClickedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy użytkownik kliknie łącze w tekście formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można utworzyć program obsługi zdarzeń dla tego zdarzenia do przetworzenia link, który został kliknięty w formancie. Korzystając z informacji podanych do obsługi zdarzeń, można określić, które łącze został kliknięty w dokumencie.  
  
> [!IMPORTANT]
>  Domyślnie są wyświetlane jako tekst łącza, a nie są aktywne. Aby były aktywne zestaw <xref:System.Windows.Forms.RichTextBox.DetectUrls%2A> właściwości `true`.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład kodu zawiera program obsługi zdarzeń dla <xref:System.Windows.Forms.RichTextBox.LinkClicked> zdarzeń. Przetwarza program obsługi zdarzeń kliknięcia łącza w dokumencie programu <xref:System.Windows.Forms.RichTextBox> kontroli i uruchamia wystąpienie domyślnej przeglądarki (przy użyciu <xref:System.Diagnostics.Process.Start%2A?displayProperty=nameWithType> metody), strona łącza, który został kliknięty. W tym przykładzie wymaga, aby program obsługi zdarzeń został połączony z <xref:System.Windows.Forms.RichTextBox.LinkClicked> zdarzenia dla <xref:System.Windows.Forms.RichTextBox>.  
  
 [!code-cpp[Classic RichTextBox.LinkClicked Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox.LinkClicked Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox.LinkClicked Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox.LinkClicked Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox.LinkClicked Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox.LinkClicked Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.RichTextBox.DetectUrls" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadFile">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ładuje zawartość pliku do <see cref="T:System.Windows.Forms.RichTextBox" /> formantu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadFile">
      <MemberSignature Language="C#" Value="public void LoadFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.LoadFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadFile (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadFile(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.LoadFile : string -&gt; unit" Usage="richTextBox.LoadFile path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Nazwa i lokalizacja pliku do załadowania do formantu.</param>
        <summary>Ładuje format tekstu sformatowanego (RTF) lub standardowy plik tekstowy ASCII w <see cref="T:System.Windows.Forms.RichTextBox" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas ładowania pliku z <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> metody, Zastąp zawartość pliku ładowany całą zawartość <xref:System.Windows.Forms.RichTextBox> formantu. To spowoduje, że wartości <xref:System.Windows.Forms.TextBoxBase.Text%2A> i <xref:System.Windows.Forms.RichTextBox.Rtf%2A> właściwości, aby zmienić. Ta metoda umożliwia ładowanie utworzonej wcześniej tekstu lub dokumentu w formacie RTF do kontrolki do manipulacji. Jeśli chcesz zapisać plik, możesz użyć <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> metody.  
  
> [!NOTE]
>  Z tą wersją <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> metody, jeśli ładowanego pliku nie jest dokumentem RTF, wyjątek zostanie przeprowadzona. Do załadowania innego typu plików, takich jak plik tekstowy ASCII, użyj tej metody, która akceptuje wartości z innych wersji <xref:System.Windows.Forms.RichTextBoxStreamType> wyliczenie jako parametr.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> — Metoda nie zostanie otwarty plik do momentu utworzenia uchwytu dla <xref:System.Windows.Forms.RichTextBox>. Upewnij się, że przed wywołaniem zostanie utworzony uchwyt formantu <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu otwiera plik RTF do <xref:System.Windows.Forms.RichTextBox> formantu. W przykładzie użyto <xref:System.Windows.Forms.OpenFileDialog> klasę, aby wyświetlić okno dialogowe, aby zażądać pliku od użytkownika. Kod, a następnie obciążeń, które plików, przy założeniu, że jest RTF dokumentu pliku. Jeśli plik nie jest przykładowy kod spowoduje zgłoszenie wyjątku. W tym przykładzie wymaga, aby kod jest umieszczane w <xref:System.Windows.Forms.Form> klasy, która ma <xref:System.Windows.Forms.RichTextBox> formantu o nazwie `richTextBox1`.  
  
 [!code-cpp[Classic RichTextBox.LoadFile Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox.LoadFile Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox.LoadFile Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox.LoadFile Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox.LoadFile Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox.LoadFile Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd podczas ładowania pliku w formancie.</exception>
        <exception cref="T:System.ArgumentException">Trwa ładowanie pliku nie jest dokumentem RTF.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">do otwierania pliku. Wyliczenie skojarzone: <see langword="Read" /> wartość <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.</permission>
        <altmember cref="M:System.Windows.Forms.RichTextBox.SaveFile(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="LoadFile">
      <MemberSignature Language="C#" Value="public void LoadFile (System.IO.Stream data, System.Windows.Forms.RichTextBoxStreamType fileType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadFile(class System.IO.Stream data, valuetype System.Windows.Forms.RichTextBoxStreamType fileType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.LoadFile(System.IO.Stream,System.Windows.Forms.RichTextBoxStreamType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadFile (data As Stream, fileType As RichTextBoxStreamType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadFile(System::IO::Stream ^ data, System::Windows::Forms::RichTextBoxStreamType fileType);" />
      <MemberSignature Language="F#" Value="member this.LoadFile : System.IO.Stream * System.Windows.Forms.RichTextBoxStreamType -&gt; unit" Usage="richTextBox.LoadFile (data, fileType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="fileType" Type="System.Windows.Forms.RichTextBoxStreamType" />
      </Parameters>
      <Docs>
        <param name="data">Strumień danych do załadowania do <see cref="T:System.Windows.Forms.RichTextBox" /> formantu.</param>
        <param name="fileType">Jeden z <see cref="T:System.Windows.Forms.RichTextBoxStreamType" /> wartości.</param>
        <summary>Ładuje zawartość istniejącej strumienia danych do <see cref="T:System.Windows.Forms.RichTextBox" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć tej wersji <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> metodę, aby załadować <xref:System.Windows.Forms.RichTextBox> przy użyciu danych z istniejącego strumienia danych. Dane, które są ładowane do formantu zastępuje całą zawartość <xref:System.Windows.Forms.RichTextBox> formantu. To spowoduje, że wartości <xref:System.Windows.Forms.TextBoxBase.Text%2A> i <xref:System.Windows.Forms.RichTextBox.Rtf%2A> właściwości, aby zmienić. Ta metoda służy do ładowania pliku, który został uprzednio otwarty do strumienia danych w formancie do manipulacji. Jeśli chcesz zapisać do strumienia zawartości formantu, możesz użyć <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> metodę, która akceptuje <xref:System.IO.Stream> obiektu jako parametr.  
  
 Ta wersja <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> metoda umożliwia również określenie typu danych, który jest ładowany w formancie. Ta funkcja pozwala na użycie strumienie danych, zawierające danych innych niż tekstu sformatowanego (RTF) format dokumentów w formancie.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> — Metoda nie zostanie otwarty plik do momentu utworzenia uchwytu dla <xref:System.Windows.Forms.RichTextBox>. Upewnij się, że przed wywołaniem zostanie utworzony uchwyt formantu <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, za pomocą <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> i <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> metody strumieni. Ilustruje też przy użyciu <xref:System.Windows.Forms.FileDialog.FileName%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.FileDialog.DefaultExt%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.SaveFileDialog.CreatePrompt%2A?displayProperty=nameWithType>, i <xref:System.Windows.Forms.SaveFileDialog.OverwritePrompt%2A?displayProperty=nameWithType> elementów członkowskich.  
  
 Jest to pełny przykład, który jest gotowy do uruchomienia podczas kopiowania do projektu.  
  
 [!code-cpp[System.Windows.Forms.RichTextBoxSaveFile#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxSaveFile/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.RichTextBoxSaveFile#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxSaveFile/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.RichTextBoxSaveFile#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxSaveFile/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd podczas ładowania pliku w formancie.</exception>
        <exception cref="T:System.ArgumentException">Trwa ładowanie pliku nie jest dokumentem RTF.</exception>
        <altmember cref="M:System.Windows.Forms.RichTextBox.SaveFile(System.String)" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.Windows.Forms.RichTextBoxStreamType" />
      </Docs>
    </Member>
    <Member MemberName="LoadFile">
      <MemberSignature Language="C#" Value="public void LoadFile (string path, System.Windows.Forms.RichTextBoxStreamType fileType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadFile(string path, valuetype System.Windows.Forms.RichTextBoxStreamType fileType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.LoadFile(System.String,System.Windows.Forms.RichTextBoxStreamType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadFile (path As String, fileType As RichTextBoxStreamType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadFile(System::String ^ path, System::Windows::Forms::RichTextBoxStreamType fileType);" />
      <MemberSignature Language="F#" Value="member this.LoadFile : string * System.Windows.Forms.RichTextBoxStreamType -&gt; unit" Usage="richTextBox.LoadFile (path, fileType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="fileType" Type="System.Windows.Forms.RichTextBoxStreamType" />
      </Parameters>
      <Docs>
        <param name="path">Nazwa i lokalizacja pliku do załadowania do formantu.</param>
        <param name="fileType">Jeden z <see cref="T:System.Windows.Forms.RichTextBoxStreamType" /> wartości.</param>
        <summary>Ładuje określonego typu pliku w <see cref="T:System.Windows.Forms.RichTextBox" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas ładowania pliku z <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> metody, Zastąp zawartość pliku ładowany całą zawartość <xref:System.Windows.Forms.RichTextBox> formantu. To spowoduje, że wartości <xref:System.Windows.Forms.TextBoxBase.Text%2A> i <xref:System.Windows.Forms.RichTextBox.Rtf%2A> właściwości, aby zmienić. Ta metoda umożliwia ładowanie utworzonej wcześniej tekst lub dokument sformatowany (RTF) tekstu sformatowanego do sterowania do manipulacji. Jeśli chcesz zapisać plik, możesz użyć <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> metody.  
  
 Można użyć tej wersji <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> metodę, aby określić typ pliku ładowany. Ta funkcja umożliwia ładowanie plików innych niż dokumenty RTF do kontrolki.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> — Metoda nie zostanie otwarty plik do momentu utworzenia uchwytu dla <xref:System.Windows.Forms.RichTextBox>. Upewnij się, że przed wywołaniem zostanie utworzony uchwyt formantu <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu otwiera plik tekstowy do <xref:System.Windows.Forms.RichTextBox> formantu. W przykładzie użyto <xref:System.Windows.Forms.OpenFileDialog> klasę, aby wyświetlić okno dialogowe, aby zażądać pliku od użytkownika. Kod ładuje następnie ten plik do <xref:System.Windows.Forms.RichTextBox> formantu. W przykładzie użyto tej wersji <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> metodę, aby określić, że jako plik tekstowy ASCII, zamiast formatu tekstu sformatowanego standardowego można otworzyć pliku. W tym przykładzie wymaga, aby kod jest umieszczane w <xref:System.Windows.Forms.Form> klasy, która ma <xref:System.Windows.Forms.RichTextBox> formantu o nazwie `richTextBox1`.  
  
 [!code-cpp[Classic RichTextBox.LoadFile1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox.LoadFile1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox.LoadFile1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox.LoadFile1 Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox.LoadFile1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox.LoadFile1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd podczas ładowania pliku w formancie.</exception>
        <exception cref="T:System.ArgumentException">Trwa ładowanie pliku nie jest dokumentem RTF.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">do otwierania pliku. Wyliczenie skojarzone: <see langword="Read" /> wartość <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.</permission>
        <altmember cref="M:System.Windows.Forms.RichTextBox.SaveFile(System.String)" />
        <altmember cref="T:System.Windows.Forms.RichTextBoxStreamType" />
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public override int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLength : int with get, set" Usage="System.Windows.Forms.RichTextBox.MaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(2147483647)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia maksymalną liczbę znaków, użytkownik może wpisać lub wkleić w formancie pole tekstu sformatowanego.</summary>
        <value>Liczba znaków, jaką można wpisać do formantu. Wartość domyślna to <see cref="F:System.Int32.MaxValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy ta właściwość jest ustawiona na 0, maksymalna długość tekstu, które można wpisać w formancie jest 64 KB znaków. Ta właściwość jest zwykle używana, gdy <xref:System.Windows.Forms.RichTextBox> służy do wyświetlania pojedynczy wiersz tekstu sformatowanego tekst sformatowany (RTF). Ta właściwość służy do ograniczania długość tekstu dla wartości, takie jak kodów pocztowych i numerów telefonów wprowadzone w formancie lub ograniczyć długość tekstu wprowadzana, gdy dane są wprowadzane w bazie danych. Można ograniczyć tekst wprowadzony w formancie maksymalną długość odpowiednich pól w bazie danych.  
  
> [!NOTE]
>  W kodzie, można ustawić wartości <xref:System.Windows.Forms.TextBoxBase.Text%2A> właściwości na wartość, która ma długość większą niż wartość określoną przez <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> właściwości. Ta właściwość dotyczy tylko w tekście wprowadzanym w formancie w czasie wykonywania.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.RichTextBox.MaxLength%2A> właściwości, aby określić, czy tekst jest przypisywany do <xref:System.Windows.Forms.RichTextBox> formant jest większa niż wartość przypisana do <xref:System.Windows.Forms.RichTextBox.MaxLength%2A> właściwości. Jeśli tekst nie jest większy, w przykładzie użyto <xref:System.Windows.Forms.RichTextBox.SelectedText%2A> właściwość do przypisania tekst do formantu. W tym przykładzie wymaga, aby <xref:System.Windows.Forms.RichTextBox> formantu o nazwie `richTextBox1`, został dodany do formularza i który ma zostać wywołana metoda w przykładzie z tekstem dostarczona do parametru, który można wkleić do formantu. Przykład wymaga również, aby <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> właściwość została ustawiona na wartość ograniczenie wpisywanie tekstu do <xref:System.Windows.Forms.RichTextBox>.  
  
 [!code-cpp[RichTextBox.MaxLength#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.MaxLength/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.MaxLength#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.MaxLength/CS/form1.cs#1)]
 [!code-vb[RichTextBox.MaxLength#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.MaxLength/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość przypisana do właściwości jest mniejsza niż 0.</exception>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.MaxLength" />
      </Docs>
    </Member>
    <Member MemberName="Multiline">
      <MemberSignature Language="C#" Value="public override bool Multiline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Multiline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.Multiline" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Multiline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Multiline { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Multiline : bool with get, set" Usage="System.Windows.Forms.RichTextBox.Multiline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy jest to wielowierszowy <see cref="T:System.Windows.Forms.RichTextBox" /> formantu.</summary>
        <value>
          <see langword="true" /> Jeśli formant jest w wielowierszowym formancie <see cref="T:System.Windows.Forms.RichTextBox" /> kontrolować; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBackColorChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnBackColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBackColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBackColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBackColorChanged : EventArgs -&gt; unit" Usage="richTextBox.OnBackColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContentsResized">
      <MemberSignature Language="C#" Value="protected virtual void OnContentsResized (System.Windows.Forms.ContentsResizedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContentsResized(class System.Windows.Forms.ContentsResizedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnContentsResized(System.Windows.Forms.ContentsResizedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContentsResized (e As ContentsResizedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContentsResized(System::Windows::Forms::ContentsResizedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnContentsResized : System.Windows.Forms.ContentsResizedEventArgs -&gt; unit&#xA;override this.OnContentsResized : System.Windows.Forms.ContentsResizedEventArgs -&gt; unit" Usage="richTextBox.OnContentsResized e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ContentsResizedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.ContentsResizedEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.RichTextBox.ContentsResized" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.RichTextBox.OnContentsResized%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.RichTextBox.OnContentsResized(System.Windows.Forms.ContentsResizedEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.RichTextBox.OnContentsResized(System.Windows.Forms.ContentsResizedEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.RichTextBox.ContentsResized" />
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuChanged">
      <MemberSignature Language="C#" Value="protected override void OnContextMenuChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnContextMenuChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnContextMenuChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnContextMenuChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnContextMenuChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnContextMenuChanged : EventArgs -&gt; unit" Usage="richTextBox.OnContextMenuChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.Control.ContextMenuChanged" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="richTextBox.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.Control.HandleCreated" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="richTextBox.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHScroll">
      <MemberSignature Language="C#" Value="protected virtual void OnHScroll (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHScroll(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnHScroll(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHScroll (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHScroll(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnHScroll : EventArgs -&gt; unit&#xA;override this.OnHScroll : EventArgs -&gt; unit" Usage="richTextBox.OnHScroll e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.RichTextBox.HScroll" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.RichTextBox.OnHScroll%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.RichTextBox.OnHScroll(System.EventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.RichTextBox.OnHScroll(System.EventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.RichTextBox.HScroll" />
      </Docs>
    </Member>
    <Member MemberName="OnImeChange">
      <MemberSignature Language="C#" Value="protected virtual void OnImeChange (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnImeChange(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnImeChange(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnImeChange (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnImeChange(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnImeChange : EventArgs -&gt; unit&#xA;override this.OnImeChange : EventArgs -&gt; unit" Usage="richTextBox.OnImeChange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.RichTextBox.ImeChange" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.RichTextBox.OnImeChange%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.RichTextBox.OnImeChange(System.EventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.RichTextBox.OnImeChange(System.EventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.RichTextBox.ImeChange" />
      </Docs>
    </Member>
    <Member MemberName="OnLinkClicked">
      <MemberSignature Language="C#" Value="protected virtual void OnLinkClicked (System.Windows.Forms.LinkClickedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLinkClicked(class System.Windows.Forms.LinkClickedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnLinkClicked(System.Windows.Forms.LinkClickedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLinkClicked (e As LinkClickedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLinkClicked(System::Windows::Forms::LinkClickedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLinkClicked : System.Windows.Forms.LinkClickedEventArgs -&gt; unit&#xA;override this.OnLinkClicked : System.Windows.Forms.LinkClickedEventArgs -&gt; unit" Usage="richTextBox.OnLinkClicked e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.LinkClickedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.LinkClickedEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.RichTextBox.LinkClicked" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.RichTextBox.OnLinkClicked%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.RichTextBox.OnLinkClicked(System.Windows.Forms.LinkClickedEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.RichTextBox.OnLinkClicked(System.Windows.Forms.LinkClickedEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.RichTextBox.LinkClicked" />
      </Docs>
    </Member>
    <Member MemberName="OnProtected">
      <MemberSignature Language="C#" Value="protected virtual void OnProtected (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnProtected(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnProtected(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnProtected (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnProtected(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnProtected : EventArgs -&gt; unit&#xA;override this.OnProtected : EventArgs -&gt; unit" Usage="richTextBox.OnProtected e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.RichTextBox.Protected" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.RichTextBox.OnProtected%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.RichTextBox.OnProtected(System.EventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.RichTextBox.OnProtected(System.EventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.RichTextBox.Protected" />
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftChanged">
      <MemberSignature Language="C#" Value="protected override void OnRightToLeftChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRightToLeftChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnRightToLeftChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRightToLeftChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRightToLeftChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnRightToLeftChanged : EventArgs -&gt; unit" Usage="richTextBox.OnRightToLeftChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.Control.RightToLeftChanged" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnSelectionChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectionChanged : EventArgs -&gt; unit&#xA;override this.OnSelectionChanged : EventArgs -&gt; unit" Usage="richTextBox.OnSelectionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.RichTextBox.SelectionChanged" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.RichTextBox.OnSelectionChanged%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.RichTextBox.OnSelectionChanged(System.EventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.RichTextBox.OnSelectionChanged(System.EventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.RichTextBox.SelectionChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnVScroll">
      <MemberSignature Language="C#" Value="protected virtual void OnVScroll (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnVScroll(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnVScroll(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnVScroll (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnVScroll(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnVScroll : EventArgs -&gt; unit&#xA;override this.OnVScroll : EventArgs -&gt; unit" Usage="richTextBox.OnVScroll e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.RichTextBox.VScroll" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.RichTextBox.OnVScroll%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.RichTextBox.OnVScroll(System.EventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.RichTextBox.OnVScroll(System.EventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.RichTextBox.VScroll" />
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste (System.Windows.Forms.DataFormats.Format clipFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste(class System.Windows.Forms.DataFormats/Format clipFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.Paste(System.Windows.Forms.DataFormats.Format)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste (clipFormat As DataFormats.Format)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste(System::Windows::Forms::DataFormats::Format ^ clipFormat);" />
      <MemberSignature Language="F#" Value="override this.Paste : System.Windows.Forms.DataFormats.Format -&gt; unit" Usage="richTextBox.Paste clipFormat" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clipFormat" Type="System.Windows.Forms.DataFormats+Format" />
      </Parameters>
      <Docs>
        <param name="clipFormat">Format Schowka, w której dane mają być uzyskiwane ze Schowka.</param>
        <summary>Wkleja zawartość Schowka w określonym formacie Schowka.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia wklejanie danych ze Schowka do formantu. Ta wersja <xref:System.Windows.Forms.RichTextBox.Paste%2A> metoda różni się od <xref:System.Windows.Forms.TextBoxBase.Paste%2A?displayProperty=nameWithType> metoda, ponieważ umożliwia wkleić jedynie tekst w określonym formacie Schowka. Można użyć <xref:System.Windows.Forms.RichTextBox.CanPaste%2A> metodę, aby określić, czy dane w Schowku jest określony format Schowka. Następnie można wywołać tej wersji <xref:System.Windows.Forms.RichTextBox.Paste%2A> metodę, aby zapewnić, że operacja wklejania w formacie odpowiednie dane.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.RichTextBox.Paste%2A> metodę, aby wkleić mapy bitowej do <xref:System.Windows.Forms.RichTextBox> formantu. Po otwarciu mapy bitowej z pliku, w przykładzie użyto <xref:System.Windows.Forms.Clipboard.SetDataObject%2A> metody, aby skopiować mapy bitowej do Schowka systemu Windows. Na koniec przykład pobiera format <xref:System.Drawing.Bitmap> obiektów, sprawdza, czy format można wkleić do <xref:System.Windows.Forms.RichTextBox> kontroli i używa <xref:System.Windows.Forms.RichTextBox.Paste%2A> metodę, aby wkleić dane.  
  
 [!code-cpp[RichText_Paste#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichText_Paste/CPP/form1.cpp#1)]
 [!code-csharp[RichText_Paste#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichText_Paste/CS/form1.cs#1)]
 [!code-vb[RichText_Paste#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichText_Paste/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">do odczytania ze Schowka. Wyliczenie skojarzone: <see langword="AllClipboard" /> wartość <see cref="T:System.Security.Permissions.UIPermissionClipboard" />.</permission>
        <altmember cref="M:System.Windows.Forms.RichTextBox.CanPaste(System.Windows.Forms.DataFormats.Format)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="T:System.Windows.Forms.DataFormats.Format" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessCmdKey (ref System.Windows.Forms.Message m, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; m, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessCmdKey (ByRef m As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessCmdKey(System::Windows::Forms::Message % m, System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessCmdKey :  * System.Windows.Forms.Keys -&gt; bool" Usage="richTextBox.ProcessCmdKey (m, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="m">A <see cref="T:System.Windows.Forms.Message" />, przekazywane przez odwołanie, reprezentujący komunikat okna do przetworzenia.</param>
        <param name="keyData">Jeden z <see cref="T:System.Windows.Forms.Keys" /> wartości, które reprezentuje klucz używany do przetworzenia.</param>
        <summary>Przetwarza polecenia klucza.</summary>
        <returns>
          <see langword="true" /> Jeśli znak został przetworzony przez formant; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      </Docs>
    </Member>
    <Member MemberName="Protected">
      <MemberSignature Language="C#" Value="public event EventHandler Protected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Protected" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.Protected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Protected As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Protected;" />
      <MemberSignature Language="F#" Value="member this.Protected : EventHandler " Usage="member this.Protected : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy użytkownik próbuje zmodyfikować chroniony tekst w formancie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Program obsługi zdarzeń dla tego zdarzenia można utworzyć w aplikacjach do określania, kiedy użytkownik próbował zmodyfikować tekst, który został oznaczony jako chroniony w formancie. Program obsługi zdarzeń może służyć do powiadomi użytkownika, który próbuje zmodyfikować tekst użytkownika jest chroniona lub aby wyświetlić okno dialogowe, które umożliwia użytkownikowi wprowadzić odpowiednie zmiany w tekście. Na przykład w obszarze chronionym jest datą, można wyświetlić okno dialogowe, które umożliwia użytkownikowi wybranie daty, które następnie mogą być stosowane do tekstu formantu.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.RichTextBox.Protected> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.RichTextBox> o nazwie `RichTextBox1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.RichTextBox.Protected> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#543](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#543)]
 [!code-vb[System.Windows.Forms.EventExamples#543](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#543)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.QueryContinueDragEventHandler QueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.QueryContinueDragEventHandler QueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.QueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::QueryContinueDragEventHandler ^ QueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.QueryContinueDrag : System.Windows.Forms.QueryContinueDragEventHandler " Usage="member this.QueryContinueDrag : System.Windows.Forms.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To zdarzenie nie jest ważna dla tej klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie nie jest ważna dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Redo">
      <MemberSignature Language="C#" Value="public void Redo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Redo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.Redo" />
      <MemberSignature Language="VB.NET" Value="Public Sub Redo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Redo();" />
      <MemberSignature Language="F#" Value="member this.Redo : unit -&gt; unit" Usage="richTextBox.Redo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Przywrócenie Ostatnia operacja, która została cofnięta w formancie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Następnie można użyć <xref:System.Windows.Forms.RichTextBox.Redo%2A> metodę, aby ponownie zastosować ostatniej operacji cofania do formantu. <xref:System.Windows.Forms.RichTextBox.CanRedo%2A> Metody umożliwia określenie, czy formant zostanie zastosowana Ostatnia operacja wycofywania użytkownika.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.RichTextBox.CanRedo%2A> i <xref:System.Windows.Forms.RichTextBox.RedoActionName%2A> właściwości oraz <xref:System.Windows.Forms.RichTextBox.Redo%2A> metody, aby ograniczyć na operacji ponownego wykonywania żadnych działań z wyjątkiem usunięcia tekstu. W tym przykładzie wymaga formularz, który zawiera <xref:System.Windows.Forms.RichTextBox> kontroli oraz że operacji w ramach <xref:System.Windows.Forms.RichTextBox> wykonywane i cofnąć przed wywołaniem kod w tym przykładzie.  
  
 [!code-cpp[RichTextBox.RedoAction#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.RedoAction/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.RedoAction#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.RedoAction/CS/form1.cs#1)]
 [!code-vb[RichTextBox.RedoAction#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.RedoAction/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.RichTextBox.CanRedo" />
      </Docs>
    </Member>
    <Member MemberName="RedoActionName">
      <MemberSignature Language="C#" Value="public string RedoActionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RedoActionName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.RedoActionName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RedoActionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RedoActionName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RedoActionName : string" Usage="System.Windows.Forms.RichTextBox.RedoActionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę akcji, która może być stosowana do formantu podczas <see cref="M:System.Windows.Forms.RichTextBox.Redo" /> metoda jest wywoływana.</summary>
        <value>Ciąg reprezentujący nazwę akcji, które zostanie wykonane po wywołaniu <see cref="M:System.Windows.Forms.RichTextBox.Redo" /> staje się metody.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ta właściwość zwraca ciąg pusty (""), Brak operacji dostępne ponownie zastosować do formantu. Ta metoda służy do określania ostatniej akcji wycofywania w <xref:System.Windows.Forms.RichTextBox> formant, który następnie można ponownie zastosować do kontroli, gdy wywołanie <xref:System.Windows.Forms.RichTextBox.Redo%2A> staje się metody. Można określić, czy są wszystkie operacje zostanie zastosowana do formantu przy użyciu <xref:System.Windows.Forms.RichTextBox.CanRedo%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.RichTextBox.CanRedo%2A> i <xref:System.Windows.Forms.RichTextBox.RedoActionName%2A> właściwości oraz <xref:System.Windows.Forms.RichTextBox.Redo%2A> metody, aby ograniczyć na operacji ponownego wykonywania żadnych działań z wyjątkiem usunięcia tekstu. W tym przykładzie wymaga formularz, który zawiera <xref:System.Windows.Forms.RichTextBox> kontroli oraz że operacji w ramach <xref:System.Windows.Forms.RichTextBox> wykonywane i cofnąć przed wywołaniem kod w tym przykładzie.  
  
 [!code-cpp[RichTextBox.RedoAction#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.RedoAction/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.RedoAction#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.RedoAction/CS/form1.cs#1)]
 [!code-vb[RichTextBox.RedoAction#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.RedoAction/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.RichTextBox.CanRedo" />
        <altmember cref="M:System.Windows.Forms.RichTextBox.Redo" />
      </Docs>
    </Member>
    <Member MemberName="RichTextShortcutsEnabled">
      <MemberSignature Language="C#" Value="public bool RichTextShortcutsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RichTextShortcutsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.RichTextShortcutsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property RichTextShortcutsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RichTextShortcutsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RichTextShortcutsEnabled : bool with get, set" Usage="System.Windows.Forms.RichTextBox.RichTextShortcutsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ta właściwość nie jest odpowiedni dla tej klasy.</summary>
        <value>
          <see langword="true" /> Jeśli skróty klawiaturowe są dostępne; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość nie jest odpowiedni dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightMargin">
      <MemberSignature Language="C#" Value="public int RightMargin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RightMargin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.RightMargin" />
      <MemberSignature Language="VB.NET" Value="Public Property RightMargin As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RightMargin { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RightMargin : int with get, set" Usage="System.Windows.Forms.RichTextBox.RightMargin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia rozmiar pojedynczy wiersz tekstu w <see cref="T:System.Windows.Forms.RichTextBox" /> formantu.</summary>
        <value>Rozmiar w pikselach pojedynczy wiersz tekstu w formancie. Wartością domyślną jest zero.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po wprowadzeniu wartość większą niż zero w formancie nonvisible margines znajduje się w formancie na określoną liczbę pikseli z lewej strony kontrolki. Tekst, który jest wprowadzana dłuższym niż margines ten znajduje się w następnym wierszu tekst w formancie. Ta właściwość ma wpływ na cały tekst aktualnie wprowadzane do formantu, a także dodatkowy tekst po właściwość jest ustawiona, wprowadzony w formancie. Ta właściwość służy do określania maksymalną szerokość cały tekst wprowadzany do <xref:System.Windows.Forms.RichTextBox> formantu.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób tworzenia <xref:System.Windows.Forms.RichTextBox> który powiększa tekstu, automatycznie wybiera słów w tekst formantu, gdy słowem zostanie dwukrotnie kliknięty i ma margines po prawej stronie obszaru klienckiego formantu. Jeśli <xref:System.Windows.Forms.RichTextBox> formant ma Mała szerokość, przy użyciu tego kodu utworzy <xref:System.Windows.Forms.RichTextBox> którym każdego znaku tekstu jest wyświetlana w osobnym wierszu. W tym miejscu wyświetlania pionowego kliknięcie dowolnej części słowa wybierze wszystkich znaków wyrazu niezależnie od tego, czy tekst jest wyświetlany w pionie. W tym przykładzie wymaga formularz, który zawiera <xref:System.Windows.Forms.RichTextBox> formantu o nazwie `richTextBox1`.  
  
 [!code-cpp[RichTextBox.ZoomFactor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.ZoomFactor/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.ZoomFactor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.ZoomFactor/CS/form1.cs#1)]
 [!code-vb[RichTextBox.ZoomFactor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.ZoomFactor/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Określona wartość była mniejsza od zera.</exception>
      </Docs>
    </Member>
    <Member MemberName="Rtf">
      <MemberSignature Language="C#" Value="public string Rtf { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Rtf" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.Rtf" />
      <MemberSignature Language="VB.NET" Value="Public Property Rtf As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Rtf { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Rtf : string with get, set" Usage="System.Windows.Forms.RichTextBox.Rtf" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst <see cref="T:System.Windows.Forms.RichTextBox" /> formantu, w tym wszystkie kody sformatowany (RTF) tekstu sformatowanego.</summary>
        <value>Tekst formantu w formacie RTF.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tę właściwość, aby tekst sformatowany RTF miejsce służy do formantu do wyświetlania lub można wyodrębnić tekst formantu określony formatowania RTF zdefiniowane w tekście formantu. Ta właściwość jest zwykle używana, gdy z innego źródła RTF, takich jak Microsoft Word czy WordPad systemu Windows przypisujesz tekst w formacie RTF do kontrolki.  
  
 Jeśli zmienisz <xref:System.Windows.Forms.Control.RightToLeft%2A> właściwości w czasie wykonywania tylko nieprzetworzony tekst bez formatowania są zachowywane.  
  
 Kodów RTF, zobacz "tekstu sformatowanego format specyfikacji (RTF), w wersji 1.6" w bibliotece MSDN pod http://msdn.microsoft.com/library.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Text" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SaveFile">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zapisuje zawartość <see cref="T:System.Windows.Forms.RichTextBox" /> do pliku.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SaveFile">
      <MemberSignature Language="C#" Value="public void SaveFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.SaveFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveFile (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveFile(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.SaveFile : string -&gt; unit" Usage="richTextBox.SaveFile path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Nazwa i lokalizacja pliku do zapisania.</param>
        <summary>Zapisuje zawartość <see cref="T:System.Windows.Forms.RichTextBox" /> do pliku RTF sformatowany (RTF).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> Metoda umożliwia zapisać całą zawartość formantu w pliku RTF, które mogą być używane przez inne programy, takie jak Microsoft Word i WordPad systemu Windows. Jeśli nazwa pliku, który jest przekazywany do `path` parametru już istnieje w określonym katalogu, plik zostanie zastąpiony bez uprzedzenia. Można użyć <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> metodę, aby załadować zawartość pliku do <xref:System.Windows.Forms.RichTextBox>.  
  
> [!NOTE]
>  Aby zapisać zawartości formantu na inny typ formatu pliku, np. tekst w formacie ASCII, użyj tej metody, która akceptuje wartości z innych wersji <xref:System.Windows.Forms.RichTextBoxStreamType> wyliczenie jako parametr.  
  
   
  
## Examples  
 Poniższy przykład kodu zapisuje zawartość <xref:System.Windows.Forms.RichTextBox> formantu w pliku RTF. W przykładzie użyto <xref:System.Windows.Forms.SaveFileDialog> klasę, aby wyświetlić okno dialogowe do żądania od użytkownika, ścieżka i nazwa pliku do zapisania. Kod następnie zapisuje plik przy założeniu, że zawartość jest w formacie RTF. Jeśli plik już istnieje, jest automatycznie zastąpione. W tym przykładzie wymaga, aby kod jest umieszczane w <xref:System.Windows.Forms.Form> klasy, która ma <xref:System.Windows.Forms.RichTextBox> formantu o nazwie `richTextBox1`.  
  
 [!code-cpp[Classic RichTextBox.SaveFile Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox.SaveFile Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox.SaveFile Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox.SaveFile Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox.SaveFile Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox.SaveFile Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpi błąd podczas zapisywania zawartości formantu w pliku.</exception>
        <altmember cref="M:System.Windows.Forms.RichTextBox.LoadFile(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SaveFile">
      <MemberSignature Language="C#" Value="public void SaveFile (System.IO.Stream data, System.Windows.Forms.RichTextBoxStreamType fileType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveFile(class System.IO.Stream data, valuetype System.Windows.Forms.RichTextBoxStreamType fileType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.SaveFile(System.IO.Stream,System.Windows.Forms.RichTextBoxStreamType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveFile (data As Stream, fileType As RichTextBoxStreamType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveFile(System::IO::Stream ^ data, System::Windows::Forms::RichTextBoxStreamType fileType);" />
      <MemberSignature Language="F#" Value="member this.SaveFile : System.IO.Stream * System.Windows.Forms.RichTextBoxStreamType -&gt; unit" Usage="richTextBox.SaveFile (data, fileType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="fileType" Type="System.Windows.Forms.RichTextBoxStreamType" />
      </Parameters>
      <Docs>
        <param name="data">Strumień danych, który zawiera plik, aby zapisać.</param>
        <param name="fileType">Jeden z <see cref="T:System.Windows.Forms.RichTextBoxStreamType" /> wartości.</param>
        <summary>Zapisuje zawartość <see cref="T:System.Windows.Forms.RichTextBox" /> kontroli w strumieniu danych otwartych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wersja <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> metody umożliwia zapisanie całą zawartość formantu w strumieniu danych, który jest już otwarty. Strumień danych można następnie zapisać informacji do pliku. Można użyć <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> metodę, aby załadować zawartość pliku do <xref:System.Windows.Forms.RichTextBox>.  
  
 Ta wersja <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> metoda umożliwia również określić format danych informacji, które zostaną wysłane do <xref:System.IO.Stream> obiektu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, za pomocą <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> i <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> metody strumieni. Ilustruje też przy użyciu <xref:System.Windows.Forms.FileDialog.FileName%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.FileDialog.DefaultExt%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.SaveFileDialog.CreatePrompt%2A?displayProperty=nameWithType>, i <xref:System.Windows.Forms.SaveFileDialog.OverwritePrompt%2A?displayProperty=nameWithType> elementów członkowskich.  
  
 Jest to pełny przykład, który jest gotowy do uruchomienia podczas kopiowania do projektu.  
  
 [!code-cpp[System.Windows.Forms.RichTextBoxSaveFile#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxSaveFile/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.RichTextBoxSaveFile#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxSaveFile/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.RichTextBoxSaveFile#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxSaveFile/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Określono nieprawidłowy typ pliku w <paramref name="fileType" /> parametru.</exception>
        <exception cref="T:System.IO.IOException">Wystąpi błąd podczas zapisywania zawartości formantu w pliku.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">do tworzenia lub modyfikowania pliku. Wyliczenie skojarzone: <see langword="Write" /> wartość <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.</permission>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="M:System.Windows.Forms.RichTextBox.LoadFile(System.String)" />
        <altmember cref="T:System.Windows.Forms.RichTextBoxStreamType" />
      </Docs>
    </Member>
    <Member MemberName="SaveFile">
      <MemberSignature Language="C#" Value="public void SaveFile (string path, System.Windows.Forms.RichTextBoxStreamType fileType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveFile(string path, valuetype System.Windows.Forms.RichTextBoxStreamType fileType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.SaveFile(System.String,System.Windows.Forms.RichTextBoxStreamType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveFile (path As String, fileType As RichTextBoxStreamType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveFile(System::String ^ path, System::Windows::Forms::RichTextBoxStreamType fileType);" />
      <MemberSignature Language="F#" Value="member this.SaveFile : string * System.Windows.Forms.RichTextBoxStreamType -&gt; unit" Usage="richTextBox.SaveFile (path, fileType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="fileType" Type="System.Windows.Forms.RichTextBoxStreamType" />
      </Parameters>
      <Docs>
        <param name="path">Nazwa i lokalizacja pliku do zapisania.</param>
        <param name="fileType">Jeden z <see cref="T:System.Windows.Forms.RichTextBoxStreamType" /> wartości.</param>
        <summary>Zapisuje zawartość <see cref="T:System.Windows.Forms.RichTextBox" /> dla określonego typu pliku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> Metoda umożliwia zapisać całą zawartość formantu w pliku RTF, które mogą być używane przez inne programy, takie jak Microsoft Word i WordPad systemu Windows. Jeśli nazwa pliku, który jest przekazywany do `path` parametru już istnieje w określonym katalogu, plik zostanie zastąpiony bez uprzedzenia. Można użyć <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> metodę, aby załadować zawartość pliku do <xref:System.Windows.Forms.RichTextBox>.  
  
 Ta wersja <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> metody można określić typ pliku, aby zapisać zawartość formantu. Ta funkcja służy do zapewnienia, że plik został zapisany w nieprawidłowym formacie na podstawie zawartości formantu. Na przykład, jeśli dokument nie ma żadnych różnic w stylu czcionki lub kolorowanie, możesz zapisać plik jako plik tekstowy ASCII, ustawiając `fileType` parametr `RichTextBoxStreamType.PlainText`.  
  
   
  
## Examples  
 Poniższy przykład kodu zapisuje zawartość <xref:System.Windows.Forms.RichTextBox> do pliku tekstowego ASCII. W przykładzie użyto <xref:System.Windows.Forms.SaveFileDialog> klasę, aby wyświetlić okno dialogowe, aby zażądać ścieżkę i nazwę użytkownika. Kod następnie zapisuje zawartość formantu do tego pliku. W przykładzie użyto tej wersji <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> metodę, aby określić, że plik można zapisać jako plik tekstowy ASCII, zamiast formatu tekstu sformatowanego standardowego. W tym przykładzie wymaga, aby kod jest umieszczane w <xref:System.Windows.Forms.Form> klasy, która ma <xref:System.Windows.Forms.RichTextBox> formantu o nazwie `richTextBox1`.  
  
 [!code-cpp[Classic RichTextBox.SaveFile1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox.SaveFile1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox.SaveFile1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox.SaveFile1 Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox.SaveFile1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox.SaveFile1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Określono nieprawidłowy typ pliku w <paramref name="fileType" /> parametru.</exception>
        <exception cref="T:System.IO.IOException">Wystąpi błąd podczas zapisywania zawartości formantu w pliku.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">do tworzenia lub modyfikowania pliku. Wyliczenie skojarzone: <see langword="Write" /> wartość <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.</permission>
        <altmember cref="M:System.Windows.Forms.RichTextBox.LoadFile(System.String)" />
        <altmember cref="T:System.Windows.Forms.RichTextBoxStreamType" />
      </Docs>
    </Member>
    <Member MemberName="ScrollBars">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.RichTextBoxScrollBars ScrollBars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.RichTextBoxScrollBars ScrollBars" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.ScrollBars" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollBars As RichTextBoxScrollBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::RichTextBoxScrollBars ScrollBars { System::Windows::Forms::RichTextBoxScrollBars get(); void set(System::Windows::Forms::RichTextBoxScrollBars value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollBars : System.Windows.Forms.RichTextBoxScrollBars with get, set" Usage="System.Windows.Forms.RichTextBox.ScrollBars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RichTextBoxScrollBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ pasków przewijania wyświetlanych w <see cref="T:System.Windows.Forms.RichTextBox" /> formantu.</summary>
        <value>Jeden z <see cref="T:System.Windows.Forms.RichTextBoxScrollBars" /> wartości. Wartość domyślna to <see langword="RichTextBoxScrollBars.Both" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia podanie paski przewijania w poziomie i w pionie do użytkownika <xref:System.Windows.Forms.RichTextBox> formantu, aby włączyć przewijania tekstu wewnątrz formantu, który znajduje się poza wymiary fizyczne formantu. Ta właściwość umożliwia także usuwanie pasków przewijania z formantu do ograniczenia przewijanie zawartości formantu.  
  
> [!NOTE]
>  Paski przewijania w poziomie nie będą wyświetlane Jeśli <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> jest `true`, niezależnie od wartości <xref:System.Windows.Forms.RichTextBox.ScrollBars%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Określona wartość nie jest zdefiniowany w <see cref="T:System.Windows.Forms.RichTextBoxScrollBars" /> wyliczenia.</exception>
        <altmember cref="T:System.Windows.Forms.RichTextBoxScrollBars" />
      </Docs>
    </Member>
    <Member MemberName="SelectedRtf">
      <MemberSignature Language="C#" Value="public string SelectedRtf { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedRtf" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectedRtf" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedRtf As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedRtf { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedRtf : string with get, set" Usage="System.Windows.Forms.RichTextBox.SelectedRtf" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst sformatowany (RTF) sformatowany aktualnie zaznaczonego tekstu sformatowanego w formancie.</summary>
        <value>Zaznaczony tekst w formacie RTF w formancie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia uzyskiwanie zaznaczonego tekstu w formancie, łącznie z RTF kody formatowania. Ta właściwość służy do skopiowania tekstu formantu, wraz z formatowaniem i Wklej tekstu w innych aplikacjach, które akceptują RTF sformatowanego tekstu, na przykład Microsoft Word i WordPad systemu Windows. Aby uzyskać zaznaczonego tekstu bez formatowania kody RTF, należy użyć <xref:System.Windows.Forms.TextBoxBase.SelectedText%2A> właściwości.  
  
 Jeśli obecnie nie zaznaczono żadnych tekstu, tekst określony w tej właściwości jest dodaje punkt wstawiania. Jeśli zaznaczono tekstu, tekst przypisany do tej właściwości zastępuje zaznaczonego tekstu.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.RichTextBox.Rtf" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectedText" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Text" />
      </Docs>
    </Member>
    <Member MemberName="SelectedText">
      <MemberSignature Language="C#" Value="public override string SelectedText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectedText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SelectedText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SelectedText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedText : string with get, set" Usage="System.Windows.Forms.RichTextBox.SelectedText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst wybranego w ramach <see cref="T:System.Windows.Forms.RichTextBox" />.</summary>
        <value>Ciąg, który reprezentuje zaznaczonego tekstu w formancie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.RichTextBox.SelectionBullet%2A> właściwości o <xref:System.Windows.Forms.RichTextBox.SelectionFont%2A>, <xref:System.Windows.Forms.RichTextBox.SelectedText%2A>, i <xref:System.Windows.Forms.RichTextBox.SelectionColor%2A> właściwości w celu utworzenia listy punktowanej w <xref:System.Windows.Forms.RichTextBox> formantu. W tym przykładzie wymaga, aby <xref:System.Windows.Forms.RichTextBox> formantu o nazwie `richTextBox1` jest tworzony w formularzu.  
  
 [!code-cpp[RichTextBox.SelectionBullet#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.SelectionBullet/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.SelectionBullet#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.SelectionBullet/CS/form1.cs#1)]
 [!code-vb[RichTextBox.SelectionBullet#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.SelectionBullet/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HorizontalAlignment SelectionAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.HorizontalAlignment SelectionAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionAlignment As HorizontalAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HorizontalAlignment SelectionAlignment { System::Windows::Forms::HorizontalAlignment get(); void set(System::Windows::Forms::HorizontalAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionAlignment : System.Windows.Forms.HorizontalAlignment with get, set" Usage="System.Windows.Forms.RichTextBox.SelectionAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HorizontalAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia wyrównanie do zastosowania do bieżącego punkt wstawiania ani zaznaczenia.</summary>
        <value>Jeden z <see cref="T:System.Windows.Forms.HorizontalAlignment" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli zaznaczono żadnego akapitu w formancie, ustawienie dla tej właściwości dotyczy ustawienie wyrównania akapitu, w której punkt wstawiania znajduje się także dotyczące akapitów utworzone po akapit, który ma ustawienie właściwości wyrównania. Na przykład, jeśli istnieją dwie akapitów <xref:System.Windows.Forms.RichTextBox> kontroli i punkt wstawiania znajduje się w drugim akapitu. Jeśli ustawisz <xref:System.Windows.Forms.RichTextBox.SelectionAlignment%2A> właściwości `HorizontalAlignment.Center`, akapitu punkt wstawiania będzie wyśrodkowana wewnątrz formantu. Jeśli ust jest tworzony po akapit, również jest wyrównywany do centrum kontroli.  
  
 Jeśli zaznaczenie jest w formancie, gdy właściwość jest ustawiona, wszystkie akapity wybrane są wyrównane oparte na ustawienie właściwości. Ta właściwość umożliwia wyrównywanie akapitów w dokumencie tworzony w <xref:System.Windows.Forms.RichTextBox>. Na przykład, jeśli chcesz, aby wszystkie akapity w dokumencie do wyśrodkowany, można wybrać wszystkich akapitów w formancie i ustawić <xref:System.Windows.Forms.RichTextBox.SelectionAlignment%2A> właściwości `HorizontalAlignment.Center`.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.RichTextBox.SelectionAlignment%2A> Zwraca `SelectionAlignment.Left` gdy zaznaczenie tekstu zawiera wiele akapitów z mieszanym wyrównania.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób wyrównania tekstu w <xref:System.Windows.Forms.RichTextBox>. W tym przykładzie wymaga, aby <xref:System.Windows.Forms.RichTextBox> formantu o nazwie `richTextBox1`, został dodany do formularza.  
  
 [!code-cpp[RichTextBox.SelectionAlignment#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.SelectionAlignment/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.SelectionAlignment#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.SelectionAlignment/CS/form1.cs#1)]
 [!code-vb[RichTextBox.SelectionAlignment#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.SelectionAlignment/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Określona wartość nie jest jedną z wartości zdefiniowanych w <see cref="T:System.Windows.Forms.HorizontalAlignment" /> klasy.</exception>
        <altmember cref="T:System.Windows.Forms.HorizontalAlignment" />
      </Docs>
    </Member>
    <Member MemberName="SelectionBackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color SelectionBackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color SelectionBackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionBackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color SelectionBackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionBackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.RichTextBox.SelectionBackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor tekstu zaznaczenie tekstu <see cref="T:System.Windows.Forms.RichTextBox" /> formantu.</summary>
        <value>A <see cref="T:System.Drawing.Color" /> reprezentujący kolor tekstu w przypadku wybrania tekst. Wartość domyślna to wartość <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Windows.Forms.RichTextBox.SelectionBackColor%2A> można pobrać lub ustawić kolor tekstu zaznaczonego w <xref:System.Windows.Forms.RichTextBox>. Jeśli obecnie nie zaznaczono żadnych tekstu, <xref:System.Windows.Forms.RichTextBox.SelectionBackColor%2A> właściwość ma zastosowanie do bieżącego położenia karetki. Znaki, które zostaną wprowadzone w tym miejscu ma określony <xref:System.Windows.Forms.RichTextBox.SelectionBackColor%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBullet">
      <MemberSignature Language="C#" Value="public bool SelectionBullet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SelectionBullet" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionBullet" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionBullet As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SelectionBullet { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionBullet : bool with get, set" Usage="System.Windows.Forms.RichTextBox.SelectionBullet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy styl punktora jest stosowany do bieżącego punkt wstawiania ani zaznaczenia.</summary>
        <value>
          <see langword="true" /> Jeśli do bieżącego punkt wstawiania ani zaznaczenie ma styl punktora; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie zaznaczono żadnych tekstu, styl punktora jest stosowane do bieżącego punkt wstawiania oraz do wszystkich akapitów, które użytkownik wprowadza od punktu wstawiania. Styl punktora jest stosowany do tekst formantu, dopóki punkt wstawiania jest przenoszony lub gdy użytkownik naciśnie klawisz Enter w elemencie Punktor pusty.  
  
 Jeśli tekst jest zaznaczony w formancie, gdy ta właściwość jest ustawiona, wszystkie akapity w zaznaczonym tekście są konwertowane na punktowaną elementów na liście. Ta właściwość umożliwia utworzenie listy punktowane w dokumentach, możesz utworzyć w <xref:System.Windows.Forms.RichTextBox> formantu.  
  
 <xref:System.Windows.Forms.RichTextBox.BulletIndent%2A> Właściwości można określić wielkość wcięcia dotyczyć między punktor i tekst elementu listy punktowane.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.RichTextBox.SelectionBullet%2A> właściwości o <xref:System.Windows.Forms.RichTextBox.SelectionFont%2A>, <xref:System.Windows.Forms.RichTextBox.SelectedText%2A>, i <xref:System.Windows.Forms.RichTextBox.SelectionColor%2A> właściwości w celu utworzenia listy punktowanej w <xref:System.Windows.Forms.RichTextBox> formantu. W tym przykładzie wymaga, aby <xref:System.Windows.Forms.RichTextBox> formantu o nazwie `richTextBox1` jest tworzony w formularzu.  
  
 [!code-cpp[RichTextBox.SelectionBullet#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.SelectionBullet/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.SelectionBullet#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.SelectionBullet/CS/form1.cs#1)]
 [!code-vb[RichTextBox.SelectionBullet#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.SelectionBullet/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.RichTextBox.BulletIndent" />
      </Docs>
    </Member>
    <Member MemberName="SelectionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.SelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectionChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectionChanged : EventHandler " Usage="member this.SelectionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zmianie zaznaczenia tekstu wewnątrz formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można utworzyć program obsługi zdarzeń dla tego zdarzenia do określania, kiedy użytkownik zmienił się zaznaczenie tekstu wewnątrz formantu. Program obsługi zdarzeń dla tego zdarzenia może służyć do zachowania tekstu zaznaczonego aż do zakończenia zadań w aplikacji użytkownika.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.RichTextBox.SelectionChanged> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.RichTextBox> o nazwie `RichTextBox1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.RichTextBox.SelectionChanged> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#544](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#544)]
 [!code-vb[System.Windows.Forms.EventExamples#544](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#544)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionCharOffset">
      <MemberSignature Language="C#" Value="public int SelectionCharOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionCharOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionCharOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionCharOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionCharOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionCharOffset : int with get, set" Usage="System.Windows.Forms.RichTextBox.SelectionCharOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia, czy tekst w formancie zostanie wyświetlony na linii bazowej, jak górny lub dolny poniżej linii bazowej.</summary>
        <value>Liczba, która określa przesunięcie znaków.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość tej właściwości musi należeć do zakresu od -2000 i 2000.  
  
 Jeśli ta właściwość jest ustawiona na wartość zero, tekst jest wyświetlany na linii bazowej. Jeśli jest liczbą dodatnią, liczba Określa liczbę pikseli, o którą należy podnieść zaznaczenie tekstu powyżej linii bazowej. Jeśli jest liczbą ujemną, ta liczba Określa liczbę pikseli, za pomocą którego indeks zaznaczonego tekstu. Ta właściwość służy do określenia tekstu jako indeks górny lub dolny.  
  
 Jeśli nie zaznaczono żadnych tekstu, przesunięcie jest stosowane do bieżącego punkt wstawiania i cały tekst, że użytkownik wpisze od punktu wstawiania. Przesunięcie znaków ma zastosowanie do momentu zmiany właściwości innej wartości lub punkt wstawiania jest przenoszony do innej sekcji wewnątrz formantu.  
  
 Zaznaczenie tekstu wewnątrz formantu zaznaczonego tekstu i tekst wprowadzony po zaznaczenie tekstu będzie mieć wartość tej właściwości stosowane do niego. Ta właściwość służy do tworzenia indeksu górnego i dolnego tekst dla takich aplikacji jako wyrażeń matematycznych.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób określenia indeksu górnego i dolnego tekst wewnątrz <xref:System.Windows.Forms.RichTextBox> przy użyciu <xref:System.Windows.Forms.RichTextBox.SelectionCharOffset%2A> właściwości. W tym przykładzie wymaga, aby <xref:System.Windows.Forms.RichTextBox> formantu o nazwie `richTextBox1`, został dodany do formularza.  
  
 [!code-cpp[RichTextBox.SelectionCharOffset#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.SelectionCharOffset/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.SelectionCharOffset#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.SelectionCharOffset/CS/form1.cs#1)]
 [!code-vb[RichTextBox.SelectionCharOffset#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.SelectionCharOffset/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Określona wartość jest mniejsza niż -2000 lub większy niż 2000.</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectionColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color SelectionColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color SelectionColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionColor" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color SelectionColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.RichTextBox.SelectionColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor tekstu bieżącego punkt wstawiania ani zaznaczenia tekstu.</summary>
        <value>A <see cref="T:System.Drawing.Color" /> reprezentujący kolor, aby zastosować do aktualnie zaznaczonego tekstu lub do tekstu, wprowadzony po wstawieniu punktu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli aktualnie zaznaczonego tekstu ma więcej niż jeden kolor określone, ta właściwość zwraca `Color.Empty`. Jeśli obecnie nie zaznaczono żadnych tekstu, kolor tekstu określone w tej właściwości jest stosowane do bieżącego punkt wstawiania i cały tekst, który bezpośrednio po punkt wstawiania w formancie. Ustawienie koloru tekstu ma zastosowanie do momentu zmiany właściwości innego koloru lub do momentu punkt wstawiania jest przenoszony do innej sekcji wewnątrz formantu.  
  
 Zaznaczenie tekstu wewnątrz formantu zaznaczonego tekstu i tekst wprowadzony po zaznaczenie tekstu będzie mieć wartość tej właściwości stosowane do niego. Ta właściwość umożliwia zmianę koloru tekstu w <xref:System.Windows.Forms.RichTextBox>.  
  
 Aby pogrubienie tekstu w formancie, należy użyć <xref:System.Windows.Forms.RichTextBox.SelectionFont%2A> właściwość do przypisania nowej czcionki, którego określony styl pogrubioną czcionką.  
  
   
  
## Examples  
 Poniższy kod przedstawia przykład <xref:System.Windows.Forms.ColorDialog> użytkownikowi, aby określić kolor dla aktualnie zaznaczonego tekstu lub w tekście wprowadzanym po wstawieniu bieżącego punktu w <xref:System.Windows.Forms.RichTextBox> formantu. W tym przykładzie wymaga dodania do metody zdefiniowane w tym przykładzie <xref:System.Windows.Forms.Form> klasę, która zawiera <xref:System.Windows.Forms.RichTextBox> formantu o nazwie `richTextBox1`.  
  
 [!code-cpp[Classic RichTextBox.SelectionColor Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox.SelectionColor Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox.SelectionColor Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox.SelectionColor Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox.SelectionColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox.SelectionColor Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.RichTextBox.SelectionFont" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SelectionFont">
      <MemberSignature Language="C#" Value="public System.Drawing.Font SelectionFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font SelectionFont" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionFont" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionFont As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ SelectionFont { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionFont : System.Drawing.Font with get, set" Usage="System.Windows.Forms.RichTextBox.SelectionFont" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia czcionkę bieżącego punkt wstawiania ani zaznaczenia tekstu.</summary>
        <value>A <see cref="T:System.Drawing.Font" /> reprezentujący czcionkę, aby zastosować do aktualnie zaznaczonego tekstu lub do tekstu, wprowadzony po wstawieniu punktu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli aktualnie zaznaczonego tekstu ma więcej niż jedną czcionkę określone, ta właściwość jest `null`. Jeśli obecnie nie zaznaczono żadnych tekstu, czcionek określone w tej właściwości jest stosowane do bieżącego punkt wstawiania i cały tekst, który bezpośrednio po punkt wstawiania w formancie. Ustawienia czcionki ma zastosowanie do momentu zmiany właściwości czcionkę lub dopóki punkt wstawiania jest przenoszony do innej sekcji wewnątrz formantu.  
  
 Zaznaczenie tekstu wewnątrz formantu zaznaczonego tekstu i tekst wprowadzony po zaznaczenie tekstu będzie mieć wartość tej właściwości stosowane do niego. Ta właściwość służy do zmiany styl czcionki tekstu w <xref:System.Windows.Forms.RichTextBox>. Pogrubienie, kursywa i podkreślony, możesz wprowadzić tekst w formancie. Możesz również zmienić rozmiar tekstu i czcionki tekstu.  
  
 Aby zmienić kolor tekstu w formancie, użyj <xref:System.Windows.Forms.RichTextBox.SelectionColor%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu zmienia bieżący styl bold czcionki dla zaznaczonego tekstu lub w tekście wprowadzanym po punktu wstawiania w ramach <xref:System.Windows.Forms.RichTextBox> formantu. W tym przykładzie wymaga się, że kod znajduje się w obrębie metody w <xref:System.Windows.Forms.Form>. Przykład wymaga również, aby <xref:System.Windows.Forms.RichTextBox>nazwanego `richTextBox1`, został dodany do <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[Classic RichTextBox.SelectionFont Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox.SelectionFont Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox.SelectionFont Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox.SelectionFont Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox.SelectionFont Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox.SelectionFont Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.RichTextBox.SelectionColor" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SelectionHangingIndent">
      <MemberSignature Language="C#" Value="public int SelectionHangingIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionHangingIndent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionHangingIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionHangingIndent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionHangingIndent { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionHangingIndent : int with get, set" Usage="System.Windows.Forms.RichTextBox.SelectionHangingIndent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia odległość między lewą krawędź pierwszego wiersza tekstu zaznaczonego akapitu i lewej krawędzi kolejnych wierszy w tym samym obiekcie paragraph.</summary>
        <value>Odległość w pikselach wysunięcie zastosowane do aktualnie zaznaczonego tekstu lub punkt wstawiania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli obecnie nie zaznaczono żadnych tekstu, wysunięcie została zastosowana do akapitu, w której znajduje się punkt wstawiania i cały tekst, który bezpośrednio po punkt wstawiania w formancie. Zwisa ustawienie wcięcie stosowane do momentu zmiany właściwości innej wartości lub punkt wstawiania jest przenoszony do innego akapitu wewnątrz formantu.  
  
 Zaznaczenie tekstu wewnątrz formantu zaznaczonego tekstu i tekst wprowadzony po zaznaczenie tekstu będzie mieć wartość tej właściwości stosowane do niego. Ta właściwość służy do zastosowania Wysunięcie na nim.  
  
 Aby ustawić wcięcie pierwszego wiersza zaznaczania akapitów, użyj <xref:System.Windows.Forms.RichTextBox.SelectionIndent%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób określania wcięcia wiszące w <xref:System.Windows.Forms.RichTextBox> przy użyciu <xref:System.Windows.Forms.RichTextBox.SelectionHangingIndent%2A> właściwości. W tym przykładzie wymaga, aby <xref:System.Windows.Forms.RichTextBox> formantu o nazwie `richTextBox1`, został dodany do formularza.  
  
 [!code-cpp[RichTextBox.SelectionHangingIndent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.SelectionHangingIndent/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.SelectionHangingIndent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.SelectionHangingIndent/CS/form1.cs#1)]
 [!code-vb[RichTextBox.SelectionHangingIndent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.SelectionHangingIndent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.RichTextBox.SelectionIndent" />
      </Docs>
    </Member>
    <Member MemberName="SelectionIndent">
      <MemberSignature Language="C#" Value="public int SelectionIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionIndent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionIndent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionIndent { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionIndent : int with get, set" Usage="System.Windows.Forms.RichTextBox.SelectionIndent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia długość wyrażoną w pikselach wcięcie wiersza, w którym rozpoczyna się zaznaczenie.</summary>
        <value>Bieżący odległość w pikselach wcięcie stosowane na lewo od bieżącego zaznaczenia tekstu lub punkt wstawiania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli obecnie nie zaznaczono żadnych tekstu, ustawienie wcięcia jest stosowane do akapitu, w której znajduje się punkt wstawiania i cały tekst, który bezpośrednio po punkt wstawiania w formancie. Ustawienia wcięć ma zastosowanie do momentu zmiany właściwości innej wartości lub punkt wstawiania jest przenoszony do innego akapitu wewnątrz formantu.  
  
 Zaznaczenie tekstu wewnątrz formantu zaznaczonego tekstu i tekst wprowadzony po zaznaczenie tekstu będzie mieć wartość tej właściwości stosowane do niego. Ta właściwość umożliwia wcięcie akapitów zawarte w dokumencie programu <xref:System.Windows.Forms.RichTextBox>. Tej właściwości można użyć w połączeniu z <xref:System.Windows.Forms.RichTextBox.SelectionRightIndent%2A> utworzyć akapitów wyświetlane w punktach.  
  
 Aby utworzyć wysunięcie akapitów w formancie, użyj <xref:System.Windows.Forms.RichTextBox.SelectionHangingIndent%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób określania wcięcia tekstu w <xref:System.Windows.Forms.RichTextBox> przy użyciu <xref:System.Windows.Forms.RichTextBox.SelectionIndent%2A> właściwości. W tym przykładzie wymaga, aby <xref:System.Windows.Forms.RichTextBox> formantu o nazwie `richTextBox1`, został dodany do formularza.  
  
 [!code-cpp[RichTextBox.SelectionIndent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.SelectionIndent/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.SelectionIndent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.SelectionIndent/CS/form1.cs#1)]
 [!code-vb[RichTextBox.SelectionIndent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.SelectionIndent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.RichTextBox.SelectionRightIndent" />
        <altmember cref="P:System.Windows.Forms.RichTextBox.SelectionHangingIndent" />
      </Docs>
    </Member>
    <Member MemberName="SelectionLength">
      <MemberSignature Language="C#" Value="public override int SelectionLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SelectionLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectionLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionLength : int with get, set" Usage="System.Windows.Forms.RichTextBox.SelectionLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę znaków zaznaczony w formancie.</summary>
        <value>Liczba znaków zaznaczonych w polu tekstowym.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy do określenia, czy wszystkie znaki aktualnie zaznaczonych w polu tekstowym przed wykonaniem operacji na zaznaczonego tekstu. Ta właściwość również służy do określenia całkowita liczba znaków (łącznie ze spacjami), które są wybrane, podczas wykonywania pojedynczy znak zadania w programie `for` pętli.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.RichTextBox.SelectionLength%2A> właściwości w celu określenia, czy tekst zaznaczony w <xref:System.Windows.Forms.RichTextBox>. W tym przykładzie wymaga, aby <xref:System.Windows.Forms.RichTextBox> formantu o nazwie `richTextBox1`, został dodany do formularza. Przykład wymaga również, aby `richTextBox1` zawiera tekstu zaznaczonego w formancie.  
  
 [!code-cpp[RichTextBox.SelectionLength#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.SelectionLength/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.SelectionLength#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.SelectionLength/CS/form1.cs#1)]
 [!code-vb[RichTextBox.SelectionLength#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.SelectionLength/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectedText" />
      </Docs>
    </Member>
    <Member MemberName="SelectionProtected">
      <MemberSignature Language="C#" Value="public bool SelectionProtected { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SelectionProtected" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionProtected" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionProtected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SelectionProtected { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionProtected : bool with get, set" Usage="System.Windows.Forms.RichTextBox.SelectionProtected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy chroniony jest aktualnie zaznaczonego tekstu.</summary>
        <value>
          <see langword="true" /> Jeśli bieżące zaznaczenie uniemożliwia wszelkie zmiany do jego zawartości; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli obecnie nie zaznaczono żadnych tekstu, ustawienie ochrony jest stosowane do akapitu, w której znajduje się punkt wstawiania i cały tekst, który bezpośrednio po punkt wstawiania w formancie. Ustawienia ochrony ma zastosowanie do momentu zmiany właściwości innej wartości lub punkt wstawiania jest przenoszony do innego akapitu wewnątrz formantu.  
  
 Zaznaczenie tekstu wewnątrz formantu zaznaczonego tekstu i tekst wprowadzony po zaznaczenie tekstu będzie mieć wartość tej właściwości stosowane do niego. Ta właściwość służy do uniemożliwia użytkownikowi modyfikowanie fragmentów tekstu wewnątrz formantu.  
  
 Jeśli ta właściwość jest ustawiona na `true`, <xref:System.Windows.Forms.RichTextBox.Protected> zdarzenie jest zgłaszane, gdy użytkownik próbuje zmienić aktualnie zaznaczonego tekstu.  
  
> [!NOTE]
>  Ta właściwość będzie zwracać `true` tylko wtedy, gdy całe zaznaczenie w formancie zawiera chronionej zawartości.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób określania chroniony tekst w <xref:System.Windows.Forms.RichTextBox> przy użyciu <xref:System.Windows.Forms.RichTextBox.SelectionProtected%2A> właściwości. W tym przykładzie wymaga, aby <xref:System.Windows.Forms.RichTextBox> formantu o nazwie `richTextBox1`, został dodany do formularza i że <xref:System.Windows.Forms.RichTextBox> kontrolka ma do niego dodana tekstu, zawierający słowo "RichTextBox."  
  
 [!code-cpp[RichTextBox.SelectionProtected#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.SelectionProtected/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.SelectionProtected#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.SelectionProtected/CS/form1.cs#1)]
 [!code-vb[RichTextBox.SelectionProtected#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.SelectionProtected/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.RichTextBox.Protected" />
      </Docs>
    </Member>
    <Member MemberName="SelectionRightIndent">
      <MemberSignature Language="C#" Value="public int SelectionRightIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionRightIndent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionRightIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionRightIndent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionRightIndent { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionRightIndent : int with get, set" Usage="System.Windows.Forms.RichTextBox.SelectionRightIndent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Odległość (w pikselach) między prawą krawędzią <see cref="T:System.Windows.Forms.RichTextBox" /> kontroli i prawej krawędzi tekstu, który jest zaznaczone lub dodać do bieżącego punkt wstawiania.</summary>
        <value>Obszar wcięcia w pikselach, z prawej strony do bieżącego punkt wstawiania ani zaznaczenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli obecnie nie zaznaczono żadnych tekstu, ustawienie wcięcia jest stosowane do akapitu, w której znajduje się punkt wstawiania i cały tekst, który bezpośrednio po punkt wstawiania w formancie. Ustawienia wcięć ma zastosowanie do momentu zmiany właściwości innej wartości lub punkt wstawiania jest przenoszony do innego akapitu wewnątrz formantu.  
  
 Zaznaczenie tekstu wewnątrz formantu zaznaczonego tekstu i tekst wprowadzony po zaznaczenie tekstu będzie mieć wartość tej właściwości stosowane do niego. Ta właściwość umożliwia wcięcie akapitów zawarte w dokumencie programu <xref:System.Windows.Forms.RichTextBox>. Tej właściwości można użyć w połączeniu z <xref:System.Windows.Forms.RichTextBox.SelectionIndent%2A> utworzyć akapitów wyświetlane w punktach.  
  
 Aby utworzyć wysunięcie akapitów w formancie, użyj <xref:System.Windows.Forms.RichTextBox.SelectionHangingIndent%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób tworzenia prawy margines w <xref:System.Windows.Forms.RichTextBox> przy użyciu <xref:System.Windows.Forms.RichTextBox.SelectionRightIndent%2A> właściwości. Przykład wymaga formularz, który zawiera <xref:System.Windows.Forms.RichTextBox> formantu o nazwie `richTextBox1`, a przykładowy kod jest wywoływana z zdarzenia w klasie formularza.  
  
 [!code-cpp[RichTextBox.SelectionRightIndent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.SelectionRightIndent/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.SelectionRightIndent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.SelectionRightIndent/CS/form1.cs#1)]
 [!code-vb[RichTextBox.SelectionRightIndent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.SelectionRightIndent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionTabs">
      <MemberSignature Language="C#" Value="public int[] SelectionTabs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] SelectionTabs" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionTabs" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionTabs As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;int&gt; ^ SelectionTabs { cli::array &lt;int&gt; ^ get(); void set(cli::array &lt;int&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionTabs : int[] with get, set" Usage="System.Windows.Forms.RichTextBox.SelectionTabs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia bezwzględny kartę stop pozycji w <see cref="T:System.Windows.Forms.RichTextBox" /> formantu.</summary>
        <value>Tablica, w którym każdy element członkowski określa przesunięcie kartę, w pikselach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość pozwala uzyskać tablicę zawierającą odstępy dla każdej karty w aktualnie zaznaczonego tekstu w <xref:System.Windows.Forms.RichTextBox> formantu. Ta właściwość umożliwia następnie dostosować rozmiar każdej karcie zaznaczenia tekstu. Na przykład, jeśli chcesz dostosować odstępy karcie w dokumencie można zaznacza cały dokument i uzyskać listę obszary kartę za pomocą <xref:System.Windows.Forms.RichTextBox.SelectionTabs%2A> właściwości. Można następnie dostosuj je, aby nowe wartości i przypisać je do tej właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Tablica ma więcej niż maksymalny 32 elementów.</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectionType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.RichTextBoxSelectionTypes SelectionType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.RichTextBoxSelectionTypes SelectionType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectionType As RichTextBoxSelectionTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::RichTextBoxSelectionTypes SelectionType { System::Windows::Forms::RichTextBoxSelectionTypes get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectionType : System.Windows.Forms.RichTextBoxSelectionTypes" Usage="System.Windows.Forms.RichTextBox.SelectionType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RichTextBoxSelectionTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ wyboru wewnątrz formantu.</summary>
        <value>Bitowe połączenie <see cref="T:System.Windows.Forms.RichTextBoxSelectionTypes" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy do określenia typu dane, które jest aktualnie wybrane w formancie Aby poprawnie obsłużyć zaznaczenia podczas wykonywania zadań w formancie na bieżącym zaznaczeniu. Właściwość może reprezentować dowolną kombinację wartości z <xref:System.Windows.Forms.RichTextBoxSelectionTypes> wyliczenie przedstawiające wiele typów obiektów w bieżącym zaznaczeniu.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.RichTextBox.SelectedRtf" />
      </Docs>
    </Member>
    <Member MemberName="ShowSelectionMargin">
      <MemberSignature Language="C#" Value="public bool ShowSelectionMargin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowSelectionMargin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.ShowSelectionMargin" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowSelectionMargin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowSelectionMargin { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowSelectionMargin : bool with get, set" Usage="System.Windows.Forms.RichTextBox.ShowSelectionMargin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy margines zaznaczania jest wyświetlany w <see cref="T:System.Windows.Forms.RichTextBox" />.</summary>
        <value>
          <see langword="true" /> Jeśli włączono margines zaznaczania w formancie; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy umożliwia użytkownikowi łatwe wybranie wierszy tekstu w <xref:System.Windows.Forms.RichTextBox>. Margines zaznaczania jest dodawany do lewej strony <xref:System.Windows.Forms.RichTextBox>. Margines ten ułatwia użytkownikowi na wybranie tekstu, począwszy od lewej strony kontrolki. Użytkownik może kliknij margines zaznaczania, aby wybrać pojedynczy wiersz tekstu lub kliknij dwukrotnie, aby zaznaczyć cały akapit, zawarty w wierszu podwójnie.  
  
> [!NOTE]
>  Jeśli <xref:System.Windows.Forms.RichTextBox.ShowSelectionMargin%2A> właściwość jest ustawiona na `true`, ustawienie <xref:System.Windows.Forms.RichTextBox.ScrollBars%2A> właściwości `RichTextBoxScrollBars.Horizontal`, `RichTextBoxScrollBars.Vertical`, lub `RichTextBoxScrollBars.Both` nie spowoduje paski przewijania, który będzie wyświetlany. Aby wyświetlić paski przewijania podczas <xref:System.Windows.Forms.RichTextBox.ShowSelectionMargin%2A> właściwość jest ustawiona na `true`ustaw <xref:System.Windows.Forms.RichTextBox.ScrollBars%2A> właściwości `RichTextBoxScrollBars.ForcedHorizontal`, `RichTextBoxScrollBars.ForcedVertical`, lub `RichTextBoxScrollBars.ForcedBoth`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.RichTextBox.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst w polu tekstu sformatowanego.</summary>
        <value>Tekst wyświetlany w formancie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby wyświetlać wiele wierszy tekstu w <xref:System.Windows.Forms.RichTextBox>ustaw <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> właściwości `true`. Aby odczytać lub ustawianie tekstu wielowierszowego pola tekstowego, użyj <xref:System.Windows.Forms.TextBoxBase.Lines%2A> właściwości. <xref:System.Windows.Forms.RichTextBox.Text%2A> Właściwości nie zwraca żadnych informacji o formatowanie zastosowane do zawartości <xref:System.Windows.Forms.RichTextBox>. Aby uzyskać tekstu sformatowanego (RTF) kody, należy użyć <xref:System.Windows.Forms.RichTextBox.Rtf%2A> właściwości. Fragment tekstu, które mogą być wprowadzane w <xref:System.Windows.Forms.RichTextBox> kontroli jest ograniczony tylko ilością dostępnej pamięci systemu.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Lines" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Multiline" />
      </Docs>
    </Member>
    <Member MemberName="TextLength">
      <MemberSignature Language="C#" Value="public override int TextLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.TextLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TextLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TextLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TextLength : int" Usage="System.Windows.Forms.RichTextBox.TextLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera długość tekstu w formancie.</summary>
        <value>Liczba znaków zawartych w tekst formantu.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.TextLength" />
      </Docs>
    </Member>
    <Member MemberName="UndoActionName">
      <MemberSignature Language="C#" Value="public string UndoActionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UndoActionName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.UndoActionName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UndoActionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UndoActionName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UndoActionName : string" Usage="System.Windows.Forms.RichTextBox.UndoActionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę akcji, które mogą zostać cofnięte w formancie podczas <see cref="M:System.Windows.Forms.TextBoxBase.Undo" /> metoda jest wywoływana.</summary>
        <value>Nazwa tekstu akcji, którą można cofnąć.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia określenie ostatnią akcję, która została wykonana w formancie, które można cofnąć. Ta właściwość umożliwia ograniczenie operacji można cofnąć przez użytkownika formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Undo" />
      </Docs>
    </Member>
    <Member MemberName="VScroll">
      <MemberSignature Language="C#" Value="public event EventHandler VScroll;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler VScroll" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.VScroll" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VScroll As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ VScroll;" />
      <MemberSignature Language="F#" Value="member this.VScroll : EventHandler " Usage="member this.VScroll : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy użytkownik kliknie pionowe paski przewijania formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.RichTextBox.VScroll> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.RichTextBox> o nazwie `RichTextBox1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.RichTextBox.VScroll> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#545](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#545)]
 [!code-vb[System.Windows.Forms.EventExamples#545](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#545)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc :  -&gt; unit" Usage="richTextBox.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">Obiekt komunikatów systemu Windows.</param>
        <summary>Przetwarza wiadomości systemu Windows.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZoomFactor">
      <MemberSignature Language="C#" Value="public float ZoomFactor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 ZoomFactor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.ZoomFactor" />
      <MemberSignature Language="VB.NET" Value="Public Property ZoomFactor As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float ZoomFactor { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.ZoomFactor : single with get, set" Usage="System.Windows.Forms.RichTextBox.ZoomFactor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość bieżącego powiększenia poziom <see cref="T:System.Windows.Forms.RichTextBox" />.</summary>
        <value>Współczynnik, według której jest powiększony zawartości formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość tej właściwości może należeć do zakresu od 1/64 (0.015625) i 64.0 nie włącznie. Wartość 1.0 wskazuje, że powiększenia nie jest stosowana do formantu. Funkcja powiększenia działa optymalnie, gdy dokument zawiera czcionki TrueType. Gdy czcionki, która nie jest TrueType jest używany w tym dokumencie formantu, <xref:System.Windows.Forms.RichTextBox.ZoomFactor%2A> właściwości użyje wartości najbliższej liczby całkowitej. Ta właściwość służy do włączenia użytkownik <xref:System.Windows.Forms.RichTextBox> kontroli umożliwiającą powiększenie fragmentu sekcji dokumentacji, które są zbyt małe, aby wyświetlić lub zmniejszyć widok, aby włączyć więcej dokumentu będą wyświetlane na ekranie.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób tworzenia <xref:System.Windows.Forms.RichTextBox> który powiększa tekstu, automatycznie wybiera słów w tekst formantu, gdy słowem zostanie dwukrotnie kliknięty i ma margines po prawej stronie obszaru klienckiego formantu. Jeśli <xref:System.Windows.Forms.RichTextBox> formant ma Mała szerokość, przy użyciu tego kodu utworzy <xref:System.Windows.Forms.RichTextBox> którym każdego znaku tekstu jest wyświetlana w osobnym wierszu. W tym miejscu wyświetlania pionowego kliknięcie dowolnej części słowa wybierze wszystkich znaków wyrazu niezależnie od tego, czy tekst jest wyświetlany w pionie. W tym przykładzie wymaga formularz, który zawiera <xref:System.Windows.Forms.RichTextBox> formantu o nazwie `richTextBox1`.  
  
 [!code-cpp[RichTextBox.ZoomFactor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.ZoomFactor/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.ZoomFactor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.ZoomFactor/CS/form1.cs#1)]
 [!code-vb[RichTextBox.ZoomFactor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.ZoomFactor/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Współczynnika powiększenia określony znajduje się w dopuszczalnym zakresem.</exception>
      </Docs>
    </Member>
  </Members>
</Type>