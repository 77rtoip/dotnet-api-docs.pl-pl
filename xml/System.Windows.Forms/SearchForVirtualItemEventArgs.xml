<Type Name="SearchForVirtualItemEventArgs" FullName="System.Windows.Forms.SearchForVirtualItemEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9488204e0b5ff7803fb9c53bf345b4fcd2ba67bb" /><Meta Name="ms.sourcegitcommit" Value="0528148687f8b0e0a3d0f550431a777fbe5346bc" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="04/25/2019" /><Meta Name="ms.locfileid" Value="64444165" /></Metadata><TypeSignature Language="C#" Value="public class SearchForVirtualItemEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SearchForVirtualItemEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.SearchForVirtualItemEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SearchForVirtualItemEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SearchForVirtualItemEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type SearchForVirtualItemEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia dane dla <see cref="E:System.Windows.Forms.ListView.SearchForVirtualItem" /> zdarzeń.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.SearchForVirtualItemEventArgs> Jest tworzony i przekazywany do <xref:System.Windows.Forms.ListView.SearchForVirtualItem> zdarzenie, gdy wywołujesz <xref:System.Windows.Forms.ListView.FindItemWithText%2A> lub <xref:System.Windows.Forms.ListView.FindNearestItem%2A> metod <xref:System.Windows.Forms.ListView> kontroli w trybie wirtualnym.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego typu. W tym przykładzie program obsługi zdarzeń raporty w momencie wystąpienia <xref:System.Windows.Forms.ListView.SearchForVirtualItem> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby zgłosić na wiele zdarzeń lub zdarzeń, które często występują, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączane wiadomość w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wkleić go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.ListView> o nazwie `ListView1`. Upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.ListView.SearchForVirtualItem> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#480](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#480)]
 [!code-vb[System.Windows.Forms.EventExamples#480](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#480)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SearchForVirtualItemEventArgs (bool isTextSearch, bool isPrefixSearch, bool includeSubItemsInSearch, string text, System.Drawing.Point startingPoint, System.Windows.Forms.SearchDirectionHint direction, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool isTextSearch, bool isPrefixSearch, bool includeSubItemsInSearch, string text, valuetype System.Drawing.Point startingPoint, valuetype System.Windows.Forms.SearchDirectionHint direction, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SearchForVirtualItemEventArgs.#ctor(System.Boolean,System.Boolean,System.Boolean,System.String,System.Drawing.Point,System.Windows.Forms.SearchDirectionHint,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (isTextSearch As Boolean, isPrefixSearch As Boolean, includeSubItemsInSearch As Boolean, text As String, startingPoint As Point, direction As SearchDirectionHint, startIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SearchForVirtualItemEventArgs(bool isTextSearch, bool isPrefixSearch, bool includeSubItemsInSearch, System::String ^ text, System::Drawing::Point startingPoint, System::Windows::Forms::SearchDirectionHint direction, int startIndex);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.SearchForVirtualItemEventArgs : bool * bool * bool * string * System.Drawing.Point * System.Windows.Forms.SearchDirectionHint * int -&gt; System.Windows.Forms.SearchForVirtualItemEventArgs" Usage="new System.Windows.Forms.SearchForVirtualItemEventArgs (isTextSearch, isPrefixSearch, includeSubItemsInSearch, text, startingPoint, direction, startIndex)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="isTextSearch" Type="System.Boolean" />
        <Parameter Name="isPrefixSearch" Type="System.Boolean" />
        <Parameter Name="includeSubItemsInSearch" Type="System.Boolean" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="startingPoint" Type="System.Drawing.Point" />
        <Parameter Name="direction" Type="System.Windows.Forms.SearchDirectionHint" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="isTextSearch">Wartość wskazująca, czy w wyszukiwaniu jest wyszukiwanie pełnotekstowe.</param>
        <param name="isPrefixSearch">Wartość wskazująca, czy podczas wyszukiwania to wyszukiwanie prefiks.</param>
        <param name="includeSubItemsInSearch">Wartość wskazująca, czy w wyszukiwaniu uwzględnić podrzędnych elementów listy.</param>
        <param name="text">Tekst element do wyszukania.</param>
        <param name="startingPoint"><see cref="T:System.Drawing.Point" /> Od którego należy rozpocząć wyszukiwanie.</param>
        <param name="direction">Jedną z <see cref="T:System.Windows.Forms.SearchDirectionHint" /> wartości.</param>
        <param name="startIndex">Indeks <see cref="T:System.Windows.Forms.ListViewItem" /> od którego należy rozpocząć wyszukiwanie.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.SearchForVirtualItemEventArgs" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.SearchDirectionHint Direction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.SearchDirectionHint Direction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.SearchForVirtualItemEventArgs.Direction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Direction As SearchDirectionHint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::SearchDirectionHint Direction { System::Windows::Forms::SearchDirectionHint get(); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Windows.Forms.SearchDirectionHint" Usage="System.Windows.Forms.SearchForVirtualItemEventArgs.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SearchDirectionHint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kierunku z bieżącego elementu, że wyszukiwanie powinno mieć miejsce.</summary>
        <value>Jedną z <see cref="T:System.Windows.Forms.SearchDirectionHint" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikowanie najbliższym elemencie <xref:System.Windows.Forms.ListView> kontroli może się różnić w zależności od systemu operacyjnego, w której działa aplikacja na; dlatego kierunek wyszukiwania jest wskazówką, a nie bezwzględne gwarancji wyników.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raporty w momencie wystąpienia <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby zgłosić na wiele zdarzeń lub zdarzeń, które często występują, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączane wiadomość w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wkleić go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.ListView> o nazwie `ListView1`. Upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#480](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#480)]
 [!code-vb[System.Windows.Forms.EventExamples#480](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#480)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeSubItemsInSearch">
      <MemberSignature Language="C#" Value="public bool IncludeSubItemsInSearch { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeSubItemsInSearch" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.SearchForVirtualItemEventArgs.IncludeSubItemsInSearch" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncludeSubItemsInSearch As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeSubItemsInSearch { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IncludeSubItemsInSearch : bool" Usage="System.Windows.Forms.SearchForVirtualItemEventArgs.IncludeSubItemsInSearch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy wyszukiwanie ma uwzględniać podrzędnych elementów listy.</summary>
        <value><see langword="true" /> Jeśli elementy podrzędne powinny być uwzględnione w wyszukiwaniu; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Elementy podrzędne są zazwyczaj używane podczas <xref:System.Windows.Forms.ListView> znajduje się w <xref:System.Windows.Forms.View.Details> widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raporty w momencie wystąpienia <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby zgłosić na wiele zdarzeń lub zdarzeń, które często występują, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączane wiadomość w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wkleić go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.ListView> o nazwie `ListView1`. Upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#480](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#480)]
 [!code-vb[System.Windows.Forms.EventExamples#480](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#480)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.SearchForVirtualItemEventArgs.Index" />
      <MemberSignature Language="VB.NET" Value="Public Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Index : int with get, set" Usage="System.Windows.Forms.SearchForVirtualItemEventArgs.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia indeks <see cref="T:System.Windows.Forms.ListViewItem" /> w <see cref="T:System.Windows.Forms.ListView" /> .</summary>
        <value>Indeks <see cref="T:System.Windows.Forms.ListViewItem" /> w <see cref="T:System.Windows.Forms.ListView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustaw <xref:System.Windows.Forms.SearchForVirtualItemEventArgs.Index%2A> właściwości indeks elementu zgodne z kryteriami wyszukiwania podczas obsługi <xref:System.Windows.Forms.ListView.SearchForVirtualItem> zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raporty w momencie wystąpienia <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby zgłosić na wiele zdarzeń lub zdarzeń, które często występują, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączane wiadomość w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wkleić go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.ListView> o nazwie `ListView1`. Upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#480](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#480)]
 [!code-vb[System.Windows.Forms.EventExamples#480](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#480)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrefixSearch">
      <MemberSignature Language="C#" Value="public bool IsPrefixSearch { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrefixSearch" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.SearchForVirtualItemEventArgs.IsPrefixSearch" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrefixSearch As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrefixSearch { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPrefixSearch : bool" Usage="System.Windows.Forms.SearchForVirtualItemEventArgs.IsPrefixSearch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy wyszukiwanie ma zwracać element, jeśli jego tekst zaczyna się od tekstu wyszukiwania.</summary>
        <value><see langword="true" /> Jeśli wyszukiwanie powinien być zgodny element tekst, który rozpoczyna się od tekstu wyszukiwania. w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.SearchForVirtualItemEventArgs.Text%2A> Właściwości można określić podciągiem odpowiedni tekst. <xref:System.Windows.Forms.SearchForVirtualItemEventArgs.IsPrefixSearch%2A> Właściwość wskazuje, czy wyszukiwanie powinny odpowiadać elementy rozpoczynające się od tekstu wyszukiwania.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raporty w momencie wystąpienia <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby zgłosić na wiele zdarzeń lub zdarzeń, które często występują, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączane wiadomość w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wkleić go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.ListView> o nazwie `ListView1`. Upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#480](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#480)]
 [!code-vb[System.Windows.Forms.EventExamples#480](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#480)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTextSearch">
      <MemberSignature Language="C#" Value="public bool IsTextSearch { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTextSearch" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.SearchForVirtualItemEventArgs.IsTextSearch" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsTextSearch As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTextSearch { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTextSearch : bool" Usage="System.Windows.Forms.SearchForVirtualItemEventArgs.IsTextSearch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy wyszukiwanie jest wyszukiwanie pełnotekstowe.</summary>
        <value><see langword="true" /> Jeśli w wyszukiwaniu jest wyszukiwanie pełnotekstowe; <see langword="false" /> Jeśli wyszukiwanie ma wyszukiwania lokalizacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz wyszukiwać <xref:System.Windows.Forms.ListView> kontroli według lokalizacji przy użyciu <xref:System.Windows.Forms.ListView.FindNearestItem%2A> metodę, lub można wykonać wyszukiwanie na podstawie tekstu przy użyciu <xref:System.Windows.Forms.ListView.FindItemWithText%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raporty w momencie wystąpienia <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby zgłosić na wiele zdarzeń lub zdarzeń, które często występują, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączane wiadomość w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wkleić go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.ListView> o nazwie `ListView1`. Upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#480](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#480)]
 [!code-vb[System.Windows.Forms.EventExamples#480](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#480)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartIndex">
      <MemberSignature Language="C#" Value="public int StartIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StartIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.SearchForVirtualItemEventArgs.StartIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StartIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StartIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.StartIndex : int" Usage="System.Windows.Forms.SearchForVirtualItemEventArgs.StartIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera indeks <see cref="T:System.Windows.Forms.ListViewItem" /> miejsce rozpoczęcia wyszukiwania.</summary>
        <value>Indeks <see cref="T:System.Windows.Forms.ListViewItem" /> wskazująca, gdzie rozpoczyna się wyszukiwanie</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest używana do wyszukiwania lokalizacji.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raporty w momencie wystąpienia <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby zgłosić na wiele zdarzeń lub zdarzeń, które często występują, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączane wiadomość w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wkleić go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.ListView> o nazwie `ListView1`. Upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#480](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#480)]
 [!code-vb[System.Windows.Forms.EventExamples#480](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#480)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartingPoint">
      <MemberSignature Language="C#" Value="public System.Drawing.Point StartingPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point StartingPoint" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.SearchForVirtualItemEventArgs.StartingPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StartingPoint As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point StartingPoint { System::Drawing::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.StartingPoint : System.Drawing.Point" Usage="System.Windows.Forms.SearchForVirtualItemEventArgs.StartingPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera początkowy lokalizację wyszukiwania.</summary>
        <value><see cref="T:System.Drawing.Point" /> Oznacza początkową lokalizację wyszukiwania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz wyszukiwać <xref:System.Windows.Forms.ListView> kontroli według lokalizacji przy użyciu <xref:System.Windows.Forms.ListView.FindNearestItem%2A> metodę, lub można wykonać wyszukiwanie na podstawie tekstu przy użyciu <xref:System.Windows.Forms.ListView.FindItemWithText%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raporty w momencie wystąpienia <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby zgłosić na wiele zdarzeń lub zdarzeń, które często występują, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączane wiadomość w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wkleić go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.ListView> o nazwie `ListView1`. Upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#480](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#480)]
 [!code-vb[System.Windows.Forms.EventExamples#480](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#480)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.SearchForVirtualItemEventArgs.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Text : string" Usage="System.Windows.Forms.SearchForVirtualItemEventArgs.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera tekst używana do znajdowania elementu <see cref="T:System.Windows.Forms.ListView" /> kontroli.</summary>
        <value>Tekst, aby znaleźć element w <see cref="T:System.Windows.Forms.ListView" /> kontroli.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz wyszukiwać <xref:System.Windows.Forms.ListView> kontroli według lokalizacji przy użyciu <xref:System.Windows.Forms.ListView.FindNearestItem%2A> metodę, lub można wykonać wyszukiwanie na podstawie tekstu przy użyciu <xref:System.Windows.Forms.ListView.FindItemWithText%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raporty w momencie wystąpienia <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby zgłosić na wiele zdarzeń lub zdarzeń, które często występują, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączane wiadomość w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wkleić go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.ListView> o nazwie `ListView1`. Upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#480](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#480)]
 [!code-vb[System.Windows.Forms.EventExamples#480](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#480)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>