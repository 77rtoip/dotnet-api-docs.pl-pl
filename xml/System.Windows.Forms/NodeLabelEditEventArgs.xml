<Type Name="NodeLabelEditEventArgs" FullName="System.Windows.Forms.NodeLabelEditEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="382dcccb157a9c893c3aa923dc70044408666e44" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37566436" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NodeLabelEditEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NodeLabelEditEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.NodeLabelEditEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class NodeLabelEditEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class NodeLabelEditEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type NodeLabelEditEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d0c75-101">Udostępnia dane dla <see cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" /> i <see cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" /> zdarzenia.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d0c75-101">Provides data for the <see cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" /> and <see cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" /> events.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0c75-102"><xref:System.Windows.Forms.TreeView.AfterLabelEdit> Zdarzenie występuje, gdy użytkownik zakończy się edycji tekstu dla węzła drzewa.</span><span class="sxs-lookup"><span data-stu-id="d0c75-102">The <xref:System.Windows.Forms.TreeView.AfterLabelEdit> event occurs when the user finishes editing the text for a tree node.</span></span> <span data-ttu-id="d0c75-103"><xref:System.Windows.Forms.TreeView.BeforeLabelEdit> Zdarzenie występuje, gdy użytkownik rozpoczyna edycję tekstu dla węzła drzewa.</span><span class="sxs-lookup"><span data-stu-id="d0c75-103">The <xref:System.Windows.Forms.TreeView.BeforeLabelEdit> event occurs when the user begins editing the text for a tree node.</span></span> <span data-ttu-id="d0c75-104">Element <xref:System.Windows.Forms.NodeLabelEditEventArgs> obiektu Określa nowy tekst do skojarzenia z węzła drzewa, węzeł drzewa zawierający etykietę, aby edytować, i czy operacji edycji zostało anulowane.</span><span class="sxs-lookup"><span data-stu-id="d0c75-104">A <xref:System.Windows.Forms.NodeLabelEditEventArgs> object specifies the new text to associate with the tree node, the tree node that contains the label to edit, and whether the edit operation has been canceled.</span></span>  
  
 <span data-ttu-id="d0c75-105">Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d0c75-105">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0c75-106">Poniższy przykład umożliwia użytkownikowi edytowanie węzły drzewa nonroot przy użyciu <xref:System.Windows.Forms.ContextMenu>.</span><span class="sxs-lookup"><span data-stu-id="d0c75-106">The following example allows the user to edit nonroot tree nodes by using a <xref:System.Windows.Forms.ContextMenu>.</span></span> <span data-ttu-id="d0c75-107">Kliknięcie prawym przyciskiem myszy, <xref:System.Windows.Forms.TreeNode> , położenie ustalone i przechowywane w zmiennej o nazwie `mySelectedNode`.</span><span class="sxs-lookup"><span data-stu-id="d0c75-107">When the user right clicks the mouse, the <xref:System.Windows.Forms.TreeNode> at that position is determined and stored in a variable named `mySelectedNode`.</span></span> <span data-ttu-id="d0c75-108">Jeśli węzeł drzewa nonroot został wybrany, zostanie ono przełączone do stanu można edytować, umożliwiając użytkownikowi edytowanie Etykieta węzła.</span><span class="sxs-lookup"><span data-stu-id="d0c75-108">If a nonroot tree node was selected, it is put into an editable state, allowing the user to edit the node label.</span></span> <span data-ttu-id="d0c75-109">Po użytkownik zatrzymuje edycję etykiety węzła drzewa, nowy tekst etykiety jest obliczane i zapisany.</span><span class="sxs-lookup"><span data-stu-id="d0c75-109">After the user stops editing the tree node label, the new label text is evaluated and saved.</span></span> <span data-ttu-id="d0c75-110">W tym przykładzie kilku znaków są uważane za nieprawidłowe w tekst etykiety.</span><span class="sxs-lookup"><span data-stu-id="d0c75-110">For this example, several characters are considered not valid in the label text.</span></span> <span data-ttu-id="d0c75-111">Jeśli jeden z niedozwolonych znaków znajduje się w ciąg znaków etykiety lub jest on pusty, użytkownik jest powiadamiany o błędzie i etykiety są zwracane do jego poprzedniego tekstu.</span><span class="sxs-lookup"><span data-stu-id="d0c75-111">If one of the invalid characters is in the label string, or the string is empty, the user is notified of the error and the label is returned to its previous text.</span></span>  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.NodeLabelEditEventHandler" />
    <altmember cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" />
    <altmember cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d0c75-112">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c75-112">Initializes a new instance of the <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NodeLabelEditEventArgs (System.Windows.Forms.TreeNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.TreeNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NodeLabelEditEventArgs.#ctor(System.Windows.Forms.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (node As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NodeLabelEditEventArgs(System::Windows::Forms::TreeNode ^ node);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.NodeLabelEditEventArgs : System.Windows.Forms.TreeNode -&gt; System.Windows.Forms.NodeLabelEditEventArgs" Usage="new System.Windows.Forms.NodeLabelEditEventArgs node" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="d0c75-113">Węzeł drzewa zawierający tekst do edycji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c75-113">The tree node containing the text to edit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0c75-114">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> klasy dla określonego <see cref="T:System.Windows.Forms.TreeNode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c75-114">Initializes a new instance of the <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> class for the specified <see cref="T:System.Windows.Forms.TreeNode" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0c75-115"><xref:System.Windows.Forms.NodeLabelEditEventArgs.Node%2A> Właściwość jest przypisana `node` wartość parametru.</span><span class="sxs-lookup"><span data-stu-id="d0c75-115">The <xref:System.Windows.Forms.NodeLabelEditEventArgs.Node%2A> property is assigned the `node` parameter value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NodeLabelEditEventArgs (System.Windows.Forms.TreeNode node, string label);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.TreeNode node, string label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NodeLabelEditEventArgs.#ctor(System.Windows.Forms.TreeNode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (node As TreeNode, label As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NodeLabelEditEventArgs(System::Windows::Forms::TreeNode ^ node, System::String ^ label);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.NodeLabelEditEventArgs : System.Windows.Forms.TreeNode * string -&gt; System.Windows.Forms.NodeLabelEditEventArgs" Usage="new System.Windows.Forms.NodeLabelEditEventArgs (node, label)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
        <Parameter Name="label" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="d0c75-116">Węzeł drzewa zawierający tekst do edycji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c75-116">The tree node containing the text to edit.</span>
          </span>
        </param>
        <param name="label">
          <span data-ttu-id="d0c75-117">Nowy tekst do skojarzenia z węzła drzewa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c75-117">The new text to associate with the tree node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0c75-118">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> klasy dla określonego <see cref="T:System.Windows.Forms.TreeNode" /> i określony tekst za pomocą którego można zaktualizować etykiety węzła drzewa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c75-118">Initializes a new instance of the <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> class for the specified <see cref="T:System.Windows.Forms.TreeNode" /> and the specified text with which to update the tree node label.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0c75-119"><xref:System.Windows.Forms.NodeLabelEditEventArgs.Node%2A> Właściwość jest przypisana `node` wartość parametru i <xref:System.Windows.Forms.NodeLabelEditEventArgs.Label%2A> właściwość jest przypisana `label` wartość parametru.</span><span class="sxs-lookup"><span data-stu-id="d0c75-119">The <xref:System.Windows.Forms.NodeLabelEditEventArgs.Node%2A> property is assigned the `node` parameter value, and the <xref:System.Windows.Forms.NodeLabelEditEventArgs.Label%2A> property is assigned the `label` parameter value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.Text" />
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public bool CancelEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NodeLabelEditEventArgs.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Property CancelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CancelEdit { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : bool with get, set" Usage="System.Windows.Forms.NodeLabelEditEventArgs.CancelEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c75-120">Pobiera lub ustawia wartość wskazującą, czy edycji zostało anulowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c75-120">Gets or sets a value indicating whether the edit has been canceled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c75-121">
            <see langword="true" /> Jeśli został anulowany, Edytuj; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c75-121">
              <see langword="true" /> if the edit has been canceled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d0c75-122">Poniższy przykład umożliwia użytkownikowi edytowanie węzły drzewa nonroot przy użyciu <xref:System.Windows.Forms.ContextMenu>.</span><span class="sxs-lookup"><span data-stu-id="d0c75-122">The following example allows the user to edit nonroot tree nodes by using a <xref:System.Windows.Forms.ContextMenu>.</span></span> <span data-ttu-id="d0c75-123">Kliknięcie prawym przyciskiem myszy, <xref:System.Windows.Forms.TreeNode> , położenie ustalone i przechowywane w zmiennej o nazwie `mySelectedNode`.</span><span class="sxs-lookup"><span data-stu-id="d0c75-123">When the user right clicks the mouse, the <xref:System.Windows.Forms.TreeNode> at that position is determined and stored in a variable named `mySelectedNode`.</span></span> <span data-ttu-id="d0c75-124">Jeśli węzeł drzewa nonroot został wybrany, zostanie ono przełączone do stanu można edytować, umożliwiając użytkownikowi edytowanie Etykieta węzła.</span><span class="sxs-lookup"><span data-stu-id="d0c75-124">If a nonroot tree node was selected, it is put into an editable state, allowing the user to edit the node label.</span></span> <span data-ttu-id="d0c75-125">Po użytkownik zatrzymuje edycję etykiety węzła drzewa, nowy tekst etykiety jest obliczane i zapisany.</span><span class="sxs-lookup"><span data-stu-id="d0c75-125">After the user stops editing the tree node label, the new label text is evaluated and saved.</span></span> <span data-ttu-id="d0c75-126">W tym przykładzie kilku znaków są uważane za nieprawidłowe w tekst etykiety.</span><span class="sxs-lookup"><span data-stu-id="d0c75-126">For this example, several characters are considered not valid in the label text.</span></span> <span data-ttu-id="d0c75-127">Jeśli jeden z niedozwolonych znaków znajduje się w ciąg znaków etykiety lub jest on pusty, użytkownik jest powiadamiany o błędzie i etykiety są zwracane do jego poprzedniego tekstu.</span><span class="sxs-lookup"><span data-stu-id="d0c75-127">If one of the invalid characters is in the label string, or the string is empty, the user is notified of the error and the label is returned to its previous text.</span></span>  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NodeLabelEditEventArgs.Label" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Label : string" Usage="System.Windows.Forms.NodeLabelEditEventArgs.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c75-128">Pobiera nowy tekst do skojarzenia z węzła drzewa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c75-128">Gets the new text to associate with the tree node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c75-129">Wartość ciągu, który reprezentuje nowy <see cref="T:System.Windows.Forms.TreeNode" /> etykiety lub <see langword="null" /> Jeśli użytkownik anuluje edycji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c75-129">The string value that represents the new <see cref="T:System.Windows.Forms.TreeNode" /> label or <see langword="null" /> if the user cancels the edit.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0c75-130">Wartość tej właściwości jest `null` Jeśli użytkownik naciśnie klawisz ESC, aby anulować edycji lub naciśnie klawisz ENTER, bez konieczności modyfikacji tekst etykiety.</span><span class="sxs-lookup"><span data-stu-id="d0c75-130">The value of this property is `null` if the user presses ESC to cancel the edit or presses ENTER without modifying the label text.</span></span> <span data-ttu-id="d0c75-131">Jeśli użytkownik edytuje tekst etykiety, wartość tej właściwości jest nowy tekst etykiety.</span><span class="sxs-lookup"><span data-stu-id="d0c75-131">If the user edits the label text, the value of this property is the new label text.</span></span> <span data-ttu-id="d0c75-132">Ta zasada obowiązuje, nawet jeśli końcowa wartość tekstu etykiety edytowane jest taka sama jak oryginalną wartość.</span><span class="sxs-lookup"><span data-stu-id="d0c75-132">This is true even if the final value of edited label text is the same as its original value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0c75-133">Poniższy przykład umożliwia użytkownikowi edytowanie węzły drzewa nonroot przy użyciu <xref:System.Windows.Forms.ContextMenu>.</span><span class="sxs-lookup"><span data-stu-id="d0c75-133">The following example allows the user to edit nonroot tree nodes by using a <xref:System.Windows.Forms.ContextMenu>.</span></span> <span data-ttu-id="d0c75-134">Kliknięcie prawym przyciskiem myszy, <xref:System.Windows.Forms.TreeNode> , położenie ustalone i przechowywane w zmiennej o nazwie `mySelectedNode`.</span><span class="sxs-lookup"><span data-stu-id="d0c75-134">When the user right clicks the mouse, the <xref:System.Windows.Forms.TreeNode> at that position is determined and stored in a variable named `mySelectedNode`.</span></span> <span data-ttu-id="d0c75-135">Jeśli węzeł drzewa nonroot został wybrany, zostanie ono przełączone do stanu można edytować, umożliwiając użytkownikowi edytowanie Etykieta węzła.</span><span class="sxs-lookup"><span data-stu-id="d0c75-135">If a nonroot tree node was selected, it is put into an editable state, allowing the user to edit the node label.</span></span> <span data-ttu-id="d0c75-136">Po użytkownik zatrzymuje edycję etykiety węzła drzewa, nowy tekst etykiety jest obliczane i zapisany.</span><span class="sxs-lookup"><span data-stu-id="d0c75-136">After the user stops editing the tree node label, the new label text is evaluated and saved.</span></span> <span data-ttu-id="d0c75-137">W tym przykładzie kilku znaków są uważane za nieprawidłowe w tekst etykiety.</span><span class="sxs-lookup"><span data-stu-id="d0c75-137">For this example, several characters are considered not valid in the label text.</span></span> <span data-ttu-id="d0c75-138">Jeśli jeden z niedozwolonych znaków znajduje się w ciąg znaków etykiety lub jest on pusty, użytkownik jest powiadamiany o błędzie i etykiety są zwracane do jego poprzedniego tekstu.</span><span class="sxs-lookup"><span data-stu-id="d0c75-138">If one of the invalid characters is in the label string, or the string is empty, the user is notified of the error and the label is returned to its previous text.</span></span>  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.Text" />
      </Docs>
    </Member>
    <Member MemberName="Node">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode Node { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode Node" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NodeLabelEditEventArgs.Node" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Node As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ Node { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Node : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.NodeLabelEditEventArgs.Node" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c75-139">Pobiera węzeł drzewa zawierający tekst do edycji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c75-139">Gets the tree node containing the text to edit.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c75-140">A <see cref="T:System.Windows.Forms.TreeNode" /> reprezentująca węzeł drzewa zawierający tekst do edycji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c75-140">A <see cref="T:System.Windows.Forms.TreeNode" /> that represents the tree node containing the text to edit.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d0c75-141">Poniższy przykład umożliwia użytkownikowi edytowanie węzły drzewa nonroot przy użyciu <xref:System.Windows.Forms.ContextMenu>.</span><span class="sxs-lookup"><span data-stu-id="d0c75-141">The following example allows the user to edit nonroot tree nodes by using a <xref:System.Windows.Forms.ContextMenu>.</span></span> <span data-ttu-id="d0c75-142">Kliknięcie prawym przyciskiem myszy, <xref:System.Windows.Forms.TreeNode> , położenie ustalone i przechowywane w zmiennej o nazwie `mySelectedNode`.</span><span class="sxs-lookup"><span data-stu-id="d0c75-142">When the user right clicks the mouse, the <xref:System.Windows.Forms.TreeNode> at that position is determined and stored in a variable named `mySelectedNode`.</span></span> <span data-ttu-id="d0c75-143">Jeśli węzeł drzewa nonroot został wybrany, zostanie ono przełączone do stanu można edytować, umożliwiając użytkownikowi edytowanie Etykieta węzła.</span><span class="sxs-lookup"><span data-stu-id="d0c75-143">If a nonroot tree node was selected, it is put into an editable state, allowing the user to edit the node label.</span></span> <span data-ttu-id="d0c75-144">Po użytkownik zatrzymuje edycję etykiety węzła drzewa, nowy tekst etykiety jest obliczane i zapisany.</span><span class="sxs-lookup"><span data-stu-id="d0c75-144">After the user stops editing the tree node label, the new label text is evaluated and saved.</span></span> <span data-ttu-id="d0c75-145">W tym przykładzie kilku znaków są uważane za nieprawidłowe w tekst etykiety.</span><span class="sxs-lookup"><span data-stu-id="d0c75-145">For this example, several characters are considered not valid in the label text.</span></span> <span data-ttu-id="d0c75-146">Jeśli jeden z niedozwolonych znaków znajduje się w ciąg znaków etykiety lub jest on pusty, użytkownik jest powiadamiany o błędzie i etykiety są zwracane do jego poprzedniego tekstu.</span><span class="sxs-lookup"><span data-stu-id="d0c75-146">If one of the invalid characters is in the label string, or the string is empty, the user is notified of the error and the label is returned to its previous text.</span></span>  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
      </Docs>
    </Member>
  </Members>
</Type>