<Type Name="NodeLabelEditEventArgs" FullName="System.Windows.Forms.NodeLabelEditEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="02741f4d402a5b4b20f63a4577bfa50b121e1501" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69183023" /></Metadata><TypeSignature Language="C#" Value="public class NodeLabelEditEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NodeLabelEditEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.NodeLabelEditEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class NodeLabelEditEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class NodeLabelEditEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type NodeLabelEditEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Dostarcza dane dla <see cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" /> zdarzeń i <see cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" /> .</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie <xref:System.Windows.Forms.TreeView.AfterLabelEdit> występuje, gdy użytkownik zakończy edytowanie tekstu dla węzła drzewa. <xref:System.Windows.Forms.TreeView.BeforeLabelEdit> Zdarzenie występuje, gdy użytkownik rozpocznie edytowanie tekstu dla węzła drzewa. <xref:System.Windows.Forms.NodeLabelEditEventArgs> Obiekt Określa nowy tekst do skojarzenia z węzłem drzewa, węzeł drzewa, który zawiera etykietę do edycji, oraz czy operacja edycji została anulowana.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład umożliwia użytkownikowi edytowanie węzłów drzewa niegłównych przy użyciu <xref:System.Windows.Forms.ContextMenu>. Gdy użytkownik kliknie prawym przyciskiem myszy, <xref:System.Windows.Forms.TreeNode> na tej pozycji jest określana i przechowywana w zmiennej o nazwie. `mySelectedNode` Jeśli wybrano węzeł drzewa niegłówny, jest on umieszczany w stanie edytowalnym, umożliwiając użytkownikowi edytowanie etykiety węzła. Gdy użytkownik zatrzyma Edytowanie etykiety węzła drzewa, nowy tekst etykiety zostanie oszacowany i zapisany. W tym przykładzie kilka znaków jest traktowanych jako nieprawidłowe w tekście etykiety. Jeśli jeden z nieprawidłowych znaków znajduje się w ciągu etykiety lub ciąg jest pusty, użytkownik zostanie powiadomiony o błędzie i etykieta zostanie zwrócona do poprzedniego tekstu.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.NodeLabelEditEventHandler" />
    <altmember cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" />
    <altmember cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NodeLabelEditEventArgs (System.Windows.Forms.TreeNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.TreeNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NodeLabelEditEventArgs.#ctor(System.Windows.Forms.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (node As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NodeLabelEditEventArgs(System::Windows::Forms::TreeNode ^ node);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.NodeLabelEditEventArgs : System.Windows.Forms.TreeNode -&gt; System.Windows.Forms.NodeLabelEditEventArgs" Usage="new System.Windows.Forms.NodeLabelEditEventArgs node" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
      </Parameters>
      <Docs>
        <param name="node">Węzeł drzewa zawierający tekst do edycji.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> klasy dla określonego <see cref="T:System.Windows.Forms.TreeNode" />elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość ma przypisaną wartość `node`parametru. <xref:System.Windows.Forms.NodeLabelEditEventArgs.Node%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NodeLabelEditEventArgs (System.Windows.Forms.TreeNode node, string label);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.TreeNode node, string label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NodeLabelEditEventArgs.#ctor(System.Windows.Forms.TreeNode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (node As TreeNode, label As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NodeLabelEditEventArgs(System::Windows::Forms::TreeNode ^ node, System::String ^ label);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.NodeLabelEditEventArgs : System.Windows.Forms.TreeNode * string -&gt; System.Windows.Forms.NodeLabelEditEventArgs" Usage="new System.Windows.Forms.NodeLabelEditEventArgs (node, label)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
        <Parameter Name="label" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node">Węzeł drzewa zawierający tekst do edycji.</param>
        <param name="label">Nowy tekst do skojarzenia z węzłem drzewa.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> klasy dla określonego <see cref="T:System.Windows.Forms.TreeNode" /> i określonego tekstu, z którym ma zostać zaktualizowana etykieta węzła drzewa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość ma <xref:System.Windows.Forms.NodeLabelEditEventArgs.Label%2A> `label` przypisaną wartość parametru, a właściwość ma przypisaną wartość parametru. `node` <xref:System.Windows.Forms.NodeLabelEditEventArgs.Node%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.Text" />
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public bool CancelEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NodeLabelEditEventArgs.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Property CancelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CancelEdit { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : bool with get, set" Usage="System.Windows.Forms.NodeLabelEditEventArgs.CancelEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy edytowanie zostało anulowane.</summary>
        <value><see langword="true" />Jeśli edycja została anulowana; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład umożliwia użytkownikowi edytowanie węzłów drzewa niegłównych przy użyciu <xref:System.Windows.Forms.ContextMenu>. Gdy użytkownik kliknie prawym przyciskiem myszy, <xref:System.Windows.Forms.TreeNode> na tej pozycji jest określana i przechowywana w zmiennej o nazwie. `mySelectedNode` Jeśli wybrano węzeł drzewa niegłówny, jest on umieszczany w stanie edytowalnym, umożliwiając użytkownikowi edytowanie etykiety węzła. Gdy użytkownik zatrzyma Edytowanie etykiety węzła drzewa, nowy tekst etykiety zostanie oszacowany i zapisany. W tym przykładzie kilka znaków jest traktowanych jako nieprawidłowe w tekście etykiety. Jeśli jeden z nieprawidłowych znaków znajduje się w ciągu etykiety lub ciąg jest pusty, użytkownik zostanie powiadomiony o błędzie i etykieta zostanie zwrócona do poprzedniego tekstu.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NodeLabelEditEventArgs.Label" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Label : string" Usage="System.Windows.Forms.NodeLabelEditEventArgs.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nowy tekst do skojarzenia z węzłem drzewa.</summary>
        <value>Wartość ciągu, która reprezentuje nową <see cref="T:System.Windows.Forms.TreeNode" /> etykietę, lub <see langword="null" /> Jeśli użytkownik anuluje edycję.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość tej właściwości jest `null` , jeśli użytkownik naciśnie klawisz ESC, aby anulować edycję lub nacisnąć klawisz ENTER bez modyfikowania tekstu etykiety. Jeśli użytkownik edytuje tekst etykiety, wartość tej właściwości jest nowym tekstem etykiety. Jest to prawdziwe, nawet jeśli końcowa wartość edytowanego tekstu etykiety jest taka sama jak oryginalna wartość.  
  
   
  
## Examples  
 Poniższy przykład umożliwia użytkownikowi edytowanie węzłów drzewa niegłównych przy użyciu <xref:System.Windows.Forms.ContextMenu>. Gdy użytkownik kliknie prawym przyciskiem myszy, <xref:System.Windows.Forms.TreeNode> na tej pozycji jest określana i przechowywana w zmiennej o nazwie. `mySelectedNode` Jeśli wybrano węzeł drzewa niegłówny, jest on umieszczany w stanie edytowalnym, umożliwiając użytkownikowi edytowanie etykiety węzła. Gdy użytkownik zatrzyma Edytowanie etykiety węzła drzewa, nowy tekst etykiety zostanie oszacowany i zapisany. W tym przykładzie kilka znaków jest traktowanych jako nieprawidłowe w tekście etykiety. Jeśli jeden z nieprawidłowych znaków znajduje się w ciągu etykiety lub ciąg jest pusty, użytkownik zostanie powiadomiony o błędzie i etykieta zostanie zwrócona do poprzedniego tekstu.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.Text" />
      </Docs>
    </Member>
    <Member MemberName="Node">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode Node { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode Node" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NodeLabelEditEventArgs.Node" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Node As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ Node { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Node : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.NodeLabelEditEventArgs.Node" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera węzeł drzewa zawierający tekst do edycji.</summary>
        <value><see cref="T:System.Windows.Forms.TreeNode" /> Reprezentuje węzeł drzewa zawierający tekst do edycji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład umożliwia użytkownikowi edytowanie węzłów drzewa niegłównych przy użyciu <xref:System.Windows.Forms.ContextMenu>. Gdy użytkownik kliknie prawym przyciskiem myszy, <xref:System.Windows.Forms.TreeNode> na tej pozycji jest określana i przechowywana w zmiennej o nazwie. `mySelectedNode` Jeśli wybrano węzeł drzewa niegłówny, jest on umieszczany w stanie edytowalnym, umożliwiając użytkownikowi edytowanie etykiety węzła. Gdy użytkownik zatrzyma Edytowanie etykiety węzła drzewa, nowy tekst etykiety zostanie oszacowany i zapisany. W tym przykładzie kilka znaków jest traktowanych jako nieprawidłowe w tekście etykiety. Jeśli jeden z nieprawidłowych znaków znajduje się w ciągu etykiety lub ciąg jest pusty, użytkownik zostanie powiadomiony o błędzie i etykieta zostanie zwrócona do poprzedniego tekstu.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
      </Docs>
    </Member>
  </Members>
</Type>
