<Type Name="NodeLabelEditEventArgs" FullName="System.Windows.Forms.NodeLabelEditEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="61cfc5765eaf7fe73f1c31a05055f47ba5663775" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30705872" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NodeLabelEditEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NodeLabelEditEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.NodeLabelEditEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class NodeLabelEditEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class NodeLabelEditEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia dane dla <see cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" /> i <see cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" /> zdarzenia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeView.AfterLabelEdit> Zdarzenie wystąpi, gdy użytkownik zakończy edycji tekstu dla węzła drzewa. <xref:System.Windows.Forms.TreeView.BeforeLabelEdit> Zdarzenie wystąpi, gdy użytkownik rozpoczyna edycję tekstu dla węzła drzewa. A <xref:System.Windows.Forms.NodeLabelEditEventArgs> obiekt Określa nowy tekst do skojarzenia z węzła drzewa, węzeł drzewa, który zawiera etykietę do edycji, i określa, czy operacja edytowania zostało anulowane.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy przykład umożliwia użytkownikom edytowanie węzłów drzewa nonroot przy użyciu <xref:System.Windows.Forms.ContextMenu>. Kliknięcie prawym przyciskiem myszy <xref:System.Windows.Forms.TreeNode> w tym pozycja jest ustalona i przechowywana w zmiennej o nazwie `mySelectedNode`. Jeśli wybrano nonroot węzła drzewa, go jest ustawiany stan można edytować, umożliwiając użytkownikowi edytowanie etykiety węzła. Po użytkownika przestanie edycję etykiety węzła drzewa, nowy tekst etykiety jest obliczane i zapisany. Na przykład kilku znaków są uważane za nieprawidłowe w tekst etykiety. Jeśli jeden nieprawidłowy znak w ciągu etykiety lub ciąg jest pusty, użytkownik jest powiadamiany błędu i etykiety są zwracane do jego poprzedniego tekstu.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.NodeLabelEditEventHandler" />
    <altmember cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" />
    <altmember cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NodeLabelEditEventArgs (System.Windows.Forms.TreeNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.TreeNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NodeLabelEditEventArgs.#ctor(System.Windows.Forms.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (node As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NodeLabelEditEventArgs(System::Windows::Forms::TreeNode ^ node);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
      </Parameters>
      <Docs>
        <param name="node">Węzeł drzewa zawierający tekst, aby edytować.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> klasy dla określonego <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.NodeLabelEditEventArgs.Node%2A> Przypisano właściwości `node` wartość parametru.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NodeLabelEditEventArgs (System.Windows.Forms.TreeNode node, string label);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.TreeNode node, string label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NodeLabelEditEventArgs.#ctor(System.Windows.Forms.TreeNode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (node As TreeNode, label As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NodeLabelEditEventArgs(System::Windows::Forms::TreeNode ^ node, System::String ^ label);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
        <Parameter Name="label" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node">Węzeł drzewa zawierający tekst, aby edytować.</param>
        <param name="label">Nowy tekst do skojarzenia z węzła drzewa.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> klasy dla określonego <see cref="T:System.Windows.Forms.TreeNode" /> i określony tekst, z którą chcesz zaktualizować etykiecie węzła drzewa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.NodeLabelEditEventArgs.Node%2A> Przypisano właściwości `node` wartość parametru i <xref:System.Windows.Forms.NodeLabelEditEventArgs.Label%2A> przypisano właściwości `label` wartość parametru.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.Text" />
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public bool CancelEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NodeLabelEditEventArgs.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Property CancelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CancelEdit { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy edycja zostało anulowane.</summary>
        <value>
          <see langword="true" /> Jeśli Edycja zostało anulowane; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład umożliwia użytkownikom edytowanie węzłów drzewa nonroot przy użyciu <xref:System.Windows.Forms.ContextMenu>. Kliknięcie prawym przyciskiem myszy <xref:System.Windows.Forms.TreeNode> w tym pozycja jest ustalona i przechowywana w zmiennej o nazwie `mySelectedNode`. Jeśli wybrano nonroot węzła drzewa, go jest ustawiany stan można edytować, umożliwiając użytkownikowi edytowanie etykiety węzła. Po użytkownika przestanie edycję etykiety węzła drzewa, nowy tekst etykiety jest obliczane i zapisany. Na przykład kilku znaków są uważane za nieprawidłowe w tekst etykiety. Jeśli jeden nieprawidłowy znak w ciągu etykiety lub ciąg jest pusty, użytkownik jest powiadamiany błędu i etykiety są zwracane do jego poprzedniego tekstu.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NodeLabelEditEventArgs.Label" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nowy tekst do skojarzenia z węzła drzewa.</summary>
        <value>Wartość ciągu, która reprezentuje nowe <see cref="T:System.Windows.Forms.TreeNode" /> etykiety lub <see langword="null" /> Jeśli użytkownik anuluje edycji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość tej właściwości jest `null` Jeśli użytkownik naciska klawisz ESC, aby anulować edycję lub naciśnie klawisz ENTER, bez konieczności modyfikacji tekstu etykiety. Jeśli użytkownik edytuje tekst etykiety, wartość tej właściwości jest nowy tekst etykiety. Dotyczy to nawet jeśli końcowej etykiety edycji tekstu jest taka sama jak jego oryginalnej wartości.  
  
   
  
## Examples  
 Poniższy przykład umożliwia użytkownikom edytowanie węzłów drzewa nonroot przy użyciu <xref:System.Windows.Forms.ContextMenu>. Kliknięcie prawym przyciskiem myszy <xref:System.Windows.Forms.TreeNode> w tym pozycja jest ustalona i przechowywana w zmiennej o nazwie `mySelectedNode`. Jeśli wybrano nonroot węzła drzewa, go jest ustawiany stan można edytować, umożliwiając użytkownikowi edytowanie etykiety węzła. Po użytkownika przestanie edycję etykiety węzła drzewa, nowy tekst etykiety jest obliczane i zapisany. Na przykład kilku znaków są uważane za nieprawidłowe w tekst etykiety. Jeśli jeden nieprawidłowy znak w ciągu etykiety lub ciąg jest pusty, użytkownik jest powiadamiany błędu i etykiety są zwracane do jego poprzedniego tekstu.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.Text" />
      </Docs>
    </Member>
    <Member MemberName="Node">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode Node { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode Node" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NodeLabelEditEventArgs.Node" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Node As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ Node { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera węzeł drzewa zawierający tekst, aby edytować.</summary>
        <value>A <see cref="T:System.Windows.Forms.TreeNode" /> reprezentujący węzeł drzewa zawierający tekst, aby edytować.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład umożliwia użytkownikom edytowanie węzłów drzewa nonroot przy użyciu <xref:System.Windows.Forms.ContextMenu>. Kliknięcie prawym przyciskiem myszy <xref:System.Windows.Forms.TreeNode> w tym pozycja jest ustalona i przechowywana w zmiennej o nazwie `mySelectedNode`. Jeśli wybrano nonroot węzła drzewa, go jest ustawiany stan można edytować, umożliwiając użytkownikowi edytowanie etykiety węzła. Po użytkownika przestanie edycję etykiety węzła drzewa, nowy tekst etykiety jest obliczane i zapisany. Na przykład kilku znaków są uważane za nieprawidłowe w tekst etykiety. Jeśli jeden nieprawidłowy znak w ciągu etykiety lub ciąg jest pusty, użytkownik jest powiadamiany błędu i etykiety są zwracane do jego poprzedniego tekstu.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
      </Docs>
    </Member>
  </Members>
</Type>