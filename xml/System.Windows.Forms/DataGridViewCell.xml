<Type Name="DataGridViewCell" FullName="System.Windows.Forms.DataGridViewCell">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="12de7144e1307b453670745bf4e837e2e775a3ba" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36346686" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DataGridViewCell : System.Windows.Forms.DataGridViewElement, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataGridViewCell extends System.Windows.Forms.DataGridViewElement implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewCell" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DataGridViewCell&#xA;Inherits DataGridViewElement&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridViewCell abstract : System::Windows::Forms::DataGridViewElement, ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type DataGridViewCell = class&#xA;    inherit DataGridViewElement&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataGridViewElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataGridViewCellConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje pojedynczych komórek w <see cref="T:System.Windows.Forms.DataGridView" /> formantu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell> Klasa reprezentuje pojedynczych komórek w <xref:System.Windows.Forms.DataGridView> formantu. Możesz pobrać komórki za pomocą <xref:System.Windows.Forms.DataGridViewRow.Cells%2A> kolekcji <xref:System.Windows.Forms.DataGridViewRow>.  
  
 Wiersz i kolumnę dla <xref:System.Windows.Forms.DataGridViewCell> określić lokalizację komórki w <xref:System.Windows.Forms.DataGridView>. Typowy komórka zawiera dane specyficzne dla wiersz i kolumnę, w którym znajduje się. Komórki można dostosowywać na kilka różnych sposobów przez ustawienie właściwości i obsługa zdarzeń skojarzonych z nim.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego typu. Aby uzyskać więcej informacji dotyczących tego przykładu, zobacz [porady: Dodawanie elementu ToolTips do pojedynczych komórek w formancie DataGridView formularzy systemu Windows](~/docs/framework/winforms/controls/add-tooltips-to-individual-cells-in-a-wf-datagridview-control.md).  
  
 [!code-cpp[System.Windows.Forms.DataGridViewCell.ToolTipText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCell.ToolTipText/cpp/datagridviewcell.tooltiptext.cpp#1)]
 [!code-csharp[System.Windows.Forms.DataGridViewCell.ToolTipText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCell.ToolTipText/CS/datagridviewcell.tooltiptext.cs#1)]
 [!code-vb[System.Windows.Forms.DataGridViewCell.ToolTipText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCell.ToolTipText/VB/datagridviewcell.tooltiptext.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Jeśli pochodzi od <see cref="T:System.Windows.Forms.DataGridViewCell" /> i dodać nowe właściwości do klasy pochodnej, należy zastąpić <see cref="M:System.Windows.Forms.DataGridViewCell.Clone" /> metodę, aby skopiować nowe właściwości podczas operacji klonowania. Należy także wywołać klasy podstawowej <see cref="M:System.Windows.Forms.DataGridViewCell.Clone" /> metody, aby właściwości klasy podstawowej są kopiowane do nowych komórek.</para>
    </block>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="T:System.ICloneable" />
    <altmember cref="T:System.IDisposable" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataGridViewCell ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataGridViewCell();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.DataGridViewCell" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="AccessibilityObject">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AccessibleObject AccessibilityObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject AccessibilityObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.AccessibilityObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AccessibilityObject As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AccessibleObject ^ AccessibilityObject { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessibilityObject : System.Windows.Forms.AccessibleObject" Usage="System.Windows.Forms.DataGridViewCell.AccessibilityObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Windows.Forms.DataGridViewCell.DataGridViewCellAccessibleObject" /> przypisane do <see cref="T:System.Windows.Forms.DataGridViewCell" />.</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataGridViewCell.DataGridViewCellAccessibleObject" /> Przypisane do <see cref="T:System.Windows.Forms.DataGridViewCell" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby kontrolować wystąpienia zwracane z tej metody, należy zastąpić <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> metody.  
  
 Jeśli nie <xref:System.Windows.Forms.AccessibleObject> jest aktualnie przypisany do kontrolki, utworzeniu nowego wystąpienia jednego.  
  
> [!NOTE]
>  Można pobrać lub ustawić <xref:System.Windows.Forms.Control.AccessibilityObject%2A> właściwość, należy dodać odwołanie do `Accessibility` zestawu z zainstalowanym [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 Aby uzyskać więcej informacji na temat dostępnych obiektów, zobacz sekcję "Active Accessibility" w bibliotece MSDN w [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="AdjustCellBorderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataGridViewAdvancedBorderStyle AdjustCellBorderStyle (System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStyleInput, System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStylePlaceholder, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedColumn, bool isFirstDisplayedRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.DataGridViewAdvancedBorderStyle AdjustCellBorderStyle(class System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStyleInput, class System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStylePlaceholder, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedColumn, bool isFirstDisplayedRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.AdjustCellBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AdjustCellBorderStyle (dataGridViewAdvancedBorderStyleInput As DataGridViewAdvancedBorderStyle, dataGridViewAdvancedBorderStylePlaceholder As DataGridViewAdvancedBorderStyle, singleVerticalBorderAdded As Boolean, singleHorizontalBorderAdded As Boolean, isFirstDisplayedColumn As Boolean, isFirstDisplayedRow As Boolean) As DataGridViewAdvancedBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ AdjustCellBorderStyle(System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ dataGridViewAdvancedBorderStyleInput, System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ dataGridViewAdvancedBorderStylePlaceholder, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedColumn, bool isFirstDisplayedRow);" />
      <MemberSignature Language="F#" Value="abstract member AdjustCellBorderStyle : System.Windows.Forms.DataGridViewAdvancedBorderStyle * System.Windows.Forms.DataGridViewAdvancedBorderStyle * bool * bool * bool * bool -&gt; System.Windows.Forms.DataGridViewAdvancedBorderStyle&#xA;override this.AdjustCellBorderStyle : System.Windows.Forms.DataGridViewAdvancedBorderStyle * System.Windows.Forms.DataGridViewAdvancedBorderStyle * bool * bool * bool * bool -&gt; System.Windows.Forms.DataGridViewAdvancedBorderStyle" Usage="dataGridViewCell.AdjustCellBorderStyle (dataGridViewAdvancedBorderStyleInput, dataGridViewAdvancedBorderStylePlaceholder, singleVerticalBorderAdded, singleHorizontalBorderAdded, isFirstDisplayedColumn, isFirstDisplayedRow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAdvancedBorderStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewAdvancedBorderStyleInput" Type="System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
        <Parameter Name="dataGridViewAdvancedBorderStylePlaceholder" Type="System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
        <Parameter Name="singleVerticalBorderAdded" Type="System.Boolean" />
        <Parameter Name="singleHorizontalBorderAdded" Type="System.Boolean" />
        <Parameter Name="isFirstDisplayedColumn" Type="System.Boolean" />
        <Parameter Name="isFirstDisplayedRow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataGridViewAdvancedBorderStyleInput">A <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /> reprezentujący styl obramowania komórki do zmodyfikowania.</param>
        <param name="dataGridViewAdvancedBorderStylePlaceholder">A <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /> używany do przechowywania zmian pośrednich styl obramowania komórki.</param>
        <param name="singleVerticalBorderAdded">
          <see langword="true" /> Aby dodać obramowanie pionowego do komórki; w przeciwnym razie <see langword="false" />.</param>
        <param name="singleHorizontalBorderAdded">
          <see langword="true" /> Aby dodać poziomy obramowanie do komórki; w przeciwnym razie <see langword="false" />.</param>
        <param name="isFirstDisplayedColumn">
          <see langword="true" /> Jeśli hostingu komórka jest w pierwszej kolumnie widoczne; w przeciwnym razie <see langword="false" />.</param>
        <param name="isFirstDisplayedRow">
          <see langword="true" /> w przypadku hostingu komórki w pierwszym wierszu widoczne; w przeciwnym razie <see langword="false" />.</param>
        <summary>Modyfikuje styl obramowania komórki wejściowej zgodnie z określonymi kryteriami.</summary>
        <returns>Zmodyfikowane <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView> Kontrolować wewnętrznie wywołania <xref:System.Windows.Forms.DataGridViewCell.AdjustCellBorderStyle%2A> metodę, aby określić wygląd obramowań komórek. <xref:System.Windows.Forms.DataGridView> Kontroli zazwyczaj używa się wartości <xref:System.Windows.Forms.DataGridView.AdvancedCellBorderStyle%2A> właściwość `dataGridViewAdvancedBorderStyleInput` parametru.  
  
 <xref:System.Windows.Forms.DataGridViewAdvancedCellBorderStyle.OutsetPartial?displayProperty=nameWithType> Wartość nie jest obsługiwana jako wejściowych stylu komórki.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Windows.Forms.DataGridViewCell.AdjustCellBorderStyle%2A> metodę w celu dostosowania obramowania komórek. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Windows.Forms.DataGridViewAdvancedBorderStyle> klasy.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewAdvancedBorderStyle#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/CS/advancedborderstyle.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewAdvancedBorderStyle#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/VB/advancedborderstyle.vb#20)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Należy przesłonić tę metodę, jeśli chcesz dostosować wygląd obramowań komórek.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetInheritedStyle(System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Boolean)" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.HasStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Style" />
      </Docs>
    </Member>
    <Member MemberName="BorderWidths">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Rectangle BorderWidths (System.Windows.Forms.DataGridViewAdvancedBorderStyle advancedBorderStyle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Drawing.Rectangle BorderWidths(class System.Windows.Forms.DataGridViewAdvancedBorderStyle advancedBorderStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.BorderWidths(System.Windows.Forms.DataGridViewAdvancedBorderStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BorderWidths (advancedBorderStyle As DataGridViewAdvancedBorderStyle) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Drawing::Rectangle BorderWidths(System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ advancedBorderStyle);" />
      <MemberSignature Language="F#" Value="abstract member BorderWidths : System.Windows.Forms.DataGridViewAdvancedBorderStyle -&gt; System.Drawing.Rectangle&#xA;override this.BorderWidths : System.Windows.Forms.DataGridViewAdvancedBorderStyle -&gt; System.Drawing.Rectangle" Usage="dataGridViewCell.BorderWidths advancedBorderStyle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="advancedBorderStyle" Type="System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
      </Parameters>
      <Docs>
        <param name="advancedBorderStyle">A <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /> który marginesy mają być obliczane dla.</param>
        <summary>Zwraca <see cref="T:System.Drawing.Rectangle" /> reprezentujący szerokość marginesów komórki.</summary>
        <returns>A <see cref="T:System.Drawing.Rectangle" /> reprezentujący szerokość marginesów komórki.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnej szerokości krawędzi komórki jest jeden piksel. Należy użyć następującego <xref:System.Windows.Forms.DataGridViewAdvancedCellBorderStyle> wartości, aby zmodyfikować szerokość obramowania:  
  
-   <xref:System.Windows.Forms.DataGridViewAdvancedCellBorderStyle.None> Wartość Określa szerokość 0 pikseli.  
  
-   <xref:System.Windows.Forms.DataGridViewAdvancedCellBorderStyle.OutsetDouble> Lub <xref:System.Windows.Forms.DataGridViewAdvancedCellBorderStyle.InsetDouble> zwiększyć wartości domyślnej szerokości 1 piksela.  
  
 Ponadto jeśli <xref:System.Windows.Forms.DataGridViewRow.DividerHeight%2A> ustawiono właściwości dla komórki jego właścicielem wiersza, wysokość prostokąta zwiększa się o wartości <xref:System.Windows.Forms.DataGridViewRow.DividerHeight%2A>. Jeśli <xref:System.Windows.Forms.DataGridViewColumn.DividerWidth%2A> ustawiono właściwości dla komórki jego właścicielem kolumny, przez wartość zostanie zwiększona szerokość prostokąta <xref:System.Windows.Forms.DataGridViewColumn.DividerWidth%2A>.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.DataGridViewCell.BorderWidths%2A> metody <xref:System.Windows.Forms.DataGridViewCell> klasę, aby określić obszaru rysowania dostępne w komórce. Ten przykładowy kod jest częścią większego przykładu udostępnionego w [porady: wyłączanie przycisków w kolumnie przycisków w formancie DataGridView formularzy systemu Windows](~/docs/framework/winforms/controls/disable-buttons-in-a-button-column-in-the-datagrid.md).  
  
 [!code-csharp[System.Windows.Forms.DataGridView.DisabledButtons#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridView.DisabledButtons#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellBorderStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewAdvancedCellBorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="ClickUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool ClickUnsharesRow (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ClickUnsharesRow(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.ClickUnsharesRow(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ClickUnsharesRow (e As DataGridViewCellEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ClickUnsharesRow(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ClickUnsharesRow : System.Windows.Forms.DataGridViewCellEventArgs -&gt; bool&#xA;override this.ClickUnsharesRow : System.Windows.Forms.DataGridViewCellEventArgs -&gt; bool" Usage="dataGridViewCell.ClickUnsharesRow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /> Zawierającego dane przekazane do <see cref="M:System.Windows.Forms.DataGridViewCell.OnClick(System.Windows.Forms.DataGridViewCellEventArgs)" /> metody.</param>
        <summary>Wskazuje, czy wiersz komórki zostanie nieudostępnionych po kliknięciu komórki.</summary>
        <returns>
          <see langword="true" /> Jeśli wiersz będzie nieudostępnionych, w przeciwnym razie <see langword="false" />. Podstawowym <see cref="T:System.Windows.Forms.DataGridViewCell" /> klasy zawsze zwraca <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.ClickUnsharesRow%2A> Metoda jest wywoływana bezpośrednio przed <xref:System.Windows.Forms.DataGridViewCell.OnClick%2A> metody. Aplikacja musi zwracać `true` Jeśli wywołanie <xref:System.Windows.Forms.DataGridViewCell.OnClick%2A> powoduje zatrzymywania udostępniania wiersza komórki. W przeciwnym razie powinien zwrócić `false`.  
  
 Aby uzyskać więcej informacji o udostępnianiu wiersza, zobacz [najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="dataGridViewCell.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy dokładną kopię tej komórki.</summary>
        <returns>
          <see cref="T:System.Object" /> Reprezentujący sklonowany <see cref="T:System.Windows.Forms.DataGridViewCell" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zastąpienie <xref:System.Windows.Forms.DataGridViewCell.Clone%2A> zawsze, gdy jest pochodzi z <xref:System.Windows.Forms.DataGridViewCell> klasy i dodać nowe właściwości do klasy pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.DataGridViewCell.Clone" /> wywołanie metody w klasie pochodnej klasy podstawowej <see cref="M:System.Windows.Forms.DataGridViewCell.Clone" /> metody, aby właściwości klasy podstawowej są kopiowane do nowych komórek i należy także skopiować wartości wszystkich właściwości, które zostały dodane do klasy pochodnej.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="ColumnIndex">
      <MemberSignature Language="C#" Value="public int ColumnIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnIndex : int" Usage="System.Windows.Forms.DataGridViewCell.ColumnIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera indeks kolumny dla tej komórki.</summary>
        <value>Indeks kolumny, która zawiera komórki; -1, jeśli komórka nie znajduje się w kolumnie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Indeks kolumny wiersza, która zawiera nagłówki wierszy ma wartość-1.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.DataGridViewCell.ColumnIndex%2A> właściwości, aby określić, które kolumny mają zostać Sprawdź, czy wartości będące liczbami całkowitymi. W tym przykładzie komórek w `Description` kolumny są ignorowane, gdy zawartość zaznaczonych komórek są sumowane. Ten przykład jest częścią większego przykładu dostępne w <xref:System.Windows.Forms.DataGridView.SelectionChanged?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.RowIndex" />
      </Docs>
    </Member>
    <Member MemberName="ContentBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle ContentBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle ContentBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.ContentBounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentBounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle ContentBounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentBounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.DataGridViewCell.ContentBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera prostokąt ograniczający ograniczający obszaru zawartości komórki.</summary>
        <value>
          <see cref="T:System.Drawing.Rectangle" /> Który zakresem zawartości komórki.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Prostokąt zwrócony raport współrzędne klienta w pikselach.  
  
 Ta metoda wywołuje <xref:System.Windows.Forms.DataGridViewCell.GetContentBounds%2A> metodę, aby pobrać jego wartości. Dla podstawy <xref:System.Windows.Forms.DataGridViewCell> typ, wartość ta jest <xref:System.Drawing.Rectangle.Empty>.  
  
 Aby uzyskać prostokąt ograniczający komórki, a nie zawartości komórki, należy użyć <xref:System.Windows.Forms.DataGridView.GetCellDisplayRectangle%2A?displayProperty=nameWithType> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wiersz zawierający komórki jest wierszu udostępnionym.  - lub - komórka jest komórki nagłówka kolumny.</exception>
        <exception cref="T:System.InvalidOperationException">Wartość <see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" /> właściwości jest mniejsza niż 0, co oznacza, że komórki komórki nagłówka wiersza.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridView.GetCellDisplayRectangle(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetContentBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Size" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.PreferredSize" />
        <altmember cref="F:System.Drawing.Rectangle.Empty" />
      </Docs>
    </Member>
    <Member MemberName="ContentClickUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool ContentClickUnsharesRow (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ContentClickUnsharesRow(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.ContentClickUnsharesRow(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ContentClickUnsharesRow (e As DataGridViewCellEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ContentClickUnsharesRow(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ContentClickUnsharesRow : System.Windows.Forms.DataGridViewCellEventArgs -&gt; bool&#xA;override this.ContentClickUnsharesRow : System.Windows.Forms.DataGridViewCellEventArgs -&gt; bool" Usage="dataGridViewCell.ContentClickUnsharesRow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /> Zawierającego dane przekazane do <see cref="M:System.Windows.Forms.DataGridViewCell.OnContentClick(System.Windows.Forms.DataGridViewCellEventArgs)" /> metody.</param>
        <summary>Wskazuje, czy wiersz komórki będzie nieudostępnionych po kliknięciu zawartości komórki.</summary>
        <returns>
          <see langword="true" /> Jeśli wiersz będzie nieudostępnionych, w przeciwnym razie <see langword="false" />. Podstawowym <see cref="T:System.Windows.Forms.DataGridViewCell" /> klasy zawsze zwraca <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.ContentClickUnsharesRow%2A> Metoda jest wywoływana bezpośrednio przed <xref:System.Windows.Forms.DataGridViewCell.OnContentClick%2A> metody. Aplikacja musi zwracać `true` Jeśli wywołanie <xref:System.Windows.Forms.DataGridViewCell.OnContentClick%2A> powoduje zatrzymywania udostępniania wiersza komórki. W przeciwnym razie powinien zwrócić `false`.  
  
 Aby uzyskać więcej informacji o udostępnianiu wiersza, zobacz [najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnContentClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ContentDoubleClickUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool ContentDoubleClickUnsharesRow (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ContentDoubleClickUnsharesRow(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.ContentDoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ContentDoubleClickUnsharesRow (e As DataGridViewCellEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ContentDoubleClickUnsharesRow(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ContentDoubleClickUnsharesRow : System.Windows.Forms.DataGridViewCellEventArgs -&gt; bool&#xA;override this.ContentDoubleClickUnsharesRow : System.Windows.Forms.DataGridViewCellEventArgs -&gt; bool" Usage="dataGridViewCell.ContentDoubleClickUnsharesRow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /> Zawierającego dane przekazane do <see cref="M:System.Windows.Forms.DataGridViewCell.OnContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" /> metody.</param>
        <summary>Wskazuje, czy wiersz komórki będzie nieudostępnionych po dwukrotnym kliknięciu zawartości komórki.</summary>
        <returns>
          <see langword="true" /> Jeśli wiersz będzie nieudostępnionych, w przeciwnym razie <see langword="false" />. Podstawowym <see cref="T:System.Windows.Forms.DataGridViewCell" /> klasy zawsze zwraca <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.ContentDoubleClickUnsharesRow%2A> Metoda jest wywoływana bezpośrednio przed <xref:System.Windows.Forms.DataGridViewCell.OnContentDoubleClick%2A> metody. Aplikacja musi zwracać `true` Jeśli wywołanie <xref:System.Windows.Forms.DataGridViewCell.OnContentDoubleClick%2A> powoduje zatrzymywania udostępniania wiersza komórki. W przeciwnym razie powinien zwrócić `false`.  
  
 Aby uzyskać więcej informacji o udostępnianiu wiersza, zobacz [najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenuStrip">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ContextMenuStrip ContextMenuStrip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContextMenuStrip ContextMenuStrip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.ContextMenuStrip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContextMenuStrip As ContextMenuStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ContextMenuStrip ^ ContextMenuStrip { System::Windows::Forms::ContextMenuStrip ^ get(); void set(System::Windows::Forms::ContextMenuStrip ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextMenuStrip : System.Windows.Forms.ContextMenuStrip with get, set" Usage="System.Windows.Forms.DataGridViewCell.ContextMenuStrip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenuStrip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia menu skrótów skojarzone z komórki.</summary>
        <value>
          <see cref="T:System.Windows.Forms.ContextMenuStrip" /> Skojarzone z komórki.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość wskazuje menu skrótów, które jest zwykle wyświetlany po kliknięciu komórki.  
  
 Gdy <xref:System.Windows.Forms.DataGridView> kontroli <xref:System.Windows.Forms.DataGridView.DataSource%2A> właściwość jest ustawiona lub jej <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> właściwość jest `true`, pobierania wartości <xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A> zgłasza właściwości <xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded> zdarzeń formantu i zwraca wartość <xref:System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs.ContextMenuStrip%2A?displayProperty=nameWithType> Właściwość jako określonych w zdarzeniu programu obsługi. Jeśli nie ma żadnych programów obsługi dla zdarzenia, pobierania wartości <xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A> właściwość zwraca wcześniej określona wartość lub wartość domyślną `null`.  
  
 Obsługa <xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded> zdarzeń jest szczególnie przydatna podczas pracy z dużą ilością danych, aby uniknąć spadku wydajności podczas ustawiania komórki <xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A> wartości dla wielu komórek. Aby uzyskać więcej informacji, zobacz [najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 Zmienianie tej właściwości zgłasza <xref:System.Windows.Forms.DataGridView.CellContextMenuStripChanged> zdarzenia będący właścicielem <xref:System.Windows.Forms.DataGridView>, jeśli taka istnieje.  
  
 Można również określić menu skrótów dla poszczególnych wierszy, a nie poszczególnych komórek przez ustawienie wiersza <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> właściwości lub obsługa <xref:System.Windows.Forms.DataGridView> formantu <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded> zdarzeń. Komórki <xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A> wiersz zastępuje ustawienie właściwości <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> ustawienie właściwości oraz <xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded> zastąpienia obu zdarzeń <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded> zdarzeń i wiersza <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> ustawienie właściwości. Można określić `null` komórki menu skrótów, jednak, aby zapobiec zastąpieniu menu skrótów wiersza.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellContextMenuStripChanged" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.ContextMenuStrip" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetInheritedContextMenuStrip(System.Int32)" />
        <altmember cref="T:System.Windows.Forms.ContextMenuStrip" />
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="abstract member CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="dataGridViewCell.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nowy obiekt dostępny dla <see cref="T:System.Windows.Forms.DataGridViewCell" />.</summary>
        <returns>Nowy <see cref="T:System.Windows.Forms.DataGridViewCell.DataGridViewCellAccessibleObject" /> dla <see cref="T:System.Windows.Forms.DataGridViewCell" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie zostanie jawnie wywołana <xref:System.Windows.Forms.DataGridViewCell.CreateAccessibilityInstance%2A> metody, będzie ona wywoływana podczas <xref:System.Windows.Forms.DataGridViewCell.AccessibilityObject%2A> odwołuje się do właściwości.  
  
> [!NOTE]
>  Można pobrać lub ustawić <xref:System.Windows.Forms.DataGridViewCell.AccessibilityObject%2A>, należy dodać odwołanie do `Accessibility` zestawu z zainstalowanym [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell.DataGridViewCellAccessibleObject" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.AccessibilityObject" />
        <altmember cref="N:Accessibility" />
      </Docs>
    </Member>
    <Member MemberName="DefaultNewRowValue">
      <MemberSignature Language="C#" Value="public virtual object DefaultNewRowValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultNewRowValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.DefaultNewRowValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultNewRowValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ DefaultNewRowValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultNewRowValue : obj" Usage="System.Windows.Forms.DataGridViewCell.DefaultNewRowValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość domyślną dla komórki w wierszu dla nowych rekordów.</summary>
        <value>
          <see cref="T:System.Object" /> Reprezentujący wartość domyślną.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.DefaultNewRowValue%2A> Właściwości w klasie podstawowej <xref:System.Windows.Forms.DataGridViewCell> zawsze zwraca `null`. Jednak ta właściwość może być zastąpiona w klasach pochodnych komórki do zwrócenia innych wartości domyślnych.  
  
 Wartość zwrócona przez tę właściwość jest wyświetlana, jeśli komórka jest w wierszu dla nowych rekordów. Ta wartość może zostać zastąpiona przez program obsługi <xref:System.Windows.Forms.DataGridView.DefaultValuesNeeded?displayProperty=nameWithType> zdarzenie, gdy fokus wprowadzi wiersz dla nowych rekordów.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Windows.Forms.DataGridViewCell.DefaultNewRowValue%2A> właściwości w `CalendarCell` klasą pochodzącą z <xref:System.Windows.Forms.DataGridViewTextBoxCell>. Ten przykład jest częścią większego przykładu kodu w [porady: formanty hosta w komórkach DataGridView formularzy systemu Windows](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#200](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#200)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#200](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#200)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValue" />
      </Docs>
    </Member>
    <Member MemberName="DetachEditingControl">
      <MemberSignature Language="C#" Value="public virtual void DetachEditingControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DetachEditingControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.DetachEditingControl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DetachEditingControl ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DetachEditingControl();" />
      <MemberSignature Language="F#" Value="abstract member DetachEditingControl : unit -&gt; unit&#xA;override this.DetachEditingControl : unit -&gt; unit" Usage="dataGridViewCell.DetachEditingControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa do edytowania komórki kontrolować z <see cref="T:System.Windows.Forms.DataGridView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView> Wywołuje tę metodę, gdy bieżącej komórki obsługuje kontrolki edycji i kończy się w trybie edycji. Ta metoda usuwa <xref:System.Windows.Forms.DataGridView.EditingControl%2A> z <xref:System.Windows.Forms.DataGridView.EditingPanel%2A>, a następnie usuwa <xref:System.Windows.Forms.DataGridView.EditingPanel%2A> z <xref:System.Windows.Forms.Control.Controls%2A> kolekcji <xref:System.Windows.Forms.DataGridView>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Ta komórka nie jest skojarzony z <see cref="T:System.Windows.Forms.DataGridView" />.  - lub - <see cref="P:System.Windows.Forms.DataGridView.EditingControl" /> właściwości skojarzonego <see cref="T:System.Windows.Forms.DataGridView" /> ma wartość <see langword="null" />. Dotyczy to, na przykład, gdy formant nie jest w trybie edycji.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.EditingControl" />
        <altmember cref="P:System.Windows.Forms.DataGridView.EditingPanel" />
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.InitializeEditingControl(System.Int32,System.Object,System.Windows.Forms.DataGridViewCellStyle)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.PositionEditingControl(System.Boolean,System.Boolean,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DataGridViewCellStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.EditType" />
      </Docs>
    </Member>
    <Member MemberName="Displayed">
      <MemberSignature Language="C#" Value="public virtual bool Displayed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Displayed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.Displayed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Displayed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Displayed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Displayed : bool" Usage="System.Windows.Forms.DataGridViewCell.Displayed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy komórki są obecnie wyświetlane na ekranie.</summary>
        <value>
          <see langword="true" /> Jeśli komórka jest wyświetlane na ekranie lub częściowo na ekranie; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy do określenia, czy określonej komórki ma ekranem przewijane.  
  
 Jeśli komórki <xref:System.Windows.Forms.DataGridViewCell.Visible%2A> wartość właściwości jest `false`, ta właściwość będzie zwracać `false` również.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Visible" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwalnia zasoby używane przez <see cref="T:System.Windows.Forms.DataGridViewCell" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="dataGridViewCell.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia wszelkie zasoby używane przez <see cref="T:System.Windows.Forms.DataGridViewCell" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie <xref:System.Windows.Forms.DataGridViewCell.Dispose%2A> po zakończeniu przy użyciu <xref:System.Windows.Forms.DataGridViewCell>. <xref:System.Windows.Forms.DataGridViewCell.Dispose%2A> Pozostawia metody <xref:System.Windows.Forms.DataGridViewCell> w stanie uniemożliwiającym jego używanie. Po wywołaniu <xref:System.Windows.Forms.DataGridViewCell.Dispose%2A>, konieczne jest zwolnienie wszystkich odwołań do <xref:System.Windows.Forms.DataGridViewCell> , moduł zbierający elementy bezużyteczne mógł odzyskać pamięć który <xref:System.Windows.Forms.DataGridViewCell> klasy. Aby uzyskać więcej informacji, zobacz [czyszczenie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i [implementacja metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Wywoływanie zawsze <xref:System.Windows.Forms.DataGridViewCell.Dispose%2A> przed zwolnieniem ostatniego odwołania do <xref:System.Windows.Forms.DataGridViewCell>. W przeciwnym razie używa zasobów nie zostanie zwolniona do wywołania modułu zbierającego elementy bezużyteczne <xref:System.Windows.Forms.DataGridViewCell> obiektu `Finalize` metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="dataGridViewCell.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko zasoby niezarządzane.</param>
        <summary>Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Windows.Forms.DataGridViewCell" /> i opcjonalnie zwalnia zasoby zarządzane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana przez metodę publiczną `Dispose` — metoda i <xref:System.Object.Finalize%2A> metody. `Dispose` wywołuje chronioną metodę `Dispose(Boolean)` metody z `disposing` ustawiono parametr `true`. <xref:System.Object.Finalize%2A> wywołuje `Dispose` z `disposing` ustawioną `false`.  
  
 Gdy `disposing` parametr jest `true`, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane przez to <xref:System.Windows.Forms.DataGridViewCell> odwołania. Ta metoda wywołuje `Dispose` metody każdego odwołuje się do obiektu.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> można wywoływać wielokrotnie przez inne obiekty. W przypadku przesłaniania <see langword="Dispose(Boolean)" /> należy uważać, aby nie odwołują się obiekty, które zostały wcześniej zlikwidowane w wywołaniu wcześniejszych <see langword="Dispose" />. Aby uzyskać więcej informacji na temat sposobu wdrażania <see langword="Dispose(Boolean)" />, zobacz [implementacja Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Aby uzyskać więcej informacji na temat <see langword="Dispose" /> i <see cref="M:System.Object.Finalize" />, zobacz [czyszczenia Resources](~/docs/standard/garbage-collection/unmanaged.md) niezarządzane i [zastąpienie metody Finalize] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="DoubleClickUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool DoubleClickUnsharesRow (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool DoubleClickUnsharesRow(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.DoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function DoubleClickUnsharesRow (e As DataGridViewCellEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool DoubleClickUnsharesRow(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member DoubleClickUnsharesRow : System.Windows.Forms.DataGridViewCellEventArgs -&gt; bool&#xA;override this.DoubleClickUnsharesRow : System.Windows.Forms.DataGridViewCellEventArgs -&gt; bool" Usage="dataGridViewCell.DoubleClickUnsharesRow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /> Zawierającego dane przekazane do <see cref="M:System.Windows.Forms.DataGridViewCell.OnDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" /> metody.</param>
        <summary>Wskazuje, czy wiersz komórki będzie nieudostępnionych po dwukrotnym kliknięciu komórki.</summary>
        <returns>
          <see langword="true" /> Jeśli wiersz będzie nieudostępnionych, w przeciwnym razie <see langword="false" />. Podstawowym <see cref="T:System.Windows.Forms.DataGridViewCell" /> klasy zawsze zwraca <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.DoubleClickUnsharesRow%2A> Metoda jest wywoływana bezpośrednio przed <xref:System.Windows.Forms.DataGridViewCell.OnDoubleClick%2A> metody. Aplikacja musi zwracać `true` Jeśli wywołanie <xref:System.Windows.Forms.DataGridViewCell.OnDoubleClick%2A> powoduje zatrzymywania udostępniania wiersza komórki. W przeciwnym razie powinien zwrócić `false`.  
  
 Aby uzyskać więcej informacji o udostępnianiu wiersza, zobacz [najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="EditedFormattedValue">
      <MemberSignature Language="C#" Value="public object EditedFormattedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object EditedFormattedValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.EditedFormattedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditedFormattedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ EditedFormattedValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditedFormattedValue : obj" Usage="System.Windows.Forms.DataGridViewCell.EditedFormattedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący, sformatowana wartość komórki, niezależnie od tego, czy komórka jest w trybie edycji i wartości nie został przekazany.</summary>
        <value>Wartość bieżącego, sformatowany <see cref="T:System.Windows.Forms.DataGridViewCell" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość zwraca wartość bieżącej komórki lub kontrolki edycji, jeśli komórka jest w trybie edycji. W przeciwnym razie pobierania wartości tej właściwości konwertuje wartość komórki do wartości wyświetlania odpowiednik typu oznaczonego <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> właściwości. Uruchamia to <xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=nameWithType> zdarzenie, które może obsłużyć, aby dostosować konwersja wartości.  
  
 Jeśli formatowanie zakończy się niepowodzeniem, <xref:System.Windows.Forms.DataGridView.DataError?displayProperty=nameWithType> zdarzenie. W przypadku braku obsługi dla tego zdarzenia lub ustawia program obsługi <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=nameWithType> właściwości `true`, jest zgłaszany wyjątek.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.DataGridViewCell.EditedFormattedValue%2A> właściwości. W tym przykładzie <xref:System.Windows.Forms.DataGridView.IsCurrentCellDirty%2A> właściwość jest używana do określenia, jeśli zawartość bieżącej komórki została edycji i nie zadeklarowana i jeśli komórki została zmodyfikowana, zostanie użyta wartość edytowany. Ten przykład jest częścią większego przykładu dostępne w <xref:System.Windows.Forms.DataGridView.SelectionChanged?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wiersz zawierający komórki jest wierszu udostępnionym.  - lub - komórka jest komórki nagłówka kolumny.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" /> jest mniejsza niż 0, co oznacza, że komórki komórki nagłówka wiersza.</exception>
        <exception cref="T:System.Exception">Formatowanie nie powiodło się i połączenie nie jest brak obsługi dla <see cref="E:System.Windows.Forms.DataGridView.DataError" /> zdarzenie <see cref="T:System.Windows.Forms.DataGridView" /> formant lub obsługi, ustaw <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> właściwości <see langword="true" />. Obiekt wyjątku zwykle mogą być rzutowane na typ <see cref="T:System.FormatException" />.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="EditType">
      <MemberSignature Language="C#" Value="public virtual Type EditType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type EditType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.EditType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EditType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ EditType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditType : Type" Usage="System.Windows.Forms.DataGridViewCell.EditType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ hostowanej formantu edycji komórki.</summary>
        <value>A <see cref="T:System.Type" /> reprezentujący <see cref="T:System.Windows.Forms.DataGridViewTextBoxEditingControl" /> typu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typ pochodny komórki przesłania tę właściwość, aby zwracany typ jego obsługiwanego formantu edycji. Jeśli komórka nie ma formant edycji, jak <xref:System.Windows.Forms.DataGridViewButtonCell>, <xref:System.Windows.Forms.DataGridViewCell.EditType%2A> zwraca właściwość `null`.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Windows.Forms.DataGridViewCell.EditType%2A> właściwości w `CalendarCell` klasą pochodzącą z <xref:System.Windows.Forms.DataGridViewTextBoxCell>. Ten przykład jest częścią większego przykładu kodu w [porady: formanty hosta w komórkach DataGridView formularzy systemu Windows](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#200](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#200)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#200](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#200)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.IDataGridViewEditingControl" />
        <altmember cref="T:System.Windows.Forms.DataGridViewButtonCell" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValueType" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.EditType" />
      </Docs>
    </Member>
    <Member MemberName="EnterUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool EnterUnsharesRow (int rowIndex, bool throughMouseClick);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool EnterUnsharesRow(int32 rowIndex, bool throughMouseClick) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.EnterUnsharesRow(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EnterUnsharesRow (rowIndex As Integer, throughMouseClick As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool EnterUnsharesRow(int rowIndex, bool throughMouseClick);" />
      <MemberSignature Language="F#" Value="abstract member EnterUnsharesRow : int * bool -&gt; bool&#xA;override this.EnterUnsharesRow : int * bool -&gt; bool" Usage="dataGridViewCell.EnterUnsharesRow (rowIndex, throughMouseClick)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="throughMouseClick" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Indeks wiersza nadrzędnego komórki.</param>
        <param name="throughMouseClick">
          <see langword="true" /> Jeśli akcja użytkownika przeniesiony fokus do komórki; <see langword="false" /> przypadku programowych operacji przeniesienia fokus do komórki.</param>
        <summary>Wskazuje, czy wiersza nadrzędnego będzie nieudostępnionych fokusu do komórki.</summary>
        <returns>
          <see langword="true" /> Jeśli wiersz będzie nieudostępnionych; w przeciwnym razie <see langword="false" />. Podstawowym <see cref="T:System.Windows.Forms.DataGridViewCell" /> klasy zawsze zwraca <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.EnterUnsharesRow%2A> Metoda jest wywoływana bezpośrednio przed <xref:System.Windows.Forms.DataGridViewCell.OnEnter%2A> metody. Aplikacja musi zwracać `true` Jeśli wywołanie <xref:System.Windows.Forms.DataGridViewCell.OnEnter%2A> powoduje zatrzymywania udostępniania wiersz zawierający komórkę. W przeciwnym razie powinien zwrócić `false`.  
  
 Aby uzyskać więcej informacji o udostępnianiu wiersza, zobacz [najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnEnter(System.Int32,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnLeave(System.Int32,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ErrorIconBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle ErrorIconBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle ErrorIconBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.ErrorIconBounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorIconBounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle ErrorIconBounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.ErrorIconBounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.DataGridViewCell.ErrorIconBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera granice ikony błędu komórki.</summary>
        <value>A <see cref="T:System.Drawing.Rectangle" /> reprezentujący granice ikony błędu dla bieżącego <see cref="T:System.Windows.Forms.DataGridViewCell" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Prostokąt zwrócony raport współrzędne klienta w pikselach.  
  
 Gdy <xref:System.Windows.Forms.DataGridView.ShowCellErrors%2A?displayProperty=nameWithType> właściwość jest `false`, wartość tej właściwości jest <xref:System.Drawing.Rectangle.Empty>.  
  
 Ta metoda wywołuje <xref:System.Windows.Forms.DataGridViewCell.GetErrorIconBounds%2A> metodę, aby pobrać jego wartości. Dla podstawy <xref:System.Windows.Forms.DataGridViewCell> , ta wartość jest zawsze typu <xref:System.Drawing.Rectangle.Empty>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Komórka nie należy do <see cref="T:System.Windows.Forms.DataGridView" /> formantu.  - lub - <see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" /> jest mniejszy niż 0, co oznacza, że komórki komórki nagłówka wiersza.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Wiersz zawierający komórki jest wierszu udostępnionym.  - lub - komórka jest komórki nagłówka kolumny.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetErrorIconBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)" />
        <altmember cref="T:System.Drawing.Rectangle" />
      </Docs>
    </Member>
    <Member MemberName="ErrorText">
      <MemberSignature Language="C#" Value="public string ErrorText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.ErrorText" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ErrorText : string with get, set" Usage="System.Windows.Forms.DataGridViewCell.ErrorText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst opisujący błąd skojarzone z komórki.</summary>
        <value>Tekst opisujący błąd skojarzone z komórki.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj <xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A> właściwość jest używana podczas obsługi <xref:System.Windows.Forms.DataGridView.CellValidating> zdarzenie <xref:System.Windows.Forms.DataGridView>. Jeśli wartość komórki nie powiedzie się niektóre kryteria sprawdzania poprawności, ustaw <xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A> właściwości i Anuluj operację zatwierdzania przez ustawienie <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwość <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs> do `true`. Należy określić tekst zebrane przez <xref:System.Windows.Forms.DataGridView>, a użytkownik zostanie poproszony o Napraw błąd w danych komórki.  
  
 Gdy <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> właściwość <xref:System.Windows.Forms.DataGridView> jest `true`, możesz podać tekst błędu dla wierszy i komórek przy użyciu <xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded> i <xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded> zdarzenia.  
  
 Po przypisaniu innej <xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A> ciągu w komórce, <xref:System.Windows.Forms.DataGridView.CellErrorTextChanged> zdarzenie <xref:System.Windows.Forms.DataGridView> kontroli jest wywoływane.  
  
 Począwszy od programu .NET Framework 4.5.2, możliwość zmiany rozmiaru ikony błędu jest określany przez ustawienie DPI systemu, gdy pliku app.config zawiera następujący wpis:  
  
```  
<appSettings>  
  <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />  
</appSettings>  
```  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak używać tej właściwości podczas obsługi błędów w niezwiązanego <xref:System.Windows.Forms.DataGridView>. `AnnotateCell` Metody ustawia ciąg z komunikatem o <xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A> właściwości.  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#9)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#9)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellValidatingEventArgs" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValidating" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellErrorTextNeeded" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellErrorTextChanged" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~DataGridViewCell ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!DataGridViewCell ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="dataGridViewCell.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia zasoby niezarządzane i wykonuje inne operacje oczyszczania przed <see cref="T:System.Windows.Forms.DataGridViewCell" /> jest odzyskana przez wyrzucanie elementów bezużytecznych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wywołuje <xref:System.Windows.Forms.DataGridViewCell.Dispose%2A> metody z `false` jako parametr.  
  
 Ta metoda zastępuje <xref:System.Object.Finalize%2A>. Kod aplikacji nie powinny wywoływać tej metody; obiekt `Finalize` metoda jest wywoływana automatycznie podczas wyrzucania elementów bezużytecznych, chyba że finalizacji przez moduł garbage collector została wyłączona przez wywołanie do <xref:System.GC.SuppressFinalize%2A> metody.  
  
 Aby uzyskać więcej informacji, zobacz [metody Finalize i destruktory](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [czyszczenie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md), i [przesłaniania metody Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="FormattedValue">
      <MemberSignature Language="C#" Value="public object FormattedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormattedValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.FormattedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FormattedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormattedValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FormattedValue : obj" Usage="System.Windows.Forms.DataGridViewCell.FormattedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość komórki jako sformatowana do wyświetlenia.</summary>
        <value>Sformatowana wartość komórki lub <see langword="null" /> Jeśli komórka nie należy do <see cref="T:System.Windows.Forms.DataGridView" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.Value%2A> Właściwość jest obiekt danych rzeczywistych zawarty w komórce, podczas gdy <xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A> jest sformatowany reprezentację tego obiektu. <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> i <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> właściwości odpowiadają odpowiednio do typów danych z tych wartości.  
  
 Pobieranie wartości tej właściwości wywołuje <xref:System.Windows.Forms.DataGridViewCell.GetFormattedValue%2A> metodę, aby przekonwertować wartość komórki do wartości wyświetlania odpowiednik typu oznaczonego <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> właściwości. Uruchamia to <xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=nameWithType> zdarzenie, które może obsłużyć, aby dostosować konwersja wartości.  
  
 Jeśli formatowanie zakończy się niepowodzeniem, <xref:System.Windows.Forms.DataGridView.DataError?displayProperty=nameWithType> zdarzenie. W przypadku braku obsługi dla tego zdarzenia lub ustawia program obsługi <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=nameWithType> właściwości `true`, jest zgłaszany wyjątek.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A> właściwości. W tym przykładzie <xref:System.Windows.Forms.DataGridView.IsCurrentCellDirty%2A> właściwość jest używana, aby ustalić, czy zawartość bieżącej komórki została edycji i nie zadeklarowana i, jeśli komórka został zmodyfikowany, <xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A> jest używany. Ten przykład jest częścią większego przykładu dostępne w <xref:System.Windows.Forms.DataGridView.SelectionChanged?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" /> jest mniejsza niż 0, co oznacza, że komórki komórki nagłówka wiersza.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Wiersz zawierający komórki jest wierszu udostępnionym.  - lub - komórka jest komórki nagłówka kolumny.</exception>
        <exception cref="T:System.Exception">Formatowanie nie powiodło się i połączenie nie jest brak obsługi dla <see cref="E:System.Windows.Forms.DataGridView.DataError" /> zdarzenie <see cref="T:System.Windows.Forms.DataGridView" /> formant lub obsługi, ustaw <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> właściwości <see langword="true" />. Obiekt wyjątku zwykle mogą być rzutowane na typ <see cref="T:System.FormatException" />.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValueType" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ValueType" />
        <altmember cref="T:System.Windows.Forms.IDataGridViewEditingControl" />
      </Docs>
    </Member>
    <Member MemberName="FormattedValueType">
      <MemberSignature Language="C#" Value="public virtual Type FormattedValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type FormattedValueType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.FormattedValueType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FormattedValueType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ FormattedValueType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FormattedValueType : Type" Usage="System.Windows.Forms.DataGridViewCell.FormattedValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ sformatowaną wartość skojarzoną z komórki.</summary>
        <value>A <see cref="T:System.Type" /> reprezentujący typ komórki jego sformatowana wartość.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.Value%2A> Właściwość jest obiekt danych rzeczywistych zawarty w komórce, podczas gdy <xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A> właściwość jest sformatowany reprezentację danych. <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> i <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> właściwości odpowiadają odpowiednio do typów danych z tych wartości.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> właściwości można określić typu zawartości komórki. W tym przykładzie <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> właściwość jest używana do określenia, czy komórka zawiera <xref:System.String> przed próbą konwertowania wartości. Ten przykład jest częścią większego przykładu dostępne w <xref:System.Windows.Forms.DataGridView.SelectionChanged?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ValueType" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
      </Docs>
    </Member>
    <Member MemberName="Frozen">
      <MemberSignature Language="C#" Value="public virtual bool Frozen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Frozen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.Frozen" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Frozen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Frozen { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Frozen : bool" Usage="System.Windows.Forms.DataGridViewCell.Frozen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy komórki jest zablokowana.</summary>
        <value>
          <see langword="true" /> Jeśli komórka jest zablokowany; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Windows.Forms.DataGridViewCell.Frozen%2A> właściwości jest zależny od stanu nadrzędnego wiersz i kolumnę komórki. Jeśli `Frozen` ma ustawioną właściwość wiersz lub kolumnę `true`, komórki <xref:System.Windows.Forms.DataGridViewCell.Frozen%2A> będzie również właściwość `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewElementStates" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.Frozen" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.Frozen" />
      </Docs>
    </Member>
    <Member MemberName="GetClipboardContent">
      <MemberSignature Language="C#" Value="protected virtual object GetClipboardContent (int rowIndex, bool firstCell, bool lastCell, bool inFirstRow, bool inLastRow, string format);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetClipboardContent(int32 rowIndex, bool firstCell, bool lastCell, bool inFirstRow, bool inLastRow, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetClipboardContent(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetClipboardContent (rowIndex As Integer, firstCell As Boolean, lastCell As Boolean, inFirstRow As Boolean, inLastRow As Boolean, format As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetClipboardContent(int rowIndex, bool firstCell, bool lastCell, bool inFirstRow, bool inLastRow, System::String ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetClipboardContent : int * bool * bool * bool * bool * string -&gt; obj&#xA;override this.GetClipboardContent : int * bool * bool * bool * bool * string -&gt; obj" Usage="dataGridViewCell.GetClipboardContent (rowIndex, firstCell, lastCell, inFirstRow, inLastRow, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="firstCell" Type="System.Boolean" />
        <Parameter Name="lastCell" Type="System.Boolean" />
        <Parameter Name="inFirstRow" Type="System.Boolean" />
        <Parameter Name="inLastRow" Type="System.Boolean" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Liczony od zera indeks wiersza zawierającego komórkę.</param>
        <param name="firstCell">
          <see langword="true" /> Aby wskazać, że komórka jest w pierwszej kolumnie region zdefiniowany przez zaznaczonych komórek; w przeciwnym razie <see langword="false" />.</param>
        <param name="lastCell">
          <see langword="true" /> do wskazywania komórki ostatnia kolumna region zdefiniowany przez zaznaczonych komórek; w przeciwnym razie <see langword="false" />.</param>
        <param name="inFirstRow">
          <see langword="true" /> Aby wskazać, że komórka znajduje się w pierwszym wierszu region zdefiniowany przez zaznaczonych komórek; w przeciwnym razie <see langword="false" />.</param>
        <param name="inLastRow">
          <see langword="true" /> Aby wskazać, że komórka jest w ostatnim wierszu region zdefiniowany przez zaznaczonych komórek; w przeciwnym razie <see langword="false" />.</param>
        <param name="format">Ciąg formatu bieżącej komórki.</param>
        <summary>Pobiera sformatowana wartość komórki do skopiowania do <see cref="T:System.Windows.Forms.Clipboard" />.</summary>
        <returns>
          <see cref="T:System.Object" /> Reprezentujący wartość komórki do skopiowania do <see cref="T:System.Windows.Forms.Clipboard" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana przez <xref:System.Windows.Forms.DataGridView.GetClipboardContent%2A?displayProperty=nameWithType> metoda pobierania sformatowany Schowka wartość, która reprezentuje wartość komórki.  
  
 Wartość komórki najpierw jest pobierana w jego format wyświetlania z <xref:System.Windows.Forms.DataGridViewCell.GetEditedFormattedValue%2A> metody. Może <xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=nameWithType> zdarzeń do formatowania wartości i <xref:System.Windows.Forms.DataGridView.DataError?displayProperty=nameWithType> zdarzeń, jeśli formatowanie zakończy się niepowodzeniem.  
  
 Parametry dotyczące pozycji, tej metody wskazać lokalizację ta komórka w tabeli danych reprezentujące region zdefiniowany przez zaznaczonych komórek w <xref:System.Windows.Forms.DataGridView> formantu. W zależności od pozycji komórki dodatkowe informacje dotyczące formatowania mogą być zwrócone przez tę metodę, wraz z wartości komórki sformatowane wyświetlania. Na przykład format HTML komórki w pierwszej kolumny wiersza zawiera tag, który wskazuje na początek wiersza.  
  
 Obsługiwane formaty Schowka to <xref:System.Windows.Forms.DataFormats.Text?displayProperty=nameWithType>, <xref:System.Windows.Forms.DataFormats.UnicodeText?displayProperty=nameWithType>, <xref:System.Windows.Forms.DataFormats.Html?displayProperty=nameWithType>, i <xref:System.Windows.Forms.DataFormats.CommaSeparatedValue?displayProperty=nameWithType>.  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Forms.Clipboard> klasy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="rowIndex" /> jest mniejsza niż 0 lub większa niż lub równa liczbie wierszy w formancie.</exception>
        <exception cref="T:System.InvalidOperationException">Wartość komórki <see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" /> jest właściwość <see langword="null" />.  - lub - <see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" /> jest mniejszy niż 0, co oznacza, że komórki komórki nagłówka wiersza.</exception>
        <exception cref="T:System.Exception">Formatowanie nie powiodło się i połączenie nie jest brak obsługi dla <see cref="E:System.Windows.Forms.DataGridView.DataError" /> zdarzenie <see cref="T:System.Windows.Forms.DataGridView" /> formant lub obsługi, ustaw <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> właściwości <see langword="true" />. Obiekt wyjątku zwykle mogą być rzutowane na typ <see cref="T:System.FormatException" />.</exception>
        <block subset="none" type="overrides">
          <para>Zastępuje tę metodę, aby zapewnić dostosowanych wartości do Schowka. Na przykład można przesłonić tę metodę do obsługi Kopiowanie wartości z typów niestandardowych komórki.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="P:System.Windows.Forms.DataGridView.ClipboardCopyMode" />
        <altmember cref="T:System.Windows.Forms.DataGridViewClipboardCopyMode" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetContentBounds">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca prostokąt ograniczający ograniczający obszaru zawartości komórki.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetContentBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetContentBounds (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetContentBounds(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetContentBounds(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContentBounds (rowIndex As Integer) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetContentBounds(int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.GetContentBounds : int -&gt; System.Drawing.Rectangle" Usage="dataGridViewCell.GetContentBounds rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Indeks wiersza nadrzędnego komórki.</param>
        <summary>Zwraca prostokąt ograniczający ograniczający obszaru zawartości komórki przy użyciu domyślnej <see cref="T:System.Drawing.Graphics" /> komórek styl aktualnie obowiązującą dla komórki.</summary>
        <returns>
          <see cref="T:System.Drawing.Rectangle" /> Który zakresem zawartości komórki.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rozmiar zawartości komórki jest obliczana dynamicznie, gdy ta metoda jest wywoływana. Implementacja klasy podstawowej zawsze zwraca <xref:System.Drawing.Rectangle.Empty?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określony <paramref name="rowIndex" /> jest mniejsza niż 0 lub większa niż liczba wierszy w formancie pomniejszonej o 1.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" /> jest mniejsza niż 0, co oznacza, że komórki komórki nagłówka wiersza.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="GetContentBounds">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Rectangle GetContentBounds (System.Drawing.Graphics graphics, System.Windows.Forms.DataGridViewCellStyle cellStyle, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Drawing.Rectangle GetContentBounds(class System.Drawing.Graphics graphics, class System.Windows.Forms.DataGridViewCellStyle cellStyle, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetContentBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Drawing::Rectangle GetContentBounds(System::Drawing::Graphics ^ graphics, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetContentBounds : System.Drawing.Graphics * System.Windows.Forms.DataGridViewCellStyle * int -&gt; System.Drawing.Rectangle&#xA;override this.GetContentBounds : System.Drawing.Graphics * System.Windows.Forms.DataGridViewCellStyle * int -&gt; System.Drawing.Rectangle" Usage="dataGridViewCell.GetContentBounds (graphics, cellStyle, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="graphics">Kontekst grafiki komórki.</param>
        <param name="cellStyle">
          <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> Ma zostać zastosowany do komórki.</param>
        <param name="rowIndex">Indeks wiersza nadrzędnego komórki.</param>
        <summary>Zwraca prostokąt ograniczający ograniczający obszaru zawartości komórki, która jest obliczana przy użyciu określonego <see cref="T:System.Drawing.Graphics" /> i stylu komórki.</summary>
        <returns>
          <see cref="T:System.Drawing.Rectangle" /> Który zakresem zawartości komórki.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rozmiar zawartości komórki jest obliczana dynamicznie, gdy ta metoda jest wywoływana. Implementacja klasy podstawowej zawsze zwraca <xref:System.Drawing.Rectangle.Empty?displayProperty=nameWithType>.  
  
 Ta metoda jest wywoływana wewnętrznie podczas <xref:System.Windows.Forms.DataGridViewCell.ContentBounds%2A> odczytać właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ContentBounds" />
      </Docs>
    </Member>
    <Member MemberName="GetEditedFormattedValue">
      <MemberSignature Language="C#" Value="public object GetEditedFormattedValue (int rowIndex, System.Windows.Forms.DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetEditedFormattedValue(int32 rowIndex, valuetype System.Windows.Forms.DataGridViewDataErrorContexts context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetEditedFormattedValue(System.Int32,System.Windows.Forms.DataGridViewDataErrorContexts)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEditedFormattedValue (rowIndex As Integer, context As DataGridViewDataErrorContexts) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetEditedFormattedValue(int rowIndex, System::Windows::Forms::DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="F#" Value="member this.GetEditedFormattedValue : int * System.Windows.Forms.DataGridViewDataErrorContexts -&gt; obj" Usage="dataGridViewCell.GetEditedFormattedValue (rowIndex, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="context" Type="System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Indeks wiersza komórki.</param>
        <param name="context">Bitowe połączenie <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> wartości, które określa kontekst błędu danych.</param>
        <summary>Zwraca bieżący, sformatowana wartość komórki, niezależnie od tego, czy komórki w trybie edycji i wartości nie został przekazany.</summary>
        <returns>Wartość bieżącego, sformatowany <see cref="T:System.Windows.Forms.DataGridViewCell" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zwraca wartość bieżącą edytowania komórki lub kontrolki edycji, jeśli komórka jest w trybie edycji. W przeciwnym razie ta metoda konwertuje wartość komórki do wartości wyświetlania odpowiednik typu oznaczonego <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> właściwości. Uruchamia to <xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=nameWithType> zdarzenie, które może obsłużyć, aby dostosować konwersja wartości.  
  
 Jeśli formatowanie zakończy się niepowodzeniem, <xref:System.Windows.Forms.DataGridView.DataError?displayProperty=nameWithType> zdarzenie. W przypadku braku obsługi dla tego zdarzenia lub ustawia program obsługi <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=nameWithType> właściwości `true`, jest zgłaszany wyjątek.  
  
 Klasy pochodne, które należy przesłonić tę metodę zwykle zwraca reprezentację ciągu wartość komórki w przypadku `context` zawiera argument <xref:System.Windows.Forms.DataGridViewDataErrorContexts.ClipboardContent> wartość.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określony <paramref name="rowIndex" /> jest mniejsza niż 0 lub większa niż liczba wierszy w formancie pomniejszonej o 1.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" /> jest mniejsza niż 0, co oznacza, że komórki komórki nagłówka wiersza.</exception>
        <exception cref="T:System.Exception">Formatowanie nie powiodło się i połączenie nie jest brak obsługi dla <see cref="E:System.Windows.Forms.DataGridView.DataError" /> zdarzenie <see cref="T:System.Windows.Forms.DataGridView" /> formant lub obsługi, ustaw <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> właściwości <see langword="true" />. Obiekt wyjątku zwykle mogą być rzutowane na typ <see cref="T:System.FormatException" />.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
      </Docs>
    </Member>
    <Member MemberName="GetErrorIconBounds">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Rectangle GetErrorIconBounds (System.Drawing.Graphics graphics, System.Windows.Forms.DataGridViewCellStyle cellStyle, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Drawing.Rectangle GetErrorIconBounds(class System.Drawing.Graphics graphics, class System.Windows.Forms.DataGridViewCellStyle cellStyle, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetErrorIconBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Drawing::Rectangle GetErrorIconBounds(System::Drawing::Graphics ^ graphics, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetErrorIconBounds : System.Drawing.Graphics * System.Windows.Forms.DataGridViewCellStyle * int -&gt; System.Drawing.Rectangle&#xA;override this.GetErrorIconBounds : System.Drawing.Graphics * System.Windows.Forms.DataGridViewCellStyle * int -&gt; System.Drawing.Rectangle" Usage="dataGridViewCell.GetErrorIconBounds (graphics, cellStyle, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="graphics">Kontekst grafiki komórki.</param>
        <param name="cellStyle">
          <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> Ma zostać zastosowany do komórki.</param>
        <param name="rowIndex">Indeks wiersza nadrzędnego komórki.</param>
        <summary>Zwraca prostokąt ograniczający ograniczający ikony błędu komórki, jeśli wyświetlony jeden.</summary>
        <returns>
          <see cref="T:System.Drawing.Rectangle" /> Który zakresem ikony błędu komórki, jeśli jest wyświetlany, a w przeciwnym razie <see cref="F:System.Drawing.Rectangle.Empty" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rozmiar obszaru ikony błędu komórki jest obliczana dynamicznie, gdy ta metoda jest wywoływana. Implementacja klasy podstawowej zawsze zwraca <xref:System.Drawing.Rectangle.Empty?displayProperty=nameWithType>.  
  
 Ta metoda jest wywoływana wewnętrznie podczas <xref:System.Windows.Forms.DataGridViewCell.ErrorIconBounds%2A> odczytać właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ErrorIconBounds" />
      </Docs>
    </Member>
    <Member MemberName="GetErrorText">
      <MemberSignature Language="C#" Value="protected internal virtual string GetErrorText (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetErrorText(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetErrorText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetErrorText (rowIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ GetErrorText(int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetErrorText : int -&gt; string&#xA;override this.GetErrorText : int -&gt; string" Usage="dataGridViewCell.GetErrorText rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Indeks wiersza komórki.</param>
        <summary>Zwraca ciąg reprezentujący błąd dla komórki.</summary>
        <returns>Ciąg opisujący błąd dla bieżącego <see cref="T:System.Windows.Forms.DataGridViewCell" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="GetFormattedValue">
      <MemberSignature Language="C#" Value="protected virtual object GetFormattedValue (object value, int rowIndex, ref System.Windows.Forms.DataGridViewCellStyle cellStyle, System.ComponentModel.TypeConverter valueTypeConverter, System.ComponentModel.TypeConverter formattedValueTypeConverter, System.Windows.Forms.DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetFormattedValue(object value, int32 rowIndex, class System.Windows.Forms.DataGridViewCellStyle&amp; cellStyle, class System.ComponentModel.TypeConverter valueTypeConverter, class System.ComponentModel.TypeConverter formattedValueTypeConverter, valuetype System.Windows.Forms.DataGridViewDataErrorContexts context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetFormattedValue(System.Object,System.Int32,System.Windows.Forms.DataGridViewCellStyle@,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter,System.Windows.Forms.DataGridViewDataErrorContexts)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetFormattedValue (value As Object, rowIndex As Integer, ByRef cellStyle As DataGridViewCellStyle, valueTypeConverter As TypeConverter, formattedValueTypeConverter As TypeConverter, context As DataGridViewDataErrorContexts) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetFormattedValue(System::Object ^ value, int rowIndex, System::Windows::Forms::DataGridViewCellStyle ^ % cellStyle, System::ComponentModel::TypeConverter ^ valueTypeConverter, System::ComponentModel::TypeConverter ^ formattedValueTypeConverter, System::Windows::Forms::DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="F#" Value="abstract member GetFormattedValue : obj * int *  * System.ComponentModel.TypeConverter * System.ComponentModel.TypeConverter * System.Windows.Forms.DataGridViewDataErrorContexts -&gt; obj&#xA;override this.GetFormattedValue : obj * int *  * System.ComponentModel.TypeConverter * System.ComponentModel.TypeConverter * System.Windows.Forms.DataGridViewDataErrorContexts -&gt; obj" Usage="dataGridViewCell.GetFormattedValue (value, rowIndex, cellStyle, valueTypeConverter, formattedValueTypeConverter, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle&amp;" RefType="ref" />
        <Parameter Name="valueTypeConverter" Type="System.ComponentModel.TypeConverter" />
        <Parameter Name="formattedValueTypeConverter" Type="System.ComponentModel.TypeConverter" />
        <Parameter Name="context" Type="System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Parameters>
      <Docs>
        <param name="value">Wartość do sformatowania.</param>
        <param name="rowIndex">Indeks wiersza nadrzędnego komórki.</param>
        <param name="cellStyle">
          <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> Dla komórki.</param>
        <param name="valueTypeConverter">A <see cref="T:System.ComponentModel.TypeConverter" /> skojarzone z typu wartości, który zapewnia niestandardowe konwersji na typ sformatowana wartość lub <see langword="null" /> Jeśli brak konwersji niestandardowych nie jest konieczne.</param>
        <param name="formattedValueTypeConverter">A <see cref="T:System.ComponentModel.TypeConverter" /> skojarzone z typem sformatowana wartość, zapewniająca niestandardowych konwersji z typu wartości lub <see langword="null" /> Jeśli brak konwersji niestandardowych nie jest konieczne.</param>
        <param name="context">Bitowe połączenie <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> wartości opisujące kontekst, w którym sformatowana wartość jest wymagana.</param>
        <summary>Pobiera wartość komórki jako sformatowana do wyświetlenia.</summary>
        <returns>Sformatowana wartość komórki lub <see langword="null" /> Jeśli komórka nie należy do <see cref="T:System.Windows.Forms.DataGridView" /> formantu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView> Kontroli wywołuje tę metodę można przekonwertować wartości komórki do wartości wyświetlania odpowiednik typu oznaczonego <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> właściwości. Formant przekazuje wartość komórki do tej metody w `value` parametru.  
  
 Ta metoda zgłasza <xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=nameWithType> zdarzeń. Program obsługi dla tego zdarzenia można modyfikować zarówno `value` i `cellStyle` parametrów. Jeśli program obsługi nie <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=nameWithType> właściwości `true`, jednak ta metoda formatuje `value` przy użyciu właściwości formatowania `cellStyle` obiektu.  
  
> [!NOTE]
>  Ta metoda nie konwertuje `value` do <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A?displayProperty=nameWithType> wartości właściwości dla wartości równej <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A?displayProperty=nameWithType> wartość właściwości, gdy <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A> ma ustawioną wartość innych niż <xref:System.DBNull.Value?displayProperty=nameWithType> lub `null`. W takim przypadku można obsługiwać <xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=nameWithType> zdarzeń do wyświetlenia <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> wartości właściwości. Aby uzyskać więcej informacji, zobacz przykład kodu w <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>.  
  
 Jeśli formatowanie zakończy się niepowodzeniem, <xref:System.Windows.Forms.DataGridView.DataError> zdarzenie. W przypadku braku obsługi dla tego zdarzenia lub ustawia program obsługi <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=nameWithType> właściwości `true`, jest zgłaszany wyjątek.  
  
 Klasy pochodne, które należy przesłonić tę metodę zwykle zwraca reprezentację ciągu wartość komórki w przypadku `context` zawiera argument <xref:System.Windows.Forms.DataGridViewDataErrorContexts.ClipboardContent> wartość.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Formatowanie nie powiodło się i połączenie nie jest brak obsługi dla <see cref="E:System.Windows.Forms.DataGridView.DataError" /> zdarzenie <see cref="T:System.Windows.Forms.DataGridView" /> formant lub obsługi, ustaw <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> właściwości <see langword="true" />. Obiekt wyjątku zwykle mogą być rzutowane na typ <see cref="T:System.FormatException" />.</exception>
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValueType" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
        <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.Format" />
        <altmember cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.ParseFormattedValue(System.Object,System.Windows.Forms.DataGridViewCellStyle,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter)" />
      </Docs>
    </Member>
    <Member MemberName="GetInheritedContextMenuStrip">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ContextMenuStrip GetInheritedContextMenuStrip (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ContextMenuStrip GetInheritedContextMenuStrip(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetInheritedContextMenuStrip(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInheritedContextMenuStrip (rowIndex As Integer) As ContextMenuStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ContextMenuStrip ^ GetInheritedContextMenuStrip(int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetInheritedContextMenuStrip : int -&gt; System.Windows.Forms.ContextMenuStrip&#xA;override this.GetInheritedContextMenuStrip : int -&gt; System.Windows.Forms.ContextMenuStrip" Usage="dataGridViewCell.GetInheritedContextMenuStrip rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenuStrip</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Indeks wiersza bieżącej komórki.</param>
        <summary>Pobiera menu skrótów dziedziczone dla bieżącej komórki.</summary>
        <returns>A <see cref="T:System.Windows.Forms.ContextMenuStrip" /> Jeśli nadrzędnego <see cref="T:System.Windows.Forms.DataGridView" />, <see cref="T:System.Windows.Forms.DataGridViewRow" />, lub <see cref="T:System.Windows.Forms.DataGridViewColumn" /> ma <see cref="T:System.Windows.Forms.ContextMenuStrip" /> przypisanej; w przeciwnym razie <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli komórka nie ma skojarzonego <xref:System.Windows.Forms.ContextMenuStrip>, odziedziczą jeden z jego elementów nadrzędnych za pomocą w następującej kolejności:  
  
1.  Ta komórka <xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A>  
  
2.  Właścicielem wiersza <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A?displayProperty=nameWithType>  
  
3.  Kolumna będący właścicielem <xref:System.Windows.Forms.DataGridViewColumn.ContextMenuStrip%2A?displayProperty=nameWithType>  
  
4.  Tabela nadrzędna <xref:System.Windows.Forms.ContextMenuStrip?displayProperty=nameWithType>  
  
 Menu skrótów są natywne zasoby Microsoft Windows, których okresy istnienia są zazwyczaj kierowane przez <xref:System.Windows.Forms.DataGridViewCell.Dispose%2A> metody lub destruktor.  
  
 Przekaż <xref:System.Windows.Forms.DataGridViewCell.GetInheritedContextMenuStrip%2A> metody używane do pobierania indeks wiersza <xref:System.Windows.Forms.DataGridViewCell>. Nie używaj <xref:System.Windows.Forms.DataGridViewCell.RowIndex%2A> właściwość `rowIndex` parametru. Jeśli wiersz jest udostępniana, <xref:System.Windows.Forms.DataGridViewCell.RowIndex%2A> wynosi -1, która nie jest prawidłową wartością dla `rowIndex`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość <see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" /> właściwości komórki nie jest <see langword="null" /> i określonego <paramref name="rowIndex" /> jest mniejsza niż 0 lub większa niż liczba wierszy w formancie pomniejszonej o 1.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" /> jest mniejsza niż 0, co oznacza, że komórki komórki nagłówka wiersza.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ContextMenuStrip" />
        <altmember cref="P:System.Windows.Forms.Control.ContextMenuStrip" />
        <altmember cref="T:System.Windows.Forms.ContextMenuStrip" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumn" />
      </Docs>
    </Member>
    <Member MemberName="GetInheritedState">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataGridViewElementStates GetInheritedState (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Forms.DataGridViewElementStates GetInheritedState(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetInheritedState(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInheritedState (rowIndex As Integer) As DataGridViewElementStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::DataGridViewElementStates GetInheritedState(int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetInheritedState : int -&gt; System.Windows.Forms.DataGridViewElementStates&#xA;override this.GetInheritedState : int -&gt; System.Windows.Forms.DataGridViewElementStates" Usage="dataGridViewCell.GetInheritedState rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewElementStates</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Indeks wiersza zawierającego komórkę.</param>
        <summary>Zwraca wartość wskazująca bieżący stan komórki jako odziedziczone z stanu jego wierszy i kolumn.</summary>
        <returns>Bitowe połączenie <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> wartości reprezentujący stan bieżącej komórki.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest przydatna do ustalenia stanu komórki w wierszu udostępnionym. Udostępnione wiersze mają <xref:System.Windows.Forms.DataGridViewBand.Index%2A> wartości-1, która uniemożliwia używanie <xref:System.Windows.Forms.DataGridViewCell.InheritedState%2A> właściwości z komórek w udostępnione wiersze. Aby użyć tej metody, należy przekazać w indeksie rzeczywisty wiersz zawierający tej komórki. Można pobrać rzeczywiste indeks wiersza udostępnionego przez wywołanie metody <xref:System.Windows.Forms.DataGridViewRowCollection.IndexOf%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Komórka nie jest zawarty w <see cref="T:System.Windows.Forms.DataGridView" /> kontroli i <paramref name="rowIndex" /> nie jest wartość -1.  - lub - <paramref name="rowIndex" /> nie jest indeks wiersza zawierającego tej komórki.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Komórka jest zawarty w <see cref="T:System.Windows.Forms.DataGridView" /> kontroli i <paramref name="rowIndex" /> jest poza prawidłowym zakresem 0, aby liczba wierszy w formancie pomniejszonej o 1.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="GetInheritedStyle">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataGridViewCellStyle GetInheritedStyle (System.Windows.Forms.DataGridViewCellStyle inheritedCellStyle, int rowIndex, bool includeColors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.DataGridViewCellStyle GetInheritedStyle(class System.Windows.Forms.DataGridViewCellStyle inheritedCellStyle, int32 rowIndex, bool includeColors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetInheritedStyle(System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInheritedStyle (inheritedCellStyle As DataGridViewCellStyle, rowIndex As Integer, includeColors As Boolean) As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::DataGridViewCellStyle ^ GetInheritedStyle(System::Windows::Forms::DataGridViewCellStyle ^ inheritedCellStyle, int rowIndex, bool includeColors);" />
      <MemberSignature Language="F#" Value="abstract member GetInheritedStyle : System.Windows.Forms.DataGridViewCellStyle * int * bool -&gt; System.Windows.Forms.DataGridViewCellStyle&#xA;override this.GetInheritedStyle : System.Windows.Forms.DataGridViewCellStyle * int * bool -&gt; System.Windows.Forms.DataGridViewCellStyle" Usage="dataGridViewCell.GetInheritedStyle (inheritedCellStyle, rowIndex, includeColors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inheritedCellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="includeColors" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inheritedCellStyle">A <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> wypełniana dziedziczonego stylu komórki.</param>
        <param name="rowIndex">Indeks wiersza nadrzędnego komórki.</param>
        <param name="includeColors">
          <see langword="true" /> Aby dołączyć dziedziczone kolorów w stylu komórki zwrócony; w przeciwnym razie <see langword="false" />.</param>
        <summary>Pobiera styl stosowany do komórki.</summary>
        <returns>A <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> zawierającej ustawienia stylu komórki dziedziczone z wiersza nadrzędnego komórki, kolumny i <see cref="T:System.Windows.Forms.DataGridView" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zwraca <xref:System.Windows.Forms.DataGridViewCellStyle> który dziedziczy ustawienia z <xref:System.Windows.Forms.DataGridViewCellStyle> obiekty nadrzędne komórki wiersze, kolumny i <xref:System.Windows.Forms.DataGridView>. Aby uzyskać więcej informacji, zobacz [style komórki w formancie DataGridView formularzy systemu Windows](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Komórka nie skojarzone <see cref="T:System.Windows.Forms.DataGridView" />.  - lub - <see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" /> jest mniejszy niż 0, co oznacza, że komórki komórki nagłówka wiersza.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="rowIndex" /> jest mniejsza niż 0, lub większa niż lub równa liczbie wierszy w obiekcie nadrzędnym <see cref="T:System.Windows.Forms.DataGridView" />.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.AdjustCellBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.HasStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Style" />
      </Docs>
    </Member>
    <Member MemberName="GetPreferredSize">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Size GetPreferredSize (System.Drawing.Graphics graphics, System.Windows.Forms.DataGridViewCellStyle cellStyle, int rowIndex, System.Drawing.Size constraintSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Drawing.Size GetPreferredSize(class System.Drawing.Graphics graphics, class System.Windows.Forms.DataGridViewCellStyle cellStyle, int32 rowIndex, valuetype System.Drawing.Size constraintSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetPreferredSize(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Drawing.Size)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Drawing::Size GetPreferredSize(System::Drawing::Graphics ^ graphics, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, int rowIndex, System::Drawing::Size constraintSize);" />
      <MemberSignature Language="F#" Value="abstract member GetPreferredSize : System.Drawing.Graphics * System.Windows.Forms.DataGridViewCellStyle * int * System.Drawing.Size -&gt; System.Drawing.Size&#xA;override this.GetPreferredSize : System.Drawing.Graphics * System.Windows.Forms.DataGridViewCellStyle * int * System.Drawing.Size -&gt; System.Drawing.Size" Usage="dataGridViewCell.GetPreferredSize (graphics, cellStyle, rowIndex, constraintSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="constraintSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Używany do rysowania komórki.</param>
        <param name="cellStyle">A <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> reprezentujący stylu komórki.</param>
        <param name="rowIndex">Indeks wiersza liczony od zera komórki.</param>
        <param name="constraintSize">Maksymalny dozwolony rozmiar komórki.</param>
        <summary>Oblicza preferowany rozmiar w pikselach komórki.</summary>
        <returns>A <see cref="T:System.Drawing.Size" /> reprezentujący preferowany rozmiar w pikselach komórki.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.GetPreferredSize%2A> Metody w klasie podstawowej <xref:System.Windows.Forms.DataGridViewCell> zawsze zwraca <xref:System.Drawing.Size> o szerokości i wysokości-1. Jednak ta metoda zostanie przesłonięta w klasach pochodnych komórki do zwrócenia odpowiednie wartości.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="GetSize">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Size GetSize (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Drawing.Size GetSize(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetSize(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSize (rowIndex As Integer) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Drawing::Size GetSize(int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetSize : int -&gt; System.Drawing.Size&#xA;override this.GetSize : int -&gt; System.Drawing.Size" Usage="dataGridViewCell.GetSize rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Indeks wiersza nadrzędnego komórki.</param>
        <summary>Pobiera rozmiar komórki.</summary>
        <returns>A <see cref="T:System.Drawing.Size" /> reprezentujący wymiary komórki.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie można użyć tej metody z komórki w wierszu udostępnionym.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="rowIndex" /> to -1</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="protected virtual object GetValue (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetValue(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetValue (rowIndex As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetValue(int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : int -&gt; obj&#xA;override this.GetValue : int -&gt; obj" Usage="dataGridViewCell.GetValue rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Indeks wiersza nadrzędnego komórki.</param>
        <summary>Pobiera wartość komórki.</summary>
        <returns>Wartość w <see cref="T:System.Windows.Forms.DataGridViewCell" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przekaż <xref:System.Windows.Forms.DataGridViewCell.GetValue%2A> metody używane do pobierania indeks wiersza <xref:System.Windows.Forms.DataGridViewCell>. Nie używaj <xref:System.Windows.Forms.DataGridViewCell.RowIndex%2A> właściwość `rowIndex` parametru. Jeśli wiersz jest udostępniana, <xref:System.Windows.Forms.DataGridViewCell.RowIndex%2A> wynosi -1, która nie jest prawidłową wartością dla `rowIndex`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość <see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" /> właściwości komórki nie jest <see langword="null" /> i <paramref name="rowIndex" /> jest mniejsza niż 0 lub większa niż lub równa liczbie wierszy w obiekcie nadrzędnym <see cref="T:System.Windows.Forms.DataGridView" />.</exception>
        <exception cref="T:System.InvalidOperationException">Wartość <see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" /> właściwości komórki nie jest <see langword="null" /> i wartość <see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" /> właściwości jest mniejsza niż 0, co oznacza, że komórki komórki nagłówka wiersza.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="HasStyle">
      <MemberSignature Language="C#" Value="public bool HasStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.HasStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasStyle As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasStyle { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasStyle : bool" Usage="System.Windows.Forms.DataGridViewCell.HasStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą czy <see cref="P:System.Windows.Forms.DataGridViewCell.Style" /> właściwość została ustawiona.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="P:System.Windows.Forms.DataGridViewCell.Style" /> właściwość została ustawiona, a w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pobieranie wartości <xref:System.Windows.Forms.DataGridViewCell.Style%2A> właściwości automatycznie tworzy nową <xref:System.Windows.Forms.DataGridViewCellStyle> Jeśli właściwość nie wcześniej była używana. W związku z tym należy użyć <xref:System.Windows.Forms.DataGridViewCell.HasStyle%2A> umożliwia określenie, czy <xref:System.Windows.Forms.DataGridViewCell.Style%2A> obecnie ustawioną właściwość <xref:System.Windows.Forms.DataGridViewCellStyle> wystąpienia. Jest to przydatne do określenia, które właściwości obiektu zwrócony przez <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> właściwości reprezentują style specjalnie dla komórki.  
  
 Aby uzyskać więcej informacji na temat dziedziczenia stylu komórki, zobacz [style komórki w formancie DataGridView formularzy systemu Windows](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.DefaultCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.AdjustCellBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetInheritedStyle(System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Boolean)" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Style" />
      </Docs>
    </Member>
    <Member MemberName="InheritedState">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewElementStates InheritedState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewElementStates InheritedState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.InheritedState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InheritedState As DataGridViewElementStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewElementStates InheritedState { System::Windows::Forms::DataGridViewElementStates get(); };" />
      <MemberSignature Language="F#" Value="member this.InheritedState : System.Windows.Forms.DataGridViewElementStates" Usage="System.Windows.Forms.DataGridViewCell.InheritedState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewElementStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący stan komórki jako odziedziczone z stanu jego wierszy i kolumn.</summary>
        <value>Bitowe połączenie <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> wartości reprezentujący stan bieżącej komórki.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Komórka nie jest zawarty w <see cref="T:System.Windows.Forms.DataGridView" /> kontroli i wartości jego <see cref="P:System.Windows.Forms.DataGridViewCell.RowIndex" /> właściwość nie jest wartość -1.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Komórka jest zawarty w <see cref="T:System.Windows.Forms.DataGridView" /> kontroli i wartości jego <see cref="P:System.Windows.Forms.DataGridViewCell.RowIndex" /> właściwość ma wartość -1.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="InheritedStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellStyle InheritedStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle InheritedStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InheritedStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellStyle ^ InheritedStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InheritedStyle : System.Windows.Forms.DataGridViewCellStyle" Usage="System.Windows.Forms.DataGridViewCell.InheritedStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera styl obecnie zastosowany do komórki.</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> Zastosowanym do komórki.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView> Kontroli wyświetla jego komórki za pomocą stylów wskazywanym przez komórki <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> właściwość, która dziedziczy style od innych właściwości typu <xref:System.Windows.Forms.DataGridViewCellStyle>. Style określonej za pomocą <xref:System.Windows.Forms.DataGridViewCell.Style%2A> właściwości zastępują style określony przy użyciu innych właściwości stylu komórki, ale niekoniecznie oznacza wszystkie style, które przyczyniają się do wyglądu komórki.  
  
 Aby uzyskać więcej informacji, zobacz [style komórki w formancie DataGridView formularzy systemu Windows](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Komórka nie należy do <see cref="T:System.Windows.Forms.DataGridView" /> formantu.  - lub - <see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" /> jest mniejszy niż 0, co oznacza, że komórki komórki nagłówka wiersza.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Wiersz zawierający komórki jest wierszu udostępnionym.  - lub - komórka jest komórki nagłówka kolumny.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.AdjustCellBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetInheritedStyle(System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Boolean)" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.HasStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Style" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumn" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
      </Docs>
    </Member>
    <Member MemberName="InitializeEditingControl">
      <MemberSignature Language="C#" Value="public virtual void InitializeEditingControl (int rowIndex, object initialFormattedValue, System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeEditingControl(int32 rowIndex, object initialFormattedValue, class System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.InitializeEditingControl(System.Int32,System.Object,System.Windows.Forms.DataGridViewCellStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeEditingControl(int rowIndex, System::Object ^ initialFormattedValue, System::Windows::Forms::DataGridViewCellStyle ^ dataGridViewCellStyle);" />
      <MemberSignature Language="F#" Value="abstract member InitializeEditingControl : int * obj * System.Windows.Forms.DataGridViewCellStyle -&gt; unit&#xA;override this.InitializeEditingControl : int * obj * System.Windows.Forms.DataGridViewCellStyle -&gt; unit" Usage="dataGridViewCell.InitializeEditingControl (rowIndex, initialFormattedValue, dataGridViewCellStyle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="initialFormattedValue" Type="System.Object" />
        <Parameter Name="dataGridViewCellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Indeks wiersza liczony od zera lokalizacja komórki.</param>
        <param name="initialFormattedValue">
          <see cref="T:System.Object" /> Reprezentujący wartość wyświetlana przez komórki, gdy rozpoczynana jest edycja.</param>
        <param name="dataGridViewCellStyle">A <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> reprezentujący stylu komórki.</param>
        <summary>Inicjuje kontrolkę służącą do edytowania komórki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jako techniki optymalizacji, zwykle wszystkie komórki tego samego typu i tego samego <xref:System.Windows.Forms.DataGridView> udziału pojedynczy hostowane kontrolki edycji. Jednak zanim formant jest używany przez komórki, musi on być inicjowane przez <xref:System.Windows.Forms.DataGridViewCell.InitializeEditingControl%2A> metody. Przy pierwszym jego wywołaniu tej metody dodaje formantu do listy kontrolek w swoim obiekcie nadrzędnym edycji <xref:System.Windows.Forms.DataGridView>. Inicjuje również niektórych visual właściwości komórki. Na przykład <xref:System.Windows.Forms.DataGridViewCell.InitializeEditingControl%2A> Ustawia kolor tła obszaru edycji jest zgodny z parametrem stylu komórki dostarczony. Kolejne wywołania <xref:System.Windows.Forms.DataGridViewCell.InitializeEditingControl%2A> nic nie rób.  
  
 Klasy pochodne ta metoda służy do obsługi wystąpienia <xref:System.Windows.Forms.Control> odpowiadającego ich typu klasy. Na przykład tabelę, która zawiera co najmniej jeden <xref:System.Windows.Forms.DataGridViewTextBoxCell> obiektów wywołuje tę metodę, aby dodać pojedynczego <xref:System.Windows.Forms.TextBox> edycji formant będący właścicielem <xref:System.Windows.Forms.DataGridView>.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Windows.Forms.DataGridViewTextBoxCell.InitializeEditingControl%2A> w prostą klasę, która pochodzi z metody <xref:System.Windows.Forms.DataGridViewTextBoxCell> klasy. Ten przykład jest częścią większego przykładu kodu w [porady: formanty hosta w komórkach DataGridView formularzy systemu Windows](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#200](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#200)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#200](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#200)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Nie skojarzono nie <see cref="T:System.Windows.Forms.DataGridView" /> lub jeśli istnieje, nie ma skojarzonego formantu edycji.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.DetachEditingControl" />
      </Docs>
    </Member>
    <Member MemberName="IsInEditMode">
      <MemberSignature Language="C#" Value="public bool IsInEditMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.IsInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInEditMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInEditMode : bool" Usage="System.Windows.Forms.DataGridViewCell.IsInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy ta komórka jest obecnie edytowany.</summary>
        <value>
          <see langword="true" /> Jeśli komórka jest w trybie edycji; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest przydatna podczas pracy bezpośrednio z wystąpieniami komórki. Alternatywnie można użyć <xref:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode%2A?displayProperty=nameWithType> właściwości. Można również obsługiwać <xref:System.Windows.Forms.DataGridView.CellBeginEdit?displayProperty=nameWithType> zdarzenia w celu określenia, kiedy użytkownik wprowadzi trybu edycji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wiersz zawierający komórki jest wierszu udostępnionym.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellBeginEdit" />
      </Docs>
    </Member>
    <Member MemberName="KeyDownUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool KeyDownUnsharesRow (System.Windows.Forms.KeyEventArgs e, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool KeyDownUnsharesRow(class System.Windows.Forms.KeyEventArgs e, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.KeyDownUnsharesRow(System.Windows.Forms.KeyEventArgs,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function KeyDownUnsharesRow (e As KeyEventArgs, rowIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool KeyDownUnsharesRow(System::Windows::Forms::KeyEventArgs ^ e, int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member KeyDownUnsharesRow : System.Windows.Forms.KeyEventArgs * int -&gt; bool&#xA;override this.KeyDownUnsharesRow : System.Windows.Forms.KeyEventArgs * int -&gt; bool" Usage="dataGridViewCell.KeyDownUnsharesRow (e, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> zawierający dane zdarzenia.</param>
        <param name="rowIndex">Indeks wiersza nadrzędnego komórki.</param>
        <summary>Wskazuje, czy wiersza nadrzędnego jest nieudostępnionych, gdy użytkownik naciśnie klawisza, gdy fokus jest ustawiony na komórki.</summary>
        <returns>
          <see langword="true" /> Jeśli wiersz będzie nieudostępnionych, w przeciwnym razie <see langword="false" />. Podstawowym <see cref="T:System.Windows.Forms.DataGridViewCell" /> klasy zawsze zwraca <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.KeyDownUnsharesRow%2A> Metoda jest wywoływana bezpośrednio przed <xref:System.Windows.Forms.DataGridViewCell.OnKeyDown%2A> metody. Aplikacja musi zwracać `true` Jeśli wywołanie <xref:System.Windows.Forms.DataGridViewCell.OnKeyDown%2A> o takim samym <xref:System.Windows.Forms.KeyEventArgs> argument ma wpływ zatrzymywania udostępniania wiersz zawierający komórkę. W przeciwnym razie powinien zwrócić `false`.  
  
 Aby uzyskać więcej informacji o udostępnianiu wiersza, zobacz [najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyDown(System.Windows.Forms.KeyEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyPress(System.Windows.Forms.KeyPressEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.KeyPressUnsharesRow(System.Windows.Forms.KeyPressEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyUp(System.Windows.Forms.KeyEventArgs,System.Int32)" />
        <altmember cref="T:System.Windows.Forms.KeyEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="KeyEntersEditMode">
      <MemberSignature Language="C#" Value="public virtual bool KeyEntersEditMode (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool KeyEntersEditMode(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.KeyEntersEditMode(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function KeyEntersEditMode (e As KeyEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool KeyEntersEditMode(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member KeyEntersEditMode : System.Windows.Forms.KeyEventArgs -&gt; bool&#xA;override this.KeyEntersEditMode : System.Windows.Forms.KeyEventArgs -&gt; bool" Usage="dataGridViewCell.KeyEntersEditMode e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> reprezentujący klucz, który został naciśnięty.</param>
        <summary>Określa, czy trybu edycji, należy uruchomić na podstawie podanego klucza.</summary>
        <returns>
          <see langword="true" /> Jeśli Edycja, należy uruchomić tryb; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przesłonić tę metodę, aby utworzyć niestandardowe komórki, który można edytować.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="KeyPressUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool KeyPressUnsharesRow (System.Windows.Forms.KeyPressEventArgs e, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool KeyPressUnsharesRow(class System.Windows.Forms.KeyPressEventArgs e, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.KeyPressUnsharesRow(System.Windows.Forms.KeyPressEventArgs,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function KeyPressUnsharesRow (e As KeyPressEventArgs, rowIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool KeyPressUnsharesRow(System::Windows::Forms::KeyPressEventArgs ^ e, int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member KeyPressUnsharesRow : System.Windows.Forms.KeyPressEventArgs * int -&gt; bool&#xA;override this.KeyPressUnsharesRow : System.Windows.Forms.KeyPressEventArgs * int -&gt; bool" Usage="dataGridViewCell.KeyPressUnsharesRow (e, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyPressEventArgs" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> zawierający dane zdarzenia.</param>
        <param name="rowIndex">Indeks wiersza nadrzędnego komórki.</param>
        <summary>Wskazuje, czy wiersz będzie nieudostępnionych Jeśli naciśnięciu klawisza, gdy komórka w wierszu ma fokus.</summary>
        <returns>
          <see langword="true" /> Jeśli wiersz będzie nieudostępnionych, w przeciwnym razie <see langword="false" />. Podstawowym <see cref="T:System.Windows.Forms.DataGridViewCell" /> klasy zawsze zwraca <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.KeyPressUnsharesRow%2A> Metoda jest wywoływana bezpośrednio przed <xref:System.Windows.Forms.DataGridViewCell.OnKeyPress%2A> metody. W klasach pochodnych musi zwracać `true` Jeśli wywołanie <xref:System.Windows.Forms.DataGridViewCell.OnKeyPress%2A> powoduje zatrzymywania udostępniania wiersz zawierający komórkę. W przeciwnym razie powinien zwrócić `false`.  
  
 Aby uzyskać więcej informacji o udostępnianiu wiersza, zobacz [najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyDown(System.Windows.Forms.KeyEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyPress(System.Windows.Forms.KeyPressEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyUp(System.Windows.Forms.KeyEventArgs,System.Int32)" />
        <altmember cref="T:System.Windows.Forms.KeyPressEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="KeyUpUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool KeyUpUnsharesRow (System.Windows.Forms.KeyEventArgs e, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool KeyUpUnsharesRow(class System.Windows.Forms.KeyEventArgs e, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.KeyUpUnsharesRow(System.Windows.Forms.KeyEventArgs,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function KeyUpUnsharesRow (e As KeyEventArgs, rowIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool KeyUpUnsharesRow(System::Windows::Forms::KeyEventArgs ^ e, int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member KeyUpUnsharesRow : System.Windows.Forms.KeyEventArgs * int -&gt; bool&#xA;override this.KeyUpUnsharesRow : System.Windows.Forms.KeyEventArgs * int -&gt; bool" Usage="dataGridViewCell.KeyUpUnsharesRow (e, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> zawierający dane zdarzenia.</param>
        <param name="rowIndex">Indeks wiersza nadrzędnego komórki.</param>
        <summary>Wskazuje, czy wiersza nadrzędnego jest nieudostępnionych, gdy użytkownik zwalnia klucz, gdy fokus jest ustawiony na komórki.</summary>
        <returns>
          <see langword="true" /> Jeśli wiersz będzie nieudostępnionych, w przeciwnym razie <see langword="false" />. Podstawowym <see cref="T:System.Windows.Forms.DataGridViewCell" /> klasy zawsze zwraca <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.KeyUpUnsharesRow%2A> Metoda jest wywoływana bezpośrednio przed <xref:System.Windows.Forms.DataGridViewCell.OnKeyUp%2A> metody. Aplikacja musi zwracać `true` Jeśli wywołanie <xref:System.Windows.Forms.DataGridViewCell.OnKeyUp%2A> o takim samym <xref:System.Windows.Forms.KeyEventArgs> argument ma wpływ zatrzymywania udostępniania wiersz zawierający komórkę. W przeciwnym razie powinien zwrócić `false`.  
  
 Aby uzyskać więcej informacji o udostępnianiu wiersza, zobacz [najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyDown(System.Windows.Forms.KeyEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyPress(System.Windows.Forms.KeyPressEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.KeyPressUnsharesRow(System.Windows.Forms.KeyPressEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyUp(System.Windows.Forms.KeyEventArgs,System.Int32)" />
        <altmember cref="T:System.Windows.Forms.KeyEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="LeaveUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool LeaveUnsharesRow (int rowIndex, bool throughMouseClick);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LeaveUnsharesRow(int32 rowIndex, bool throughMouseClick) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.LeaveUnsharesRow(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LeaveUnsharesRow (rowIndex As Integer, throughMouseClick As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LeaveUnsharesRow(int rowIndex, bool throughMouseClick);" />
      <MemberSignature Language="F#" Value="abstract member LeaveUnsharesRow : int * bool -&gt; bool&#xA;override this.LeaveUnsharesRow : int * bool -&gt; bool" Usage="dataGridViewCell.LeaveUnsharesRow (rowIndex, throughMouseClick)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="throughMouseClick" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Indeks wiersza nadrzędnego komórki.</param>
        <param name="throughMouseClick">
          <see langword="true" /> Jeśli akcja użytkownika przeniesiony fokus do komórki; <see langword="false" /> przypadku programowych operacji przeniesienia fokus do komórki.</param>
        <summary>Wskazuje, czy wiersz będzie nieudostępnionych komórki w wierszu utraci fokus.</summary>
        <returns>
          <see langword="true" /> Jeśli wiersz będzie nieudostępnionych, w przeciwnym razie <see langword="false" />. Podstawowym <see cref="T:System.Windows.Forms.DataGridViewCell" /> klasy zawsze zwraca <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.LeaveUnsharesRow%2A> Metoda jest wywoływana bezpośrednio przed <xref:System.Windows.Forms.DataGridViewCell.OnLeave%2A> metody. Aplikacja musi zwracać `true` Jeśli wywołanie <xref:System.Windows.Forms.DataGridViewCell.OnLeave%2A> powoduje zatrzymywania udostępniania wiersz zawierający komórkę. W przeciwnym razie powinien zwrócić `false`.  
  
 Aby uzyskać więcej informacji o udostępnianiu wiersza, zobacz [najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnLeave(System.Int32,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="MeasureTextHeight">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera wysokość w pikselach określony tekst.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MeasureTextHeight">
      <MemberSignature Language="C#" Value="public static int MeasureTextHeight (System.Drawing.Graphics graphics, string text, System.Drawing.Font font, int maxWidth, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 MeasureTextHeight(class System.Drawing.Graphics graphics, string text, class System.Drawing.Font font, int32 maxWidth, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.MeasureTextHeight(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Int32,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int MeasureTextHeight(System::Drawing::Graphics ^ graphics, System::String ^ text, System::Drawing::Font ^ font, int maxWidth, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member MeasureTextHeight : System.Drawing.Graphics * string * System.Drawing.Font * int * System.Windows.Forms.TextFormatFlags -&gt; int" Usage="System.Windows.Forms.DataGridViewCell.MeasureTextHeight (graphics, text, font, maxWidth, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="maxWidth" Type="System.Int32" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Używany do renderowania tekstu.</param>
        <param name="text">Tekst do pomiaru.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> Zastosowany do tekstu.</param>
        <param name="maxWidth">Maksymalna szerokość tekstu.</param>
        <param name="flags">Bitowe połączenie <see cref="T:System.Windows.Forms.TextFormatFlags" /> wartości do zastosowania w tekście.</param>
        <summary>Pobiera wysokość w pikselach, określony tekst podane określonej właściwości.</summary>
        <returns>Wysokość w pikselach tekstu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli określony format pozwala wielu wierszy są wymagane, wysokość zwrócił jest łączna wysokość wszystkich wierszy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="graphics" /> jest <see langword="null" />.  - lub - <paramref name="font" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="maxWidth" /> jest mniejsza niż 1.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="flags" /> nie jest prawidłową kombinację bitowe <see cref="T:System.Windows.Forms.TextFormatFlags" /> wartości.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="MeasureTextHeight">
      <MemberSignature Language="C#" Value="public static int MeasureTextHeight (System.Drawing.Graphics graphics, string text, System.Drawing.Font font, int maxWidth, System.Windows.Forms.TextFormatFlags flags, out bool widthTruncated);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 MeasureTextHeight(class System.Drawing.Graphics graphics, string text, class System.Drawing.Font font, int32 maxWidth, valuetype System.Windows.Forms.TextFormatFlags flags, [out] bool&amp; widthTruncated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.MeasureTextHeight(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Int32,System.Windows.Forms.TextFormatFlags,System.Boolean@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int MeasureTextHeight(System::Drawing::Graphics ^ graphics, System::String ^ text, System::Drawing::Font ^ font, int maxWidth, System::Windows::Forms::TextFormatFlags flags, [Runtime::InteropServices::Out] bool % widthTruncated);" />
      <MemberSignature Language="F#" Value="static member MeasureTextHeight : System.Drawing.Graphics * string * System.Drawing.Font * int * System.Windows.Forms.TextFormatFlags *  -&gt; int" Usage="System.Windows.Forms.DataGridViewCell.MeasureTextHeight (graphics, text, font, maxWidth, flags, widthTruncated)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="maxWidth" Type="System.Int32" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
        <Parameter Name="widthTruncated" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Używany do renderowania tekstu.</param>
        <param name="text">Tekst do pomiaru.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> Zastosowany do tekstu.</param>
        <param name="maxWidth">Maksymalna szerokość tekstu.</param>
        <param name="flags">Bitowe połączenie <see cref="T:System.Windows.Forms.TextFormatFlags" /> wartości do zastosowania w tekście.</param>
        <param name="widthTruncated">Ustaw <see langword="true" /> Jeśli wymagane szerokości tekstu jest większa niż <c>maxWidth</c>.</param>
        <summary>Pobiera wysokość w pikselach, określony tekst podane określonej właściwości. Wskazuje także, czy szerokość wymagana jest większa niż określona szerokość maksymalna.</summary>
        <returns>Wysokość w pikselach tekstu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli określony format pozwala wielu wierszy są wymagane, wysokość zwrócił jest łączna wysokość wszystkich wierszy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="graphics" /> jest <see langword="null" />.  - lub - <paramref name="font" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="maxWidth" /> jest mniejsza niż 1.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="flags" /> nie jest prawidłową kombinację bitowe <see cref="T:System.Windows.Forms.TextFormatFlags" /> wartości.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="MeasureTextPreferredSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureTextPreferredSize (System.Drawing.Graphics graphics, string text, System.Drawing.Font font, float maxRatio, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureTextPreferredSize(class System.Drawing.Graphics graphics, string text, class System.Drawing.Font font, float32 maxRatio, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.MeasureTextPreferredSize(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Single,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureTextPreferredSize(System::Drawing::Graphics ^ graphics, System::String ^ text, System::Drawing::Font ^ font, float maxRatio, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member MeasureTextPreferredSize : System.Drawing.Graphics * string * System.Drawing.Font * single * System.Windows.Forms.TextFormatFlags -&gt; System.Drawing.Size" Usage="System.Windows.Forms.DataGridViewCell.MeasureTextPreferredSize (graphics, text, font, maxRatio, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="maxRatio" Type="System.Single" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Używany do renderowania tekstu.</param>
        <param name="text">Tekst do pomiaru.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> Zastosowany do tekstu.</param>
        <param name="maxRatio">Maksymalny stosunek szerokości do wysokości bloku tekstu.</param>
        <param name="flags">Bitowe połączenie <see cref="T:System.Windows.Forms.TextFormatFlags" /> wartości do zastosowania w tekście.</param>
        <summary>Pobiera idealne wysokość i szerokość określony tekst podane określonej właściwości.</summary>
        <returns>A <see cref="T:System.Drawing.Size" /> reprezentujący preferowana wysokość i szerokość tekstu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Określony format umożliwia wielu wierszy są wymagane, rozmiar zwrócił obejmuje Scalonej wysokość wszystkich wierszy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="graphics" /> jest <see langword="null" />.  - lub - <paramref name="font" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="maxRatio" /> jest mniejsze niż lub równa 0.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="flags" /> nie jest prawidłową kombinację bitowe <see cref="T:System.Windows.Forms.TextFormatFlags" /> wartości.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="MeasureTextSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureTextSize (System.Drawing.Graphics graphics, string text, System.Drawing.Font font, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureTextSize(class System.Drawing.Graphics graphics, string text, class System.Drawing.Font font, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.MeasureTextSize(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureTextSize(System::Drawing::Graphics ^ graphics, System::String ^ text, System::Drawing::Font ^ font, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member MeasureTextSize : System.Drawing.Graphics * string * System.Drawing.Font * System.Windows.Forms.TextFormatFlags -&gt; System.Drawing.Size" Usage="System.Windows.Forms.DataGridViewCell.MeasureTextSize (graphics, text, font, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Używany do renderowania tekstu.</param>
        <param name="text">Tekst do pomiaru.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> Zastosowany do tekstu.</param>
        <param name="flags">Bitowe połączenie <see cref="T:System.Windows.Forms.TextFormatFlags" /> wartości do zastosowania w tekście.</param>
        <summary>Pobiera wysokość i szerokość określony tekst podane określonej właściwości.</summary>
        <returns>A <see cref="T:System.Drawing.Size" /> reprezentujący wysokości i szerokości tekstu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Określony format umożliwia wielu wierszy są wymagane, rozmiar zwrócił obejmuje Scalonej wysokość wszystkich wierszy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="graphics" /> jest <see langword="null" />.  - lub - <paramref name="font" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="flags" /> nie jest prawidłową kombinację bitowe <see cref="T:System.Windows.Forms.TextFormatFlags" /> wartości.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="MeasureTextWidth">
      <MemberSignature Language="C#" Value="public static int MeasureTextWidth (System.Drawing.Graphics graphics, string text, System.Drawing.Font font, int maxHeight, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 MeasureTextWidth(class System.Drawing.Graphics graphics, string text, class System.Drawing.Font font, int32 maxHeight, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.MeasureTextWidth(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Int32,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int MeasureTextWidth(System::Drawing::Graphics ^ graphics, System::String ^ text, System::Drawing::Font ^ font, int maxHeight, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member MeasureTextWidth : System.Drawing.Graphics * string * System.Drawing.Font * int * System.Windows.Forms.TextFormatFlags -&gt; int" Usage="System.Windows.Forms.DataGridViewCell.MeasureTextWidth (graphics, text, font, maxHeight, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="maxHeight" Type="System.Int32" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Używany do renderowania tekstu.</param>
        <param name="text">Tekst do pomiaru.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> Zastosowany do tekstu.</param>
        <param name="maxHeight">Maksymalna wysokość tekstu.</param>
        <param name="flags">Bitowe połączenie <see cref="T:System.Windows.Forms.TextFormatFlags" /> wartości do zastosowania w tekście.</param>
        <summary>Pobiera szerokość w pikselach określony tekst podane określonej właściwości.</summary>
        <returns>Szerokość w pikselach tekstu.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="graphics" /> jest <see langword="null" />.  - lub - <paramref name="font" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="maxHeight" /> jest mniejsza niż 1.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="flags" /> nie jest prawidłową kombinację bitowe <see cref="T:System.Windows.Forms.TextFormatFlags" /> wartości.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="MouseClickUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool MouseClickUnsharesRow (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool MouseClickUnsharesRow(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.MouseClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MouseClickUnsharesRow (e As DataGridViewCellMouseEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool MouseClickUnsharesRow(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member MouseClickUnsharesRow : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; bool&#xA;override this.MouseClickUnsharesRow : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; bool" Usage="dataGridViewCell.MouseClickUnsharesRow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Wskazuje, czy wiersz będzie nieudostępnionych, gdy użytkownik kliknie przycisk myszy, gdy wskaźnik znajduje się w komórce w wierszu.</summary>
        <returns>
          <see langword="true" /> Jeśli wiersz będzie nieudostępnionych, w przeciwnym razie <see langword="false" />. Podstawowym <see cref="T:System.Windows.Forms.DataGridViewCell" /> klasy zawsze zwraca <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.MouseClickUnsharesRow%2A> Metoda jest wywoływana bezpośrednio przed <xref:System.Windows.Forms.DataGridViewCell.OnMouseClick%2A> metody. Aplikacja musi zwracać `true` Jeśli wywołanie <xref:System.Windows.Forms.DataGridViewCell.OnMouseClick%2A> powoduje zatrzymywania udostępniania wiersz zawierający komórkę. W przeciwnym razie powinien zwrócić `false`.  
  
 Aby uzyskać więcej informacji o udostępnianiu wiersza, zobacz [najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDownUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseMoveUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseUpUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseDoubleClickUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool MouseDoubleClickUnsharesRow (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool MouseDoubleClickUnsharesRow(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MouseDoubleClickUnsharesRow (e As DataGridViewCellMouseEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool MouseDoubleClickUnsharesRow(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member MouseDoubleClickUnsharesRow : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; bool&#xA;override this.MouseDoubleClickUnsharesRow : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; bool" Usage="dataGridViewCell.MouseDoubleClickUnsharesRow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Wskazuje, czy wiersz będzie nieudostępnionych, gdy użytkownik kliknie dwukrotnie komórki w wierszu.</summary>
        <returns>
          <see langword="true" /> Jeśli wiersz będzie nieudostępnionych, w przeciwnym razie <see langword="false" />. Podstawowym <see cref="T:System.Windows.Forms.DataGridViewCell" /> klasy zawsze zwraca <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow%2A> Metoda jest wywoływana bezpośrednio przed <xref:System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick%2A> metody. Aplikacja musi zwracać `true` Jeśli wywołanie <xref:System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick%2A> powoduje zatrzymywania udostępniania wiersz zawierający komórkę. W przeciwnym razie powinien zwrócić `false`.  
  
 Aby uzyskać więcej informacji o udostępnianiu wiersza, zobacz [najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="MouseDownUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool MouseDownUnsharesRow (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool MouseDownUnsharesRow(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.MouseDownUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MouseDownUnsharesRow (e As DataGridViewCellMouseEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool MouseDownUnsharesRow(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member MouseDownUnsharesRow : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; bool&#xA;override this.MouseDownUnsharesRow : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; bool" Usage="dataGridViewCell.MouseDownUnsharesRow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Wskazuje, czy wiersz będzie nieudostępnionych użytkownik posiada naciśnięty przycisk myszy, gdy wskaźnik znajduje się w komórce w wierszu.</summary>
        <returns>
          <see langword="true" /> Jeśli wiersz będzie nieudostępnionych, w przeciwnym razie <see langword="false" />. Podstawowym <see cref="T:System.Windows.Forms.DataGridViewCell" /> klasy zawsze zwraca <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.MouseDownUnsharesRow%2A> Metoda jest wywoływana bezpośrednio przed <xref:System.Windows.Forms.DataGridViewCell.OnMouseDown%2A> metody. W klasach pochodnych musi zwracać `true` Jeśli wywołanie <xref:System.Windows.Forms.DataGridViewCell.OnMouseDown%2A> powoduje zatrzymywania udostępniania wiersz zawierający komórkę. W przeciwnym razie powinien zwrócić `false`.  
  
 Aby uzyskać więcej informacji o udostępnianiu wiersza, zobacz [najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseMoveUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseUpUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseEnterUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool MouseEnterUnsharesRow (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool MouseEnterUnsharesRow(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MouseEnterUnsharesRow (rowIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool MouseEnterUnsharesRow(int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member MouseEnterUnsharesRow : int -&gt; bool&#xA;override this.MouseEnterUnsharesRow : int -&gt; bool" Usage="dataGridViewCell.MouseEnterUnsharesRow rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Indeks wiersza nadrzędnego komórki.</param>
        <summary>Wskazuje, czy wiersz będzie nieudostępnionych, gdy wskaźnik myszy porusza się nad komórką w wierszu.</summary>
        <returns>
          <see langword="true" /> Jeśli wiersz będzie nieudostępnionych, w przeciwnym razie <see langword="false" />. Podstawowym <see cref="T:System.Windows.Forms.DataGridViewCell" /> klasy zawsze zwraca <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow%2A> Metoda jest wywoływana bezpośrednio przed <xref:System.Windows.Forms.DataGridViewCell.OnMouseEnter%2A> metody. W klasach pochodnych musi zwracać `true` Jeśli wywołanie <xref:System.Windows.Forms.DataGridViewCell.OnMouseEnter%2A> powoduje zatrzymywania udostępniania wiersz zawierający komórkę. W przeciwnym razie powinien zwrócić `false`.  
  
 Aby uzyskać więcej informacji o udostępnianiu wiersza, zobacz [najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDownUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseEnter(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseMoveUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseUpUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeaveUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool MouseLeaveUnsharesRow (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool MouseLeaveUnsharesRow(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MouseLeaveUnsharesRow (rowIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool MouseLeaveUnsharesRow(int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member MouseLeaveUnsharesRow : int -&gt; bool&#xA;override this.MouseLeaveUnsharesRow : int -&gt; bool" Usage="dataGridViewCell.MouseLeaveUnsharesRow rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Indeks wiersza nadrzędnego komórki.</param>
        <summary>Wskazuje, czy wiersz będzie nieudostępnionych, gdy wskaźnik myszy opuści wiersza.</summary>
        <returns>
          <see langword="true" /> Jeśli wiersz będzie nieudostępnionych, w przeciwnym razie <see langword="false" />. Podstawowym <see cref="T:System.Windows.Forms.DataGridViewCell" /> klasy zawsze zwraca <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow%2A> Metoda jest wywoływana bezpośrednio przed <xref:System.Windows.Forms.DataGridViewCell.OnMouseLeave%2A> metody. W klasach pochodnych musi zwracać `true` Jeśli wywołanie <xref:System.Windows.Forms.DataGridViewCell.OnMouseLeave%2A> powoduje zatrzymywania udostępniania wiersz zawierający komórkę. W przeciwnym razie powinien zwrócić `false`.  
  
 Aby uzyskać więcej informacji o udostępnianiu wiersza, zobacz [najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDownUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseLeave(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseMoveUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseUpUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MouseMoveUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool MouseMoveUnsharesRow (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool MouseMoveUnsharesRow(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.MouseMoveUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MouseMoveUnsharesRow (e As DataGridViewCellMouseEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool MouseMoveUnsharesRow(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member MouseMoveUnsharesRow : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; bool&#xA;override this.MouseMoveUnsharesRow : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; bool" Usage="dataGridViewCell.MouseMoveUnsharesRow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Wskazuje, czy wiersz będzie nieudostępnionych, gdy wskaźnik myszy porusza się nad komórką w wierszu.</summary>
        <returns>
          <see langword="true" /> Jeśli wiersz będzie nieudostępnionych, w przeciwnym razie <see langword="false" />. Podstawowym <see cref="T:System.Windows.Forms.DataGridViewCell" /> klasy zawsze zwraca <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.MouseMoveUnsharesRow%2A> Metoda jest wywoływana bezpośrednio przed <xref:System.Windows.Forms.DataGridViewCell.OnMouseMove%2A> metody. W klasach pochodnych musi zwracać `true` Jeśli wywołanie <xref:System.Windows.Forms.DataGridViewCell.OnMouseMove%2A> powoduje zatrzymywania udostępniania wiersz zawierający komórkę. W przeciwnym razie powinien zwrócić `false`.  
  
 Aby uzyskać więcej informacji o udostępnianiu wiersza, zobacz [najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDownUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseUpUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseUpUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool MouseUpUnsharesRow (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool MouseUpUnsharesRow(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.MouseUpUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MouseUpUnsharesRow (e As DataGridViewCellMouseEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool MouseUpUnsharesRow(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member MouseUpUnsharesRow : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; bool&#xA;override this.MouseUpUnsharesRow : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; bool" Usage="dataGridViewCell.MouseUpUnsharesRow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Wskazuje, czy wiersz będzie nieudostępnionych, gdy użytkownik zwolni przycisk myszy, gdy wskaźnik znajduje się w komórce w wierszu.</summary>
        <returns>
          <see langword="true" /> Jeśli wiersz będzie nieudostępnionych, w przeciwnym razie <see langword="false" />. Podstawowym <see cref="T:System.Windows.Forms.DataGridViewCell" /> klasy zawsze zwraca <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.MouseUpUnsharesRow%2A> Metoda jest wywoływana bezpośrednio przed <xref:System.Windows.Forms.DataGridViewCell.OnMouseUp%2A> metody. W klasach pochodnych musi zwracać `true` Jeśli wywołanie <xref:System.Windows.Forms.DataGridViewCell.OnMouseUp%2A> powoduje zatrzymywania udostępniania wiersz zawierający komórkę. W przeciwnym razie powinien zwrócić `false`.  
  
 Aby uzyskać więcej informacji o udostępnianiu wiersza, zobacz [najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDownUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseMoveUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridViewCell.OnClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Wywoływane po kliknięciu komórki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest podobna do <xref:System.Windows.Forms.DataGridView.OnCellClick%2A?displayProperty=nameWithType> metody. Jest to w tym samym okoliczności, w których <xref:System.Windows.Forms.DataGridView.CellClick?displayProperty=nameWithType> zdarzenie jest zgłaszane, ale nie faktycznie wygenerował zdarzenie.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellClick" />
      </Docs>
    </Member>
    <Member MemberName="OnContentClick">
      <MemberSignature Language="C#" Value="protected virtual void OnContentClick (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContentClick(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnContentClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContentClick (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContentClick(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnContentClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnContentClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridViewCell.OnContentClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Wywoływane po kliknięciu zawartości komórki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest podobna do <xref:System.Windows.Forms.DataGridView.OnCellContentClick%2A?displayProperty=nameWithType> metody. Jest to w tym samym okoliczności, w których <xref:System.Windows.Forms.DataGridView.CellContentClick?displayProperty=nameWithType> zdarzenie jest zgłaszane, ale nie faktycznie wygenerował zdarzenie.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellContentClick" />
      </Docs>
    </Member>
    <Member MemberName="OnContentDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnContentDoubleClick (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContentDoubleClick(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContentDoubleClick (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContentDoubleClick(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnContentDoubleClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnContentDoubleClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridViewCell.OnContentDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Wywołuje się po dwukrotnym kliknięciu zawartości komórki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest podobna do <xref:System.Windows.Forms.DataGridView.OnCellContentDoubleClick%2A?displayProperty=nameWithType> metody. Jest to w tym samym okoliczności, w których <xref:System.Windows.Forms.DataGridView.CellContentDoubleClick?displayProperty=nameWithType> zdarzenie jest zgłaszane, ale nie faktycznie wygenerował zdarzenie.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellContentDoubleClick" />
      </Docs>
    </Member>
    <Member MemberName="OnDataGridViewChanged">
      <MemberSignature Language="C#" Value="protected override void OnDataGridViewChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataGridViewChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnDataGridViewChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataGridViewChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataGridViewChanged();" />
      <MemberSignature Language="F#" Value="override this.OnDataGridViewChanged : unit -&gt; unit" Usage="dataGridViewCell.OnDataGridViewChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wywoływane, gdy <see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" /> właściwości zmiany komórek.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnDoubleClick (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDoubleClick(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDoubleClick (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDoubleClick(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDoubleClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnDoubleClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridViewCell.OnDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Wywołuje się po dwukrotnym kliknięciu komórki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest podobna do <xref:System.Windows.Forms.DataGridView.OnCellDoubleClick%2A?displayProperty=nameWithType> metody. Jest to w tym samym okoliczności, w których <xref:System.Windows.Forms.DataGridView.CellDoubleClick?displayProperty=nameWithType> zdarzenie jest zgłaszane, ale nie faktycznie wygenerował zdarzenie.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellDoubleClick" />
      </Docs>
    </Member>
    <Member MemberName="OnEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnEnter (int rowIndex, bool throughMouseClick);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEnter(int32 rowIndex, bool throughMouseClick) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnEnter(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEnter (rowIndex As Integer, throughMouseClick As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEnter(int rowIndex, bool throughMouseClick);" />
      <MemberSignature Language="F#" Value="abstract member OnEnter : int * bool -&gt; unit&#xA;override this.OnEnter : int * bool -&gt; unit" Usage="dataGridViewCell.OnEnter (rowIndex, throughMouseClick)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="throughMouseClick" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Indeks wiersza nadrzędnego komórki.</param>
        <param name="throughMouseClick">
          <see langword="true" /> Jeśli akcja użytkownika przeniesiony fokus do komórki; <see langword="false" /> przypadku programowych operacji przeniesienia fokus do komórki.</param>
        <summary>Wywoływane, gdy fokus zostanie przeniesiony do komórki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest podobna do <xref:System.Windows.Forms.DataGridView.OnCellEnter%2A?displayProperty=nameWithType> metody. Jest to w tym samym okoliczności, w których <xref:System.Windows.Forms.DataGridView.CellEnter?displayProperty=nameWithType> zdarzenie jest zgłaszane, ale nie faktycznie wygenerował zdarzenie.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnLeave(System.Int32,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseEnter(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellEnter(System.Windows.Forms.DataGridViewCellEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyDown (System.Windows.Forms.KeyEventArgs e, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnKeyDown(System.Windows.Forms.KeyEventArgs,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyDown (e As KeyEventArgs, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e, int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyDown : System.Windows.Forms.KeyEventArgs * int -&gt; unit&#xA;override this.OnKeyDown : System.Windows.Forms.KeyEventArgs * int -&gt; unit" Usage="dataGridViewCell.OnKeyDown (e, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> zawierający dane zdarzenia.</param>
        <param name="rowIndex">Indeks wiersza nadrzędnego komórki.</param>
        <summary>Wywoływane, gdy zostanie naciśnięty klawisz znaku, gdy fokus jest w komórce.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest podobna do <xref:System.Windows.Forms.Control.OnKeyDown%2A?displayProperty=nameWithType> metody. Jest to w tym samym okoliczności, w których <xref:System.Windows.Forms.Control.KeyDown> zdarzenie jest zgłaszane, ale nie faktycznie wygenerował zdarzenie.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyPress(System.Windows.Forms.KeyPressEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.KeyPressUnsharesRow(System.Windows.Forms.KeyPressEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyUp(System.Windows.Forms.KeyEventArgs,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyPress">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyPress (System.Windows.Forms.KeyPressEventArgs e, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyPress(class System.Windows.Forms.KeyPressEventArgs e, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnKeyPress(System.Windows.Forms.KeyPressEventArgs,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyPress (e As KeyPressEventArgs, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyPress(System::Windows::Forms::KeyPressEventArgs ^ e, int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyPress : System.Windows.Forms.KeyPressEventArgs * int -&gt; unit&#xA;override this.OnKeyPress : System.Windows.Forms.KeyPressEventArgs * int -&gt; unit" Usage="dataGridViewCell.OnKeyPress (e, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyPressEventArgs" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> zawierający dane zdarzenia.</param>
        <param name="rowIndex">Indeks wiersza nadrzędnego komórki.</param>
        <summary>Wywołuje się po naciśnięciu klawisza, gdy fokus jest w komórce.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest podobna do <xref:System.Windows.Forms.Control.OnKeyPress%2A?displayProperty=nameWithType> metody. Jest to w tym samym okoliczności, w których <xref:System.Windows.Forms.Control.KeyPress> zdarzenie jest zgłaszane, ale nie faktycznie wygenerował zdarzenie.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyDown(System.Windows.Forms.KeyEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.KeyPressUnsharesRow(System.Windows.Forms.KeyPressEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyUp(System.Windows.Forms.KeyEventArgs,System.Int32)" />
        <altmember cref="T:System.Windows.Forms.KeyPressEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyUp (System.Windows.Forms.KeyEventArgs e, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs e, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnKeyUp(System.Windows.Forms.KeyEventArgs,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyUp (e As KeyEventArgs, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyUp(System::Windows::Forms::KeyEventArgs ^ e, int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyUp : System.Windows.Forms.KeyEventArgs * int -&gt; unit&#xA;override this.OnKeyUp : System.Windows.Forms.KeyEventArgs * int -&gt; unit" Usage="dataGridViewCell.OnKeyUp (e, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> zawierający dane zdarzenia.</param>
        <param name="rowIndex">Indeks wiersza nadrzędnego komórki.</param>
        <summary>Wywołuje się po zwolnieniu znakowy klucz, gdy fokus jest w komórce.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest podobna do <xref:System.Windows.Forms.Control.OnKeyUp%2A?displayProperty=nameWithType> metody. Jest to w tym samym okoliczności, w których <xref:System.Windows.Forms.Control.KeyUp> zdarzenie jest zgłaszane, ale nie faktycznie wygenerował zdarzenie.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyDown(System.Windows.Forms.KeyEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyPress(System.Windows.Forms.KeyPressEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.KeyPressUnsharesRow(System.Windows.Forms.KeyPressEventArgs,System.Int32)" />
        <altmember cref="T:System.Windows.Forms.KeyEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnLeave (int rowIndex, bool throughMouseClick);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLeave(int32 rowIndex, bool throughMouseClick) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnLeave(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLeave (rowIndex As Integer, throughMouseClick As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLeave(int rowIndex, bool throughMouseClick);" />
      <MemberSignature Language="F#" Value="abstract member OnLeave : int * bool -&gt; unit&#xA;override this.OnLeave : int * bool -&gt; unit" Usage="dataGridViewCell.OnLeave (rowIndex, throughMouseClick)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="throughMouseClick" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Indeks wiersza nadrzędnego komórki.</param>
        <param name="throughMouseClick">
          <see langword="true" /> Jeśli akcja użytkownika przenoszony fokus z komórki; <see langword="false" /> przypadku programowych operacji przeniesienia fokus z komórki.</param>
        <summary>Wywoływane, gdy fokus zostanie przeniesiony z komórki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest podobna do <xref:System.Windows.Forms.DataGridView.OnCellLeave%2A?displayProperty=nameWithType> metody. Jest to w tym samym okoliczności, w których <xref:System.Windows.Forms.DataGridView.CellLeave?displayProperty=nameWithType> zdarzenie jest zgłaszane, ale nie faktycznie wygenerował zdarzenie.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnEnter(System.Int32,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseLeave(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellLeave(System.Windows.Forms.DataGridViewCellEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseClick">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseClick(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseClick (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseClick(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnMouseClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridViewCell.OnMouseClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy użytkownik kliknie przycisk myszy, gdy wskaźnik znajduje się w komórce.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest podobna do <xref:System.Windows.Forms.DataGridView.OnCellMouseClick%2A?displayProperty=nameWithType> metody. Jest to w tym samym okoliczności, w których <xref:System.Windows.Forms.DataGridView.CellMouseClick?displayProperty=nameWithType> zdarzenie jest zgłaszane, ale nie faktycznie wygenerował zdarzenie.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje korzystać z tej metody.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseEnter(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseLeave(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDoubleClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDoubleClick(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDoubleClick (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDoubleClick(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridViewCell.OnMouseDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy użytkownik kliknie dwukrotnie przycisk myszy, gdy wskaźnik znajduje się w komórce.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest podobna do <xref:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick%2A?displayProperty=nameWithType> metody. Jest to w tym samym okoliczności, w których <xref:System.Windows.Forms.DataGridView.CellMouseDoubleClick?displayProperty=nameWithType> zdarzenie jest zgłaszane, ale nie faktycznie wygenerował zdarzenie.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellMouseDoubleClick" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseEnter(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseLeave(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDown (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDown(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDown (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDown(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDown : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnMouseDown : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridViewCell.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy użytkownik posiada naciśnięty przycisk myszy, gdy wskaźnik znajduje się w komórce.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest podobna do <xref:System.Windows.Forms.DataGridView.OnCellMouseDown%2A?displayProperty=nameWithType> metody. Jest to w tym samym okoliczności, w których <xref:System.Windows.Forms.DataGridView.CellMouseDown?displayProperty=nameWithType> zdarzenie jest zgłaszane, ale nie faktycznie wygenerował zdarzenie.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellMouseDown" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDownUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseEnter(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseLeave(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseEnter (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseEnter(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnMouseEnter(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseEnter (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseEnter(int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseEnter : int -&gt; unit&#xA;override this.OnMouseEnter : int -&gt; unit" Usage="dataGridViewCell.OnMouseEnter rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Indeks wiersza nadrzędnego komórki.</param>
        <summary>Wywoływane, gdy wskaźnik myszy porusza się nad komórką.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest podobna do <xref:System.Windows.Forms.DataGridView.OnCellMouseEnter%2A?displayProperty=nameWithType> metody. Jest to w tym samym okoliczności, w których <xref:System.Windows.Forms.DataGridView.CellMouseEnter?displayProperty=nameWithType> zdarzenie jest zgłaszane, ale nie faktycznie wygenerował zdarzenie.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje korzystać z tej metody. Ten przykład jest częścią większego przykładu dostępne w [porady: dostosowywanie komórek i kolumn w formancie DataGridView formularzy systemu Windows przez rozszerzanie ich zachowania i wyglądu](~/docs/framework/winforms/controls/customize-cells-and-columns-in-the-datagrid-by-extending-behavior.md).  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRolloverCell#220](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRolloverCell/CS/rollovercell.cs#220)]
 [!code-vb[System.Windows.Forms.DataGridViewRolloverCell#220](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRolloverCell/VB/rollovercell.vb#220)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellMouseEnter" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseLeave(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeave (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeave(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnMouseLeave(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeave (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeave(int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeave : int -&gt; unit&#xA;override this.OnMouseLeave : int -&gt; unit" Usage="dataGridViewCell.OnMouseLeave rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Indeks wiersza nadrzędnego komórki.</param>
        <summary>Wywoływane, gdy wskaźnik myszy opuści komórkę.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest podobna do <xref:System.Windows.Forms.DataGridView.OnCellMouseLeave%2A?displayProperty=nameWithType> metody. Jest to w tym samym okoliczności, w których <xref:System.Windows.Forms.DataGridView.CellMouseLeave?displayProperty=nameWithType> zdarzenie jest zgłaszane, ale nie faktycznie wygenerował zdarzenie.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje korzystać z tej metody. Ten przykład jest częścią większego przykładu dostępne w [porady: dostosowywanie komórek i kolumn w formancie DataGridView formularzy systemu Windows przez rozszerzanie ich zachowania i wyglądu](~/docs/framework/winforms/controls/customize-cells-and-columns-in-the-datagrid-by-extending-behavior.md).  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRolloverCell#220](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRolloverCell/CS/rollovercell.cs#220)]
 [!code-vb[System.Windows.Forms.DataGridViewRolloverCell#220](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRolloverCell/VB/rollovercell.vb#220)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellMouseLeave" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseEnter(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseMove (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseMove(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseMove (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseMove(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseMove : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnMouseMove : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridViewCell.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy wskaźnik myszy jest przesuwany w komórce.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest podobna do <xref:System.Windows.Forms.DataGridView.OnCellMouseMove%2A?displayProperty=nameWithType> metody. Jest to w tym samym okoliczności, w których <xref:System.Windows.Forms.DataGridView.CellMouseMove?displayProperty=nameWithType> zdarzenie jest zgłaszane, ale nie faktycznie wygenerował zdarzenie.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellMouseMove" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseEnter(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseLeave(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseMoveUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseUp (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseUp(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseUp (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseUp(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseUp : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnMouseUp : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridViewCell.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy użytkownik zwolni przycisk myszy, gdy wskaźnik znajduje się w komórce.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest podobna do <xref:System.Windows.Forms.DataGridView.OnCellMouseUp%2A?displayProperty=nameWithType> metody. Jest to w tym samym okoliczności, w których <xref:System.Windows.Forms.DataGridView.CellMouseUp?displayProperty=nameWithType> zdarzenie jest zgłaszane, ale nie faktycznie wygenerował zdarzenie.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellMouseUp" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseEnter(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseLeave(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseUpUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OwningColumn">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewColumn OwningColumn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewColumn OwningColumn" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.OwningColumn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwningColumn As DataGridViewColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewColumn ^ OwningColumn { System::Windows::Forms::DataGridViewColumn ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwningColumn : System.Windows.Forms.DataGridViewColumn" Usage="System.Windows.Forms.DataGridViewCell.OwningColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolumnę, która zawiera ta komórka.</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataGridViewColumn" /> Zawierający komórki, lub <see langword="null" /> Jeśli komórka nie jest w kolumnie.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.OwningRow" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" />
      </Docs>
    </Member>
    <Member MemberName="OwningRow">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewRow OwningRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewRow OwningRow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.OwningRow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwningRow As DataGridViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewRow ^ OwningRow { System::Windows::Forms::DataGridViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwningRow : System.Windows.Forms.DataGridViewRow" Usage="System.Windows.Forms.DataGridViewCell.OwningRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wiersza, który zawiera ta komórka.</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataGridViewRow" /> Zawierający komórki, lub <see langword="null" /> Jeśli komórka nie znajduje się w wierszu.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.OwningColumn" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.RowIndex" />
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="protected virtual void Paint (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle cellBounds, int rowIndex, System.Windows.Forms.DataGridViewElementStates cellState, object value, object formattedValue, string errorText, System.Windows.Forms.DataGridViewCellStyle cellStyle, System.Windows.Forms.DataGridViewAdvancedBorderStyle advancedBorderStyle, System.Windows.Forms.DataGridViewPaintParts paintParts);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Paint(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipBounds, valuetype System.Drawing.Rectangle cellBounds, int32 rowIndex, valuetype System.Windows.Forms.DataGridViewElementStates cellState, object value, object formattedValue, string errorText, class System.Windows.Forms.DataGridViewCellStyle cellStyle, class System.Windows.Forms.DataGridViewAdvancedBorderStyle advancedBorderStyle, valuetype System.Windows.Forms.DataGridViewPaintParts paintParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Object,System.Object,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewPaintParts)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Paint(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipBounds, System::Drawing::Rectangle cellBounds, int rowIndex, System::Windows::Forms::DataGridViewElementStates cellState, System::Object ^ value, System::Object ^ formattedValue, System::String ^ errorText, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ advancedBorderStyle, System::Windows::Forms::DataGridViewPaintParts paintParts);" />
      <MemberSignature Language="F#" Value="abstract member Paint : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * obj * obj * string * System.Windows.Forms.DataGridViewCellStyle * System.Windows.Forms.DataGridViewAdvancedBorderStyle * System.Windows.Forms.DataGridViewPaintParts -&gt; unit&#xA;override this.Paint : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * obj * obj * string * System.Windows.Forms.DataGridViewCellStyle * System.Windows.Forms.DataGridViewAdvancedBorderStyle * System.Windows.Forms.DataGridViewPaintParts -&gt; unit" Usage="dataGridViewCell.Paint (graphics, clipBounds, cellBounds, rowIndex, cellState, value, formattedValue, errorText, cellStyle, advancedBorderStyle, paintParts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="cellBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="cellState" Type="System.Windows.Forms.DataGridViewElementStates" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="formattedValue" Type="System.Object" />
        <Parameter Name="errorText" Type="System.String" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="advancedBorderStyle" Type="System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
        <Parameter Name="paintParts" Type="System.Windows.Forms.DataGridViewPaintParts" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Używana do malowania <see cref="T:System.Windows.Forms.DataGridViewCell" />.</param>
        <param name="clipBounds">A <see cref="T:System.Drawing.Rectangle" /> reprezentujący obszaru <see cref="T:System.Windows.Forms.DataGridView" /> który musi być wyświetlony ponownie, tak.</param>
        <param name="cellBounds">A <see cref="T:System.Drawing.Rectangle" /> zawierający granice <see cref="T:System.Windows.Forms.DataGridViewCell" /> który jest jest rysowane.</param>
        <param name="rowIndex">Indeks wiersza jest są rysowane komórki.</param>
        <param name="cellState">Bitowe połączenie <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> wartości, które określa stan komórki.</param>
        <param name="value">Dane <see cref="T:System.Windows.Forms.DataGridViewCell" /> który jest jest rysowane.</param>
        <param name="formattedValue">Sformatowane dane z <see cref="T:System.Windows.Forms.DataGridViewCell" /> który jest jest rysowane.</param>
        <param name="errorText">Komunikat o błędzie, który jest skojarzony z komórki.</param>
        <param name="cellStyle">A <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> zawierający informacje o komórki formatowanie i style.</param>
        <param name="advancedBorderStyle">A <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /> zawiera styl obramowania komórki jest są rysowane.</param>
        <param name="paintParts">Bitowe połączenie <see cref="T:System.Windows.Forms.DataGridViewPaintParts" /> wartości, które określa części komórki, które mają być rysowane.</param>
        <summary>Umożliwia malowanie bieżącego <see cref="T:System.Windows.Forms.DataGridViewCell" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Windows.Forms.DataGridViewCell.Paint%2A> metody <xref:System.Windows.Forms.DataGridViewButtonCell>. Ten przykładowy kod jest częścią większego przykładu udostępnionego w [porady: wyłączanie przycisków w kolumnie przycisków w formancie DataGridView formularzy systemu Windows](~/docs/framework/winforms/controls/disable-buttons-in-a-button-column-in-the-datagrid.md).  
  
 [!code-csharp[System.Windows.Forms.DataGridView.DisabledButtons#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridView.DisabledButtons#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.Control.Paint" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.PaintBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle)" />
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewElementStates" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="PaintBorder">
      <MemberSignature Language="C#" Value="protected virtual void PaintBorder (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle bounds, System.Windows.Forms.DataGridViewCellStyle cellStyle, System.Windows.Forms.DataGridViewAdvancedBorderStyle advancedBorderStyle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PaintBorder(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipBounds, valuetype System.Drawing.Rectangle bounds, class System.Windows.Forms.DataGridViewCellStyle cellStyle, class System.Windows.Forms.DataGridViewAdvancedBorderStyle advancedBorderStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.PaintBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PaintBorder(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipBounds, System::Drawing::Rectangle bounds, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ advancedBorderStyle);" />
      <MemberSignature Language="F#" Value="abstract member PaintBorder : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * System.Windows.Forms.DataGridViewCellStyle * System.Windows.Forms.DataGridViewAdvancedBorderStyle -&gt; unit&#xA;override this.PaintBorder : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * System.Windows.Forms.DataGridViewCellStyle * System.Windows.Forms.DataGridViewAdvancedBorderStyle -&gt; unit" Usage="dataGridViewCell.PaintBorder (graphics, clipBounds, bounds, cellStyle, advancedBorderStyle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="advancedBorderStyle" Type="System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Używany do rysowania obramowania.</param>
        <param name="clipBounds">A <see cref="T:System.Drawing.Rectangle" /> reprezentujący obszaru <see cref="T:System.Windows.Forms.DataGridView" /> który musi być wyświetlony ponownie, tak.</param>
        <param name="bounds">A <see cref="T:System.Drawing.Rectangle" /> zawierający obszar jest są rysowane obramowanie.</param>
        <param name="cellStyle">A <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> zawierający informacje o bieżącej komórki formatowanie i style.</param>
        <param name="advancedBorderStyle">A <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /> zawiera styl obramowania, który jest jest rysowane.</param>
        <summary>Umożliwia malowanie obramowania bieżącej <see cref="T:System.Windows.Forms.DataGridViewCell" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje korzystać z tej metody. Ten przykład jest częścią większego przykładu dostępne w [porady: wyłączanie przycisków w kolumnie przycisków w formancie DataGridView formularzy systemu Windows](~/docs/framework/winforms/controls/disable-buttons-in-a-button-column-in-the-datagrid.md).  
  
 [!code-csharp[System.Windows.Forms.DataGridView.DisabledButtons#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridView.DisabledButtons#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Object,System.Object,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewPaintParts)" />
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="PaintErrorIcon">
      <MemberSignature Language="C#" Value="protected virtual void PaintErrorIcon (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle cellValueBounds, string errorText);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PaintErrorIcon(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipBounds, valuetype System.Drawing.Rectangle cellValueBounds, string errorText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.PaintErrorIcon(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PaintErrorIcon(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipBounds, System::Drawing::Rectangle cellValueBounds, System::String ^ errorText);" />
      <MemberSignature Language="F#" Value="abstract member PaintErrorIcon : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * string -&gt; unit&#xA;override this.PaintErrorIcon : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * string -&gt; unit" Usage="dataGridViewCell.PaintErrorIcon (graphics, clipBounds, cellValueBounds, errorText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="cellValueBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="errorText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Używany do rysowania obramowania.</param>
        <param name="clipBounds">A <see cref="T:System.Drawing.Rectangle" /> reprezentujący obszaru <see cref="T:System.Windows.Forms.DataGridView" /> który musi być wyświetlony ponownie, tak.</param>
        <param name="cellValueBounds">Ograniczenia <see cref="T:System.Drawing.Rectangle" /> który umieszcza obszaru zawartości komórki.</param>
        <param name="errorText">Komunikat o błędzie, który jest skojarzony z komórki.</param>
        <summary>Umożliwia malowanie ikony błędu bieżącego <see cref="T:System.Windows.Forms.DataGridViewCell" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `errorText` Parametr sygnały istnienie wystąpił błąd. Jeśli `errorText` jest `null` lub <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Windows.Forms.DataGridViewCell.PaintErrorIcon%2A> — metoda nie działa.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Object,System.Object,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewPaintParts)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.PaintBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle)" />
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Drawing.Rectangle" />
      </Docs>
    </Member>
    <Member MemberName="ParseFormattedValue">
      <MemberSignature Language="C#" Value="public virtual object ParseFormattedValue (object formattedValue, System.Windows.Forms.DataGridViewCellStyle cellStyle, System.ComponentModel.TypeConverter formattedValueTypeConverter, System.ComponentModel.TypeConverter valueTypeConverter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ParseFormattedValue(object formattedValue, class System.Windows.Forms.DataGridViewCellStyle cellStyle, class System.ComponentModel.TypeConverter formattedValueTypeConverter, class System.ComponentModel.TypeConverter valueTypeConverter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.ParseFormattedValue(System.Object,System.Windows.Forms.DataGridViewCellStyle,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ParseFormattedValue (formattedValue As Object, cellStyle As DataGridViewCellStyle, formattedValueTypeConverter As TypeConverter, valueTypeConverter As TypeConverter) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ParseFormattedValue(System::Object ^ formattedValue, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, System::ComponentModel::TypeConverter ^ formattedValueTypeConverter, System::ComponentModel::TypeConverter ^ valueTypeConverter);" />
      <MemberSignature Language="F#" Value="abstract member ParseFormattedValue : obj * System.Windows.Forms.DataGridViewCellStyle * System.ComponentModel.TypeConverter * System.ComponentModel.TypeConverter -&gt; obj&#xA;override this.ParseFormattedValue : obj * System.Windows.Forms.DataGridViewCellStyle * System.ComponentModel.TypeConverter * System.ComponentModel.TypeConverter -&gt; obj" Usage="dataGridViewCell.ParseFormattedValue (formattedValue, cellStyle, formattedValueTypeConverter, valueTypeConverter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formattedValue" Type="System.Object" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="formattedValueTypeConverter" Type="System.ComponentModel.TypeConverter" />
        <Parameter Name="valueTypeConverter" Type="System.ComponentModel.TypeConverter" />
      </Parameters>
      <Docs>
        <param name="formattedValue">Wyświetl wartość komórki.</param>
        <param name="cellStyle">
          <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> Dla komórki.</param>
        <param name="formattedValueTypeConverter">A <see cref="T:System.ComponentModel.TypeConverter" /> dla typu wartości wyświetlania, lub <see langword="null" /> do używania domyślnej.</param>
        <param name="valueTypeConverter">A <see cref="T:System.ComponentModel.TypeConverter" /> dla typu wartości komórki, lub <see langword="null" /> do używania domyślnej.</param>
        <summary>Konwertuje wartość sformatowana do wyświetlenia na rzeczywistą wartość komórki.</summary>
        <returns>Wartość komórki.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy użytkownik edytuje wartość komórki i zatwierdza zmiany, <xref:System.Windows.Forms.DataGridView> kontroli wywołuje tę metodę można przekonwertować wartości wyświetlane <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> do <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A>. Formant następnie ustawia na skonwertowana wartość odpowiednia wartość komórki lub wartość źródła danych.  
  
 Domyślna implementacja tej metody analizuje `formattedValue` przy użyciu parametru <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, i <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> właściwości styl komórek wskazanej przez `cellStyle` parametru.  
  
 Jeśli `formattedValue` jest równa <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, ta metoda zwraca wartość <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A> właściwości lub `null` Jeśli <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A> jest <xref:System.DBNull.Value?displayProperty=nameWithType> i komórki <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> jest typem referencyjnym.  
  
 Jeśli `formattedValue` nie jest równa <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, analizuje tej metody `formattedValue` przy użyciu <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> właściwości i określonego lub domyślnego konwertery.  
  
 Jeśli komórka <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> jest wartości null, ta metoda opakowuje wartość zwracana jako <xref:System.Nullable%601> typu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="cellStyle" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">
          <see cref="P:System.Windows.Forms.DataGridViewCell.FormattedValueType" /> Wartość właściwości jest <see langword="null" />.  - lub - <see cref="P:System.Windows.Forms.DataGridViewCell.ValueType" /> wartość właściwości jest <see langword="null" />.  - lub - <paramref name="formattedValue" /> nie może zostać przekonwertowany.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="formattedValue" /> jest <see langword="null" />.  - lub - typ <paramref name="formattedValue" /> nie jest zgodny z typem wskazywanym przez <see cref="P:System.Windows.Forms.DataGridViewCell.FormattedValueType" /> właściwości.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.NullValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.FormatProvider" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ValueType" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetFormattedValue(System.Object,System.Int32,System.Windows.Forms.DataGridViewCellStyle@,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter,System.Windows.Forms.DataGridViewDataErrorContexts)" />
        <altmember cref="T:System.Nullable`1" />
      </Docs>
    </Member>
    <Member MemberName="PositionEditingControl">
      <MemberSignature Language="C#" Value="public virtual void PositionEditingControl (bool setLocation, bool setSize, System.Drawing.Rectangle cellBounds, System.Drawing.Rectangle cellClip, System.Windows.Forms.DataGridViewCellStyle cellStyle, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedColumn, bool isFirstDisplayedRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PositionEditingControl(bool setLocation, bool setSize, valuetype System.Drawing.Rectangle cellBounds, valuetype System.Drawing.Rectangle cellClip, class System.Windows.Forms.DataGridViewCellStyle cellStyle, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedColumn, bool isFirstDisplayedRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.PositionEditingControl(System.Boolean,System.Boolean,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DataGridViewCellStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PositionEditingControl (setLocation As Boolean, setSize As Boolean, cellBounds As Rectangle, cellClip As Rectangle, cellStyle As DataGridViewCellStyle, singleVerticalBorderAdded As Boolean, singleHorizontalBorderAdded As Boolean, isFirstDisplayedColumn As Boolean, isFirstDisplayedRow As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PositionEditingControl(bool setLocation, bool setSize, System::Drawing::Rectangle cellBounds, System::Drawing::Rectangle cellClip, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedColumn, bool isFirstDisplayedRow);" />
      <MemberSignature Language="F#" Value="abstract member PositionEditingControl : bool * bool * System.Drawing.Rectangle * System.Drawing.Rectangle * System.Windows.Forms.DataGridViewCellStyle * bool * bool * bool * bool -&gt; unit&#xA;override this.PositionEditingControl : bool * bool * System.Drawing.Rectangle * System.Drawing.Rectangle * System.Windows.Forms.DataGridViewCellStyle * bool * bool * bool * bool -&gt; unit" Usage="dataGridViewCell.PositionEditingControl (setLocation, setSize, cellBounds, cellClip, cellStyle, singleVerticalBorderAdded, singleHorizontalBorderAdded, isFirstDisplayedColumn, isFirstDisplayedRow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setLocation" Type="System.Boolean" />
        <Parameter Name="setSize" Type="System.Boolean" />
        <Parameter Name="cellBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="cellClip" Type="System.Drawing.Rectangle" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="singleVerticalBorderAdded" Type="System.Boolean" />
        <Parameter Name="singleHorizontalBorderAdded" Type="System.Boolean" />
        <Parameter Name="isFirstDisplayedColumn" Type="System.Boolean" />
        <Parameter Name="isFirstDisplayedRow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="setLocation">
          <see langword="true" /> Aby mieć kontrolę umieszczone określony przez inne argumenty; <see langword="false" /> zezwolenie na sterowanie można umieścić samej siebie.</param>
        <param name="setSize">
          <see langword="true" /> Aby określić rozmiar; <see langword="false" /> zezwolenie na sterowanie sam rozmiar.</param>
        <param name="cellBounds">A <see cref="T:System.Drawing.Rectangle" /> definiuje granicach komórki.</param>
        <param name="cellClip">Obszar, który będzie używany do rysowania kontrolki edycji.</param>
        <param name="cellStyle">A <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> reprezentujący styl edytowanej komórki.</param>
        <param name="singleVerticalBorderAdded">
          <see langword="true" /> Aby dodać obramowanie pionowego do komórki; w przeciwnym razie <see langword="false" />.</param>
        <param name="singleHorizontalBorderAdded">
          <see langword="true" /> Aby dodać poziomy obramowanie do komórki; w przeciwnym razie <see langword="false" />.</param>
        <param name="isFirstDisplayedColumn">
          <see langword="true" /> Jeśli hostingu komórka jest w pierwszej kolumnie widoczne; w przeciwnym razie <see langword="false" />.</param>
        <param name="isFirstDisplayedRow">
          <see langword="true" /> w przypadku hostingu komórki w pierwszym wierszu widoczne; w przeciwnym razie <see langword="false" />.</param>
        <summary>Ustawia położenie i rozmiar kontrolki edycji należące do komórki w <see cref="T:System.Windows.Forms.DataGridView" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Niektóre klasy wyprowadzone z <xref:System.Windows.Forms.DataGridViewCell> klas, takich jak <xref:System.Windows.Forms.DataGridViewComboBoxCell>, kontrolki w zaznaczonej komórce hosta. <xref:System.Windows.Forms.DataGridViewCell.PositionEditingControl%2A> Metody umieszcza edycji kontrolek wewnątrz komórki hosta. Ponieważ formant edycji może zająć więcej miejsca niż jedną komórkę, może być konieczne znajdować inaczej podczas edytowania komórki w pierwszym widocznej kolumny lub pierwszego wiersza widoczny, więc nie malować poza obszarem <xref:System.Windows.Forms.DataGridView>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Komórka nie jest zawarty w <see cref="T:System.Windows.Forms.DataGridView" /> formantu.</exception>
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.AdjustCellBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewComboBoxCell" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="PositionEditingPanel">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Rectangle PositionEditingPanel (System.Drawing.Rectangle cellBounds, System.Drawing.Rectangle cellClip, System.Windows.Forms.DataGridViewCellStyle cellStyle, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedColumn, bool isFirstDisplayedRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.Rectangle PositionEditingPanel(valuetype System.Drawing.Rectangle cellBounds, valuetype System.Drawing.Rectangle cellClip, class System.Windows.Forms.DataGridViewCellStyle cellStyle, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedColumn, bool isFirstDisplayedRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.PositionEditingPanel(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DataGridViewCellStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PositionEditingPanel (cellBounds As Rectangle, cellClip As Rectangle, cellStyle As DataGridViewCellStyle, singleVerticalBorderAdded As Boolean, singleHorizontalBorderAdded As Boolean, isFirstDisplayedColumn As Boolean, isFirstDisplayedRow As Boolean) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Drawing::Rectangle PositionEditingPanel(System::Drawing::Rectangle cellBounds, System::Drawing::Rectangle cellClip, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedColumn, bool isFirstDisplayedRow);" />
      <MemberSignature Language="F#" Value="abstract member PositionEditingPanel : System.Drawing.Rectangle * System.Drawing.Rectangle * System.Windows.Forms.DataGridViewCellStyle * bool * bool * bool * bool -&gt; System.Drawing.Rectangle&#xA;override this.PositionEditingPanel : System.Drawing.Rectangle * System.Drawing.Rectangle * System.Windows.Forms.DataGridViewCellStyle * bool * bool * bool * bool -&gt; System.Drawing.Rectangle" Usage="dataGridViewCell.PositionEditingPanel (cellBounds, cellClip, cellStyle, singleVerticalBorderAdded, singleHorizontalBorderAdded, isFirstDisplayedColumn, isFirstDisplayedRow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cellBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="cellClip" Type="System.Drawing.Rectangle" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="singleVerticalBorderAdded" Type="System.Boolean" />
        <Parameter Name="singleHorizontalBorderAdded" Type="System.Boolean" />
        <Parameter Name="isFirstDisplayedColumn" Type="System.Boolean" />
        <Parameter Name="isFirstDisplayedRow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cellBounds">A <see cref="T:System.Drawing.Rectangle" /> definiuje granicach komórki.</param>
        <param name="cellClip">Obszar, który będzie używany do rysowania panelu edycji.</param>
        <param name="cellStyle">A <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> reprezentujący styl edytowanej komórki.</param>
        <param name="singleVerticalBorderAdded">
          <see langword="true" /> Aby dodać obramowanie pionowego do komórki; w przeciwnym razie <see langword="false" />.</param>
        <param name="singleHorizontalBorderAdded">
          <see langword="true" /> Aby dodać poziomy obramowanie do komórki; w przeciwnym razie <see langword="false" />.</param>
        <param name="isFirstDisplayedColumn">
          <see langword="true" /> Jeśli komórka jest w pierwszej kolumnie aktualnie wyświetlany w formancie; w przeciwnym razie <see langword="false" />.</param>
        <param name="isFirstDisplayedRow">
          <see langword="true" /> Jeśli komórka jest w pierwszym wierszu aktualnie wyświetlany w formancie; w przeciwnym razie <see langword="false" />.</param>
        <summary>Ustawia położenie i rozmiar panelu edycji obsługiwanych przez komórki i zwraca normalne granice formantu edycji w panelu edycji.</summary>
        <returns>A <see cref="T:System.Drawing.Rectangle" /> reprezentujący normalne granice formantu edycji w panelu edycji.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Komórka nie został dodany do <see cref="T:System.Windows.Forms.DataGridView" /> formantu.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="PreferredSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size PreferredSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size PreferredSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.PreferredSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size PreferredSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredSize : System.Drawing.Size" Usage="System.Windows.Forms.DataGridViewCell.PreferredSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera rozmiar w pikselach prostokątny obszar, w którym można zmieścić komórki.</summary>
        <value>A <see cref="T:System.Drawing.Size" /> zawierający wysokość i szerokość w pikselach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.PreferredSize%2A> Właściwość zwraca fizyczną rozmiar komórki obliczone przez komórki jego właścicielem wierszy i kolumn. <xref:System.Windows.Forms.DataGridViewCell.PreferredSize%2A> Zwraca <xref:System.Drawing.Size> o szerokości i wysokości -1, jeśli komórka nie znajduje się w tabeli.  
  
 Jeśli komórka jest w <xref:System.Windows.Forms.DataGridViewColumn> mający jego <xref:System.Windows.Forms.DataGridViewColumn.Resizable%2A> ustawioną właściwość `false`, -1, jest zwracany szerokości.  
  
 Ta metoda polega na <xref:System.Windows.Forms.DataGridViewCell.GetFormattedValue%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" /> jest mniejsza niż 0, co oznacza, że komórki komórki nagłówka wiersza.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Wiersz zawierający komórki jest wierszu udostępnionym.  - lub - komórka jest komórki nagłówka kolumny.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetPreferredSize(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Drawing.Size)" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Size" />
        <altmember cref="T:System.Drawing.Size" />
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Windows.Forms.DataGridViewCell.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy można edytowane komórki danych.</summary>
        <value>
          <see langword="true" /> Jeśli nie można edytować komórki danych; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.ReadOnly%2A> Właściwość wskazuje, czy można edytować dane wyświetlane przez komórki. Można ustawić <xref:System.Windows.Forms.DataGridViewCell.ReadOnly%2A> dla pojedynczych komórek lub użytkownik może wykonać cały wiersz lub kolumnę tylko do odczytu, ustawiając <xref:System.Windows.Forms.DataGridViewRow.ReadOnly%2A?displayProperty=nameWithType> lub <xref:System.Windows.Forms.DataGridViewColumn.ReadOnly%2A?displayProperty=nameWithType> właściwości. Domyślnie jeśli nadrzędny wierszem lub kolumną komórki ma ustawioną wartość tylko do odczytu, komórek podrzędnych przyjmie taką samą wartość. To zachowanie domyślne można przesłonić przez ustawienie <xref:System.Windows.Forms.DataGridViewCell.ReadOnly%2A> dla pojedynczych komórek.  
  
 Można przejść do komórek tylko do odczytu, a można ustawić komórki tylko do odczytu jako bieżącej komórki.  
  
 <xref:System.Windows.Forms.DataGridViewCell.ReadOnly%2A> wpływa tylko na tym, czy komórki nie można edytować; nie dotyczy czy użytkownik może usuwać wiersze.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Brak wiersza będący właścicielem, gdy ustawienie dla tej właściwości.  - lub - będący właścicielem wiersza jest udostępniony w przypadku ustawienia tej właściwości.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewElementStates" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.ReadOnly" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.ReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Resizable">
      <MemberSignature Language="C#" Value="public virtual bool Resizable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Resizable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.Resizable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Resizable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Resizable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Resizable : bool" Usage="System.Windows.Forms.DataGridViewCell.Resizable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy można zmieniać komórki.</summary>
        <value>
          <see langword="true" /> Jeśli można zmienić rozmiar komórki; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Windows.Forms.DataGridViewCell.Resizable%2A> właściwość jest ustawiana przez nadrzędny wiersz lub kolumnę komórki.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewElementStates" />
      </Docs>
    </Member>
    <Member MemberName="RowIndex">
      <MemberSignature Language="C#" Value="public int RowIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.RowIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RowIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RowIndex : int" Usage="System.Windows.Forms.DataGridViewCell.RowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera indeks wiersza nadrzędnego komórki.</summary>
        <value>Indeks wiersza, który zawiera komórki; -1, jeśli brak będący właścicielem wiersza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Windows.Forms.DataGridViewCell.RowIndex%2A> właściwość zwraca wartość -1, jest komórka nagłówka kolumny lub komórki wiersza jest udostępniony.  
  
 Aby uzyskać więcej informacji o udostępnianiu wiersza, zobacz [najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono użycie tej właściwości.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#080](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#080)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#080](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#080)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public virtual bool Selected { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Selected" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Selected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Selected { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Selected : bool with get, set" Usage="System.Windows.Forms.DataGridViewCell.Selected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy wybrano komórki.</summary>
        <value>
          <see langword="true" /> Jeśli komórki jest wybrana; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Nie skojarzono nie <see cref="T:System.Windows.Forms.DataGridView" /> podczas ustawiania tej właściwości.  - lub - będący właścicielem wiersza jest udostępniony w przypadku ustawienia tej właściwości.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewElementStates" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="protected virtual bool SetValue (int rowIndex, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool SetValue(int32 rowIndex, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.SetValue(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SetValue (rowIndex As Integer, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool SetValue(int rowIndex, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : int * obj -&gt; bool&#xA;override this.SetValue : int * obj -&gt; bool" Usage="dataGridViewCell.SetValue (rowIndex, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Indeks wiersza nadrzędnego komórki.</param>
        <param name="value">Aby ustawić wartość komórki.</param>
        <summary>Ustawia wartość komórki.</summary>
        <returns>
          <see langword="true" /> Jeśli ustawiono wartość; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="rowIndex" /> jest mniejsza niż 0 lub większa niż lub równa liczbie wierszy w obiekcie nadrzędnym <see cref="T:System.Windows.Forms.DataGridView" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" /> jest mniejsza niż 0.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetValue(System.Int32)" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValue" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Drawing.Size Size { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.Size" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size Size { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.Size : System.Drawing.Size" Usage="System.Windows.Forms.DataGridViewCell.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera rozmiar komórki.</summary>
        <value>A <see cref="T:System.Drawing.Size" /> ustawioną będący właścicielem wiersza wysokość i szerokość kolumny będący właścicielem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli komórka nie jest skojarzony z <xref:System.Windows.Forms.DataGridView> kontroli, <xref:System.Windows.Forms.DataGridViewCell.Size%2A> zwraca <xref:System.Drawing.Size> o szerokości i wysokości-1.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wiersz zawierający komórki jest wierszu udostępnionym.  - lub - komórka jest komórki nagłówka kolumny.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.PreferredSize" />
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellStyle Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle Style" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.Style" />
      <MemberSignature Language="VB.NET" Value="Public Property Style As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellStyle ^ Style { System::Windows::Forms::DataGridViewCellStyle ^ get(); void set(System::Windows::Forms::DataGridViewCellStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Style : System.Windows.Forms.DataGridViewCellStyle with get, set" Usage="System.Windows.Forms.DataGridViewCell.Style" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia styl komórki.</summary>
        <value>Styl skojarzony z komórki.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView> Kontroli wyświetla jego komórki za pomocą stylów wskazywanym przez komórki <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> właściwość, która dziedziczy style od innych właściwości typu <xref:System.Windows.Forms.DataGridViewCellStyle>. Style określonej za pomocą <xref:System.Windows.Forms.DataGridViewCell.Style%2A> właściwości zastępują style określony przy użyciu innych właściwości stylu komórki, ale niekoniecznie oznacza wszystkie style, które przyczyniają się do wyglądu komórki.  
  
 Aby uzyskać więcej informacji, zobacz [style komórki w formancie DataGridView formularzy systemu Windows](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.DataGridViewCell.Style%2A> właściwości do pobrania kolor tła komórki. Ten przykład jest częścią większego przykładu kodu przewidzianych <xref:System.Windows.Forms.DataGridViewColumn> klasy.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#120](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewColumnDemo.cpp#120)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#120](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewColumnDemo.cs#120)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#120](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewcolumndemo.vb#120)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellStyleChanged" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.DefaultCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.DataGridViewCell.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt, który zawiera dodatkowe dane dotyczące komórki.</summary>
        <value>
          <see cref="T:System.Object" /> Zawierający dane dotyczące komórki. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typ pochodny typu <xref:System.Object> klasy można przypisać do tej właściwości. <xref:System.Windows.Forms.DataGridViewCell.Tag%2A> Właściwości jest najczęściej używany do przechowywania danych, która jest ściśle powiązana z wartości wyświetlanej przez komórki.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
        <altmember cref="T:System.Object" />
        <altmember cref="P:System.Windows.Forms.Control.Tag" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipText">
      <MemberSignature Language="C#" Value="public string ToolTipText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTipText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.ToolTipText" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTipText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTipText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTipText : string with get, set" Usage="System.Windows.Forms.DataGridViewCell.ToolTipText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst etykietki narzędzia skojarzoną z tą komórką.</summary>
        <value>Tekst etykietki narzędzia skojarzone z komórki. Wartość domyślna to <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość tej właściwości jest wyświetlana jako komórki etykietka narzędzia, gdy wskaźnik myszy znajduje się nad komórką i wartość właściwości nie jest <xref:System.String.Empty>. Jeśli wartość tej właściwości jest <xref:System.String.Empty>komórki zostanie wyświetlić etykietkę zawierającą wartość komórki, jeśli wartość jest obcięty w oknie komórki, a w przeciwnym, komórki nie będą wyświetlane w etykietce narzędzia. Można także uniknąć wyświetlanie etykietka narzędzia, ustawiając <xref:System.Windows.Forms.DataGridView.ShowCellToolTips%2A?displayProperty=nameWithType> właściwości `false`.  
  
 Gdy <xref:System.Windows.Forms.DataGridView> kontroli <xref:System.Windows.Forms.DataGridView.DataSource%2A> właściwość jest ustawiona lub jej <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> właściwość jest `true`, pobierania wartości <xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A> zgłasza właściwości <xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded> zdarzeń formantu i zwraca wartość <xref:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs.ToolTipText%2A?displayProperty=nameWithType> Właściwość jako określonych w zdarzeniu programu obsługi. Jeśli nie ma żadnych programów obsługi dla zdarzenia, pobierania wartości <xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A> właściwość zwraca wcześniej określona wartość lub wartość domyślną <xref:System.String.Empty>.  
  
 Obsługa <xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded> zdarzeń jest szczególnie przydatna podczas pracy z dużą ilością danych, aby uniknąć spadku wydajności podczas ustawiania komórki <xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A> wartości dla wielu komórek. Aby uzyskać więcej informacji, zobacz [najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 Zmienianie tej właściwości zgłasza <xref:System.Windows.Forms.DataGridView.CellToolTipTextChanged> zdarzenia będący właścicielem <xref:System.Windows.Forms.DataGridView>, jeśli taka istnieje.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono sposób ustawiania <xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A> właściwości wewnątrz obsługi zdarzeń dla <xref:System.Windows.Forms.DataGridView.CellFormatting> zdarzeń. Ten przykład jest częścią większego przykładu kodu w [porady: Dodawanie elementu ToolTips do pojedynczych komórek w formancie DataGridView formularzy systemu Windows](~/docs/framework/winforms/controls/add-tooltips-to-individual-cells-in-a-wf-datagridview-control.md).  
  
 [!code-cpp[System.Windows.Forms.DataGridViewCell.ToolTipText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCell.ToolTipText/cpp/datagridviewcell.tooltiptext.cpp#1)]
 [!code-csharp[System.Windows.Forms.DataGridViewCell.ToolTipText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCell.ToolTipText/CS/datagridviewcell.tooltiptext.cs#1)]
 [!code-vb[System.Windows.Forms.DataGridViewCell.ToolTipText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCell.ToolTipText/VB/datagridviewcell.tooltiptext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.ShowCellToolTips" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellToolTipTextChanged" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellToolTipTextNeeded" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dataGridViewCell.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca ciąg opisujący bieżący obiekt.</summary>
        <returns>Ciąg, który reprezentuje bieżący obiekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie podano inaczej, <xref:System.Windows.Forms.DataGridViewCell.ToString%2A> metody dla różnych typów komórki zwróci ciąg mają postać pokazaną w poniższym przykładzie kodu:  
  
 `Classname {RowIndex = #, ColumnIndex = #}`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Windows.Forms.DataGridViewCell.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość skojarzoną z tą komórką.</summary>
        <value>Pobiera lub ustawia dane wyświetlane przez komórki. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po przypisaniu innej wartości w komórce, <xref:System.Windows.Forms.DataGridView.CellValueChanged> zdarzenie <xref:System.Windows.Forms.DataGridView> kontroli jest wywoływane.  
  
 <xref:System.Windows.Forms.DataGridViewCell.Value%2A> Właściwość jest obiekt danych rzeczywistych zawarty w komórce, podczas gdy <xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A> właściwość jest sformatowany reprezentację danych. <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> i <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> właściwości odpowiadają odpowiednio do typów danych z tych wartości.  
  
 Podczas ustawiania <xref:System.Windows.Forms.DataGridViewCell.Value%2A> właściwość, określona wartość nie jest automatycznie przekonwertować z sformatowane, Wyświetl wartość do odpowiednia wartość komórki. Na przykład <xref:System.Windows.Forms.DataGridViewCellStyle> obowiązywać dla komórki jest ignorowane, więc ustawienie <xref:System.Windows.Forms.DataGridViewCell.Value%2A> do <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A?displayProperty=nameWithType> nie powoduje wartość właściwości <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak można zaktualizować zawartości komórki z <xref:System.Windows.Forms.DataGridViewCell.Value%2A> właściwości. Ten przykład jest częścią większego przykładu kodu w [porady: manipulowanie wierszy w formancie DataGridView formularzy systemu Windows](~/docs/framework/winforms/controls/how-to-manipulate-rows-in-the-windows-forms-datagridview-control.md).  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#211)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#211)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#211)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Windows.Forms.DataGridViewCell.RowIndex" /> jest poza prawidłowym zakresem 0, aby liczba wierszy w formancie pomniejszonej o 1.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" /> jest mniejsza niż 0, co oznacza, że komórki komórki nagłówka wiersza.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Tag" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ValueType" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValue" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValueChanged" />
      </Docs>
    </Member>
    <Member MemberName="ValueType">
      <MemberSignature Language="C#" Value="public virtual Type ValueType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValueType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.ValueType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValueType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ValueType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValueType : Type with get, set" Usage="System.Windows.Forms.DataGridViewCell.ValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ danych wartości w komórce.</summary>
        <value>A <see cref="T:System.Type" /> reprezentujący typ danych wartości w komórce.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> nie ustawiono właściwości dla komórki, <xref:System.Windows.Forms.DataGridViewColumn.ValueType%2A?displayProperty=nameWithType> dla kolumny będący właścicielem jest używana, jeśli istnieje.  
  
 <xref:System.Windows.Forms.DataGridViewCell.Value%2A> Właściwość jest obiekt danych rzeczywistych zawarty w komórce, podczas gdy <xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A> właściwość jest sformatowany reprezentację danych. <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> i <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> właściwości odpowiadają odpowiednio do typów danych z tych wartości.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tej właściwości.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.ValueType" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValueType" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public virtual bool Visible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool" Usage="System.Windows.Forms.DataGridViewCell.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy komórki jest wiersz lub kolumnę, które zostały ukryte.</summary>
        <value>
          <see langword="true" /> Jeśli komórka jest widoczna; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość wskazuje, czy komórki jest wiersz lub kolumnę z jego <xref:System.Windows.Forms.DataGridViewBand.Visible%2A> ustawioną właściwość `false`. Nie oznacza to, czy komórki ma ekranem przewijane. Aby określić, czy komórki jest widoczny w obszar wyświetlania formantu, użyj <xref:System.Windows.Forms.DataGridViewCell.Displayed%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.Visible" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.Visible" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Displayed" />
      </Docs>
    </Member>
  </Members>
</Type>