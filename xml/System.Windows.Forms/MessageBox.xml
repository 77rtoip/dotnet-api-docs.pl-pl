<Type Name="MessageBox" FullName="System.Windows.Forms.MessageBox">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ed3e050db04583c9bfb4106c1a421571a64f0b38" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30706982" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MessageBox" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageBox extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.MessageBox" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageBox" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageBox" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Wyświetla okno komunikatu, znanej także jako okno dialogowe i wyświetla komunikat użytkownikowi. Jest modalny, blokuje inne akcje w aplikacji, dopóki użytkownik zamyka go. A <see cref="T:System.Windows.Forms.MessageBox" /> może zawierać tekstu, przycisków i symbole, które informują oraz Poinstruuj użytkownika.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie można utworzyć nowe wystąpienie klasy <xref:System.Windows.Forms.MessageBox> klasy. Aby wyświetlić okno komunikatu, należy wywołać `static` metody <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>. Tytuł, wiadomości, przycisków i ikony wyświetlane w oknie komunikatu są określane przez parametry przekazywane do tej metody.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób użycia <xref:System.Windows.Forms.MessageBox> informować użytkownika brak wpisu w <xref:System.Windows.Forms.TextBox>. W tym przykładzie wymaga wywołania metody z istniejącego formularza z <xref:System.Windows.Forms.TextBox> o nazwie **ServerName** na nim.  
  
 [!code-cpp[MessageBox.Show Variations#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MessageBox.Show Variations/CPP/form1.cpp#1)]
 [!code-csharp[MessageBox.Show Variations#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MessageBox.Show Variations/CS/form1.cs#1)]
 [!code-vb[MessageBox.Show Variations#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MessageBox.Show Variations/VB/form1.vb#1)]  
  
 Poniższy przykład kodu pokazuje, jak monitowanie użytkownika o yes lub no pytanie i podejmowania decyzji na podstawie w odpowiedzi.  
  
 [!code-cpp[Classic MessageBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MessageBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MessageBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MessageBox Example/CS/source.cs#1)]
 [!code-vb[Classic MessageBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MessageBox Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.Boolean)" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Show">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wyświetla okno komunikatu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do wyświetlenia w oknie komunikatu.</param>
        <summary>Wyświetla okno z określonego tekstu.</summary>
        <returns>Jeden z <see cref="T:System.Windows.Forms.DialogResult" /> wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie są wyświetlane w oknie komunikatu **OK** przycisku. W oknie komunikatu nie zawiera podpisu w tytule.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia proste okno komunikatu.  
  
 [!code-csharp[MessageBox.Show Variations#6](~/samples/snippets/csharp/VS_Snippets_Winforms/MessageBox.Show Variations/CS/form1.cs#6)]
 [!code-vb[MessageBox.Show Variations#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MessageBox.Show Variations/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">dla bezpiecznej subwindows ustawić tę właściwość. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do wyświetlenia w oknie komunikatu.</param>
        <param name="caption">Tekst wyświetlany na pasku tytułu okna komunikatu.</param>
        <summary>Wyświetla okno z określony tekst i podpis.</summary>
        <returns>Jeden z <see cref="T:System.Windows.Forms.DialogResult" /> wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie są wyświetlane w oknie komunikatu **OK** przycisku.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">dla bezpiecznej subwindows wywołać tę metodę. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">Implementacja interfejsu <see cref="T:System.Windows.Forms.IWin32Window" /> który będzie właścicielem modalnego okna dialogowego.</param>
        <param name="text">Tekst do wyświetlenia w oknie komunikatu.</param>
        <summary>Wyświetla komunikat przed określony obiekt i określonym tekstem.</summary>
        <returns>Jeden z <see cref="T:System.Windows.Forms.DialogResult" /> wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć `owner` parametr, aby określić obiekcie, który implementuje <xref:System.Windows.Forms.IWin32Window> interfejsu, który będzie służyć jako okno dialogowe okien najwyższego poziomu i właściciela. Okno komunikatu jest modalne okno dialogowe, co oznacza, że nie wprowadzono (kliknij klawiatury lub myszy) może wystąpić z wyjątkiem w formie modalnej do obiektów. Program należy ukryć lub zamknij formie modalnej (zazwyczaj w odpowiedzi na niektóre akcje użytkownika) przed wejściem innej formy może wystąpić.  
  
 Domyślnie są wyświetlane w oknie komunikatu **OK** przycisku. W oknie komunikatu nie zawiera podpisu w tytule.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">dla bezpiecznej subwindows wywołać tę metodę. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption, System.Windows.Forms.MessageBoxButtons buttons);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String, buttons As MessageBoxButtons) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do wyświetlenia w oknie komunikatu.</param>
        <param name="caption">Tekst wyświetlany na pasku tytułu okna komunikatu.</param>
        <param name="buttons">Jeden z <see cref="T:System.Windows.Forms.MessageBoxButtons" /> wartości, które określa przyciski, które mają być wyświetlane w oknie komunikatu.</param>
        <summary>Wyświetla okno z określonego tekstu, caption i przycisków.</summary>
        <returns>Jeden z <see cref="T:System.Windows.Forms.DialogResult" /> wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Może mieć maksymalnie trzy przyciski w oknie komunikatu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób wyświetlania <xref:System.Windows.Forms.MessageBox> przy użyciu opcji obsługiwane przez to przeciążenie metody <xref:System.Windows.Forms.MessageBox.Show%2A>. Po zweryfikowaniu, że zmienna typu ciąg, `ServerName`, jest pusta, zawiera przykład <xref:System.Windows.Forms.MessageBox>, oferty użytkownika opcję, aby anulować operację. Jeśli <xref:System.Windows.Forms.MessageBox.Show%2A> daje w wyniku wartości zwracanej przez metodę <xref:System.Windows.Forms.DialogResult.Yes>, formularz, który będzie wyświetlany <xref:System.Windows.Forms.MessageBox> jest zamknięty.  
  
 [!code-cpp[MessageBox.Show Variations#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MessageBox.Show Variations/CPP/form1.cpp#1)]
 [!code-csharp[MessageBox.Show Variations#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MessageBox.Show Variations/CS/form1.cs#1)]
 [!code-vb[MessageBox.Show Variations#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MessageBox.Show Variations/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> Określono parametr nie jest elementem członkowskim <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <exception cref="T:System.InvalidOperationException">Nastąpiła próba wyświetlenia <see cref="T:System.Windows.Forms.MessageBox" /> w ramach procesu, który nie jest uruchomiony w trybie interakcyjnym użytkownika. Jest to określone przez <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> właściwości.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">dla bezpiecznej subwindows wywołać tę metodę. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text, string caption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text, string caption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String, caption As String) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text, System::String ^ caption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">Implementacja interfejsu <see cref="T:System.Windows.Forms.IWin32Window" /> który będzie właścicielem modalnego okna dialogowego.</param>
        <param name="text">Tekst do wyświetlenia w oknie komunikatu.</param>
        <param name="caption">Tekst wyświetlany na pasku tytułu okna komunikatu.</param>
        <summary>Wyświetla komunikat przed określony obiekt i określony tekst i podpis.</summary>
        <returns>Jeden z <see cref="T:System.Windows.Forms.DialogResult" /> wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć `owner` parametr, aby określić obiekcie, który implementuje <xref:System.Windows.Forms.IWin32Window> interfejsu, który będzie służyć jako okno dialogowe okien najwyższego poziomu i właściciela. Okno komunikatu jest modalne okno dialogowe, co oznacza, że nie wprowadzono (kliknij klawiatury lub myszy) może wystąpić z wyjątkiem w formie modalnej do obiektów. Program należy ukryć lub zamknij formie modalnej (zazwyczaj w odpowiedzi na niektóre akcje użytkownika) przed wejściem innej formy może wystąpić.  
  
 Domyślnie są wyświetlane w oknie komunikatu **OK** przycisku.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">dla bezpiecznej subwindows wywołać tę metodę. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do wyświetlenia w oknie komunikatu.</param>
        <param name="caption">Tekst wyświetlany na pasku tytułu okna komunikatu.</param>
        <param name="buttons">Jeden z <see cref="T:System.Windows.Forms.MessageBoxButtons" /> wartości, które określa przyciski, które mają być wyświetlane w oknie komunikatu.</param>
        <param name="icon">Jeden z <see cref="T:System.Windows.Forms.MessageBoxIcon" /> wartości, które określa jaką ikonę do wyświetlenia w oknie komunikatu.</param>
        <summary>Wyświetla okno z określonego tekstu, podpisu, przycisków i ikona.</summary>
        <returns>Jeden z <see cref="T:System.Windows.Forms.DialogResult" /> wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Może mieć maksymalnie trzy przyciski w oknie komunikatu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje jeden z <xref:System.Windows.Forms.MessageBox.Show%2A> metody podczas obsługi <xref:System.Windows.Forms.ComboBox.DropDown?displayProperty=nameWithType> zdarzeń. Aby uruchomić przykład, wklej następujący kod w postaci i wywołanie `InitializeComboBox` metody z Konstruktor elementu form lub `Load` — metoda.  
  
 [!code-cpp[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> Określono parametr nie jest elementem członkowskim <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 —lub—  
  
 <paramref name="icon" /> Określono parametr nie jest elementem członkowskim <see cref="T:System.Windows.Forms.MessageBoxIcon" />.</exception>
        <exception cref="T:System.InvalidOperationException">Nastąpiła próba wyświetlenia <see cref="T:System.Windows.Forms.MessageBox" /> w ramach procesu, który nie jest uruchomiony w trybie interakcyjnym użytkownika. Jest to określone przez <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> właściwości.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">dla bezpiecznej subwindows wywołać tę metodę. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text, string caption, System.Windows.Forms.MessageBoxButtons buttons);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String, caption As String, buttons As MessageBoxButtons) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
      </Parameters>
      <Docs>
        <param name="owner">Implementacja interfejsu <see cref="T:System.Windows.Forms.IWin32Window" /> który będzie właścicielem modalnego okna dialogowego.</param>
        <param name="text">Tekst do wyświetlenia w oknie komunikatu.</param>
        <param name="caption">Tekst wyświetlany na pasku tytułu okna komunikatu.</param>
        <param name="buttons">Jeden z <see cref="T:System.Windows.Forms.MessageBoxButtons" /> wartości, które określa przyciski, które mają być wyświetlane w oknie komunikatu.</param>
        <summary>Wyświetla komunikat przed określony obiekt i z określonego tekstu, caption i przycisków.</summary>
        <returns>Jeden z <see cref="T:System.Windows.Forms.DialogResult" /> wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć `owner` parametr, aby określić obiekcie, który implementuje <xref:System.Windows.Forms.IWin32Window> interfejsu, który będzie służyć jako okno dialogowe okien najwyższego poziomu i właściciela. Okno komunikatu jest modalne okno dialogowe, co oznacza, że nie wprowadzono (kliknij klawiatury lub myszy) może wystąpić z wyjątkiem w formie modalnej do obiektów. Program należy ukryć lub zamknij formie modalnej (zazwyczaj w odpowiedzi na niektóre akcje użytkownika) przed wejściem innej formy może wystąpić.  
  
 Może mieć maksymalnie trzy przyciski w oknie komunikatu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób wyświetlania <xref:System.Windows.Forms.MessageBox> przy użyciu opcji obsługiwane przez to przeciążenie metody <xref:System.Windows.Forms.MessageBox.Show%2A>. Po zweryfikowaniu, że zmienna typu ciąg, `ServerName`, jest pusta, zawiera przykład <xref:System.Windows.Forms.MessageBox>, oferty użytkownika opcję, aby anulować operację. Jeśli <xref:System.Windows.Forms.MessageBox.Show%2A> daje w wyniku wartości zwracanej przez metodę <xref:System.Windows.Forms.DialogResult.Yes>, formularz, który będzie wyświetlany <xref:System.Windows.Forms.MessageBox> jest zamknięty.  
  
 [!code-cpp[MessageBox.Show Variations#5](~/samples/snippets/cpp/VS_Snippets_Winforms/MessageBox.Show Variations/CPP/form1.cpp#5)]
 [!code-csharp[MessageBox.Show Variations#5](~/samples/snippets/csharp/VS_Snippets_Winforms/MessageBox.Show Variations/CS/form1.cs#5)]
 [!code-vb[MessageBox.Show Variations#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MessageBox.Show Variations/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> nie jest członkiem <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <exception cref="T:System.InvalidOperationException">Nastąpiła próba wyświetlenia <see cref="T:System.Windows.Forms.MessageBox" /> w ramach procesu, który nie jest uruchomiony w trybie interakcyjnym użytkownika. Jest to określone przez <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> właściwości.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">dla bezpiecznej subwindows wywołać tę metodę. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do wyświetlenia w oknie komunikatu.</param>
        <param name="caption">Tekst wyświetlany na pasku tytułu okna komunikatu.</param>
        <param name="buttons">Jeden z <see cref="T:System.Windows.Forms.MessageBoxButtons" /> wartości, które określa przyciski, które mają być wyświetlane w oknie komunikatu.</param>
        <param name="icon">Jeden z <see cref="T:System.Windows.Forms.MessageBoxIcon" /> wartości, które określa jaką ikonę do wyświetlenia w oknie komunikatu.</param>
        <param name="defaultButton">Jeden z <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> wartości, które określa przycisk domyślny w oknie komunikatu.</param>
        <summary>Wyświetla okno z określonego tekstu, caption, przyciski, ikony i przycisk domyślny.</summary>
        <returns>Jeden z <see cref="T:System.Windows.Forms.DialogResult" /> wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Może mieć maksymalnie trzy przyciski w oknie komunikatu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób wyświetlania <xref:System.Windows.Forms.MessageBox> przy użyciu opcji obsługiwane przez to przeciążenie metody <xref:System.Windows.Forms.MessageBox.Show%2A>. Po zweryfikowaniu, że zmienna typu ciąg, `ServerName`, jest pusta, zawiera przykład <xref:System.Windows.Forms.MessageBox> ikoną pole pytanie oferty użytkownika opcję, aby anulować operację. Jeśli <xref:System.Windows.Forms.MessageBox.Show%2A> daje w wyniku wartości zwracanej przez metodę <xref:System.Windows.Forms.DialogResult.Yes>, formularz, który będzie wyświetlany <xref:System.Windows.Forms.MessageBox> jest zamknięty.  
  
 [!code-cpp[MessageBox.Show Variations#3](~/samples/snippets/cpp/VS_Snippets_Winforms/MessageBox.Show Variations/CPP/form1.cpp#3)]
 [!code-csharp[MessageBox.Show Variations#3](~/samples/snippets/csharp/VS_Snippets_Winforms/MessageBox.Show Variations/CS/form1.cs#3)]
 [!code-vb[MessageBox.Show Variations#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MessageBox.Show Variations/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> nie jest członkiem <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 —lub—  
  
 <paramref name="icon" /> nie jest członkiem <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 —lub—  
  
 <paramref name="defaultButton" /> nie jest członkiem <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Nastąpiła próba wyświetlenia <see cref="T:System.Windows.Forms.MessageBox" /> w ramach procesu, który nie jest uruchomiony w trybie interakcyjnym użytkownika. Jest to określone przez <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> właściwości.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">dla bezpiecznej subwindows wywołać tę metodę. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
      </Parameters>
      <Docs>
        <param name="owner">Implementacja interfejsu <see cref="T:System.Windows.Forms.IWin32Window" /> który będzie właścicielem modalnego okna dialogowego.</param>
        <param name="text">Tekst do wyświetlenia w oknie komunikatu.</param>
        <param name="caption">Tekst wyświetlany na pasku tytułu okna komunikatu.</param>
        <param name="buttons">Jeden z <see cref="T:System.Windows.Forms.MessageBoxButtons" /> wartości, które określa przyciski, które mają być wyświetlane w oknie komunikatu.</param>
        <param name="icon">Jeden z <see cref="T:System.Windows.Forms.MessageBoxIcon" /> wartości, które określa jaką ikonę do wyświetlenia w oknie komunikatu.</param>
        <summary>Wyświetla komunikat przed określony obiekt i z określonego tekstu, podpisu, przycisków i ikona.</summary>
        <returns>Jeden z <see cref="T:System.Windows.Forms.DialogResult" /> wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć `owner` parametr, aby określić obiekcie, który implementuje <xref:System.Windows.Forms.IWin32Window> interfejsu, który będzie służyć jako okno dialogowe okien najwyższego poziomu i właściciela. Okno komunikatu jest modalne okno dialogowe, co oznacza, że nie wprowadzono (kliknij klawiatury lub myszy) może wystąpić z wyjątkiem w formie modalnej do obiektów. Program należy ukryć lub zamknij formie modalnej (zazwyczaj w odpowiedzi na niektóre akcje użytkownika) przed wejściem innej formy może wystąpić.  
  
 Może mieć maksymalnie trzy przyciski w oknie komunikatu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób wyświetlania <xref:System.Windows.Forms.MessageBox> przy użyciu opcji obsługiwane przez to przeciążenie metody <xref:System.Windows.Forms.MessageBox.Show%2A>. Po zweryfikowaniu, że zmienna typu ciąg, `ServerName`, jest pusta, zawiera przykład <xref:System.Windows.Forms.MessageBox>, oferty użytkownika opcję, aby anulować operację. Jeśli <xref:System.Windows.Forms.MessageBox.Show%2A> daje w wyniku wartości zwracanej przez metodę <xref:System.Windows.Forms.DialogResult.Yes>, formularz, który będzie wyświetlany <xref:System.Windows.Forms.MessageBox> jest zamknięty.  
  
 [!code-cpp[MessageBox.Show Variations#4](~/samples/snippets/cpp/VS_Snippets_Winforms/MessageBox.Show Variations/CPP/form1.cpp#4)]
 [!code-csharp[MessageBox.Show Variations#4](~/samples/snippets/csharp/VS_Snippets_Winforms/MessageBox.Show Variations/CS/form1.cs#4)]
 [!code-vb[MessageBox.Show Variations#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MessageBox.Show Variations/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> nie jest członkiem <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 —lub—  
  
 <paramref name="icon" /> nie jest członkiem <see cref="T:System.Windows.Forms.MessageBoxIcon" />.</exception>
        <exception cref="T:System.InvalidOperationException">Nastąpiła próba wyświetlenia <see cref="T:System.Windows.Forms.MessageBox" /> w ramach procesu, który nie jest uruchomiony w trybie interakcyjnym użytkownika. Jest to określone przez <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> właściwości.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">dla bezpiecznej subwindows wywołać tę metodę. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do wyświetlenia w oknie komunikatu.</param>
        <param name="caption">Tekst wyświetlany na pasku tytułu okna komunikatu.</param>
        <param name="buttons">Jeden z <see cref="T:System.Windows.Forms.MessageBoxButtons" /> wartości, które określa przyciski, które mają być wyświetlane w oknie komunikatu.</param>
        <param name="icon">Jeden z <see cref="T:System.Windows.Forms.MessageBoxIcon" /> wartości, które określa jaką ikonę do wyświetlenia w oknie komunikatu.</param>
        <param name="defaultButton">Jeden z <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> wartości, które określa przycisk domyślny w oknie komunikatu.</param>
        <param name="options">Jeden z <see cref="T:System.Windows.Forms.MessageBoxOptions" /> wartości, które określają, jakie opcje wyświetlania i skojarzenia będzie służyć do pola wiadomości. Może przekazywać w 0, jeśli chcesz użyć wartości domyślnych.</param>
        <summary>Wyświetla okno z określonego tekstu podpis, przyciski, ikona, przycisk domyślny i opcje.</summary>
        <returns>Jeden z <see cref="T:System.Windows.Forms.DialogResult" /> wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Może mieć maksymalnie trzy przyciski w oknie komunikatu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób wyświetlania <xref:System.Windows.Forms.MessageBox> przy użyciu opcji obsługiwane przez to przeciążenie metody <xref:System.Windows.Forms.MessageBox.Show%2A>. Po zweryfikowaniu, że zmienna typu ciąg, `ServerName`, jest pusta, zawiera przykład <xref:System.Windows.Forms.MessageBox> ikoną pole pytanie oferty użytkownika opcję, aby anulować operację. W przykładzie użyto <xref:System.Windows.Forms.MessageBoxOptions.RightAlign> członkiem <xref:System.Windows.Forms.MessageBoxOptions> wyliczeniu, aby Wyrównaj tekst do prawej krawędzi okna dialogowego. Jeśli <xref:System.Windows.Forms.MessageBox.Show%2A> daje w wyniku wartości zwracanej przez metodę <xref:System.Windows.Forms.DialogResult.Yes>, formularz, który będzie wyświetlany <xref:System.Windows.Forms.MessageBox> jest zamknięty.  
  
 [!code-cpp[MessageBox.Show Variations#2](~/samples/snippets/cpp/VS_Snippets_Winforms/MessageBox.Show Variations/CPP/form1.cpp#2)]
 [!code-csharp[MessageBox.Show Variations#2](~/samples/snippets/csharp/VS_Snippets_Winforms/MessageBox.Show Variations/CS/form1.cs#2)]
 [!code-vb[MessageBox.Show Variations#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MessageBox.Show Variations/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> nie jest członkiem <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 —lub—  
  
 <paramref name="icon" /> nie jest członkiem <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 —lub—  
  
 <paramref name="defaultButton" /> Nie jest elementem członkowskim <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Nastąpiła próba wyświetlenia <see cref="T:System.Windows.Forms.MessageBox" /> w ramach procesu, który nie jest uruchomiony w trybie interakcyjnym użytkownika. Jest to określone przez <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> właściwości.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> określony zarówno <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> i <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  
  
 —lub—  
  
 <paramref name="buttons" /> Określono nieprawidłową kombinację <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">dla bezpiecznej subwindows wywołać tę metodę. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
      </Parameters>
      <Docs>
        <param name="owner">Implementacja interfejsu <see cref="T:System.Windows.Forms.IWin32Window" /> który będzie właścicielem modalnego okna dialogowego.</param>
        <param name="text">Tekst do wyświetlenia w oknie komunikatu.</param>
        <param name="caption">Tekst wyświetlany na pasku tytułu okna komunikatu.</param>
        <param name="buttons">Jeden z <see cref="T:System.Windows.Forms.MessageBoxButtons" /> wartości, które określa przyciski, które mają być wyświetlane w oknie komunikatu.</param>
        <param name="icon">Jeden z <see cref="T:System.Windows.Forms.MessageBoxIcon" /> wartości, które określa jaką ikonę do wyświetlenia w oknie komunikatu.</param>
        <param name="defaultButton">Jeden z <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> wartości, które określa przycisk domyślny w oknie komunikatu.</param>
        <summary>Wyświetla komunikat przed określony obiekt oraz określony tekst, podpisu, przyciski, ikony i przycisk domyślny.</summary>
        <returns>Jeden z <see cref="T:System.Windows.Forms.DialogResult" /> wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć `owner` parametr, aby określić obiekcie, który implementuje <xref:System.Windows.Forms.IWin32Window> interfejsu, który będzie służyć jako okno dialogowe okien najwyższego poziomu i właściciela. Okno komunikatu jest modalne okno dialogowe, co oznacza, że nie wprowadzono (kliknij klawiatury lub myszy) może wystąpić z wyjątkiem w formie modalnej do obiektów. Program należy ukryć lub zamknij formie modalnej (zazwyczaj w odpowiedzi na niektóre akcje użytkownika) przed wejściem innej formy może wystąpić.  
  
 Może mieć maksymalnie trzy przyciski w oknie komunikatu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób wyświetlania <xref:System.Windows.Forms.MessageBox> przy użyciu opcji obsługiwane przez to przeciążenie metody <xref:System.Windows.Forms.MessageBox.Show%2A>. Po zweryfikowaniu, że zmienna typu ciąg, `ServerName`, jest pusta, zawiera przykład <xref:System.Windows.Forms.MessageBox>, oferty użytkownika opcję, aby anulować operację. Jeśli <xref:System.Windows.Forms.MessageBox.Show%2A> daje w wyniku wartości zwracanej przez metodę <xref:System.Windows.Forms.DialogResult.Yes>, formularz, który będzie wyświetlany <xref:System.Windows.Forms.MessageBox> jest zamknięty.  
  
 [!code-cpp[MessageBox.Show Variations#2](~/samples/snippets/cpp/VS_Snippets_Winforms/MessageBox.Show Variations/CPP/form1.cpp#2)]
 [!code-csharp[MessageBox.Show Variations#2](~/samples/snippets/csharp/VS_Snippets_Winforms/MessageBox.Show Variations/CS/form1.cs#2)]
 [!code-vb[MessageBox.Show Variations#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MessageBox.Show Variations/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> nie jest członkiem <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 —lub—  
  
 <paramref name="icon" /> nie jest członkiem <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 —lub—  
  
 <paramref name="defaultButton" /> nie jest członkiem <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Nastąpiła próba wyświetlenia <see cref="T:System.Windows.Forms.MessageBox" /> w ramach procesu, który nie jest uruchomiony w trybie interakcyjnym użytkownika. Jest to określone przez <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> właściwości.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">dla bezpiecznej subwindows wywołać tę metodę. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options, bool displayHelpButton);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options, bool displayHelpButton) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions, displayHelpButton As Boolean) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options, bool displayHelpButton);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
        <Parameter Name="displayHelpButton" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do wyświetlenia w oknie komunikatu.</param>
        <param name="caption">Tekst wyświetlany na pasku tytułu okna komunikatu.</param>
        <param name="buttons">Jeden z <see cref="T:System.Windows.Forms.MessageBoxButtons" /> wartości, które określa przyciski, które mają być wyświetlane w oknie komunikatu.</param>
        <param name="icon">Jeden z <see cref="T:System.Windows.Forms.MessageBoxIcon" /> wartości, które określa jaką ikonę do wyświetlenia w oknie komunikatu.</param>
        <param name="defaultButton">Jeden z <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> wartości, które określa przycisk domyślny w oknie komunikatu.</param>
        <param name="options">Jeden z <see cref="T:System.Windows.Forms.MessageBoxOptions" /> wartości, które określają, jakie opcje wyświetlania i skojarzenia będzie służyć do pola wiadomości. Może przekazywać w 0, jeśli chcesz użyć wartości domyślnych.</param>
        <param name="displayHelpButton">
          <see langword="true" /> Aby wyświetlić przycisk Pomoc, aby; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</param>
        <summary>Wyświetla okno z określonego tekstu, podpis, przyciski, ikona, przycisk domyślny, opcje i przycisk Pomoc.</summary>
        <returns>Jeden z <see cref="T:System.Windows.Forms.DialogResult" /> wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Okno komunikatu jest modalne okno dialogowe, co oznacza, że nie wprowadzono (kliknij klawiatury lub myszy) może wystąpić z wyjątkiem w formie modalnej do obiektów. Program należy ukryć lub zamknij formie modalnej (zazwyczaj w odpowiedzi na niektóre akcje użytkownika) przed wejściem innej formy może wystąpić.  
  
 Gdy użytkownik kliknie przycisk Pomoc, formularz, który jest właścicielem okna komunikatu (lub aktywnego formularza) odbiera <xref:System.Windows.Forms.Control.HelpRequested> zdarzeń. Obsługa <xref:System.Windows.Forms.Control.HelpRequested> zdarzeń, aby wykonać akcje niestandardowe pomocy.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak wyświetlić okno komunikatu za pomocą przycisku Pomoc i obsługiwać <xref:System.Windows.Forms.Control.HelpRequested?displayProperty=nameWithType> zdarzeń i Pokaż okno Pomoc niestandardowa, w odpowiedzi na zdarzenia.  
  
 [!code-cpp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.MessageBox with Help#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.MessageBox with Help#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.MessageBox with Help#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> nie jest członkiem <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 —lub—  
  
 <paramref name="icon" /> nie jest członkiem <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 —lub—  
  
 <paramref name="defaultButton" /> Nie jest elementem członkowskim <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Nastąpiła próba wyświetlenia <see cref="T:System.Windows.Forms.MessageBox" /> w ramach procesu, który nie jest uruchomiony w trybie interakcyjnym użytkownika. Jest to określone przez <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> właściwości.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> określony zarówno <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> i <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  
  
 —lub—  
  
 <paramref name="buttons" /> Określono nieprawidłową kombinację <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">dla bezpiecznej subwindows wywołać tę metodę. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options, string helpFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options, string helpFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions, helpFilePath As String) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options, System::String ^ helpFilePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
        <Parameter Name="helpFilePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do wyświetlenia w oknie komunikatu.</param>
        <param name="caption">Tekst wyświetlany na pasku tytułu okna komunikatu.</param>
        <param name="buttons">Jeden z <see cref="T:System.Windows.Forms.MessageBoxButtons" /> wartości, które określa przyciski, które mają być wyświetlane w oknie komunikatu.</param>
        <param name="icon">Jeden z <see cref="T:System.Windows.Forms.MessageBoxIcon" /> wartości, które określa jaką ikonę do wyświetlenia w oknie komunikatu.</param>
        <param name="defaultButton">Jeden z <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> wartości, które określa przycisk domyślny w oknie komunikatu.</param>
        <param name="options">Jeden z <see cref="T:System.Windows.Forms.MessageBoxOptions" /> wartości, które określają, jakie opcje wyświetlania i skojarzenia będzie służyć do pola wiadomości. Może przekazywać w 0, jeśli chcesz użyć wartości domyślnych.</param>
        <param name="helpFilePath">Ścieżka i nazwa pliku pomocy wyświetlany, gdy użytkownik kliknie przycisk Pomoc.</param>
        <summary>Wyświetla okno z określonego tekstu, podpisu, przyciski, ikona, przycisk domyślny, opcje i przycisk pomocy, przy użyciu określonego pliku pomocy.</summary>
        <returns>Jeden z <see cref="T:System.Windows.Forms.DialogResult" /> wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Okno komunikatu jest modalne okno dialogowe, co oznacza, że nie wprowadzono (kliknij klawiatury lub myszy) może wystąpić z wyjątkiem w formie modalnej do obiektów. Program należy ukryć lub zamknij formie modalnej (zazwyczaj w odpowiedzi na niektóre akcje użytkownika) przed wejściem innej formy może wystąpić.  
  
 Gdy użytkownik kliknie przycisk Pomoc, plik Pomocy określony w `helpFilePath` parametru jest otwarty. Formularz, który jest właścicielem okna komunikatu (lub aktywnego formularza) również odbiera <xref:System.Windows.Forms.Control.HelpRequested> zdarzeń.  
  
 `helpFilePath` Parametr może mieć postać C:\path\sample.chm lub /folder/file.htm.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób wyświetlania okno komunikatu za pomocą przycisku Pomoc. Gdy użytkownik kliknie przycisk Pomoc, `Mspaint.chm` plik pomocy jest otwarty. Przykład wymaga, aby `Mspaint.chm` plik pomocy jest instalowany.  
  
 [!code-cpp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.MessageBox with Help#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#3)]
[!code-csharp[System.Windows.Forms.MessageBox with Help#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#3)]
[!code-vb[System.Windows.Forms.MessageBox with Help#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> nie jest członkiem <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 —lub—  
  
 <paramref name="icon" /> nie jest członkiem <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 —lub—  
  
 <paramref name="defaultButton" /> Nie jest elementem członkowskim <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Nastąpiła próba wyświetlenia <see cref="T:System.Windows.Forms.MessageBox" /> w ramach procesu, który nie jest uruchomiony w trybie interakcyjnym użytkownika. Jest to określone przez <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> właściwości.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> określony zarówno <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> i <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  
  
 —lub—  
  
 <paramref name="buttons" /> Określono nieprawidłową kombinację <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">dla bezpiecznej subwindows wywołać tę metodę. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">Aby uzyskać dostęp do pliku Pomocy HTML za pomocą żądania HTTP. Wyliczenie skojarzone: <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Aby uzyskać dostęp do pliku Pomocy HTML, która nie jest obsługiwana przez serwer HTTP. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
      </Parameters>
      <Docs>
        <param name="owner">Implementacja interfejsu <see cref="T:System.Windows.Forms.IWin32Window" /> który będzie właścicielem modalnego okna dialogowego.</param>
        <param name="text">Tekst do wyświetlenia w oknie komunikatu.</param>
        <param name="caption">Tekst wyświetlany na pasku tytułu okna komunikatu.</param>
        <param name="buttons">Jeden z <see cref="T:System.Windows.Forms.MessageBoxButtons" /> wartości, które określa przyciski, które mają być wyświetlane w oknie komunikatu.</param>
        <param name="icon">Jeden z <see cref="T:System.Windows.Forms.MessageBoxIcon" /> wartości, które określa jaką ikonę do wyświetlenia w oknie komunikatu.</param>
        <param name="defaultButton">Jeden z <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> wartości określa przycisk domyślny w oknie komunikatu.</param>
        <param name="options">Jeden z <see cref="T:System.Windows.Forms.MessageBoxOptions" /> wartości, które określają, jakie opcje wyświetlania i skojarzenia będzie służyć do pola wiadomości. Może przekazywać w 0, jeśli chcesz użyć wartości domyślnych.</param>
        <summary>Wyświetla komunikat przed określony obiekt oraz określony tekst podpisu, przyciski, ikona, przycisk domyślny i opcje.</summary>
        <returns>Jeden z <see cref="T:System.Windows.Forms.DialogResult" /> wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć `owner` parametr, aby określić obiekcie, który implementuje <xref:System.Windows.Forms.IWin32Window> interfejsu, który będzie służyć jako okno dialogowe okien najwyższego poziomu i właściciela. Okno komunikatu jest modalne okno dialogowe, co oznacza, że nie wprowadzono (kliknij klawiatury lub myszy) może wystąpić z wyjątkiem w formie modalnej do obiektów. Program należy ukryć lub zamknij formie modalnej (zazwyczaj w odpowiedzi na niektóre akcje użytkownika) przed wejściem innej formy może wystąpić.  
  
 Może mieć maksymalnie trzy przyciski w oknie komunikatu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób wyświetlania <xref:System.Windows.Forms.MessageBox> przy użyciu opcji obsługiwane przez to przeciążenie metody <xref:System.Windows.Forms.MessageBox.Show%2A>. Po zweryfikowaniu, że zmienna typu ciąg, `ServerName`, jest pusta, zawiera przykład <xref:System.Windows.Forms.MessageBox>, oferty użytkownika opcję, aby anulować operację. Jeśli <xref:System.Windows.Forms.MessageBox.Show%2A> daje w wyniku wartości zwracanej przez metodę <xref:System.Windows.Forms.DialogResult.Yes>, formularz, który będzie wyświetlany <xref:System.Windows.Forms.MessageBox> jest zamknięty.  
  
 [!code-cpp[MessageBox.Show Variations#2](~/samples/snippets/cpp/VS_Snippets_Winforms/MessageBox.Show Variations/CPP/form1.cpp#2)]
 [!code-csharp[MessageBox.Show Variations#2](~/samples/snippets/csharp/VS_Snippets_Winforms/MessageBox.Show Variations/CS/form1.cs#2)]
 [!code-vb[MessageBox.Show Variations#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MessageBox.Show Variations/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> nie jest członkiem <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 —lub—  
  
 <paramref name="icon" /> nie jest członkiem <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 —lub—  
  
 <paramref name="defaultButton" /> nie jest członkiem <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Nastąpiła próba wyświetlenia <see cref="T:System.Windows.Forms.MessageBox" /> w ramach procesu, który nie jest uruchomiony w trybie interakcyjnym użytkownika. Jest to określone przez <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> właściwości.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> określony zarówno <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> i <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  
  
 —lub—  
  
 <paramref name="options" /> określony <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> lub <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" /> i określono wartość w <paramref name="owner" /> parametru. Te dwie opcje należy używać tylko w przypadku, gdy wywołanie wersja tej metody, która nie przyjmuje <paramref name="owner" /> parametru.  
  
 —lub—  
  
 <paramref name="buttons" /> Określono nieprawidłową kombinację <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">dla bezpiecznej subwindows wywołać tę metodę. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options, string helpFilePath, string keyword);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options, string helpFilePath, string keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions, helpFilePath As String, keyword As String) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options, System::String ^ helpFilePath, System::String ^ keyword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
        <Parameter Name="helpFilePath" Type="System.String" />
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do wyświetlenia w oknie komunikatu.</param>
        <param name="caption">Tekst wyświetlany na pasku tytułu okna komunikatu.</param>
        <param name="buttons">Jeden z <see cref="T:System.Windows.Forms.MessageBoxButtons" /> wartości, które określa przyciski, które mają być wyświetlane w oknie komunikatu.</param>
        <param name="icon">Jeden z <see cref="T:System.Windows.Forms.MessageBoxIcon" /> wartości, które określa jaką ikonę do wyświetlenia w oknie komunikatu.</param>
        <param name="defaultButton">Jeden z <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> wartości, które określa przycisk domyślny w oknie komunikatu.</param>
        <param name="options">Jeden z <see cref="T:System.Windows.Forms.MessageBoxOptions" /> wartości, które określają, jakie opcje wyświetlania i skojarzenia będzie służyć do pola wiadomości. Może przekazywać w 0, jeśli chcesz użyć wartości domyślnych.</param>
        <param name="helpFilePath">Ścieżka i nazwa pliku pomocy wyświetlany, gdy użytkownik kliknie przycisk Pomoc.</param>
        <param name="keyword">Słowo kluczowe pomocy wyświetlany, gdy użytkownik kliknie przycisk Pomoc.</param>
        <summary>Wyświetla okno z określonego tekstu, podpisu, przyciski, ikona, przycisk domyślny, opcje i przycisk pomocy, przy użyciu określonego pliku pomocy i słowo kluczowe pomocy.</summary>
        <returns>Jeden z <see cref="T:System.Windows.Forms.DialogResult" /> wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Okno komunikatu jest modalne okno dialogowe, co oznacza, że nie wprowadzono (kliknij klawiatury lub myszy) może wystąpić z wyjątkiem w formie modalnej do obiektów. Program należy ukryć lub zamknij formie modalnej (zazwyczaj w odpowiedzi na niektóre akcje użytkownika) przed wejściem innej formy może wystąpić.  
  
 Gdy użytkownik kliknie przycisk Pomoc, plik Pomocy określony w `helpFilePath` parametru jest otwarty i temat — słowo kluczowe pomocy identyfikowane przez `keyword` parametru jest wyświetlany. Formularz, który jest właścicielem okna komunikatu (lub aktywnego formularza) również odbiera <xref:System.Windows.Forms.Control.HelpRequested> zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób wyświetlania okno komunikatu za pomocą przycisku Pomoc. Gdy użytkownik kliknie przycisk Pomoc, `Mspaint.chm` plik pomocy jest otwarty i temat identyfikowane przez `mspaint.chm::/paint_brush.htm` — słowo kluczowe jest wyświetlany. Przykład wymaga, aby `Mspaint.chm` plik pomocy jest instalowany.  
  
 [!code-cpp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.MessageBox with Help#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#9)]
[!code-csharp[System.Windows.Forms.MessageBox with Help#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#9)]
[!code-vb[System.Windows.Forms.MessageBox with Help#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> nie jest członkiem <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 —lub—  
  
 <paramref name="icon" /> nie jest członkiem <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 —lub—  
  
 <paramref name="defaultButton" /> Nie jest elementem członkowskim <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Nastąpiła próba wyświetlenia <see cref="T:System.Windows.Forms.MessageBox" /> w ramach procesu, który nie jest uruchomiony w trybie interakcyjnym użytkownika. Jest to określone przez <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> właściwości.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> określony zarówno <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> i <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  
  
 —lub—  
  
 <paramref name="buttons" /> Określono nieprawidłową kombinację <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">dla bezpiecznej subwindows wywołać tę metodę. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">Aby uzyskać dostęp do pliku Pomocy HTML za pomocą żądania HTTP. Wyliczenie skojarzone: <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Aby uzyskać dostęp do pliku Pomocy HTML, która nie jest obsługiwana przez serwer HTTP. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options, string helpFilePath, System.Windows.Forms.HelpNavigator navigator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options, string helpFilePath, valuetype System.Windows.Forms.HelpNavigator navigator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.Windows.Forms.HelpNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions, helpFilePath As String, navigator As HelpNavigator) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options, System::String ^ helpFilePath, System::Windows::Forms::HelpNavigator navigator);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
        <Parameter Name="helpFilePath" Type="System.String" />
        <Parameter Name="navigator" Type="System.Windows.Forms.HelpNavigator" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do wyświetlenia w oknie komunikatu.</param>
        <param name="caption">Tekst wyświetlany na pasku tytułu okna komunikatu.</param>
        <param name="buttons">Jeden z <see cref="T:System.Windows.Forms.MessageBoxButtons" /> wartości, które określa przyciski, które mają być wyświetlane w oknie komunikatu.</param>
        <param name="icon">Jeden z <see cref="T:System.Windows.Forms.MessageBoxIcon" /> wartości, które określa jaką ikonę do wyświetlenia w oknie komunikatu.</param>
        <param name="defaultButton">Jeden z <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> wartości, które określa przycisk domyślny w oknie komunikatu.</param>
        <param name="options">Jeden z <see cref="T:System.Windows.Forms.MessageBoxOptions" /> wartości, które określają, jakie opcje wyświetlania i skojarzenia będzie służyć do pola wiadomości. Może przekazywać w 0, jeśli chcesz użyć wartości domyślnych.</param>
        <param name="helpFilePath">Ścieżka i nazwa pliku pomocy wyświetlany, gdy użytkownik kliknie przycisk Pomoc.</param>
        <param name="navigator">Jeden z <see cref="T:System.Windows.Forms.HelpNavigator" /> wartości.</param>
        <summary>Wyświetla okno z określonego tekstu, podpisu, przyciski, ikona, przycisk domyślny, opcje i przycisk pomocy, przy użyciu określonego pliku pomocy i <see langword="HelpNavigator" />.</summary>
        <returns>Jeden z <see cref="T:System.Windows.Forms.DialogResult" /> wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Okno komunikatu jest modalne okno dialogowe, co oznacza, że nie wprowadzono (kliknij klawiatury lub myszy) może wystąpić z wyjątkiem w formie modalnej do obiektów. Program należy ukryć lub zamknij formie modalnej (zazwyczaj w odpowiedzi na niektóre akcje użytkownika) przed wejściem innej formy może wystąpić.  
  
 Gdy użytkownik kliknie przycisk Pomoc, plik Pomocy określony w `helpFilePath` parametru jest otwarty i zawartości pomocy jest identyfikowane przez `navigator` parametru jest wyświetlany. Formularz, który jest właścicielem okna komunikatu (lub aktywnego formularza) również odbiera <xref:System.Windows.Forms.Control.HelpRequested> zdarzeń.  
  
 Skompilowany pomocy pliki Podaj spisu treści, indeksu wyszukiwania i słowa kluczowego łącza na stronach. Można użyć poniższych wartości `navigator`: <xref:System.Windows.Forms.HelpNavigator.TableOfContents>, <xref:System.Windows.Forms.HelpNavigator.Find>, <xref:System.Windows.Forms.HelpNavigator.Index>, lub <xref:System.Windows.Forms.HelpNavigator.Topic>.  
  
 `helpFilePath` Parametr może mieć postać C:\path\sample.chm lub /folder/file.htm.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób wyświetlania okno komunikatu za pomocą przycisku Pomoc. Gdy użytkownik kliknie przycisk Pomoc, `Mspaint.chm` plik pomocy jest otwarty i nie jest wyświetlany na karcie indeksu Pomocy. Przykład wymaga, aby `Mspaint.chm` plik pomocy jest instalowany.  
  
 [!code-cpp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.MessageBox with Help#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#5)]
[!code-csharp[System.Windows.Forms.MessageBox with Help#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#5)]
[!code-vb[System.Windows.Forms.MessageBox with Help#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> nie jest członkiem <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 —lub—  
  
 <paramref name="icon" /> nie jest członkiem <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 —lub—  
  
 <paramref name="defaultButton" /> Nie jest elementem członkowskim <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Nastąpiła próba wyświetlenia <see cref="T:System.Windows.Forms.MessageBox" /> w ramach procesu, który nie jest uruchomiony w trybie interakcyjnym użytkownika. Jest to określone przez <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> właściwości.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> określony zarówno <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> i <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  
  
 —lub—  
  
 <paramref name="buttons" /> Określono nieprawidłową kombinację <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">dla bezpiecznej subwindows wywołać tę metodę. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">Aby uzyskać dostęp do pliku Pomocy HTML za pomocą żądania HTTP. Wyliczenie skojarzone: <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Aby uzyskać dostęp do pliku Pomocy HTML, która nie jest obsługiwana przez serwer HTTP. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options, string helpFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options, string helpFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions, helpFilePath As String) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options, System::String ^ helpFilePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
        <Parameter Name="helpFilePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">Implementacja interfejsu <see cref="T:System.Windows.Forms.IWin32Window" /> który będzie właścicielem modalnego okna dialogowego.</param>
        <param name="text">Tekst do wyświetlenia w oknie komunikatu.</param>
        <param name="caption">Tekst wyświetlany na pasku tytułu okna komunikatu.</param>
        <param name="buttons">Jeden z <see cref="T:System.Windows.Forms.MessageBoxButtons" /> wartości, które określa przyciski, które mają być wyświetlane w oknie komunikatu.</param>
        <param name="icon">Jeden z <see cref="T:System.Windows.Forms.MessageBoxIcon" /> wartości, które określa jaką ikonę do wyświetlenia w oknie komunikatu.</param>
        <param name="defaultButton">Jeden z <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> wartości, które określa przycisk domyślny w oknie komunikatu.</param>
        <param name="options">Jeden z <see cref="T:System.Windows.Forms.MessageBoxOptions" /> wartości, które określają, jakie opcje wyświetlania i skojarzenia będzie służyć do pola wiadomości. Może przekazywać w 0, jeśli chcesz użyć wartości domyślnych.</param>
        <param name="helpFilePath">Ścieżka i nazwa pliku pomocy wyświetlany, gdy użytkownik kliknie przycisk Pomoc.</param>
        <summary>Wyświetla okno z określonego tekstu, podpisu, przyciski, ikona, przycisk domyślny, opcje i przycisk pomocy, przy użyciu określonego pliku pomocy.</summary>
        <returns>Jeden z <see cref="T:System.Windows.Forms.DialogResult" /> wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Okno komunikatu jest modalne okno dialogowe, co oznacza, że nie wprowadzono (kliknij klawiatury lub myszy) może wystąpić z wyjątkiem w formie modalnej do obiektów. Program należy ukryć lub zamknij formie modalnej (zazwyczaj w odpowiedzi na niektóre akcje użytkownika) przed wejściem innej formy może wystąpić. Można użyć `owner` parametr, aby określić obiekcie, który implementuje <xref:System.Windows.Forms.IWin32Window> interfejsu, który będzie służyć jako okno dialogowe okien najwyższego poziomu i właściciela.  
  
 Gdy użytkownik kliknie przycisk Pomoc, plik Pomocy określony w `helpFilePath` parametru jest otwarty. Formularz, który jest właścicielem okna komunikatu (lub aktywnego formularza) również odbiera <xref:System.Windows.Forms.Control.HelpRequested> zdarzeń.  
  
 `helpFilePath` Parametr może mieć postać C:\path\sample.chm lub /folder/file.htm.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób wyświetlania komunikat, który jest elementem nadrzędnym w formularzu głównym. W oknie komunikatu przedstawia przycisk Pomoc. Gdy użytkownik kliknie przycisk Pomoc, `Mspaint.chm` plik pomocy jest otwarty. Przykład wymaga, aby `Mspaint.chm` plik pomocy jest instalowany.  
  
 [!code-cpp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.MessageBox with Help#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#4)]
[!code-csharp[System.Windows.Forms.MessageBox with Help#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#4)]
[!code-vb[System.Windows.Forms.MessageBox with Help#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> nie jest członkiem <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 —lub—  
  
 <paramref name="icon" /> nie jest członkiem <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 —lub—  
  
 <paramref name="defaultButton" /> Nie jest elementem członkowskim <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Nastąpiła próba wyświetlenia <see cref="T:System.Windows.Forms.MessageBox" /> w ramach procesu, który nie jest uruchomiony w trybie interakcyjnym użytkownika. Jest to określone przez <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> właściwości.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> określony zarówno <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> i <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  
  
 —lub—  
  
 <paramref name="buttons" /> Określono nieprawidłową kombinację <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">dla bezpiecznej subwindows wywołać tę metodę. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">Aby uzyskać dostęp do pliku Pomocy HTML za pomocą żądania HTTP. Wyliczenie skojarzone: <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Aby uzyskać dostęp do pliku Pomocy HTML, która nie jest obsługiwana przez serwer HTTP. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options, string helpFilePath, System.Windows.Forms.HelpNavigator navigator, object param);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options, string helpFilePath, valuetype System.Windows.Forms.HelpNavigator navigator, object param) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.Windows.Forms.HelpNavigator,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions, helpFilePath As String, navigator As HelpNavigator, param As Object) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options, System::String ^ helpFilePath, System::Windows::Forms::HelpNavigator navigator, System::Object ^ param);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
        <Parameter Name="helpFilePath" Type="System.String" />
        <Parameter Name="navigator" Type="System.Windows.Forms.HelpNavigator" />
        <Parameter Name="param" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do wyświetlenia w oknie komunikatu.</param>
        <param name="caption">Tekst wyświetlany na pasku tytułu okna komunikatu.</param>
        <param name="buttons">Jeden z <see cref="T:System.Windows.Forms.MessageBoxButtons" /> wartości, które określa przyciski, które mają być wyświetlane w oknie komunikatu.</param>
        <param name="icon">Jeden z <see cref="T:System.Windows.Forms.MessageBoxIcon" /> wartości, które określa jaką ikonę do wyświetlenia w oknie komunikatu.</param>
        <param name="defaultButton">Jeden z <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> wartości, które określa przycisk domyślny w oknie komunikatu.</param>
        <param name="options">Jeden z <see cref="T:System.Windows.Forms.MessageBoxOptions" /> wartości, które określają, jakie opcje wyświetlania i skojarzenia będzie służyć do pola wiadomości. Może przekazywać w 0, jeśli chcesz użyć wartości domyślnych.</param>
        <param name="helpFilePath">Ścieżka i nazwa pliku pomocy wyświetlany, gdy użytkownik kliknie przycisk Pomoc.</param>
        <param name="navigator">Jeden z <see cref="T:System.Windows.Forms.HelpNavigator" /> wartości.</param>
        <param name="param">Identyfikator numeryczny tematu pomocy wyświetlany, gdy użytkownik kliknie przycisk Pomoc.</param>
        <summary>Wyświetla okno z określonego tekstu, podpis, przyciski, ikona, przycisk domyślny, opcje i przycisk pomocy, przy użyciu określonego pliku Pomocy <see langword="HelpNavigator" />i tematu Pomocy.</summary>
        <returns>Jeden z <see cref="T:System.Windows.Forms.DialogResult" /> wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Okno komunikatu jest modalne okno dialogowe, co oznacza, że nie wprowadzono (kliknij klawiatury lub myszy) może wystąpić z wyjątkiem w formie modalnej do obiektów. Program należy ukryć lub zamknij formie modalnej (zazwyczaj w odpowiedzi na niektóre akcje użytkownika) przed wejściem innej formy może wystąpić.  
  
 Gdy użytkownik kliknie przycisk Pomoc, plik Pomocy określony w `helpFilePath` parametru jest otwarty i zawartości pomocy jest identyfikowane przez `navigator` parametru jest wyświetlany. Formularz, który jest właścicielem okna komunikatu (lub aktywnego formularza) również odbiera <xref:System.Windows.Forms.Control.HelpRequested> zdarzeń.  
  
 Skompilowany pomocy pliki Podaj spisu treści, indeksu wyszukiwania i słowa kluczowego łącza na stronach. Można użyć poniższych wartości `navigator`: <xref:System.Windows.Forms.HelpNavigator.TableOfContents>, <xref:System.Windows.Forms.HelpNavigator.Find>, <xref:System.Windows.Forms.HelpNavigator.Index>, lub <xref:System.Windows.Forms.HelpNavigator.Topic>.  
  
 Można użyć `param` zapewnienie dalszych udoskonalanie <xref:System.Windows.Forms.HelpNavigator.Topic> polecenia. Jeśli określona wartość w `navigator` parametr jest <xref:System.Windows.Forms.HelpNavigator.TableOfContents>, <xref:System.Windows.Forms.HelpNavigator.Index>, lub <xref:System.Windows.Forms.HelpNavigator.Find>, ta wartość powinna być `null`. Jeśli `navigator` odwołań do parametru <xref:System.Windows.Forms.HelpNavigator.Topic>, ta wartość powinna odwoływać obiekt, który zawiera wartość liczbową tematu do wyświetlenia.  
  
 `helpFilePath` Parametr może mieć postać C:\path\sample.chm lub /folder/file.htm.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób wyświetlania okno komunikatu za pomocą przycisku Pomoc. Gdy użytkownik kliknie przycisk Pomoc, `Mspaint.chm` pomocy, plik jest otwarty i zakładka indeksu Pomocy i temacie zidentyfikowane przez `ovals` — słowo kluczowe są wyświetlane. Przykład wymaga, aby `Mspaint.chm` plik pomocy jest instalowany.  
  
 [!code-cpp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.MessageBox with Help#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#7)]
[!code-csharp[System.Windows.Forms.MessageBox with Help#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#7)]
[!code-vb[System.Windows.Forms.MessageBox with Help#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> nie jest członkiem <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 —lub—  
  
 <paramref name="icon" /> nie jest członkiem <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 —lub—  
  
 <paramref name="defaultButton" /> Nie jest elementem członkowskim <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Nastąpiła próba wyświetlenia <see cref="T:System.Windows.Forms.MessageBox" /> w ramach procesu, który nie jest uruchomiony w trybie interakcyjnym użytkownika. Jest to określone przez <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> właściwości.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> określony zarówno <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> i <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  
  
 —lub—  
  
 <paramref name="buttons" /> Określono nieprawidłową kombinację <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">dla bezpiecznej subwindows wywołać tę metodę. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">Aby uzyskać dostęp do pliku Pomocy HTML za pomocą żądania HTTP. Wyliczenie skojarzone: <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Aby uzyskać dostęp do pliku Pomocy HTML, która nie jest obsługiwana przez serwer HTTP. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options, string helpFilePath, string keyword);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options, string helpFilePath, string keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions, helpFilePath As String, keyword As String) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options, System::String ^ helpFilePath, System::String ^ keyword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
        <Parameter Name="helpFilePath" Type="System.String" />
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">Implementacja interfejsu <see cref="T:System.Windows.Forms.IWin32Window" /> który będzie właścicielem modalnego okna dialogowego.</param>
        <param name="text">Tekst do wyświetlenia w oknie komunikatu.</param>
        <param name="caption">Tekst wyświetlany na pasku tytułu okna komunikatu.</param>
        <param name="buttons">Jeden z <see cref="T:System.Windows.Forms.MessageBoxButtons" /> wartości, które określa przyciski, które mają być wyświetlane w oknie komunikatu.</param>
        <param name="icon">Jeden z <see cref="T:System.Windows.Forms.MessageBoxIcon" /> wartości, które określa jaką ikonę do wyświetlenia w oknie komunikatu.</param>
        <param name="defaultButton">Jeden z <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> wartości, które określa przycisk domyślny w oknie komunikatu.</param>
        <param name="options">Jeden z <see cref="T:System.Windows.Forms.MessageBoxOptions" /> wartości, które określają, jakie opcje wyświetlania i skojarzenia będzie służyć do pola wiadomości. Może przekazywać w 0, jeśli chcesz użyć wartości domyślnych.</param>
        <param name="helpFilePath">Ścieżka i nazwa pliku pomocy wyświetlany, gdy użytkownik kliknie przycisk Pomoc.</param>
        <param name="keyword">Słowo kluczowe pomocy wyświetlany, gdy użytkownik kliknie przycisk Pomoc.</param>
        <summary>Wyświetla okno z określonego tekstu, podpisu, przyciski, ikona, przycisk domyślny, opcje i przycisk pomocy, przy użyciu określonego pliku pomocy i słowo kluczowe pomocy.</summary>
        <returns>Jeden z <see cref="T:System.Windows.Forms.DialogResult" /> wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Okno komunikatu jest modalne okno dialogowe, co oznacza, że nie wprowadzono (kliknij klawiatury lub myszy) może wystąpić z wyjątkiem w formie modalnej do obiektów. Program należy ukryć lub zamknij formie modalnej (zazwyczaj w odpowiedzi na niektóre akcje użytkownika) przed wejściem innej formy może wystąpić. Można użyć `owner` parametr, aby określić obiekcie, który implementuje <xref:System.Windows.Forms.IWin32Window> interfejsu, który będzie służyć jako okno dialogowe właściciela najwyższego poziomu.  
  
 Gdy użytkownik kliknie przycisk Pomoc, plik Pomocy określony w `helpFilePath` parametru jest otwarty i temat — słowo kluczowe pomocy identyfikowane przez `keyword` parametru jest wyświetlany. Formularz, który jest właścicielem okna komunikatu (lub aktywnego formularza) również odbiera <xref:System.Windows.Forms.Control.HelpRequested> zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób wyświetlania okno komunikatu o oknie głównym elementem nadrzędnym. W oknie komunikatu przedstawia przycisk Pomoc. Gdy użytkownik kliknie przycisk Pomoc, `Mspaint.chm` plik pomocy jest otwarty i temat identyfikowane przez `mspaint.chm::/paint_brush.htm` — słowo kluczowe jest wyświetlany. Przykład wymaga, aby `Mspaint.chm` plik pomocy jest instalowany.  
  
 [!code-cpp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.MessageBox with Help#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#10)]
[!code-csharp[System.Windows.Forms.MessageBox with Help#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#10)]
[!code-vb[System.Windows.Forms.MessageBox with Help#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> nie jest członkiem <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 —lub—  
  
 <paramref name="icon" /> nie jest członkiem <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 —lub—  
  
 <paramref name="defaultButton" /> Nie jest elementem członkowskim <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Nastąpiła próba wyświetlenia <see cref="T:System.Windows.Forms.MessageBox" /> w ramach procesu, który nie jest uruchomiony w trybie interakcyjnym użytkownika. Jest to określone przez <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> właściwości.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> określony zarówno <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> i <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  
  
 —lub—  
  
 <paramref name="buttons" /> Określono nieprawidłową kombinację <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">dla bezpiecznej subwindows wywołać tę metodę. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">Aby uzyskać dostęp do pliku Pomocy HTML za pomocą żądania HTTP. Wyliczenie skojarzone: <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Aby uzyskać dostęp do pliku Pomocy HTML, która nie jest obsługiwana przez serwer HTTP. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options, string helpFilePath, System.Windows.Forms.HelpNavigator navigator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options, string helpFilePath, valuetype System.Windows.Forms.HelpNavigator navigator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.Windows.Forms.HelpNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions, helpFilePath As String, navigator As HelpNavigator) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options, System::String ^ helpFilePath, System::Windows::Forms::HelpNavigator navigator);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
        <Parameter Name="helpFilePath" Type="System.String" />
        <Parameter Name="navigator" Type="System.Windows.Forms.HelpNavigator" />
      </Parameters>
      <Docs>
        <param name="owner">Implementacja interfejsu <see cref="T:System.Windows.Forms.IWin32Window" /> który będzie właścicielem modalnego okna dialogowego.</param>
        <param name="text">Tekst do wyświetlenia w oknie komunikatu.</param>
        <param name="caption">Tekst wyświetlany na pasku tytułu okna komunikatu.</param>
        <param name="buttons">Jeden z <see cref="T:System.Windows.Forms.MessageBoxButtons" /> wartości, które określa przyciski, które mają być wyświetlane w oknie komunikatu.</param>
        <param name="icon">Jeden z <see cref="T:System.Windows.Forms.MessageBoxIcon" /> wartości, które określa jaką ikonę do wyświetlenia w oknie komunikatu.</param>
        <param name="defaultButton">Jeden z <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> wartości, które określa przycisk domyślny w oknie komunikatu.</param>
        <param name="options">Jeden z <see cref="T:System.Windows.Forms.MessageBoxOptions" /> wartości, które określają, jakie opcje wyświetlania i skojarzenia będzie służyć do pola wiadomości. Może przekazywać w 0, jeśli chcesz użyć wartości domyślnych.</param>
        <param name="helpFilePath">Ścieżka i nazwa pliku pomocy wyświetlany, gdy użytkownik kliknie przycisk Pomoc.</param>
        <param name="navigator">Jeden z <see cref="T:System.Windows.Forms.HelpNavigator" /> wartości.</param>
        <summary>Wyświetla okno z określonego tekstu, podpisu, przyciski, ikona, przycisk domyślny, opcje i przycisk pomocy, przy użyciu określonego pliku pomocy i <see langword="HelpNavigator" />.</summary>
        <returns>Jeden z <see cref="T:System.Windows.Forms.DialogResult" /> wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Okno komunikatu jest modalne okno dialogowe, co oznacza, że nie wprowadzono (kliknij klawiatury lub myszy) może wystąpić z wyjątkiem w formie modalnej do obiektów. Program należy ukryć lub zamknij formie modalnej (zazwyczaj w odpowiedzi na niektóre akcje użytkownika) przed wejściem innej formy może wystąpić. Można użyć `owner` parametr, aby określić obiekcie, który implementuje <xref:System.Windows.Forms.IWin32Window> interfejsu, który będzie służyć jako okno dialogowe okien najwyższego poziomu i właściciela.  
  
 Gdy użytkownik kliknie przycisk Pomoc, plik Pomocy określony w `helpFilePath` parametru jest otwarty i zawartości pomocy jest identyfikowane przez `navigator` parametru jest wyświetlany. Formularz, który jest właścicielem okna komunikatu (lub aktywnego formularza) również odbiera <xref:System.Windows.Forms.Control.HelpRequested> zdarzeń.  
  
 Skompilowany pomocy pliki Podaj spisu treści, indeksu wyszukiwania i słowa kluczowego łącza na stronach. Można użyć poniższych wartości `navigator`: <xref:System.Windows.Forms.HelpNavigator.TableOfContents>, <xref:System.Windows.Forms.HelpNavigator.Find>, <xref:System.Windows.Forms.HelpNavigator.Index>, lub <xref:System.Windows.Forms.HelpNavigator.Topic>.  
  
 `helpFilePath` Parametr może mieć postać C:\path\sample.chm lub /folder/file.htm.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób wyświetlania okno komunikatu o oknie głównym elementem nadrzędnym. W oknie komunikatu przedstawia przycisk Pomoc. Gdy użytkownik kliknie przycisk Pomoc, `Mspaint.chm` plik pomocy jest otwarty i nie jest wyświetlany na karcie indeksu Pomocy. Przykład wymaga, aby `Mspaint.chm` plik pomocy jest instalowany.  
  
 [!code-cpp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.MessageBox with Help#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#6)]
[!code-csharp[System.Windows.Forms.MessageBox with Help#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#6)]
[!code-vb[System.Windows.Forms.MessageBox with Help#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> nie jest członkiem <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 —lub—  
  
 <paramref name="icon" /> nie jest członkiem <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 —lub—  
  
 <paramref name="defaultButton" /> Nie jest elementem członkowskim <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Nastąpiła próba wyświetlenia <see cref="T:System.Windows.Forms.MessageBox" /> w ramach procesu, który nie jest uruchomiony w trybie interakcyjnym użytkownika. Jest to określone przez <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> właściwości.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> określony zarówno <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> i <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  
  
 —lub—  
  
 <paramref name="buttons" /> Określono nieprawidłową kombinację <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">dla bezpiecznej subwindows wywołać tę metodę. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">Aby uzyskać dostęp do pliku Pomocy HTML za pomocą żądania HTTP. Wyliczenie skojarzone: <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Aby uzyskać dostęp do pliku Pomocy HTML, która nie jest obsługiwana przez serwer HTTP. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options, string helpFilePath, System.Windows.Forms.HelpNavigator navigator, object param);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options, string helpFilePath, valuetype System.Windows.Forms.HelpNavigator navigator, object param) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.Windows.Forms.HelpNavigator,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions, helpFilePath As String, navigator As HelpNavigator, param As Object) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options, System::String ^ helpFilePath, System::Windows::Forms::HelpNavigator navigator, System::Object ^ param);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
        <Parameter Name="helpFilePath" Type="System.String" />
        <Parameter Name="navigator" Type="System.Windows.Forms.HelpNavigator" />
        <Parameter Name="param" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="owner">Implementacja interfejsu <see cref="T:System.Windows.Forms.IWin32Window" /> który będzie właścicielem modalnego okna dialogowego.</param>
        <param name="text">Tekst do wyświetlenia w oknie komunikatu.</param>
        <param name="caption">Tekst wyświetlany na pasku tytułu okna komunikatu.</param>
        <param name="buttons">Jeden z <see cref="T:System.Windows.Forms.MessageBoxButtons" /> wartości, które określa przyciski, które mają być wyświetlane w oknie komunikatu.</param>
        <param name="icon">Jeden z <see cref="T:System.Windows.Forms.MessageBoxIcon" /> wartości, które określa jaką ikonę do wyświetlenia w oknie komunikatu.</param>
        <param name="defaultButton">Jeden z <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> wartości, które określa przycisk domyślny w oknie komunikatu.</param>
        <param name="options">Jeden z <see cref="T:System.Windows.Forms.MessageBoxOptions" /> wartości, które określają, jakie opcje wyświetlania i skojarzenia będzie służyć do pola wiadomości. Może przekazywać w 0, jeśli chcesz użyć wartości domyślnych.</param>
        <param name="helpFilePath">Ścieżka i nazwa pliku pomocy wyświetlany, gdy użytkownik kliknie przycisk Pomoc.</param>
        <param name="navigator">Jeden z <see cref="T:System.Windows.Forms.HelpNavigator" /> wartości.</param>
        <param name="param">Identyfikator numeryczny tematu pomocy wyświetlany, gdy użytkownik kliknie przycisk Pomoc.</param>
        <summary>Wyświetla okno z określonego tekstu, podpis, przyciski, ikona, przycisk domyślny, opcje i przycisk pomocy, przy użyciu określonego pliku Pomocy <see langword="HelpNavigator" />i tematu Pomocy.</summary>
        <returns>Jeden z <see cref="T:System.Windows.Forms.DialogResult" /> wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Okno komunikatu jest modalne okno dialogowe, co oznacza, że nie wprowadzono (kliknij klawiatury lub myszy) może wystąpić z wyjątkiem w formie modalnej do obiektów. Program należy ukryć lub zamknij formie modalnej (zazwyczaj w odpowiedzi na niektóre akcje użytkownika) przed wejściem innej formy może wystąpić. Można użyć `owner` parametr, aby określić obiekcie, który implementuje <xref:System.Windows.Forms.IWin32Window> interfejsu, który będzie służyć jako okno dialogowe okien najwyższego poziomu i właściciela.  
  
 Gdy użytkownik kliknie przycisk Pomoc, plik Pomocy określony w `helpFilePath` parametru jest otwarty i zawartości pomocy jest identyfikowane przez `navigator` parametru jest wyświetlany. Formularz, który jest właścicielem okna komunikatu (lub aktywnego formularza) również odbiera <xref:System.Windows.Forms.Control.HelpRequested> zdarzeń.  
  
 Skompilowany pomocy pliki Podaj spisu treści, indeksu wyszukiwania i słowa kluczowego łącza na stronach. Można użyć poniższych wartości `navigator`: <xref:System.Windows.Forms.HelpNavigator.TableOfContents>, <xref:System.Windows.Forms.HelpNavigator.Find>, <xref:System.Windows.Forms.HelpNavigator.Index>, lub <xref:System.Windows.Forms.HelpNavigator.Topic>.  
  
 Można użyć `param` zapewnienie dalszych udoskonalanie <xref:System.Windows.Forms.HelpNavigator.Topic> polecenia. Jeśli określona wartość w `navigator` parametr jest <xref:System.Windows.Forms.HelpNavigator.TableOfContents>, <xref:System.Windows.Forms.HelpNavigator.Index>, lub <xref:System.Windows.Forms.HelpNavigator.Find>, ta wartość powinna być `null`. Jeśli `navigator` odwołań do parametru <xref:System.Windows.Forms.HelpNavigator.Topic>, ta wartość powinna odwoływać obiekt, który zawiera wartość liczbową tematu do wyświetlenia.  
  
 `helpFilePath` Parametr może mieć postać C:\path\sample.chm lub /folder/file.htm.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób wyświetlania okno komunikatu o oknie głównym elementem nadrzędnym. W oknie komunikatu przedstawia przycisk Pomoc. Gdy użytkownik kliknie przycisk Pomoc, `Mspaint.chm` pomocy, plik jest otwarty i zakładka indeksu Pomocy i temacie zidentyfikowane przez `ovals` — słowo kluczowe są wyświetlane. Przykład wymaga, aby `Mspaint.chm` plik pomocy jest instalowany.  
  
 [!code-cpp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.MessageBox with Help#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#8)]
[!code-csharp[System.Windows.Forms.MessageBox with Help#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#8)]
[!code-vb[System.Windows.Forms.MessageBox with Help#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> nie jest członkiem <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 —lub—  
  
 <paramref name="icon" /> nie jest członkiem <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 —lub—  
  
 <paramref name="defaultButton" /> Nie jest elementem członkowskim <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Nastąpiła próba wyświetlenia <see cref="T:System.Windows.Forms.MessageBox" /> w ramach procesu, który nie jest uruchomiony w trybie interakcyjnym użytkownika. Jest to określone przez <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> właściwości.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> określony zarówno <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> i <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  
  
 —lub—  
  
 <paramref name="buttons" /> Określono nieprawidłową kombinację <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">dla bezpiecznej subwindows wywołać tę metodę. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">Aby uzyskać dostęp do pliku Pomocy HTML za pomocą żądania HTTP. Wyliczenie skojarzone: <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Aby uzyskać dostęp do pliku Pomocy HTML, która nie jest obsługiwana przez serwer HTTP. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
  </Members>
</Type>