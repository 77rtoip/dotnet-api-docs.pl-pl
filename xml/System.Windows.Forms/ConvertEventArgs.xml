<Type Name="ConvertEventArgs" FullName="System.Windows.Forms.ConvertEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="76dc1d62b4fc510b970922804353c9904fc807e8" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39876697" /></Metadata><TypeSignature Language="C#" Value="public class ConvertEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConvertEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ConvertEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ConvertEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConvertEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ConvertEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia dane dla <see cref="E:System.Windows.Forms.Binding.Format" /> i <see cref="E:System.Windows.Forms.Binding.Parse" /> zdarzenia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ConvertEventArgs> Jest używany do formatowania i anulowania formatowania wartości wyświetlane przez kontrolkę Windows Forms, który jest powiązany z danymi za pomocą <xref:System.Windows.Forms.Binding> obiektu. <xref:System.Windows.Forms.Binding.Format> Wystąpi zdarzenie zawsze wtedy, gdy właściwość formantu jest powiązany z wartością i <xref:System.Windows.Forms.Binding.Parse> wystąpi zdarzenie zawsze wtedy, gdy zmieni się wiązana wartość.  
  
 <xref:System.Windows.Forms.Binding.Format> i <xref:System.Windows.Forms.Binding.Parse> zdarzenia pozwalają tworzyć niestandardowe formaty wyświetlania danych. Na przykład, jeśli dane w tabeli jest typu <xref:System.Decimal>, można określić, że danych powinien być wyświetlany w formacie waluty lokalnej — przez ustawienie <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> właściwość <xref:System.Windows.Forms.ConvertEventArgs> sformatowaną wartość <xref:System.Windows.Forms.Binding.Format> zdarzeń. W związku z tym należy anulowania formatowania wartości wyświetlanej w <xref:System.Windows.Forms.Binding.Parse> zdarzeń.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.Binding>, dodaje <xref:System.Windows.Forms.ConvertEventHandler> delegata do obu <xref:System.Windows.Forms.Binding.Parse> i <xref:System.Windows.Forms.Binding.Format> zdarzenia i używa <xref:System.Windows.Forms.Control.DataBindings%2A> właściwości do dodania <xref:System.Windows.Forms.Binding> do <xref:System.Windows.Forms.BindingsCollection> z <xref:System.Windows.Forms.TextBox> formant. `DecimalToCurrencyString` Delegata zdarzenia, która jest dodawana do <xref:System.Windows.Forms.Binding.Format> używa zdarzenia <xref:System.Decimal.ToString%2A> metodę, aby sformatować wartość argumentu powiązanej ( <xref:System.Decimal> typu) jako walutę. `CurrencyStringToDecimal` Delegata zdarzenia, która jest dodawana do <xref:System.Windows.Forms.Binding.Parse> zdarzeń, konwertuje wartości wyświetlanej przez formant do <xref:System.Decimal> typu.  
  
 [!code-cpp[Classic ConvertEventArgs Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ConvertEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic ConvertEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ConvertEventArgs Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Binding" />
    <altmember cref="T:System.Windows.Forms.BindingManagerBase" />
    <altmember cref="T:System.Windows.Forms.BindingsCollection" />
    <altmember cref="P:System.Windows.Forms.Control.DataBindings" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConvertEventArgs (object value, Type desiredType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object value, class System.Type desiredType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ConvertEventArgs.#ctor(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Object, desiredType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConvertEventArgs(System::Object ^ value, Type ^ desiredType);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ConvertEventArgs : obj * Type -&gt; System.Windows.Forms.ConvertEventArgs" Usage="new System.Windows.Forms.ConvertEventArgs (value, desiredType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="desiredType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Object" /> Zawierający wartość bieżącą właściwością.</param>
        <param name="desiredType"><see cref="T:System.Type" /> Wartości.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ConvertEventArgs" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesiredType">
      <MemberSignature Language="C#" Value="public Type DesiredType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DesiredType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ConvertEventArgs.DesiredType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesiredType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DesiredType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DesiredType : Type" Usage="System.Windows.Forms.ConvertEventArgs.DesiredType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ danych żądaną wartość.</summary>
        <value><see cref="T:System.Type" /> Żądanej wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A> Właściwość pozwala sprawdzić typ właściwości, która jest konwertowana wartość.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A> właściwości w celu określenia, czy kontynuować konwersja jednego typu na inny. `DecimalToCurrencyString` Metody testów czy <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A> jest ciągiem. W przeciwnym razie kod zamyka metody. Podobnie `CurrencyStringToDecimal` metody testów czy <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A> jest <xref:System.Decimal>, a kończy działanie, jeśli nie jest `true`.  
  
 [!code-cpp[Classic ConvertEventArgs.DesiredType Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ConvertEventArgs.DesiredType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ConvertEventArgs.DesiredType Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ConvertEventArgs.DesiredType Example/CS/source.cs#1)]
 [!code-vb[Classic ConvertEventArgs.DesiredType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ConvertEventArgs.DesiredType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ConvertEventArgs.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Windows.Forms.ConvertEventArgs.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość <see cref="T:System.Windows.Forms.ConvertEventArgs" />.</summary>
        <value>Wartość <see cref="T:System.Windows.Forms.ConvertEventArgs" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zawierana przez <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> właściwości zależy od zdarzeń, w którym <xref:System.Windows.Forms.ConvertEventArgs> jest zwracana. <xref:System.Windows.Forms.ConvertEventArgs> Mogą być zwracane w jednym <xref:System.Windows.Forms.Binding.Format> zdarzeń lub <xref:System.Windows.Forms.Binding.Parse> zdarzeń.  
  
 Gdy <xref:System.Windows.Forms.ConvertEventArgs> jest zwracany w <xref:System.Windows.Forms.Binding.Format> zdarzenia <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> właściwość zawiera wartość właściwości niesformatowany źródła danych. W ramach <xref:System.Windows.Forms.Binding.Format> zdarzenia, można odczytać wartości właściwości, sformatować wartość argumentu i zresetować <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> właściwości na nową wartość (sformatowanych), w tym samym Ustawianie wartości wyświetlanej w kontrolce powiązanych z danymi.  
  
 Gdy <xref:System.Windows.Forms.ConvertEventArgs> jest zwracany w <xref:System.Windows.Forms.Binding.Parse> zdarzenie, właściwość zawiera wartość niestandardowo sformatowane kontrolki powiązane z danymi. W ramach <xref:System.Windows.Forms.Binding.Parse> zdarzeń, należy odczytać wartości sformatowane, go przeanalizować i przekonwertować z powrotem ten sam typ danych jako źródła danych. Następnie można zresetować <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> właściwość niesformatowany wartości, a przez to wartość źródła danych. Aby określić typ źródła danych, sprawdź <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A> wartości właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.Binding>, dodaje <xref:System.Windows.Forms.ConvertEventHandler> delegata do obu <xref:System.Windows.Forms.Binding.Parse> i <xref:System.Windows.Forms.Binding.Format> zdarzenia i używa <xref:System.Windows.Forms.Control.DataBindings%2A> właściwości do dodania <xref:System.Windows.Forms.Binding> do <xref:System.Windows.Forms.BindingsCollection> z <xref:System.Windows.Forms.TextBox> formant. `DecimalToCurrencyString` Delegata zdarzenia, która jest dodawana do <xref:System.Windows.Forms.Binding.Format> używa zdarzenia <xref:System.Decimal.ToString%2A> metodę, aby sformatować wartość argumentu powiązanej ( <xref:System.Decimal> typu) jako walutę. `CurrencyStringToDecimal` Delegata zdarzenia, która jest dodawana do <xref:System.Windows.Forms.Binding.Parse> zdarzeń, konwertuje wartości wyświetlanej przez formant do <xref:System.Decimal> typu.  
  
 [!code-cpp[Classic ConvertEventArgs Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ConvertEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic ConvertEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ConvertEventArgs Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Binding" />
      </Docs>
    </Member>
  </Members>
</Type>