<Type Name="ConvertEventArgs" FullName="System.Windows.Forms.ConvertEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ebbdc1760362acaebba0dfc3c0c46e3c9762d397" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69194422" /></Metadata><TypeSignature Language="C#" Value="public class ConvertEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConvertEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ConvertEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ConvertEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConvertEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ConvertEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Dostarcza dane dla <see cref="E:System.Windows.Forms.Binding.Format" /> zdarzeń i <see cref="E:System.Windows.Forms.Binding.Parse" /> .</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Służy do formatowania i wyłączania wartości wyświetlanych przez formant Windows Forms, który jest powiązany z danymi <xref:System.Windows.Forms.Binding> za pomocą obiektu. <xref:System.Windows.Forms.ConvertEventArgs> Zdarzenie występuje zawsze, gdy właściwość kontrolki jest powiązana z wartością <xref:System.Windows.Forms.Binding.Parse> , a zdarzenie występuje zawsze, gdy wartość związana ulegnie zmianie. <xref:System.Windows.Forms.Binding.Format>  
  
 Zdarzenia <xref:System.Windows.Forms.Binding.Format> i<xref:System.Windows.Forms.Binding.Parse> umożliwiają tworzenie niestandardowych formatów do wyświetlania danych. Na przykład, jeśli dane <xref:System.Decimal>w tabeli są typu, można określić, że dane mają być wyświetlane w formacie waluty lokalnej — przez <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> ustawienie właściwości <xref:System.Windows.Forms.ConvertEventArgs> na wartość sformatowaną w <xref:System.Windows.Forms.Binding.Format> zdarzeniu. W związku z tym należy odfiltrować wartość wyświetlaną <xref:System.Windows.Forms.Binding.Parse> w zdarzeniu.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 <xref:System.Windows.Forms.Binding>Poniższy przykład kodu tworzy, <xref:System.Windows.Forms.ConvertEventHandler> dodaje delegata do obu <xref:System.Windows.Forms.Binding> <xref:System.Windows.Forms.Binding.Parse> <xref:System.Windows.Forms.Binding.Format> zdarzeńi<xref:System.Windows.Forms.TextBox> używa <xref:System.Windows.Forms.Control.DataBindings%2A> właściwości, aby dodać do <xref:System.Windows.Forms.BindingsCollection> kontroli. Delegat zdarzenia, który jest dodawany <xref:System.Windows.Forms.Binding.Format> do zdarzenia, używa <xref:System.Decimal.ToString%2A> <xref:System.Decimal> metody do formatowania wartości powiązanej (typu) jako waluty. `DecimalToCurrencyString` Delegat zdarzenia, który jest dodawany <xref:System.Windows.Forms.Binding.Parse> do zdarzenia, konwertuje wartość wyświetlaną przez formant z powrotem do <xref:System.Decimal> typu. `CurrencyStringToDecimal`  
  
 [!code-cpp[Classic ConvertEventArgs Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ConvertEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic ConvertEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ConvertEventArgs Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Binding" />
    <altmember cref="T:System.Windows.Forms.BindingManagerBase" />
    <altmember cref="T:System.Windows.Forms.BindingsCollection" />
    <altmember cref="P:System.Windows.Forms.Control.DataBindings" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConvertEventArgs (object value, Type desiredType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object value, class System.Type desiredType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ConvertEventArgs.#ctor(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Object, desiredType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConvertEventArgs(System::Object ^ value, Type ^ desiredType);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ConvertEventArgs : obj * Type -&gt; System.Windows.Forms.ConvertEventArgs" Usage="new System.Windows.Forms.ConvertEventArgs (value, desiredType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="desiredType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">Element <see cref="T:System.Object" /> , który zawiera wartość bieżącej właściwości.</param>
        <param name="desiredType"><see cref="T:System.Type" /> Wartość.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ConvertEventArgs" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesiredType">
      <MemberSignature Language="C#" Value="public Type DesiredType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DesiredType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ConvertEventArgs.DesiredType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesiredType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DesiredType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DesiredType : Type" Usage="System.Windows.Forms.ConvertEventArgs.DesiredType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ danych żądanej wartości.</summary>
        <value><see cref="T:System.Type" /> Wymagana wartość.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A> Właściwość umożliwia sprawdzenie typu właściwości, do której zostanie przekonwertowana wartość.  
  
   
  
## Examples  
 Poniższy przykład kodu używa właściwości, <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A> aby określić, czy można wykonać konwersję jednego typu na inny. Metoda sprawdza, <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A> czy jest to ciąg. `DecimalToCurrencyString` Jeśli nie, kod opuszcza metodę. Podobnie Metoda sprawdza <xref:System.Decimal>, <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A> czy jest a, i kończy, jeśli nie `true`jest. `CurrencyStringToDecimal`  
  
 [!code-cpp[Classic ConvertEventArgs.DesiredType Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ConvertEventArgs.DesiredType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ConvertEventArgs.DesiredType Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ConvertEventArgs.DesiredType Example/CS/source.cs#1)]
 [!code-vb[Classic ConvertEventArgs.DesiredType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ConvertEventArgs.DesiredType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ConvertEventArgs.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Windows.Forms.ConvertEventArgs.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość <see cref="T:System.Windows.Forms.ConvertEventArgs" />.</summary>
        <value>Wartość <see cref="T:System.Windows.Forms.ConvertEventArgs" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zawartej <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> w właściwości zależy od zdarzenia, w <xref:System.Windows.Forms.ConvertEventArgs> którym jest zwracany. Może być zwracany w <xref:System.Windows.Forms.Binding.Format> zdarzeniu lub <xref:System.Windows.Forms.Binding.Parse> zdarzeniu. <xref:System.Windows.Forms.ConvertEventArgs>  
  
 Gdy jest zwracany <xref:System.Windows.Forms.Binding.Format> w zdarzeniu, <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> Właściwość zawiera niesformatowaną wartość właściwości źródła danych. <xref:System.Windows.Forms.ConvertEventArgs> W ramach <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> zdarzenia można odczytać wartość właściwości, sformatować wartość i zresetować właściwość do nowej (sformatowanej) wartości, ustawiając wartość wyświetlaną w formancie powiązanym z danymi. <xref:System.Windows.Forms.Binding.Format>  
  
 Gdy jest zwracany w zdarzeniu, właściwość zawiera niestandardową wartość kontrolki powiązanej z danymi. <xref:System.Windows.Forms.Binding.Parse> <xref:System.Windows.Forms.ConvertEventArgs> W ramach <xref:System.Windows.Forms.Binding.Parse> zdarzenia należy przeczytać sformatowaną wartość, przeanalizować ją i przekonwertować ją z powrotem na ten sam typ danych co źródło danych. Następnie można zresetować <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> właściwość do wartości niesformatowanej, a tym samym ustawić wartość źródła danych. Aby określić typ źródła danych, sprawdź <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A> wartość właściwości.  
  
   
  
## Examples  
 <xref:System.Windows.Forms.Binding>Poniższy przykład kodu tworzy, <xref:System.Windows.Forms.ConvertEventHandler> dodaje delegata do obu <xref:System.Windows.Forms.Binding> <xref:System.Windows.Forms.Binding.Parse> <xref:System.Windows.Forms.Binding.Format> zdarzeńi<xref:System.Windows.Forms.TextBox> używa <xref:System.Windows.Forms.Control.DataBindings%2A> właściwości, aby dodać do <xref:System.Windows.Forms.BindingsCollection> kontroli. Delegat zdarzenia, który jest dodawany <xref:System.Windows.Forms.Binding.Format> do zdarzenia, używa <xref:System.Decimal.ToString%2A> <xref:System.Decimal> metody do formatowania wartości powiązanej (typu) jako waluty. `DecimalToCurrencyString` Delegat zdarzenia, który jest dodawany <xref:System.Windows.Forms.Binding.Parse> do zdarzenia, konwertuje wartość wyświetlaną przez formant z powrotem do <xref:System.Decimal> typu. `CurrencyStringToDecimal`  
  
 [!code-cpp[Classic ConvertEventArgs Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ConvertEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic ConvertEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ConvertEventArgs Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Binding" />
      </Docs>
    </Member>
  </Members>
</Type>
