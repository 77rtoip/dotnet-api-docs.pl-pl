<Type Name="HtmlWindowCollection" FullName="System.Windows.Forms.HtmlWindowCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="330aeeb6e832b8938c38e7faee0791f73d0e23a5" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46632208" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HtmlWindowCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlWindowCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.HtmlWindowCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlWindowCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlWindowCollection : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type HtmlWindowCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Reprezentuje windows znajdujących się w innym <see cref="T:System.Windows.Forms.HtmlWindow" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dokument HTML może składać się z `FRAMESET` definiujący wielokrotności rozwiązany `FRAME` obiektów, z których każda zawiera własną stronę HTML. Alternatywnie, dokument może zawierać wiele `IFRAME` obiektów, które można umieścić dokumentów arbitralnie wewnątrz innych dokumentów. `FRAME` obiekty i `IFRAME` obiekty są reprezentowane na ich poziomie najbardziej na wierzchu przez <xref:System.Windows.Forms.HtmlWindowCollection>, który zawiera elementy typu <xref:System.Windows.Forms.HtmlWindow>.  
  
 <xref:System.Windows.Forms.HtmlWindowCollection> obsługuje <xref:System.Collections.IEnumerator> interfejsu, dzięki czemu mogą być używane w konstrukcji pętli. Definiuje również metodą elementu, który umożliwia dostęp do elementów kolekcji za pośrednictwem wywołania metody lub przy użyciu składni standardowych tablicy.  
  
 Jeśli tworzysz nowy systemu windows za pomocą <xref:System.Windows.Forms.HtmlWindow.Open%2A> lub <xref:System.Windows.Forms.HtmlWindow.OpenNew%2A> metody i hostowanych przez te okna dokumentów zawierają `FRAME` lub `IFRAME` elementów, które te elementy pojawią się w <xref:System.Windows.Forms.HtmlWindowCollection> strony nadrzędnej.  
  
 Aby uzyskać więcej informacji dotyczących ramek, zobacz dokumentację dla <xref:System.Windows.Forms.HtmlWindow.Frames%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu sprawdza wszystkie dokumenty w ramach strony zawierającej ramek i tworzy tabelę wszystkie łącza wychodzącego z każdą stronę dla przyszłych inspekcji.  
  
 [!code-csharp[System.Windows.Forms.HtmlWindow#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.HtmlWindow#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/VB/Form1.vb#2)]  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="http://msdn.microsoft.com/library/default.asp?url=/workshop/browser/mshtml/reference/ifaces/framescollection2/framescollection2.asp?frame=true">Interfejs IHTMLFramesCollection2</related>
  </Docs>
  <Members>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlWindowCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.HtmlWindowCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę elementów w kolekcji.</summary>
        <value>Liczba <see cref="T:System.Windows.Forms.HtmlWindow" /> obiektów w bieżącym <see cref="T:System.Windows.Forms.HtmlWindowCollection" />.</value>
        <remarks>To be added.</remarks>
        <related type="ExternalDocumentation" href="http://msdn.microsoft.com/library/default.asp?url=/workshop/browser/mshtml/reference/ifaces/framescollection2/get_length.asp?frame=true">Właściwość length</related>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindowCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="htmlWindowCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca moduł wyliczający, który można wykonać iterację przez wszystkie elementy w <see cref="T:System.Windows.Forms.HtmlWindowCollection" />.</summary>
        <returns>
          <see cref="T:System.Collections.IEnumerator" /> , Który umożliwia wyliczenie elementów tej kolekcji.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera element albo przez jego <see langword="name" /> właściwości lub jego pozycja w kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.HtmlWindowCollection.Item%2A> Umożliwia dostęp do elementów kolekcji za pomocą składni tablicy.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="http://msdn.microsoft.com/library/default.asp?url=/workshop/browser/mshtml/reference/ifaces/framescollection2/item.asp?frame=true">Metoda item</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlWindow this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlWindow Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlWindowCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As HtmlWindow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlWindow ^ default[int] { System::Windows::Forms::HtmlWindow ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.HtmlWindow" Usage="System.Windows.Forms.HtmlWindowCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlWindow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Pozycja <see cref="T:System.Windows.Forms.HtmlWindow" /> w tej kolekcji.</param>
        <summary>Pobiera okno ramowe poprzez dostarczenie ramki pozycji w kolekcji.</summary>
        <value>
          <see cref="T:System.Windows.Forms.HtmlWindow" /> Odpowiadającej żądanej ramki.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.HtmlWindowCollection> jest kolekcją liczony od zera. W przypadku *N* elementów w kolekcji prawidłowe argumenty do <xref:System.Windows.Forms.HtmlWindowCollection.Item%2A> są liczbami całkowitymi z zakresu od 0 do *N*-1.  
  
 Windows nie są wyświetlane w <xref:System.Windows.Forms.HtmlWindowCollection> w żadnym uprzednio określonym zamówienia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> jest większa niż liczba elementów w kolekcji.</exception>
        <related type="ExternalDocumentation" href="http://msdn.microsoft.com/library/default.asp?url=/workshop/browser/mshtml/reference/ifaces/framescollection2/item.asp?frame=true">Metoda item</related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlWindow this[string windowId] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlWindow Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlWindowCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(windowId As String) As HtmlWindow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlWindow ^ default[System::String ^] { System::Windows::Forms::HtmlWindow ^ get(System::String ^ windowId); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Windows.Forms.HtmlWindow" Usage="System.Windows.Forms.HtmlWindowCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlWindow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="windowId">Nazwa <see cref="T:System.Windows.Forms.HtmlWindow" /> do pobrania.</param>
        <summary>Pobiera okno ramowe przez podanie nazwy ramki.</summary>
        <value>
          <see cref="T:System.Windows.Forms.HtmlWindow" /> Elementu odpowiadającego podanej nazwie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.HtmlWindowCollection.Item%2A> Zwraca pojedynczy element którego <xref:System.Windows.Forms.HtmlElement.Name%2A> właściwość odpowiada `elementId`. Jeśli dokument zawiera wiele elementów o takiej samej nazwie <xref:System.Windows.Forms.HtmlWindowCollection.Item%2A> zwróci tylko pierwszy z nich w kolekcji. Jeśli chcesz pobrać wszystkie elementy z <xref:System.Windows.Forms.HtmlElement.Name%2A> właściwość `windowId`, użyj <xref:System.Windows.Forms.HtmlElementCollection.GetElementsByName%2A> metody zamiast tego.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="windowId" /> nie jest nazwą <see langword="Frame" /> obiektu w bieżącym dokumencie lub w jednym z jego elementów podrzędnych.</exception>
        <related type="ExternalDocumentation" href="http://msdn.microsoft.com/library/default.asp?url=/workshop/browser/mshtml/reference/ifaces/framescollection2/item.asp?frame=true">Metoda item</related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindowCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (dest As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ dest, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest">Jednowymiarowy <see cref="T:System.Array" /> jest miejscem docelowym elementów kopiowanych z kolekcji. <see cref="T:System.Array" /> Musi mieć Indeksowanie oparte na zerze.</param>
        <param name="index">Liczony od zera indeks w <see langword="Array" /> od rozpoczyna się kopiowanie które.</param>
        <summary>Kopiuje elementy kolekcji do <see cref="T:System.Array" />, rozpoczynając od określonego <see cref="T:System.Array" /> indeksu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlWindowCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy jest zsynchronizowany dostęp do kolekcji (wątkowo).</summary>
        <value>
          <see langword="false" /> we wszystkich przypadkach.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlWindowCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który może służyć do synchronizowania dostępu do kolekcji.</summary>
        <value>Obiekt, który może służyć do synchronizowania dostępu do kolekcji.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>