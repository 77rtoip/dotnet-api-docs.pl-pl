<Type Name="ListViewItem" FullName="System.Windows.Forms.ListViewItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f352095351e05bb495b176809a03baea5548075b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30706820" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListViewItem : ICloneable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ListViewItem extends System.Object implements class System.ICloneable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListViewItem" />
  <TypeSignature Language="VB.NET" Value="Public Class ListViewItem&#xA;Implements ICloneable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListViewItem : ICloneable, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ListViewItemConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje element w <see cref="T:System.Windows.Forms.ListView" /> formantu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView> Formant jest podobny do <xref:System.Windows.Forms.ListBox> w tym Wyświetla listę elementów. Główną różnicą jest to, że <xref:System.Windows.Forms.ListView> kontrola zapewnia szereg różnych sposobów elementy mogą być przeglądane przez użytkownika. <xref:System.Windows.Forms.ListViewItem> Klasa definiuje wygląd, zachowania i dane skojarzone z elementem, który jest wyświetlany w <xref:System.Windows.Forms.ListView> formantu. <xref:System.Windows.Forms.ListViewItem> obiekty mogą być wyświetlane w <xref:System.Windows.Forms.ListView> kontroli w jednej z czterech różnych widoków. Elementy mogą być wyświetlane jako duże lub małe ikony lub małe ikony w pionie listy. Elementy ma także podelementy zawierające informacje powiązane z elementem nadrzędnym. Styl czwarty widok, widok szczegółów, służy do wyświetlenia w siatce z nagłówków kolumn, które mogą służyć do identyfikowania informacje są wyświetlane w podelementów elementu i jego elementy podrzędne.  
  
 Większość właściwości <xref:System.Windows.Forms.ListViewItem> klasy udostępniają sposoby Zmień sposób wyświetlania elementu w <xref:System.Windows.Forms.ListView> formant jest skojarzony. <xref:System.Windows.Forms.ListViewItem.BackColor%2A>, <xref:System.Windows.Forms.ListViewItem.ForeColor%2A>, I <xref:System.Windows.Forms.ListViewItem.Font%2A> właściwości umożliwiają zmianę sposobu wyświetlania tekst elementu w <xref:System.Windows.Forms.ListView> formantu. <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> Właściwość umożliwia określenie obraz, aby załadować z <xref:System.Windows.Forms.ImageList> przypisany do <xref:System.Windows.Forms.ListView> kontroli (przez ustawienie <xref:System.Windows.Forms.ListView.LargeImageList%2A> lub <xref:System.Windows.Forms.ListView.SmallImageList%2A> właściwości <xref:System.Windows.Forms.ListView>). Elementy można są wyświetlane pola wyboru w celu uzyskania elementu opcji użytkownika w sposób podobny do <xref:System.Windows.Forms.CheckedListBox> formantu. Można użyć <xref:System.Windows.Forms.ListViewItem.Checked%2A> właściwości ustalić, czy element jest zaznaczony, lub wybierz lub wyczyść pole wyboru w czasie wykonywania. Elementy można wyświetlić dowolną liczbę subitems, kiedy <xref:System.Windows.Forms.ListView.View%2A> właściwości skojarzonego <xref:System.Windows.Forms.ListView> kontrola jest ustawiona na <xref:System.Windows.Forms.View.Details> i kolumny są zdefiniowane w <xref:System.Windows.Forms.ListView.ColumnHeaderCollection> z <xref:System.Windows.Forms.ListView> formantu. Można dodać elementy podrzędne elementu przez wywołanie metody <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> metody <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection> klasy. <xref:System.Windows.Forms.ListViewItem.SubItems%2A> Właściwości pozwala na uzyskanie dostępu do <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection> klasy i jej elementów członkowskich.  
  
 Niektóre właściwości i metod <xref:System.Windows.Forms.ListViewItem> klasy są specyficzne dla elementu wersje właściwości i metod w <xref:System.Windows.Forms.ListView> formantu. Na przykład <xref:System.Windows.Forms.ListViewItem.EnsureVisible%2A> metoda jest podobna do <xref:System.Windows.Forms.ListView> wersji metody, ale <xref:System.Windows.Forms.ListViewItem> wersji dotyczy tylko bieżącego elementu.  
  
 <xref:System.Windows.Forms.ListViewItem> Klasa udostępnia również metody, które nie są wersje <xref:System.Windows.Forms.ListView> metody. <xref:System.Windows.Forms.ListViewItem.BeginEdit%2A> — Metoda umieszcza tekstu elementu w trybie edycji, użytkownik może zmienić tekstu elementu (gdy <xref:System.Windows.Forms.ListView.LabelEdit%2A> właściwość <xref:System.Windows.Forms.ListView> kontrola jest ustawiona na `true`). <xref:System.Windows.Forms.ListViewItem.Clone%2A> Metoda umożliwia utworzenie kopii istniejącego <xref:System.Windows.Forms.ListViewItem> obiekty do ponownego użycia w innych <xref:System.Windows.Forms.ListView> kontrolki.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.ListView> formantu, z których trzy <xref:System.Windows.Forms.ListViewItem> obiekty określone i trzy <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiekty określone dla każdego elementu. W przykładzie jest tworzony także <xref:System.Windows.Forms.ColumnHeader> obiektów, aby wyświetlić elementy podrzędne w widoku details. Dwa <xref:System.Windows.Forms.ImageList> obiekty również są tworzone w przykładzie kodu, aby zapewnić obrazy dla <xref:System.Windows.Forms.ListViewItem> obiektów. Te <xref:System.Windows.Forms.ImageList> obiekty są dodawane do <xref:System.Windows.Forms.ListView.LargeImageList%2A> i <xref:System.Windows.Forms.ListView.SmallImageList%2A> właściwości. W przykładzie użyto następujących właściwości w tworzeniu <xref:System.Windows.Forms.ListView> sterowania:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Należy dodać kodu do <xref:System.Windows.Forms.Form> i wywołaj metodę utworzony w przykładzie z konstruktora lub innej metody w formularzu. Przykład wymaga, aby obrazy o nazwie `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, i `MyLargeImage2` znajdują się w katalogu głównym dysku C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListView" />
    <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ListViewItem" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ListViewItem" /> z domyślnymi wartościami.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.ListView> formantu, z których trzy <xref:System.Windows.Forms.ListViewItem> obiekty określone i trzy <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiekty określone dla każdego elementu. W przykładzie jest tworzony także <xref:System.Windows.Forms.ColumnHeader> obiektów, aby wyświetlić elementy podrzędne w widoku details. Dwa <xref:System.Windows.Forms.ImageList> obiekty również są tworzone w przykładzie kodu, aby zapewnić obrazy dla <xref:System.Windows.Forms.ListViewItem> obiektów. Te <xref:System.Windows.Forms.ImageList> obiekty są dodawane do <xref:System.Windows.Forms.ListView.LargeImageList%2A> i <xref:System.Windows.Forms.ListView.SmallImageList%2A> właściwości. W przykładzie użyto następujących właściwości w tworzeniu <xref:System.Windows.Forms.ListView> sterowania:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Należy dodać kodu do <xref:System.Windows.Forms.Form> i wywołaj metodę utworzony w przykładzie z konstruktora lub innej metody w formularzu. Przykład wymaga, aby obrazy o nazwie `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, i `MyLargeImage2` znajdują się w katalogu głównym dysku C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(System::String ^ text);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do wyświetlenia dla elementu. To nie powinna przekraczać 259 znaków.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ListViewItem" /> klasy tekstem określony element.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tekst <xref:System.Windows.Forms.ListViewItem> nie może przekraczać 259 znaków lub mogą wystąpić nieoczekiwane zachowanie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::String ^&gt; ^ items);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="items">Tablica ciągów reprezentujących podelementy nowego elementu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ListViewItem" /> klasy z tablicą ciągów reprezentujących elementy podrzędne.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="group">
          <see cref="T:System.Windows.Forms.ListViewGroup" /> Można przypisać elementu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ListViewItem" /> klasy, a następnie przypisuje go do określonej grupy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wersja konstruktora można określić grupę, do której należy element.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView> grupy są dostępne tylko w systemach Windows XP i z rodziny Windows Server 2003 ([!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)]). Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Forms.ListViewGroup> temat.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ListViewItem (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ListViewItem(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> zawierających informacje o <see cref="T:System.Windows.Forms.ListViewItem" /> do zainicjowania.</param>
        <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> wskazujące docelowego i kontekst informacje o źródle serializowanego strumienia.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ListViewItem" /> klasy serializacji określonego informacji i kontekst przesyłania strumieniowego.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string text, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, imageIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(System::String ^ text, int imageIndex);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do wyświetlenia dla elementu. To nie powinna przekraczać 259 znaków.</param>
        <param name="imageIndex">Liczony od zera indeks obrazu w <see cref="T:System.Windows.Forms.ImageList" /> skojarzone z <see cref="T:System.Windows.Forms.ListView" /> zawierający element.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ListViewItem" /> klasy z tekstem określony element i indeks obrazu ikony elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tekst <xref:System.Windows.Forms.ListViewItem> nie może przekraczać 259 znaków lub mogą wystąpić nieoczekiwane zachowanie.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="T:System.Windows.Forms.ListView" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string text, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, imageKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(System::String ^ text, System::String ^ imageKey);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do wyświetlenia dla elementu. To nie powinna przekraczać 259 znaków.</param>
        <param name="imageKey">Nazwa obrazu w <see cref="P:System.Windows.Forms.ListViewItem.ImageList" /> z właścicielem <see cref="T:System.Windows.Forms.ListView" /> do wyświetlenia w <see cref="T:System.Windows.Forms.ListViewItem" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ListViewItem" /> z określonego tekstu i obrazów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `imageKey` Parametr określa obrazu w <xref:System.Windows.Forms.ListViewItem.ImageList%2A> skojarzone z <xref:System.Windows.Forms.ListView> formant, który jest dostępny z <xref:System.Windows.Forms.ListViewItem.ImageList%2A> właściwości.  
  
 Tekst <xref:System.Windows.Forms.ListViewItem> nie może przekraczać 259 znaków lub mogą wystąpić nieoczekiwane zachowanie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string text, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(System::String ^ text, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do wyświetlenia dla elementu. To nie powinna przekraczać 259 znaków.</param>
        <param name="group">
          <see cref="T:System.Windows.Forms.ListViewGroup" /> Można przypisać elementu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ListViewItem" /> klasy tekstem określony element i przypisuje go do określonej grupy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wersja konstruktora można określić grupę, do której należy element.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView> grupy są dostępne tylko w systemach Windows XP i z rodziny Windows Server 2003 ([!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)]). Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Forms.ListViewGroup> temat.  
  
 Tekst <xref:System.Windows.Forms.ListViewItem> nie może przekraczać 259 znaków lub mogą wystąpić nieoczekiwane zachowanie.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string[] items, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] items, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As String(), imageIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::String ^&gt; ^ items, int imageIndex);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="items">Tablica ciągów reprezentujących podelementy nowego elementu.</param>
        <param name="imageIndex">Liczony od zera indeks obrazu w <see cref="T:System.Windows.Forms.ImageList" /> skojarzone z <see cref="T:System.Windows.Forms.ListView" /> zawierający element.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ListViewItem" /> klasy z indeks obrazu ikony elementu i Tablica ciągów reprezentujących elementy podrzędne.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="T:System.Windows.Forms.ListView" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string[] items, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] items, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As String(), imageKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::String ^&gt; ^ items, System::String ^ imageKey);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
        <Parameter Name="imageKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="items">Tablica zawierająca tekst elementów podrzędnych elementu <see cref="T:System.Windows.Forms.ListViewItem" />.</param>
        <param name="imageKey">Nazwa obrazu w <see cref="P:System.Windows.Forms.ListViewItem.ImageList" /> z właścicielem <see cref="T:System.Windows.Forms.ListView" /> do wyświetlenia w <see cref="T:System.Windows.Forms.ListViewItem" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ListViewItem" /> z określonego elementu i podelementu tekstu i obrazów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `imageKey` Parametr określa obrazu w <xref:System.Windows.Forms.ListViewItem.ImageList%2A> skojarzone z <xref:System.Windows.Forms.ListView> formant, który jest dostępny z <xref:System.Windows.Forms.ListViewItem.ImageList%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string[] items, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] items, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String[],System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As String(), group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::String ^&gt; ^ items, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="items">Tablica ciągów reprezentujących podelementy nowego elementu.</param>
        <param name="group">
          <see cref="T:System.Windows.Forms.ListViewGroup" /> Można przypisać elementu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ListViewItem" /> klasy z tablicą ciągów reprezentujących subitems i przypisuje element do określonej grupy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wersja konstruktora można określić grupę, do której należy element.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView> grupy są dostępne tylko w systemach Windows XP i z rodziny Windows Server 2003 ([!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)]). Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Forms.ListViewGroup> temat.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (System.Windows.Forms.ListViewItem.ListViewSubItem[] subItems, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListViewItem/ListViewSubItem[] subItems, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.Windows.Forms.ListViewItem.ListViewSubItem[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (subItems As ListViewItem.ListViewSubItem(), imageIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::Windows::Forms::ListViewItem::ListViewSubItem ^&gt; ^ subItems, int imageIndex);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="subItems" Type="System.Windows.Forms.ListViewItem+ListViewSubItem[]" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="subItems">Tablica typu <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> reprezentujący elementy podrzędne elementu.</param>
        <param name="imageIndex">Liczony od zera indeks obrazu w <see cref="T:System.Windows.Forms.ImageList" /> skojarzone z <see cref="T:System.Windows.Forms.ListView" /> zawierający element.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ListViewItem" /> klasy z indeks obrazu ikony elementu i tablicę <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> obiektów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wersja konstruktora jest przydatne w przypadku tworzenia <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiektów przed dodaniem ich do <xref:System.Windows.Forms.ListViewItem> (na przykład, aby wskazać specjalne formatowanie lub użyć elementy podrzędne w wielu elementów).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="T:System.Windows.Forms.ListView" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (System.Windows.Forms.ListViewItem.ListViewSubItem[] subItems, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListViewItem/ListViewSubItem[] subItems, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.Windows.Forms.ListViewItem.ListViewSubItem[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (subItems As ListViewItem.ListViewSubItem(), imageKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::Windows::Forms::ListViewItem::ListViewSubItem ^&gt; ^ subItems, System::String ^ imageKey);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="subItems" Type="System.Windows.Forms.ListViewItem+ListViewSubItem[]" />
        <Parameter Name="imageKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subItems">Tablica <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> obiektów.</param>
        <param name="imageKey">Nazwa obrazu w <see cref="P:System.Windows.Forms.ListViewItem.ImageList" /> z właścicielem <see cref="T:System.Windows.Forms.ListView" /> do wyświetlenia w <see cref="T:System.Windows.Forms.ListViewItem" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ListViewItem" /> z określonym podelementy i obrazu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `imageKey` Parametr określa obrazu w <xref:System.Windows.Forms.ListViewItem.ImageList%2A> skojarzone z <xref:System.Windows.Forms.ListView> formant, który jest dostępny z <xref:System.Windows.Forms.ListViewItem.ImageList%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string text, int imageIndex, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, int32 imageIndex, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String,System.Int32,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, imageIndex As Integer, group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(System::String ^ text, int imageIndex, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do wyświetlenia dla elementu. To nie powinna przekraczać 259 znaków.</param>
        <param name="imageIndex">Liczony od zera indeks obrazu w <see cref="T:System.Windows.Forms.ImageList" /> skojarzone z <see cref="T:System.Windows.Forms.ListView" /> zawierający element.</param>
        <param name="group">
          <see cref="T:System.Windows.Forms.ListViewGroup" /> Można przypisać elementu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ListViewItem" /> klasy z tekstem określony element i indeks obrazu ikony elementu i przypisuje element do określonej grupy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wersja konstruktora można określić grupę, do której należy element.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView> grupy są dostępne tylko w systemach Windows XP i z rodziny Windows Server 2003 ([!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)]). Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Forms.ListViewGroup> temat.  
  
 Tekst <xref:System.Windows.Forms.ListViewItem> nie może przekraczać 259 znaków lub mogą wystąpić nieoczekiwane zachowanie.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string text, string imageKey, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string imageKey, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String,System.String,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, imageKey As String, group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(System::String ^ text, System::String ^ imageKey, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageKey" Type="System.String" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do wyświetlenia dla elementu. To nie powinna przekraczać 259 znaków.</param>
        <param name="imageKey">Nazwa obrazu w <see cref="P:System.Windows.Forms.ListViewItem.ImageList" /> z właścicielem <see cref="T:System.Windows.Forms.ListView" /> do wyświetlenia w elemencie.</param>
        <param name="group">
          <see cref="T:System.Windows.Forms.ListViewGroup" /> Można przypisać elementu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ListViewItem" /> z określonego tekstu, obrazów i grupy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wersja konstruktora można określić grupę, do której należy element.  
  
 `imageKey` Parametr określa obrazu w <xref:System.Windows.Forms.ListViewItem.ImageList%2A> skojarzone z <xref:System.Windows.Forms.ListView> formant, który jest dostępny z <xref:System.Windows.Forms.ListViewItem.ImageList%2A> właściwości.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView> grupy są dostępne tylko w systemach Windows XP i z rodziny Windows Server 2003 ([!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)]). Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Forms.ListViewGroup> temat.  
  
 Tekst <xref:System.Windows.Forms.ListViewItem> nie może przekraczać 259 znaków lub mogą wystąpić nieoczekiwane zachowanie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string[] items, int imageIndex, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] items, int32 imageIndex, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String[],System.Int32,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As String(), imageIndex As Integer, group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::String ^&gt; ^ items, int imageIndex, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
        <Parameter Name="imageIndex" Type="System.Int32" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="items">Tablica ciągów reprezentujących podelementy nowego elementu.</param>
        <param name="imageIndex">Liczony od zera indeks obrazu w <see cref="T:System.Windows.Forms.ImageList" /> skojarzone z <see cref="T:System.Windows.Forms.ListView" /> zawierający element.</param>
        <param name="group">
          <see cref="T:System.Windows.Forms.ListViewGroup" /> Można przypisać elementu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ListViewItem" /> klasy z indeks obrazu ikony elementu i Tablica ciągów reprezentujących subitems i przypisuje element do określonej grupy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wersja konstruktora można określić grupę, do której należy element.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView> grupy są dostępne tylko w systemach Windows XP i z rodziny Windows Server 2003 ([!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)]). Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Forms.ListViewGroup> temat.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string[] items, string imageKey, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] items, string imageKey, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String[],System.String,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As String(), imageKey As String, group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::String ^&gt; ^ items, System::String ^ imageKey, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
        <Parameter Name="imageKey" Type="System.String" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="items">Na tablicę ciągów, które reprezentuje tekst elementy podrzędne elementu <see cref="T:System.Windows.Forms.ListViewItem" />.</param>
        <param name="imageKey">Nazwa obrazu w <see cref="P:System.Windows.Forms.ListViewItem.ImageList" /> z właścicielem <see cref="T:System.Windows.Forms.ListView" /> do wyświetlenia w elemencie.</param>
        <param name="group">
          <see cref="T:System.Windows.Forms.ListViewGroup" /> Można przypisać elementu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ListViewItem" /> klasy z podelementy zawierających określony tekst, obrazu i grupy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wersja konstruktora można określić grupę, do której należy element.  
  
 `imageKey` Parametr określa obrazu w <xref:System.Windows.Forms.ListViewItem.ImageList%2A> skojarzone z <xref:System.Windows.Forms.ListView> formant, który jest dostępny z <xref:System.Windows.Forms.ListViewItem.ImageList%2A> właściwości.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView> grupy są dostępne tylko w systemach Windows XP i z rodziny Windows Server 2003 ([!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)]). Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Forms.ListViewGroup> temat.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (System.Windows.Forms.ListViewItem.ListViewSubItem[] subItems, int imageIndex, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListViewItem/ListViewSubItem[] subItems, int32 imageIndex, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.Windows.Forms.ListViewItem.ListViewSubItem[],System.Int32,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (subItems As ListViewItem.ListViewSubItem(), imageIndex As Integer, group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::Windows::Forms::ListViewItem::ListViewSubItem ^&gt; ^ subItems, int imageIndex, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="subItems" Type="System.Windows.Forms.ListViewItem+ListViewSubItem[]" />
        <Parameter Name="imageIndex" Type="System.Int32" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="subItems">Tablica typu <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> reprezentujący elementy podrzędne elementu.</param>
        <param name="imageIndex">Liczony od zera indeks obrazu w <see cref="T:System.Windows.Forms.ImageList" /> skojarzone z <see cref="T:System.Windows.Forms.ListView" /> zawierający element.</param>
        <param name="group">
          <see cref="T:System.Windows.Forms.ListViewGroup" /> Można przypisać elementu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ListViewItem" /> klasy z indeks obrazu ikony elementu i tablicę <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> obiektów i przypisuje element do określonej grupy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wersja konstruktora jest przydatne w przypadku tworzenia <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiektów przed dodaniem ich do <xref:System.Windows.Forms.ListViewItem> obiektu (na przykład, aby wskazać specjalne formatowanie lub użyć elementy podrzędne w wielu elementów). Można też określić grupę, do której należy element.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView> grupy są dostępne tylko w systemach Windows XP i z rodziny Windows Server 2003 ([!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)]). Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Forms.ListViewGroup> temat.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (System.Windows.Forms.ListViewItem.ListViewSubItem[] subItems, string imageKey, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListViewItem/ListViewSubItem[] subItems, string imageKey, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.Windows.Forms.ListViewItem.ListViewSubItem[],System.String,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (subItems As ListViewItem.ListViewSubItem(), imageKey As String, group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::Windows::Forms::ListViewItem::ListViewSubItem ^&gt; ^ subItems, System::String ^ imageKey, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="subItems" Type="System.Windows.Forms.ListViewItem+ListViewSubItem[]" />
        <Parameter Name="imageKey" Type="System.String" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="subItems">Tablica <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> obiekty reprezentujące elementy podrzędne elementu <see cref="T:System.Windows.Forms.ListViewItem" />.</param>
        <param name="imageKey">Nazwa obrazu w <see cref="P:System.Windows.Forms.ListViewItem.ImageList" /> z właścicielem <see cref="T:System.Windows.Forms.ListView" /> do wyświetlenia w elemencie.</param>
        <param name="group">
          <see cref="T:System.Windows.Forms.ListViewGroup" /> Można przypisać elementu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ListViewItem" /> z określonym podelementów, obrazu i grupy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wersja konstruktora jest przydatne w przypadku tworzenia <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiektów przed dodaniem ich do <xref:System.Windows.Forms.ListViewItem> (na przykład, aby wskazać specjalne formatowanie lub użyć elementy podrzędne w wielu elementów). Można też określić grupę, do której należy element.  
  
 `imageKey` Parametr określa obrazu w <xref:System.Windows.Forms.ListViewItem.ImageList%2A> skojarzone z <xref:System.Windows.Forms.ListView> formant, który jest dostępny z <xref:System.Windows.Forms.ListViewItem.ImageList%2A> właściwości.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView> grupy są dostępne tylko w systemach Windows XP i z rodziny Windows Server 2003 ([!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)]). Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Forms.ListViewGroup> temat.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string[] items, int imageIndex, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] items, int32 imageIndex, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String[],System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::String ^&gt; ^ items, int imageIndex, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Drawing::Font ^ font);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
        <Parameter Name="imageIndex" Type="System.Int32" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="items">Tablica ciągów reprezentujących podelementy nowego elementu.</param>
        <param name="imageIndex">Liczony od zera indeks obrazu w <see cref="T:System.Windows.Forms.ImageList" /> skojarzone z <see cref="T:System.Windows.Forms.ListView" /> zawierający element.</param>
        <param name="foreColor">A <see cref="T:System.Drawing.Color" /> reprezentujący kolor pierwszego planu elementu.</param>
        <param name="backColor">A <see cref="T:System.Drawing.Color" /> reprezentujący kolor tła elementu.</param>
        <param name="font">A <see cref="T:System.Drawing.Font" /> reprezentujący czcionki do wyświetlania tekstu elementu w.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ListViewItem" /> klasy indeks obrazu ikony elementu; kolor pierwszego planu, kolor tła i czcionki elementu; i Tablica ciągów reprezentujących elementy podrzędne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu tworzy formularz zawierający <xref:System.Windows.Forms.ListView> kontroli ręcznie sortujące elementy, gdy kolumna w <xref:System.Windows.Forms.ListView> formant zostanie kliknięty. W przykładzie zdefiniowano klasę o nazwie `ListViewItemComparer` implementującej <xref:System.Collections.IComparer?displayProperty=nameWithType> interfejsu, który wykonuje <xref:System.Windows.Forms.ListViewItem> porównania. W przykładzie jest tworzony wystąpienia `ListViewItemComparer` i używa jej do ustawienia <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> właściwość <xref:System.Windows.Forms.ListView> formantu. <xref:System.Windows.Forms.ListView.Sort%2A> Wywołanie metody <xref:System.Windows.Forms.ListView.ColumnClick> program obsługi zdarzeń używa metody zdefiniowane w `ListViewItemComparer` do wykonania sortowania pozycji, na podstawie kolumny, która zostanie kliknięty.  
  
 [!code-cpp[ListView.ColumnClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.ColumnClick/CPP/listviewsort1.cpp#1)]
 [!code-csharp[ListView.ColumnClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.ColumnClick/CS/listviewsort1.cs#1)]
 [!code-vb[ListView.ColumnClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.ColumnClick/VB/listviewsort1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Drawing.Font" />
        <altmember cref="T:System.Windows.Forms.ListView" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string[] items, string imageKey, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] items, string imageKey, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String[],System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::String ^&gt; ^ items, System::String ^ imageKey, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Drawing::Font ^ font);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
        <Parameter Name="imageKey" Type="System.String" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="items">Tablica ciągów reprezentujących tekst podrzędnych dla <see cref="T:System.Windows.Forms.ListViewItem" />.</param>
        <param name="imageKey">Nazwa obrazu w <see cref="P:System.Windows.Forms.ListViewItem.ImageList" /> z właścicielem <see cref="T:System.Windows.Forms.ListView" /> do wyświetlenia w elemencie.</param>
        <param name="foreColor">A <see cref="T:System.Drawing.Color" /> reprezentujący kolor pierwszego planu elementu.</param>
        <param name="backColor">A <see cref="T:System.Drawing.Color" /> reprezentujący kolor tła elementu.</param>
        <param name="font">A <see cref="T:System.Drawing.Font" /> do zastosowania do tekstu elementu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ListViewItem" /> klasy z podelementy zawierających określony tekst, obraz, kolorów i czcionek.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `imageKey` Parametr określa obrazu w <xref:System.Windows.Forms.ListViewItem.ImageList%2A> skojarzone z <xref:System.Windows.Forms.ListView> formant, który jest dostępny z <xref:System.Windows.Forms.ListViewItem.ImageList%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string[] items, int imageIndex, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Drawing.Font font, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] items, int32 imageIndex, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, class System.Drawing.Font font, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String[],System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::String ^&gt; ^ items, int imageIndex, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Drawing::Font ^ font, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
        <Parameter Name="imageIndex" Type="System.Int32" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="items">Tablica ciągów reprezentujących podelementy nowego elementu.</param>
        <param name="imageIndex">Liczony od zera indeks obrazu w <see cref="T:System.Windows.Forms.ImageList" /> skojarzone z <see cref="T:System.Windows.Forms.ListView" /> zawierający element.</param>
        <param name="foreColor">A <see cref="T:System.Drawing.Color" /> reprezentujący kolor pierwszego planu elementu.</param>
        <param name="backColor">A <see cref="T:System.Drawing.Color" /> reprezentujący kolor tła elementu.</param>
        <param name="font">A <see cref="T:System.Drawing.Font" /> reprezentujący czcionki do wyświetlania tekstu elementu w.</param>
        <param name="group">
          <see cref="T:System.Windows.Forms.ListViewGroup" /> Można przypisać elementu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ListViewItem" /> klasy indeks obrazu ikony elementu; kolor pierwszego planu, kolor tła i czcionki elementu; i Tablica ciągów reprezentujących elementy podrzędne. Przypisuje element do określonej grupy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wersja konstruktora można określić grupę, do której należy element.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView> grupy są dostępne tylko w systemach Windows XP i z rodziny Windows Server 2003 ([!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)]). Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Forms.ListViewGroup> temat.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Drawing.Font" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string[] items, string imageKey, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Drawing.Font font, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] items, string imageKey, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, class System.Drawing.Font font, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String[],System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::String ^&gt; ^ items, System::String ^ imageKey, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Drawing::Font ^ font, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
        <Parameter Name="imageKey" Type="System.String" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="items">Tablica ciągów, które reprezentuje tekst podrzędnych dla <see cref="T:System.Windows.Forms.ListViewItem" />.</param>
        <param name="imageKey">Nazwa obrazu w <see cref="P:System.Windows.Forms.ListViewItem.ImageList" /> z właścicielem <see cref="T:System.Windows.Forms.ListView" /> do wyświetlenia w elemencie.</param>
        <param name="foreColor">A <see cref="T:System.Drawing.Color" /> reprezentujący kolor pierwszego planu elementu.</param>
        <param name="backColor">A <see cref="T:System.Drawing.Color" /> reprezentujący kolor tła elementu.</param>
        <param name="font">A <see cref="T:System.Drawing.Font" /> do zastosowania do tekstu elementu.</param>
        <param name="group">
          <see cref="T:System.Windows.Forms.ListViewGroup" /> Można przypisać elementu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ListViewItem" /> klasy z podelementy zawierających określony tekst, obraz, kolory, czcionki i grupy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wersja konstruktora można określić grupę, do której należy element.  
  
 `imageKey` Parametr określa obrazu w <xref:System.Windows.Forms.ListViewItem.ImageList%2A> skojarzone z <xref:System.Windows.Forms.ListView> formant, który jest dostępny z <xref:System.Windows.Forms.ListViewItem.ImageList%2A> właściwości.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView> grupy są dostępne tylko w systemach Windows XP i z rodziny Windows Server 2003 ([!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)]). Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Forms.ListViewGroup> temat.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor tła tekstu elementu.</summary>
        <value>A <see cref="T:System.Drawing.Color" /> reprezentujący kolor tła tekstu elementu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Windows.Forms.ListViewItem.BackColor%2A> właściwości, aby zmienić kolor wyświetlany za tekstu elementu. Ta właściwość może służyć, jeśli chcesz używać różnych kombinacji kolor tła i pierwszego planu (przy użyciu <xref:System.Windows.Forms.ListViewItem.ForeColor%2A> właściwości, aby ustawić kolor pierwszego planu) do odróżnienia jednego elementu z innej. Na przykład można ustawić <xref:System.Windows.Forms.ListViewItem.BackColor%2A> właściwości <xref:System.Drawing.Color.Red%2A> Aby zidentyfikować elementy, które nie powiodła się weryfikacja lub brak podelementu informacji.  
  
 Jeśli chcesz użyć tego samego kolor tła dla wszystkich podrzędnych elementu, ustaw <xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A> właściwości `true`. Spowoduje to kolorów i czcionek określona dla elementu używanego dla całego tekstu podelementu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Umieszcza tekst elementu w trybie edycji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest efektywne tylko wtedy, gdy <xref:System.Windows.Forms.ListView.LabelEdit%2A> właściwość <xref:System.Windows.Forms.ListView> ma ustawioną wartość formantu, który zawiera element `true`. Ta metoda w czasie wykonywania umożliwia wymuszenie tekstu elementu aby wyświetlić w trybie edycji. Na przykład, jeśli jest sprawdzana poprawność tekst elementu edytowane przez użytkownika, a element weryfikacji nie powiedzie się, możesz wybierz element w <xref:System.Windows.Forms.ListView> kontroli i wywołać <xref:System.Windows.Forms.ListViewItem.BeginEdit%2A> metodę wymuszania użytkownik zmienił tekst, który nie przeszedł sprawdzania poprawności.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.ListView.LabelEdit" /> Właściwości skojarzonego <see cref="T:System.Windows.Forms.ListView" /> nie jest ustawiony na <see langword="true" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera prostokąt ograniczający element, w tym elementy podrzędne.</summary>
        <value>A <see cref="T:System.Drawing.Rectangle" /> reprezentujący prostokątem elementu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do uzyskania prostokątem cały element. Jeśli chcesz uzyskać prostokątem na część cały element, użyj <xref:System.Windows.Forms.ListViewItem.GetBounds%2A> metody. <xref:System.Windows.Forms.ListView> Klasa udostępnia <xref:System.Windows.Forms.ListView.GetItemRect%2A> metodę, która umożliwia uzyskiwanie prostokątem dowolny element znajduje się wewnątrz formantu.  
  
 Zwrócony prostokątem używa współrzędne kontroli klienta, które są względem lewego górnego rogu obecnie widoczny obszar zawierający <xref:System.Windows.Forms.ListBox>. Jeśli <xref:System.Windows.Forms.ListBox> jest przewijany i pozycjonowane, aby <xref:System.Windows.Forms.ListViewItem> jest niewidoczny, współrzędne zwrócił może być ujemna.  
  
 Gdy <xref:System.Windows.Forms.ListView.View%2A?displayProperty=nameWithType> właściwość ma wartość <xref:System.Windows.Forms.View.List>, szerokość prostokątem jest szerokość kolumny zawierającej element nie szerokości tekstu w elemencie. Jeśli <xref:System.Windows.Forms.ListView.Columns%2A?displayProperty=nameWithType> Kolekcja nie zawiera żadnych kolumn, zostanie użyta domyślna szerokość kolumny 60 pikseli.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.GetBounds(System.Windows.Forms.ItemBoundsPortion)" />
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public bool Checked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Checked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.Checked" />
      <MemberSignature Language="VB.NET" Value="Public Property Checked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Checked { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy element jest zaznaczony.</summary>
        <value>
          <see langword="true" /> Jeśli element jest wyewidencjonowany; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest przydatna tylko wtedy, gdy <xref:System.Windows.Forms.ListView.CheckBoxes%2A> właściwość <xref:System.Windows.Forms.ListView> ma ustawioną wartość formantu element znajduje się w `true`. Ta właściwość służy do określenia, czy element został sprawdzony przez użytkownika lub za pomocą kodu w czasie wykonywania. Aby określić wszystkie elementy, które są sprawdzane w <xref:System.Windows.Forms.ListView> sterowania, można użyć <xref:System.Windows.Forms.ListView.CheckedItems%2A> właściwości. Podjęcie działań, jeśli element został zaznaczony, można utworzyć programu obsługi zdarzeń dla <xref:System.Windows.Forms.ListView.ItemCheck> właściwość <xref:System.Windows.Forms.ListView> formantu.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.ListView> formantu, z których trzy <xref:System.Windows.Forms.ListViewItem> obiekty określone i trzy <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiekty określone dla każdego elementu. W przykładzie jest tworzony także <xref:System.Windows.Forms.ColumnHeader> obiektów, aby wyświetlić elementy podrzędne w widoku details. Dwa <xref:System.Windows.Forms.ImageList> obiekty również są tworzone w przykładzie kodu, aby zapewnić obrazy dla <xref:System.Windows.Forms.ListViewItem> obiektów. Te <xref:System.Windows.Forms.ImageList> obiekty są dodawane do <xref:System.Windows.Forms.ListView.LargeImageList%2A> i <xref:System.Windows.Forms.ListView.SmallImageList%2A> właściwości. W przykładzie użyto następujących właściwości w tworzeniu <xref:System.Windows.Forms.ListView> sterowania:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Należy dodać kodu do <xref:System.Windows.Forms.Form> i wywołaj metodę utworzony w przykładzie z konstruktora lub innej metody w formularzu. Przykład wymaga, aby obrazy o nazwie `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, i `MyLargeImage2` znajdują się w katalogu głównym dysku C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.CheckBoxes" />
        <altmember cref="E:System.Windows.Forms.ListView.ItemCheck" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckedItems" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy identyczne kopię elementu.</summary>
        <returns>Obiekt, który reprezentuje element, który ma taką samą tekstu, obrazów i podelementów skojarzonych z nim sklonowany elementu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do utworzenia nowego wystąpienia <xref:System.Windows.Forms.ListViewItem> klasy na podstawie istniejącego elementu. Nawet elementy podrzędne elementu klonowanego są określone dla nowej wersji. Ta funkcja jest przydatna, jeśli chcesz ponownie użyć <xref:System.Windows.Forms.ListViewItem> w więcej niż jednym <xref:System.Windows.Forms.ListView> formantu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="protected virtual void Deserialize (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Deserialize(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Deserialize (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Deserialize(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> przechowuje dane potrzebne do deserializacji elementu.</param>
        <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> reprezentujący źródłowego i docelowego strumienia deserializacji.</param>
        <summary>Deserializuje element.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Ta metoda powinna zostać zastąpiona, jeśli zamierzasz serializacji i deserializacji wersji pochodnej tej klasy i pochodne klasy zawiera informacje o stanie, który ma być serializacji i deserializacji. Klasa podstawowa implementacja tej metody należy wywołać w celu zapewnienia serializacji i deserializacji prawidłowo elementów.</para>
        </block>
        <altmember cref="M:System.Windows.Forms.ListViewItem.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName="EnsureVisible">
      <MemberSignature Language="C#" Value="public virtual void EnsureVisible ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnsureVisible() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.EnsureVisible" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnsureVisible ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnsureVisible();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapewnia, że ten element jest widoczny w formancie przewijanie zawartości formantu, jeśli to konieczne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do zapewnienia, że ten element jest widoczny w <xref:System.Windows.Forms.ListView> formantu. Tej metody można użyć podczas przeprowadzania weryfikacji w elemencie. Możesz wywołać <xref:System.Windows.Forms.ListViewItem.EnsureVisible%2A> metody, aby upewnić się, że element jest wyświetlany w <xref:System.Windows.Forms.ListView> kontrolki, jeżeli nie powiodło się sprawdzanie poprawności, aby zezwolić użytkownikowi na dokonać zmian w elemencie.  
  
 Ta metoda jest podobna do <xref:System.Windows.Forms.ListView.EnsureVisible%2A> metody <xref:System.Windows.Forms.ListView> formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.EnsureVisible(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="FindNearestItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindNearestItem (System.Windows.Forms.SearchDirectionHint searchDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindNearestItem(valuetype System.Windows.Forms.SearchDirectionHint searchDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.FindNearestItem(System.Windows.Forms.SearchDirectionHint)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNearestItem (searchDirection As SearchDirectionHint) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindNearestItem(System::Windows::Forms::SearchDirectionHint searchDirection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchDirection" Type="System.Windows.Forms.SearchDirectionHint" />
      </Parameters>
      <Docs>
        <param name="searchDirection">Jeden z <see cref="T:System.Windows.Forms.SearchDirectionHint" /> wartości.</param>
        <summary>Znajduje następny element z <see cref="T:System.Windows.Forms.ListViewItem" />, wyszukiwanie w określonym kierunku.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.ListViewItem" /> Zbliżony do danego współrzędne, wyszukiwanie w określonym kierunku.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.FindNearestItem%2A> Metoda zwraca `null` Jeśli element nie został znaleziony w określonym kierunku.  
  
 Identyfikowanie najbliższej elementu może się różnić w zależności od systemu operacyjnego, aplikacja jest uruchomiona na i będzie miało wpływ na wyniki <xref:System.Windows.Forms.ListViewItem.FindNearestItem%2A>.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.ListViewItem.FindNearestItem%2A> metody. Do uruchomienia tego przykładu, wklej następujący kod do formularza systemu Windows, który zawiera <xref:System.Windows.Forms.ListView> o nazwie `findListView`. Upewnij się, że <xref:System.Windows.Forms.ListView.View%2A> właściwość jest ustawiona na widoku ikon i że <xref:System.Windows.Forms.ListView> jest wypełniane przy użyciu elementów. Skojarz <xref:System.Windows.Forms.Control.MouseDown> zdarzenie `findListView` z `findListView_MouseDown` metody w tym przykładzie.  
  
 [!code-csharp[System.Windows.Forms.ListViewItemWhidbeyMembers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListViewItemWhidbeyMembers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.ListView.View" /> Właściwość zawierający <see cref="T:System.Windows.Forms.ListView" /> ma ustawioną wartość innych niż <see cref="F:System.Windows.Forms.View.SmallIcon" /> lub <see cref="F:System.Windows.Forms.View.LargeIcon" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Focused">
      <MemberSignature Language="C#" Value="public bool Focused { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.Focused" />
      <MemberSignature Language="VB.NET" Value="Public Property Focused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Focused { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy element ma fokus w <see cref="T:System.Windows.Forms.ListView" /> formantu.</summary>
        <value>
          <see langword="true" /> Jeśli element ma fokus; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ <xref:System.Windows.Forms.ListView> formant nie ma obszarów można bezpośrednio edytować — tylko elementy zawarte w <xref:System.Windows.Forms.ListView> można edytowane — tekst elementu w <xref:System.Windows.Forms.ListView> wyświetli reticle fokus podczas <xref:System.Windows.Forms.ListView> ma fokus. Zazwyczaj ostatnio wybrany element w <xref:System.Windows.Forms.ListView> formant jest element z fokusem. Mimo że element może być wyświetlany reticle fokus, jego może nie być wybrany element w <xref:System.Windows.Forms.ListView>. Można użyć <xref:System.Windows.Forms.ListViewItem.Focused%2A> właściwości w celu określenia, czy element jest aktualnie zaznaczonego elementu w <xref:System.Windows.Forms.ListView> formant, który go zawiera. Jeśli <xref:System.Windows.Forms.ListViewItem> nie jest skojarzony z <xref:System.Windows.Forms.ListView> kontroli, ta właściwość będzie zwracać `false`.  
  
 <xref:System.Windows.Forms.ListView> Kontrola zapewnia <xref:System.Windows.Forms.ListView.FocusedItem%2A> właściwość umożliwia określenie, które <xref:System.Windows.Forms.ListViewItem> w <xref:System.Windows.Forms.ListView> ma fokus.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.FocusedItem" />
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.Font" />
      <MemberSignature Language="VB.NET" Value="Public Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia czcionkę tekstu wyświetlanego przez element.</summary>
        <value>
          <see cref="T:System.Drawing.Font" /> Do zastosowania do tekstu wyświetlanego przez formant. Wartość domyślna to wartość <see cref="P:System.Windows.Forms.Control.DefaultFont" /> właściwości Jeśli <see cref="T:System.Windows.Forms.ListViewItem" /> nie jest skojarzony z <see cref="T:System.Windows.Forms.ListView" /> kontrolować; w przeciwnym razie czcionki określony w <see cref="P:System.Windows.Forms.Control.Font" /> właściwość <see cref="T:System.Windows.Forms.ListView" /> formant jest używany.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia zmienianie stylu czcionki tekstu elementu. Ponieważ <xref:System.Drawing.Font> nie można modyfikować (nie można dostosować dowolne z jego właściwości), można przypisać tylko <xref:System.Windows.Forms.Control.Font%2A> właściwości nowej <xref:System.Drawing.Font>. Jednak można utworzyć nowej czcionki na istniejące czcionki.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak dostosować istniejący czcionkę, aby go pogrubienie.  
  
```csharp  
listViewItem1.Font = new Font(listViewItem1.Font,   
    listViewItem1.Font.Style | FontStyle.Bold);  
```  
  
```vb  
ListViewItem1.Font = New Font(ListViewItem1.Font, _   
    ListViewItem1.Font.Style Or FontStyle.Bold)  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor pierwszego planu tekstu elementu.</summary>
        <value>A <see cref="T:System.Drawing.Color" /> reprezentujący kolor pierwszego planu tekstu elementu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Windows.Forms.ListViewItem.ForeColor%2A> właściwości, aby zmienić kolor tekstu elementu. Ta właściwość może służyć, jeśli chcesz używać różnych kombinacji kolor tła i pierwszego planu (przy użyciu <xref:System.Windows.Forms.ListViewItem.BackColor%2A> właściwości, aby ustawić kolor tła) do odróżnienia jednego elementu z innej. Na przykład można ustawić <xref:System.Windows.Forms.ListViewItem.ForeColor%2A> właściwości <xref:System.Drawing.Color.Red%2A> do identyfikowania elementy, które mają wartość ujemną skojarzonych z nimi ani nie powiodła się weryfikacja elementu.  
  
 Jeśli chcesz użyć tego samego kolor pierwszego planu dla wszystkich podrzędnych elementu, ustaw <xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A> właściwości `true`. Spowoduje to kolorów i czcionek określona dla elementu używanego dla całego tekstu podelementu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetBounds (System.Windows.Forms.ItemBoundsPortion portion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetBounds(valuetype System.Windows.Forms.ItemBoundsPortion portion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.GetBounds(System.Windows.Forms.ItemBoundsPortion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBounds (portion As ItemBoundsPortion) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetBounds(System::Windows::Forms::ItemBoundsPortion portion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portion" Type="System.Windows.Forms.ItemBoundsPortion" />
      </Parameters>
      <Docs>
        <param name="portion">Jeden z <see cref="T:System.Windows.Forms.ItemBoundsPortion" /> wartości, które reprezentuje część elementu, dla którego można pobrać prostokątem.</param>
        <summary>Pobiera określoną część prostokątem dla elementu.</summary>
        <returns>A <see cref="T:System.Drawing.Rectangle" /> reprezentujący prostokątem dla określonej części elementu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Prostokąt ograniczający zwrócony przez <xref:System.Windows.Forms.ListViewItem.GetBounds%2A> metody reprezentuje tylko części element określony w `portion` parametru. Możesz także wywołać <xref:System.Windows.Forms.ListView.GetItemRect%2A> metody <xref:System.Windows.Forms.ListView> klasy uzyskanie prostokątem dowolny element w <xref:System.Windows.Forms.ListView> formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.GetItemRect(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetSubItemAt">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem.ListViewSubItem GetSubItemAt (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem/ListViewSubItem GetSubItemAt(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.GetSubItemAt(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSubItemAt (x As Integer, y As Integer) As ListViewItem.ListViewSubItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem::ListViewSubItem ^ GetSubItemAt(int x, int y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem+ListViewSubItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">Współrzędna x.</param>
        <param name="y">Współrzędna y.</param>
        <summary>Zwraca podelement z <see cref="T:System.Windows.Forms.ListViewItem" /> w określonych współrzędnych.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> w określonym - współrzędnych x i y.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.GetSubItemAt%2A> Metoda zwróci `null` Jeśli <xref:System.Windows.Forms.ListView> nie znajduje się w <xref:System.Windows.Forms.View.Details> widoku lub nie ma <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> znajdujące się w określonym punkcie.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.ListViewItem.GetSubItemAt%2A> metody. Aby uruchomić ten kod, wklej go do formularza systemu Windows i wywołanie `InitializeListView1` z konstruktora formularza lub <xref:System.Windows.Forms.Form.Load> metoda obsługi zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.ListViewItemWhidbeyMembers#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.ListViewItemWhidbeyMembers#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroup Group { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewGroup Group" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.Group" />
      <MemberSignature Language="VB.NET" Value="Public Property Group As ListViewGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewGroup ^ Group { System::Windows::Forms::ListViewGroup ^ get(); void set(System::Windows::Forms::ListViewGroup ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia grupy, do której jest przypisany element.</summary>
        <value>
          <see cref="T:System.Windows.Forms.ListViewGroup" /> Przypisuje się elementu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy do Ustaw grupę, do której należy element. Można też ustawić w grupie <xref:System.Windows.Forms.ListViewItem.%23ctor%2A> konstruktora, lub ta właściwość służy do modyfikowania członkostwa grupy w czasie wykonywania. Jeśli ta właściwość jest ustawiona na `null` i ma grup w <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> element kolekcji, zostanie wyświetlony w domyślnej grupie mającej etykiety nagłówka "DefaultGroupSystem.Windows.Forms". Domyślna grupa nie jest zawarta w <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> kolekcji i nie można zmienić. Jest szczególnie przydatna w debugowaniu, aby upewnić się, że wszystkie elementy zostały poprawnie dodane do grupy.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView> grupy są dostępne tylko w systemach Windows XP i z rodziny Windows Server 2003 ([!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)]). Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Forms.ListViewGroup> temat.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób <xref:System.Windows.Forms.ListViewItem.Group%2A> właściwość może być używana w aplikacji, która umożliwia organizowanie <xref:System.Windows.Forms.ListView> elementów przez wartość podelementu w widoku details. Ten formularz grupowania jest podobny do grupowania użyte w Eksploratorze Windows. W tym przykładzie grupy są tworzone dynamicznie. Dla każdej kolumny podelementu jedna grupa jest tworzona dla każdej podelementu unikatowe wartości. Dla kolumny elementu nadrzędnego jedna grupa jest tworzona dla każdej początkowej litery. Nazwa grupy utworzonej dla każdej kolumny są przechowywane w tablicy skrótów, wraz z podelementu tekst lub początkowej litery. Po kliknięciu nagłówka kolumny jest pobierana tablicy skrótów odpowiadającego tej kolumny. Następnie wartości tekstowe podelementu dla tej kolumny są używane jako tabeli klawiszy skrótu można pobrać prawidłowej grupy dla każdego elementu. Element jest przypisywana do grupy przy użyciu <xref:System.Windows.Forms.ListViewItem.Group%2A> właściwości.  
  
 Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> właściwości.  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#2)]
 [!code-vb[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="ImageIndex">
      <MemberSignature Language="C#" Value="public int ImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ImageIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.NoneExcludedImageIndexConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia indeks obrazu, który jest wyświetlany dla elementu.</summary>
        <value>Liczony od zera indeks obrazu w <see cref="T:System.Windows.Forms.ImageList" /> która jest wyświetlana dla elementu. Wartość domyślna to -1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość tej właściwości jest zależna od wartości <xref:System.Windows.Forms.ListViewItem.ImageList%2A> właściwości. W zależności od bieżącej wartości <xref:System.Windows.Forms.ListView.View%2A> właściwość <xref:System.Windows.Forms.ListView> formantu skojarzony z elementem, <xref:System.Windows.Forms.ImageList> używany przez element może być jeden określony w <xref:System.Windows.Forms.ListView.LargeImageList%2A> właściwości lub <xref:System.Windows.Forms.ListView.SmallImageList%2A> właściwości <xref:System.Windows.Forms.ListView>formantu. Jeśli <xref:System.Windows.Forms.ListView.View%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.View.LargeIcon>, <xref:System.Windows.Forms.ImageList> określony w <xref:System.Windows.Forms.ListView.LargeImageList%2A> właściwość jest używany; w przeciwnym razie <xref:System.Windows.Forms.ImageList> określony w <xref:System.Windows.Forms.ListView.SmallImageList%2A> właściwość jest używana. Obrazy zdefiniowane w <xref:System.Windows.Forms.ImageList> określony w <xref:System.Windows.Forms.ListView.SmallImageList%2A> powinien mieć tej samej pozycji indeksu jako obrazów w <xref:System.Windows.Forms.ImageList> określony w <xref:System.Windows.Forms.ListView.LargeImageList%2A> właściwości. Jeśli pozycji indeksu są takie same dla <xref:System.Windows.Forms.ImageList> formantów, można ustawić wartość jednego indeksu dla <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> wyświetlania niezależnie od wartości właściwości i odpowiedni obraz <xref:System.Windows.Forms.ListView.View%2A> właściwość <xref:System.Windows.Forms.ListView> formantu. <xref:System.Windows.Forms.ListViewItem.ImageKey%2A> i <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> właściwości wykluczają się wzajemnie, co oznacza, jeśli jest on ustawiony, druga jest ignorowana. Ponadto jeśli ustawisz <xref:System.Windows.Forms.ListViewItem.ImageKey%2A> właściwość <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> właściwość automatycznie ma ustawioną wartość -1. Alternatywnie Jeśli ustawisz <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> właściwości, <xref:System.Windows.Forms.ListViewItem.ImageKey%2A> jest automatycznie ustawiana na ciąg pusty ("").  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Określona wartość jest mniejsza niż -1.</exception>
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="P:System.Windows.Forms.ListView.SmallImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.LargeImageList" />
      </Docs>
    </Member>
    <Member MemberName="ImageKey">
      <MemberSignature Language="C#" Value="public string ImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageKeyConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia klucz dla obrazu, który jest wyświetlany dla elementu.</summary>
        <value>Klucz dla obrazu, który jest wyświetlany dla <see cref="T:System.Windows.Forms.ListViewItem" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.ImageKey%2A> Właściwość zwraca ciąg pusty ("") po <xref:System.Windows.Forms.ListViewItem.ImageKey%2A> nie jest ustawiony dla <xref:System.Windows.Forms.ListViewItem>. <xref:System.Windows.Forms.ListViewItem.ImageKey%2A> i <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> właściwości wykluczają się wzajemnie, co oznacza, jeśli jest on ustawiony, druga jest ignorowana. Jeśli ustawisz <xref:System.Windows.Forms.ListViewItem.ImageKey%2A> właściwość <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> właściwość automatycznie ma ustawioną wartość -1. Alternatywnie Jeśli ustawisz <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> właściwości, <xref:System.Windows.Forms.ListViewItem.ImageKey%2A> jest automatycznie ustawiana na ciąg pusty ("").  
  
> [!NOTE]
>  Jeśli używasz wielu list obrazów, małe i duże ikony w widoku, z <xref:System.Windows.Forms.ListView> formantu, należy umieścić małych i dużych wersji obrazu w tym samym indeks lokalizacji w swoich listach odpowiedniego obrazu. Podczas przełączania się między widokami, lokalizacji indeksu obrazu na jednej liście jest używana do lokalizowania obrazu na liście inne, niezależnie od tego, podana wartość klucza.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList ImageList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList ImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ImageList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImageList As ImageList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageList ^ ImageList { System::Windows::Forms::ImageList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Windows.Forms.ImageList" /> zawierający obraz wyświetlany w elemencie.</summary>
        <value>
          <see cref="T:System.Windows.Forms.ImageList" /> Używane przez <see cref="T:System.Windows.Forms.ListView" /> formant, który zawiera obraz wyświetlany w elemencie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W zależności od bieżącej wartości <xref:System.Windows.Forms.ListView.View%2A> właściwość <xref:System.Windows.Forms.ListView> formantu skojarzony z elementem, <xref:System.Windows.Forms.ImageList> używany przez element może być jeden określony w <xref:System.Windows.Forms.ListView.LargeImageList%2A> właściwości lub <xref:System.Windows.Forms.ListView.SmallImageList%2A> właściwości <xref:System.Windows.Forms.ListView>formantu. Jeśli <xref:System.Windows.Forms.ListView.View%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.View.LargeIcon>, <xref:System.Windows.Forms.ImageList> określony w <xref:System.Windows.Forms.ListView.LargeImageList%2A> właściwość jest używany; w przeciwnym razie <xref:System.Windows.Forms.ImageList> określony w <xref:System.Windows.Forms.ListView.SmallImageList%2A> właściwość jest używana. Ta właściwość umożliwia określenie, które <xref:System.Windows.Forms.ImageList> kontroli dostarcza obraz dla elementu. Aby określić indeks w <xref:System.Windows.Forms.ImageList> zawierający obraz do wyświetlania elementu, użyj <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListViewItem.ImageIndex" />
      </Docs>
    </Member>
    <Member MemberName="IndentCount">
      <MemberSignature Language="C#" Value="public int IndentCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IndentCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.IndentCount" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IndentCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę szerokości mały obraz, o którą należy zwiększyć wcięcie <see cref="T:System.Windows.Forms.ListViewItem" />.</summary>
        <value>Liczbę szerokości mały obraz, o którą należy zwiększyć wcięcie <see cref="T:System.Windows.Forms.ListViewItem" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.IndentCount%2A> Właściwości można używać tylko wtedy, gdy <xref:System.Windows.Forms.ListView.View%2A> właściwość zawierający <xref:System.Windows.Forms.ListView> ustawiono <xref:System.Windows.Forms.View.Details>i <xref:System.Windows.Forms.ListView.SmallImageList%2A> właściwość <xref:System.Windows.Forms.ListView> jest ustawiona.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób ustawiania <xref:System.Windows.Forms.ListViewItem.IndentCount%2A> właściwości. Aby uruchomić ten przykład, wklej następujący kod do formularza systemu Windows i wywołanie `InitializeIndentedListViewItems` metody z Konstruktor elementu form lub <xref:System.Windows.Forms.Form.Load> metoda obsługi zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.ListViewItemWhidbeyMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ListViewItemWhidbeyMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Podczas ustawiania <see cref="P:System.Windows.Forms.ListViewItem.IndentCount" />, z określoną liczbą jest mniejszy niż 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczony od zera indeks elementu w obrębie <see cref="T:System.Windows.Forms.ListView" /> formantu.</summary>
        <value>Liczony od zera indeks elementu w obrębie <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> z <see cref="T:System.Windows.Forms.ListView" /> formant lub -1, jeśli element nie jest skojarzony z <see cref="T:System.Windows.Forms.ListView" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy do określenia, czy element jest skojarzony z <xref:System.Windows.Forms.ListView> kontroli oraz ustalenia jego położenie w obrębie <xref:System.Windows.Forms.ListView.ListViewItemCollection> z <xref:System.Windows.Forms.ListView>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListView">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView ListView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView ListView" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListView" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListView As ListView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView ^ ListView { System::Windows::Forms::ListView ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Windows.Forms.ListView" /> formant, który zawiera element.</summary>
        <value>A <see cref="T:System.Windows.Forms.ListView" /> zawierający <see cref="T:System.Windows.Forms.ListViewItem" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia dostęp do <xref:System.Windows.Forms.ListView> formant, który jest właścicielem <xref:System.Windows.Forms.ListViewItem>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę skojarzoną z tym <see cref="T:System.Windows.Forms.ListViewItem" />.</summary>
        <value>Nazwa <see cref="T:System.Windows.Forms.ListViewItem" />. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Windows.Forms.ListViewItem.Name%2A> właściwość również jest kluczem dla <xref:System.Windows.Forms.ListViewItem> podczas dostępu do elementu w kolekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public System.Drawing.Point Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.Position" />
      <MemberSignature Language="VB.NET" Value="Public Property Position As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point Position { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia pozycję w lewym górnym rogu <see cref="T:System.Windows.Forms.ListViewItem" />.</summary>
        <value>
          <see cref="T:System.Drawing.Point" /> w lewym górnym rogu <see cref="T:System.Windows.Forms.ListViewItem" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.Position%2A> Właściwość powinna być ustawiona po <xref:System.Windows.Forms.ListViewItem> i zawierający <xref:System.Windows.Forms.ListView> są wykonane. Zmiana <xref:System.Windows.Forms.ListViewItem.Position%2A> właściwości podczas zawierający <xref:System.Windows.Forms.ListView> w <xref:System.Windows.Forms.View.Details> lub <xref:System.Windows.Forms.View.List> widoku nie wpłyną na położenie elementów. Ponadto <xref:System.Windows.Forms.ListViewItem.Position%2A> właściwości zmienia się automatycznie podczas <xref:System.Windows.Forms.ListView.View%2A> właściwość zawierający <xref:System.Windows.Forms.ListView> została zmieniona z <xref:System.Windows.Forms.View.SmallIcon>, <xref:System.Windows.Forms.View.LargeIcon>, lub <xref:System.Windows.Forms.View.Tile> widok do <xref:System.Windows.Forms.View.List> lub <xref:System.Windows.Forms.View.Details>. Gdy <xref:System.Windows.Forms.ListView> w <xref:System.Windows.Forms.View.SmallIcon>, <xref:System.Windows.Forms.View.LargeIcon>, lub <xref:System.Windows.Forms.View.Tile> ustawienie widoku <xref:System.Windows.Forms.ListViewItem.Position%2A> właściwość elementu spowoduje, że elementy znajdujące się w <xref:System.Windows.Forms.ListView> do można zmieniać kolejności.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.ListViewItem.Position%2A> właściwość <xref:System.Windows.Forms.ListViewItem>. Aby uruchomić ten przykład, wklej następujący kod do formularza systemu Windows i wywołanie `InitializePositionedListViewItems` z formularza <xref:System.Windows.Forms.Form.Load> metoda obsługi zdarzeń. Kliknij przycisk, aby wyświetlić elementy położenia.  
  
 [!code-csharp[System.Windows.Forms.ListViewItemWhidbeyMembers#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.ListViewItemWhidbeyMembers#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.ListViewItem.Position" /> Jest ustawiana podczas zawierający <see cref="T:System.Windows.Forms.ListView" /> jest w trybie wirtualnym.</exception>
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Drawing.Point" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa element z jego skojarzony <see cref="T:System.Windows.Forms.ListView" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest podobna funkcji <xref:System.Windows.Forms.ListView.ListViewItemCollection.Remove%2A> metody <xref:System.Windows.Forms.ListView.ListViewItemCollection> w <xref:System.Windows.Forms.ListView> formant, który zawiera element. Można użyć <xref:System.Windows.Forms.ListViewItem.Remove%2A> metodę, aby usunąć element z jego <xref:System.Windows.Forms.ListView> formantu. Ta funkcja może być przydatne, jeśli chcesz przenieść na inny element <xref:System.Windows.Forms.ListView> kontroli lub najpierw usuń element na podstawie żądania od użytkownika, aby usunąć element z wewnątrz aplikacji.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Remove(System.Windows.Forms.ListViewItem)" />
        <altmember cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public bool Selected { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Selected" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Property Selected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Selected { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy element jest zaznaczony.</summary>
        <value>
          <see langword="true" /> Jeśli element jest wybrany; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Windows.Forms.ListView.MultiSelect%2A> właściwość <xref:System.Windows.Forms.ListView> ustawiono element znajduje się w kontroli `true`, ustawienie dla tej właściwości wartości dodaje lub usuwa element z zestawu zaznaczonych elementów. Jeśli <xref:System.Windows.Forms.ListView.MultiSelect%2A> właściwość jest ustawiona na `false`, ustawiając wartość tej właściwości, aby wybrać element automatycznie anuluje wybór wszystkich innych elementów w <xref:System.Windows.Forms.ListView> formantu. Ta właściwość służy do określenia, czy element jest wybrany lub wybierz element w czasie wykonywania. Można uzyskać dostępu do wszystkich elementów, które są wybrane w <xref:System.Windows.Forms.ListView> formantu przy użyciu <xref:System.Windows.Forms.ListView.SelectedItems%2A?displayProperty=nameWithType> właściwości.  
  
> [!NOTE]
>  Elementy są wyświetlane tylko wtedy, gdy wybrane <xref:System.Windows.Forms.ListView> formant ma fokus. Wybierz elementy w odpowiedzi na użytkownika akcji np. Kliknij przycisk, pamiętaj wywołać <xref:System.Windows.Forms.Control.Focus%2A> metody oprócz ustawienie dla tej właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.ListView.Clear%2A?displayProperty=nameWithType> i <xref:System.Windows.Forms.ListViewItem.Selected%2A> elementów członkowskich. Aby uruchomić przykład, umieść następujący kod w zawierający formularz <xref:System.Windows.Forms.ListView> o nazwie `ListView1` i <xref:System.Windows.Forms.Button>, który znajduje się u dołu ekranu w formie o nazwie `Button1`. Wywołanie `InitializeListView` metody z Konstruktor elementu form lub <xref:System.Windows.Forms.Form.Load> metoda obsługi zdarzeń.  
  
 [!code-cpp[System.Windows.Forms.ListView4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView4/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView4/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView4/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.SelectedItems" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedIndices" />
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="protected virtual void Serialize (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Serialize(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Serialize (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Serialize(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> przechowuje dane potrzebne do serializacji elementu.</param>
        <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> reprezentujący źródłowego i docelowego strumienia serializowana.</param>
        <summary>Serializuje elementu.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Ta metoda powinna zostać zastąpiona, jeśli zamierzasz serializacji i deserializacji wersji pochodnej tej klasy i pochodne klasy zawiera informacje o stanie, który ma być serializacji i deserializacji. Klasa podstawowa implementacja tej metody należy wywołać w celu zapewnienia serializacji i deserializacji prawidłowo elementów.</para>
        </block>
        <altmember cref="M:System.Windows.Forms.ListViewItem.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
      </Docs>
    </Member>
    <Member MemberName="StateImageIndex">
      <MemberSignature Language="C#" Value="public int StateImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StateImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.StateImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property StateImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StateImageIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.NoneExcludedImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Forms.RelatedImageList("ListView.StateImageList")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia indeks obrazu stanu (obraz wybrany lub wyczyszczone pole wyboru, które wskazuje stan elementu) która jest wyświetlana dla elementu.</summary>
        <value>Liczony od zera indeks obrazu stanu w <see cref="T:System.Windows.Forms.ImageList" /> która jest wyświetlana dla elementu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy do określenia indeksu w <xref:System.Windows.Forms.ImageList> przypisane do <xref:System.Windows.Forms.ListView.StateImageList%2A> właściwości skojarzonego <xref:System.Windows.Forms.ListView> kontrolki, w którym są przechowywane obrazy stanu do wyświetlenia na lewo od elementu. Zazwyczaj obrazu stanu jest wybrany lub wyczyszczone pole wyboru lub obraz, który reprezentuje zaznaczone lub wyczyszczone stanów dla elementu. Jeśli nie określono wartości dla <xref:System.Windows.Forms.ListView.StateImageList%2A> właściwość <xref:System.Windows.Forms.ListView> dialogowe kontroli wyświetla domyślnie zaznaczone lub wyczyszczone wyboru <xref:System.Windows.Forms.ListView.CheckBoxes%2A> ma ustawioną właściwość formantu `true`.  
  
> [!NOTE]
>  Mimo że <xref:System.Windows.Forms.ImageList> określony w <xref:System.Windows.Forms.ListView.StateImageList%2A> właściwość może zawierać dowolną liczbę obrazów i <xref:System.Windows.Forms.ListViewItem.StateImageIndex%2A> właściwość można ustawić dowolną wartość równa lub niższa niż 14, tylko obrazy na pozycji indeksu 0 i 1 są wyświetlane jako obrazy stanu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość określona dla tej właściwości jest mniejsza niż -1.  
  
 —lub—  
  
 Wartość określona dla tej właściwości jest większa niż 14.</exception>
        <altmember cref="P:System.Windows.Forms.ListView.StateImageList" />
      </Docs>
    </Member>
    <Member MemberName="SubItems">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem.ListViewSubItemCollection SubItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem/ListViewSubItemCollection SubItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.SubItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubItems As ListViewItem.ListViewSubItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItem::ListViewSubItemCollection ^ SubItems { System::Windows::Forms::ListViewItem::ListViewSubItemCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListViewSubItemCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem+ListViewSubItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję zawierającą wszystkie elementy podrzędne elementu.</summary>
        <value>A <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" /> zawiera elementy podrzędne.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przy użyciu <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>, można dodać elementy podrzędne, usuń elementy podrzędne i uzyskać liczba elementów podrzędnych. Aby uzyskać więcej informacji o zadaniach wykonanych z elementy podrzędne w kolekcji, zobacz <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection> klasy tematy dokumentacji.  
  
> [!NOTE]
>  Pierwszy podelementu w <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection> jest zawsze element, który jest właścicielem elementy podrzędne. Podczas wykonywania operacji na elementy podrzędne w kolekcji, pamiętaj odwołać indeks 1 zamiast 0, aby wprowadzić zmiany w podelement pierwszy.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.ListView> formantu, z których trzy <xref:System.Windows.Forms.ListViewItem> obiekty określone i trzy <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiekty określone dla każdego elementu. W przykładzie jest tworzony także <xref:System.Windows.Forms.ColumnHeader> obiektów, aby wyświetlić elementy podrzędne w widoku details. Dwa <xref:System.Windows.Forms.ImageList> obiekty również są tworzone w przykładzie kodu, aby zapewnić obrazy dla <xref:System.Windows.Forms.ListViewItem> obiektów. Te <xref:System.Windows.Forms.ImageList> obiekty są dodawane do <xref:System.Windows.Forms.ListView.LargeImageList%2A> i <xref:System.Windows.Forms.ListView.SmallImageList%2A> właściwości. W przykładzie użyto następujących właściwości w tworzeniu <xref:System.Windows.Forms.ListView> sterowania:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Należy dodać kodu do <xref:System.Windows.Forms.Form> i wywołaj metodę utworzony w przykładzie z konstruktora lub innej metody w formularzu. Przykład wymaga, aby obrazy o nazwie `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, i `MyLargeImage2` znajdują się w katalogu głównym dysku C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> przechowuje dane potrzebne do serializacji elementu.</param>
        <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> reprezentujący źródłowego i docelowego strumienia serializowana.</param>
        <summary>Serializuje elementu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt zawierający dane do skojarzenia z elementem.</summary>
        <value>Obiekt, który zawiera informacje, które są skojarzone z elementem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.Tag%2A> Właściwości może służyć do przechowywania wszystkich obiektów, które chcesz skojarzyć z elementem. Mimo że można przechowywać dowolny element <xref:System.Windows.Forms.ListViewItem.Tag%2A> właściwość jest zwykle używana do przechowywania informacji o ciągu dotyczące pozycji, takich jak identyfikator unikatowy lub indeks elementu w danych w bazie danych.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak zainicjować <xref:System.Windows.Forms.ListViewItem> i ustaw <xref:System.Windows.Forms.ListViewItem.Tag%2A> i <xref:System.Windows.Forms.ListViewItem.Text%2A> właściwości. Do uruchomienia tego przykładu, umieść następujący kod w formularzu, która zawiera <xref:System.Windows.Forms.ListView> o nazwie `ListView1`i Wywołaj `InitializeListViewItems` z konstruktora formularza lub <xref:System.Windows.Forms.Form.Load> metoda obsługi zdarzeń.  
  
 [!code-cpp[System.Windows.Forms.ListViewItemExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListViewItemExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListViewItemExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst elementu.</summary>
        <value>Tekst do wyświetlenia dla elementu. To nie powinna przekraczać 259 znaków.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.Text%2A> Właściwości umożliwia zmianę tekstu wyświetlanego elementu. Tekst <xref:System.Windows.Forms.ListViewItem> nie może przekraczać 259 znaków lub mogą wystąpić nieoczekiwane zachowanie.  
  
 Można użyć <xref:System.Windows.Forms.ListViewItem.BackColor%2A>, <xref:System.Windows.Forms.ListViewItem.ForeColor%2A>, i <xref:System.Windows.Forms.ListViewItem.Font%2A> właściwości, aby określić sposób wyświetlania tekstu. <xref:System.Windows.Forms.ListView> Klasa udostępnia <xref:System.Windows.Forms.ListView.LabelWrap%2A> właściwość, która określa, czy tekst jest zawijany do następnego wiersza, czy jest wyświetlany w jednym wierszu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak zainicjować <xref:System.Windows.Forms.ListViewItem> i ustaw <xref:System.Windows.Forms.ListViewItem.Tag%2A> i <xref:System.Windows.Forms.ListViewItem.Text%2A> właściwości. Do uruchomienia tego przykładu, umieść następujący kod w nadrzędnym formularza <xref:System.Windows.Forms.ListView> o nazwie `ListView1`i Wywołaj `InitializeListViewItems` z konstruktora formularza lub <xref:System.Windows.Forms.Form.Load> metoda obsługi zdarzeń.  
  
 [!code-cpp[System.Windows.Forms.ListViewItemExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListViewItemExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListViewItemExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListViewItem.BackColor" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ForeColor" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.Font" />
        <altmember cref="P:System.Windows.Forms.ListView.LabelWrap" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipText">
      <MemberSignature Language="C#" Value="public string ToolTipText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTipText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ToolTipText" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTipText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTipText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst wyświetlany, gdy wskaźnik myszy znajduje się na <see cref="T:System.Windows.Forms.ListViewItem" />.</summary>
        <value>Tekst wyświetlany, gdy wskaźnik myszy znajduje się na <see cref="T:System.Windows.Forms.ListViewItem" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli oba <xref:System.Windows.Forms.ListViewItem> i jego zawierający <xref:System.Windows.Forms.ListView> etykietki narzędzi ustawiono, tylko etykietkę narzędzia dla <xref:System.Windows.Forms.ListViewItem> będą wyświetlane.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.ListView.ShowItemToolTips%2A?displayProperty=nameWithType> i <xref:System.Windows.Forms.ListViewItem.ToolTipText%2A> właściwości. Aby uruchomić ten przykład, Wklej kod do formularza systemu Windows i wywołanie `InitializeItemsWithToolTips` z konstruktora formularza lub <xref:System.Windows.Forms.Form.Load> metoda obsługi zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.ListViewItemWhidbeyMembers#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.ListViewItemWhidbeyMembers#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca ciąg, który reprezentuje bieżący obiekt.</summary>
        <returns>Ciąg, który reprezentuje bieżący obiekt.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
    <Member MemberName="UseItemStyleForSubItems">
      <MemberSignature Language="C#" Value="public bool UseItemStyleForSubItems { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseItemStyleForSubItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems" />
      <MemberSignature Language="VB.NET" Value="Public Property UseItemStyleForSubItems As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseItemStyleForSubItems { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą czy <see cref="P:System.Windows.Forms.ListViewItem.Font" />, <see cref="P:System.Windows.Forms.ListViewItem.ForeColor" />, i <see cref="P:System.Windows.Forms.ListViewItem.BackColor" /> właściwości elementu służą do jego elementy podrzędne.</summary>
        <value>
          <see langword="true" /> Jeśli wszystkie elementy podrzędne użyć czcionkę, kolor pierwszego planu i koloru tła elementu; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie chcesz mieć kolor tła jednolite, kolor pierwszego planu i czcionki używany w przypadku wszystkich elementów subitems w Twojej <xref:System.Windows.Forms.ListView> sterowania, można ustawić tę właściwość `false`. Jeśli ta właściwość jest skonfigurowana `true`, wszelkie zmiany wprowadzone do podelementu <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Font%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor%2A?displayProperty=nameWithType>, i <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.BackColor%2A?displayProperty=nameWithType> właściwości są ignorowane, a zamiast tego są używane wartości elementu. Tej właściwości można użyć, aby określić inny kolor tekstu, kolor tła lub czcionki do użycia dla podelementów, aby wyróżnić elementu, gdy elementy podrzędne są wyświetlane w <xref:System.Windows.Forms.ListView> formantu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób ustawiania <xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A> właściwości `false` do definiowania niestandardowych styl <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiektów. W przykładzie pokazano również sposób ustawiania <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor%2A> i <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Font%2A> właściwości. Aby uruchomić przykład, wklej następujący kod do formularza i wywołanie `InitializeListView` metody w Konstruktorze formularza lub <xref:System.Windows.Forms.Form.Load> metoda obsługi zdarzeń.  
  
 [!code-cpp[System.Windows.Forms.ListViewItemStyle#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListViewItemStyle#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListViewItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListViewItem.ForeColor" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.BackColor" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.Font" />
      </Docs>
    </Member>
  </Members>
</Type>