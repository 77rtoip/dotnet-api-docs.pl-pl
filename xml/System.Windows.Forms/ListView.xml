<Type Name="ListView" FullName="System.Windows.Forms.ListView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4a54d44190e023175d39103c977ad5290b5440c9" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69185056" /></Metadata><TypeSignature Language="C#" Value="public class ListView : System.Windows.Forms.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListView extends System.Windows.Forms.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListView" />
  <TypeSignature Language="VB.NET" Value="Public Class ListView&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListView : System::Windows::Forms::Control" />
  <TypeSignature Language="F#" Value="type ListView = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedIndexChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Items")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ListViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Windows.Forms.Docking(System.Windows.Forms.DockingBehavior.Ask)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ListViewDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ListViewDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje kontrolkę widok listy systemu Windows, która wyświetla kolekcję elementów, które mogą być wyświetlane przy użyciu jednego z czterech różnych widoków.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView> Kontrolka pozwala wyświetlić listę elementów z tekstem elementu, a opcjonalnie ikonę identyfikującą typ elementu. Na przykład lista plików Eksploratora Windows jest podobna do <xref:System.Windows.Forms.ListView> kontrolki. Wyświetla listę plików i folderów aktualnie wybranych w drzewie. Każdy plik i folder zawiera skojarzoną z nim ikonę, aby ułatwić identyfikację typu pliku lub folderu. Klasa reprezentuje element <xref:System.Windows.Forms.ListView> w kontrolce. <xref:System.Windows.Forms.ListViewItem> Elementy wyświetlane na liście mogą być wyświetlane w jednym z pięciu różnych widoków. Elementy mogą być wyświetlane jako duże ikony, małe ikony lub małe ikony na liście pionowej. Elementy mogą także mieć elementy podrzędne, które zawierają informacje związane z elementem nadrzędnym. Widok Szczegóły pozwala wyświetlić element i jego elementy podrzędne w siatce z nagłówkami kolumn, które identyfikują informacje wyświetlane w podmiocie. Widok kafelków, który ma ograniczoną dostępność, jak opisano poniżej, umożliwia wyświetlenie elementu i jego elementów podrzędnych jako kafelka zawierającego dużą ikonę obok informacji tekstowych. <xref:System.Windows.Forms.ListView>obsługuje pojedyncze lub wielokrotne zaznaczenie. Funkcja wielokrotnego wyboru umożliwia użytkownikowi wybranie z listy elementów w sposób podobny do <xref:System.Windows.Forms.ListBox> kontrolki. Ponadto użytkownik może aktywować wybrane elementy, aby wykonać zadanie. Można na przykład użyć <xref:System.Windows.Forms.ListView> kontrolki do wyświetlenia listy plików, które aplikacja może otworzyć i wykorzystać. Użytkownik może wybrać pliki do otwarcia, a następnie kliknąć je dwukrotnie, aby aktywować elementy i otworzyć pliki w aplikacji. Można również wyświetlić pola wyboru, <xref:System.Windows.Forms.ListView.CheckBoxes%2A> używając właściwości, aby zezwolić użytkownikowi na sprawdzenie elementów, dla których chcą wykonać akcję. <xref:System.Windows.Forms.ListView> Możesz użyć <xref:System.Windows.Forms.ListView> kontrolki na różne sposoby. Kontrolka może służyć do wyświetlania informacji z aplikacji, bazy danych lub pliku tekstowego. <xref:System.Windows.Forms.ListView> Może również służyć do uzyskiwania informacji od użytkownika, takich jak wybór zestawu plików do przetworzenia.  
  
 <xref:System.Windows.Forms.ListView>zapewnia dużą liczbę właściwości, które zapewniają elastyczność w wyglądzie i zachowaniu. <xref:System.Windows.Forms.ListView.View%2A> Właściwość pozwala zmienić sposób wyświetlania elementów. <xref:System.Windows.Forms.ListView.StateImageList%2A> <xref:System.Windows.Forms.ListView.CheckBoxes%2A> Właściwości, <xref:System.Windows.Forms.ListView.SmallImageList%2A>i umożliwiająokreślenie<xref:System.Windows.Forms.ImageList> obiektów, które zawierają obrazy wyświetlane dla elementów i, w przypadku, pól wyboru, które są wyświetlane, gdy <xref:System.Windows.Forms.ListView.StateImageList%2A> <xref:System.Windows.Forms.ListView.LargeImageList%2A> Właściwość jest ustawiona na `true`. Aby określić, które elementy są zaznaczone, możesz użyć <xref:System.Windows.Forms.ListView.CheckedItems%2A> właściwości, aby <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection> uzyskać dostęp do kolekcji. Właściwość umożliwia dostęp <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>do obiektu, w którym są przechowywane nagłówki kolumn, <xref:System.Windows.Forms.ListView.View%2A> które są wyświetlane, gdy właściwość kontrolki jest ustawiona na <xref:System.Windows.Forms.View.Details>. <xref:System.Windows.Forms.ListView.Columns%2A> Elementy są dodawane i usuwane z <xref:System.Windows.Forms.ListView> <xref:System.Windows.Forms.ListView.Items%2A> właściwości do. <xref:System.Windows.Forms.ListView.Items%2A> Właściwość umożliwia<xref:System.Windows.Forms.ListView.ListViewItemCollection> dostęp do kontrolki, która zapewnia metody manipulowania elementami w formancie. Jeśli chcesz zezwolić użytkownikowi na edytowanie tekstu elementu, możesz użyć <xref:System.Windows.Forms.ListView.LabelEdit%2A> właściwości. Gdy kontrolka zawiera dużą liczbę elementów, jest ona często łatwiejsza dla użytkownika, aby widziała je na sortowanej liście. Możesz użyć <xref:System.Windows.Forms.ListView.Sorting%2A> właściwości, aby posortować elementy alfabetycznie. Możesz również całkowicie dostosować wygląd <xref:System.Windows.Forms.ListView> formantu. W <xref:System.Windows.Forms.ListView.OwnerDraw%2A> tym celu należy ustawić właściwość na `true` i obsłużyć jedno lub więcej z następujących zdarzeń: <xref:System.Windows.Forms.ListView.DrawItem>, <xref:System.Windows.Forms.ListView.DrawSubItem>, <xref:System.Windows.Forms.ListView.DrawColumnHeader>.  
  
 Wiele właściwości <xref:System.Windows.Forms.ListView> kontrolki jest używanych, <xref:System.Windows.Forms.ListView.View%2A> gdy właściwość kontrolki jest ustawiona na <xref:System.Windows.Forms.View.Details>. Właściwość zezwala użytkownikowi <xref:System.Windows.Forms.ListView> kontrolce na ponowną konfigurację kolejności kolumn w czasie wykonywania. <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A> <xref:System.Windows.Forms.ListView.FullRowSelect%2A> Właściwość umożliwia wybranie elementu i jego elementów SubItems zamiast tylko elementu. Aby wyświetlić linie siatki w widoku szczegółów <xref:System.Windows.Forms.ListView>, aby zidentyfikować granice elementów i podelementów w, można <xref:System.Windows.Forms.ListView.GridLines%2A> użyć właściwości. <xref:System.Windows.Forms.ListView.HeaderStyle%2A> Właściwość pozwala określić typ nagłówków kolumn do wyświetlenia.  
  
 Kontrolka może działać w trybie wirtualnym, <xref:System.Windows.Forms.ListViewItem> w którym obiekty są generowane dynamicznie, a nie przechowywane <xref:System.Windows.Forms.ListView.Items%2A> w kolekcji. <xref:System.Windows.Forms.ListView> Może to być przydatne w przypadku bardzo dużych list lub list, których zawartość często zmienia się. Aby włączyć tryb wirtualny, należy ustawić <xref:System.Windows.Forms.ListView.VirtualMode%2A> właściwość na `true` i obsłużyć <xref:System.Windows.Forms.ListView.CacheVirtualItems> <xref:System.Windows.Forms.ListView.RetrieveVirtualItem>zdarzenia, <xref:System.Windows.Forms.ListView.SearchForVirtualItem> i.  
  
 Oprócz wielu właściwości, które są dostępne dla <xref:System.Windows.Forms.ListView> formantu, istnieją metody i zdarzenia, które mogą być używane przez aplikację w celu zapewnienia dodatkowych funkcji. <xref:System.Windows.Forms.ListView> Metody <xref:System.Windows.Forms.ListView.BeginUpdate%2A> <xref:System.Windows.Forms.ListView> i <xref:System.Windows.Forms.ListView.EndUpdate%2A> pozwalają zwiększyć wydajność podczas dodawania wielu elementów do a, uniemożliwiając odświeżenie formantu przy każdym dodawaniu elementu. <xref:System.Windows.Forms.ListView> Jeśli kontrolka wyświetla elementy i podelementy, warto podać funkcjonalność, gdy użytkownik kliknie prawym przyciskiem myszy element podrzędny. Aby określić element, który jest kliknięty, można użyć <xref:System.Windows.Forms.ListView.GetItemAt%2A> metody. Podczas sprawdzania poprawności elementów po ich edycji użytkownik może chcieć wyświetlić określony element użytkownikowi, który ma zostać zmieniony. <xref:System.Windows.Forms.ListView.EnsureVisible%2A> Metodę można wywołać, aby upewnić się, że określony element znajduje się w obszarze widocznym formantu.  
  
 Jeśli właściwość <xref:System.Windows.Forms.ListView.LabelEdit%2A> jest ustawiona na `true`, można wykonać zadania, takie jak Walidacja edytowanego tekstu przed i po zmianie tekstu przez utworzenie obsługi zdarzeń dla <xref:System.Windows.Forms.ListView.BeforeLabelEdit> zdarzeń i <xref:System.Windows.Forms.ListView.AfterLabelEdit> . Aby wykonać zadania <xref:System.Windows.Forms.ListView>, takie jak otwieranie pliku lub wyświetlanie okna dialogowego umożliwiającego Edytowanie elementu wyświetlanego w, można utworzyć procedurę obsługi zdarzeń <xref:System.Windows.Forms.ListView.ItemActivate> dla zdarzenia. Jeśli zezwolisz użytkownikowi na sortowanie elementów w <xref:System.Windows.Forms.ListView> elemencie po kliknięciu nagłówka kolumny, możesz utworzyć procedurę obsługi zdarzeń <xref:System.Windows.Forms.ListView.ColumnClick> dla zdarzenia w celu przeprowadzenia sortowania. Gdy właściwość jest ustawiona na `true`, można określić, kiedy nastąpi zmiana stanu sprawdzania elementu przez obsługę <xref:System.Windows.Forms.ListView.ItemCheck> zdarzenia. <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
 Można również ustawić obraz tła dla <xref:System.Windows.Forms.ListView> <xref:System.Windows.Forms.Control.BackgroundImage%2A> właściwości. Aby można było poprawnie wyświetlić <xref:System.STAThreadAttribute> obraz tła `Main` dla <xref:System.Windows.Forms.ListView> formantu, aplikacja musi mieć w swojej metodzie. Ponadto, jeśli <xref:System.Windows.Forms.ListView> formant z obrazem tła jest hostowany w programie Internet Explorer, określ comctl32. dll w wersji 6,0 jako zestaw zależny w pliku manifestu aplikacji, aby upewnić się, że obraz tła jest wyświetlany.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Control.Cursor%2A> Ustawienie właściwości <xref:System.Windows.Forms.ListView> kontrolki nie ma wpływu na wygląd kursora w [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] wersji 1,1 i starszych.  
  
 Systemy Windows XP i Windows Server 2003 oferują trzy funkcje, które <xref:System.Windows.Forms.ListView> rozszerzają formant, gdy aplikacja <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> wywołuje metodę: widok kafelka, grupowanie i znacznik wstawiania.  
  
 Widok kafelków umożliwia równoważenie informacji graficznych i tekstowych poprzez wyświetlanie elementów i tekstu podelementu obok dużych ikon. Ustaw właściwość na <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType> , aby włączyć to zachowanie. <xref:System.Windows.Forms.ListView.View%2A>  
  
 Funkcja grupowania pozwala wizualnie grupować elementy w powiązane kategorie. Użyj właściwości <xref:System.Windows.Forms.ListView.Groups%2A> , aby dodać <xref:System.Windows.Forms.ListViewGroup> obiekty do <xref:System.Windows.Forms.ListView> kontrolki, gdy chcesz włączyć tę funkcję. Aby tymczasowo wyłączyć funkcję, należy ustawić <xref:System.Windows.Forms.ListView.ShowGroups%2A> właściwość na. `false`  
  
 Funkcja znacznika wstawiania umożliwia udostępnienie elementów przeciągania i upuszczania za pomocą wizualizacji wizualnych w celu wskazania lokalizacji upuszczania. Użyj obiektu pobranego za pomocą <xref:System.Windows.Forms.ListView.InsertionMark%2A> właściwości, aby wyświetlić znacznik wstawiania. <xref:System.Windows.Forms.ListViewInsertionMark>  
  
 Te funkcje są dostępne tylko w systemach Windows XP i Windows Server 2003. W starszych systemach operacyjnych kod, który odnosi się do tych funkcji, nie działa, widok kafelka jest wyświetlany jako widok dużej ikony, a znacznik wstawiania i grupy nie są wyświetlane. W niektórych przypadkach można uwzględnić kod, który określa, czy te funkcje są dostępne, i zapewnić alternatywne funkcje, gdy są niedostępne. Te funkcje są dostępne w tej samej bibliotece, która udostępnia funkcję motywów systemu operacyjnego. Aby sprawdzić dostępność tej biblioteki, wywołaj <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> metodę przeciążenia metody i przekaż <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> wartość.  
  
 W poniższej tabeli przedstawiono niektóre <xref:System.Windows.Forms.ListView> elementy członkowskie i widoki, w których są one ważne.  
  
|Element członkowski ListView|Widok|  
|---------------------|----------|  
|<xref:System.Windows.Forms.ListView.Alignment%2A>wartość|<xref:System.Windows.Forms.View.SmallIcon> lub <xref:System.Windows.Forms.View.LargeIcon>|  
|<xref:System.Windows.Forms.ListView.AutoArrange%2A>wartość|<xref:System.Windows.Forms.View.SmallIcon> lub <xref:System.Windows.Forms.View.LargeIcon>|  
|<xref:System.Windows.Forms.ListView.AutoResizeColumn%2A>Method|<xref:System.Windows.Forms.View.Details>|  
|<xref:System.Windows.Forms.ListView.Columns%2A>wartość|<xref:System.Windows.Forms.View.Details> lub <xref:System.Windows.Forms.View.Tile>|  
|<xref:System.Windows.Forms.ListView.DrawSubItem>wydarzen|<xref:System.Windows.Forms.View.Details>|  
|<xref:System.Windows.Forms.ListView.FindItemWithText%2A>Method|<xref:System.Windows.Forms.View.Details>, <xref:System.Windows.Forms.View.List>lub<xref:System.Windows.Forms.View.Tile>|  
|<xref:System.Windows.Forms.ListView.FindNearestItem%2A>Method|<xref:System.Windows.Forms.View.SmallIcon> lub <xref:System.Windows.Forms.View.LargeIcon>|  
|<xref:System.Windows.Forms.ListView.GetItemAt%2A>Method|<xref:System.Windows.Forms.View.Details> lub <xref:System.Windows.Forms.View.Tile>|  
|<xref:System.Windows.Forms.ListView.Groups%2A>wartość|Wszystkie widoki z wyjątkiem<xref:System.Windows.Forms.View.List>|  
|<xref:System.Windows.Forms.ListView.HeaderStyle%2A>wartość|<xref:System.Windows.Forms.View.Details>|  
|<xref:System.Windows.Forms.ListView.InsertionMark%2A>wartość|<xref:System.Windows.Forms.View.LargeIcon>, <xref:System.Windows.Forms.View.SmallIcon>lub<xref:System.Windows.Forms.View.Tile>|  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.ListView> formant z trzema <xref:System.Windows.Forms.ListViewItem> określonymi obiektami i trzema <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiektami określonymi dla każdego elementu. Przykład tworzy <xref:System.Windows.Forms.ColumnHeader> również obiekty do wyświetlania elementów podelementowych w widoku szczegółów. Dwa <xref:System.Windows.Forms.ImageList> obiekty są również tworzone w przykładzie kodu, aby zapewnić obrazy <xref:System.Windows.Forms.ListViewItem> dla obiektów. Te <xref:System.Windows.Forms.ImageList> obiekty są dodawane <xref:System.Windows.Forms.ListView.LargeImageList%2A> do właściwości i <xref:System.Windows.Forms.ListView.SmallImageList%2A> . W przykładzie są stosowane następujące właściwości podczas tworzenia <xref:System.Windows.Forms.ListView> kontrolki:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Ten przykład wymaga, aby dodano kod do <xref:System.Windows.Forms.Form> i wywołać metodę utworzoną w przykładzie z konstruktora lub innej metody w formularzu. Przykład wymaga również, aby obrazy o `MySmallImage1`nazwach `MyLargeImage1` `MySmallImage2`,, `MyLargeImage2` i znajdowały się w katalogu głównym dysku C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListViewItem" />
    <altmember cref="T:System.Windows.Forms.ImageList" />
    <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ListView" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.ListView> formant z trzema <xref:System.Windows.Forms.ListViewItem> określonymi obiektami i trzema <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiektami określonymi dla każdego elementu. Przykład tworzy <xref:System.Windows.Forms.ColumnHeader> również obiekty do wyświetlania elementów podelementowych w widoku szczegółów. Dwa <xref:System.Windows.Forms.ImageList> obiekty są również tworzone w przykładzie kodu, aby zapewnić obrazy <xref:System.Windows.Forms.ListViewItem> dla obiektów. Te <xref:System.Windows.Forms.ImageList> obiekty są dodawane <xref:System.Windows.Forms.ListView.LargeImageList%2A> do właściwości i <xref:System.Windows.Forms.ListView.SmallImageList%2A> . W przykładzie są stosowane następujące właściwości podczas tworzenia <xref:System.Windows.Forms.ListView> kontrolki:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Ten przykład wymaga, aby dodano kod do <xref:System.Windows.Forms.Form> i wywołać metodę utworzoną w przykładzie z konstruktora lub innej metody w formularzu. Przykład wymaga również, aby obrazy o `MySmallImage1`nazwach `MyLargeImage1` `MySmallImage2`,, `MyLargeImage2` i znajdowały się w katalogu głównym dysku C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activation">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ItemActivation Activation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ItemActivation Activation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Activation" />
      <MemberSignature Language="VB.NET" Value="Public Property Activation As ItemActivation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ItemActivation Activation { System::Windows::Forms::ItemActivation get(); void set(System::Windows::Forms::ItemActivation value); };" />
      <MemberSignature Language="F#" Value="member this.Activation : System.Windows.Forms.ItemActivation with get, set" Usage="System.Windows.Forms.ListView.Activation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemActivation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ akcji, które użytkownik musi wykonać, aby aktywować element.</summary>
        <value>Jedna z <see cref="T:System.Windows.Forms.ItemActivation" /> wartości. Wartość domyślna to <see cref="F:System.Windows.Forms.ItemActivation.Standard" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość pozwala określić, <xref:System.Windows.Forms.ListView> w jaki sposób użytkownik będzie aktywować element w kontrolce. <xref:System.Windows.Forms.ListView.Activation%2A> Aktywowanie elementu w programie <xref:System.Windows.Forms.ListView> różni się od zaznaczenia po prostu elementu. Po aktywowaniu elementu akcja jest zwykle wykonywana w procedurze obsługi zdarzeń dla <xref:System.Windows.Forms.ListView.ItemActivate> zdarzenia. Na przykład po aktywowaniu elementu można otworzyć plik lub wyświetlić okno dialogowe, które umożliwia edytowanie elementu. Zwykle element jest dwukrotnie kliknięty przez użytkownika, aby go uaktywnić. Jeśli właściwość jest ustawiona na <xref:System.Windows.Forms.ItemActivation.OneClick>, kliknięcie elementu powoduje jego aktywowanie. <xref:System.Windows.Forms.ListView.Activation%2A> Ustawianie właściwości tak, <xref:System.Windows.Forms.ItemActivation.TwoClick> aby różni się od standardowej dwukrotnego kliknięcia, ponieważ dwa kliknięcia mogą mieć dowolny czas między nimi. <xref:System.Windows.Forms.ListView.Activation%2A>  
  
> [!NOTE]
>  Jeśli właściwość jest ustawiona na <xref:System.Windows.Forms.ItemActivation.OneClick> lub <xref:System.Windows.Forms.ItemActivation.TwoClick>, Edycja etykiet nie będzie <xref:System.Windows.Forms.ListView.LabelEdit%2A> dozwolona niezależnie od wartości właściwości. <xref:System.Windows.Forms.ListView.Activation%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Określona wartość nie jest jednym z <see cref="T:System.Windows.Forms.ItemActivation" /> elementów członkowskich.</exception>
        <altmember cref="T:System.Windows.Forms.ItemActivation" />
        <altmember cref="E:System.Windows.Forms.ListView.ItemActivate" />
      </Docs>
    </Member>
    <Member MemberName="AfterLabelEdit">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.LabelEditEventHandler AfterLabelEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.LabelEditEventHandler AfterLabelEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.AfterLabelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AfterLabelEdit As LabelEditEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::LabelEditEventHandler ^ AfterLabelEdit;" />
      <MemberSignature Language="F#" Value="member this.AfterLabelEdit : System.Windows.Forms.LabelEditEventHandler " Usage="member this.AfterLabelEdit : System.Windows.Forms.LabelEditEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LabelEditEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy użytkownik edytuje etykietę dla elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie <xref:System.Windows.Forms.ListView.AfterLabelEdit> występuje, gdy użytkownik zakończy modyfikowanie tekstu dla elementu. Nowy ciąg, który typ użytkownika dla elementu jest przekazanie do zdarzenia, a program obsługi zdarzeń może odrzucić zmianę. Jeśli program obsługi zdarzeń odrzuci zmianę, tekst zostanie przywrócony do tekstu, ponieważ był przed rozpoczęciem edytowania elementu przez użytkownika.  
  
> [!NOTE]
>  Ponieważ zdarzenie ma miejsce przed zatwierdzeniem przez Edytowanie etykiety, <xref:System.Windows.Forms.ListView.Sort%2A?displayProperty=nameWithType> wywołanie metody w procedurze obsługi dla tego zdarzenia spowoduje posortowanie elementu przy użyciu oryginalnej wartości. <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType>  
  
 Aby zdarzenie zostało wywołane <xref:System.Windows.Forms.ListView.LabelEdit%2A> , właściwość <xref:System.Windows.Forms.ListView> kontrolki musi być ustawiona na `true`wartość. <xref:System.Windows.Forms.ListView.AfterLabelEdit>  
  
 Można utworzyć procedurę obsługi zdarzeń dla <xref:System.Windows.Forms.ListView.BeforeLabelEdit> zdarzenia do wykonywania zadań, zanim użytkownik edytuje tekst elementu.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Windows.Forms.ListView.AfterLabelEdit> jak użyć zdarzenia, aby ograniczyć nowo edytowaną etykietę do znaków w alfabecie. W przykładzie zastosowano <xref:System.Text.ASCIIEncoding> klasę, aby uzyskać kod ASCII każdego znaku nowej etykiety. Jeśli znak jest między kodami ASCII, które reprezentują liczby, nie można zastosować nowej etykiety do elementu. Ten przykład wymaga utworzenia <xref:System.Windows.Forms.ListView> kontrolki w formularzu i dodania do niej elementów. Przykład wymaga również połączenia <xref:System.Windows.Forms.ListView.AfterLabelEdit> zdarzenia do procedury obsługi zdarzeń zdefiniowanej w przykładowym kodzie. Aby można było użyć <xref:System.Text.ASCIIEncoding> klasy, plik musi <xref:System.Text> zawierać przestrzeń nazw.  
  
 [!code-cpp[ListView.AfterLabelEdit#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.AfterLabelEdit/CPP/form1.cpp#1)]
 [!code-csharp[ListView.AfterLabelEdit#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.AfterLabelEdit/CS/form1.cs#1)]
 [!code-vb[ListView.AfterLabelEdit#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.AfterLabelEdit/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)" />
        <altmember cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
        <altmember cref="T:System.Windows.Forms.LabelEditEventHandler" />
        <altmember cref="P:System.Windows.Forms.ListView.LabelEdit" />
      </Docs>
    </Member>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewAlignment Alignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ListViewAlignment Alignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Alignment" />
      <MemberSignature Language="VB.NET" Value="Public Property Alignment As ListViewAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewAlignment Alignment { System::Windows::Forms::ListViewAlignment get(); void set(System::Windows::Forms::ListViewAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.Alignment : System.Windows.Forms.ListViewAlignment with get, set" Usage="System.Windows.Forms.ListView.Alignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia wyrównanie elementów w kontrolce.</summary>
        <value>Jedna z <see cref="T:System.Windows.Forms.ListViewAlignment" /> wartości. Wartość domyślna to <see cref="F:System.Windows.Forms.ListViewAlignment.Top" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość ma wpływ tylko na wyrównanie, <xref:System.Windows.Forms.ListView.View%2A> gdy właściwość jest ustawiona <xref:System.Windows.Forms.View.LargeIcon> na <xref:System.Windows.Forms.View.SmallIcon>lub. <xref:System.Windows.Forms.ListView.Alignment%2A>  
  
> [!NOTE]
>  Ta właściwość nie ma wpływu na <xref:System.Windows.Forms.ListView.View%2A> właściwość o <xref:System.Windows.Forms.View.List>wartości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Określona wartość nie jest jedną z <see cref="T:System.Windows.Forms.ListViewAlignment" /> wartości.</exception>
        <altmember cref="T:System.Windows.Forms.ListViewAlignment" />
      </Docs>
    </Member>
    <Member MemberName="AllowColumnReorder">
      <MemberSignature Language="C#" Value="public bool AllowColumnReorder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowColumnReorder" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.AllowColumnReorder" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowColumnReorder As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowColumnReorder { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowColumnReorder : bool with get, set" Usage="System.Windows.Forms.ListView.AllowColumnReorder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy użytkownik może przeciągać nagłówki kolumn w celu zmiany kolejności kolumn w formancie.</summary>
        <value><see langword="true" />Jeśli jest dozwolone Zmienianie kolejności kolumn metodą "przeciągnij i upuść"; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie wartości <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A> właściwości nie ma żadnego efektu, <xref:System.Windows.Forms.ListView.View%2A> chyba że właściwość jest ustawiona na <xref:System.Windows.Forms.View.Details>. Ta właściwość umożliwia użytkownikom zmianę położenia kolumn w kontrolce w czasie wykonywania. Gdy właściwość jest ustawiona na `true`, użytkownicy mogą umieścić kolumny w kontrolce, aby wyświetlić element i jego elementy podelementowe w taki sposób, aby spełniały ich potrzeby w aplikacji. <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.ListView> formant z trzema <xref:System.Windows.Forms.ListViewItem> określonymi obiektami i trzema <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiektami określonymi dla każdego elementu. Przykład tworzy <xref:System.Windows.Forms.ColumnHeader> również obiekty do wyświetlania elementów podelementowych w widoku szczegółów. Dwa <xref:System.Windows.Forms.ImageList> obiekty są również tworzone w przykładzie kodu, aby zapewnić obrazy <xref:System.Windows.Forms.ListViewItem> dla obiektów. Te <xref:System.Windows.Forms.ImageList> obiekty są dodawane <xref:System.Windows.Forms.ListView.LargeImageList%2A> do właściwości i <xref:System.Windows.Forms.ListView.SmallImageList%2A> . W przykładzie są stosowane następujące właściwości podczas tworzenia <xref:System.Windows.Forms.ListView> kontrolki:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Ten przykład wymaga, aby dodano kod do <xref:System.Windows.Forms.Form> i wywołać metodę utworzoną w przykładzie z konstruktora lub innej metody w formularzu. Przykład wymaga również, aby obrazy o `MySmallImage1`nazwach `MyLargeImage1` `MySmallImage2`,, `MyLargeImage2` i znajdowały się w katalogu głównym dysku C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ArrangeIcons">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rozmieszcza elementy w kontrolce, gdy są one wyświetlane jako ikony.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ArrangeIcons">
      <MemberSignature Language="C#" Value="public void ArrangeIcons ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ArrangeIcons() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ArrangeIcons" />
      <MemberSignature Language="VB.NET" Value="Public Sub ArrangeIcons ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ArrangeIcons();" />
      <MemberSignature Language="F#" Value="member this.ArrangeIcons : unit -&gt; unit" Usage="listView.ArrangeIcons " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rozmieszcza elementy w kontrolce, gdy są one wyświetlane jako ikony na podstawie wartości <see cref="P:System.Windows.Forms.ListView.Alignment" /> właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest przydatna tylko wtedy, <xref:System.Windows.Forms.ListView.View%2A> gdy właściwość jest ustawiona na <xref:System.Windows.Forms.View.LargeIcon> lub <xref:System.Windows.Forms.View.SmallIcon>. <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> Wywołanie tej wersji <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> metody rozmieszcza elementy na podstawie wartości <xref:System.Windows.Forms.ListView.Alignment%2A> właściwości. Aby elementy były wyrównane na podstawie wartości, która różni się od <xref:System.Windows.Forms.ListView.Alignment%2A> właściwości, użyj innej wersji <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.Alignment" />
      </Docs>
    </Member>
    <Member MemberName="ArrangeIcons">
      <MemberSignature Language="C#" Value="public void ArrangeIcons (System.Windows.Forms.ListViewAlignment value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ArrangeIcons(valuetype System.Windows.Forms.ListViewAlignment value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ArrangeIcons(System.Windows.Forms.ListViewAlignment)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ArrangeIcons (value As ListViewAlignment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ArrangeIcons(System::Windows::Forms::ListViewAlignment value);" />
      <MemberSignature Language="F#" Value="member this.ArrangeIcons : System.Windows.Forms.ListViewAlignment -&gt; unit" Usage="listView.ArrangeIcons value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListViewAlignment" />
      </Parameters>
      <Docs>
        <param name="value">Jedna z <see cref="T:System.Windows.Forms.ListViewAlignment" /> wartości.</param>
        <summary>Rozmieszcza elementy w formancie, gdy są wyświetlane jako ikony z określonym ustawieniem wyrównania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest przydatna tylko wtedy, <xref:System.Windows.Forms.ListView.View%2A> gdy właściwość jest ustawiona na <xref:System.Windows.Forms.View.LargeIcon> lub <xref:System.Windows.Forms.View.SmallIcon>. <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> Ta wersja <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> metody rozmieszcza ikony <xref:System.Windows.Forms.ListView> w oparciu o <xref:System.Windows.Forms.ListViewAlignment> wartość określoną w `value` parametrze. Wywołanie tej metody nie powoduje zmiany wartości <xref:System.Windows.Forms.ListView.Alignment%2A> właściwości formantu. Ta metoda służy do rozmieszczania ikon kontrolki przy użyciu innej wartości niż <xref:System.Windows.Forms.ListView.Alignment%2A> właściwość. Aby elementy były wyrównane na podstawie wartości <xref:System.Windows.Forms.ListView.Alignment%2A> właściwości, użyj innej wersji <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość określona w <paramref name="value" /> parametrze nie jest elementem członkowskim <see cref="T:System.Windows.Forms.ListViewAlignment" /> wyliczenia.</exception>
        <altmember cref="T:System.Windows.Forms.ListViewAlignment" />
        <altmember cref="P:System.Windows.Forms.ListView.Alignment" />
      </Docs>
    </Member>
    <Member MemberName="AutoArrange">
      <MemberSignature Language="C#" Value="public bool AutoArrange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoArrange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.AutoArrange" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoArrange As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoArrange { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoArrange : bool with get, set" Usage="System.Windows.Forms.ListView.AutoArrange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia czy ikony są automatycznie zachowywane.</summary>
        <value><see langword="true" />Jeśli ikony są automatycznie zachowywane i przyciągane do siatki; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.View%2A> <xref:System.Windows.Forms.View.LargeIcon> <xref:System.Windows.Forms.View.SmallIcon>Właściwość porządkuje tylko elementy <xref:System.Windows.Forms.ListView> w kontrolce, gdy właściwość jest ustawiona na lub. <xref:System.Windows.Forms.ListView.AutoArrange%2A> Aby zmienić wyrównanie elementów w <xref:System.Windows.Forms.ListView> kontrolce, <xref:System.Windows.Forms.ListView.Alignment%2A> Użyj właściwości. Możesz użyć <xref:System.Windows.Forms.ListView.AutoArrange%2A> , aby upewnić się, że wszystkie <xref:System.Windows.Forms.ListView> elementy w formancie są automatycznie rozmieszczane, aby uniknąć nakładania się w czasie wykonywania.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.Alignment" />
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumn">
      <MemberSignature Language="C#" Value="public void AutoResizeColumn (int columnIndex, System.Windows.Forms.ColumnHeaderAutoResizeStyle headerAutoResize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumn(int32 columnIndex, valuetype System.Windows.Forms.ColumnHeaderAutoResizeStyle headerAutoResize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.AutoResizeColumn(System.Int32,System.Windows.Forms.ColumnHeaderAutoResizeStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumn (columnIndex As Integer, headerAutoResize As ColumnHeaderAutoResizeStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumn(int columnIndex, System::Windows::Forms::ColumnHeaderAutoResizeStyle headerAutoResize);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumn : int * System.Windows.Forms.ColumnHeaderAutoResizeStyle -&gt; unit" Usage="listView.AutoResizeColumn (columnIndex, headerAutoResize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="headerAutoResize" Type="System.Windows.Forms.ColumnHeaderAutoResizeStyle" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Indeks (liczony od zera) kolumny do zmiany rozmiaru.</param>
        <param name="headerAutoResize">Jedna z <see cref="T:System.Windows.Forms.ColumnHeaderAutoResizeStyle" /> wartości.</param>
        <summary>Zmienia rozmiar podanej kolumny zgodnie ze wskazaniem stylu zmiany rozmiaru.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie tej metody jest skuteczne tylko po <xref:System.Windows.Forms.ListView> skonstruowaniu <xref:System.Windows.Forms.Form> i utworzeniu, a <xref:System.Windows.Forms.ListView> nagłówki i kolumny kolumn są wypełniane elementami. Jeśli nowe elementy są dodawane do <xref:System.Windows.Forms.ListView>, kolumny nie będą zmieniane, chyba że <xref:System.Windows.Forms.ListView.AutoResizeColumn%2A> zostanie ponownie wywołana.  
  
   
  
## Examples  
 Poniższy przykład inicjuje <xref:System.Windows.Forms.ListView> widok szczegółowy i automatycznie zmienia rozmiar kolumn <xref:System.Windows.Forms.ListView.AutoResizeColumn%2A> przy użyciu metody. Aby uruchomić ten przykład, wklej ten kod do formularza systemu Windows i Wywołaj `InitializeResizingListView` metodę z konstruktora lub <xref:System.Windows.Forms.Form.Load> procedury obsługi zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" />jest większa niż 0, <see cref="P:System.Windows.Forms.ListView.Columns" /> gdy jest<see langword="null" />  
  
—lub— 
 <paramref name="columnIndex" />jest mniejsza niż 0 lub większa niż liczba ustawionych kolumn.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="headerAutoResize" />nie jest elementem członkowskim <see cref="T:System.Windows.Forms.ColumnHeaderAutoResizeStyle" /> wyliczenia.</exception>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumns">
      <MemberSignature Language="C#" Value="public void AutoResizeColumns (System.Windows.Forms.ColumnHeaderAutoResizeStyle headerAutoResize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumns(valuetype System.Windows.Forms.ColumnHeaderAutoResizeStyle headerAutoResize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.AutoResizeColumns(System.Windows.Forms.ColumnHeaderAutoResizeStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumns (headerAutoResize As ColumnHeaderAutoResizeStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumns(System::Windows::Forms::ColumnHeaderAutoResizeStyle headerAutoResize);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumns : System.Windows.Forms.ColumnHeaderAutoResizeStyle -&gt; unit" Usage="listView.AutoResizeColumns headerAutoResize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="headerAutoResize" Type="System.Windows.Forms.ColumnHeaderAutoResizeStyle" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="headerAutoResize">Jedna z <see cref="T:System.Windows.Forms.ColumnHeaderAutoResizeStyle" /> wartości.</param>
        <summary>Zmienia rozmiar szerokości kolumn, zgodnie ze wskazaniem stylu zmiany rozmiaru.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie tej metody jest skuteczne tylko po <xref:System.Windows.Forms.ListView> skonstruowaniu <xref:System.Windows.Forms.Form> i utworzeniu, a <xref:System.Windows.Forms.ListView> nagłówki i kolumny kolumn są wypełniane elementami. Jeśli nowe elementy są dodawane do <xref:System.Windows.Forms.ListView>, kolumny nie będą zmieniane, chyba że <xref:System.Windows.Forms.ListView.AutoResizeColumns%2A> zostanie ponownie wywołana.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak zainicjować <xref:System.Windows.Forms.ListView> widok szczegółowy i automatycznie zmieniać rozmiar kolumn <xref:System.Windows.Forms.ListView.AutoResizeColumns%2A> przy użyciu metody. Aby uruchomić ten przykład, wklej ten kod do formularza systemu Windows i Wywołaj `InitializeResizingListView2` metodę z konstruktora lub <xref:System.Windows.Forms.Form.Load> procedury obsługi zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#9)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Windows.Forms.ListView.AutoResizeColumn(System.Int32,System.Windows.Forms.ColumnHeaderAutoResizeStyle)" />jest wywoływana z wartością inną niż <see cref="F:System.Windows.Forms.ColumnHeaderAutoResizeStyle.None" /> wtedy, gdy <see cref="P:System.Windows.Forms.ListView.View" /> nie jest ustawiona <see cref="F:System.Windows.Forms.View.Details" />na.</exception>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ListView.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor tła.</summary>
        <value>W <see cref="T:System.Drawing.Color" /> tle.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImage : System.Drawing.Image with get, set" Usage="System.Windows.Forms.ListView.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obraz tła wyświetlany w tym <see cref="T:System.Windows.Forms.ListView" /> formancie.</summary>
        <value>Obraz, który ma być wyświetlany w tle formantu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageChanged : EventHandler " Usage="member this.BackgroundImageChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wartość właściwości zostanie <see cref="P:System.Windows.Forms.ListView.BackgroundImage" /> zmieniona.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayout : System.Windows.Forms.ImageLayout with get, set" Usage="System.Windows.Forms.ListView.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Forms.ImageLayout" /> wartość.</summary>
        <value>Jedna z <see cref="T:System.Windows.Forms.ImageLayout" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość nie ma wpływu na układ obrazu <xref:System.Windows.Forms.ListView> tła kontrolki, dlatego nie jest wyświetlana w projektancie ani przez funkcję IntelliSense.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Określona wartość nie jest jedną z <see cref="T:System.Windows.Forms.ImageLayout" /> wartości.</exception>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayoutChanged : EventHandler " Usage="member this.BackgroundImageLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="P:System.Windows.Forms.ListView.BackgroundImageLayout" /> właściwość zostanie zmieniona.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageTiled">
      <MemberSignature Language="C#" Value="public bool BackgroundImageTiled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BackgroundImageTiled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BackgroundImageTiled" />
      <MemberSignature Language="VB.NET" Value="Public Property BackgroundImageTiled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BackgroundImageTiled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageTiled : bool with get, set" Usage="System.Windows.Forms.ListView.BackgroundImageTiled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy obraz <see cref="T:System.Windows.Forms.ListView" /> tła powinien być rozmieszczony sąsiadująco.</summary>
        <value><see langword="true" />Jeśli obraz <see cref="T:System.Windows.Forms.ListView" /> tła powinien być rozukładany, <see langword="false" />w przeciwnym razie. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość <xref:System.Windows.Forms.ListView.BackgroundImageTiled%2A> zwraca`false` , jeśli obraz nie jest ustawiony.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeLabelEdit">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.LabelEditEventHandler BeforeLabelEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.LabelEditEventHandler BeforeLabelEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeforeLabelEdit As LabelEditEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::LabelEditEventHandler ^ BeforeLabelEdit;" />
      <MemberSignature Language="F#" Value="member this.BeforeLabelEdit : System.Windows.Forms.LabelEditEventHandler " Usage="member this.BeforeLabelEdit : System.Windows.Forms.LabelEditEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LabelEditEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy użytkownik rozpocznie Edytowanie etykiety elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.BeforeLabelEdit> Zdarzenie występuje, gdy użytkownik rozpocznie modyfikowanie tekstu dla elementu. Jeśli program obsługi zdarzeń anuluje to zdarzenie, użytkownik nie może edytować tekstu. Możesz użyć tego zdarzenia, aby uniemożliwić użytkownikowi edytowanie określonych elementów w <xref:System.Windows.Forms.ListView> formancie. <xref:System.Windows.Forms.ListView.LabelEdit%2A> Jeśli właściwość `false` kontrolki<xref:System.Windows.Forms.ListView.BeforeLabelEdit> jest ustawiona na, zdarzenie nie zostanie wywołane; wszystkie próby edytowania etykiet elementów są automatycznie odrzucane. <xref:System.Windows.Forms.ListView>  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje obsługę <xref:System.Windows.Forms.ListView.BeforeLabelEdit> zdarzenia i <xref:System.Windows.Forms.LabelEditEventArgs.Item%2A?displayProperty=nameWithType> przy użyciu właściwości i <xref:System.Windows.Forms.LabelEditEventArgs.CancelEdit%2A?displayProperty=nameWithType> . Aby uruchomić przykład, wklej następujący kod do formularza, który zawiera <xref:System.Windows.Forms.ListView> kontrolkę o nazwie `ListView1` i zawierającą co najmniej trzy elementy. Upewnij się, że program obsługi zdarzeń w tym przykładzie jest skojarzony z jego wydarzeniem.  
  
 [!code-cpp[System.Windows.Forms.ListView3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView3/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)" />
        <altmember cref="E:System.Windows.Forms.ListView.AfterLabelEdit" />
        <altmember cref="T:System.Windows.Forms.LabelEditEventHandler" />
        <altmember cref="P:System.Windows.Forms.ListView.LabelEdit" />
      </Docs>
    </Member>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="public void BeginUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.BeginUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginUpdate();" />
      <MemberSignature Language="F#" Value="member this.BeginUpdate : unit -&gt; unit" Usage="listView.BeginUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Uniemożliwia kontrolowanie rysowania do momentu <see cref="M:System.Windows.Forms.ListView.EndUpdate" /> wywołania metody.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView> Preferowanym sposobem dodawania wielu elementów do programu jest <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> użycie metody <xref:System.Windows.Forms.ListView.ListViewItemCollection> (dostępnej za pomocą <xref:System.Windows.Forms.ListView.Items%2A> właściwości <xref:System.Windows.Forms.ListView>). Dzięki temu można dodać tablicę elementów do listy w ramach jednej operacji. Jeśli jednak chcesz dodać <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> elementy pojedynczo przy użyciu metody <xref:System.Windows.Forms.ListView.ListViewItemCollection> klasy <xref:System.Windows.Forms.ListView.BeginUpdate%2A> , możesz użyć metody, aby <xref:System.Windows.Forms.ListView> zapobiec odświeżeniu formantu przy każdym dodawaniu elementu. Po zakończeniu zadania dodawania elementów do formantu Wywołaj <xref:System.Windows.Forms.ListView.EndUpdate%2A> metodę, aby <xref:System.Windows.Forms.ListView> umożliwić odświeżenie. W ten sposób Dodawanie elementów może uniemożliwić migotanie rysowania w <xref:System.Windows.Forms.ListView> przypadku dodawania dużej liczby elementów do kontrolki.  
  
 Jeśli <xref:System.Windows.Forms.ListView.BeginUpdate%2A> jest wywoływana więcej niż raz, <xref:System.Windows.Forms.ListView.EndUpdate%2A> musi być wywoływana równorzędna liczba razy. Do momentu ostatniego wywołania <xref:System.Windows.Forms.ListView.EndUpdate%2A> do <xref:System.Windows.Forms.ListView> nie zostanie odświeżene. Inne niż to, wiele wywołań <xref:System.Windows.Forms.ListView.BeginUpdate%2A> nie ma wpływu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje inicjalizację <xref:System.Windows.Forms.ListView> kontrolki, aby zawierała pola wyboru. Pokazano również, jak używać <xref:System.Windows.Forms.ListView.BeginUpdate%2A> metod i. <xref:System.Windows.Forms.ListView.EndUpdate%2A> Aby uruchomić ten przykład, wklej następujący kod do formularza, który zawiera <xref:System.Windows.Forms.ListView> nazwę. `ListView1` `Load` Wywołaj `InitializeListView` metodę z konstruktora lub metody formularza.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.EndUpdate" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BorderStyle BorderStyle { System::Windows::Forms::BorderStyle get(); void set(System::Windows::Forms::BorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderStyle : System.Windows.Forms.BorderStyle with get, set" Usage="System.Windows.Forms.ListView.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia styl obramowania formantu.</summary>
        <value>Jedna z <see cref="T:System.Windows.Forms.BorderStyle" /> wartości. Wartość domyślna to <see cref="F:System.Windows.Forms.BorderStyle.Fixed3D" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Windows.Forms.ListView.BorderStyle%2A> właściwości, aby zmienić styl <xref:System.Windows.Forms.ListView> obramowania kontrolki tak, aby pasował do ustawień stylu obramowania innych kontrolek w formularzu. Na przykład, jeśli żadna z innych kontrolek w formularzu nie wyświetla obramowania, można ustawić <xref:System.Windows.Forms.ListView.BorderStyle%2A> Właściwość <xref:System.Windows.Forms.ListView> kontrolki <xref:System.Windows.Forms.BorderStyle.None> tak, aby pasowała do innych kontrolek.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Określona wartość nie jest jedną z <see cref="T:System.Windows.Forms.BorderStyle" /> wartości.</exception>
        <altmember cref="T:System.Windows.Forms.BorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="CacheVirtualItems">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.CacheVirtualItemsEventHandler CacheVirtualItems;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.CacheVirtualItemsEventHandler CacheVirtualItems" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.CacheVirtualItems" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CacheVirtualItems As CacheVirtualItemsEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::CacheVirtualItemsEventHandler ^ CacheVirtualItems;" />
      <MemberSignature Language="F#" Value="member this.CacheVirtualItems : System.Windows.Forms.CacheVirtualItemsEventHandler " Usage="member this.CacheVirtualItems : System.Windows.Forms.CacheVirtualItemsEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CacheVirtualItemsEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy zawartość obszaru wyświetlania dla <see cref="T:System.Windows.Forms.ListView" /> w trybie wirtualnym została zmieniona, <see cref="T:System.Windows.Forms.ListView" /> a program ustali, że jest wymagany nowy zakres elementów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie występuje tylko wtedy <xref:System.Windows.Forms.ListView.VirtualMode%2A> , `true`gdy jest. Obsługa tego zdarzenia umożliwia <xref:System.Windows.Forms.ListView> zaktualizowanie informacji o elementach przechowywanych w pamięci podręcznej tak, aby były one łatwo dostępne. Może to poprawić wydajność na dużych listach lub listę elementów, których elementy są kosztowne do obliczenia.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń sprawdza, czy Odświeżanie pamięci podręcznej jest naprawdę konieczne, a następnie ponownie kompiluje pamięć podręczną. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Windows.Forms.ListView.VirtualMode%2A> właściwości.  
  
 [!code-csharp[System.Windows.Forms.ListView.VirtualMode#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/cs/VirtualMode.cs#3)]
 [!code-vb[System.Windows.Forms.ListView.VirtualMode#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/vb/VirtualMode.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckBoxes">
      <MemberSignature Language="C#" Value="public bool CheckBoxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckBoxes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckBoxes" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckBoxes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckBoxes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckBoxes : bool with get, set" Usage="System.Windows.Forms.ListView.CheckBoxes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy pole wyboru pojawia się obok każdego elementu w kontrolce.</summary>
        <value><see langword="true" />Jeśli pole wyboru pojawia się obok każdego elementu w <see cref="T:System.Windows.Forms.ListView" /> formancie; w przeciwnym razie,. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.CheckBoxes%2A> Właściwość umożliwia wyświetlenie pola wyboru obok każdego elementu na liście. Dzięki temu aplikacja może wyświetlać listę elementów (i elementów SubItems, jeśli <xref:System.Windows.Forms.ListView.View%2A> właściwość jest ustawiona na `View.Details`), którą można wybrać, klikając pole wyboru. Właściwość oferuje sposób zaznaczania wielu elementów <xref:System.Windows.Forms.ListView> w kontrolce bez użycia klawisza CTRL. <xref:System.Windows.Forms.ListView.CheckBoxes%2A> W zależności od aplikacji używanie pól wyboru do zaznaczania elementów zamiast standardowej metody wyboru wielokrotnego może być łatwiejsze dla użytkownika. Nawet jeśli <xref:System.Windows.Forms.ListView.MultiSelect%2A> Właściwość <xref:System.Windows.Forms.ListView> kontrolki jest ustawiona na `false`, nadal można wyświetlać pola wyboru i udostępniać użytkownikowi wiele możliwości wyboru. Ta funkcja może być przydatna, jeśli nie chcesz, aby wiele elementów zostało wybranych jeszcze w dalszym ciągu, aby umożliwić użytkownikowi wybranie wielu elementów z listy w celu wykonania operacji w aplikacji.  
  
 Aby określić, kiedy element został sprawdzony, Utwórz procedurę obsługi zdarzeń dla <xref:System.Windows.Forms.ListView.ItemCheck> zdarzenia. Aby wyświetlić wszystkie elementy <xref:System.Windows.Forms.ListView>, które są zaznaczone, <xref:System.Windows.Forms.ListView.CheckedItems%2A> Użyj właściwości, aby uzyskać dostęp <xref:System.Windows.Forms.ListView.CheckedIndexCollection> do kontrolki. Aby uzyskać indeksy wszystkich elementów <xref:System.Windows.Forms.ListView>, które są zaznaczone, <xref:System.Windows.Forms.ListView.CheckedIndices%2A> Użyj właściwości.  
  
 Jeśli jest określony <xref:System.Windows.Forms.ListView.StateImageList%2A> we właściwości, zamiast pola wyboru <xref:System.Windows.Forms.ImageList> są wyświetlane obrazy z położeniami indeksu 0 i 1. <xref:System.Windows.Forms.ImageList> Obraz w pozycji indeks 0 jest wyświetlany zamiast pola wyboru niezaznaczone, a zamiast zaznaczone pole wyboru zostanie wyświetlony obraz z pozycją indeks 1.  
  
> [!NOTE]
>  `true` W<xref:System.Windows.Forms.ListView.ItemCheck> przypadku ustawienia tej właściwości na wartość występuje zdarzenie.  
>   
>  Pola wyboru nie są wyświetlane, gdy <xref:System.Windows.Forms.ListView.View%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.View.Tile>.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.ListView> formant z trzema <xref:System.Windows.Forms.ListViewItem> określonymi obiektami i trzema <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiektami określonymi dla każdego elementu. Przykład tworzy <xref:System.Windows.Forms.ColumnHeader> również obiekty do wyświetlania elementów podelementowych w widoku szczegółów. Dwa <xref:System.Windows.Forms.ImageList> obiekty są również tworzone w przykładzie kodu, aby zapewnić obrazy <xref:System.Windows.Forms.ListViewItem> dla obiektów. Te <xref:System.Windows.Forms.ImageList> obiekty są dodawane <xref:System.Windows.Forms.ListView.LargeImageList%2A> do właściwości i <xref:System.Windows.Forms.ListView.SmallImageList%2A> . W przykładzie zastosowano następujące właściwości podczas tworzenia <xref:System.Windows.Forms.ListView> formantu.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Ten przykład wymaga, aby dodano kod do <xref:System.Windows.Forms.Form> i wywołać metodę utworzoną w przykładzie z konstruktora lub innej metody w formularzu. Przykład wymaga również, aby obrazy o `MySmallImage1`nazwach `MyLargeImage1` `MySmallImage2`,, `MyLargeImage2` i znajdowały się w katalogu głównym dysku C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.StateImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="P:System.Windows.Forms.ListView.MultiSelect" />
      </Docs>
    </Member>
    <Member MemberName="CheckedIndices">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.CheckedIndexCollection CheckedIndices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/CheckedIndexCollection CheckedIndices" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckedIndices" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckedIndices As ListView.CheckedIndexCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::CheckedIndexCollection ^ CheckedIndices { System::Windows::Forms::ListView::CheckedIndexCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckedIndices : System.Windows.Forms.ListView.CheckedIndexCollection" Usage="System.Windows.Forms.ListView.CheckedIndices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+CheckedIndexCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera indeksy aktualnie zaznaczonych elementów w kontrolce.</summary>
        <value>A <see cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" /> , który zawiera indeksy obecnie zaznaczonych elementów. Jeśli żadne elementy nie są obecnie zaznaczone, zwracany <see cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" /> jest pusty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest przydatna tylko wtedy, <xref:System.Windows.Forms.ListView.CheckBoxes%2A> gdy właściwość <xref:System.Windows.Forms.ListView> kontrolki jest ustawiona na `true`. Właściwość zwraca kolekcję zawierającą pozycje indeksu <xref:System.Windows.Forms.ListView.ListViewItemCollection> we wszystkich elementach, które są zaznaczone w formancie. <xref:System.Windows.Forms.ListView.CheckedIndices%2A> Aby uzyskać więcej informacji o sposobach manipulowania elementami w kolekcji, zobacz <xref:System.Windows.Forms.ListView.CheckedIndexCollection>.  
  
 Jeśli chcesz uzyskać kolekcję elementów, które są zaznaczone w <xref:System.Windows.Forms.ListView> kontrolce, zamiast pozycji indeksu sprawdzanych elementów, <xref:System.Windows.Forms.ListView.CheckedItems%2A> Użyj właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckedItems" />
      </Docs>
    </Member>
    <Member MemberName="CheckedItems">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.CheckedListViewItemCollection CheckedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/CheckedListViewItemCollection CheckedItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckedItems As ListView.CheckedListViewItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::CheckedListViewItemCollection ^ CheckedItems { System::Windows::Forms::ListView::CheckedListViewItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckedItems : System.Windows.Forms.ListView.CheckedListViewItemCollection" Usage="System.Windows.Forms.ListView.CheckedItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+CheckedListViewItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera aktualnie zaznaczone elementy w kontrolce.</summary>
        <value>A <see cref="T:System.Windows.Forms.ListView.CheckedListViewItemCollection" /> , który zawiera aktualnie zaznaczone elementy. Jeśli żadne elementy nie są obecnie zaznaczone, zwracany <see cref="T:System.Windows.Forms.ListView.CheckedListViewItemCollection" /> jest pusty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest przydatna tylko wtedy, <xref:System.Windows.Forms.ListView.CheckBoxes%2A> gdy właściwość <xref:System.Windows.Forms.ListView> kontrolki jest ustawiona na `true`. <xref:System.Windows.Forms.ListView.CheckedItems%2A> Właściwość zwraca kolekcję zawierającą wszystkie elementy, które są zaznaczone w kontrolce. Aby uzyskać więcej informacji o sposobach manipulowania elementami w kolekcji, zobacz <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection>.  
  
 Jeśli chcesz uzyskać kolekcję pozycji indeksu w obrębie <xref:System.Windows.Forms.ListView.ListViewItemCollection> elementów, które są zaznaczone <xref:System.Windows.Forms.ListView> w kontrolce, zamiast elementów, które <xref:System.Windows.Forms.ListView.CheckedIndices%2A> są zaznaczone, użyj właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sprawdzoną <xref:System.Windows.Forms.ListView> wartość, która <xref:System.Windows.Forms.ListView.ItemChecked> obsługuje zdarzenie. W przykładzie używa <xref:System.Windows.Forms.ListView.CheckedItems%2A> się właściwości do obliczania nowej ceny za każdym razem, gdy element jest zaznaczony lub niezaznaczony. Aby uruchomić ten przykład, wklej następujący kod do formularza, który <xref:System.Windows.Forms.ListView> zawiera nazwę `ListView1` i <xref:System.Windows.Forms.TextBox> nazwę `Textbox1`. `Load` Wywołaj `InitializeListView` metodę z konstruktora lub metody formularza.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView2#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#3)]
[!code-csharp[System.Windows.Forms.ListView2#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#3)]
[!code-vb[System.Windows.Forms.ListView2#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.CheckedListViewItemCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckedIndices" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="listView.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa wszystkie elementy i kolumny z formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Za pomocą tej metody można usunąć wszystkie elementy <xref:System.Windows.Forms.ListView> i kolumny z formantu bez konieczności wywoływania poszczególnych `Clear` metod z <xref:System.Windows.Forms.ListView.ColumnHeaderCollection> klas i <xref:System.Windows.Forms.ListView.ListViewItemCollection> .  
  
> [!NOTE]
>  Metoda nie jest jasno <xref:System.Windows.Forms.ListView.Groups%2A> określona dla <xref:System.Windows.Forms.ListView> kontrolki. <xref:System.Windows.Forms.ListView.Clear%2A> Aby wyczyścić <xref:System.Windows.Forms.ListView.Groups%2A> wywołanie <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Windows.Forms.ListView.Clear%2A> elementów i. <xref:System.Windows.Forms.ListViewItem.Selected%2A?displayProperty=nameWithType> Aby uruchomić ten przykład, wklej następujący kod do formularza zawierającego <xref:System.Windows.Forms.ListView> nazwę `ListView1` i przycisk znajdujący się w dolnej części formularza o nazwie `Button1`. `Load` Wywołaj `InitializeListView` metodę z konstruktora lub metody formularza.  
  
 [!code-cpp[System.Windows.Forms.ListView4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView4/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView4/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView4/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Clear" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="ColumnClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ColumnClickEventHandler ColumnClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ColumnClickEventHandler ColumnClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ColumnClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnClick As ColumnClickEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ColumnClickEventHandler ^ ColumnClick;" />
      <MemberSignature Language="F#" Value="member this.ColumnClick : System.Windows.Forms.ColumnClickEventHandler " Usage="member this.ColumnClick : System.Windows.Forms.ColumnClickEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy użytkownik kliknie nagłówek kolumny w kontrolce widok listy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie <xref:System.Windows.Forms.ListView.ColumnClick> występuje, gdy użytkownik kliknie jeden z nagłówków kolumn w widoku szczegółów elementów <xref:System.Windows.Forms.ListView> w kontrolce (gdy <xref:System.Windows.Forms.ListView.View%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.View.Details>). To zdarzenie jest zwykle obsługiwane w celu sortowania elementów <xref:System.Windows.Forms.ListView> w elemencie przy użyciu klikniętej kolumny jako kolumny, według której ma zostać wykonane sortowanie. <xref:System.Windows.Forms.ListView.ColumnClick>  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy formularz, który zawiera <xref:System.Windows.Forms.ListView> kontrolkę, która ręcznie sortuje elementy po kliknięciu kolumny <xref:System.Windows.Forms.ListView> w kontrolce. W przykładzie zdefiniowano klasę o `ListViewItemComparer` nazwie <xref:System.Collections.IComparer?displayProperty=nameWithType> implementującej interfejs, który wykonuje <xref:System.Windows.Forms.ListViewItem> porównanie. Przykład tworzy wystąpienie `ListViewItemComparer` i używa go do <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> ustawiania właściwości <xref:System.Windows.Forms.ListView> formantu. Wywołanie metody w programie `ListViewItemComparer` obsługi zdarzeńkorzystazmetodzdefiniowanychwprogramiewceluwykonywaniasortowaniaelementównapodstawieklikniętejkolumny.<xref:System.Windows.Forms.ListView.ColumnClick> <xref:System.Windows.Forms.ListView.Sort%2A>  
  
 [!code-cpp[ListView.ColumnClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.ColumnClick/CPP/listviewsort1.cpp#1)]
 [!code-csharp[ListView.ColumnClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.ColumnClick/CS/listviewsort1.cs#1)]
 [!code-vb[ListView.ColumnClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.ColumnClick/VB/listviewsort1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ColumnReordered">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ColumnReorderedEventHandler ColumnReordered;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ColumnReorderedEventHandler ColumnReordered" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ColumnReordered" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnReordered As ColumnReorderedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ColumnReorderedEventHandler ^ ColumnReordered;" />
      <MemberSignature Language="F#" Value="member this.ColumnReordered : System.Windows.Forms.ColumnReorderedEventHandler " Usage="member this.ColumnReordered : System.Windows.Forms.ColumnReorderedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnReorderedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy porządek nagłówka kolumny zostanie zmieniony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest zdarzeniem anulowania i może zostać anulowane przez obsługę zdarzenia i <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> ustawienie właściwości na `true`. <xref:System.Windows.Forms.ListView.ColumnReordered> Jeśli jednak zdarzenie zostanie anulowane, <xref:System.Windows.Forms.ColumnReorderedEventArgs.NewDisplayIndex%2A> <xref:System.Windows.Forms.ColumnReorderedEventArgs> nie zmieni się na <xref:System.Windows.Forms.ColumnReorderedEventArgs.OldDisplayIndex%2A> wartość.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportuje wystąpienie <xref:System.Windows.Forms.ListView.ColumnReordered> zdarzenia. Ten raport pomaga dowiedzieć się, kiedy wystąpi zdarzenie i może pomóc w debugowaniu. Aby zgłosić wiele zdarzeń lub zdarzenia, które występują często, należy rozważyć <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> zamianę <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączenie komunikatu do wielowierszowego <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu zawierającego wystąpienie typu <xref:System.Windows.Forms.ListView> o nazwie. `ListView1` Następnie upewnij się, że program obsługi zdarzeń jest skojarzony <xref:System.Windows.Forms.ListView.ColumnReordered> ze zdarzeniem.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#467](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#467)]
 [!code-vb[System.Windows.Forms.EventExamples#467](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#467)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.ColumnHeaderCollection Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/ColumnHeaderCollection Columns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As ListView.ColumnHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::ColumnHeaderCollection ^ Columns { System::Windows::Forms::ListView::ColumnHeaderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Columns : System.Windows.Forms.ListView.ColumnHeaderCollection" Usage="System.Windows.Forms.ListView.Columns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ColumnHeaderCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ColumnHeaderCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+ColumnHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję wszystkich nagłówków kolumn, które są wyświetlane w kontrolce.</summary>
        <value>Reprezentuje nagłówki kolumn, które są wyświetlane, <see cref="P:System.Windows.Forms.ListView.View" /> gdy właściwość jest ustawiona na <see cref="F:System.Windows.Forms.View.Details" />. <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość zwraca kolekcję <xref:System.Windows.Forms.ColumnHeader> zawierającą obiekty <xref:System.Windows.Forms.ListView> , które są wyświetlane w formancie. <xref:System.Windows.Forms.ListView.Columns%2A> <xref:System.Windows.Forms.ColumnHeader>obiekty definiują kolumny, które są wyświetlane w <xref:System.Windows.Forms.ListView> kontrolce, <xref:System.Windows.Forms.ListView.View%2A> gdy właściwość jest ustawiona <xref:System.Windows.Forms.View.Details>na. Każda kolumna służy do wyświetlania informacji o podelemencie dla każdego elementu w <xref:System.Windows.Forms.ListView>. Aby uzyskać więcej informacji o sposobach manipulowania elementami w kolekcji, zobacz <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>.  
  
> [!NOTE]
>  Jeśli formant nie ma określonych nagłówków kolumn i <xref:System.Windows.Forms.ListView.View%2A> ustawisz właściwość na <xref:System.Windows.Forms.View.Details>, <xref:System.Windows.Forms.ListView> formant nie będzie wyświetlał żadnych elementów. <xref:System.Windows.Forms.ListView>  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.ListView> formant z trzema <xref:System.Windows.Forms.ListViewItem> określonymi obiektami i trzema <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiektami określonymi dla każdego elementu. Przykład tworzy <xref:System.Windows.Forms.ColumnHeader> również obiekty do wyświetlania elementów podelementowych w widoku szczegółów. Dwa <xref:System.Windows.Forms.ImageList> obiekty są również tworzone w przykładzie kodu, aby zapewnić obrazy <xref:System.Windows.Forms.ListViewItem> dla obiektów. Te <xref:System.Windows.Forms.ImageList> obiekty są dodawane <xref:System.Windows.Forms.ListView.LargeImageList%2A> do właściwości i <xref:System.Windows.Forms.ListView.SmallImageList%2A> . W przykładzie zastosowano następujące właściwości podczas tworzenia <xref:System.Windows.Forms.ListView> formantu.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Ten przykład wymaga, aby dodano kod do <xref:System.Windows.Forms.Form> i wywołać metodę utworzoną w przykładzie z konstruktora lub innej metody w formularzu. Przykład wymaga również, aby obrazy o `MySmallImage1`nazwach `MyLargeImage1` `MySmallImage2`,, `MyLargeImage2` i znajdowały się w katalogu głównym dysku C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" />
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
      </Docs>
    </Member>
    <Member MemberName="ColumnWidthChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ColumnWidthChangedEventHandler ColumnWidthChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ColumnWidthChangedEventHandler ColumnWidthChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ColumnWidthChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnWidthChanged As ColumnWidthChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ColumnWidthChangedEventHandler ^ ColumnWidthChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnWidthChanged : System.Windows.Forms.ColumnWidthChangedEventHandler " Usage="member this.ColumnWidthChanged : System.Windows.Forms.ColumnWidthChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnWidthChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po pomyślnej zmianie szerokości kolumny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie nie zostanie wykonane, jeśli zmiana szerokości kolumny zostanie anulowana w <xref:System.Windows.Forms.ListView.ColumnWidthChanging> zdarzeniu.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportuje wystąpienie <xref:System.Windows.Forms.ListView.ColumnWidthChanged> zdarzenia. Ten raport pomaga dowiedzieć się, kiedy wystąpi zdarzenie i może pomóc w debugowaniu. Aby zgłosić wiele zdarzeń lub zdarzenia, które występują często, należy rozważyć <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> zamianę <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączenie komunikatu do wielowierszowego <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu zawierającego wystąpienie typu <xref:System.Windows.Forms.ListView> o nazwie. `ListView1` Następnie upewnij się, że program obsługi zdarzeń jest skojarzony <xref:System.Windows.Forms.ListView.ColumnWidthChanged> ze zdarzeniem.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#468](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#468)]
 [!code-vb[System.Windows.Forms.EventExamples#468](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#468)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnWidthChanging">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ColumnWidthChangingEventHandler ColumnWidthChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ColumnWidthChangingEventHandler ColumnWidthChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ColumnWidthChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnWidthChanging As ColumnWidthChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ColumnWidthChangingEventHandler ^ ColumnWidthChanging;" />
      <MemberSignature Language="F#" Value="member this.ColumnWidthChanging : System.Windows.Forms.ColumnWidthChangingEventHandler " Usage="member this.ColumnWidthChanging : System.Windows.Forms.ColumnWidthChangingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnWidthChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy zmienia się szerokość kolumny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie umożliwia sprawdzenie szerokooci nowej kolumny przy użyciu <xref:System.Windows.Forms.ColumnWidthChangingEventArgs.NewWidth%2A?displayProperty=nameWithType> właściwości i anulowanie zdarzenia w razie wybrania przez <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> ustawienie właściwości na `true`.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje obsługę <xref:System.Windows.Forms.ListView.ColumnWidthChanging> zdarzenia. Pokazuje <xref:System.Windows.Forms.ColumnWidthChangingEventArgs.NewWidth%2A?displayProperty=nameWithType> również członków i <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> . Aby uruchomić ten przykład, wklej kod do formularza systemu Windows. Wywołanie `InitializeListView1` z konstruktora lub <xref:System.Windows.Forms.Form.Load> procedury obsługi zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="listView.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie obiektu ułatwienia dostępu dla <see cref="T:System.Windows.Forms.ListView" /> kontrolki.</summary>
        <returns><see cref="T:System.Windows.Forms.Control.ControlAccessibleObject" /> Dla tej<see cref="T:System.Windows.Forms.ListView" /> kontrolki.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateHandle();" />
      <MemberSignature Language="F#" Value="override this.CreateHandle : unit -&gt; unit" Usage="listView.CreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy uchwyt dla kontrolki.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.ListView.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ta właściwość nie jest odpowiednia dla tej klasy.</summary>
        <value><see langword="null" />we wszystkich przypadkach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość nie jest odpowiednia dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.ListView.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera domyślny rozmiar kontrolki.</summary>
        <value>Wartość domyślna <see cref="T:System.Drawing.Size" /> formantu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="listView.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" />Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> do zwolnienia tylko zasobów niezarządzanych.</param>
        <summary>Zwalnia niezarządzane zasoby używane przez <see cref="T:System.Windows.Forms.ListView" /> program i opcjonalnie zwalnia zarządzane zasoby.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj <xref:System.Windows.Forms.ListView.Dispose%2A> metodę, gdy składnik nie jest już wymagany. Ta metoda usuwa składnik z jego kontenera (jeśli składnik ma lokację) i wyzwala zdarzenie Dispose.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffered">
      <MemberSignature Language="C#" Value="protected override bool DoubleBuffered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoubleBuffered" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.DoubleBuffered" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DoubleBuffered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DoubleBuffered { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DoubleBuffered : bool with get, set" Usage="System.Windows.Forms.ListView.DoubleBuffered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy ten formant powinien ponownie narysować powierzchnię przy użyciu pomocniczego buforu, aby zmniejszyć lub zapobiec migotaniu.</summary>
        <value><see langword="true" />Jeśli powierzchnia kontrolki powinna być narysowana przy użyciu podwójnego buforowania; w przeciwnym razie. <see langword="false" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawColumnHeader">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawListViewColumnHeaderEventHandler DrawColumnHeader;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawListViewColumnHeaderEventHandler DrawColumnHeader" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.DrawColumnHeader" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawColumnHeader As DrawListViewColumnHeaderEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawListViewColumnHeaderEventHandler ^ DrawColumnHeader;" />
      <MemberSignature Language="F#" Value="member this.DrawColumnHeader : System.Windows.Forms.DrawListViewColumnHeaderEventHandler " Usage="member this.DrawColumnHeader : System.Windows.Forms.DrawListViewColumnHeaderEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawListViewColumnHeaderEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="T:System.Windows.Forms.ListView" /> jest rysowany widok szczegółów <see cref="P:System.Windows.Forms.ListView.OwnerDraw" /> i właściwość jest ustawiona na <see langword="true" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie umożliwia dostosowanie wyglądu <xref:System.Windows.Forms.ListView> kontrolki przy użyciu rysowania przez właściciela. Jest uruchamiany tylko wtedy, gdy <xref:System.Windows.Forms.ListView.OwnerDraw%2A> właściwość jest ustawiona na `true` , a <xref:System.Windows.Forms.ListView.View%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>. To zdarzenie może wystąpić dla każdego nagłówka kolumny w kontrolce. Aby uzyskać więcej informacji na temat rysowania właściciela, <xref:System.Windows.Forms.ListView.OwnerDraw%2A> Zobacz temat informacje dotyczące właściwości.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu zawiera implementację <xref:System.Windows.Forms.ListView.DrawColumnHeader> programu obsługi zdarzeń. Aby zapoznać się z kompletnym przykładem, łącznie <xref:System.Windows.Forms.ListView.DrawSubItem> z implementacją programu obsługi <xref:System.Windows.Forms.ListView.OwnerDraw%2A> zdarzeń, zobacz temat informacje o odwołaniach.  
  
 [!code-csharp[ListViewOwnerDraw#5](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#5)]
 [!code-vb[ListViewOwnerDraw#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
        <altmember cref="T:System.Windows.Forms.DrawListViewColumnHeaderEventArgs" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="DrawItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawListViewItemEventHandler DrawItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawListViewItemEventHandler DrawItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.DrawItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawItem As DrawListViewItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawListViewItemEventHandler ^ DrawItem;" />
      <MemberSignature Language="F#" Value="member this.DrawItem : System.Windows.Forms.DrawListViewItemEventHandler " Usage="member this.DrawItem : System.Windows.Forms.DrawListViewItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawListViewItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje <see cref="T:System.Windows.Forms.ListView" /> ,gdy<see langword="true" />jest rysowany i Właściwośćjestustawionana.<see cref="P:System.Windows.Forms.ListView.OwnerDraw" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie umożliwia dostosowanie wyglądu <xref:System.Windows.Forms.ListView> kontrolki przy użyciu rysowania przez właściciela. Jest uruchamiany tylko wtedy, <xref:System.Windows.Forms.ListView.OwnerDraw%2A> gdy właściwość jest ustawiona na. `true` Aby uzyskać więcej informacji na temat rysowania właściciela, <xref:System.Windows.Forms.ListView.OwnerDraw%2A> Zobacz temat informacje dotyczące właściwości.  
  
 Zdarzenie może wystąpić dla każdego <xref:System.Windows.Forms.ListView> elementu. <xref:System.Windows.Forms.ListView.DrawItem> Gdy właściwość jest ustawiona na <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>, <xref:System.Windows.Forms.ListView.DrawSubItem> zdarzenia i <xref:System.Windows.Forms.ListView.DrawColumnHeader>. <xref:System.Windows.Forms.ListView.View%2A> W takim przypadku można obsłużyć <xref:System.Windows.Forms.ListView.DrawItem> zdarzenie, aby rysować elementy wspólne dla wszystkich elementów, takich jak tło, i <xref:System.Windows.Forms.ListView.DrawSubItem> obsłużyć zdarzenie do rysowania elementów dla poszczególnych elementów podelementowych, takich jak wartości tekstowe. Możesz również rysować wszystkie elementy w <xref:System.Windows.Forms.ListView> kontrolce przy użyciu tylko jednego z tych dwóch zdarzeń, chociaż może to być mniej wygodne. Aby narysować nagłówki kolumn w widoku szczegółów, należy obsłużyć <xref:System.Windows.Forms.ListView.DrawColumnHeader> zdarzenie.  
  
> [!NOTE]
>  Ze względu na błąd w źródłowej kontrolce Win32 <xref:System.Windows.Forms.ListView.DrawItem> , zdarzenie występuje bez <xref:System.Windows.Forms.ListView.DrawSubItem> towarzyszących zdarzeń w każdym wierszu w widoku szczegółów, gdy wskaźnik myszy jest przesuwany nad wierszem, powodując, <xref:System.Windows.Forms.ListView.DrawSubItem> że wszystkie malowane w programie obsługi zdarzeń są malowane przez niestandardowe tło rysowane w programie <xref:System.Windows.Forms.ListView.DrawItem> obsługi zdarzeń. Zapoznaj się z przykładem w temacie <xref:System.Windows.Forms.ListView.OwnerDraw%2A> referencyjnym dotyczącym obejścia, które unieważnia każdy wiersz w przypadku wystąpienia dodatkowego zdarzenia. Alternatywnym obejściem jest umieszczenie w programie <xref:System.Windows.Forms.ListView.DrawSubItem> obsługi zdarzeń całego niestandardowego kodu rysowania i odmalowanie tła dla całego elementu (w tym elementów SubItems) tylko wtedy, <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.ColumnIndex%2A?displayProperty=nameWithType> gdy wartość wynosi 0.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu zawiera implementację <xref:System.Windows.Forms.ListView.DrawItem> programu obsługi zdarzeń. Pełny przykład można znaleźć <xref:System.Windows.Forms.ListView.OwnerDraw%2A> w temacie Reference.  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
        <altmember cref="T:System.Windows.Forms.DrawListViewItemEventArgs" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawColumnHeader" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="DrawSubItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawListViewSubItemEventHandler DrawSubItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawListViewSubItemEventHandler DrawSubItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.DrawSubItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawSubItem As DrawListViewSubItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawListViewSubItemEventHandler ^ DrawSubItem;" />
      <MemberSignature Language="F#" Value="member this.DrawSubItem : System.Windows.Forms.DrawListViewSubItemEventHandler " Usage="member this.DrawSubItem : System.Windows.Forms.DrawListViewSubItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawListViewSubItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="T:System.Windows.Forms.ListView" /> jest rysowany widok szczegółów <see cref="P:System.Windows.Forms.ListView.OwnerDraw" /> i właściwość jest ustawiona na <see langword="true" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie umożliwia dostosowanie wyglądu <xref:System.Windows.Forms.ListView> kontrolki przy użyciu rysowania przez właściciela. Jest uruchamiany tylko wtedy, gdy <xref:System.Windows.Forms.ListView.OwnerDraw%2A> właściwość jest ustawiona na `true` , a <xref:System.Windows.Forms.ListView.View%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>. Aby uzyskać więcej informacji na temat rysowania właściciela, <xref:System.Windows.Forms.ListView.OwnerDraw%2A> Zobacz temat informacje dotyczące właściwości.  
  
> [!NOTE]
>  Informacje o podelemencie są zwykle wyświetlane w widoku kafelków, a także w widoku kafelków, ale muszą być narysowane w programie obsługi <xref:System.Windows.Forms.ListView.DrawItem> zdarzenia.  
  
 Zdarzenie może wystąpić dla każdego <xref:System.Windows.Forms.ListView> elementu podrzędnego. <xref:System.Windows.Forms.ListView.DrawSubItem> Możesz obsłużyć <xref:System.Windows.Forms.ListView.DrawItem> zdarzenie, aby rysować elementy wspólne dla wszystkich podelementów, takich jak tło, i <xref:System.Windows.Forms.ListView.DrawSubItem> obsłużyć zdarzenie do rysowania elementów dla poszczególnych elementów podelementowych, takich jak wartości tekstowe. Możesz również rysować wszystkie elementy w <xref:System.Windows.Forms.ListView> kontrolce przy użyciu tylko jednego z tych dwóch zdarzeń, chociaż może to być mniej wygodne. Aby narysować nagłówki kolumn w widoku szczegółów, należy obsłużyć <xref:System.Windows.Forms.ListView.DrawColumnHeader> zdarzenie.  
  
> [!NOTE]
>  Zdarzenie nie występuje dla żadnych elementów SubItem, dla których nie <xref:System.Windows.Forms.ColumnHeader> dodano żadnych obiektów do <xref:System.Windows.Forms.ListView.Columns%2A> kolekcji. <xref:System.Windows.Forms.ListView.DrawSubItem> Należy zauważyć, że pierwszy element SubItem <xref:System.Windows.Forms.ListViewItem> każdego obiektu reprezentuje samego elementu nadrzędnego i jest wyświetlany w pierwszej kolumnie.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu zawiera implementację <xref:System.Windows.Forms.ListView.DrawSubItem> programu obsługi zdarzeń. Pełny przykład można znaleźć <xref:System.Windows.Forms.ListView.OwnerDraw%2A> w temacie Reference.  
  
 [!code-csharp[ListViewOwnerDraw#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#4)]
 [!code-vb[ListViewOwnerDraw#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
        <altmember cref="T:System.Windows.Forms.DrawListViewSubItemEventArgs" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawColumnHeader" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="EndUpdate">
      <MemberSignature Language="C#" Value="public void EndUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.EndUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndUpdate();" />
      <MemberSignature Language="F#" Value="member this.EndUpdate : unit -&gt; unit" Usage="listView.EndUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wznawia rysowanie kontrolki widok listy po zawieszeniu rysowania przez <see cref="M:System.Windows.Forms.ListView.BeginUpdate" /> metodę.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView> Preferowanym sposobem dodawania wielu elementów do programu jest <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> użycie metody <xref:System.Windows.Forms.ListView.ListViewItemCollection> (dostępnej za pomocą <xref:System.Windows.Forms.ListView.Items%2A> właściwości <xref:System.Windows.Forms.ListView>). Dzięki temu można dodać tablicę elementów do listy w ramach jednej operacji. Jeśli jednak chcesz dodać <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> elementy pojedynczo przy użyciu metody <xref:System.Windows.Forms.ListView.ListViewItemCollection> klasy <xref:System.Windows.Forms.ListView.BeginUpdate%2A> , możesz użyć metody, aby zapobiec odświeżeniu formantu przy <xref:System.Windows.Forms.ListView> każdym dodawaniu elementu. Po zakończeniu zadania dodawania elementów do formantu Wywołaj <xref:System.Windows.Forms.ListView.EndUpdate%2A> metodę, aby <xref:System.Windows.Forms.ListView> umożliwić odświeżenie. W ten sposób Dodawanie elementów może uniemożliwić migotanie rysowania <xref:System.Windows.Forms.ListView> po dodaniu dużej liczby elementów do kontrolki.  
  
 Jeśli <xref:System.Windows.Forms.ListView.BeginUpdate%2A> jest wywoływana więcej niż raz, <xref:System.Windows.Forms.ListView.EndUpdate%2A> musi być wywoływana równorzędna liczba razy. Do momentu ostatniego wywołania <xref:System.Windows.Forms.ListView.EndUpdate%2A> do <xref:System.Windows.Forms.ListView> nie zostanie odświeżene. Inne niż to, wiele wywołań <xref:System.Windows.Forms.ListView.BeginUpdate%2A> nie ma wpływu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje inicjalizację <xref:System.Windows.Forms.ListView> kontrolki, aby zawierała pola wyboru. Ilustruje <xref:System.Windows.Forms.ListView.BeginUpdate%2A> również metody i <xref:System.Windows.Forms.ListView.EndUpdate%2A> . Aby uruchomić ten przykład, wklej następujący kod do formularza zawierającego <xref:System.Windows.Forms.ListView> nazwę. `ListView1` `Load` Wywołaj `InitializeListView` metodę z konstruktora lub metody formularza.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.BeginUpdate" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="EnsureVisible">
      <MemberSignature Language="C#" Value="public void EnsureVisible (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnsureVisible(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.EnsureVisible(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnsureVisible (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnsureVisible(int index);" />
      <MemberSignature Language="F#" Value="member this.EnsureVisible : int -&gt; unit" Usage="listView.EnsureVisible index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeks (liczony od zera) elementu do przewijania do widoku.</param>
        <summary>Zapewnia, że określony element jest widoczny w kontrolce, w razie potrzeby przewinięcie zawartości kontrolki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć tej metody, aby upewnić się, że określony element jest widoczny <xref:System.Windows.Forms.ListView> w formancie. Podczas sprawdzania poprawności elementów w <xref:System.Windows.Forms.ListView>, można <xref:System.Windows.Forms.ListView.EnsureVisible%2A> wywołać metodę, aby upewnić się, że element, który zakończył się niepowodzeniem, <xref:System.Windows.Forms.ListView> jest wyświetlany w kontrolce, aby zezwolić użytkownikowi na wykonywanie zmian w elemencie. Jeśli element, który ma być widoczny, znajduje się nad widocznym regionem <xref:System.Windows.Forms.ListView> kontrolki, <xref:System.Windows.Forms.ListView.EnsureVisible%2A> wywołanie metody spowoduje przewinięcie zawartości kontrolki do momentu, gdy jest to pierwszy element w obszarze widocznym formantu. Jeśli element znajduje się poniżej widocznego obszaru <xref:System.Windows.Forms.ListView> kontrolki, <xref:System.Windows.Forms.ListView.EnsureVisible%2A> wywołanie metody spowoduje <xref:System.Windows.Forms.ListView> przewinięcie zawartości kontrolki do momentu, gdy element jest ostatnim elementem w obszarze widocznym formantu.  
  
 Aby określić, czy element znajduje się u góry obszaru <xref:System.Windows.Forms.ListView> wyświetlania kontrolki, <xref:System.Windows.Forms.ListView.TopItem%2A> Użyj właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.TopItem" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindItemWithText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Znajduje pierwszy <see cref="T:System.Windows.Forms.ListViewItem" /> z, który rozpoczyna się od danej wartości tekstowej.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindItemWithText">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindItemWithText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindItemWithText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindItemWithText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindItemWithText (text As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindItemWithText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.FindItemWithText : string -&gt; System.Windows.Forms.ListViewItem" Usage="listView.FindItemWithText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do wyszukania.</param>
        <summary>Znajduje pierwszy <see cref="T:System.Windows.Forms.ListViewItem" /> zaczynający się od określonej wartości tekstowej.</summary>
        <returns>Pierwszy <see cref="T:System.Windows.Forms.ListViewItem" /> zaczynający się od określonej wartości tekstowej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W wyszukiwaniu nie jest rozróżniana wielkość liter.  
  
 `text` Parametr może określać podciąg żądanego pasującego tekstu. Ponadto ta metoda zwróci pierwszy element, który rozpoczyna się od określonego tekstu. Na przykład jeśli element <xref:System.Windows.Forms.ListView> zawiera dwa elementy listy — tekst pierwszego elementu ma ustawioną wartość "nawias ostry", a tekst drugiego elementu ustawiony na "nawias" — wywołanie do <xref:System.Windows.Forms.ListView.FindItemWithText%2A> przekazania `brack` jako parametr zwróci element, którego tekst ma wartość "nawias".  
  
 Metoda zwraca wartość `null` , jeśli lista jest pusta lub nie ma pasującego elementu. <xref:System.Windows.Forms.ListView.FindItemWithText%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje <xref:System.Windows.Forms.ListView.FindItemWithText%2A> metodę. Aby uruchomić ten przykład, wklej następujący kod do formularza systemu Windows i Wywołaj `InitializeFindListView` metodę z konstruktora lub <xref:System.Windows.Forms.Form.Load> procedury obsługi zdarzeń. Kliknij przycisk, aby zobaczyć wyniki wywołania metody.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindItemWithText">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindItemWithText (string text, bool includeSubItemsInSearch, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindItemWithText(string text, bool includeSubItemsInSearch, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindItemWithText(System.String,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindItemWithText (text As String, includeSubItemsInSearch As Boolean, startIndex As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindItemWithText(System::String ^ text, bool includeSubItemsInSearch, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.FindItemWithText : string * bool * int -&gt; System.Windows.Forms.ListViewItem" Usage="listView.FindItemWithText (text, includeSubItemsInSearch, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="includeSubItemsInSearch" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="startIndex" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do wyszukania.</param>
        <param name="includeSubItemsInSearch"><see langword="true" />Aby uwzględnić podelementy w wyszukiwaniu; w przeciwnym razie. <see langword="false" /></param>
        <param name="startIndex">Indeks elementu, w którym ma zostać rozpoczęte wyszukiwanie.</param>
        <summary>Znajduje pierwszy <see cref="T:System.Windows.Forms.ListViewItem" /> lub <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />, jeśli jest wskazany, zaczynający się od określonej wartości tekstowej. Wyszukiwanie rozpocznie się o określonym indeksie.</summary>
        <returns>Pierwszy <see cref="T:System.Windows.Forms.ListViewItem" /> zaczynający się od określonej wartości tekstowej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W wyszukiwaniu nie jest rozróżniana wielkość liter.  
  
 `text` Parametr może określać podciąg żądanego pasującego tekstu. Ponadto ta metoda zwróci pierwszy element, który rozpoczyna się od określonego tekstu. Na przykład jeśli element <xref:System.Windows.Forms.ListView> zawiera dwa elementy listy — tekst pierwszego elementu ma ustawioną wartość "nawias ostry", a tekst drugiego elementu ustawiony na "nawias" — wywołanie do <xref:System.Windows.Forms.ListView.FindItemWithText%2A> przekazywania "Brack" jako parametr zwróci element, którego tekst jest "nawias".  
  
 Metoda zwraca wartość `null` , jeśli lista jest pusta lub nie ma pasującego elementu. <xref:System.Windows.Forms.ListView.FindItemWithText%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" />jest mniejsza 0 lub większa niż liczba elementów w <see cref="T:System.Windows.Forms.ListView" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindItemWithText">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindItemWithText (string text, bool includeSubItemsInSearch, int startIndex, bool isPrefixSearch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindItemWithText(string text, bool includeSubItemsInSearch, int32 startIndex, bool isPrefixSearch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindItemWithText(System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindItemWithText (text As String, includeSubItemsInSearch As Boolean, startIndex As Integer, isPrefixSearch As Boolean) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindItemWithText(System::String ^ text, bool includeSubItemsInSearch, int startIndex, bool isPrefixSearch);" />
      <MemberSignature Language="F#" Value="member this.FindItemWithText : string * bool * int * bool -&gt; System.Windows.Forms.ListViewItem" Usage="listView.FindItemWithText (text, includeSubItemsInSearch, startIndex, isPrefixSearch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="includeSubItemsInSearch" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="startIndex" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="isPrefixSearch" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do wyszukania.</param>
        <param name="includeSubItemsInSearch"><see langword="true" />Aby uwzględnić podelementy w wyszukiwaniu; w przeciwnym razie. <see langword="false" /></param>
        <param name="startIndex">Indeks elementu, w którym ma zostać rozpoczęte wyszukiwanie.</param>
        <param name="isPrefixSearch"><see langword="true" />Aby zezwolić na częściowe dopasowania; w przeciwnym razie. <see langword="false" /></param>
        <summary>Znajduje pierwszy <see cref="T:System.Windows.Forms.ListViewItem" /> lub <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />, jeśli jest wskazany, zaczynający się od określonej wartości tekstowej. Wyszukiwanie rozpocznie się o określonym indeksie.</summary>
        <returns>Pierwszy <see cref="T:System.Windows.Forms.ListViewItem" /> zaczynający się od określonej wartości tekstowej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zwraca wartość `null` , jeśli lista jest pusta lub nie ma pasującego elementu. <xref:System.Windows.Forms.ListView.FindItemWithText%2A>  
  
 W wyszukiwaniu nie jest rozróżniana wielkość liter.  
  
 `text` Parametr może określać podciąg żądanego pasującego tekstu. Ta metoda zwróci pierwszy element, który rozpoczyna się od określonego tekstu, chyba że `false` zostanie przekazana `isPrefixSearch`do. Na przykład jeśli element <xref:System.Windows.Forms.ListView> zawiera dwa elementy listy — tekst pierwszego elementu ma ustawioną wartość "nawias ostry", a tekst drugiego elementu ustawiony na "nawias" — <xref:System.Windows.Forms.ListView.FindItemWithText%2A> wywołanie metody Pass "Brack", ponieważ tekst wyszukiwania zwróci element, którego tekst to "nawias". Jeśli `isPrefixSearch` jest ustawiona na `false`, to wywołanie zwróci `null`wartość.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" />jest mniejsza niż 0 lub większa niż liczba elementów w <see cref="T:System.Windows.Forms.ListView" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindNearestItem">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Znajduje następny element z danego punktu, wyszukując w określonym kierunku.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindNearestItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindNearestItem (System.Windows.Forms.SearchDirectionHint dir, System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindNearestItem(valuetype System.Windows.Forms.SearchDirectionHint dir, valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindNearestItem(System.Windows.Forms.SearchDirectionHint,System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindNearestItem(System::Windows::Forms::SearchDirectionHint dir, System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.FindNearestItem : System.Windows.Forms.SearchDirectionHint * System.Drawing.Point -&gt; System.Windows.Forms.ListViewItem" Usage="listView.FindNearestItem (dir, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dir" Type="System.Windows.Forms.SearchDirectionHint" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="point" Type="System.Drawing.Point" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dir">Jedna z <see cref="T:System.Windows.Forms.SearchDirectionHint" /> wartości.</param>
        <param name="point">Punkt, w którym rozpocznie się wyszukiwanie.</param>
        <summary>Znajduje następny element z danego punktu, wyszukując w określonym kierunku</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> Znajduje się najbliżej danego punktu, wyszukując w określonym kierunku.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda <xref:System.Windows.Forms.ListView.FindNearestItem%2A> zwraca wartość `null` , jeśli w danym kierunku nie znaleziono żadnego elementu. Ustalenie najbliższego elementu może się różnić w zależności od systemu operacyjnego, w którym działa aplikacja, i wpłynie na wyniki <xref:System.Windows.Forms.ListView.FindNearestItem%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.ListView.View" />jest ustawiona na wartość inną niż <see cref="F:System.Windows.Forms.View.SmallIcon" /> lub. <see cref="F:System.Windows.Forms.View.LargeIcon" /></exception>
      </Docs>
    </Member>
    <Member MemberName="FindNearestItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindNearestItem (System.Windows.Forms.SearchDirectionHint searchDirection, int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindNearestItem(valuetype System.Windows.Forms.SearchDirectionHint searchDirection, int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindNearestItem(System.Windows.Forms.SearchDirectionHint,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNearestItem (searchDirection As SearchDirectionHint, x As Integer, y As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindNearestItem(System::Windows::Forms::SearchDirectionHint searchDirection, int x, int y);" />
      <MemberSignature Language="F#" Value="member this.FindNearestItem : System.Windows.Forms.SearchDirectionHint * int * int -&gt; System.Windows.Forms.ListViewItem" Usage="listView.FindNearestItem (searchDirection, x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchDirection" Type="System.Windows.Forms.SearchDirectionHint" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="x" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="y" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="searchDirection">Jedna z <see cref="T:System.Windows.Forms.SearchDirectionHint" /> wartości.</param>
        <param name="x">Współrzędna x punktu, w którym należy rozpocząć wyszukiwanie.</param>
        <param name="y">Współrzędna y punktu, w którym należy rozpocząć wyszukiwanie.</param>
        <summary>Znajduje następny element z danej współrzędnej x i y, wyszukując w określonym kierunku.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> Znajduje się najbliżej podanych współrzędnych, wyszukując w określonym kierunku.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda <xref:System.Windows.Forms.ListView.FindNearestItem%2A> zwraca wartość `null` , jeśli w danym kierunku nie znaleziono żadnego elementu. Ustalenie najbliższego elementu może się różnić w zależności od systemu operacyjnego, w którym działa aplikacja, i wpłynie na wyniki <xref:System.Windows.Forms.ListView.FindNearestItem%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.ListView.View" />jest ustawiona na wartość inną niż <see cref="F:System.Windows.Forms.View.SmallIcon" /> lub. <see cref="F:System.Windows.Forms.View.LargeIcon" /></exception>
      </Docs>
    </Member>
    <Member MemberName="FocusedItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FocusedItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem FocusedItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.FocusedItem" />
      <MemberSignature Language="VB.NET" Value="Public Property FocusedItem As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItem ^ FocusedItem { System::Windows::Forms::ListViewItem ^ get(); void set(System::Windows::Forms::ListViewItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FocusedItem : System.Windows.Forms.ListViewItem with get, set" Usage="System.Windows.Forms.ListView.FocusedItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia element w kontrolce, która aktualnie ma fokus.</summary>
        <value>Reprezentuje element, który ma fokus, lub <see langword="null" /> Jeśli żaden element nie <see cref="T:System.Windows.Forms.ListView" />ma fokusu w. <see cref="T:System.Windows.Forms.ListViewItem" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość zwraca, którareprezentuje<xref:System.Windows.Forms.ListView> element aktualnie wyświetlający prostokąt fokusu dla kontrolki. <xref:System.Windows.Forms.ListViewItem> <xref:System.Windows.Forms.ListView.FocusedItem%2A> Ponieważ kontrolka nie ma bezpośrednio edytowalnych obszarów innych niż elementy wyświetlane, <xref:System.Windows.Forms.ListView> gdy kontrolka ma fokus <xref:System.Windows.Forms.ListView> , element w obrębie wyświetla fokus Reticle wokół jego tekstu elementu. <xref:System.Windows.Forms.ListView> Zazwyczaj ostatni wybrany element w <xref:System.Windows.Forms.ListView> kontrolce jest elementem z fokusem. Chociaż element może być tym, który wyświetla fokus Reticle, może nie być wybrany element w <xref:System.Windows.Forms.ListView>. Użyj właściwości <xref:System.Windows.Forms.ListView.SelectedIndices%2A> <xref:System.Windows.Forms.ListView.FocusedItem%2A> lub w celu uzyskania wybranych elementów w <xref:System.Windows.Forms.ListView> kontrolce, właściwość nie jest konieczna. <xref:System.Windows.Forms.ListView.SelectedItems%2A> Możesz użyć <xref:System.Windows.Forms.ListView.FocusedItem%2A> właściwości, aby określić, który element był ostatnio kliknięty <xref:System.Windows.Forms.ListView> w kontrolce, niezależnie od stanu zaznaczenia.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ListView.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor pierwszego planu.</summary>
        <value><see cref="T:System.Drawing.Color" /> Jest to kolor pierwszego planu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullRowSelect">
      <MemberSignature Language="C#" Value="public bool FullRowSelect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FullRowSelect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.FullRowSelect" />
      <MemberSignature Language="VB.NET" Value="Public Property FullRowSelect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FullRowSelect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FullRowSelect : bool with get, set" Usage="System.Windows.Forms.ListView.FullRowSelect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy kliknięcie elementu zaznacza wszystkie jego elementy.</summary>
        <value><see langword="true" />Kliknięcie elementu powoduje wybranie elementu i wszystkich jego elementów podelementu; <see langword="false" /> kliknięcie elementu powoduje wybranie tylko samego elementu. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość nie ma żadnego efektu, <xref:System.Windows.Forms.ListView.View%2A> chyba że właściwość <xref:System.Windows.Forms.ListView> kontrolki jest ustawiona na <xref:System.Windows.Forms.View.Details>. <xref:System.Windows.Forms.ListView.FullRowSelect%2A> Właściwość jest zwykle używana, <xref:System.Windows.Forms.ListView> gdy elementy są wyświetlane z wieloma podelementami i ważne jest, aby zobaczyć wybrane elementy, gdy tekst elementu nie jest widoczny z powodu przewijania zawartości kontrolki w poziomie. <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
> [!NOTE]
>  Gdy <xref:System.Windows.Forms.ListView.FullRowSelect%2A> jest ustawiona na `true`, etykietki narzędzi dla <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> elementu nie będą wyświetlane; zostanie wyświetlona tylko etykietka narzędzia dla elementu nadrzędnego <xref:System.Windows.Forms.ListViewItem> .  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.ListView> formant z trzema <xref:System.Windows.Forms.ListViewItem> określonymi obiektami i trzema <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiektami określonymi dla każdego elementu. Przykład tworzy <xref:System.Windows.Forms.ColumnHeader> również obiekty do wyświetlania elementów podelementowych w widoku szczegółów. Dwa <xref:System.Windows.Forms.ImageList> obiekty są również tworzone w przykładzie kodu, aby zapewnić obrazy <xref:System.Windows.Forms.ListViewItem> dla obiektów. Te <xref:System.Windows.Forms.ImageList> obiekty są dodawane <xref:System.Windows.Forms.ListView.LargeImageList%2A> do właściwości i <xref:System.Windows.Forms.ListView.SmallImageList%2A> . W przykładzie zastosowano następujące właściwości podczas tworzenia <xref:System.Windows.Forms.ListView> formantu.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Ten przykład wymaga, aby dodano kod do <xref:System.Windows.Forms.Form> i wywołać metodę utworzoną w przykładzie z konstruktora lub innej metody w formularzu. Przykład wymaga również, aby obrazy o `MySmallImage1`nazwach `MyLargeImage1` `MySmallImage2`,, `MyLargeImage2` i znajdowały się w katalogu głównym dysku C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="F:System.Windows.Forms.View.Details" />
      </Docs>
    </Member>
    <Member MemberName="GetItemAt">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem GetItemAt (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem GetItemAt(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.GetItemAt(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemAt (x As Integer, y As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ GetItemAt(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.GetItemAt : int * int -&gt; System.Windows.Forms.ListViewItem" Usage="listView.GetItemAt (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">Współrzędna x lokalizacji do wyszukania elementu (wyrażona we współrzędnych klienta).</param>
        <param name="y">Współrzędna y lokalizacji do wyszukania elementu (wyrażona we współrzędnych klienta).</param>
        <summary>Pobiera element w określonej lokalizacji.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> Reprezentuje element w określonej pozycji. Jeśli w określonej lokalizacji nie ma żadnego elementu, metoda zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda pozwala określić, który element znajduje się w określonej lokalizacji w regionie <xref:System.Windows.Forms.ListView> klienta formantu. <xref:System.Windows.Forms.ListView.GetItemAt%2A> Tej metody można użyć, gdy użytkownik kliknie lub kliknie prawym przyciskiem myszy element podrzędny (gdy <xref:System.Windows.Forms.ListView.View%2A> właściwość jest ustawiona na `View.Details`) i chcesz określić, który element jest elementem podrzędnym, który został kliknięty na podstawie współrzędnych myszy w momencie kliknięcia myszą. .  
  
> [!NOTE]
>  Gdy wartość `false`właściwości jest, ta metoda zwraca element tylko wtedy, gdy określona lokalizacja znajduje się w granicach elementu nadrzędnego (który jest wyświetlany w pierwszej kolumnie, gdy formant jest w trybie szczegóły). <xref:System.Windows.Forms.ListView.FullRowSelect%2A> Należy ustawić <xref:System.Windows.Forms.ListView.FullRowSelect%2A> `true` właściwość na, aby pobrać element z tą metodą przy użyciu lokalizacji w granicach elementu podrzędnego. Można również użyć <xref:System.Windows.Forms.ListView.HitTest%2A> metody do pobierania szczegółowych informacji o elemencie w określonej lokalizacji.  
  
 Aby przeciągać i upuszczać zmiany położenia elementów w obrębie <xref:System.Windows.Forms.ListView>, warto <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A?displayProperty=nameWithType> użyć metody zamiast <xref:System.Windows.Forms.ListView.GetItemAt%2A> metody. <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A?displayProperty=nameWithType> Metoda znajduje najbliższy element, niezależnie od miejsca, w którym znajduje się wskaźnik myszy. Metoda z drugiej strony zwraca wartość `null` , jeśli nie ma żadnego elementu w określonej lokalizacji. <xref:System.Windows.Forms.ListView.GetItemAt%2A>  
  
> [!NOTE]
>  Klasa jest obsługiwana tylko w systemach Windows XP i Windows Server 2003, gdy aplikacja <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> wywołuje metodę. <xref:System.Windows.Forms.ListViewInsertionMark>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Windows.Forms.PictureBox> formantów i. <xref:System.Windows.Forms.ListView> <xref:System.Windows.Forms.PictureBox.SizeMode%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.BorderStyle> <xref:System.Windows.Forms.PictureBoxSizeMode> Jest inicjowany przez ustawienie właściwości <xref:System.Windows.Forms.PictureBox.BorderStyle%2A?displayProperty=nameWithType> i odpowiednio przy użyciu i wyliczenia. <xref:System.Windows.Forms.PictureBox> <xref:System.Windows.Forms.ListView> Zostanie wypełniony obrazami z katalogu przykładów. Metoda jest używana w przypadku obsługi <xref:System.Windows.Forms.Control.MouseDown> zdarzenia kontrolki w celu ustalenia, <xref:System.Windows.Forms.ListView> czy element jest zaznaczony. <xref:System.Windows.Forms.ListView.GetItemAt%2A> Jeśli wybrano element, program obsługi zdarzeń wyświetli wybrany plik przez ustawienie <xref:System.Windows.Forms.PictureBox.Image%2A?displayProperty=nameWithType> właściwości. Przykład wymaga istnienia plików JPG znajdujących się w katalogu C:\Documents and Settings\All Users\Documents\My Pictures\Sample obrazy. Aby uruchomić ten przykład, wklej kod do formularza i Wywołaj `InitializePictureBox` metody i `PopulateListView` w konstruktorze lub `Load` metodzie formularza. Upewnij się, że wszystkie zdarzenia są skojarzone z ich obsługą zdarzeń.  
  
 [!code-cpp[System.Windows.Forms.ListViewAndPictureBox#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListViewAndPictureBox/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListViewAndPictureBox#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewAndPictureBox/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ListViewAndPictureBox#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewAndPictureBox/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)" />
        <altmember cref="T:System.Windows.Forms.ListViewInsertionMark" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetItemRect">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera prostokąt powiązany dla elementu w formancie.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetItemRect">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetItemRect (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetItemRect(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.GetItemRect(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemRect (index As Integer) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetItemRect(int index);" />
      <MemberSignature Language="F#" Value="member this.GetItemRect : int -&gt; System.Drawing.Rectangle" Usage="listView.GetItemRect index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeks (liczony od zera) elementu w obrębie <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> którego prostokąt powiązania, który ma zostać zwrócony.</param>
        <summary>Pobiera prostokąt ograniczenia dla określonego elementu w kontrolce widoku listy.</summary>
        <returns>Reprezentuje prostokąt ograniczający określony <see cref="T:System.Windows.Forms.ListViewItem" />. <see cref="T:System.Drawing.Rectangle" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Prostokąt ograniczający zwrócony przez tę wersję <xref:System.Windows.Forms.ListView.GetItemRect%2A> metody reprezentuje cały element, łącznie z ikoną, tekstem elementu i tekstem SubItem. Aby określić konkretną część prostokąta granicy elementu, użyj innej wersji <xref:System.Windows.Forms.ListView.GetItemRect%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName="GetItemRect">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetItemRect (int index, System.Windows.Forms.ItemBoundsPortion portion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetItemRect(int32 index, valuetype System.Windows.Forms.ItemBoundsPortion portion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.GetItemRect(System.Int32,System.Windows.Forms.ItemBoundsPortion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemRect (index As Integer, portion As ItemBoundsPortion) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetItemRect(int index, System::Windows::Forms::ItemBoundsPortion portion);" />
      <MemberSignature Language="F#" Value="member this.GetItemRect : int * System.Windows.Forms.ItemBoundsPortion -&gt; System.Drawing.Rectangle" Usage="listView.GetItemRect (index, portion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="portion" Type="System.Windows.Forms.ItemBoundsPortion" />
      </Parameters>
      <Docs>
        <param name="index">Indeks (liczony od zera) elementu w obrębie <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> którego prostokąt powiązania, który ma zostać zwrócony.</param>
        <param name="portion">Jedna z <see cref="T:System.Windows.Forms.ItemBoundsPortion" /> wartości, która reprezentuje część elementu, <see cref="T:System.Windows.Forms.ListViewItem" /> dla którego ma zostać pobrany prostokąt ograniczający.</param>
        <summary>Pobiera określoną część prostokąta ograniczonego dla określonego elementu w kontrolce widoku listy.</summary>
        <returns>Reprezentuje prostokąt ograniczający dla określonej części określonego <see cref="T:System.Windows.Forms.ListViewItem" />. <see cref="T:System.Drawing.Rectangle" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Prostokąt ograniczający zwrócony przez tę wersję <xref:System.Windows.Forms.ListView.GetItemRect%2A> metody reprezentuje tylko sekcję elementu określonego `portion` w parametrze. Aby zwrócić prostokąt ograniczenia całego elementu, użyj innej wersji <xref:System.Windows.Forms.ListView.GetItemRect%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="T:System.Windows.Forms.ItemBoundsPortion" />
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public bool GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.GridLines" />
      <MemberSignature Language="VB.NET" Value="Public Property GridLines As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GridLines { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.GridLines : bool with get, set" Usage="System.Windows.Forms.ListView.GridLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy linie siatki są widoczne między wierszami i kolumnami zawierającymi elementy i podelementy w formancie.</summary>
        <value><see langword="true" />Jeśli linie siatki są rysowane wokół elementów i podelementów; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość nie ma żadnego efektu, <xref:System.Windows.Forms.ListView.View%2A> chyba że właściwość <xref:System.Windows.Forms.ListView> kontrolki jest ustawiona na <xref:System.Windows.Forms.View.Details>. <xref:System.Windows.Forms.ListView.GridLines%2A> Właściwość pozwala wyświetlić linie do identyfikacji wierszy i kolumn, które są wyświetlane <xref:System.Windows.Forms.ListView> w kontrolce, gdy wyświetla elementy i ich podpozycje. <xref:System.Windows.Forms.ListView.GridLines%2A> Wyświetlane linie siatki nie zapewniają możliwości zmiany rozmiaru wierszy i kolumn w ramach aplikacji, takiej jak program Microsoft Excel. Można zmieniać rozmiar tylko kolumn, jeśli są wyświetlane nagłówki kolumn, przesuwając wskaźnik myszy do prawej krawędzi kolumny, aby zmienić rozmiar, a następnie klikając i przeciągając, dopóki kolumna ma żądany rozmiar. Funkcja linii siatki służy do zapewnienia użytkownikowi kontrolki z widocznymi granicami wokół elementów i podelementów.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.ListView> formant z trzema <xref:System.Windows.Forms.ListViewItem> określonymi obiektami i trzema <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiektami określonymi dla każdego elementu. Przykład tworzy <xref:System.Windows.Forms.ColumnHeader> również obiekty do wyświetlania elementów podelementowych w widoku szczegółów. Dwa <xref:System.Windows.Forms.ImageList> obiekty są również tworzone w przykładzie kodu, aby zapewnić obrazy <xref:System.Windows.Forms.ListViewItem> dla obiektów. Te <xref:System.Windows.Forms.ImageList> obiekty są dodawane <xref:System.Windows.Forms.ListView.LargeImageList%2A> do właściwości i <xref:System.Windows.Forms.ListView.SmallImageList%2A> . W przykładzie zastosowano następujące właściwości podczas tworzenia <xref:System.Windows.Forms.ListView> formantu.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Ten przykład wymaga, aby dodano kod do <xref:System.Windows.Forms.Form> i wywołać metodę utworzoną w przykładzie z konstruktora lub innej metody w formularzu. Przykład wymaga również, aby obrazy o `MySmallImage1`nazwach `MyLargeImage1` `MySmallImage2`,, `MyLargeImage2` i znajdowały się w katalogu głównym dysku C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.View" />
      </Docs>
    </Member>
    <Member MemberName="Groups">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroupCollection Groups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewGroupCollection Groups" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Groups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Groups As ListViewGroupCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewGroupCollection ^ Groups { System::Windows::Forms::ListViewGroupCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Groups : System.Windows.Forms.ListViewGroupCollection" Usage="System.Windows.Forms.ListView.Groups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListViewGroupCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListViewGroupCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroupCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see cref="T:System.Windows.Forms.ListViewGroup" /> obiektów przypisanych do kontrolki.</summary>
        <value>A <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> , który zawiera wszystkie grupy <see cref="T:System.Windows.Forms.ListView" /> w formancie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Funkcja grupowania umożliwia tworzenie wizualnych grup elementów powiązanych <xref:System.Windows.Forms.ListView> logicznie. <xref:System.Windows.Forms.ListView> Każda grupa składa się z nagłówka tekstowego, po którym następuje linia pozioma i elementy przypisane do tej grupy. Możesz wyrównać tekst nagłówka do lewej, prawej lub środka kontrolki. Wszystkie grupy przypisane do <xref:System.Windows.Forms.ListView> kontrolki pojawiają się za każdym razem, <xref:System.Windows.Forms.ListView.View%2A> gdy właściwość jest ustawiona <xref:System.Windows.Forms.View.List?displayProperty=nameWithType>na wartość inną niż.  
  
 <xref:System.Windows.Forms.ListView>grupy pomagają użytkownikom znaleźć elementy, których szukasz, oddzielając elementy do przydatnych kategorii. Możesz utworzyć dowolne kategorie, których potrzebujesz. Typowym podejściem jest grupowanie elementów w oparciu o sposób sortowania listy. Na przykład można grupować elementy według początkowej litery nazwy elementu, gdy lista jest sortowana alfabetycznie lub według elementów, takich jak typ lub data, gdy lista jest sortowana przez kliknięcie nagłówka kolumny w widoku szczegółów. Eksplorator Windows używa tego typu grupowania.  
  
 Aby użyć funkcji grupowania, Dodaj jeden lub więcej <xref:System.Windows.Forms.ListViewGroup> obiektów <xref:System.Windows.Forms.ListView.Groups%2A> do kolekcji <xref:System.Windows.Forms.ListView> kontrolki. Ustaw tekst nagłówka grupy i wyrównanie nagłówka w <xref:System.Windows.Forms.ListViewGroup.%23ctor%2A> konstruktorze lub ustaw je <xref:System.Windows.Forms.ListViewGroup.Header%2A?displayProperty=nameWithType> przy użyciu właściwości i <xref:System.Windows.Forms.ListViewGroup.HeaderAlignment%2A?displayProperty=nameWithType> .  
  
 Aby tymczasowo wyłączyć funkcję grupowania, należy ustawić <xref:System.Windows.Forms.ListView.ShowGroups%2A> właściwość na. `false`  
  
 Można przypisać element do grupy przez określenie grupy w <xref:System.Windows.Forms.ListViewItem.%23ctor%2A> konstruktorze przez <xref:System.Windows.Forms.ListViewItem.Group%2A?displayProperty=nameWithType> ustawienie właściwości lub przez bezpośrednie <xref:System.Windows.Forms.ListViewGroup.Items%2A?displayProperty=nameWithType> dodanie elementu do kolekcji grupy. Przed wyświetleniem wszystkich elementów należy je przypisać do grup. Wszystkie elementy, które nie są przypisane do grupy, pojawią się w grupie domyślnej, która ma etykietę nagłówka "default{0}Group". Grupa domyślna nie jest zawarta w <xref:System.Windows.Forms.ListView.Groups%2A> kolekcji i nie można jej zmienić. Jest to szczególnie przydatne w debugowaniu, aby upewnić się, że wszystkie elementy zostały prawidłowo dodane do grup.  
  
 Element może znajdować się tylko w jednej grupie naraz. Można zmienić grupę, do której należy element, ustawiając <xref:System.Windows.Forms.ListViewItem.Group%2A?displayProperty=nameWithType> właściwość w czasie wykonywania lub dodając ją <xref:System.Windows.Forms.ListViewGroup.Items%2A?displayProperty=nameWithType> do kolekcji innej grupy, która automatycznie usuwa ją z poprzedniej grupy.  
  
 Funkcja znacznika wstawiania jest wyłączona w przypadku używania grup. Jest to spowodowane tym, że funkcja grupowania Porządkuje elementy według członkostwa w grupie, podczas gdy funkcja znacznika wstawiania jest używana z zmianami położenia przeciągania i upuszczania <xref:System.Windows.Forms.ListView> w kontrolce, która nie ma jeszcze kolejności elementów.  
  
 <xref:System.Windows.Forms.ListView>grupy są dostępne tylko w systemach Windows XP i Windows Server 2003, gdy aplikacja wywołuje <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> metodę. We wcześniejszych systemach operacyjnych każdy kod dotyczący grup nie ma wpływu, a grupy nie będą wyświetlane. W efekcie każdy kod, który zależy od funkcji grupowania, może nie funkcjonować prawidłowo.  
  
 Możesz chcieć dołączyć kod określający, czy funkcja grupowania jest dostępna, i zapewnić alternatywne funkcje, gdy jest ona niedostępna. Można na przykład podać alternatywne sortowanie w przypadku uruchamiania w systemach operacyjnych, które nie obsługują sortowania według grup.  
  
 Funkcja grupowania jest udostępniana przez tę samą bibliotekę, która udostępnia funkcję motywów systemu operacyjnego. Aby sprawdzić dostępność tej biblioteki, wywołaj <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> metodę przeciążenia metody i przekaż <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> wartość.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Windows.Forms.ListView> jak używać funkcji grupowania do organizowania elementów według wartości elementu SubItem w widoku szczegółów. Ta forma grupowania przypomina grupowanie używane w Eksploratorze Windows. W tym przykładzie grupy są tworzone dynamicznie. Dla każdej kolumny SubItem jest tworzona jedna grupa dla każdej unikatowej wartości SubItem. Dla kolumny element nadrzędny jest tworzona jedna grupa dla każdej unikatowej litery początkowej. Kliknięcie nagłówka kolumny sortuje elementy do grup utworzonych dla tej kolumny. Kliknięcie tego samego nagłówka kolumny powoduje odwrócenie kolejności grup.  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
        <altmember cref="T:System.Windows.Forms.ListViewGroupCollection" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="P:System.Windows.Forms.ListView.ShowGroups" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ColumnHeaderStyle HeaderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ColumnHeaderStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderStyle As ColumnHeaderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ColumnHeaderStyle HeaderStyle { System::Windows::Forms::ColumnHeaderStyle get(); void set(System::Windows::Forms::ColumnHeaderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderStyle : System.Windows.Forms.ColumnHeaderStyle with get, set" Usage="System.Windows.Forms.ListView.HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnHeaderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia styl nagłówka kolumny.</summary>
        <value>Jedna z <see cref="T:System.Windows.Forms.ColumnHeaderStyle" /> wartości. Wartość domyślna to <see cref="F:System.Windows.Forms.ColumnHeaderStyle.Clickable" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.View.Details> <xref:System.Windows.Forms.ListView> <xref:System.Windows.Forms.ListView.View%2A> <xref:System.Windows.Forms.ColumnHeader> <xref:System.Windows.Forms.ListView> Właściwość pozwala określić typ nagłówków kolumn, które mają być wyświetlane, gdy właściwość kontrolki jest ustawiona na, a kontrolka ma obiekty określone w <xref:System.Windows.Forms.ListView.HeaderStyle%2A> <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>. <xref:System.Windows.Forms.ColumnHeader>obiekty definiują kolumny, które są wyświetlane w <xref:System.Windows.Forms.ListView> formancie. Każda kolumna służy do wyświetlania informacji o podelemencie dla każdego elementu w <xref:System.Windows.Forms.ListView>.  
  
 <xref:System.Windows.Forms.ListView.HeaderStyle%2A> Właściwość pozwala określić, czy nagłówki kolumn są widoczne, czy jeśli są widoczne, niezależnie od tego, czy będą one działać jako przyciski klikania. Jeśli właściwość jest ustawiona na <xref:System.Windows.Forms.ColumnHeaderStyle.None?displayProperty=nameWithType>, nagłówki kolumn nie są wyświetlane, mimo że elementy <xref:System.Windows.Forms.ListView> i podelementy formantu są nadal ułożone w kolumnach. <xref:System.Windows.Forms.ListView.HeaderStyle%2A> Jeśli właściwość jest ustawiona na <xref:System.Windows.Forms.ColumnHeaderStyle.Clickable?displayProperty=nameWithType>, nagłówki kolumn przypominają przyciski, które użytkownicy mogą kliknąć, aby wykonać akcję, na przykład <xref:System.Windows.Forms.ListView> sortowanie elementów w kontrolce przy użyciu elementów w klikniętej kolumnie jako klucz. <xref:System.Windows.Forms.ListView.HeaderStyle%2A> To zachowanie można zaimplementować w programie obsługi <xref:System.Windows.Forms.ListView.ColumnClick> zdarzenia. Jeśli właściwość jest ustawiona na <xref:System.Windows.Forms.ColumnHeaderStyle.Nonclickable?displayProperty=nameWithType>, pojawiają się nagłówki kolumn, ale nie można jej kliknąć. <xref:System.Windows.Forms.ListView.HeaderStyle%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje <xref:System.Windows.Forms.ListView> , że można wybrać wiele elementów. W przykładzie pokazano, <xref:System.Windows.Forms.ListView.HideSelection%2A> jak ustawić właściwości i. <xref:System.Windows.Forms.ListView.HeaderStyle%2A> Przedstawiono w <xref:System.Windows.Forms.ColumnHeader.Text%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.ColumnHeader.Width%2A?displayProperty=nameWithType> nim również właściwości i. <xref:System.Windows.Forms.ColumnHeader.TextAlign%2A?displayProperty=nameWithType> Aby uruchomić ten przykład, wklej następujący kod do <xref:System.Windows.Forms.ListView> formularza, który zawiera obiekt o nazwie `ListView1` i <xref:System.Windows.Forms.TextBox> nazwa `TextBox1`. <xref:System.Windows.Forms.Form.Load> Wywołaj `InitializeListView` metodę z konstruktora lub procedury obsługi zdarzeń.  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Określona wartość nie jest jedną z <see cref="T:System.Windows.Forms.ColumnHeaderStyle" /> wartości.</exception>
        <altmember cref="E:System.Windows.Forms.ListView.ColumnClick" />
        <altmember cref="T:System.Windows.Forms.ColumnHeaderStyle" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="HideSelection">
      <MemberSignature Language="C#" Value="public bool HideSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.HideSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property HideSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HideSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HideSelection : bool with get, set" Usage="System.Windows.Forms.ListView.HideSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy wybrany element kontrolki pozostanie wyróżniony, gdy kontrolka utraci fokus.</summary>
        <value><see langword="true" />Jeśli wybrany element nie zostanie wyróżniony, gdy kontrolka utraci fokus; <see langword="false" /> Jeśli wybrany element nadal pojawia się jako wyróżniony, gdy kontrolka utraci fokus. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy ta właściwość jest ustawiona na `false`, wybrane elementy <xref:System.Windows.Forms.ListView> w kontrolce pozostaną wyróżnione w innym kolorze niż bieżący kolor zaznaczenia określony przez system operacyjny <xref:System.Windows.Forms.ListView> , gdy kontrolka utraci fokus. Za pomocą tej właściwości można zachować elementy wybrane przez użytkownika jako widoczne, gdy użytkownik kliknie inną kontrolkę w formularzu lub przejdzie do innego okna.  
  
> [!NOTE]
>  Jeśli chcesz mieć dostęp do aplikacji, zalecamy ustawienie <xref:System.Windows.Forms.ListView.HideSelection%2A> właściwości na. `false`  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje <xref:System.Windows.Forms.ListView> , że można wybrać wiele elementów. W przykładzie pokazano, <xref:System.Windows.Forms.ListView.HideSelection%2A> jak ustawić właściwości i. <xref:System.Windows.Forms.ListView.HeaderStyle%2A> Przedstawiono w <xref:System.Windows.Forms.ColumnHeader.Text%2A?displayProperty=nameWithType>nim również właściwości <xref:System.Windows.Forms.ColumnHeader.TextAlign%2A?displayProperty=nameWithType>, i <xref:System.Windows.Forms.ColumnHeader.Width%2A?displayProperty=nameWithType> . Aby uruchomić ten przykład, wklej następujący kod do <xref:System.Windows.Forms.ListView> formularza, który zawiera obiekt o nazwie `ListView1` i <xref:System.Windows.Forms.TextBox> nazwa `TextBox1`. <xref:System.Windows.Forms.Form.Load> Wywołaj `InitializeListView` metodę z konstruktora lub procedury obsługi zdarzeń.  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTest">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zawiera informacje o elemencie, pod kątem współrzędnych x i y.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewHitTestInfo HitTest (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewHitTestInfo HitTest(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.HitTest(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewHitTestInfo ^ HitTest(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.HitTest : System.Drawing.Point -&gt; System.Windows.Forms.ListViewHitTestInfo" Usage="listView.HitTest point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewHitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="point">, <see cref="T:System.Drawing.Point" /> Z którego mają zostać pobrane informacje o elemencie. Współrzędne są względne w lewym górnym rogu kontrolki.</param>
        <summary>Zawiera informacje o elemencie, na których znajduje się punkt.</summary>
        <returns>Informacje o elemencie, na których znajduje się punkt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, aby określić, czy punkt znajduje się w elemencie, czy w elemencie, gdzie znajduje się punkt, na przykład w obszarze Etykieta lub obraz. Jeśli współrzędne znajdują się poza kontrolką, zwracany <xref:System.Windows.Forms.ListViewHitTestInfo> obiekt <xref:System.Windows.Forms.ListViewHitTestInfo.Location%2A> ma właściwość " <xref:System.Windows.Forms.ListViewHitTestInfo.Item%2A> none" (brak), a właściwości i <xref:System.Windows.Forms.ListViewHitTestInfo.SubItem%2A> są ustawione na `null`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Punkt zawiera współrzędne, które są mniejsze od 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewHitTestInfo HitTest (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewHitTestInfo HitTest(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.HitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (x As Integer, y As Integer) As ListViewHitTestInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewHitTestInfo ^ HitTest(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.HitTest : int * int -&gt; System.Windows.Forms.ListViewHitTestInfo" Usage="listView.HitTest (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewHitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="y" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="x">Współrzędna x, z której mają zostać pobrane informacje o elemencie. Współrzędna jest względem lewego górnego rogu kontrolki.</param>
        <param name="y">Współrzędna y, w której mają zostać pobrane informacje o elemencie. Współrzędna jest względem lewego górnego rogu kontrolki.</param>
        <summary>Zawiera informacje o elemencie, pod którymi współrzędne x i y.</summary>
        <returns>Informacje o elemencie, pod którymi współrzędne x i y.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, aby określić, czy punkt znajduje się w elemencie, czy w elemencie, gdzie znajduje się punkt, na przykład w obszarze Etykieta lub obraz. Jeśli współrzędne znajdują się poza kontrolką, zwracany <xref:System.Windows.Forms.ListViewHitTestInfo> obiekt <xref:System.Windows.Forms.ListViewHitTestInfo.Location%2A> ma właściwość " <xref:System.Windows.Forms.ListViewHitTestInfo.Item%2A> none" (brak), a właściwości i <xref:System.Windows.Forms.ListViewHitTestInfo.SubItem%2A> są ustawione na `null`.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Windows.Forms.ListView.HitTest%2A> metody, aby określić lokalizację zdarzenia myszy <xref:System.Windows.Forms.ListView>w. Aby uruchomić ten przykład, wklej go do formularza systemu Windows zawierającego <xref:System.Windows.Forms.ListView> nazwę `listView1` , która jest wypełniana elementami. Skojarz zdarzenie dla `listView1` z`listView1_MouseDown` metodą w tym przykładzie. <xref:System.Windows.Forms.Control.MouseDown>  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Współrzędna x lub y jest mniejsza od 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="HotTracking">
      <MemberSignature Language="C#" Value="public bool HotTracking { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HotTracking" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.HotTracking" />
      <MemberSignature Language="VB.NET" Value="Public Property HotTracking As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HotTracking { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HotTracking : bool with get, set" Usage="System.Windows.Forms.ListView.HotTracking" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy tekst elementu lub podelementu ma wygląd hiperlinku, gdy wskaźnik myszy przesuwa się nad nim.</summary>
        <value><see langword="true" />Jeśli tekst elementu ma wygląd hiperlinku, gdy wskaźnik myszy przesuwa się nad nim. w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.Activation%2A> Włączenie śledzenia dynamicznego spowoduje, że właściwość zostanie ustawiona na <xref:System.Windows.Forms.ItemActivation.OneClick> i <xref:System.Windows.Forms.ListView.HoverSelection%2A> właściwość, która ma być ustawiona na `true`. Ponadto Edytowanie etykiet w czasie wykonywania nie jest dozwolone, gdy włączone jest śledzenie gorąca.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, że <xref:System.Windows.Forms.ListView> funkcja śledzenia gorąca jest włączona. Aby uruchomić ten przykład, wklej następujący kod do formularza systemu Windows i Wywołaj `InitializeHotTrackingListView` metodę z konstruktora lub <xref:System.Windows.Forms.Form.Load> procedury obsługi zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HoverSelection">
      <MemberSignature Language="C#" Value="public bool HoverSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HoverSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.HoverSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property HoverSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HoverSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HoverSelection : bool with get, set" Usage="System.Windows.Forms.ListView.HoverSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy element jest automatycznie wybierany, gdy wskaźnik myszy pozostaje nad elementem przez kilka sekund.</summary>
        <value><see langword="true" />Jeśli element jest automatycznie wybierany po umieszczeniu na nim wskaźnika myszy. w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy ta właściwość jest ustawiona na `true`, użytkownik może wskazać element <xref:System.Windows.Forms.ListView> w kontrolce, aby wybrać element. Można wybrać wiele elementów (gdy <xref:System.Windows.Forms.ListView.MultiSelect%2A> właściwość jest ustawiona na true), przytrzymując wciśnięty klawisz CTRL podczas wskazywania każdego elementu. Korzystając z tej funkcji, można ułatwić użytkownikowi aplikacji Wybieranie elementów w <xref:System.Windows.Forms.ListView> formancie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertionMark">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewInsertionMark InsertionMark { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewInsertionMark InsertionMark" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.InsertionMark" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertionMark As ListViewInsertionMark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewInsertionMark ^ InsertionMark { System::Windows::Forms::ListViewInsertionMark ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertionMark : System.Windows.Forms.ListViewInsertionMark" Usage="System.Windows.Forms.ListView.InsertionMark" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewInsertionMark</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt używany do wskazania oczekiwanej lokalizacji docelowej, gdy element zostanie przeciągnięty w obrębie <see cref="T:System.Windows.Forms.ListView" /> formantu.</summary>
        <value><see cref="T:System.Windows.Forms.ListViewInsertionMark" /> Obiekt reprezentujący znacznik wstawiania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Funkcja <xref:System.Windows.Forms.ListView> znacznika wstawiania pozwala wizualnie wskazywać oczekiwaną lokalizację upuszczania w operacji przeciągania i upuszczania, gdy element zostanie przeciągnięty do nowej pozycji. Ta funkcja działa tylko wtedy, <xref:System.Windows.Forms.ListView.AutoArrange%2A> gdy właściwość jest ustawiona `true` na i gdy <xref:System.Windows.Forms.ListView> formant nie sortuje elementów automatycznie. Aby <xref:System.Windows.Forms.ListView.Sorting%2A> uniemożliwić automatyczne sortowanie, właściwość musi być ustawiona na <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> i <xref:System.Windows.Forms.ListView.View%2A> właściwość musi być ustawiona na <xref:System.Windows.Forms.View.LargeIcon?displayProperty=nameWithType>, <xref:System.Windows.Forms.View.SmallIcon?displayProperty=nameWithType>lub <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType>. Ponadto funkcja znacznika wstawiania może nie być widoczna w funkcji grupowania, <xref:System.Windows.Forms.ListView> ponieważ funkcja grupowania Porządkuje elementy według członkostwa w grupie.  
  
 Klasa jest zwykle używana w programie obsługi <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> dla zdarzenia lub <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> do aktualizowania pozycji znacznika wstawiania w miarę przeciągania elementu. <xref:System.Windows.Forms.ListViewInsertionMark> Jest również używany w programie obsługi dla <xref:System.Windows.Forms.Control.DragDrop?displayProperty=nameWithType> zdarzenia lub <xref:System.Windows.Forms.Control.MouseUp?displayProperty=nameWithType> do wstawienia przeciąganego elementu we właściwym miejscu. Aby uzyskać więcej informacji, <xref:System.Windows.Forms.ListViewInsertionMark> zobacz [i instrukcje: Wyświetlanie znacznika wstawiania w Windows Forms kontrolce](~/docs/framework/winforms/controls/how-to-display-an-insertion-mark-in-a-windows-forms-listview-control.md)ListView.  
  
> [!NOTE]
>  Funkcja znacznika wstawiania jest dostępna tylko w systemach Windows XP i Windows Server 2003, gdy aplikacja wywołuje <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> metodę. We wcześniejszych systemach operacyjnych każdy kod odnoszący się do znacznika wstawiania nie ma żadnego efektu i znacznik wstawiania nie zostanie wyświetlony. W efekcie każdy kod, który zależy od funkcji znacznika wstawiania może nie działał poprawnie. Możesz chcieć dołączyć kod określający, czy ta funkcja jest dostępna, i zapewnić alternatywne funkcje, gdy jest ona niedostępna. Na przykład możesz chcieć ominąć cały kod, który implementuje zmianę położenia elementu metodą przeciągania i upuszczania w przypadku uruchamiania w systemach operacyjnych, które nie obsługują znaków wstawiania.  
>   
>  Funkcja znacznika wstawiania jest udostępniana przez tę samą bibliotekę, która udostępnia funkcję motywów systemu operacyjnego. Aby sprawdzić dostępność tej biblioteki, wywołaj <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> metodę przeciążenia metody i przekaż <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> wartość.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Windows.Forms.ListView> jak używać funkcji znacznika wstawiania. Ten przykład implementuje zmianę kolejności elementów metodą przeciągnij i upuść przy użyciu standardowych zdarzeń przeciągania. Pozycja znacznika wstawiania jest aktualizowana w procedurze obsługi <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> zdarzenia. W tym obsłudze, pozycja wskaźnika myszy jest porównywana z środkową częścią najbliższego elementu, a wynik służy do określenia, czy znacznik wstawiania pojawia się po lewej lub prawej stronie elementu.  
  
 [!code-cpp[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CPP/listviewinsertionmarkexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CS/listviewinsertionmarkexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/VB/listviewinsertionmarkexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewInsertionMark" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.IsInputKey : System.Windows.Forms.Keys -&gt; bool" Usage="listView.IsInputKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Jedna z <see cref="T:System.Windows.Forms.Keys" /> wartości.</param>
        <summary>Określa, czy określony klucz jest zwykłym kluczem wejściowym, czy specjalnym kluczem wymagającym przetwarzania wstępnego.</summary>
        <returns><see langword="true" />Jeśli określony klucz jest zwykłym kluczem wejściowym; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemActivate">
      <MemberSignature Language="C#" Value="public event EventHandler ItemActivate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ItemActivate" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemActivate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemActivate As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ItemActivate;" />
      <MemberSignature Language="F#" Value="member this.ItemActivate : EventHandler " Usage="member this.ItemActivate : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy element zostanie aktywowany.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie <xref:System.Windows.Forms.ListView.ItemActivate> występuje, gdy użytkownik aktywuje jeden lub więcej elementów <xref:System.Windows.Forms.ListView> w kontrolce. Użytkownik może uaktywnić element za pomocą pojedynczego kliknięcia lub dwukrotnego kliknięcia, w zależności od wartości <xref:System.Windows.Forms.ListView.Activation%2A> właściwości lub klawiatury. Z poziomu procedury obsługi zdarzeń <xref:System.Windows.Forms.ListView.ItemActivate> dla zdarzenia można odwołać się <xref:System.Windows.Forms.ListView.SelectedItems%2A> do właściwości lub <xref:System.Windows.Forms.ListView.SelectedIndices%2A> , aby <xref:System.Windows.Forms.ListView> uzyskać dostęp do kolekcji elementów wybranych w programie w celu ustalenia, które elementy są aktywowane.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportuje wystąpienie <xref:System.Windows.Forms.ListView.ItemActivate> zdarzenia. Ten raport pomaga dowiedzieć się, kiedy wystąpi zdarzenie i może pomóc w debugowaniu. Aby zgłosić wiele zdarzeń lub zdarzenia, które występują często, należy rozważyć <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> zamianę <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączenie komunikatu do wielowierszowego <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu zawierającego wystąpienie typu <xref:System.Windows.Forms.ListView> o nazwie. `ListView1` Następnie upewnij się, że program obsługi zdarzeń jest skojarzony <xref:System.Windows.Forms.ListView.ItemActivate> ze zdarzeniem.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#473](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#473)]
 [!code-vb[System.Windows.Forms.EventExamples#473](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#473)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnItemActivate(System.EventArgs)" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="P:System.Windows.Forms.ListView.Activation" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedItems" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedIndices" />
      </Docs>
    </Member>
    <Member MemberName="ItemCheck">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ItemCheckEventHandler ItemCheck;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ItemCheckEventHandler ItemCheck" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemCheck" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCheck As ItemCheckEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ItemCheckEventHandler ^ ItemCheck;" />
      <MemberSignature Language="F#" Value="member this.ItemCheck : System.Windows.Forms.ItemCheckEventHandler " Usage="member this.ItemCheck : System.Windows.Forms.ItemCheckEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemCheckEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy zmieni się stan zaznaczenia elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość <xref:System.Windows.Forms.ListView.CheckBoxes%2A> musi mieć ustawioną wartość true, aby pola wyboru były wyświetlane obok każdego elementu <xref:System.Windows.Forms.ListView> w formancie. Zdarzenie występuje, gdy stan zaznaczenia elementu ulegnie zmianie lub <xref:System.Windows.Forms.ListView.CheckBoxes%2A> gdy właściwość jest ustawiona na `true`. <xref:System.Windows.Forms.ListView.ItemCheck> Można utworzyć procedurę obsługi zdarzeń dla <xref:System.Windows.Forms.ListView.ItemCheck> zdarzenia do wykonywania zadań, takich jak zmiana stanu ikony elementu lub innego zadania specyficznego dla aplikacji za każdym razem, gdy element jest sprawdzany <xref:System.Windows.Forms.ListView> w formancie.  
  
> [!NOTE]
>  Jeśli uchwyt okna nie został utworzony po <xref:System.Windows.Forms.ListView.ItemCheck> wywołaniu zdarzenia, zdarzenie zostanie opóźnione. Po utworzeniu uchwytu okna (gdy formularz zostanie wyświetlony) zostaną zgłoszone wszystkie opóźnione <xref:System.Windows.Forms.ListView.ItemCheck> zdarzenia. Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Forms.Control.HandleCreated>.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje kontrolkę sprawdzoną <xref:System.Windows.Forms.ListView> , która <xref:System.Windows.Forms.ListView.ItemCheck> obsługuje zdarzenie. Metoda używa <xref:System.Windows.Forms.ItemCheckEventArgs.CurrentValue%2A?displayProperty=nameWithType> właściwości i <xref:System.Windows.Forms.ItemCheckEventArgs.Index%2A?displayProperty=nameWithType> do pobierania i ustalania cen wybranych elementów menu. Aby uruchomić ten przykład, wklej następujący kod do formularza `ListView` zawierającego nazwę `ListView1` i `TextBox` nazwę `Textbox1`. `Load` Wywołaj `InitializeListView` metodę z konstruktora lub metody formularza. Upewnij się, <xref:System.Windows.Forms.ListView.ItemCheck> że zdarzenie jest skojarzone z programem obsługi zdarzeń w tym przykładzie.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" />
        <altmember cref="T:System.Windows.Forms.ItemCheckEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ItemChecked">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ItemCheckedEventHandler ItemChecked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ItemCheckedEventHandler ItemChecked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemChecked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemChecked As ItemCheckedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ItemCheckedEventHandler ^ ItemChecked;" />
      <MemberSignature Language="F#" Value="member this.ItemChecked : System.Windows.Forms.ItemCheckedEventHandler " Usage="member this.ItemChecked : System.Windows.Forms.ItemCheckedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemCheckedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zmianie stanu zaznaczenia elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest podobne do <xref:System.Windows.Forms.ListView.ItemCheck> zdarzenia, ale jest wywoływane po sprawdzeniu elementu.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportuje wystąpienie <xref:System.Windows.Forms.ListView.ItemChecked> zdarzenia. Ten raport pomaga dowiedzieć się, kiedy wystąpi zdarzenie i może pomóc w debugowaniu. Aby zgłosić wiele zdarzeń lub zdarzenia, które występują często, należy rozważyć <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> zamianę <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączenie komunikatu do wielowierszowego <xref:System.Windows.Forms.TextBox>.  
  
 Aby uzyskać inny przykład, zobacz <xref:System.Windows.Forms.ListView.ItemCheck> zdarzenie. Kod działa równie dobrze, gdy obsługa zdarzeń jest dołączona do <xref:System.Windows.Forms.ListView.ItemChecked> zdarzenia.  
  
 Aby uruchomić ten przykładowy kod, wklej go do projektu zawierającego wystąpienie typu <xref:System.Windows.Forms.ListView> o nazwie. `ListView1` Następnie upewnij się, że program obsługi zdarzeń jest skojarzony <xref:System.Windows.Forms.ListView.ItemChecked> ze zdarzeniem.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#475](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#475)]
 [!code-vb[System.Windows.Forms.EventExamples#475](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#475)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ItemDragEventHandler ItemDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ItemDragEventHandler ItemDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDrag As ItemDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ItemDragEventHandler ^ ItemDrag;" />
      <MemberSignature Language="F#" Value="member this.ItemDrag : System.Windows.Forms.ItemDragEventHandler " Usage="member this.ItemDrag : System.Windows.Forms.ItemDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy użytkownik rozpocznie przeciąganie elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.ItemDrag> Zdarzenie występuje, gdy użytkownik rozpocznie przeciąganie elementu. Zazwyczaj procedura obsługi zdarzeń dla <xref:System.Windows.Forms.ListView.ItemDrag> zdarzenia wykonuje zadanie przeciągania przez <xref:System.Windows.Forms.Control.DoDragDrop%2A?displayProperty=nameWithType> wywołanie metody. To zdarzenie służy do wykonywania zadań niezbędnych do przeciągnięcia elementów do i z <xref:System.Windows.Forms.ListView> kontrolki aplikacji.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportuje wystąpienie <xref:System.Windows.Forms.ListView.ItemDrag> zdarzenia. Ten raport pomaga dowiedzieć się, kiedy wystąpi zdarzenie i może pomóc w debugowaniu. Aby zgłosić wiele zdarzeń lub zdarzenia, które występują często, należy rozważyć <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> zamianę <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączenie komunikatu do wielowierszowego <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu zawierającego wystąpienie typu <xref:System.Windows.Forms.ListView> o nazwie. `ListView1` Następnie upewnij się, że program obsługi zdarzeń jest skojarzony <xref:System.Windows.Forms.ListView.ItemDrag> ze zdarzeniem.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#476](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#476)]
 [!code-vb[System.Windows.Forms.EventExamples#476](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#476)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" />
        <altmember cref="T:System.Windows.Forms.ItemDragEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ItemMouseHover">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ListViewItemMouseHoverEventHandler ItemMouseHover;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ListViewItemMouseHoverEventHandler ItemMouseHover" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemMouseHover" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemMouseHover As ListViewItemMouseHoverEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ListViewItemMouseHoverEventHandler ^ ItemMouseHover;" />
      <MemberSignature Language="F#" Value="member this.ItemMouseHover : System.Windows.Forms.ListViewItemMouseHoverEventHandler " Usage="member this.ItemMouseHover : System.Windows.Forms.ListViewItemMouseHoverEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItemMouseHoverEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wskaźnik myszy znajduje się nad elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportuje wystąpienie <xref:System.Windows.Forms.ListView.ItemMouseHover> zdarzenia. Ten raport pomaga dowiedzieć się, kiedy wystąpi zdarzenie i może pomóc w debugowaniu. Aby zgłosić wiele zdarzeń lub zdarzenia, które występują często, należy rozważyć <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> zamianę <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączenie komunikatu do wielowierszowego <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu zawierającego wystąpienie typu <xref:System.Windows.Forms.ListView> o nazwie. `ListView1` Następnie upewnij się, że program obsługi zdarzeń jest skojarzony <xref:System.Windows.Forms.ListView.ItemMouseHover> ze zdarzeniem.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#477](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#477)]
 [!code-vb[System.Windows.Forms.EventExamples#477](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#477)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.ListViewItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/ListViewItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ListView.ListViewItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::ListViewItemCollection ^ Items { System::Windows::Forms::ListView::ListViewItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Windows.Forms.ListView.ListViewItemCollection" Usage="System.Windows.Forms.ListView.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListViewItemCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListViewItemCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+ListViewItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję zawierającą wszystkie elementy w kontrolce.</summary>
        <value>A <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> , który zawiera wszystkie elementy <see cref="T:System.Windows.Forms.ListView" /> w formancie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Za pomocą <xref:System.Windows.Forms.ListView.ListViewItemCollection> zwracanych przez tę właściwość można dodawać elementy, usuwać elementy i uzyskiwać liczbę elementów. Aby uzyskać więcej informacji na temat zadań, które można wykonać za pomocą elementów w kolekcji, zobacz <xref:System.Windows.Forms.ListView.ListViewItemCollection> tematy dotyczące klas.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.ListView> formant z trzema <xref:System.Windows.Forms.ListViewItem> określonymi obiektami i trzema <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiektami określonymi dla każdego elementu. Przykład tworzy <xref:System.Windows.Forms.ColumnHeader> również obiekty do wyświetlania elementów podelementowych w widoku szczegółów. Dwa <xref:System.Windows.Forms.ImageList> obiekty są również tworzone w przykładzie kodu, aby zapewnić obrazy <xref:System.Windows.Forms.ListViewItem> dla obiektów. Te <xref:System.Windows.Forms.ImageList> obiekty są dodawane <xref:System.Windows.Forms.ListView.LargeImageList%2A> do właściwości i <xref:System.Windows.Forms.ListView.SmallImageList%2A> . W przykładzie zastosowano następujące właściwości podczas tworzenia <xref:System.Windows.Forms.ListView> formantu.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Ten przykład wymaga, aby dodano kod do <xref:System.Windows.Forms.Form> i wywołać metodę utworzoną w przykładzie z konstruktora lub innej metody w formularzu. Przykład wymaga również, aby obrazy o `MySmallImage1`nazwach `MyLargeImage1` `MySmallImage2`,, `MyLargeImage2` i znajdowały się w katalogu głównym dysku C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />
      </Docs>
    </Member>
    <Member MemberName="ItemSelectionChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ListViewItemSelectionChangedEventHandler ItemSelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ListViewItemSelectionChangedEventHandler ItemSelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemSelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemSelectionChanged As ListViewItemSelectionChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ListViewItemSelectionChangedEventHandler ^ ItemSelectionChanged;" />
      <MemberSignature Language="F#" Value="member this.ItemSelectionChanged : System.Windows.Forms.ListViewItemSelectionChangedEventHandler " Usage="member this.ItemSelectionChanged : System.Windows.Forms.ListViewItemSelectionChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItemSelectionChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy zmieni się stan zaznaczenia elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W trybie wirtualnym <xref:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged> zdarzenie pojawi się, gdy zmieni się stan zaznaczenia wielu elementów.  
  
 <xref:System.Windows.Forms.ListView.ItemSelectionChanged> Zdarzenie występuje niezależnie od tego, czy stan elementu zmienia się z zaznaczony do wybrania.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportuje wystąpienie <xref:System.Windows.Forms.ListView.ItemSelectionChanged> zdarzenia. Ten raport pomaga dowiedzieć się, kiedy wystąpi zdarzenie i może pomóc w debugowaniu. Aby zgłosić wiele zdarzeń lub zdarzenia, które występują często, należy rozważyć <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> zamianę <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączenie komunikatu do wielowierszowego <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu zawierającego wystąpienie typu <xref:System.Windows.Forms.ListView> o nazwie. `ListView1` Następnie upewnij się, że program obsługi zdarzeń jest skojarzony <xref:System.Windows.Forms.ListView.ItemSelectionChanged> ze zdarzeniem.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#478](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#478)]
 [!code-vb[System.Windows.Forms.EventExamples#478](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#478)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged" />
      </Docs>
    </Member>
    <Member MemberName="LabelEdit">
      <MemberSignature Language="C#" Value="public bool LabelEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LabelEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.LabelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Property LabelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LabelEdit { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LabelEdit : bool with get, set" Usage="System.Windows.Forms.ListView.LabelEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy użytkownik może edytować etykiety elementów w kontrolce.</summary>
        <value><see langword="true" />Jeśli użytkownik może edytować etykiety elementów w czasie wykonywania; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy właściwość jest ustawiona na `true`, użytkownik może zmodyfikować tekst elementu przez kliknięcie tekstu elementu, aby zaznaczyć go, a następnie ponownie kliknąć tekst elementu, aby umieścić tekst etykiety w trybie edycji. <xref:System.Windows.Forms.ListView.LabelEdit%2A> Użytkownik może następnie zmodyfikować lub zamienić etykietę tekstową elementu. Zdarzenia <xref:System.Windows.Forms.ListView.BeforeLabelEdit> i<xref:System.Windows.Forms.ListView.AfterLabelEdit> służą do wykonywania zadań przed i po edycji tekstu elementu. Nie można zmodyfikować tekstu podelementów, jeśli ta właściwość jest ustawiona na `true`. Aby zmienić tekst elementów podelementowych, można wyświetlić okno dialogowe dla użytkowników po dwukrotnym kliknięciu elementu podrzędnego w kontrolce.  
  
> [!NOTE]
>  Jeśli właściwość jest ustawiona na <xref:System.Windows.Forms.ItemActivation.OneClick> lub <xref:System.Windows.Forms.ItemActivation.TwoClick>, Edycja etykiet nie będzie <xref:System.Windows.Forms.ListView.LabelEdit%2A> dozwolona niezależnie od wartości właściwości. <xref:System.Windows.Forms.ListView.Activation%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.ListView> formant z trzema <xref:System.Windows.Forms.ListViewItem> określonymi obiektami i trzema <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiektami określonymi dla każdego elementu. Przykład tworzy <xref:System.Windows.Forms.ColumnHeader> również obiekty do wyświetlania elementów podelementowych w widoku szczegółów. Dwa <xref:System.Windows.Forms.ImageList> obiekty są również tworzone w przykładzie kodu, aby zapewnić obrazy <xref:System.Windows.Forms.ListViewItem> dla obiektów. Te <xref:System.Windows.Forms.ImageList> obiekty są dodawane <xref:System.Windows.Forms.ListView.LargeImageList%2A> do właściwości i <xref:System.Windows.Forms.ListView.SmallImageList%2A> . W przykładzie zastosowano następujące właściwości podczas tworzenia <xref:System.Windows.Forms.ListView> formantu.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Ten przykład wymaga, aby dodano kod do <xref:System.Windows.Forms.Form> i wywołać metodę utworzoną w przykładzie z konstruktora lub innej metody w formularzu. Przykład wymaga również, aby obrazy o `MySmallImage1`nazwach `MyLargeImage1` `MySmallImage2`,, `MyLargeImage2` i znajdowały się w katalogu głównym dysku C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
        <altmember cref="E:System.Windows.Forms.ListView.AfterLabelEdit" />
      </Docs>
    </Member>
    <Member MemberName="LabelWrap">
      <MemberSignature Language="C#" Value="public bool LabelWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LabelWrap" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.LabelWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property LabelWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LabelWrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LabelWrap : bool with get, set" Usage="System.Windows.Forms.ListView.LabelWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy etykiety elementów są zawijane, gdy elementy są wyświetlane w kontrolce jako ikony.</summary>
        <value><see langword="true" />Jeśli etykiety elementów są zawijane, gdy elementy są wyświetlane jako ikony; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy właściwość jest ustawiona na `true`, tekst elementu jest zawijany do następnego wiersza tekstu, jeśli jest to konieczne. <xref:System.Windows.Forms.ListView.LabelWrap%2A> Jeśli tekst jest dłuższy niż dwa wiersze tekstu, tekst zostanie skrócony. Jeśli użytkownik wybierze element, zostanie wyświetlony cały tekst elementu. Jeśli właściwość jest ustawiona na `false`, cały tekst elementu jest wyświetlany w pojedynczym wierszu. <xref:System.Windows.Forms.ListView.LabelWrap%2A> Cały tekst elementu jest wyświetlany, gdy <xref:System.Windows.Forms.ListView.LabelWrap%2A> jest ustawiony na. `false` Ta właściwość jest używana tylko wtedy, <xref:System.Windows.Forms.ListView.View%2A> gdy właściwość jest ustawiona <xref:System.Windows.Forms.View.LargeIcon> na <xref:System.Windows.Forms.View.SmallIcon>lub.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.View" />
      </Docs>
    </Member>
    <Member MemberName="LargeImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList LargeImageList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList LargeImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.LargeImageList" />
      <MemberSignature Language="VB.NET" Value="Public Property LargeImageList As ImageList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageList ^ LargeImageList { System::Windows::Forms::ImageList ^ get(); void set(System::Windows::Forms::ImageList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LargeImageList : System.Windows.Forms.ImageList with get, set" Usage="System.Windows.Forms.ListView.LargeImageList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość <see cref="T:System.Windows.Forms.ImageList" /> do użycia podczas wyświetlania elementów jako dużych ikon w kontrolce.</summary>
        <value>Zawiera ikony <see cref="P:System.Windows.Forms.ListView.View" /> <see cref="F:System.Windows.Forms.View.LargeIcon" />, które mają być używane, gdy właściwość jest ustawiona na. <see cref="T:System.Windows.Forms.ImageList" /> Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość umożliwia <xref:System.Windows.Forms.ListView.View%2A> określenie obiektu, który zawiera ikony używane podczas wyświetlania elementów z dużymi ikonami (gdy właściwość jest ustawiona na <xref:System.Windows.Forms.View.LargeIcon>). <xref:System.Windows.Forms.ImageList> <xref:System.Windows.Forms.ListView.LargeImageList%2A> Kontrolka może zaakceptować dowolny format <xref:System.Windows.Forms.ImageList> graficzny obsługiwany przez formant podczas wyświetlania ikon. <xref:System.Windows.Forms.ListView> <xref:System.Windows.Forms.ListView> Formant nie jest ograniczony do plików ICO. <xref:System.Windows.Forms.ListViewItem> <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> <xref:System.Windows.Forms.ImageList>Po przypisaniu do właściwości można ustawić właściwość każdej w <xref:System.Windows.Forms.ListView> kontrolce na pozycję indeksu odpowiedniego obrazu w. <xref:System.Windows.Forms.ListView.LargeImageList%2A> <xref:System.Windows.Forms.ImageList> Rozmiar ikon dla elementu <xref:System.Windows.Forms.ListView.LargeImageList%2A> jest określony <xref:System.Windows.Forms.ImageList.ImageSize%2A>przez.  
  
 Ponieważ dla <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A?displayProperty=nameWithType> właściwości można określić tylko jeden indeks <xref:System.Windows.Forms.ImageList> , obiekty określone we <xref:System.Windows.Forms.ListView.LargeImageList%2A> właściwościach i <xref:System.Windows.Forms.ListView.SmallImageList%2A> powinny mieć te same położenie indeksu dla obrazów do wyświetlenia. Na <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> przykład jeśli właściwość <xref:System.Windows.Forms.ImageList> <xref:System.Windows.Forms.ListViewItem> obiektu ma ustawioną wartość 0, obrazy do użycia dla małych i dużych ikon powinny znajdować się w tym samym położeniu indeksu w obiektach określonych we <xref:System.Windows.Forms.ListView.LargeImageList%2A> właściwościach i <xref:System.Windows.Forms.ListView.SmallImageList%2A> .  
  
> [!NOTE]
>  Gdy obrazy są określone za pomocą klawiszy, nadal trzeba umieścić małe i duże wersje obrazu w tej samej lokalizacji indeksu na odpowiednich listach obrazu. Podczas przełączania między widokami, lokalizacja indeksu obrazu na jednej liście jest używana do lokalizowania obrazu na drugiej liście, niezależnie od podanej wartości klucza.  
  
 Aby ustawić <xref:System.Windows.Forms.ImageList> do użycia podczas wyświetlania elementów z małymi ikonami (wszystkie tryby wyświetlania inne niż <xref:System.Windows.Forms.View.LargeIcon>), użyj <xref:System.Windows.Forms.ListView.SmallImageList%2A> właściwości. Jeśli chcesz używać obrazów do wyświetlania stanu elementu, użyj <xref:System.Windows.Forms.ListView.StateImageList%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.ListView> formant z trzema <xref:System.Windows.Forms.ListViewItem> określonymi obiektami i trzema <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiektami określonymi dla każdego elementu. Przykład tworzy <xref:System.Windows.Forms.ColumnHeader> również obiekty do wyświetlania elementów podelementowych w widoku szczegółów. Dwa <xref:System.Windows.Forms.ImageList> obiekty są również tworzone w przykładzie kodu, aby zapewnić obrazy <xref:System.Windows.Forms.ListViewItem> dla obiektów. Te <xref:System.Windows.Forms.ImageList> obiekty są dodawane <xref:System.Windows.Forms.ListView.LargeImageList%2A> do właściwości i <xref:System.Windows.Forms.ListView.SmallImageList%2A> . W przykładzie zastosowano następujące właściwości podczas tworzenia <xref:System.Windows.Forms.ListView> formantu.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Ten przykład wymaga, aby dodano kod do <xref:System.Windows.Forms.Form> i wywołać metodę utworzoną w przykładzie z konstruktora lub innej metody w formularzu. Przykład wymaga również, aby obrazy o `MySmallImage1`nazwach `MyLargeImage1` `MySmallImage2`,, `MyLargeImage2` i znajdowały się w katalogu głównym dysku C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.SmallImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.StateImageList" />
      </Docs>
    </Member>
    <Member MemberName="ListViewItemSorter">
      <MemberSignature Language="C#" Value="public System.Collections.IComparer ListViewItemSorter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IComparer ListViewItemSorter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemSorter" />
      <MemberSignature Language="VB.NET" Value="Public Property ListViewItemSorter As IComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IComparer ^ ListViewItemSorter { System::Collections::IComparer ^ get(); void set(System::Collections::IComparer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ListViewItemSorter : System.Collections.IComparer with get, set" Usage="System.Windows.Forms.ListView.ListViewItemSorter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia funkcję porównującą sortowanie dla kontrolki.</summary>
        <value>Reprezentuje <see cref="T:System.Collections.IComparer" /> moduł porównujący sortowania dla kontrolki.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość umożliwia określenie obiektu, który wykonuje sortowanie elementów <xref:System.Windows.Forms.ListView> w kontrolce, gdy <xref:System.Windows.Forms.ListView.Sort%2A> wywoływana jest metoda lub gdy elementy są dodawane do listy. <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> Należy zauważyć, że elementy nie są sortowane automatycznie po zmianie tekstu etykiety.  
  
 Określony obiekt musi być wystąpieniem klasy implementującej <xref:System.Collections.IComparer> interfejs, który ma wywołaną <xref:System.Collections.Comparer.Compare%2A?displayProperty=nameWithType>pojedynczą metodę.  
  
 Ta właściwość służy do zapewnienia niestandardowego sortowania, na przykład po kliknięciu nagłówka kolumny w widoku szczegółów. W tym celu należy utworzyć klasę, która implementuje <xref:System.Collections.IComparer> interfejs i dostarcza konstruktora, który akceptuje indeks kolumny, według której ma zostać wykonane sortowanie. Następnie można zaimplementować procedurę obsługi dla <xref:System.Windows.Forms.ListView.ColumnClick> zdarzenia, które tworzy wystąpienie tej klasy, przy użyciu indeksu klikniętej kolumny. Po ustawieniu <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> właściwości na nowe wystąpienie <xref:System.Windows.Forms.ListView> , formant jest automatycznie sortowany przy użyciu określonego obiektu. Kolejne wywołania <xref:System.Windows.Forms.ListView.Sort%2A> metody używają tego samego obiektu.  
  
> [!NOTE]
>  Po ustawieniu wartości <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> właściwości <xref:System.Windows.Forms.ListView.Sort%2A> , metoda jest wywoływana automatycznie.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy formularz, który zawiera <xref:System.Windows.Forms.ListView> kontrolkę, która ręcznie sortuje elementy po kliknięciu kolumny <xref:System.Windows.Forms.ListView> w kontrolce. W przykładzie zdefiniowano klasę o `ListViewItemComparer` nazwie <xref:System.Collections.IComparer?displayProperty=nameWithType> implementującej interfejs, który wykonuje <xref:System.Windows.Forms.ListViewItem> porównanie. Przykład tworzy wystąpienie `ListViewItemComparer` i używa go do <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> ustawiania właściwości <xref:System.Windows.Forms.ListView> formantu. Wywołanie metody w programie `ListViewItemComparer` obsługi zdarzeńkorzystazmetodzdefiniowanychwprogramiewceluwykonywaniasortowaniaelementównapodstawieklikniętejkolumny.<xref:System.Windows.Forms.ListView.ColumnClick> <xref:System.Windows.Forms.ListView.Sort%2A>  
  
 [!code-cpp[ListView.ColumnClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.ColumnClick/CPP/listviewsort1.cpp#1)]
 [!code-csharp[ListView.ColumnClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.ColumnClick/CS/listviewsort1.cs#1)]
 [!code-vb[ListView.ColumnClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.ColumnClick/VB/listviewsort1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="E:System.Windows.Forms.ListView.ColumnClick" />
      </Docs>
    </Member>
    <Member MemberName="MultiSelect">
      <MemberSignature Language="C#" Value="public bool MultiSelect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MultiSelect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.MultiSelect" />
      <MemberSignature Language="VB.NET" Value="Public Property MultiSelect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MultiSelect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MultiSelect : bool with get, set" Usage="System.Windows.Forms.ListView.MultiSelect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy można wybrać wiele elementów.</summary>
        <value><see langword="true" />Jeśli można zaznaczyć wiele elementów w kontrolce jednocześnie; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy właściwość jest ustawiona na `true`, w <xref:System.Windows.Forms.ListView> kontrolce można wybrać wiele elementów. <xref:System.Windows.Forms.ListView.MultiSelect%2A> Aby zaznaczyć wiele elementów, użytkownik musi przytrzymać klawisz CTRL podczas klikania elementów do wybrania. Kolejne elementy można wybrać, klikając pierwszy element do wybrania, a następnie przytrzymując wciśnięty klawisz SHIFT, klikając ostatni element do wybrania. Możesz użyć funkcji wybór wielokrotny, aby zaznaczyć wiele elementów w <xref:System.Windows.Forms.ListView> kontrolce i wykonać operację na wszystkich wybranych elementach. Na przykład użytkownik może wybrać wiele elementów, a następnie kliknąć prawym przyciskiem myszy wybrany element, aby wyświetlić menu skrótów, które wyświetla zestaw zadań, które można wykonać dla wybranych elementów.  
  
 Aby określić, które elementy są zaznaczone w <xref:System.Windows.Forms.ListView> formancie, <xref:System.Windows.Forms.ListView.SelectedItems%2A> Użyj właściwości. Właściwość pozwala uzyskać dostęp do programu zawierającego listę wybranych elementów. <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection> <xref:System.Windows.Forms.ListView.SelectedItems%2A> Jeśli chcesz, aby indeksy były umieszczane <xref:System.Windows.Forms.ListView.ListViewItemCollection> w zamiast elementów, możesz <xref:System.Windows.Forms.ListView.SelectedIndices%2A> użyć właściwości, aby uzyskać dostęp <xref:System.Windows.Forms.ListView.SelectedIndexCollection>do.  
  
 Jeśli nie chcesz zezwalać na wielokrotne wybór w programie <xref:System.Windows.Forms.ListView>, ale jeszcze chcesz zaoferować użytkownikowi metodę w celu wybrania wielu elementów, możesz wyświetlić pola wyboru, <xref:System.Windows.Forms.ListView.CheckBoxes%2A> ustawiając właściwość na `true`.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje <xref:System.Windows.Forms.ListView> , że można wybrać wiele elementów. W przykładzie pokazano, <xref:System.Windows.Forms.ListView.HideSelection%2A> jak ustawić właściwości i. <xref:System.Windows.Forms.ListView.HeaderStyle%2A> Aby uruchomić ten przykład, wklej następujący kod do <xref:System.Windows.Forms.ListView> formularza, który zawiera obiekt o nazwie `ListView1` i <xref:System.Windows.Forms.TextBox> nazwa `TextBox1`. `Load` Wywołaj `InitializeListView` metodę z konstruktora lub metody formularza.  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.SelectedItems" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedIndices" />
        <altmember cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" />
        <altmember cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckBoxes" />
      </Docs>
    </Member>
    <Member MemberName="OnAfterLabelEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterLabelEdit (System.Windows.Forms.LabelEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterLabelEdit(class System.Windows.Forms.LabelEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterLabelEdit (e As LabelEditEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterLabelEdit(System::Windows::Forms::LabelEditEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterLabelEdit : System.Windows.Forms.LabelEditEventArgs -&gt; unit&#xA;override this.OnAfterLabelEdit : System.Windows.Forms.LabelEditEventArgs -&gt; unit" Usage="listView.OnAfterLabelEdit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.LabelEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.LabelEditEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.ListView.AfterLabelEdit" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.ListView.OnAfterLabelEdit%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Windows.Forms.ListView.AfterLabelEdit> jak użyć zdarzenia, aby ograniczyć nowo edytowaną etykietę do znaków w alfabecie. W przykładzie zastosowano <xref:System.Text.ASCIIEncoding> klasę, aby uzyskać kod ASCII każdego znaku nowej etykiety. Jeśli znak jest między kodami ASCII, które reprezentują liczby, nie można zastosować nowej etykiety do elementu. Ten przykład wymaga utworzenia <xref:System.Windows.Forms.ListView> kontrolki w formularzu i dodania do niej elementów. Przykład wymaga również połączenia <xref:System.Windows.Forms.ListView.AfterLabelEdit> zdarzenia do procedury obsługi zdarzeń zdefiniowanej w przykładowym kodzie. Aby można było użyć <xref:System.Text.ASCIIEncoding> klasy, plik musi <xref:System.Text> zawierać przestrzeń nazw.  
  
 [!code-cpp[ListView.AfterLabelEdit#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.AfterLabelEdit/CPP/form1.cpp#1)]
 [!code-csharp[ListView.AfterLabelEdit#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.AfterLabelEdit/CS/form1.cs#1)]
 [!code-vb[ListView.AfterLabelEdit#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.AfterLabelEdit/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.ListView.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.ListView.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
        <altmember cref="E:System.Windows.Forms.ListView.AfterLabelEdit" />
        <altmember cref="T:System.Windows.Forms.LabelEditEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnBackgroundImageChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackgroundImageChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackgroundImageChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnBackgroundImageChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBackgroundImageChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBackgroundImageChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBackgroundImageChanged : EventArgs -&gt; unit" Usage="listView.OnBackgroundImageChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.ListView.OnBackgroundImageChanged%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.ListView.OnBackgroundImageChanged(System.EventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.ListView.OnBackgroundImageChanged(System.EventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnBeforeLabelEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeLabelEdit (System.Windows.Forms.LabelEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeLabelEdit(class System.Windows.Forms.LabelEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeLabelEdit (e As LabelEditEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeLabelEdit(System::Windows::Forms::LabelEditEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBeforeLabelEdit : System.Windows.Forms.LabelEditEventArgs -&gt; unit&#xA;override this.OnBeforeLabelEdit : System.Windows.Forms.LabelEditEventArgs -&gt; unit" Usage="listView.OnBeforeLabelEdit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.LabelEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.LabelEditEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.ListView.OnBeforeLabelEdit%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.ListView.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.ListView.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
        <altmember cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
        <altmember cref="T:System.Windows.Forms.LabelEditEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnCacheVirtualItems">
      <MemberSignature Language="C#" Value="protected virtual void OnCacheVirtualItems (System.Windows.Forms.CacheVirtualItemsEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCacheVirtualItems(class System.Windows.Forms.CacheVirtualItemsEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnCacheVirtualItems(System.Windows.Forms.CacheVirtualItemsEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCacheVirtualItems (e As CacheVirtualItemsEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCacheVirtualItems(System::Windows::Forms::CacheVirtualItemsEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCacheVirtualItems : System.Windows.Forms.CacheVirtualItemsEventArgs -&gt; unit&#xA;override this.OnCacheVirtualItems : System.Windows.Forms.CacheVirtualItemsEventArgs -&gt; unit" Usage="listView.OnCacheVirtualItems e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.CacheVirtualItemsEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.CacheVirtualItemsEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.ListView.CacheVirtualItems" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.ListView.OnCacheVirtualItems%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.ListView.OnCacheVirtualItems(System.Windows.Forms.CacheVirtualItemsEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.ListView.OnCacheVirtualItems(System.Windows.Forms.CacheVirtualItemsEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnColumnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnClick (System.Windows.Forms.ColumnClickEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnClick(class System.Windows.Forms.ColumnClickEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnClick (e As ColumnClickEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnClick(System::Windows::Forms::ColumnClickEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnClick : System.Windows.Forms.ColumnClickEventArgs -&gt; unit&#xA;override this.OnColumnClick : System.Windows.Forms.ColumnClickEventArgs -&gt; unit" Usage="listView.OnColumnClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ColumnClickEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.ColumnClickEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.ListView.ColumnClick" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.ListView.OnColumnClick%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy formularz, który zawiera <xref:System.Windows.Forms.ListView> kontrolkę, która ręcznie sortuje elementy po kliknięciu kolumny <xref:System.Windows.Forms.ListView> w kontrolce. W przykładzie zdefiniowano klasę o `ListViewItemComparer` nazwie <xref:System.Collections.IComparer?displayProperty=nameWithType> implementującej interfejs, który wykonuje <xref:System.Windows.Forms.ListViewItem> porównanie. Przykład tworzy wystąpienie `ListViewItemComparer` i używa go do <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> ustawiania właściwości <xref:System.Windows.Forms.ListView> formantu. Wywołanie metody w programie `ListViewItemComparer` obsługi zdarzeńkorzystazmetodzdefiniowanychwprogramiewceluwykonywaniasortowaniaelementównapodstawieklikniętejkolumny.<xref:System.Windows.Forms.ListView.ColumnClick> <xref:System.Windows.Forms.ListView.Sort%2A>  
  
 [!code-cpp[ListView.ColumnClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.ColumnClick/CPP/listviewsort1.cpp#1)]
 [!code-csharp[ListView.ColumnClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.ColumnClick/CS/listviewsort1.cs#1)]
 [!code-vb[ListView.ColumnClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.ColumnClick/VB/listviewsort1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.ListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.ListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
        <altmember cref="E:System.Windows.Forms.ListView.ColumnClick" />
        <altmember cref="T:System.Windows.Forms.ColumnClickEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnColumnReordered">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnReordered (System.Windows.Forms.ColumnReorderedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnReordered(class System.Windows.Forms.ColumnReorderedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnColumnReordered(System.Windows.Forms.ColumnReorderedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnReordered (e As ColumnReorderedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnReordered(System::Windows::Forms::ColumnReorderedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnReordered : System.Windows.Forms.ColumnReorderedEventArgs -&gt; unit&#xA;override this.OnColumnReordered : System.Windows.Forms.ColumnReorderedEventArgs -&gt; unit" Usage="listView.OnColumnReordered e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ColumnReorderedEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Windows.Forms.ColumnReorderedEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.ListView.ColumnReordered" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.ListView.OnColumnReordered%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.ListView.OnColumnReordered(System.Windows.Forms.ColumnReorderedEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.ListView.OnColumnReordered(System.Windows.Forms.ColumnReorderedEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnColumnWidthChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnWidthChanged (System.Windows.Forms.ColumnWidthChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnWidthChanged(class System.Windows.Forms.ColumnWidthChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnColumnWidthChanged(System.Windows.Forms.ColumnWidthChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnWidthChanged (e As ColumnWidthChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnWidthChanged(System::Windows::Forms::ColumnWidthChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnWidthChanged : System.Windows.Forms.ColumnWidthChangedEventArgs -&gt; unit&#xA;override this.OnColumnWidthChanged : System.Windows.Forms.ColumnWidthChangedEventArgs -&gt; unit" Usage="listView.OnColumnWidthChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ColumnWidthChangedEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.ColumnWidthChangedEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.ListView.ColumnWidthChanged" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.ListView.OnColumnWidthChanged%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.ListView.OnColumnWidthChanged(System.Windows.Forms.ColumnWidthChangedEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.ListView.OnColumnWidthChanged(System.Windows.Forms.ColumnWidthChangedEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnColumnWidthChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnWidthChanging (System.Windows.Forms.ColumnWidthChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnWidthChanging(class System.Windows.Forms.ColumnWidthChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnColumnWidthChanging(System.Windows.Forms.ColumnWidthChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnWidthChanging (e As ColumnWidthChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnWidthChanging(System::Windows::Forms::ColumnWidthChangingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnWidthChanging : System.Windows.Forms.ColumnWidthChangingEventArgs -&gt; unit&#xA;override this.OnColumnWidthChanging : System.Windows.Forms.ColumnWidthChangingEventArgs -&gt; unit" Usage="listView.OnColumnWidthChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ColumnWidthChangingEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.ColumnWidthChangingEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.ListView.ColumnWidthChanging" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.ColumnWidthChanging> Zdarzenie nie zostanie wykonane, jeśli funkcja pełnego przeciągania okna, opcja "Pokaż zawartość okna podczas przeciągania" jest wyłączona.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.ListView.OnColumnWidthChanging%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.ListView.OnColumnWidthChanging(System.Windows.Forms.ColumnWidthChangingEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.ListView.OnColumnWidthChanging(System.Windows.Forms.ColumnWidthChangingEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDrawColumnHeader">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawColumnHeader (System.Windows.Forms.DrawListViewColumnHeaderEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawColumnHeader(class System.Windows.Forms.DrawListViewColumnHeaderEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnDrawColumnHeader(System.Windows.Forms.DrawListViewColumnHeaderEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawColumnHeader (e As DrawListViewColumnHeaderEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawColumnHeader(System::Windows::Forms::DrawListViewColumnHeaderEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrawColumnHeader : System.Windows.Forms.DrawListViewColumnHeaderEventArgs -&gt; unit&#xA;override this.OnDrawColumnHeader : System.Windows.Forms.DrawListViewColumnHeaderEventArgs -&gt; unit" Usage="listView.OnDrawColumnHeader e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawListViewColumnHeaderEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.DrawListViewColumnHeaderEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.ListView.DrawColumnHeader" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.ListView.OnDrawColumnHeader%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.ListView.OnDrawColumnHeader(System.Windows.Forms.DrawListViewColumnHeaderEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.ListView.OnDrawColumnHeader(System.Windows.Forms.DrawListViewColumnHeaderEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDrawItem">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawItem (System.Windows.Forms.DrawListViewItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawItem(class System.Windows.Forms.DrawListViewItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawItem (e As DrawListViewItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawItem(System::Windows::Forms::DrawListViewItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrawItem : System.Windows.Forms.DrawListViewItemEventArgs -&gt; unit&#xA;override this.OnDrawItem : System.Windows.Forms.DrawListViewItemEventArgs -&gt; unit" Usage="listView.OnDrawItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawListViewItemEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.DrawListViewItemEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.ListView.DrawItem" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.ListView.OnDrawItem%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.ListView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.ListView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.DrawListViewItemEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnDrawSubItem">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawSubItem (System.Windows.Forms.DrawListViewSubItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawSubItem(class System.Windows.Forms.DrawListViewSubItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnDrawSubItem(System.Windows.Forms.DrawListViewSubItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawSubItem (e As DrawListViewSubItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawSubItem(System::Windows::Forms::DrawListViewSubItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrawSubItem : System.Windows.Forms.DrawListViewSubItemEventArgs -&gt; unit&#xA;override this.OnDrawSubItem : System.Windows.Forms.DrawListViewSubItemEventArgs -&gt; unit" Usage="listView.OnDrawSubItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawListViewSubItemEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.DrawListViewSubItemEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.ListView.DrawSubItem" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.ListView.OnDrawSubItem%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.ListView.OnDrawSubItem(System.Windows.Forms.DrawListViewSubItemEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.ListView.OnDrawSubItem(System.Windows.Forms.DrawListViewSubItemEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
        <altmember cref="T:System.Windows.Forms.DrawListViewSubItemEventArgs" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
      </Docs>
    </Member>
    <Member MemberName="OnEnabledChanged">
      <MemberSignature Language="C#" Value="protected override void OnEnabledChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEnabledChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnEnabledChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEnabledChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEnabledChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnEnabledChanged : EventArgs -&gt; unit" Usage="listView.OnEnabledChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="e">Obiekt, który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.Control.EnabledChanged" /> Podnosi zdarzenie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="listView.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see langword="FontChanged" /> Podnosi zdarzenie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="listView.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.Control.HandleCreated" /> Podnosi zdarzenie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="listView.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> Podnosi zdarzenie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemActivate">
      <MemberSignature Language="C#" Value="protected virtual void OnItemActivate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemActivate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemActivate(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemActivate (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemActivate(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemActivate : EventArgs -&gt; unit&#xA;override this.OnItemActivate : EventArgs -&gt; unit" Usage="listView.OnItemActivate e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.ListView.ItemActivate" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.ListView.OnItemActivate%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.ListView.OnItemActivate(System.EventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.ListView.OnItemActivate(System.EventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
        <altmember cref="E:System.Windows.Forms.ListView.ItemActivate" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCheck">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCheck (System.Windows.Forms.ItemCheckEventArgs ice);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCheck(class System.Windows.Forms.ItemCheckEventArgs ice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCheck (ice As ItemCheckEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCheck(System::Windows::Forms::ItemCheckEventArgs ^ ice);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCheck : System.Windows.Forms.ItemCheckEventArgs -&gt; unit&#xA;override this.OnItemCheck : System.Windows.Forms.ItemCheckEventArgs -&gt; unit" Usage="listView.OnItemCheck ice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ice" Type="System.Windows.Forms.ItemCheckEventArgs" />
      </Parameters>
      <Docs>
        <param name="ice"><see cref="T:System.Windows.Forms.ItemCheckEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.ListView.ItemCheck" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.ListView.OnItemCheck%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.ListView.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.ListView.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
        <altmember cref="E:System.Windows.Forms.ListView.ItemCheck" />
        <altmember cref="T:System.Windows.Forms.ItemCheckEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemChecked">
      <MemberSignature Language="C#" Value="protected virtual void OnItemChecked (System.Windows.Forms.ItemCheckedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemChecked(class System.Windows.Forms.ItemCheckedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemChecked(System.Windows.Forms.ItemCheckedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemChecked (e As ItemCheckedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemChecked(System::Windows::Forms::ItemCheckedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemChecked : System.Windows.Forms.ItemCheckedEventArgs -&gt; unit&#xA;override this.OnItemChecked : System.Windows.Forms.ItemCheckedEventArgs -&gt; unit" Usage="listView.OnItemChecked e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ItemCheckedEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Windows.Forms.ItemCheckedEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.ListView.ItemChecked" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.ListView.OnItemChecked%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.ListView.OnItemChecked(System.Windows.Forms.ItemCheckedEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.ListView.OnItemChecked(System.Windows.Forms.ItemCheckedEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnItemDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDrag (System.Windows.Forms.ItemDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDrag(class System.Windows.Forms.ItemDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDrag (e As ItemDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDrag(System::Windows::Forms::ItemDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDrag : System.Windows.Forms.ItemDragEventArgs -&gt; unit&#xA;override this.OnItemDrag : System.Windows.Forms.ItemDragEventArgs -&gt; unit" Usage="listView.OnItemDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ItemDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Windows.Forms.ItemDragEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.ListView.ItemDrag" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.ListView.OnItemDrag%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
        <altmember cref="E:System.Windows.Forms.ListView.ItemDrag" />
        <altmember cref="T:System.Windows.Forms.ItemDragEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemMouseHover">
      <MemberSignature Language="C#" Value="protected virtual void OnItemMouseHover (System.Windows.Forms.ListViewItemMouseHoverEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemMouseHover(class System.Windows.Forms.ListViewItemMouseHoverEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemMouseHover(System.Windows.Forms.ListViewItemMouseHoverEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemMouseHover (e As ListViewItemMouseHoverEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemMouseHover(System::Windows::Forms::ListViewItemMouseHoverEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemMouseHover : System.Windows.Forms.ListViewItemMouseHoverEventArgs -&gt; unit&#xA;override this.OnItemMouseHover : System.Windows.Forms.ListViewItemMouseHoverEventArgs -&gt; unit" Usage="listView.OnItemMouseHover e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ListViewItemMouseHoverEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.ListViewItemMouseHoverEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.ListView.ItemMouseHover" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.ListView.OnItemMouseHover%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.ListView.OnItemMouseHover(System.Windows.Forms.ListViewItemMouseHoverEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.ListView.OnItemMouseHover(System.Windows.Forms.ListViewItemMouseHoverEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnItemSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemSelectionChanged (System.Windows.Forms.ListViewItemSelectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemSelectionChanged(class System.Windows.Forms.ListViewItemSelectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemSelectionChanged(System.Windows.Forms.ListViewItemSelectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemSelectionChanged (e As ListViewItemSelectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemSelectionChanged(System::Windows::Forms::ListViewItemSelectionChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemSelectionChanged : System.Windows.Forms.ListViewItemSelectionChangedEventArgs -&gt; unit&#xA;override this.OnItemSelectionChanged : System.Windows.Forms.ListViewItemSelectionChangedEventArgs -&gt; unit" Usage="listView.OnItemSelectionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ListViewItemSelectionChangedEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.ListViewItemSelectionChangedEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.ListView.ItemSelectionChanged" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.ListView.OnItemSelectionChanged%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.ListView.OnItemSelectionChanged(System.Windows.Forms.ListViewItemSelectionChangedEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.ListView.OnItemSelectionChanged(System.Windows.Forms.ListViewItemSelectionChangedEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseHover">
      <MemberSignature Language="C#" Value="protected override void OnMouseHover (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseHover(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnMouseHover(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseHover (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseHover(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseHover : EventArgs -&gt; unit" Usage="listView.OnMouseHover e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.Control.MouseHover" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli metoda jest <xref:System.Windows.Forms.ListViewItem> wywoływana<xref:System.Windows.Forms.ListView.ItemMouseHover> , gdy wskaźnik myszy znajduje się nad, metoda wywołuje zdarzenie. <xref:System.Windows.Forms.ListView.OnMouseHover%2A>  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.ListView.OnMouseHover%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.ListView.OnMouseHover(System.EventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.ListView.OnMouseHover(System.EventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeave : EventArgs -&gt; unit" Usage="listView.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.Control.MouseLeave" /> Podnosi zdarzenie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnParentChanged">
      <MemberSignature Language="C#" Value="protected override void OnParentChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnParentChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnParentChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnParentChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnParentChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnParentChanged : EventArgs -&gt; unit" Usage="listView.OnParentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.Control.ParentChanged" /> Podnosi zdarzenie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResize">
      <MemberSignature Language="C#" Value="protected override void OnResize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnResize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnResize(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnResize (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnResize(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnResize : EventArgs -&gt; unit" Usage="listView.OnResize e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.Control.Resize" /> Podnosi zdarzenie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRetrieveVirtualItem">
      <MemberSignature Language="C#" Value="protected virtual void OnRetrieveVirtualItem (System.Windows.Forms.RetrieveVirtualItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRetrieveVirtualItem(class System.Windows.Forms.RetrieveVirtualItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnRetrieveVirtualItem(System.Windows.Forms.RetrieveVirtualItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRetrieveVirtualItem (e As RetrieveVirtualItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRetrieveVirtualItem(System::Windows::Forms::RetrieveVirtualItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRetrieveVirtualItem : System.Windows.Forms.RetrieveVirtualItemEventArgs -&gt; unit&#xA;override this.OnRetrieveVirtualItem : System.Windows.Forms.RetrieveVirtualItemEventArgs -&gt; unit" Usage="listView.OnRetrieveVirtualItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.RetrieveVirtualItemEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.RetrieveVirtualItemEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.ListView.OnRetrieveVirtualItem%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.ListView.OnRetrieveVirtualItem(System.Windows.Forms.RetrieveVirtualItemEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.ListView.OnRetrieveVirtualItem(System.Windows.Forms.RetrieveVirtualItemEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRightToLeftLayoutChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRightToLeftLayoutChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnRightToLeftLayoutChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRightToLeftLayoutChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRightToLeftLayoutChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRightToLeftLayoutChanged : EventArgs -&gt; unit&#xA;override this.OnRightToLeftLayoutChanged : EventArgs -&gt; unit" Usage="listView.OnRightToLeftLayoutChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.ListView.RightToLeftLayoutChanged" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.ListView.OnRightToLeftLayoutChanged%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.ListView.OnRightToLeftLayoutChanged(System.EventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.ListView.OnRightToLeftLayoutChanged(System.EventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSearchForVirtualItem">
      <MemberSignature Language="C#" Value="protected virtual void OnSearchForVirtualItem (System.Windows.Forms.SearchForVirtualItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSearchForVirtualItem(class System.Windows.Forms.SearchForVirtualItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnSearchForVirtualItem(System.Windows.Forms.SearchForVirtualItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSearchForVirtualItem (e As SearchForVirtualItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSearchForVirtualItem(System::Windows::Forms::SearchForVirtualItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSearchForVirtualItem : System.Windows.Forms.SearchForVirtualItemEventArgs -&gt; unit&#xA;override this.OnSearchForVirtualItem : System.Windows.Forms.SearchForVirtualItemEventArgs -&gt; unit" Usage="listView.OnSearchForVirtualItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.SearchForVirtualItemEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.SearchForVirtualItemEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.ListView.SearchForVirtualItem" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.ListView.OnSearchForVirtualItem%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.ListView.OnSearchForVirtualItem(System.Windows.Forms.SearchForVirtualItemEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.ListView.OnSearchForVirtualItem(System.Windows.Forms.SearchForVirtualItemEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnSelectedIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedIndexChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedIndexChanged : EventArgs -&gt; unit&#xA;override this.OnSelectedIndexChanged : EventArgs -&gt; unit" Usage="listView.OnSelectedIndexChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.ListView.SelectedIndexChanged" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.ListView.OnSelectedIndexChanged%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.ListView.OnSelectedIndexChanged(System.EventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.ListView.OnSelectedIndexChanged(System.EventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
        <altmember cref="E:System.Windows.Forms.ListView.SelectedIndexChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnSystemColorsChanged">
      <MemberSignature Language="C#" Value="protected override void OnSystemColorsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSystemColorsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnSystemColorsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSystemColorsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSystemColorsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnSystemColorsChanged : EventArgs -&gt; unit" Usage="listView.OnSystemColorsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.Control.SystemColorsChanged" /> Podnosi zdarzenie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVirtualItemsSelectionRangeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnVirtualItemsSelectionRangeChanged (System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnVirtualItemsSelectionRangeChanged(class System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged(System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnVirtualItemsSelectionRangeChanged (e As ListViewVirtualItemsSelectionRangeChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnVirtualItemsSelectionRangeChanged(System::Windows::Forms::ListViewVirtualItemsSelectionRangeChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnVirtualItemsSelectionRangeChanged : System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs -&gt; unit&#xA;override this.OnVirtualItemsSelectionRangeChanged : System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs -&gt; unit" Usage="listView.OnVirtualItemsSelectionRangeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged(System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged(System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OwnerDraw">
      <MemberSignature Language="C#" Value="public bool OwnerDraw { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OwnerDraw" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.OwnerDraw" />
      <MemberSignature Language="VB.NET" Value="Public Property OwnerDraw As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OwnerDraw { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OwnerDraw : bool with get, set" Usage="System.Windows.Forms.ListView.OwnerDraw" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Windows.Forms.ListView" /> formant jest rysowany przez system operacyjny, czy przez użytkownika.</summary>
        <value><see langword="true" /><see cref="T:System.Windows.Forms.ListView" /> Jeśli formant jest rysowany przez podaną przez Ciebie kod; <see langword="false" /> Jeśli formantjestrysowany<see cref="T:System.Windows.Forms.ListView" /> przez system operacyjny. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView> Formant jest zwykle rysowany przez system operacyjny. Aby <xref:System.Windows.Forms.ListView> dostosować wygląd elementów, podelementów i nagłówków kolumn, należy <xref:System.Windows.Forms.ListView.OwnerDraw%2A> ustawić właściwość na `true` i udostępnić program obsługi dla co najmniej jednego z następujących zdarzeń: <xref:System.Windows.Forms.ListView.DrawItem>, <xref:System.Windows.Forms.ListView.DrawSubItem>, <xref:System.Windows.Forms.ListView.DrawColumnHeader>. Jest to tzw. Rysowanie przez właściciela. Gdy właściwość jest ustawiona na <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>, wszystkie trzy zdarzenia wystąpią <xref:System.Windows.Forms.ListView.DrawItem> ; w przeciwnym razie wystąpi tylko zdarzenie. <xref:System.Windows.Forms.ListView.View%2A>  
  
> [!NOTE]
>  Informacje o podelemencie są zwykle wyświetlane w widoku kafelków, a także w widoku kafelków, ale muszą być narysowane w programie obsługi <xref:System.Windows.Forms.ListView.DrawItem> zdarzenia. Zdarzenie nie występuje dla żadnych elementów SubItem, dla których nie <xref:System.Windows.Forms.ColumnHeader> dodano żadnych obiektów do <xref:System.Windows.Forms.ListView.Columns%2A> kolekcji. <xref:System.Windows.Forms.ListView.DrawSubItem> Należy zauważyć, że pierwszy element SubItem <xref:System.Windows.Forms.ListViewItem> każdego obiektu reprezentuje samego elementu nadrzędnego i jest wyświetlany w pierwszej kolumnie.  
  
 W widoku szczegółów można obsłużyć <xref:System.Windows.Forms.ListView.DrawItem> zdarzenie, aby rysować elementy wspólne dla wszystkich podelementów, takich jak tło, i <xref:System.Windows.Forms.ListView.DrawSubItem> obsłużyć zdarzenie do rysowania elementów dla poszczególnych elementów podelementowych, takich jak wartości tekstowe. Możesz również rysować wszystkie elementy w <xref:System.Windows.Forms.ListView> kontrolce przy użyciu tylko jednego z tych dwóch zdarzeń, chociaż może to być mniej wygodne. Aby narysować nagłówki kolumn w widoku szczegółów, należy obsłużyć <xref:System.Windows.Forms.ListView.DrawColumnHeader> zdarzenie.  
  
> [!NOTE]
>  Aby uniknąć problemów z migotaniem grafiki podczas rysowania przez <xref:System.Windows.Forms.ListView> właściciela, Zastąp formant i <xref:System.Windows.Forms.ListView.DoubleBuffered%2A> ustaw właściwość na `true`.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Windows.Forms.ListView> jak zapewnić niestandardowy rysunek dla kontrolki. <xref:System.Windows.Forms.ListView> Kontrolka w przykładzie ma tło gradientu. Elementy podelementowe z wartościami ujemnymi mają czerwony pierwszy plan i czarne tło.  
  
 Procedura obsługi <xref:System.Windows.Forms.ListView.DrawItem> zdarzenia rysuje tło dla całych elementów. Procedura obsługi dla <xref:System.Windows.Forms.ListView.DrawSubItem> zdarzenia rysuje wartości tekstowe oraz tekst i tło dla podelementów, które mają wartości ujemne. Procedura obsługi dla <xref:System.Windows.Forms.ListView.DrawColumnHeader> zdarzenia rysuje każdy nagłówek kolumny.  
  
 <xref:System.Windows.Forms.ContextMenu> Składnik umożliwia przełączenie między widokiem szczegółów a widokiem listy. W widoku listy zostanie zgłoszone tylko <xref:System.Windows.Forms.ListView.DrawItem> zdarzenie. W takim przypadku tekst i tło są rysowane w programie <xref:System.Windows.Forms.ListView.DrawItem> obsługi zdarzeń.  
  
 [!code-csharp[ListViewOwnerDraw#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#1)]
 [!code-vb[ListViewOwnerDraw#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawColumnHeader" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.ListView.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia odstęp między <see cref="T:System.Windows.Forms.ListView" /> kontrolką a jego zawartością.</summary>
        <value><see cref="T:System.Windows.Forms.Padding" /> Określa odstęp <see cref="T:System.Windows.Forms.ListView" /> między kontrolką a jego zawartością.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość nie jest odpowiednia dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberSignature Language="F#" Value="member this.PaddingChanged : EventHandler " Usage="member this.PaddingChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wartość właściwości zostanie <see cref="P:System.Windows.Forms.ListView.Padding" /> zmieniona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler Paint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler Paint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.Paint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Paint As PaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PaintEventHandler ^ Paint;" />
      <MemberSignature Language="F#" Value="member this.Paint : System.Windows.Forms.PaintEventHandler " Usage="member this.Paint : System.Windows.Forms.PaintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po <see cref="T:System.Windows.Forms.ListView" /> narysowaniu kontrolki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formant jest rysowany przez system operacyjny lub jest rysowany przez właściciela, <xref:System.Windows.Forms.ListView.Paint> więc zdarzenie nigdy nie zostanie zgłoszone. <xref:System.Windows.Forms.ListView> Aby uzyskać więcej informacji na temat rysowania przez właściciela, <xref:System.Windows.Forms.ListView.OwnerDraw%2A> Zobacz właściwość.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RealizeProperties">
      <MemberSignature Language="C#" Value="protected void RealizeProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RealizeProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.RealizeProperties" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RealizeProperties ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RealizeProperties();" />
      <MemberSignature Language="F#" Value="member this.RealizeProperties : unit -&gt; unit" Usage="listView.RealizeProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicjuje właściwości <see cref="T:System.Windows.Forms.ListView" /> kontrolki, która zarządza wyglądem formantu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedrawItems">
      <MemberSignature Language="C#" Value="public void RedrawItems (int startIndex, int endIndex, bool invalidateOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedrawItems(int32 startIndex, int32 endIndex, bool invalidateOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.RedrawItems(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedrawItems (startIndex As Integer, endIndex As Integer, invalidateOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedrawItems(int startIndex, int endIndex, bool invalidateOnly);" />
      <MemberSignature Language="F#" Value="member this.RedrawItems : int * int * bool -&gt; unit" Usage="listView.RedrawItems (startIndex, endIndex, invalidateOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="endIndex" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="invalidateOnly" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="startIndex">Indeks pierwszego elementu w zakresie, który ma zostać odrysowany.</param>
        <param name="endIndex">Indeks ostatniego elementu zakresu, który ma zostać odrysowany.</param>
        <param name="invalidateOnly"><see langword="true" />Aby unieważnić zakres elementów; <see langword="false" /> aby unieważnić i odświeżyć elementy.</param>
        <summary>Wymusza Odrysowanie zakresu <see cref="T:System.Windows.Forms.ListViewItem" /> obiektów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metody można użyć niezależnie od tego, <xref:System.Windows.Forms.ListView> czy jest w trybie wirtualnym, czy w trybie regularnym. <xref:System.Windows.Forms.ListView.RedrawItems%2A>  
  
 Jeśli metoda została wywołana przed wywołaniem do <xref:System.Windows.Forms.ListView.RedrawItems%2A>, nie nastąpi ponowne Rysowanie. <xref:System.Windows.Forms.ListView.BeginUpdate%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" />lub <paramref name="endIndex" /> jest mniejsza niż 0, większa lub równa liczbie elementów <see cref="T:System.Windows.Forms.ListView" /> w lub, jeśli jest w trybie wirtualnym, <see cref="P:System.Windows.Forms.ListView.VirtualListSize" />większa niż wartość.  
  
—lub— 
<paramref name="startIndex" /> Wartość jest większa niż wartość<paramref name="endIndex." /></exception>
      </Docs>
    </Member>
    <Member MemberName="RetrieveVirtualItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.RetrieveVirtualItemEventHandler RetrieveVirtualItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.RetrieveVirtualItemEventHandler RetrieveVirtualItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.RetrieveVirtualItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RetrieveVirtualItem As RetrieveVirtualItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::RetrieveVirtualItemEventHandler ^ RetrieveVirtualItem;" />
      <MemberSignature Language="F#" Value="member this.RetrieveVirtualItem : System.Windows.Forms.RetrieveVirtualItemEventHandler " Usage="member this.RetrieveVirtualItem : System.Windows.Forms.RetrieveVirtualItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RetrieveVirtualItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="T:System.Windows.Forms.ListView" /> jest w trybie wirtualnym i <see cref="T:System.Windows.Forms.ListViewItem" />wymaga.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy obiekt jest w trybie wirtualnym, tworzy <xref:System.Windows.Forms.ListViewItem> obiekty <xref:System.Windows.Forms.ListView.Items%2A> dynamicznie, zamiast używać kolekcji. <xref:System.Windows.Forms.ListView> To zdarzenie jest zgłaszane, gdy obiekt musi utworzyć <xref:System.Windows.Forms.ListViewItem> obiekt. Procedura obsługi dla tego zdarzenia powinna utworzyć odpowiednie <xref:System.Windows.Forms.ListViewItem> lub pobrać je z pamięci podręcznej, a następnie przekazać ją z powrotem według <xref:System.Windows.Forms.RetrieveVirtualItemEventArgs.Item%2A> właściwości.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje procedurę obsługi dla tego zdarzenia. W tym przykładzie ListView1 potrzebuje każdego <xref:System.Windows.Forms.ListViewItem> , aby wyświetlić kwadrat jego indeksu. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Windows.Forms.ListView.VirtualMode%2A> właściwości.  
  
 [!code-csharp[System.Windows.Forms.ListView.VirtualMode#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/cs/VirtualMode.cs#2)]
 [!code-vb[System.Windows.Forms.ListView.VirtualMode#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/vb/VirtualMode.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Właściwość nie jest ustawiona na element, <see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" /> gdy zdarzenie jest obsługiwane. <see cref="P:System.Windows.Forms.RetrieveVirtualItemEventArgs.Item" /></exception>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayout">
      <MemberSignature Language="C#" Value="public virtual bool RightToLeftLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RightToLeftLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.RightToLeftLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RightToLeftLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RightToLeftLayout { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RightToLeftLayout : bool with get, set" Usage="System.Windows.Forms.ListView.RightToLeftLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy formant jest układany od prawej do lewej.</summary>
        <value><see langword="true" />Aby wskazać, <see cref="T:System.Windows.Forms.ListView" /> że formant jest określony od prawej do lewej; w przeciwnym <see langword="false" />razie,.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView> Właściwość jest używana z aplikacjami międzynarodowymi, w których język jest odczytywany od prawej do lewej. Jeśli ustawisz <xref:System.Windows.Forms.ListView> i <xref:System.Windows.Forms.RightToLeft> ma wartość true, zawartość kontrolki i tekst zostaną rozłożone od prawej do lewej.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RightToLeftLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RightToLeftLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.RightToLeftLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RightToLeftLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RightToLeftLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.RightToLeftLayoutChanged : EventHandler " Usage="member this.RightToLeftLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wartość właściwości zostanie <see cref="P:System.Windows.Forms.ListView.RightToLeftLayout" /> zmieniona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportuje wystąpienie <xref:System.Windows.Forms.ListView.RightToLeftLayoutChanged> zdarzenia. Ten raport pomaga dowiedzieć się, kiedy wystąpi zdarzenie i może pomóc w debugowaniu. Aby zgłosić wiele zdarzeń lub zdarzenia, które występują często, należy rozważyć <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> zamianę <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączenie komunikatu do wielowierszowego <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu zawierającego wystąpienie typu <xref:System.Windows.Forms.ListView> o nazwie. `ListView1` Następnie upewnij się, że program obsługi zdarzeń jest skojarzony <xref:System.Windows.Forms.ListView.RightToLeftLayoutChanged> ze zdarzeniem.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#462](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#462)]
 [!code-vb[System.Windows.Forms.EventExamples#462](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#462)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scrollable">
      <MemberSignature Language="C#" Value="public bool Scrollable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Scrollable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Scrollable" />
      <MemberSignature Language="VB.NET" Value="Public Property Scrollable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Scrollable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Scrollable : bool with get, set" Usage="System.Windows.Forms.ListView.Scrollable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy pasek przewijania jest dodawany do kontrolki, gdy jest za mało miejsca, aby wyświetlić wszystkie elementy.</summary>
        <value><see langword="true" />Jeśli paski przewijania są dodawane do kontrolki, gdy jest to konieczne, aby umożliwić użytkownikowi wyświetlanie wszystkich elementów; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy ta właściwość jest ustawiona na `true` <xref:System.Windows.Forms.ListView> , Wyświetla pionowy pasek przewijania, który będzie używany, gdy liczba elementów przekracza rozmiar obszaru klienta formantu. Za pomocą tej właściwości można upewnić się, że użytkownik może uzyskać dostęp do wszystkich elementów, które <xref:System.Windows.Forms.ListView> są dostępne w formancie.  
  
> [!NOTE]
>  W wersjach [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] wcześniejszych niż 2,0, nagłówki kolumn nie były poprawnie rysowane podczas ustawiania tej `false` właściwości i zmiany rozmiaru kontrolki, aby zwiększyć jej rozmiar. Aby obejść ten problem, należy ustawić tę właściwość `true` na <xref:System.Windows.Forms.Form.ResizeBegin> w programie obsługi zdarzeń `false` i ustawić <xref:System.Windows.Forms.Form.ResizeEnd> ją z powrotem w programie obsługi zdarzeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchForVirtualItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.SearchForVirtualItemEventHandler SearchForVirtualItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.SearchForVirtualItemEventHandler SearchForVirtualItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.SearchForVirtualItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SearchForVirtualItem As SearchForVirtualItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::SearchForVirtualItemEventHandler ^ SearchForVirtualItem;" />
      <MemberSignature Language="F#" Value="member this.SearchForVirtualItem : System.Windows.Forms.SearchForVirtualItemEventHandler " Usage="member this.SearchForVirtualItem : System.Windows.Forms.SearchForVirtualItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SearchForVirtualItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, <see cref="T:System.Windows.Forms.ListView" /> gdy jest w trybie wirtualnym i trwa wyszukiwanie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie występuje, gdy <xref:System.Windows.Forms.ListView> jest w trybie wirtualnym <xref:System.Windows.Forms.ListView.FindNearestItem%2A> i wywoływana <xref:System.Windows.Forms.ListView.FindItemWithText%2A> jest metoda or. Podczas obsługi tego zdarzenia należy obliczyć, który element z listy elementów dostarczonych przez właściwość jest <xref:System.Windows.Forms.ListView.Items%2A> zgodny z kryteriami wyszukiwania i <xref:System.Windows.Forms.SearchForVirtualItemEventArgs.Index%2A?displayProperty=nameWithType> ustawić właściwość <xref:System.Windows.Forms.ListViewItem>na indeks. Jeśli element nie jest podany <xref:System.Windows.Forms.ListView.FindNearestItem%2A> i <xref:System.Windows.Forms.ListView.FindItemWithText%2A> zwróci `null`.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W przykładzie wyszukiwanie zwraca najbliższe dopasowanie do określonej liczby całkowitej na liście pierwszych 10000 kwadratów. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Windows.Forms.ListView.VirtualMode%2A> właściwości.  
  
 [!code-csharp[System.Windows.Forms.ListView.VirtualMode#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/cs/VirtualMode.cs#4)]
 [!code-vb[System.Windows.Forms.ListView.VirtualMode#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/vb/VirtualMode.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.SelectedIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectedIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectedIndexChanged : EventHandler " Usage="member this.SelectedIndexChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po <see cref="P:System.Windows.Forms.ListView.SelectedIndices" /> zmianie kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kolekcja zmienia się za każdym <xref:System.Windows.Forms.ListViewItem.Selected%2A> razem, gdy <xref:System.Windows.Forms.ListViewItem> właściwość zostanie zmieniona. <xref:System.Windows.Forms.ListView.SelectedIndices%2A> Zmiana właściwości może wystąpić programowo lub gdy użytkownik wybierze element lub wyczyści zaznaczenie elementu. Gdy użytkownik wybierze element bez naciskania klawisza CTRL, aby wykonać wybór wielokrotny, formant najpierw czyści poprzedni wybór. W takim przypadku to zdarzenie występuje jeden raz dla każdego elementu, który został wcześniej wybrany, i jeden raz dla nowo wybranego elementu.  
  
 Aby określić, które elementy są zaznaczone w <xref:System.Windows.Forms.ListView> formancie, <xref:System.Windows.Forms.ListView.SelectedItems%2A> Użyj właściwości, aby uzyskać dostęp <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection>do. Można utworzyć procedurę obsługi zdarzeń dla tego zdarzenia, aby wykonywać zadania w przypadku zmiany wybranych elementów w <xref:System.Windows.Forms.ListView> kontrolce.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu <xref:System.Windows.Forms.ListView.SelectedItems%2A> demonstruje sposób użycia właściwości, <xref:System.Windows.Forms.ListView.SelectedIndexChanged> zdarzenia <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection> , <xref:System.Windows.Forms.ListView.HeaderStyle%2A> elementów członkowskich i klasy. Aby uruchomić ten przykład, wklej następujący kod do <xref:System.Windows.Forms.ListView> formularza, który zawiera obiekt o nazwie `ListView1` i <xref:System.Windows.Forms.TextBox> nazwa `TextBox1`. `Load` Wywołaj `InitializeListView` metodę z konstruktora lub metody formularza. Ten przykład wymaga, aby program obsługi zdarzeń został prawidłowo skojarzony ze <xref:System.Windows.Forms.ListView.SelectedIndexChanged> zdarzeniem  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.ItemSelectionChanged" />
        <altmember cref="M:System.Windows.Forms.ListView.OnSelectedIndexChanged(System.EventArgs)" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedIndices" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedItems" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndices">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.SelectedIndexCollection SelectedIndices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/SelectedIndexCollection SelectedIndices" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.SelectedIndices" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedIndices As ListView.SelectedIndexCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::SelectedIndexCollection ^ SelectedIndices { System::Windows::Forms::ListView::SelectedIndexCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedIndices : System.Windows.Forms.ListView.SelectedIndexCollection" Usage="System.Windows.Forms.ListView.SelectedIndices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+SelectedIndexCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera indeksy wybranych elementów w kontrolce.</summary>
        <value>A <see cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" /> , który zawiera indeksy wybranych elementów. Jeśli żadne elementy nie są obecnie zaznaczone, zwracany <see cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" /> jest pusty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość nie będzie zawierać żadnych indeksów, jeśli do właściwości zostanie uzyskany dostęp <xref:System.Windows.Forms.ListView> przed utworzeniem dojścia, <xref:System.Windows.Forms.ListView> co zwykle występuje, gdy początkowo jest ładowany do wyświetlania w formularzu. <xref:System.Windows.Forms.ListView.SelectedIndices%2A> Możesz sprawdzić, czy dojście zostało utworzone z <xref:System.Windows.Forms.Control.IsHandleCreated%2A> właściwością. Gdy właściwość jest ustawiona na `true`, ta właściwość zwraca kolekcję zawierającą indeksy wszystkich elementów <xref:System.Windows.Forms.ListView>, które są wybrane w. <xref:System.Windows.Forms.ListView.MultiSelect%2A> Dla pojedynczego wyboru <xref:System.Windows.Forms.ListView>ta właściwość zwraca kolekcję zawierającą pojedynczy element zawierający indeks tylko wybranego elementu <xref:System.Windows.Forms.ListView>w. Aby uzyskać więcej informacji na temat zadań, które można wykonać przy użyciu elementów w kolekcji, zobacz <xref:System.Windows.Forms.ListView.SelectedIndexCollection>.  
  
 Jeśli chcesz uzyskać kolekcję elementów, które są zaznaczone w <xref:System.Windows.Forms.ListView> formancie, zamiast pozycji indeksu wybranych elementów, <xref:System.Windows.Forms.ListView.SelectedItems%2A> Użyj właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje <xref:System.Windows.Forms.ListView.SelectedIndices%2A>użycie, <xref:System.Windows.Forms.ListView.SelectedIndexChanged> <xref:System.Windows.Forms.ListView.HeaderStyle%2A> , i i klasy. <xref:System.Windows.Forms.ListView.SelectedIndexCollection> Aby uruchomić ten przykład, wklej następujący kod do <xref:System.Windows.Forms.ListView> formularza, który zawiera obiekt o nazwie `ListView1` i <xref:System.Windows.Forms.TextBox> nazwa `TextBox1`. `Load` Wywołaj `InitializeListView` metodę z konstruktora lub metody formularza. Ten przykład wymaga, aby program obsługi zdarzeń został poprawnie skojarzony <xref:System.Windows.Forms.ListView.SelectedIndexChanged> ze zdarzeniem.  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView1#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#3)]
[!code-csharp[System.Windows.Forms.ListView1#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#3)]
[!code-vb[System.Windows.Forms.ListView1#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedItems" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItems">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.SelectedListViewItemCollection SelectedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/SelectedListViewItemCollection SelectedItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.SelectedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedItems As ListView.SelectedListViewItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::SelectedListViewItemCollection ^ SelectedItems { System::Windows::Forms::ListView::SelectedListViewItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItems : System.Windows.Forms.ListView.SelectedListViewItemCollection" Usage="System.Windows.Forms.ListView.SelectedItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+SelectedListViewItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera elementy wybrane w formancie.</summary>
        <value>A <see cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" /> , który zawiera elementy wybrane w formancie. Jeśli żadne elementy nie są obecnie zaznaczone, zwracany <see cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" /> jest pusty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość nie będzie zawierać żadnych elementów, jeśli do właściwości zostanie uzyskany dostęp <xref:System.Windows.Forms.ListView> przed utworzeniem dojścia, co zazwyczaj występuje <xref:System.Windows.Forms.ListView> , gdy początkowo jest ładowany do wyświetlania w formularzu. <xref:System.Windows.Forms.ListView.SelectedItems%2A> Możesz sprawdzić, czy dojście zostało utworzone z <xref:System.Windows.Forms.Control.IsHandleCreated%2A> właściwością. Gdy właściwość jest ustawiona na `true`, ta właściwość zwraca kolekcję zawierającą elementy wybrane w <xref:System.Windows.Forms.ListView>. <xref:System.Windows.Forms.ListView.MultiSelect%2A> Dla pojedynczego wyboru <xref:System.Windows.Forms.ListView>ta właściwość zwraca kolekcję zawierającą tylko wybrany element <xref:System.Windows.Forms.ListView>w. Aby uzyskać więcej informacji na temat zadań, które można wykonać przy użyciu elementów w kolekcji, zobacz <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection>.  
  
 Jeśli chcesz uzyskać kolekcję pozycji indeksu w obrębie <xref:System.Windows.Forms.ListView.ListViewItemCollection> elementów zaznaczonych <xref:System.Windows.Forms.ListView> w kontrolce, a nie wybranych elementów, użyj <xref:System.Windows.Forms.ListView.SelectedIndices%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje <xref:System.Windows.Forms.ListView.SelectedItems%2A>użycie, <xref:System.Windows.Forms.ListView.SelectedIndexChanged> zdarzenie i <xref:System.Windows.Forms.ListView.HeaderStyle%2A> składowe i <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection> klasy. Aby uruchomić ten przykład, wklej następujący kod do <xref:System.Windows.Forms.ListView> formularza, który zawiera obiekt o nazwie `ListView1` i <xref:System.Windows.Forms.TextBox> nazwa `TextBox1`. `Load` Wywołaj `InitializeListView` metodę z konstruktora lub metody formularza. Ten przykład wymaga, aby program obsługi zdarzeń został prawidłowo skojarzony <xref:System.Windows.Forms.ListView.SelectedIndexChanged> ze zdarzeniem  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedIndices" />
      </Docs>
    </Member>
    <Member MemberName="ShowGroups">
      <MemberSignature Language="C#" Value="public bool ShowGroups { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowGroups" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ShowGroups" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowGroups As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowGroups { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowGroups : bool with get, set" Usage="System.Windows.Forms.ListView.ShowGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy elementy są wyświetlane w grupach.</summary>
        <value><see langword="true" />Aby wyświetlić elementy w grupach; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wszystkie grupy przypisane do <xref:System.Windows.Forms.ListView> kontrolki pojawiają się za każdym razem, <xref:System.Windows.Forms.ListView.View%2A> gdy właściwość jest ustawiona <xref:System.Windows.Forms.View.List>na wartość inną niż. Funkcja grupowania umożliwia tworzenie wizualnych grup elementów powiązanych <xref:System.Windows.Forms.ListView> logicznie w systemach Windows XP i Windows Server 2003. <xref:System.Windows.Forms.ListView> Aby włączyć tę funkcję, aplikacja musi wywołać <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> metodę. Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Forms.ListView.Groups%2A> właściwość.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.Groups" />
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
        <altmember cref="T:System.Windows.Forms.ListViewGroupCollection" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="ShowItemToolTips">
      <MemberSignature Language="C#" Value="public bool ShowItemToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowItemToolTips" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ShowItemToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowItemToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowItemToolTips { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowItemToolTips : bool with get, set" Usage="System.Windows.Forms.ListView.ShowItemToolTips" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, <see cref="T:System.Windows.Forms.ListViewItem" /> czy dla obiektów zawartych <see cref="T:System.Windows.Forms.ListView" />w elemencie są wyświetlane etykietki narzędzi.</summary>
        <value><see langword="true" />Jeśli <see cref="T:System.Windows.Forms.ListViewItem" /> są wyświetlane etykietki narzędzi; <see langword="false" />w przeciwnym razie. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli właściwość jest ustawiona na `true`, zostanie wyświetlona dowolna <xref:System.Windows.Forms.ListViewItem> , która ma etykietkę narzędzia. w przeciwnym razie nic nie jest wyświetlane. <xref:System.Windows.Forms.ListView.ShowItemToolTips%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Windows.Forms.ListView.ShowItemToolTips%2A> jak używać właściwości i. <xref:System.Windows.Forms.ListViewItem.ToolTipText%2A?displayProperty=nameWithType> Aby uruchomić ten przykład, wklej kod do formularza systemu Windows i Wywołaj `InitializeItemsWithToolTips` z konstruktora lub <xref:System.Windows.Forms.Form.Load> programu obsługi zdarzeń formularza.  
  
 [!code-csharp[System.Windows.Forms.ListViewItemWhidbeyMembers#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.ListViewItemWhidbeyMembers#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmallImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList SmallImageList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList SmallImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.SmallImageList" />
      <MemberSignature Language="VB.NET" Value="Public Property SmallImageList As ImageList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageList ^ SmallImageList { System::Windows::Forms::ImageList ^ get(); void set(System::Windows::Forms::ImageList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SmallImageList : System.Windows.Forms.ImageList with get, set" Usage="System.Windows.Forms.ListView.SmallImageList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość <see cref="T:System.Windows.Forms.ImageList" /> do użycia podczas wyświetlania elementów jako małych ikon w kontrolce.</summary>
        <value>Zawiera ikony <see cref="P:System.Windows.Forms.ListView.View" /> <see cref="F:System.Windows.Forms.View.SmallIcon" />, które mają być używane, gdy właściwość jest ustawiona na. <see cref="T:System.Windows.Forms.ImageList" /> Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość umożliwia <xref:System.Windows.Forms.ListView.View%2A> określenie obiektu, który zawiera ikony używane podczas wyświetlania elementów z małymi ikonami (gdy właściwość jest ustawiona na dowolną wartość inną niż <xref:System.Windows.Forms.View.LargeIcon>). <xref:System.Windows.Forms.ImageList> <xref:System.Windows.Forms.ListView.SmallImageList%2A> Kontrolka może zaakceptować dowolny format <xref:System.Windows.Forms.ImageList> graficzny obsługiwany przez formant podczas wyświetlania ikon. <xref:System.Windows.Forms.ListView> <xref:System.Windows.Forms.ListView> Formant nie jest ograniczony do plików ICO. <xref:System.Windows.Forms.ListViewItem> <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> <xref:System.Windows.Forms.ImageList>Po przypisaniu do właściwości można ustawić właściwość każdej w <xref:System.Windows.Forms.ListView> kontrolce na pozycję indeksu odpowiedniego obrazu w. <xref:System.Windows.Forms.ListView.SmallImageList%2A> <xref:System.Windows.Forms.ImageList> Rozmiar ikon <xref:System.Windows.Forms.ListView.SmallImageList%2A> jest określany <xref:System.Windows.Forms.ImageList.ImageSize%2A> przez właściwość.  
  
 Ponieważ dla <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A?displayProperty=nameWithType> właściwości można określić tylko jeden indeks <xref:System.Windows.Forms.ImageList> , obiekty określone we <xref:System.Windows.Forms.ListView.LargeImageList%2A> właściwościach i <xref:System.Windows.Forms.ListView.SmallImageList%2A> powinny mieć te same położenie indeksu dla obrazów do wyświetlenia. Na <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> przykład jeśli właściwość <xref:System.Windows.Forms.ImageList> <xref:System.Windows.Forms.ListViewItem> obiektu ma ustawioną wartość 0, obrazy do użycia dla małych i dużych ikon powinny znajdować się w tym samym położeniu indeksu w obiektach określonych we <xref:System.Windows.Forms.ListView.LargeImageList%2A> właściwościach i <xref:System.Windows.Forms.ListView.SmallImageList%2A> .  
  
> [!NOTE]
>  Gdy obrazy są określone za pomocą klawiszy, nadal trzeba umieścić małe i duże wersje obrazu w tej samej lokalizacji indeksu na odpowiednich listach obrazu. Podczas przełączania między widokami, lokalizacja indeksu obrazu na jednej liście jest używana do lokalizowania obrazu na drugiej liście, niezależnie od podanej wartości klucza.  
  
 Aby ustawić <xref:System.Windows.Forms.ImageList> do użycia podczas wyświetlania elementów z dużymi ikonami ( <xref:System.Windows.Forms.ListView.View%2A> gdy właściwość jest ustawiona <xref:System.Windows.Forms.ListView.LargeImageList%2A> na <xref:System.Windows.Forms.View.LargeIcon>), użyj właściwości. Jeśli chcesz używać obrazów do wyświetlania stanu elementu, użyj <xref:System.Windows.Forms.ListView.StateImageList%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.ListView> formant z trzema <xref:System.Windows.Forms.ListViewItem> określonymi obiektami i trzema <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiektami określonymi dla każdego elementu. Przykład tworzy <xref:System.Windows.Forms.ColumnHeader> również obiekty do wyświetlania elementów podelementowych w widoku szczegółów. Dwa <xref:System.Windows.Forms.ImageList> obiekty są również tworzone w przykładzie kodu, aby zapewnić obrazy <xref:System.Windows.Forms.ListViewItem> dla obiektów. Te <xref:System.Windows.Forms.ImageList> obiekty są dodawane <xref:System.Windows.Forms.ListView.LargeImageList%2A> do właściwości i <xref:System.Windows.Forms.ListView.SmallImageList%2A> . W przykładzie zastosowano następujące właściwości podczas tworzenia <xref:System.Windows.Forms.ListView> formantu.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Ten przykład wymaga, aby dodano kod do <xref:System.Windows.Forms.Form> i wywołać metodę utworzoną w przykładzie z konstruktora lub innej metody w formularzu. Przykład wymaga również, aby obrazy o `MySmallImage1`nazwach `MyLargeImage1` `MySmallImage2`,, `MyLargeImage2` i znajdowały się w katalogu głównym dysku C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="P:System.Windows.Forms.ListView.LargeImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.StateImageList" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort();" />
      <MemberSignature Language="F#" Value="member this.Sort : unit -&gt; unit" Usage="listView.Sort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sortuje elementy widoku listy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj elementy są sortowane przy <xref:System.Windows.Forms.ListView.Sorting%2A> użyciu właściwości, która sortuje elementy na podstawie tekstu elementu. Aby dostosować kolejność sortowania, należy napisać klasę, która implementuje <xref:System.Collections.IComparer> interfejs i <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> ustawić właściwość na obiekt tej klasy. Jest to przydatne, na przykład w przypadku sortowania elementów według tekstu podelementu. Aby uzyskać więcej informacji na temat wykonywania ręcznego sortowania elementów, zobacz przykład dla <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> właściwości.  
  
 Jeśli właściwość jest ustawiona na wartość inną niż <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> lub jeśli <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> właściwość jest ustawiona, lista jest sortowana automatycznie podczas dodawania elementów. <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> Elementy nie są sortowane automatycznie po zmianie tekstu etykiety.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.ListViewItemSorter" />
      </Docs>
    </Member>
    <Member MemberName="Sorting">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.SortOrder Sorting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.SortOrder Sorting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Sorting" />
      <MemberSignature Language="VB.NET" Value="Public Property Sorting As SortOrder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::SortOrder Sorting { System::Windows::Forms::SortOrder get(); void set(System::Windows::Forms::SortOrder value); };" />
      <MemberSignature Language="F#" Value="member this.Sorting : System.Windows.Forms.SortOrder with get, set" Usage="System.Windows.Forms.ListView.Sorting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SortOrder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolejność sortowania dla elementów w kontrolce.</summary>
        <value>Jedna z <see cref="T:System.Windows.Forms.SortOrder" /> wartości. Wartość domyślna to <see cref="F:System.Windows.Forms.SortOrder.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość pozwala określić, czy elementy są sortowane <xref:System.Windows.Forms.ListView> w formancie. <xref:System.Windows.Forms.ListView.Sorting%2A> Domyślnie sortowanie nie jest wykonywane. <xref:System.Windows.Forms.SortOrder.Descending> <xref:System.Windows.Forms.ListView> <xref:System.Windows.Forms.SortOrder.Ascending>Gdy właściwość jest ustawiona na <xref:System.Windows.Forms.SortOrder.Ascending> lub, elementy w elemencie są sortowane automatycznie w rosnącej kolejności alfabetycznej (gdy właściwość jest ustawiona na) lub malejącą kolejnością alfabetyczną (gdy <xref:System.Windows.Forms.ListView.Sorting%2A> Właściwość jest ustawiona na <xref:System.Windows.Forms.SortOrder.Descending>). Za pomocą tej właściwości można automatycznie sortować elementy, które są wyświetlane w <xref:System.Windows.Forms.ListView> kontrolce, aby ułatwić użytkownikom znajdowanie elementów po udostępnieniu dużej liczby elementów.  
  
 Jeśli chcesz przeprowadzić sortowanie elementów zamiast używać <xref:System.Windows.Forms.ListView.Sorting%2A> właściwości, <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> Użyj <xref:System.Windows.Forms.ListView.Sort%2A> właściwości w połączeniu z metodą.  
  
 Jeśli właściwość jest ustawiona na wartość inną niż <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> lub jeśli <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> właściwość jest ustawiona, lista jest sortowana automatycznie podczas dodawania elementów. <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> Elementy nie są sortowane automatycznie po zmianie tekstu etykiety.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.ListView> formant z trzema <xref:System.Windows.Forms.ListViewItem> określonymi obiektami i trzema <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiektami określonymi dla każdego elementu. Przykład tworzy <xref:System.Windows.Forms.ColumnHeader> również obiekty do wyświetlania elementów podelementowych w widoku szczegółów. Dwa <xref:System.Windows.Forms.ImageList> obiekty są również tworzone w przykładzie kodu, aby zapewnić obrazy <xref:System.Windows.Forms.ListViewItem> dla obiektów. Te <xref:System.Windows.Forms.ImageList> obiekty są dodawane <xref:System.Windows.Forms.ListView.LargeImageList%2A> do właściwości i <xref:System.Windows.Forms.ListView.SmallImageList%2A> . W przykładzie zastosowano następujące właściwości podczas tworzenia <xref:System.Windows.Forms.ListView> formantu.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Ten przykład wymaga, aby dodano kod do <xref:System.Windows.Forms.Form> i wywołać metodę utworzoną w przykładzie z konstruktora lub innej metody w formularzu. Przykład wymaga również, aby obrazy o `MySmallImage1`nazwach `MyLargeImage1` `MySmallImage2`,, `MyLargeImage2` i znajdowały się w katalogu głównym dysku C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Określona wartość nie jest jedną z <see cref="T:System.Windows.Forms.SortOrder" /> wartości.</exception>
        <altmember cref="T:System.Windows.Forms.SortOrder" />
      </Docs>
    </Member>
    <Member MemberName="StateImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList StateImageList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList StateImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.StateImageList" />
      <MemberSignature Language="VB.NET" Value="Public Property StateImageList As ImageList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageList ^ StateImageList { System::Windows::Forms::ImageList ^ get(); void set(System::Windows::Forms::ImageList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StateImageList : System.Windows.Forms.ImageList with get, set" Usage="System.Windows.Forms.ListView.StateImageList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Forms.ImageList" /> skojarzone ze stanem zdefiniowanym przez aplikację w kontrolce.</summary>
        <value><see cref="T:System.Windows.Forms.ImageList" /> Zawiera zestaw obrazów stanu, których można użyć do wskazania stanu zdefiniowanego przez aplikację dla elementu. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość pozwala określić, który zawiera obrazy, które mają być używane do reprezentowania stanu określonego <xref:System.Windows.Forms.ListView> dla aplikacji w formancie. <xref:System.Windows.Forms.ImageList> <xref:System.Windows.Forms.ListView.StateImageList%2A> Obrazy stanu są wyświetlane po lewej stronie ikony elementu. Możesz użyć obrazów stanu, takich jak zaznaczone i niezaznaczone pola wyboru, aby wskazać Stany elementów zdefiniowane przez aplikację. Obrazy stanu są widoczne we wszystkich widokach <xref:System.Windows.Forms.ListView> formantu.  
  
 <xref:System.Windows.Forms.ListView.StateImageList%2A> <xref:System.Windows.Forms.ListView.CheckBoxes%2A> `true`Jeśli jest określony we właściwości i właściwość jest ustawiona na <xref:System.Windows.Forms.ImageList> , zamiast pola wyboru są wyświetlane obrazy z położeniami w indeksie 0 i 1. <xref:System.Windows.Forms.ImageList> Obraz w pozycji indeks 0 jest wyświetlany zamiast pola wyboru niezaznaczone, a zamiast zaznaczone pole wyboru zostanie wyświetlony obraz z pozycją indeks 1.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.LargeImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.SmallImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckBoxes" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.ListView.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ta właściwość nie jest odpowiednia dla tej klasy.</summary>
        <value>Tekst, który ma być wyświetlany <see cref="T:System.Windows.Forms.ListView" /> w kontrolce.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość nie jest odpowiednia dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" />
      <MemberSignature Language="F#" Value="member this.TextChanged : EventHandler " Usage="member this.TextChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="P:System.Windows.Forms.ListView.Text" /> właściwość zostanie zmieniona.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TileSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size TileSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size TileSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.TileSize" />
      <MemberSignature Language="VB.NET" Value="Public Property TileSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size TileSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.TileSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.ListView.TileSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia rozmiar kafelków wyświetlanych w widoku kafelków.</summary>
        <value>A <see cref="T:System.Drawing.Size" /> , który zawiera nowy rozmiar kafelka.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość określa rozmiar kafelków, gdy <xref:System.Windows.Forms.ListView.View%2A> właściwość jest ustawiona na. <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType> Ustawienie tej właściwości jest przydatne, aby zapobiec zawijaniu wierszy, gdy tekst podkreślenia jest zbyt długi, aby można go było wyświetlić w pojedynczym wierszu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Windows.Forms.ListView> jak używać funkcji dzielenia. W tym przykładzie widok kafelka wyświetla elementy, które reprezentują książki. Każdy element jest pokazywany jako kafelek zawierający ikonę książki, tytuł, autora i rok publikacji. Aby przykładowy kod działał, należy dołączyć plik ikony o nazwie Book. ico w tym samym katalogu, w którym znajduje się przykład. Aby wyświetlić widok kafelka bez ikon, należy dodać komentarz do wierszy odnoszących się do <xref:System.Windows.Forms.ImageList> obiektu.  
  
 [!code-cpp[System.Windows.Forms.ListView.Tiling#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Tiling/CPP/listviewtilingexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.Tiling#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Tiling/CS/listviewtilingexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.Tiling#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Tiling/VB/listviewtilingexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="TopItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem TopItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem TopItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.TopItem" />
      <MemberSignature Language="VB.NET" Value="Public Property TopItem As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItem ^ TopItem { System::Windows::Forms::ListViewItem ^ get(); void set(System::Windows::Forms::ListViewItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TopItem : System.Windows.Forms.ListViewItem with get, set" Usage="System.Windows.Forms.ListView.TopItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia pierwszy widoczny element w kontrolce.</summary>
        <value><see cref="T:System.Windows.Forms.ListViewItem" /> Reprezentujący pierwszy widoczny element w kontrolce.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Początkowo element z pozycją indeks równą zero (0) znajduje się u góry <xref:System.Windows.Forms.ListView> formantu. Jeśli zawartość <xref:System.Windows.Forms.ListView> kontrolki jest przewijana, inny element może znajdować się w górnej części formantu. Za pomocą tej właściwości można wskazać lub określić, który element jest widoczny u góry <xref:System.Windows.Forms.ListView> formantu. Wartość <xref:System.Windows.Forms.ListView.TopItem%2A> właściwości nie zawsze będzie trwała, w zależności od tego, gdzie żądany górny element znajduje się w widoku listy.  
  
 Liczba elementów widocznych w <xref:System.Windows.Forms.ListView> formancie w dowolnym momencie zależy od wysokości widoku listy i rozmiaru elementów, które zawiera. Jeśli elementy przekraczają wysokość widoku listy, elementy będą kontynuowane na wielu stronach, które użytkownik może przewijać. Jeśli ustawisz <xref:System.Windows.Forms.ListView.TopItem%2A> właściwość na element na ostatniej stronie <xref:System.Windows.Forms.ListView>elementu, element zostanie automatycznie przewinięty <xref:System.Windows.Forms.ListView.TopItem%2A> do widoku, ale zostanie ustawiony na rzeczywisty górny element ostatniej strony.  
  
 Aby upewnić się, że określony element znajduje się w widocznym regionie formantu (ale niekoniecznie w górnym położeniu) <xref:System.Windows.Forms.ListView.EnsureVisible%2A> , użyj metody.  
  
> [!NOTE]
>  Ustawienie tej właściwości nie ma znaczenia, <xref:System.Windows.Forms.ListView.Scrollable%2A> gdy wartość właściwości to. `false`  
>   
>  Ustawienie tej właściwości nie jest obsługiwane w wersjach [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] wcześniejszych niż wersja 2,0.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje Resetowanie stylu <xref:System.Windows.Forms.ListViewItem> podelementów obiektu za <xref:System.Windows.Forms.ListView.TopItem%2A> pomocą właściwości i <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.ResetStyle%2A?displayProperty=nameWithType> metody. Aby uruchomić przykład, wklej następujący kod do formularza zawierającego przycisk o nazwie `Button1` i `InitializeListView` Wywołaj metodę w konstruktorze lub <xref:System.Windows.Forms.Form.Load> obsłudze zdarzeń formularza.  
  
 [!code-cpp[System.Windows.Forms.ListViewItemStyle#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListViewItemStyle#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ListViewItemStyle#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiona na <see cref="F:System.Windows.Forms.View.LargeIcon" />, <see cref="F:System.Windows.Forms.View.SmallIcon" />lub. <see cref="F:System.Windows.Forms.View.Tile" /> <see cref="P:System.Windows.Forms.ListView.View" /></exception>
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="M:System.Windows.Forms.ListView.EnsureVisible(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="listView.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca ciąg reprezentujący <see cref="T:System.Windows.Forms.ListView" /> formant.</summary>
        <returns>Ciąg określający typ formantu, liczbę elementów w <see cref="T:System.Windows.Forms.ListView" /> formancie i typ pierwszego elementu <see cref="T:System.Windows.Forms.ListView" />w, jeśli liczba nie jest równa 0.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateExtendedStyles">
      <MemberSignature Language="C#" Value="protected void UpdateExtendedStyles ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UpdateExtendedStyles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.UpdateExtendedStyles" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UpdateExtendedStyles ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UpdateExtendedStyles();" />
      <MemberSignature Language="F#" Value="member this.UpdateExtendedStyles : unit -&gt; unit" Usage="listView.UpdateExtendedStyles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aktualizuje rozszerzone style zastosowane do kontrolki widok listy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Windows.Forms.ListView.UpdateExtendedStyles%2A> metody w klasie pochodnej, aby zastąpić rozszerzone style używane <xref:System.Windows.Forms.ListView> przez formant. W przypadku wywołania tej metody należy upewnić się, że style rozszerzone ustawiane przez właściwości <xref:System.Windows.Forms.ListView> kontrolki są używane w wersji pochodnej formantu.  
  
 Poniżej znajdują się właściwości, które stosują styl rozszerzony do <xref:System.Windows.Forms.ListView> kontrolki.  
  
-   <xref:System.Windows.Forms.ListView.Activation%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.HoverSelection%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.Activation" />
        <altmember cref="P:System.Windows.Forms.ListView.AllowColumnReorder" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckBoxes" />
        <altmember cref="P:System.Windows.Forms.ListView.FullRowSelect" />
        <altmember cref="P:System.Windows.Forms.ListView.GridLines" />
        <altmember cref="P:System.Windows.Forms.ListView.HoverSelection" />
      </Docs>
    </Member>
    <Member MemberName="UseCompatibleStateImageBehavior">
      <MemberSignature Language="C#" Value="public bool UseCompatibleStateImageBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCompatibleStateImageBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCompatibleStateImageBehavior As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCompatibleStateImageBehavior { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseCompatibleStateImageBehavior : bool with get, set" Usage="System.Windows.Forms.ListView.UseCompatibleStateImageBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Windows.Forms.ListView" /> używane jest zachowanie obrazu stanu, które jest zgodne [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] z 1,1 lub [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2,0.</summary>
        <value><see langword="true" />Jeśli zachowanie obrazu stanu jest zgodne z [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 1,1; Jeśli zachowanie jest zgodne [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] z 2,0. <see langword="false" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zmiany kontrolki w 2,0 umożliwiają [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Ustawianie niestandardowych obrazów stanu, aby wskazać, czy element jest zaznaczony, czy nieokreślony. <xref:System.Windows.Forms.ListView> Po dodaniu tej funkcji [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2,0 ma inne zachowanie niż .NET Framework 1,1. Jeśli utworzono aplikacje, które są zależne od zachowania w [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 1,1, upewnij się, <xref:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior%2A> że właściwość jest ustawiona na `true`, która jest wartością domyślną. Aby w pełni wykorzystać niestandardowe obrazy stanu, ustaw wartość <xref:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior%2A>. `false`  
  
> [!NOTE]
>  Jeśli używasz [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)] projektanta <xref:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior%2A> , właściwość zostanie ustawiona na `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.View View { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.View View" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.View" />
      <MemberSignature Language="VB.NET" Value="Public Property View As View" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::View View { System::Windows::Forms::View get(); void set(System::Windows::Forms::View value); };" />
      <MemberSignature Language="F#" Value="member this.View : System.Windows.Forms.View with get, set" Usage="System.Windows.Forms.ListView.View" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.View</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia sposób wyświetlania elementów w kontrolce.</summary>
        <value>Jedna z <see cref="T:System.Windows.Forms.View" /> wartości. Wartość domyślna to <see cref="F:System.Windows.Forms.View.LargeIcon" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość pozwala określić typ wyświetlania, który jest wykorzystywany przez <xref:System.Windows.Forms.ListView> formant do wyświetlania elementów. <xref:System.Windows.Forms.ListView.View%2A> Można ustawić <xref:System.Windows.Forms.ListView.View%2A> właściwość, aby wyświetlić każdy element z dużymi lub małymi ikonami lub wyświetlić elementy na liście pionowej. Opcja zaawansowana to widok szczegółów, który umożliwia wyświetlenie nie tylko elementów, ale wszystkich elementów podokreślonych dla każdego elementu. Każdy element jest wyświetlany w siatce, z każdym elementem wymienionym w pionie i podelementach dla każdego elementu wyświetlanego w kolumnie, z nagłówkami kolumn. Widok szczegółów jest idealnym sposobem wyświetlania informacji o bazie danych dla użytkownika. W systemach Windows XP i Windows Server 2003 można także wyświetlać elementy jako kafelki, które równoważą informacje graficzne i tekstowe, pokazując dużą ikonę wraz z dowolnymi informacjami o zapasach. Aby włączyć widok kafelków, aplikacja musi wywołać <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> metodę. W widoku małych obrazów każdy element zawiera ikonę i informacje tekstowe po prawej stronie ikony. W widoku dużego obrazu każdy element zawiera ikonę i informacje tekstowe pod ikoną. Rozmiar ikon dla listy obrazów <xref:System.Windows.Forms.ImageList.ImageSize%2A> jest określany przez właściwość <xref:System.Windows.Forms.ImageList> właściwości dla <xref:System.Windows.Forms.ListView.SmallImageList%2A> lub <xref:System.Windows.Forms.ListView.LargeImageList%2A> .  
  
> [!NOTE]
>  W przypadku korzystania z wielu list obrazów w przypadku małych i dużych widoków ikon z <xref:System.Windows.Forms.ListView> kontrolką należy umieścić małe i duże wersje obrazu w tej samej lokalizacji indeksu na odpowiednich listach obrazu. Podczas przełączania między widokami, lokalizacja indeksu obrazu na jednej liście jest używana do lokalizowania obrazu na drugiej liście, niezależnie od podanej wartości klucza.  
  
 Większość właściwości <xref:System.Windows.Forms.ListView> kontrolki wpływa na sposób zachowania lub wyświetlania różnych widoków. Niektóre właściwości, które wpływają na widoki elementów są przydatne tylko wtedy, gdy <xref:System.Windows.Forms.ListView.View%2A> właściwość jest ustawiona na określoną wartość, a inne są przydatne we wszystkich widokach. Na przykład właściwości, takie jak <xref:System.Windows.Forms.ListView.GridLines%2A> i <xref:System.Windows.Forms.ListView.FullRowSelect%2A> <xref:System.Windows.Forms.ListView.View%2A> są przydatne tylko wtedy, gdy właściwość jest ustawiona <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>na, <xref:System.Windows.Forms.ListView.MultiSelect%2A> a właściwości <xref:System.Windows.Forms.ListView.CheckBoxes%2A> i są przydatne we wszystkich widokach.  
  
 W poniższej tabeli przedstawiono niektóre <xref:System.Windows.Forms.ListView> elementy członkowskie i widoki, w których są one ważne.  
  
|Element członkowski ListView|Widok|  
|---------------------|----------|  
|<xref:System.Windows.Forms.ListView.Alignment%2A>wartość|<xref:System.Windows.Forms.View.SmallIcon> lub <xref:System.Windows.Forms.View.LargeIcon>|  
|<xref:System.Windows.Forms.ListView.AutoArrange%2A>wartość|<xref:System.Windows.Forms.View.SmallIcon> lub <xref:System.Windows.Forms.View.LargeIcon>|  
|<xref:System.Windows.Forms.ListView.AutoResizeColumn%2A>Method|<xref:System.Windows.Forms.View.Details>|  
|<xref:System.Windows.Forms.ListView.CheckBoxes%2A>|Wszystkie widoki z wyjątkiem<xref:System.Windows.Forms.View.Tile>|  
|<xref:System.Windows.Forms.ListView.Columns%2A>wartość|<xref:System.Windows.Forms.View.Details> lub <xref:System.Windows.Forms.View.Tile>|  
|<xref:System.Windows.Forms.ListView.DrawSubItem>wydarzen|<xref:System.Windows.Forms.View.Details>|  
|<xref:System.Windows.Forms.ListView.FindItemWithText%2A>Method|<xref:System.Windows.Forms.View.Details>, <xref:System.Windows.Forms.View.List>lub<xref:System.Windows.Forms.View.Tile>|  
|<xref:System.Windows.Forms.ListView.FindNearestItem%2A>Method|<xref:System.Windows.Forms.View.SmallIcon> lub <xref:System.Windows.Forms.View.LargeIcon>|  
|<xref:System.Windows.Forms.ListView.GetItemAt%2A>Method|<xref:System.Windows.Forms.View.Details> lub <xref:System.Windows.Forms.View.Tile>|  
|<xref:System.Windows.Forms.ListView.Groups%2A>wartość|Wszystkie widoki z wyjątkiem<xref:System.Windows.Forms.View.List>|  
|<xref:System.Windows.Forms.ListView.HeaderStyle%2A>wartość|<xref:System.Windows.Forms.View.Details>|  
|<xref:System.Windows.Forms.ListView.InsertionMark%2A>wartość|<xref:System.Windows.Forms.View.LargeIcon>, <xref:System.Windows.Forms.View.SmallIcon>lub<xref:System.Windows.Forms.View.Tile>|  
  
 Możesz użyć <xref:System.Windows.Forms.ListView.View%2A> właściwości, aby udostępnić różne widoki danych w aplikacji, lub zablokować określony widok, aby wykorzystać korzyści z tego widoku. Na przykład <xref:System.Windows.Forms.ListView.View%2A> właściwość jest często ustawiona na, ponieważ <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType> widok szczegółów zawiera wiele opcji wyświetlania, które nie są dostępne w innych widokach.  
  
> [!NOTE]
>  Jeśli formant nie ma określonych nagłówków kolumn i <xref:System.Windows.Forms.ListView.View%2A> ustawisz właściwość na <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>, <xref:System.Windows.Forms.ListView> formant nie będzie wyświetlał żadnych elementów. <xref:System.Windows.Forms.ListView> Jeśli formant nie ma określonych nagłówków kolumn i <xref:System.Windows.Forms.ListView.View%2A> ustawisz właściwość na <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType>, <xref:System.Windows.Forms.ListView> formant nie będzie wyświetlał żadnych elementów SubItems. <xref:System.Windows.Forms.ListView>  
  
 Widok kafelka wyświetla każdy element z dużą ikoną po lewej stronie i po prawej stronie. Informacje tekstowe składają się z etykiety elementu, a po niej elementy SubItems. Domyślnie jest wyświetlany tylko pierwszy element podrzędny, który odpowiada etykiecie elementu. Aby wyświetlić dodatkowe elementy podelementowe, należy <xref:System.Windows.Forms.ColumnHeader> dodać obiekty <xref:System.Windows.Forms.ListView.Columns%2A> do kolekcji. Każdy element podrzędny kafelka odnosi się do nagłówka kolumny. Aby kontrolować, które elementy są wyświetlane, i kolejność, w jakiej są wyświetlane, należy ustawić <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Name%2A?displayProperty=nameWithType> właściwość dla każdego elementu <xref:System.Windows.Forms.ColumnHeader.Name%2A?displayProperty=nameWithType> i właściwość dla każdego nagłówka. Następnie można dodać, usunąć i zmienić kolejność nagłówków w <xref:System.Windows.Forms.ListView.Columns%2A> kolekcji, aby osiągnąć żądany wynik.  
  
 Aby kontrolować rozmiar kafelków w widoku kafelków, ustaw <xref:System.Windows.Forms.ListView.TileSize%2A> właściwość. Jest to przydatne w celu uniemożliwienia zawijania wierszy, gdy tekst podelementu jest zbyt długi dla pojedynczego wiersza.  
  
 Aby zapoznać się z przykładem widoku kafelków, <xref:System.Windows.Forms.ListView.TileSize%2A> Zobacz właściwość.  
  
> [!NOTE]
>  Chociaż kolumny są wyświetlane tylko w widoku szczegółów, elementy SubItems bez nagłówków kolumn nie będą wyświetlane w widoku szczegółów ani w widoku kafelków.  
  
 Widok kafelków jest dostępny tylko w systemach Windows XP i Windows Server 2003, gdy aplikacja wywołuje <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> metodę. We wcześniejszych systemach operacyjnych każdy kod związany z widokiem kafelka nie ma żadnego efektu, a <xref:System.Windows.Forms.ListView> kontrolka zostanie wyświetlona w widoku dużych ikon. W efekcie każdy kod, który zależy od widoku kafelka, może nie funkcjonować prawidłowo.  
  
 Możesz chcieć dołączyć kod, który określa, czy widok kafelka jest dostępny, i zapewnić alternatywne funkcje, gdy jest on niedostępny. Na przykład, jeśli używasz rysowania przez właściciela, aby dostosować wygląd <xref:System.Windows.Forms.ListView> elementów w widoku kafelków, możesz chcieć użyć kodu rysowania odpowiedniego dla widoku dużych ikon podczas uruchamiania w systemach operacyjnych, które nie obsługują widoku kafelków.  
  
 Funkcja widok kafelków jest dostępna w tej samej bibliotece, która udostępnia funkcję motywów systemu operacyjnego. Aby sprawdzić dostępność tej biblioteki, wywołaj <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> metodę przeciążenia metody i przekaż <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> wartość.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.ListView> formant z trzema <xref:System.Windows.Forms.ListViewItem> określonymi obiektami i trzema <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiektami określonymi dla każdego elementu. Przykład tworzy <xref:System.Windows.Forms.ColumnHeader> również obiekty do wyświetlania elementów podelementowych w widoku szczegółów. Dwa <xref:System.Windows.Forms.ImageList> obiekty są również tworzone w przykładzie kodu, aby zapewnić obrazy <xref:System.Windows.Forms.ListViewItem> dla obiektów. Te <xref:System.Windows.Forms.ImageList> obiekty są dodawane <xref:System.Windows.Forms.ListView.LargeImageList%2A> do właściwości i <xref:System.Windows.Forms.ListView.SmallImageList%2A> . W przykładzie zastosowano następujące właściwości podczas tworzenia <xref:System.Windows.Forms.ListView> formantu.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Ten przykład wymaga, aby dodano kod do <xref:System.Windows.Forms.Form> i wywołać metodę utworzoną w przykładzie z konstruktora lub innej metody w formularzu. Przykład wymaga również, aby obrazy o `MySmallImage1`nazwach `MyLargeImage1` `MySmallImage2`,, `MyLargeImage2` i znajdowały się w katalogu głównym dysku C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Określona wartość nie jest jedną z <see cref="T:System.Windows.Forms.View" /> wartości.</exception>
        <altmember cref="T:System.Windows.Forms.View" />
        <altmember cref="P:System.Windows.Forms.ListView.TileSize" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="VirtualItemsSelectionRangeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler VirtualItemsSelectionRangeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler VirtualItemsSelectionRangeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VirtualItemsSelectionRangeChanged As ListViewVirtualItemsSelectionRangeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ListViewVirtualItemsSelectionRangeChangedEventHandler ^ VirtualItemsSelectionRangeChanged;" />
      <MemberSignature Language="F#" Value="member this.VirtualItemsSelectionRangeChanged : System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler " Usage="member this.VirtualItemsSelectionRangeChanged : System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="T:System.Windows.Forms.ListView" /> jest w trybie wirtualnym, a stan zaznaczenia zakresu elementów został zmieniony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie <xref:System.Windows.Forms.ListView.ItemSelectionChanged> jest w trybie wirtualnym, zdarzenie zostanie wykonane. <xref:System.Windows.Forms.ListView>  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportuje wystąpienie <xref:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged> zdarzenia. Ten raport pomaga dowiedzieć się, kiedy wystąpi zdarzenie i może pomóc w debugowaniu. Aby zgłosić wiele zdarzeń lub zdarzenia, które występują często, należy rozważyć <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> zamianę <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączenie komunikatu do wielowierszowego <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu zawierającego wystąpienie typu <xref:System.Windows.Forms.ListView> o nazwie. `ListView1` Następnie upewnij się, że program obsługi zdarzeń jest skojarzony <xref:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged> ze zdarzeniem.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#482](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#482)]
 [!code-vb[System.Windows.Forms.EventExamples#482](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#482)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.ItemSelectionChanged" />
      </Docs>
    </Member>
    <Member MemberName="VirtualListSize">
      <MemberSignature Language="C#" Value="public int VirtualListSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VirtualListSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.VirtualListSize" />
      <MemberSignature Language="VB.NET" Value="Public Property VirtualListSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int VirtualListSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.VirtualListSize : int with get, set" Usage="System.Windows.Forms.ListView.VirtualListSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę <see cref="T:System.Windows.Forms.ListViewItem" /> obiektów znajdujących się na liście w trybie wirtualnym.</summary>
        <value>Liczba <see cref="T:System.Windows.Forms.ListViewItem" /> obiektów<see cref="T:System.Windows.Forms.ListView" /> w trybie wirtualnym.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pobieranie lub Ustawianie właściwości <xref:System.Windows.Forms.ListView.VirtualListSize%2A> , gdy <xref:System.Windows.Forms.ListView.VirtualMode%2A> ustawienie `false` nie będzie miało wpływu na <xref:System.Windows.Forms.ListView>.  
  
 Jeśli <xref:System.Windows.Forms.ListView.VirtualMode%2A> jest ustawiona na `true`, a <xref:System.Windows.Forms.ListView.VirtualListSize%2A> właściwość jest <xref:System.Windows.Forms.ListView.RetrieveVirtualItem> większa od 0, należy obsłużyć zdarzenie, podając prawidłowe <xref:System.Windows.Forms.ListViewItem>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Windows.Forms.ListView.VirtualListSize" />jest ustawiona na wartość mniejszą niż 0.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.ListView.VirtualMode" />jest ustawiona na <see langword="true" />, <see cref="P:System.Windows.Forms.ListView.VirtualListSize" /> jest większa niż 0 i <see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" /> nie jest obsługiwana.</exception>
        <altmember cref="P:System.Windows.Forms.ListView.VirtualMode" />
      </Docs>
    </Member>
    <Member MemberName="VirtualMode">
      <MemberSignature Language="C#" Value="public bool VirtualMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VirtualMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.VirtualMode" />
      <MemberSignature Language="VB.NET" Value="Public Property VirtualMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool VirtualMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.VirtualMode : bool with get, set" Usage="System.Windows.Forms.ListView.VirtualMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy podano własne operacje zarządzania danymi dla <see cref="T:System.Windows.Forms.ListView" /> kontrolki.</summary>
        <value><see langword="true" />w przypadku <see cref="T:System.Windows.Forms.ListView" /> korzystania z operacji zarządzania danymi, które zapewniasz; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawianie właściwości w celu `true` umieszczania <xref:System.Windows.Forms.ListView> w trybie wirtualnym. <xref:System.Windows.Forms.ListView.VirtualMode%2A> W trybie wirtualnym normalna <xref:System.Windows.Forms.ListView.Items%2A> kolekcja jest nieużywana. Zamiast tego <xref:System.Windows.Forms.ListView> obiekty są tworzone dynamicznie, zgodnie z ich wymaganiami. <xref:System.Windows.Forms.ListViewItem>  
  
 Tryb wirtualny może być przydatny w wielu sytuacjach. Jeśli obiekt musi zostać wypełniony z bardzo dużej kolekcji już znajdującej się w pamięci, <xref:System.Windows.Forms.ListViewItem> utworzenie obiektu dla każdego wpisu może być wasteful. <xref:System.Windows.Forms.ListView> W trybie wirtualnym są tworzone tylko wymagane elementy. W innych przypadkach wartości <xref:System.Windows.Forms.ListViewItem> obiektów mogą wymagać ponownego obliczenia, a wykonanie tej operacji dla całej kolekcji spowoduje nieakceptowalną wydajność. W trybie wirtualnym są obliczane tylko wymagane elementy.  
  
 Aby można było używać trybu wirtualnego, należy obsłużyć <xref:System.Windows.Forms.ListView.RetrieveVirtualItem> zdarzenie, które jest wywoływane za każdym razem <xref:System.Windows.Forms.ListView> , gdy wymaga elementu. Ten program obsługi zdarzeń powinien utworzyć <xref:System.Windows.Forms.ListViewItem> obiekt, który należy do określonego indeksu. Ponadto <xref:System.Windows.Forms.ListView.VirtualListSize%2A> właściwość musi być ustawiona na rozmiar listy wirtualnej.  
  
 <xref:System.Windows.Forms.ListView.SearchForVirtualItem> Obsługa zdarzenia umożliwia wyszukiwanie w trybie wirtualnym. Jeśli to zdarzenie nie jest obsługiwane, <xref:System.Windows.Forms.ListView.FindItemWithText%2A> metody i <xref:System.Windows.Forms.ListView.FindNearestItem%2A> zostaną zwrócone. `null`  
  
 Możesz obsłużyć <xref:System.Windows.Forms.ListView.CacheVirtualItems> zdarzenie, aby zachować <xref:System.Windows.Forms.ListViewItem> pamięć podręczną obiektów. Jeśli Obliczanie lub wyszukiwanie w celu utworzenia <xref:System.Windows.Forms.ListViewItem> obiektu jest kosztowne, utrzymywanie pamięci podręcznej może zwiększyć wydajność.  
  
 <xref:System.Windows.Forms.View.LargeIcon> `true` <xref:System.Windows.Forms.ListView.VirtualMode%2A> Jeśli właściwość jest ustawiona na <xref:System.Windows.Forms.View.Tile>, wartość zostanie automatycznie zmieniona na, gdy jest ustawiona na. <xref:System.Windows.Forms.ListView.View%2A>  
  
 W trybie <xref:System.Windows.Forms.ListView.Items%2A> wirtualnym kolekcja jest wyłączona. Próba uzyskania dostępu do niego skutkuje <xref:System.InvalidOperationException>. Ta sama wartość <xref:System.Windows.Forms.ListView.CheckedItems%2A> dotyczy kolekcji <xref:System.Windows.Forms.ListView.SelectedItems%2A> i kolekcji. Jeśli chcesz pobrać wybrane lub zaznaczone elementy, użyj <xref:System.Windows.Forms.ListView.SelectedIndices%2A> zamiast nich kolekcji i. <xref:System.Windows.Forms.ListView.CheckedIndices%2A>  
  
   
  
## Examples  
 Ten przykład ilustruje prostą <xref:System.Windows.Forms.ListView> , której zawartość to pierwsze 10000 kwadratów. Obsługuje wyszukiwanie i używa pamięci podręcznej w celu zwiększenia wydajności.  
  
 [!code-csharp[System.Windows.Forms.ListView.VirtualMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/cs/VirtualMode.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.VirtualMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/vb/VirtualMode.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.ListView.VirtualMode" />jest ustawiony na <see langword="true" /> i jeden z następujących warunków: 
-   <see cref="P:System.Windows.Forms.ListView.VirtualListSize" />jest większa niż 0 i <see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" /> nie jest obsługiwana.  
  
—lub— 
-   <see cref="P:System.Windows.Forms.ListView.Items" />, <see cref="P:System.Windows.Forms.ListView.CheckedItems" /> lub<see cref="P:System.Windows.Forms.ListView.SelectedItems" /> zawiera elementy.  
  
—lub— 
-Zmiany są wprowadzane do <see cref="P:System.Windows.Forms.ListView.Items" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc :  -&gt; unit" Usage="listView.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">System Windows <see cref="T:System.Windows.Forms.Message" /> do przetworzenia.</param>
        <summary>Zastąpień <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
