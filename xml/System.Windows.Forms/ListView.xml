<Type Name="ListView" FullName="System.Windows.Forms.ListView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="48abdad84545b1f08adb5ce8c31cae031c876452" />
    <Meta Name="ms.sourcegitcommit" Value="058bfa0b75b777d3171411d35da8f11617fc06b0" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="05/04/2018" />
    <Meta Name="ms.locfileid" Value="33659198" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListView : System.Windows.Forms.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListView extends System.Windows.Forms.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListView" />
  <TypeSignature Language="VB.NET" Value="Public Class ListView&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListView : System::Windows::Forms::Control" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedIndexChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Items")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ListViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Forms.Docking(System.Windows.Forms.DockingBehavior.Ask)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje kontrolkę widoku listy systemu Windows, który zawiera kolekcję elementów, które można wyświetlić przy użyciu jednej z czterech różnych widoków.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.Forms.ListView> sterowanie umożliwia wyświetlanie listy elementów z tekst elementu i, opcjonalnie, ikonę, aby zidentyfikować typ elementu. Na przykład lista Eksploratora plików jest podobnych do <xref:System.Windows.Forms.ListView> formantu. Wyświetla listę plików i folderów, które aktualnie wybranego w drzewie. Wyświetla ikonę skojarzonych z nim zidentyfikować typu pliku lub folderu, poszczególnych plików i folderów. <xref:System.Windows.Forms.ListViewItem> Klasa reprezentuje elementu w obrębie <xref:System.Windows.Forms.ListView> formantu. Elementy, które są wyświetlane na liście mogą być wyświetlane w jednej z pięciu różnych widoków. Elementy mogą być wyświetlane jako duże ikony, małe ikony lub małe ikony w pionie listy. Elementy można również mają elementy podrzędne, które zawierają informacje, który jest powiązany z elementem nadrzędnym. Widok szczegółów służy do wyświetlenia w siatce z nagłówków kolumn, które identyfikują informacje są wyświetlane w podelementów elementu i jego elementy podrzędne. Widoku tile, która ma ograniczoną dostępność, zgodnie z poniższym opisem, służy do wyświetlania elementu i jego elementy podrzędne jako Kafelek zawierający dużych ikon obok informacji tekstowych. <xref:System.Windows.Forms.ListView> obsługuje jednego lub wielu zaznaczenia. Wiele funkcji wyboru pozwala użytkownikowi wybierz z listy elementów w sposób podobny do <xref:System.Windows.Forms.ListBox> formantu. Ponadto użytkownik może uaktywnić wybrane elementy do wykonania zadania. Na przykład można użyć <xref:System.Windows.Forms.ListView> formantu, aby wyświetlić listę plików, które aplikacji można otwierać i korzystać z. Użytkownik może wybrać pliki, aby otworzyć, a następnie kliknij dwukrotnie je, aby aktywować elementów i Otwórz plik w aplikacji. <xref:System.Windows.Forms.ListView> Może być także wyświetlane pola wyboru przy użyciu <xref:System.Windows.Forms.ListView.CheckBoxes%2A> właściwości, aby zezwolić użytkownikowi na Sprawdź elementy, które mają być wykonane działania. Można użyć <xref:System.Windows.Forms.ListView> formantu w różny sposób. Formant może służyć do wyświetlania informacji z aplikacji, bazę danych lub plik tekstowy. <xref:System.Windows.Forms.ListView> Można również uzyskać informacje od użytkownika, takie jak wybranie zestaw plików do przetworzenia.  
  
 <xref:System.Windows.Forms.ListView> zawiera wiele właściwości, które zapewniają elastyczność w wygląd i zachowanie. <xref:System.Windows.Forms.ListView.View%2A> Właściwość pozwala zmienić sposób, w którym mają być wyświetlane. <xref:System.Windows.Forms.ListView.LargeImageList%2A>, <xref:System.Windows.Forms.ListView.SmallImageList%2A>, I <xref:System.Windows.Forms.ListView.StateImageList%2A> właściwości umożliwiają określenie <xref:System.Windows.Forms.ImageList> obiektów zawierających obrazy wyświetlane dla elementów oraz, w przypadku <xref:System.Windows.Forms.ListView.StateImageList%2A>, pole wyboru, które są wyświetlane, gdy <xref:System.Windows.Forms.ListView.CheckBoxes%2A> Właściwość jest ustawiona na `true`. Aby określić elementy, które są zaznaczone, można użyć <xref:System.Windows.Forms.ListView.CheckedItems%2A> właściwości, aby uzyskać dostęp do <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection> kolekcji. <xref:System.Windows.Forms.ListView.Columns%2A> Zezwala na dostęp do właściwości <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>, który przechowuje nagłówki kolumn, które są wyświetlane, gdy <xref:System.Windows.Forms.ListView.View%2A> ma ustawioną właściwość formantu <xref:System.Windows.Forms.View.Details>. Elementy są dodawane i usuwane z <xref:System.Windows.Forms.ListView> za pośrednictwem <xref:System.Windows.Forms.ListView.Items%2A> właściwości. <xref:System.Windows.Forms.ListView.Items%2A> Właściwości umożliwia dostęp do <xref:System.Windows.Forms.ListView.ListViewItemCollection> formantu, który udostępnia metody do manipulowania elementów w formancie. Jeśli chcesz zezwolić użytkownikowi na edycję tekstu elementu, możesz użyć <xref:System.Windows.Forms.ListView.LabelEdit%2A> właściwości. Jeśli formant zawiera dużą liczbę elementów, często łatwiej dla użytkownika wyświetlać je w posortowaną listę. Można użyć <xref:System.Windows.Forms.ListView.Sorting%2A> właściwość, aby posortować alfabetycznie. Można również dostosować wygląd <xref:System.Windows.Forms.ListView> formantu. Aby to zrobić, ustaw <xref:System.Windows.Forms.ListView.OwnerDraw%2A> właściwości `true` i obsługiwać co najmniej jeden z następujących zdarzeń: <xref:System.Windows.Forms.ListView.DrawItem>, <xref:System.Windows.Forms.ListView.DrawSubItem>, <xref:System.Windows.Forms.ListView.DrawColumnHeader>.  
  
 Wiele właściwości <xref:System.Windows.Forms.ListView> formantu są używane podczas <xref:System.Windows.Forms.ListView.View%2A> ma ustawioną właściwość formantu <xref:System.Windows.Forms.View.Details>. <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A> Właściwości pozwala użytkownikowi Twojego <xref:System.Windows.Forms.ListView> formantu, aby ponownie skonfigurować kolejność kolumn w czasie wykonywania. <xref:System.Windows.Forms.ListView.FullRowSelect%2A> Właściwość umożliwia elementu i jego elementy podrzędne, należy wybrać zamiast tylko element. Aby wyświetlić linie siatki w widoku Szczegóły, aby określić granice elementów i podelementów w <xref:System.Windows.Forms.ListView>, można użyć <xref:System.Windows.Forms.ListView.GridLines%2A> właściwości. <xref:System.Windows.Forms.ListView.HeaderStyle%2A> Właściwość umożliwia określenie typu nagłówki kolumn do wyświetlenia.  
  
 A <xref:System.Windows.Forms.ListView> formant może działać w trybie wirtualnym, gdzie <xref:System.Windows.Forms.ListViewItem> obiekty są generowane dynamicznie nie będą przechowywane w <xref:System.Windows.Forms.ListView.Items%2A> kolekcji. Może to być przydatne w przypadku postępowania z bardzo dużych list lub listy, których zawartość częstym zmianom. Aby włączyć tryb wirtualnej, należy ustawić <xref:System.Windows.Forms.ListView.VirtualMode%2A> właściwości `true` i obsługiwać <xref:System.Windows.Forms.ListView.RetrieveVirtualItem>, <xref:System.Windows.Forms.ListView.CacheVirtualItems>, i <xref:System.Windows.Forms.ListView.SearchForVirtualItem> zdarzenia.  
  
 Oprócz wiele właściwości, które są dostępne dla <xref:System.Windows.Forms.ListView> kontrolować, metod i zdarzeń, które mogą używać aplikacja do zapewniają dodatkowe możliwości <xref:System.Windows.Forms.ListView>. <xref:System.Windows.Forms.ListView.BeginUpdate%2A> i <xref:System.Windows.Forms.ListView.EndUpdate%2A> metody umożliwiają poprawę wydajności podczas dodawania wielu elementów do <xref:System.Windows.Forms.ListView> zapobiegając formantu odświeżenie zawsze element został dodany. Jeśli Twoje <xref:System.Windows.Forms.ListView> kontroli jest wyświetlanie elementów i podelementów, może zajść potrzeba zapewniać funkcje po kliknięciu podelementów. Aby określić elementu kliknięciu którego podelementu, można użyć <xref:System.Windows.Forms.ListView.GetItemAt%2A> metody. Podczas przeprowadzania weryfikacji elementów po ma je edytować użytkownika, można wyświetlić określonego elementu użytkownikowi, aby zmienić. <xref:System.Windows.Forms.ListView.EnsureVisible%2A> Można wywołać metody w celu zapewnienia konkretny element w widocznym obszarze formantu.  
  
 Jeśli <xref:System.Windows.Forms.ListView.LabelEdit%2A> ustawioną właściwość `true`, można wykonać zadania, takie jak sprawdzanie poprawności tekst edytowany przed i po zmiany przez utworzenie programu obsługi zdarzeń dla tekstu <xref:System.Windows.Forms.ListView.BeforeLabelEdit> i <xref:System.Windows.Forms.ListView.AfterLabelEdit> zdarzenia. Do wykonania zadania, takie jak otwieranie pliku lub wyświetlanie okna dialogowego, aby edytować element wyświetlany w <xref:System.Windows.Forms.ListView>, można utworzyć programu obsługi zdarzeń dla <xref:System.Windows.Forms.ListView.ItemActivate> zdarzeń. Jeśli zezwolisz na użytkownika posortować elementy <xref:System.Windows.Forms.ListView> po kliknięciu nagłówka kolumny można utworzyć programu obsługi zdarzeń dla <xref:System.Windows.Forms.ListView.ColumnClick> zdarzeń, aby wykonać sortowanie. Gdy <xref:System.Windows.Forms.ListView.CheckBoxes%2A> właściwość jest ustawiona na `true`, można określić, gdy nastąpiła zmiana w stan zaznaczenia elementu Obsługa <xref:System.Windows.Forms.ListView.ItemCheck> zdarzeń.  
  
 Można również ustawić obraz tła dla <xref:System.Windows.Forms.ListView> z <xref:System.Windows.Forms.Control.BackgroundImage%2A> właściwości. Aplikacja musi mieć <xref:System.STAThreadAttribute> na jego `Main` metodę, aby poprawnie wyświetlić obraz tła dla <xref:System.Windows.Forms.ListView> formantu. Ponadto jeśli <xref:System.Windows.Forms.ListView> formantu o obraz tła jest hostowany w programie Internet Explorer, określ comctl32.dll w wersji 6.0 jako zestawu zależnego w pliku manifestu aplikacji upewnij się, obraz tła jest wyświetlane właściwości.  
  
> [!NOTE]
>  Ustawienie <xref:System.Windows.Forms.Control.Cursor%2A> właściwość <xref:System.Windows.Forms.ListView> formant nie ma wpływu na wygląd kursora w [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] w wersji 1.1 i wcześniejszych.  
  
 Windows XP i Windows Server 2003 podać trzy funkcje, które zwiększają <xref:System.Windows.Forms.ListView> kontroli, gdy aplikacja wywołuje <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> — metoda: kafelku widoku, grupowanie i znacznika wstawiania.  
  
 Widoku tile umożliwia zrównoważenie graficznego i tekstową informacji przez wyświetlanie elementów i podelementów tekstu obok dużych ikon. Ustaw <xref:System.Windows.Forms.ListView.View%2A> właściwości <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType> Aby włączyć to zachowanie.  
  
 Funkcja Grupowanie pozwala wizualnie grupowania elementów w kategorii powiązanych. Użyj <xref:System.Windows.Forms.ListView.Groups%2A> właściwości, aby dodać <xref:System.Windows.Forms.ListViewGroup> obiekty do <xref:System.Windows.Forms.ListView> kontroli, gdy chcesz włączyć tę funkcję. Aby tymczasowo wyłączyć tę funkcję, należy ustawić <xref:System.Windows.Forms.ListView.ShowGroups%2A> właściwości `false`.  
  
 Funkcja znacznika wstawiania umożliwia Podaj Przesuwanie elementu przeciągania i upuszczania za pomocą wizualną opinię, aby wskazać lokalizacji. Użyj <xref:System.Windows.Forms.ListViewInsertionMark> obiektu pobierane w drodze <xref:System.Windows.Forms.ListView.InsertionMark%2A> właściwość, aby wyświetlić znacznika wstawiania.  
  
 Te funkcje są dostępne tylko w systemie Windows XP i Windows Server 2003. W starszych systemach operacyjnych kodu, które odnoszą się do tych funkcji nie obowiązuje, widoku tile pojawia się jako widok dużych ikon i znacznika wstawiania i grup nie są wyświetlane. W niektórych przypadkach może chcesz dołączyć kod, który określa, czy te funkcje są dostępne i zapewniać funkcje alternatywnego, jeśli są one dostępne. Funkcje te są dostarczane przez tę samą bibliotekę, która udostępnia funkcję kompozycji systemu operacyjnego. Aby sprawdzić dostępność tej biblioteki, należy wywołać <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> przeciążenie metody i przekaż <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> wartość.  
  
 W poniższej tabeli przedstawiono niektóre <xref:System.Windows.Forms.ListView> elementów członkowskich i widoki są ważne w.  
  
|Element członkowski ListView|Widok|  
|---------------------|----------|  
|<xref:System.Windows.Forms.ListView.Alignment%2A> Właściwość|<xref:System.Windows.Forms.View.SmallIcon> lub <xref:System.Windows.Forms.View.LargeIcon>|  
|<xref:System.Windows.Forms.ListView.AutoArrange%2A> Właściwość|<xref:System.Windows.Forms.View.SmallIcon> lub <xref:System.Windows.Forms.View.LargeIcon>|  
|<xref:System.Windows.Forms.ListView.AutoResizeColumn%2A> — Metoda|<xref:System.Windows.Forms.View.Details>|  
|<xref:System.Windows.Forms.ListView.Columns%2A> Właściwość|<xref:System.Windows.Forms.View.Details> lub <xref:System.Windows.Forms.View.Tile>|  
|<xref:System.Windows.Forms.ListView.DrawSubItem> Zdarzenia|<xref:System.Windows.Forms.View.Details>|  
|<xref:System.Windows.Forms.ListView.FindItemWithText%2A> — Metoda|<xref:System.Windows.Forms.View.Details>, <xref:System.Windows.Forms.View.List>, lub <xref:System.Windows.Forms.View.Tile>|  
|<xref:System.Windows.Forms.ListView.FindNearestItem%2A> — Metoda|<xref:System.Windows.Forms.View.SmallIcon> lub <xref:System.Windows.Forms.View.LargeIcon>|  
|<xref:System.Windows.Forms.ListView.GetItemAt%2A> — Metoda|<xref:System.Windows.Forms.View.Details> lub <xref:System.Windows.Forms.View.Tile>|  
|<xref:System.Windows.Forms.ListView.Groups%2A> Właściwość|Wszystkie widoki, z wyjątkiem <xref:System.Windows.Forms.View.List>|  
|<xref:System.Windows.Forms.ListView.HeaderStyle%2A> Właściwość|<xref:System.Windows.Forms.View.Details>|  
|<xref:System.Windows.Forms.ListView.InsertionMark%2A> Właściwość|<xref:System.Windows.Forms.View.LargeIcon>, <xref:System.Windows.Forms.View.SmallIcon>, lub <xref:System.Windows.Forms.View.Tile>|  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.ListView> formantu, z których trzy <xref:System.Windows.Forms.ListViewItem> obiekty określone i trzy <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiekty określone dla każdego elementu. W przykładzie jest tworzony także <xref:System.Windows.Forms.ColumnHeader> obiektów, aby wyświetlić elementy podrzędne w widoku details. Dwa <xref:System.Windows.Forms.ImageList> obiekty również są tworzone w przykładzie kodu, aby zapewnić obrazy dla <xref:System.Windows.Forms.ListViewItem> obiektów. Te <xref:System.Windows.Forms.ImageList> obiekty są dodawane do <xref:System.Windows.Forms.ListView.LargeImageList%2A> i <xref:System.Windows.Forms.ListView.SmallImageList%2A> właściwości. W przykładzie użyto następujących właściwości w tworzeniu <xref:System.Windows.Forms.ListView> sterowania:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 W tym przykładzie wymaga dodano kod <xref:System.Windows.Forms.Form> i wywołaj metodę utworzony w przykładzie z konstruktora lub innej metody w formularzu. Przykład wymaga również, że obrazy o nazwie `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, i `MyLargeImage2` znajdują się w katalogu głównym dysku C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListViewItem" />
    <altmember cref="T:System.Windows.Forms.ImageList" />
    <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ListView" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.ListView> formantu, z których trzy <xref:System.Windows.Forms.ListViewItem> obiekty określone i trzy <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiekty określone dla każdego elementu. W przykładzie jest tworzony także <xref:System.Windows.Forms.ColumnHeader> obiektów, aby wyświetlić elementy podrzędne w widoku details. Dwa <xref:System.Windows.Forms.ImageList> obiekty również są tworzone w przykładzie kodu, aby zapewnić obrazy dla <xref:System.Windows.Forms.ListViewItem> obiektów. Te <xref:System.Windows.Forms.ImageList> obiekty są dodawane do <xref:System.Windows.Forms.ListView.LargeImageList%2A> i <xref:System.Windows.Forms.ListView.SmallImageList%2A> właściwości. W przykładzie użyto następujących właściwości w tworzeniu <xref:System.Windows.Forms.ListView> sterowania:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 W tym przykładzie wymaga dodano kod <xref:System.Windows.Forms.Form> i wywołaj metodę utworzony w przykładzie z konstruktora lub innej metody w formularzu. Przykład wymaga również, że obrazy o nazwie `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, i `MyLargeImage2` znajdują się w katalogu głównym dysku C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activation">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ItemActivation Activation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ItemActivation Activation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Activation" />
      <MemberSignature Language="VB.NET" Value="Public Property Activation As ItemActivation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ItemActivation Activation { System::Windows::Forms::ItemActivation get(); void set(System::Windows::Forms::ItemActivation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemActivation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ akcji, które użytkownik musi wykonać, aby element.</summary>
        <value>Jeden z <see cref="T:System.Windows.Forms.ItemActivation" /> wartości. Wartość domyślna to <see cref="F:System.Windows.Forms.ItemActivation.Standard" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.Activation%2A> Właściwość umożliwia określenie, jak użytkownik uaktywni element <xref:System.Windows.Forms.ListView> formantu. Aktywowanie elementu <xref:System.Windows.Forms.ListView> różni się od tylko zaznaczenie elementu. Gdy element zostanie aktywowany, akcja jest zwykle wykonywany w obsłudze zdarzeń dla <xref:System.Windows.Forms.ListView.ItemActivate> zdarzeń. Na przykład gdy element jest aktywowany może otworzyć plik lub wyświetlić okno dialogowe, które umożliwia można edytować elementu. Zazwyczaj elementu kliknięciu przez użytkownika w celu ich aktywowania. Jeśli <xref:System.Windows.Forms.ListView.Activation%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.ItemActivation.OneClick>, klikając elementu jeden raz aktywuje go. Ustawienie <xref:System.Windows.Forms.ListView.Activation%2A> właściwości <xref:System.Windows.Forms.ItemActivation.TwoClick> różni się od standardowego kliknij dwukrotnie, ponieważ dwa kliknięcia może mieć żadnych czas trwania między nimi.  
  
> [!NOTE]
>  Jeśli <xref:System.Windows.Forms.ListView.Activation%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.ItemActivation.OneClick> lub <xref:System.Windows.Forms.ItemActivation.TwoClick>, edytowanie etykiet, nie będą dozwolone niezależnie od wartości <xref:System.Windows.Forms.ListView.LabelEdit%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Określona wartość nie jest jednym z <see cref="T:System.Windows.Forms.ItemActivation" /> elementów członkowskich.</exception>
        <altmember cref="T:System.Windows.Forms.ItemActivation" />
        <altmember cref="E:System.Windows.Forms.ListView.ItemActivate" />
      </Docs>
    </Member>
    <Member MemberName="AfterLabelEdit">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.LabelEditEventHandler AfterLabelEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.LabelEditEventHandler AfterLabelEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.AfterLabelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AfterLabelEdit As LabelEditEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::LabelEditEventHandler ^ AfterLabelEdit;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LabelEditEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy etykiety elementu jest edytowane przez użytkownika.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.AfterLabelEdit> Zdarzenie wystąpi, gdy użytkownik zakończy modyfikowanie tekstu elementu. Nowe parametry, że użytkownik wpisze dla elementu jest przekazywana do zdarzenia, a program obsługi zdarzeń można odrzucić zmiany. Jeśli program obsługi zdarzeń odrzuca zmiany, tekst przywraca tekst jak przed rozpoczęciem użytkownika edycji elementu.  
  
> [!NOTE]
>  Ponieważ <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType> zdarzeń odbywa się przed zatwierdzeniem, wywoływania edycję etykiety <xref:System.Windows.Forms.ListView.Sort%2A?displayProperty=nameWithType> sortowania elementu przy użyciu wartości oryginalnej metody w procedurze obsługi dla tego zdarzenia.  
  
 Aby <xref:System.Windows.Forms.ListView.AfterLabelEdit> się zdarzenia, <xref:System.Windows.Forms.ListView.LabelEdit%2A> właściwość <xref:System.Windows.Forms.ListView> formantu musi być ustawiona na `true`.  
  
 Można utworzyć programu obsługi zdarzeń dla <xref:System.Windows.Forms.ListView.BeforeLabelEdit> zdarzeń do wykonywania zadań, zanim użytkownik edytuje tekst elementu.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.ListView.AfterLabelEdit> zdarzenie, aby ograniczyć nowo edytowanych etykiety znaków alfabetu. W przykładzie użyto <xref:System.Text.ASCIIEncoding> klasę, aby otrzymać kod znaku ASCII każdego znaku nowej etykiety. Jeśli znak przypada między kodów ASCII, które reprezentują liczb, nowej etykiety nie można zastosować do elementu. W tym przykładzie wymaga się, że utworzono <xref:System.Windows.Forms.ListView> kontrolki w formularzu i elementy dodane do niego. Przykład wymaga również, że nawiązano połączenie <xref:System.Windows.Forms.ListView.AfterLabelEdit> zdarzenia w celu obsługi zdarzeń zdefiniowanych w przykładowym kodzie. Aby można było używać <xref:System.Text.ASCIIEncoding> klasy, musi zawierać plik <xref:System.Text> przestrzeni nazw.  
  
 [!code-cpp[ListView.AfterLabelEdit#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.AfterLabelEdit/CPP/form1.cpp#1)]
 [!code-csharp[ListView.AfterLabelEdit#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.AfterLabelEdit/CS/form1.cs#1)]
 [!code-vb[ListView.AfterLabelEdit#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.AfterLabelEdit/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)" />
        <altmember cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
        <altmember cref="T:System.Windows.Forms.LabelEditEventHandler" />
        <altmember cref="P:System.Windows.Forms.ListView.LabelEdit" />
      </Docs>
    </Member>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewAlignment Alignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ListViewAlignment Alignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Alignment" />
      <MemberSignature Language="VB.NET" Value="Public Property Alignment As ListViewAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewAlignment Alignment { System::Windows::Forms::ListViewAlignment get(); void set(System::Windows::Forms::ListViewAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia wyrównanie elementów w formancie.</summary>
        <value>Jeden z <see cref="T:System.Windows.Forms.ListViewAlignment" /> wartości. Wartość domyślna to <see cref="F:System.Windows.Forms.ListViewAlignment.Top" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.Alignment%2A> Właściwość ma wpływ tylko na wyrównanie podczas <xref:System.Windows.Forms.ListView.View%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.View.LargeIcon> lub <xref:System.Windows.Forms.View.SmallIcon>.  
  
> [!NOTE]
>  Ta właściwość nie ma wpływu z <xref:System.Windows.Forms.ListView.View%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.View.List>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Określona wartość nie jest jednym z <see cref="T:System.Windows.Forms.ListViewAlignment" /> wartości.</exception>
        <altmember cref="T:System.Windows.Forms.ListViewAlignment" />
      </Docs>
    </Member>
    <Member MemberName="AllowColumnReorder">
      <MemberSignature Language="C#" Value="public bool AllowColumnReorder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowColumnReorder" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.AllowColumnReorder" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowColumnReorder As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowColumnReorder { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy użytkownik jest przeciągnięcie nagłówków kolumn, aby zmienić kolejność kolumn w formancie.</summary>
        <value>
          <see langword="true" /> Jeśli zmiany układu kolumn przeciągania i upuszczania jest dozwolony; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie wartości <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A> właściwości nie obowiązuje, chyba że <xref:System.Windows.Forms.ListView.View%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.View.Details>. Ta właściwość służy do użytkownicy mogą zmienić położenie kolumn w formancie w czasie wykonywania. Gdy <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A> właściwość jest ustawiona na `true`, użytkowników można umieścić kolumn w formancie do wyświetlania elementu i jego elementy podrzędne w sposób spełniający wymagania ich w aplikacji.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.ListView> formantu, z których trzy <xref:System.Windows.Forms.ListViewItem> obiekty określone i trzy <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiekty określone dla każdego elementu. W przykładzie jest tworzony także <xref:System.Windows.Forms.ColumnHeader> obiektów, aby wyświetlić elementy podrzędne w widoku details. Dwa <xref:System.Windows.Forms.ImageList> obiekty również są tworzone w przykładzie kodu, aby zapewnić obrazy dla <xref:System.Windows.Forms.ListViewItem> obiektów. Te <xref:System.Windows.Forms.ImageList> obiekty są dodawane do <xref:System.Windows.Forms.ListView.LargeImageList%2A> i <xref:System.Windows.Forms.ListView.SmallImageList%2A> właściwości. W przykładzie użyto następujących właściwości w tworzeniu <xref:System.Windows.Forms.ListView> sterowania:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 W tym przykładzie wymaga dodano kod <xref:System.Windows.Forms.Form> i wywołaj metodę utworzony w przykładzie z konstruktora lub innej metody w formularzu. Przykład wymaga również, że obrazy o nazwie `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, i `MyLargeImage2` znajdują się w katalogu głównym dysku C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ArrangeIcons">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rozmieszcza elementy w formancie, gdy są one wyświetlane jako ikony.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ArrangeIcons">
      <MemberSignature Language="C#" Value="public void ArrangeIcons ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ArrangeIcons() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ArrangeIcons" />
      <MemberSignature Language="VB.NET" Value="Public Sub ArrangeIcons ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ArrangeIcons();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rozmieszcza elementy w formancie, gdy są one wyświetlane jako ikony na podstawie wartości z <see cref="P:System.Windows.Forms.ListView.Alignment" /> właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> Metoda przydaje się tylko gdy <xref:System.Windows.Forms.ListView.View%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.View.LargeIcon> lub <xref:System.Windows.Forms.View.SmallIcon>. Wywołanie tej wersji <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> metody Rozmieszcza elementy, na podstawie wartości z <xref:System.Windows.Forms.ListView.Alignment%2A> właściwości. Do elementów wyrównać je na podstawie wartość, która różni się od <xref:System.Windows.Forms.ListView.Alignment%2A> właściwości, przy użyciu innych wersji <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.Alignment" />
      </Docs>
    </Member>
    <Member MemberName="ArrangeIcons">
      <MemberSignature Language="C#" Value="public void ArrangeIcons (System.Windows.Forms.ListViewAlignment value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ArrangeIcons(valuetype System.Windows.Forms.ListViewAlignment value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ArrangeIcons(System.Windows.Forms.ListViewAlignment)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ArrangeIcons (value As ListViewAlignment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ArrangeIcons(System::Windows::Forms::ListViewAlignment value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListViewAlignment" />
      </Parameters>
      <Docs>
        <param name="value">Jeden z <see cref="T:System.Windows.Forms.ListViewAlignment" /> wartości.</param>
        <summary>Rozmieszcza elementy w formancie, gdy są one wyświetlane jako ikony przy użyciu ustawienia określone wyrównanie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> Metoda przydaje się tylko gdy <xref:System.Windows.Forms.ListView.View%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.View.LargeIcon> lub <xref:System.Windows.Forms.View.SmallIcon>. Ta wersja <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> metody Rozmieszcza ikony w <xref:System.Windows.Forms.ListView> na podstawie <xref:System.Windows.Forms.ListViewAlignment> wartości określonej w `value` parametru. Wywołanie tej metody nie zmienia wartości <xref:System.Windows.Forms.ListView.Alignment%2A> właściwości formantu. Ta metoda jest używana do Rozmieszcza ikony w formancie przy użyciu innej wartości niż <xref:System.Windows.Forms.ListView.Alignment%2A> właściwości. Do elementów wyrównać je na podstawie wartości <xref:System.Windows.Forms.ListView.Alignment%2A> właściwości, przy użyciu innych wersji <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość określona w <paramref name="value" /> parametr nie jest elementem członkowskim <see cref="T:System.Windows.Forms.ListViewAlignment" /> wyliczenia.</exception>
        <altmember cref="T:System.Windows.Forms.ListViewAlignment" />
        <altmember cref="P:System.Windows.Forms.ListView.Alignment" />
      </Docs>
    </Member>
    <Member MemberName="AutoArrange">
      <MemberSignature Language="C#" Value="public bool AutoArrange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoArrange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.AutoArrange" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoArrange As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoArrange { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia, czy ikony automatycznie są rozmieszczane.</summary>
        <value>
          <see langword="true" /> Jeśli ikony są aktualizowane automatycznie uszeregowanych i przypięty do siatki; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.AutoArrange%2A> Właściwość tylko Rozmieszcza elementy w <xref:System.Windows.Forms.ListView> decyduje o <xref:System.Windows.Forms.ListView.View%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.View.LargeIcon> lub <xref:System.Windows.Forms.View.SmallIcon>. Aby zmienić wyrównania elementów w <xref:System.Windows.Forms.ListView> kontrolować, użyj <xref:System.Windows.Forms.ListView.Alignment%2A> właściwości. Można użyć <xref:System.Windows.Forms.ListView.AutoArrange%2A> aby upewnić się, że wszystkie elementy w Twojej <xref:System.Windows.Forms.ListView> formantu są automatycznie ustawiane, aby uniknąć nakładania się w czasie wykonywania.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.Alignment" />
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumn">
      <MemberSignature Language="C#" Value="public void AutoResizeColumn (int columnIndex, System.Windows.Forms.ColumnHeaderAutoResizeStyle headerAutoResize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumn(int32 columnIndex, valuetype System.Windows.Forms.ColumnHeaderAutoResizeStyle headerAutoResize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.AutoResizeColumn(System.Int32,System.Windows.Forms.ColumnHeaderAutoResizeStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumn (columnIndex As Integer, headerAutoResize As ColumnHeaderAutoResizeStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumn(int columnIndex, System::Windows::Forms::ColumnHeaderAutoResizeStyle headerAutoResize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="headerAutoResize" Type="System.Windows.Forms.ColumnHeaderAutoResizeStyle" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Liczony od zera indeks kolumny, aby zmienić rozmiar.</param>
        <param name="headerAutoResize">Jeden z <see cref="T:System.Windows.Forms.ColumnHeaderAutoResizeStyle" /> wartości.</param>
        <summary>Zmienia rozmiar szerokość podanej kolumny określone przez styl zmiany rozmiaru.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie tej metody ma zastosowanie tylko raz <xref:System.Windows.Forms.ListView> i zawierający <xref:System.Windows.Forms.Form> zostały utworzone oraz <xref:System.Windows.Forms.ListView> nagłówki kolumn i kolumny są wypełniane przy użyciu elementów. Jeśli nowe elementy są dodawane do <xref:System.Windows.Forms.ListView>, kolumny nie zmieni się rozmiar, chyba że <xref:System.Windows.Forms.ListView.AutoResizeColumn%2A> nie zostanie ponownie wywołany.  
  
   
  
## Examples  
 W poniższym przykładzie inicjowane <xref:System.Windows.Forms.ListView> w widoku szczegółów i automatycznie zmienia rozmiar kolumn za pomocą <xref:System.Windows.Forms.ListView.AutoResizeColumn%2A> metody. Aby uruchomić ten przykład, wklej ten kod w formularzu systemu Windows i wywołanie `InitializeResizingListView` metody z Konstruktor elementu form lub <xref:System.Windows.Forms.Form.Load> obsługi zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="columnIndex" /> jest większa niż 0 gdy <see cref="P:System.Windows.Forms.ListView.Columns" /> jest <see langword="null" />  
  
 —lub—  
  
 <paramref name="columnIndex" /> jest mniejsza niż 0 lub większa niż liczba zestaw kolumn.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="headerAutoResize" /> nie jest elementem członkowskim <see cref="T:System.Windows.Forms.ColumnHeaderAutoResizeStyle" /> wyliczenia.</exception>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumns">
      <MemberSignature Language="C#" Value="public void AutoResizeColumns (System.Windows.Forms.ColumnHeaderAutoResizeStyle headerAutoResize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumns(valuetype System.Windows.Forms.ColumnHeaderAutoResizeStyle headerAutoResize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.AutoResizeColumns(System.Windows.Forms.ColumnHeaderAutoResizeStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumns (headerAutoResize As ColumnHeaderAutoResizeStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumns(System::Windows::Forms::ColumnHeaderAutoResizeStyle headerAutoResize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="headerAutoResize" Type="System.Windows.Forms.ColumnHeaderAutoResizeStyle" />
      </Parameters>
      <Docs>
        <param name="headerAutoResize">Jeden z <see cref="T:System.Windows.Forms.ColumnHeaderAutoResizeStyle" /> wartości.</param>
        <summary>Zmienia rozmiar szerokość kolumny określone przez styl zmiany rozmiaru.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie tej metody ma zastosowanie tylko raz <xref:System.Windows.Forms.ListView> i zawierający <xref:System.Windows.Forms.Form> zostały utworzone oraz <xref:System.Windows.Forms.ListView> nagłówki kolumn i kolumny są wypełniane przy użyciu elementów. Jeśli nowe elementy są dodawane do <xref:System.Windows.Forms.ListView>, kolumny nie zmieni się rozmiar, chyba że <xref:System.Windows.Forms.ListView.AutoResizeColumns%2A> nie zostanie ponownie wywołany.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje inicjowanie <xref:System.Windows.Forms.ListView> w widoku szczegółów i automatyczna zmiana rozmiaru kolumn za pomocą <xref:System.Windows.Forms.ListView.AutoResizeColumns%2A> metody. Aby uruchomić ten przykład, wklej ten kod w formularzu systemu Windows i wywołanie `InitializeResizingListView2` metody z Konstruktor elementu form lub <xref:System.Windows.Forms.Form.Load> obsługi zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#9)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Windows.Forms.ListView.AutoResizeColumn(System.Int32,System.Windows.Forms.ColumnHeaderAutoResizeStyle)" /> wywołuje o wartości innej niż <see cref="F:System.Windows.Forms.ColumnHeaderAutoResizeStyle.None" /> podczas <see cref="P:System.Windows.Forms.ListView.View" /> nie jest ustawiony na <see cref="F:System.Windows.Forms.View.Details" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor tła.</summary>
        <value>
          <see cref="T:System.Drawing.Color" /> Tła.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Forms.ImageLayout" /> wartość.</summary>
        <value>Jeden z <see cref="T:System.Windows.Forms.ImageLayout" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość nie ma wpływu na układ obrazu tła <xref:System.Windows.Forms.ListView> kontrolki, w związku z tym nie pokazano w Projektancie lub przez funkcję IntelliSense.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Określona wartość nie jest jednym z <see cref="T:System.Windows.Forms.ImageLayout" /> wartości.</exception>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="P:System.Windows.Forms.ListView.BackgroundImageLayout" /> zmiany właściwości.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageTiled">
      <MemberSignature Language="C#" Value="public bool BackgroundImageTiled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BackgroundImageTiled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BackgroundImageTiled" />
      <MemberSignature Language="VB.NET" Value="Public Property BackgroundImageTiled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BackgroundImageTiled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą czy obraz tła <see cref="T:System.Windows.Forms.ListView" /> powinny być rozmieszczane.</summary>
        <value>
          <see langword="true" /> Jeśli obraz tła <see cref="T:System.Windows.Forms.ListView" /> sąsiadującym; w przeciwnym razie wartość powinna być <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.BackgroundImageTiled%2A> Zwraca `false` Jeśli obraz nie jest ustawiona.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeLabelEdit">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.LabelEditEventHandler BeforeLabelEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.LabelEditEventHandler BeforeLabelEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeforeLabelEdit As LabelEditEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::LabelEditEventHandler ^ BeforeLabelEdit;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LabelEditEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy użytkownik rozpoczyna edycję etykiety elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.BeforeLabelEdit> Zdarzenie wystąpi, gdy użytkownik uruchamia modyfikowanie tekstu elementu. Jeśli program obsługi zdarzeń anuluje tego zdarzenia, użytkownik nie może edytować tekst. To zdarzenie służy do uniemożliwia użytkownikowi edytowanie elementów określonych w <xref:System.Windows.Forms.ListView> formantu. Jeśli <xref:System.Windows.Forms.ListView.LabelEdit%2A> właściwość <xref:System.Windows.Forms.ListView> kontrola jest ustawiona na `false`, <xref:System.Windows.Forms.ListView.BeforeLabelEdit> nie zdarzenia; wszystkie próby użytkownika Edytuj etykiety elementów są automatycznie odrzucane.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje Obsługa <xref:System.Windows.Forms.ListView.BeforeLabelEdit> zdarzeń i przy użyciu <xref:System.Windows.Forms.LabelEditEventArgs.Item%2A?displayProperty=nameWithType> i <xref:System.Windows.Forms.LabelEditEventArgs.CancelEdit%2A?displayProperty=nameWithType> właściwości. Aby uruchomić przykład, wklej następujący kod do formularza, który zawiera <xref:System.Windows.Forms.ListView> formantu o nazwie `ListView1` i wypełniane przy użyciu co najmniej trzy elementy. Upewnij się, czy program obsługi zdarzeń w tym przykładzie jest skojarzona z jego zdarzenia.  
  
 [!code-cpp[System.Windows.Forms.ListView3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView3/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)" />
        <altmember cref="E:System.Windows.Forms.ListView.AfterLabelEdit" />
        <altmember cref="T:System.Windows.Forms.LabelEditEventHandler" />
        <altmember cref="P:System.Windows.Forms.ListView.LabelEdit" />
      </Docs>
    </Member>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="public void BeginUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.BeginUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginUpdate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Uniemożliwia jego rysunku do <see cref="M:System.Windows.Forms.ListView.EndUpdate" /> metoda jest wywoływana.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Najlepszym sposobem dodawania wielu elementów do <xref:System.Windows.Forms.ListView> jest użycie <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> metody <xref:System.Windows.Forms.ListView.ListViewItemCollection> (dostępnej za pośrednictwem <xref:System.Windows.Forms.ListView.Items%2A> właściwość <xref:System.Windows.Forms.ListView>). Dzięki temu można dodać tablicę elementów do listy w ramach jednej operacji. Jednak jeśli chcesz dodać elementy w czasie przy użyciu <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> metody <xref:System.Windows.Forms.ListView.ListViewItemCollection> klasy, można użyć <xref:System.Windows.Forms.ListView.BeginUpdate%2A> metodę, aby zapobiec formantu ponownego rysowania <xref:System.Windows.Forms.ListView> zawsze element został dodany. Po ukończeniu zadań dodawania elementów do formantu, wywołaj <xref:System.Windows.Forms.ListView.EndUpdate%2A> metodę umożliwiającą włączenie <xref:System.Windows.Forms.ListView> do odświeżenia. Ten sposób dodawania elementów może uniemożliwić z migotaniem rysowania elementu <xref:System.Windows.Forms.ListView> po wiele elementów są dodawane do formantu.  
  
 Jeśli <xref:System.Windows.Forms.ListView.BeginUpdate%2A> jest wywoływana więcej niż raz <xref:System.Windows.Forms.ListView.EndUpdate%2A> musi zostać wywołana równoważną liczbę razy. Przed ostatnim wywołaniem <xref:System.Windows.Forms.ListView.EndUpdate%2A> <xref:System.Windows.Forms.ListView> nie będzie odświeżenia. Inne niż ta, wielu wywołań <xref:System.Windows.Forms.ListView.BeginUpdate%2A> nie mają żadnego skutku.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje inicjowanie <xref:System.Windows.Forms.ListView> formant zawiera pola wyboru. Ponadto przedstawiono sposób użycia <xref:System.Windows.Forms.ListView.BeginUpdate%2A> i <xref:System.Windows.Forms.ListView.EndUpdate%2A> metody. Aby uruchomić ten przykład, wklej następujący kod do formularza, który zawiera <xref:System.Windows.Forms.ListView> o nazwie `ListView1`. Wywołanie `InititalizeListView` metody z Konstruktor elementu form lub `Load` metody.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.EndUpdate" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BorderStyle BorderStyle { System::Windows::Forms::BorderStyle get(); void set(System::Windows::Forms::BorderStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia styl obramowania formantu.</summary>
        <value>Jeden z <see cref="T:System.Windows.Forms.BorderStyle" /> wartości. Wartość domyślna to <see cref="F:System.Windows.Forms.BorderStyle.Fixed3D" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Windows.Forms.ListView.BorderStyle%2A> właściwości do zmiany styl obramowania <xref:System.Windows.Forms.ListView> kontroli zgodnie z ustawieniami styl obramowania innych kontrolek w formularzu. Na przykład, jeśli żaden z innych kontrolek w formularzu są wyświetlane obramowanie, możesz ustawić <xref:System.Windows.Forms.ListView.BorderStyle%2A> właściwość <xref:System.Windows.Forms.ListView> formant <xref:System.Windows.Forms.BorderStyle.None> odpowiadające inne formanty.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Określona wartość nie jest jednym z <see cref="T:System.Windows.Forms.BorderStyle" /> wartości.</exception>
        <altmember cref="T:System.Windows.Forms.BorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="CacheVirtualItems">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.CacheVirtualItemsEventHandler CacheVirtualItems;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.CacheVirtualItemsEventHandler CacheVirtualItems" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.CacheVirtualItems" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CacheVirtualItems As CacheVirtualItemsEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::CacheVirtualItemsEventHandler ^ CacheVirtualItems;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CacheVirtualItemsEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy zawartość obszaru wyświetlania <see cref="T:System.Windows.Forms.ListView" /> w trybie wirtualnym została zmieniona i <see cref="T:System.Windows.Forms.ListView" /> stwierdza, że potrzebuje szereg nowych elementów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie występuje tylko wtedy, gdy <xref:System.Windows.Forms.ListView.VirtualMode%2A> jest `true`. Obsługa tego zdarzenia umożliwia <xref:System.Windows.Forms.ListView> Aby zaktualizować informacje o elementach przechowywanych w pamięci podręcznej, aby była dostępna. Może to poprawić wydajność dużych list lub listy, którego elementy są kosztowne do obliczenia.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie programu obsługi zdarzeń sprawdza odświeżania pamięci podręcznej jest to naprawdę konieczne, a następnie odtwarza pamięci podręcznej. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Windows.Forms.ListView.VirtualMode%2A> właściwości.  
  
 [!code-csharp[System.Windows.Forms.ListView.VirtualMode#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/cs/VirtualMode.cs#3)]
 [!code-vb[System.Windows.Forms.ListView.VirtualMode#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/vb/VirtualMode.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckBoxes">
      <MemberSignature Language="C#" Value="public bool CheckBoxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckBoxes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckBoxes" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckBoxes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckBoxes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy pole wyboru obok każdego elementu w formancie.</summary>
        <value>
          <see langword="true" /> Jeśli pole wyboru obok każdego elementu w <see cref="T:System.Windows.Forms.ListView" /> kontrolować; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.CheckBoxes%2A> Właściwość służy do wyświetlenia na liście pole wyboru obok każdego elementu. Dzięki temu aplikacja wyświetlić listę elementów (i subitems Jeśli <xref:System.Windows.Forms.ListView.View%2A> właściwość jest ustawiona na `View.Details`) czy użytkownik może wybrać, klikając pole wyboru. <xref:System.Windows.Forms.ListView.CheckBoxes%2A> Właściwości pozwala wybrać wiele elementów w <xref:System.Windows.Forms.ListView> kontroli bez przy użyciu klawisza CTRL. W zależności od aplikacji użycie pola wyboru w celu wybrania elementów zamiast standardowego wielu metodę wyboru może być łatwiejsze dla użytkownika. Nawet jeśli <xref:System.Windows.Forms.ListView.MultiSelect%2A> właściwość <xref:System.Windows.Forms.ListView> kontrola jest ustawiona na `false`, nadal można wyświetlać pola wyboru i zapewniają wiele możliwości wyboru dla użytkownika. Ta funkcja może być przydatne, jeśli nie ma wiele elementów, należy wybrać jeszcze nadal chcesz zezwolić użytkownikowi na wybranie wielu elementów na liście, można wykonać operacji w aplikacji.  
  
 Aby ustalić, kiedy element została sprawdzona, utworzyć programu obsługi zdarzeń dla <xref:System.Windows.Forms.ListView.ItemCheck> zdarzeń. Aby uzyskać wszystkie elementy, które są sprawdzane w <xref:System.Windows.Forms.ListView>, użyj <xref:System.Windows.Forms.ListView.CheckedItems%2A> właściwości, aby uzyskać dostęp do <xref:System.Windows.Forms.ListView.CheckedIndexCollection> dla formantu. Aby uzyskać indeksy wszystkie elementy, które są sprawdzane w <xref:System.Windows.Forms.ListView>, użyj <xref:System.Windows.Forms.ListView.CheckedIndices%2A> właściwości.  
  
 Jeśli <xref:System.Windows.Forms.ImageList> została określona w <xref:System.Windows.Forms.ListView.StateImageList%2A> właściwości, obrazów na pozycji indeksu 0 i 1 w <xref:System.Windows.Forms.ImageList> są wyświetlane pola wyboru. Obraz na pozycji indeksu 0 jest wyświetlany zamiast niezaznaczone pole wyboru i wyświetlania obrazu na pozycji indeksu 1 zamiast zaznaczone pole wyboru.  
  
> [!NOTE]
>  Kiedy ustawić tę właściwość na `true`, <xref:System.Windows.Forms.ListView.ItemCheck> zdarzenie.  
>   
>  Pola wyboru nie są wyświetlane, gdy <xref:System.Windows.Forms.ListView.View%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.View.Tile>.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.ListView> formantu, z których trzy <xref:System.Windows.Forms.ListViewItem> obiekty określone i trzy <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiekty określone dla każdego elementu. W przykładzie jest tworzony także <xref:System.Windows.Forms.ColumnHeader> obiektów, aby wyświetlić elementy podrzędne w widoku details. Dwa <xref:System.Windows.Forms.ImageList> obiekty również są tworzone w przykładzie kodu, aby zapewnić obrazy dla <xref:System.Windows.Forms.ListViewItem> obiektów. Te <xref:System.Windows.Forms.ImageList> obiekty są dodawane do <xref:System.Windows.Forms.ListView.LargeImageList%2A> i <xref:System.Windows.Forms.ListView.SmallImageList%2A> właściwości. W przykładzie użyto następujących właściwości w tworzeniu <xref:System.Windows.Forms.ListView> formantu.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 W tym przykładzie wymaga dodano kod <xref:System.Windows.Forms.Form> i wywołaj metodę utworzony w przykładzie z konstruktora lub innej metody w formularzu. Przykład wymaga również, że obrazy o nazwie `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, i `MyLargeImage2` znajdują się w katalogu głównym dysku C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.StateImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="P:System.Windows.Forms.ListView.MultiSelect" />
      </Docs>
    </Member>
    <Member MemberName="CheckedIndices">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.CheckedIndexCollection CheckedIndices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/CheckedIndexCollection CheckedIndices" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckedIndices" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckedIndices As ListView.CheckedIndexCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::CheckedIndexCollection ^ CheckedIndices { System::Windows::Forms::ListView::CheckedIndexCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+CheckedIndexCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera indeksów elementów aktualnie zaznaczonych w kontrolce.</summary>
        <value>A <see cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" /> zawierający indeksów elementów aktualnie zaznaczonych. Jeśli obecnie nie zaznaczono żadnych elementów, pustą <see cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" /> jest zwracany.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość przydaje się tylko gdy <xref:System.Windows.Forms.ListView.CheckBoxes%2A> właściwość <xref:System.Windows.Forms.ListView> kontrola jest ustawiona na `true`. <xref:System.Windows.Forms.ListView.CheckedIndices%2A> Właściwość zwraca kolekcję zawierającą pozycje indeksu na <xref:System.Windows.Forms.ListView.ListViewItemCollection> wszystkich elementów, które są sprawdzane w formancie. Aby uzyskać więcej informacji na temat sposobu modyfikowania elementów w kolekcji, zobacz <xref:System.Windows.Forms.ListView.CheckedIndexCollection>.  
  
 Jeśli chcesz uzyskać kolekcję elementów, które są sprawdzane w <xref:System.Windows.Forms.ListView> formantu zamiast pozycji indeksu elementów, które są zaznaczone, użyj <xref:System.Windows.Forms.ListView.CheckedItems%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckedItems" />
      </Docs>
    </Member>
    <Member MemberName="CheckedItems">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.CheckedListViewItemCollection CheckedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/CheckedListViewItemCollection CheckedItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckedItems As ListView.CheckedListViewItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::CheckedListViewItemCollection ^ CheckedItems { System::Windows::Forms::ListView::CheckedListViewItemCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+CheckedListViewItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obecnie zaznaczonych elementów w formancie.</summary>
        <value>A <see cref="T:System.Windows.Forms.ListView.CheckedListViewItemCollection" /> zawiera obecnie zaznaczonych elementów. Jeśli obecnie nie zaznaczono żadnych elementów, pustą <see cref="T:System.Windows.Forms.ListView.CheckedListViewItemCollection" /> jest zwracany.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość przydaje się tylko gdy <xref:System.Windows.Forms.ListView.CheckBoxes%2A> właściwość <xref:System.Windows.Forms.ListView> kontrola jest ustawiona na `true`. <xref:System.Windows.Forms.ListView.CheckedItems%2A> Właściwość zwraca kolekcję, która zawiera wszystkie elementy, które są sprawdzane w formancie. Aby uzyskać więcej informacji na temat sposobu modyfikowania elementów w kolekcji, zobacz <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection>.  
  
 Jeśli chcesz uzyskać kolekcję pozycje indeksu w ramach <xref:System.Windows.Forms.ListView.ListViewItemCollection> elementów, które są sprawdzane w <xref:System.Windows.Forms.ListView> formantu zamiast elementy, które są zaznaczone, użyj <xref:System.Windows.Forms.ListView.CheckedIndices%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje wyewidencjonowany <xref:System.Windows.Forms.ListView> obsługująca <xref:System.Windows.Forms.ListView.ItemChecked> zdarzeń. W przykładzie użyto <xref:System.Windows.Forms.ListView.CheckedItems%2A> właściwości, aby sprawdzać nowych cen zawsze element znajduje się zaznaczenie. Aby uruchomić ten przykład, wklej następujący kod do formularza, który zawiera <xref:System.Windows.Forms.ListView> o nazwie `ListView1` i <xref:System.Windows.Forms.TextBox> o nazwie `Textbox1`. Wywołanie `InititalizeListView` metody z Konstruktor elementu form lub `Load` metody.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView2#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#3)]
[!code-csharp[System.Windows.Forms.ListView2#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#3)]
[!code-vb[System.Windows.Forms.ListView2#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.CheckedListViewItemCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckedIndices" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa wszystkie elementy i kolumn w formancie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do usuwania wszystkich elementów i kolumny z <xref:System.Windows.Forms.ListView> kontroli bez konieczności wywołania poszczególnych `Clear` metody <xref:System.Windows.Forms.ListView.ColumnHeaderCollection> i <xref:System.Windows.Forms.ListView.ListViewItemCollection> klasy.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView.Clear%2A> — Metoda nie czyści <xref:System.Windows.Forms.ListView.Groups%2A> określona dla <xref:System.Windows.Forms.ListView> formantu. Aby wyczyścić <xref:System.Windows.Forms.ListView.Groups%2A> wywołania <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Windows.Forms.ListView.Clear%2A> i <xref:System.Windows.Forms.ListViewItem.Selected%2A?displayProperty=nameWithType> elementów członkowskich. Aby uruchomić ten przykład, wklej następujący kod do formularza, który zawiera <xref:System.Windows.Forms.ListView> o nazwie `ListView1` i przycisk, znajdujący się u dołu ekranu w formie o nazwie `Button1`. Wywołanie `InitializeListView` metody z Konstruktor elementu form lub `Load` metody.  
  
 [!code-cpp[System.Windows.Forms.ListView4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView4/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView4/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView4/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Clear" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="ColumnClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ColumnClickEventHandler ColumnClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ColumnClickEventHandler ColumnClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ColumnClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnClick As ColumnClickEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ColumnClickEventHandler ^ ColumnClick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy użytkownik kliknie nagłówek kolumny w obrębie formantu widoku listy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.ColumnClick> Zdarzenie wystąpi, gdy użytkownik kliknie jeden z nagłówków kolumn w widoku szczegółów elementów w <xref:System.Windows.Forms.ListView> formantu (gdy <xref:System.Windows.Forms.ListView.View%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.View.Details>). <xref:System.Windows.Forms.ListView.ColumnClick> Zdarzeń odbywa się zazwyczaj do sortowania elementów w <xref:System.Windows.Forms.ListView> przy użyciu klikniętej kolumny jako kolumny można sortować.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy formularz zawierający <xref:System.Windows.Forms.ListView> kontroli ręcznie sortujące elementy, gdy kolumna w <xref:System.Windows.Forms.ListView> formant zostanie kliknięty. W przykładzie zdefiniowano klasę o nazwie `ListViewItemComparer` implementującej <xref:System.Collections.IComparer?displayProperty=nameWithType> interfejsu, który wykonuje <xref:System.Windows.Forms.ListViewItem> porównania. W przykładzie jest tworzony wystąpienia `ListViewItemComparer` i używa jej do ustawienia <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> właściwość <xref:System.Windows.Forms.ListView> formantu. <xref:System.Windows.Forms.ListView.Sort%2A> Wywołanie metody <xref:System.Windows.Forms.ListView.ColumnClick> program obsługi zdarzeń używa metody zdefiniowane w `ListViewItemComparer` do wykonania sortowania pozycji, na podstawie kolumny, która zostanie kliknięty.  
  
 [!code-cpp[ListView.ColumnClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.ColumnClick/CPP/listviewsort1.cpp#1)]
 [!code-csharp[ListView.ColumnClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.ColumnClick/CS/listviewsort1.cs#1)]
 [!code-vb[ListView.ColumnClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.ColumnClick/VB/listviewsort1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ColumnReordered">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ColumnReorderedEventHandler ColumnReordered;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ColumnReorderedEventHandler ColumnReordered" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ColumnReordered" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnReordered As ColumnReorderedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ColumnReorderedEventHandler ^ ColumnReordered;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnReorderedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy zostanie zmieniona kolejność nagłówka kolumny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.ColumnReordered> Zdarzeń jest zdarzeniem można anulować i mogą zostać anulowane przez obsługi zdarzenia i ustawienie <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwości `true`. Jednakże, jeśli zdarzenie zostało anulowane, <xref:System.Windows.Forms.ColumnReorderedEventArgs.NewDisplayIndex%2A> z <xref:System.Windows.Forms.ColumnReorderedEventArgs> nie zmieni się na <xref:System.Windows.Forms.ColumnReorderedEventArgs.OldDisplayIndex%2A> wartość.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.ListView.ColumnReordered> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.ListView> o nazwie `ListView1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.ListView.ColumnReordered> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#467](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#467)]
 [!code-vb[System.Windows.Forms.EventExamples#467](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#467)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.ColumnHeaderCollection Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/ColumnHeaderCollection Columns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As ListView.ColumnHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::ColumnHeaderCollection ^ Columns { System::Windows::Forms::ListView::ColumnHeaderCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ColumnHeaderCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+ColumnHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję wszystkich nagłówków kolumn, które są wyświetlane w formancie.</summary>
        <value>A <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" /> reprezentujący nagłówki kolumn widocznych <see cref="P:System.Windows.Forms.ListView.View" /> właściwość jest ustawiona na <see cref="F:System.Windows.Forms.View.Details" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.Columns%2A> Właściwość zwraca kolekcję zawierającą <xref:System.Windows.Forms.ColumnHeader> obiektów, które są wyświetlane w <xref:System.Windows.Forms.ListView> formantu. <xref:System.Windows.Forms.ColumnHeader> obiekty definiowania kolumn, które są wyświetlane w <xref:System.Windows.Forms.ListView> decyduje o <xref:System.Windows.Forms.ListView.View%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.View.Details>. Każda kolumna jest używana do wyświetlania informacji podelementu dla każdego elementu w <xref:System.Windows.Forms.ListView>. Aby uzyskać więcej informacji na temat sposobu modyfikowania elementów w kolekcji, zobacz <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>.  
  
> [!NOTE]
>  Jeśli Twoje <xref:System.Windows.Forms.ListView> formant nie ma żadnych nagłówków kolumn określone i ustawisz <xref:System.Windows.Forms.ListView.View%2A> właściwości <xref:System.Windows.Forms.View.Details>, <xref:System.Windows.Forms.ListView> kontrolka nie będzie wyświetlać wszystkie elementy.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.ListView> formantu, z których trzy <xref:System.Windows.Forms.ListViewItem> obiekty określone i trzy <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiekty określone dla każdego elementu. W przykładzie jest tworzony także <xref:System.Windows.Forms.ColumnHeader> obiektów, aby wyświetlić elementy podrzędne w widoku details. Dwa <xref:System.Windows.Forms.ImageList> obiekty również są tworzone w przykładzie kodu, aby zapewnić obrazy dla <xref:System.Windows.Forms.ListViewItem> obiektów. Te <xref:System.Windows.Forms.ImageList> obiekty są dodawane do <xref:System.Windows.Forms.ListView.LargeImageList%2A> i <xref:System.Windows.Forms.ListView.SmallImageList%2A> właściwości. W przykładzie użyto następujących właściwości w tworzeniu <xref:System.Windows.Forms.ListView> formantu.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 W tym przykładzie wymaga dodano kod <xref:System.Windows.Forms.Form> i wywołaj metodę utworzony w przykładzie z konstruktora lub innej metody w formularzu. Przykład wymaga również, że obrazy o nazwie `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, i `MyLargeImage2` znajdują się w katalogu głównym dysku C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" />
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
      </Docs>
    </Member>
    <Member MemberName="ColumnWidthChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ColumnWidthChangedEventHandler ColumnWidthChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ColumnWidthChangedEventHandler ColumnWidthChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ColumnWidthChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnWidthChanged As ColumnWidthChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ColumnWidthChangedEventHandler ^ ColumnWidthChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnWidthChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zmianie pomyślnie szerokości kolumny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie nie występuje w przypadku zmiany szerokość kolumny jest anulowane w <xref:System.Windows.Forms.ListView.ColumnWidthChanging> zdarzeń  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.ListView.ColumnWidthChanged> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.ListView> o nazwie `ListView1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.ListView.ColumnWidthChanged> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#468](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#468)]
 [!code-vb[System.Windows.Forms.EventExamples#468](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#468)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnWidthChanging">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ColumnWidthChangingEventHandler ColumnWidthChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ColumnWidthChangingEventHandler ColumnWidthChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ColumnWidthChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnWidthChanging As ColumnWidthChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ColumnWidthChangingEventHandler ^ ColumnWidthChanging;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnWidthChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy zmienia szerokość kolumny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie służy do sprawdzania na nową szerokość kolumny z <xref:System.Windows.Forms.ColumnWidthChangingEventArgs.NewWidth%2A?displayProperty=nameWithType> właściwości i Anuluj zdarzeń po wybraniu przez ustawienie <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwości `true`.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje Obsługa <xref:System.Windows.Forms.ListView.ColumnWidthChanging> zdarzeń. Ilustruje też <xref:System.Windows.Forms.ColumnWidthChangingEventArgs.NewWidth%2A?displayProperty=nameWithType> i <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> elementów członkowskich. Aby uruchomić ten przykład, Wklej kod w formularzu systemu Windows. Wywołanie `InitializeListView1` z konstruktora formularza lub <xref:System.Windows.Forms.Form.Load> obsługi zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateHandle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy uchwytu formantu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ta właściwość nie jest odpowiedni dla tej klasy.</summary>
        <value>
          <see langword="null" /> we wszystkich przypadkach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość nie jest odpowiedni dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera domyślny rozmiar formantu.</summary>
        <value>Wartość domyślna <see cref="T:System.Drawing.Size" /> formantu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko zasoby niezarządzane.</param>
        <summary>Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Windows.Forms.ListView" /> i opcjonalnie zwalnia zasoby zarządzane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie <xref:System.Windows.Forms.ListView.Dispose%2A> metody, gdy składnik jest już potrzebne. Ta metoda usuwa składnik z jego kontenera (Jeśli składnik nie ma lokacji) i wyzwala zdarzenie dispose.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffered">
      <MemberSignature Language="C#" Value="protected override bool DoubleBuffered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoubleBuffered" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.DoubleBuffered" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DoubleBuffered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DoubleBuffered { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy ten formant powinno nastąpić jego automatyczne jej ataki przy użyciu dodatkowej buforu do zmniejszenia lub zapobiegania migotania.</summary>
        <value>
          <see langword="true" /> Jeśli ma być rysowany powierzchni formantu przy użyciu podwójnego buforowania; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawColumnHeader">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawListViewColumnHeaderEventHandler DrawColumnHeader;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawListViewColumnHeaderEventHandler DrawColumnHeader" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.DrawColumnHeader" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawColumnHeader As DrawListViewColumnHeaderEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawListViewColumnHeaderEventHandler ^ DrawColumnHeader;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawListViewColumnHeaderEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy widok szczegółów <see cref="T:System.Windows.Forms.ListView" /> rysowania i <see cref="P:System.Windows.Forms.ListView.OwnerDraw" /> właściwość jest ustawiona na <see langword="true" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie umożliwia dostosowanie wyglądu <xref:System.Windows.Forms.ListView> formantu przy użyciu Rysowanie przez właściciela. Jest on uruchamiany tylko wtedy, gdy <xref:System.Windows.Forms.ListView.OwnerDraw%2A> właściwość jest ustawiona na `true` i <xref:System.Windows.Forms.ListView.View%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>. To zdarzenie może nastąpić każdy nagłówek kolumny w formancie. Aby uzyskać więcej informacji dotyczących Rysowanie przez właściciela, zobacz <xref:System.Windows.Forms.ListView.OwnerDraw%2A> temat referencyjny właściwości.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 W poniższym przykładzie kodu przedstawiono implementacja <xref:System.Windows.Forms.ListView.DrawColumnHeader> obsługi zdarzeń. Na przykład pełna, łącznie z implementacji <xref:System.Windows.Forms.ListView.DrawSubItem> program obsługi zdarzeń, zobacz <xref:System.Windows.Forms.ListView.OwnerDraw%2A> temat referencyjny.  
  
 [!code-csharp[ListViewOwnerDraw#5](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#5)]
 [!code-vb[ListViewOwnerDraw#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
        <altmember cref="T:System.Windows.Forms.DrawListViewColumnHeaderEventArgs" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="DrawItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawListViewItemEventHandler DrawItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawListViewItemEventHandler DrawItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.DrawItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawItem As DrawListViewItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawListViewItemEventHandler ^ DrawItem;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawListViewItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="T:System.Windows.Forms.ListView" /> rysowania i <see cref="P:System.Windows.Forms.ListView.OwnerDraw" /> właściwość jest ustawiona na <see langword="true" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie umożliwia dostosowanie wyglądu <xref:System.Windows.Forms.ListView> formantu przy użyciu Rysowanie przez właściciela. Jest on uruchamiany tylko wtedy, gdy <xref:System.Windows.Forms.ListView.OwnerDraw%2A> właściwość jest ustawiona na `true`. Aby uzyskać więcej informacji na temat Rysowanie przez właściciela, zobacz <xref:System.Windows.Forms.ListView.OwnerDraw%2A> temat referencyjny właściwości.  
  
 <xref:System.Windows.Forms.ListView.DrawItem> Zdarzenia dla każdego <xref:System.Windows.Forms.ListView> elementu. Gdy <xref:System.Windows.Forms.ListView.View%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>, <xref:System.Windows.Forms.ListView.DrawSubItem> i <xref:System.Windows.Forms.ListView.DrawColumnHeader> również występować zdarzenia. W takim przypadku można obsługiwać <xref:System.Windows.Forms.ListView.DrawItem> zdarzenie, aby narysować elementy wspólne dla wszystkich elementów, takich jak tła i obsługiwać <xref:System.Windows.Forms.ListView.DrawSubItem> zdarzeń, aby narysować elementy na poszczególne elementy podrzędne, takie jak wartości tekstowe. Możesz także rysować wszystkie elementy <xref:System.Windows.Forms.ListView> kontrolować za pomocą tylko jednego z dwóch zdarzeń, chociaż może to być mniej wygodne. Aby narysować nagłówków kolumn w widoku szczegółów, musi obsługiwać <xref:System.Windows.Forms.ListView.DrawColumnHeader> zdarzeń.  
  
> [!NOTE]
>  Z powodu błędu w formancie źródłowym Win32 <xref:System.Windows.Forms.ListView.DrawItem> zdarzeń odbywa się bez towarzyszącego <xref:System.Windows.Forms.ListView.DrawSubItem> zdarzenia raz na wiersz, w widoku details, gdy wskaźnik myszy przesuwa się nad wiersza, powodując niczego rysowane w <xref:System.Windows.Forms.ListView.DrawSubItem> obsługi zdarzeń jako rysowane przez niestandardowego tła na środku <xref:System.Windows.Forms.ListView.DrawItem> obsługi zdarzeń. Zapoznaj się z przykładem w <xref:System.Windows.Forms.ListView.OwnerDraw%2A> temat referencyjny obejście tego problemu, która unieważnia każdy wiersz po wystąpieniu zdarzenia dodatkowe. Inne obejście ma umieść swój niestandardowy kod rysowania <xref:System.Windows.Forms.ListView.DrawSubItem> obsługi zdarzeń i paint tła dla całego elementu (w tym podelementy) tylko wtedy, gdy <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.ColumnIndex%2A?displayProperty=nameWithType> wartość jest równa 0.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 W poniższym przykładzie kodu przedstawiono implementacja <xref:System.Windows.Forms.ListView.DrawItem> obsługi zdarzeń. Aby uzyskać pełny przykład, zobacz <xref:System.Windows.Forms.ListView.OwnerDraw%2A> temat referencyjny.  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
        <altmember cref="T:System.Windows.Forms.DrawListViewItemEventArgs" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawColumnHeader" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="DrawSubItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawListViewSubItemEventHandler DrawSubItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawListViewSubItemEventHandler DrawSubItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.DrawSubItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawSubItem As DrawListViewSubItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawListViewSubItemEventHandler ^ DrawSubItem;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawListViewSubItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy widok szczegółów <see cref="T:System.Windows.Forms.ListView" /> rysowania i <see cref="P:System.Windows.Forms.ListView.OwnerDraw" /> właściwość jest ustawiona na <see langword="true" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie umożliwia dostosowanie wyglądu <xref:System.Windows.Forms.ListView> formantu przy użyciu Rysowanie przez właściciela. Jest on uruchamiany tylko wtedy, gdy <xref:System.Windows.Forms.ListView.OwnerDraw%2A> właściwość jest ustawiona na `true` i <xref:System.Windows.Forms.ListView.View%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>. Aby uzyskać więcej informacji dotyczących Rysowanie przez właściciela, zobacz <xref:System.Windows.Forms.ListView.OwnerDraw%2A> temat referencyjny właściwości.  
  
> [!NOTE]
>  Informacje podelementu zwykle pojawiają się w widoku tile, a także wyświetlić szczegółowe informacje, ale w widoku tile musi zostać narysowany programu obsługi dla <xref:System.Windows.Forms.ListView.DrawItem> zdarzeń.  
  
 <xref:System.Windows.Forms.ListView.DrawSubItem> Zdarzenia dla każdego <xref:System.Windows.Forms.ListView> podelementu. Może obsłużyć <xref:System.Windows.Forms.ListView.DrawItem> zdarzeń do rysowania wspólne elementy, aby wszystkie elementy podrzędne, takie jak tło i obsługi <xref:System.Windows.Forms.ListView.DrawSubItem> zdarzeń, aby narysować elementy na poszczególne elementy podrzędne, takie jak wartości tekstowe. Możesz także rysować wszystkie elementy <xref:System.Windows.Forms.ListView> kontrolować za pomocą tylko jednego z dwóch zdarzeń, chociaż może to być mniej wygodne. Aby narysować nagłówków kolumn w widoku szczegółów, musi obsługiwać <xref:System.Windows.Forms.ListView.DrawColumnHeader> zdarzeń.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView.DrawSubItem> Zdarzenie nie występuje na wszystkie elementy podrzędne, dla którego nie <xref:System.Windows.Forms.ColumnHeader> obiekt został dodany do <xref:System.Windows.Forms.ListView.Columns%2A> kolekcji. Należy zauważyć, że pierwszy podelementu każdego <xref:System.Windows.Forms.ListViewItem> obiekt reprezentuje elementu nadrzędnego i jest wyświetlany w pierwszej kolumnie.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 W poniższym przykładzie kodu przedstawiono implementacja <xref:System.Windows.Forms.ListView.DrawSubItem> obsługi zdarzeń. Aby uzyskać pełny przykład, zobacz <xref:System.Windows.Forms.ListView.OwnerDraw%2A> temat referencyjny.  
  
 [!code-csharp[ListViewOwnerDraw#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#4)]
 [!code-vb[ListViewOwnerDraw#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
        <altmember cref="T:System.Windows.Forms.DrawListViewSubItemEventArgs" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawColumnHeader" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="EndUpdate">
      <MemberSignature Language="C#" Value="public void EndUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.EndUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndUpdate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wznawia rysowania listy wyświetlić kontroli po rysunku jest zawieszony przez <see cref="M:System.Windows.Forms.ListView.BeginUpdate" /> metody.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Najlepszym sposobem dodawania wielu elementów do <xref:System.Windows.Forms.ListView> jest użycie <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> metody <xref:System.Windows.Forms.ListView.ListViewItemCollection> (dostępnej za pośrednictwem <xref:System.Windows.Forms.ListView.Items%2A> właściwość <xref:System.Windows.Forms.ListView>). Dzięki temu można dodać tablicę elementów do listy w ramach jednej operacji. Jednak jeśli chcesz dodać elementy w czasie przy użyciu <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> metody <xref:System.Windows.Forms.ListView.ListViewItemCollection> klasy, można użyć <xref:System.Windows.Forms.ListView.BeginUpdate%2A> metodę, aby zapobiec formantu ponownego rysowania <xref:System.Windows.Forms.ListView> zawsze element został dodany. Po zakończeniu zadania dodawania elementów do formantu wywołania <xref:System.Windows.Forms.ListView.EndUpdate%2A> metodę umożliwiającą włączenie <xref:System.Windows.Forms.ListView> do odświeżenia. Ten sposób dodawania elementów może uniemożliwić z migotaniem rysowania elementu <xref:System.Windows.Forms.ListView> po dużą liczbę elementów są dodawane do formantu.  
  
 Jeśli <xref:System.Windows.Forms.ListView.BeginUpdate%2A> jest wywoływana więcej niż raz <xref:System.Windows.Forms.ListView.EndUpdate%2A> musi zostać wywołana równoważną liczbę razy. Przed ostatnim wywołaniem <xref:System.Windows.Forms.ListView.EndUpdate%2A> <xref:System.Windows.Forms.ListView> nie będzie odświeżenia. Inne niż ta, wielu wywołań <xref:System.Windows.Forms.ListView.BeginUpdate%2A> nie mają żadnego skutku.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje inicjowanie <xref:System.Windows.Forms.ListView> formant zawiera pola wyboru. Ilustruje też przy użyciu <xref:System.Windows.Forms.ListView.BeginUpdate%2A> i <xref:System.Windows.Forms.ListView.EndUpdate%2A> metody. Do uruchomienia tego przykładu, wklej następujący kod do formularza zawierających <xref:System.Windows.Forms.ListView> o nazwie `ListView1`. Wywołanie `InititalizeListView` metody z Konstruktor elementu form lub `Load` metody.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.BeginUpdate" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="EnsureVisible">
      <MemberSignature Language="C#" Value="public void EnsureVisible (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnsureVisible(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.EnsureVisible(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnsureVisible (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnsureVisible(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks elementu do przewijania w widoku.</param>
        <summary>Zapewnia, że określony element jest widoczny w formancie przewijanie zawartości formantu, jeśli to konieczne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do zapewnienia, że określony element jest widoczny w <xref:System.Windows.Forms.ListView> formantu. Podczas przeprowadzania weryfikacji dla elementów w <xref:System.Windows.Forms.ListView>, można wywołać <xref:System.Windows.Forms.ListView.EnsureVisible%2A> metody, aby upewnić się, że nie można sprawdzić poprawności elementu jest wyświetlany w <xref:System.Windows.Forms.ListView> kontrolki, które umożliwia użytkownikowi przeprowadzenie zmiany w elemencie. Jeśli ten element, który chcesz zapewnić jest widoczny znajduje się powyżej widoczny region <xref:System.Windows.Forms.ListView> kontrolować wywoływania <xref:System.Windows.Forms.ListView.EnsureVisible%2A> metoda będzie przewiń zawartość kontrolki jest pierwszy element widoczny obszar formantu. Jeśli element znajduje się poniżej widoczny region <xref:System.Windows.Forms.ListView> kontrolować wywoływania <xref:System.Windows.Forms.ListView.EnsureVisible%2A> metody przewinie zawartość <xref:System.Windows.Forms.ListView> kontrolowanie momentu elementu ostatniego elementu w widocznego obszaru formantu.  
  
 Aby określić, jeśli element znajduje się w górnej części obszaru wyświetlania <xref:System.Windows.Forms.ListView> kontrolować, użyj <xref:System.Windows.Forms.ListView.TopItem%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.TopItem" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindItemWithText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Znajduje pierwszy <see cref="T:System.Windows.Forms.ListViewItem" /> z którego rozpoczyna się od danej wartości tekstowej.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindItemWithText">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindItemWithText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindItemWithText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindItemWithText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindItemWithText (text As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindItemWithText(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do wyszukania.</param>
        <summary>Znajduje pierwszy <see cref="T:System.Windows.Forms.ListViewItem" /> który zaczyna się od określonej wartości tekstowej.</summary>
        <returns>Pierwszy <see cref="T:System.Windows.Forms.ListViewItem" /> który zaczyna się od określonej wartości tekstowej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wyszukiwanie jest rozróżniana wielkość liter.  
  
 `text` Parametr można określić podciąg żądaną szukanego tekstu. Ponadto ta metoda zwraca pierwszy element, który rozpoczyna się od określonego tekstu. Na przykład jeśli <xref:System.Windows.Forms.ListView> zawiera dwa elementy listy — tekst pierwszego elementu "nawiasu ostrego" i tekst drugiego elementu ustawioną wartość "nawiasów" — wywołanie <xref:System.Windows.Forms.ListView.FindItemWithText%2A> przekazywanie `brack` parametr spowoduje zwrócenie elementu, którego tekst jest "nawiasów".  
  
 <xref:System.Windows.Forms.ListView.FindItemWithText%2A> Metoda zwraca `null` Jeśli lista jest pusta lub nie ma pasującego elementu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje <xref:System.Windows.Forms.ListView.FindItemWithText%2A> metody. Aby uruchomić ten przykład, wklej następujący kod do formularza systemu Windows i wywołanie `InitializeFindListView` metody z Konstruktor elementu form lub <xref:System.Windows.Forms.Form.Load> obsługi zdarzeń. Kliknij przycisk, aby wyświetlić wyniki wywołania metody.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindItemWithText">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindItemWithText (string text, bool includeSubItemsInSearch, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindItemWithText(string text, bool includeSubItemsInSearch, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindItemWithText(System.String,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindItemWithText (text As String, includeSubItemsInSearch As Boolean, startIndex As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindItemWithText(System::String ^ text, bool includeSubItemsInSearch, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="includeSubItemsInSearch" Type="System.Boolean" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do wyszukania.</param>
        <param name="includeSubItemsInSearch">
          <see langword="true" /> Aby dołączyć podelementy wyszukiwania; w przeciwnym razie <see langword="false" />.</param>
        <param name="startIndex">Indeks elementu, w którym ma się rozpocząć wyszukiwanie.</param>
        <summary>Znajduje pierwszy <see cref="T:System.Windows.Forms.ListViewItem" /> lub <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />, jeśli jest to wskazane, który rozpoczyna się od określonej wartości tekstowej. Wyszukiwanie rozpoczyna się od określonego indeksu.</summary>
        <returns>Pierwszy <see cref="T:System.Windows.Forms.ListViewItem" /> który zaczyna się od określonej wartości tekstowej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wyszukiwanie jest rozróżniana wielkość liter.  
  
 `text` Parametr można określić podciąg żądaną szukanego tekstu. Ponadto ta metoda zwraca pierwszy element, który rozpoczyna się od określonego tekstu. Na przykład jeśli <xref:System.Windows.Forms.ListView> zawiera dwa elementy listy — tekst pierwszego elementu "nawiasu ostrego" i tekst drugiego elementu ustawioną wartość "nawiasów" — wywołanie <xref:System.Windows.Forms.ListView.FindItemWithText%2A> przekazywanie "brack" jako parametru zwróci element, którego tekst jest "nawiasów".  
  
 <xref:System.Windows.Forms.ListView.FindItemWithText%2A> Metoda zwraca `null` Jeśli lista jest pusta lub nie ma pasującego elementu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> jest mniejsze 0 lub więcej niż liczba elementów w <see cref="T:System.Windows.Forms.ListView" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindItemWithText">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindItemWithText (string text, bool includeSubItemsInSearch, int startIndex, bool isPrefixSearch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindItemWithText(string text, bool includeSubItemsInSearch, int32 startIndex, bool isPrefixSearch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindItemWithText(System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindItemWithText (text As String, includeSubItemsInSearch As Boolean, startIndex As Integer, isPrefixSearch As Boolean) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindItemWithText(System::String ^ text, bool includeSubItemsInSearch, int startIndex, bool isPrefixSearch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="includeSubItemsInSearch" Type="System.Boolean" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="isPrefixSearch" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do wyszukania.</param>
        <param name="includeSubItemsInSearch">
          <see langword="true" /> Aby dołączyć podelementy wyszukiwania; w przeciwnym razie <see langword="false" />.</param>
        <param name="startIndex">Indeks elementu, w którym ma się rozpocząć wyszukiwanie.</param>
        <param name="isPrefixSearch">
          <see langword="true" /> Aby umożliwić częściowego dopasowania; w przeciwnym razie <see langword="false" />.</param>
        <summary>Znajduje pierwszy <see cref="T:System.Windows.Forms.ListViewItem" /> lub <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />, jeśli jest to wskazane, który rozpoczyna się od określonej wartości tekstowej. Wyszukiwanie rozpoczyna się od określonego indeksu.</summary>
        <returns>Pierwszy <see cref="T:System.Windows.Forms.ListViewItem" /> który zaczyna się od określonej wartości tekstowej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.FindItemWithText%2A> Metoda zwraca `null` Jeśli lista jest pusta lub nie ma pasującego elementu.  
  
 Wyszukiwanie jest rozróżniana wielkość liter.  
  
 `text` Parametr można określić podciąg żądaną szukanego tekstu. Ta metoda zwróci pierwszy element, który rozpoczyna się od określonego tekstu, chyba że `false` przekazana dla `isPrefixSearch`. Na przykład jeśli <xref:System.Windows.Forms.ListView> zawiera dwa elementy listy — tekst pierwszego elementu "nawiasu ostrego" i tekst drugiego elementu ustawioną wartość "nawiasów" — wywołanie <xref:System.Windows.Forms.ListView.FindItemWithText%2A> przekazywanie "brack" wyszukiwany tekst spowoduje zwrócenie elementu, którego tekst jest "nawiasów". Jeśli `isPrefixSearch` ustawiono `false`, to zwróci `null`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> jest mniejsza niż 0 lub więcej niż liczba elementów w <see cref="T:System.Windows.Forms.ListView" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindNearestItem">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Umożliwia znalezienie następnego elementu z danego punktu, wyszukiwanie w określonym kierunku.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindNearestItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindNearestItem (System.Windows.Forms.SearchDirectionHint dir, System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindNearestItem(valuetype System.Windows.Forms.SearchDirectionHint dir, valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindNearestItem(System.Windows.Forms.SearchDirectionHint,System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindNearestItem(System::Windows::Forms::SearchDirectionHint dir, System::Drawing::Point point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dir" Type="System.Windows.Forms.SearchDirectionHint" />
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="dir">Jeden z <see cref="T:System.Windows.Forms.SearchDirectionHint" /> wartości.</param>
        <param name="point">Punkt, w którym należy rozpocząć wyszukiwanie.</param>
        <summary>Umożliwia znalezienie następnego elementu z danego punktu, wyszukiwanie w określonym kierunku</summary>
        <returns>
          <see cref="T:System.Windows.Forms.ListViewItem" /> Zbliżony do danego punktu, wyszukiwanie w określonym kierunku.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.FindNearestItem%2A> Metoda zwraca `null` Jeśli element nie został znaleziony w określonym kierunku. Może się różnić w zależności od systemu operacyjnego, aplikacja jest uruchomiona na zidentyfikowanie najbliższej elementu i będzie miało wpływ na wyniki <xref:System.Windows.Forms.ListView.FindNearestItem%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.ListView.View" /> ma ustawioną wartość innych niż <see cref="F:System.Windows.Forms.View.SmallIcon" /> lub <see cref="F:System.Windows.Forms.View.LargeIcon" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindNearestItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindNearestItem (System.Windows.Forms.SearchDirectionHint searchDirection, int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindNearestItem(valuetype System.Windows.Forms.SearchDirectionHint searchDirection, int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindNearestItem(System.Windows.Forms.SearchDirectionHint,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNearestItem (searchDirection As SearchDirectionHint, x As Integer, y As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindNearestItem(System::Windows::Forms::SearchDirectionHint searchDirection, int x, int y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchDirection" Type="System.Windows.Forms.SearchDirectionHint" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="searchDirection">Jeden z <see cref="T:System.Windows.Forms.SearchDirectionHint" /> wartości.</param>
        <param name="x">Współrzędna x punktu, w którym należy rozpocząć wyszukiwanie.</param>
        <param name="y">Współrzędna y punktu, w którym należy rozpocząć wyszukiwanie.</param>
        <summary>Znajduje następny element z danym - współrzędnych x i y, wyszukiwanie w określonym kierunku.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.ListViewItem" /> Zbliżony do danego współrzędne, wyszukiwanie w określonym kierunku.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.FindNearestItem%2A> Metoda zwraca `null` Jeśli element nie został znaleziony w określonym kierunku. Może się różnić w zależności od systemu operacyjnego, aplikacja jest uruchomiona na zidentyfikowanie najbliższej elementu i będzie miało wpływ na wyniki <xref:System.Windows.Forms.ListView.FindNearestItem%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.ListView.View" /> ma ustawioną wartość innych niż <see cref="F:System.Windows.Forms.View.SmallIcon" /> lub <see cref="F:System.Windows.Forms.View.LargeIcon" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FocusedItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FocusedItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem FocusedItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.FocusedItem" />
      <MemberSignature Language="VB.NET" Value="Public Property FocusedItem As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItem ^ FocusedItem { System::Windows::Forms::ListViewItem ^ get(); void set(System::Windows::Forms::ListViewItem ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia element w kontrolce, który aktualnie ma fokus.</summary>
        <value>A <see cref="T:System.Windows.Forms.ListViewItem" /> reprezentujący element, który ma fokus, lub <see langword="null" /> Jeśli żaden element ma fokus <see cref="T:System.Windows.Forms.ListView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.FocusedItem%2A> Zwraca <xref:System.Windows.Forms.ListViewItem> reprezentujący element obecnie wyświetlanie prostokąta fokusu <xref:System.Windows.Forms.ListView> formantu. Ponieważ <xref:System.Windows.Forms.ListView> formantem i nie można bezpośrednio edytować obszarów innych niż elementów Wyświetla, gdy <xref:System.Windows.Forms.ListView> formant ma fokus, elementu w obrębie <xref:System.Windows.Forms.ListView> Wyświetla reticle fokus wokół tekstu elementu. Zazwyczaj ostatnio wybrany element w <xref:System.Windows.Forms.ListView> formant jest element z fokusem. Mimo że element może być wyświetlanie reticle fokus, jego może nie być wybrany element w <xref:System.Windows.Forms.ListView>. Użyj <xref:System.Windows.Forms.ListView.SelectedItems%2A> lub <xref:System.Windows.Forms.ListView.SelectedIndices%2A> właściwości, aby uzyskać wybrane elementy w <xref:System.Windows.Forms.ListView> kontroli, <xref:System.Windows.Forms.ListView.FocusedItem%2A> właściwość nie jest zawsze zaznaczone. Można użyć <xref:System.Windows.Forms.ListView.FocusedItem%2A> właściwości w celu określenia, który element został ostatnio kliknięty w <xref:System.Windows.Forms.ListView> kontroli, niezależnie od tego, stan zaznaczenia.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor pierwszego planu.</summary>
        <value>
          <see cref="T:System.Drawing.Color" /> Oznacza to kolor pierwszego planu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullRowSelect">
      <MemberSignature Language="C#" Value="public bool FullRowSelect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FullRowSelect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.FullRowSelect" />
      <MemberSignature Language="VB.NET" Value="Public Property FullRowSelect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FullRowSelect { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy kliknięcie elementu wybiera wszystkie jego elementy podrzędne.</summary>
        <value>
          <see langword="true" /> Jeśli po kliknięciu elementu wybiera element i wszystkie jego elementy podrzędne; <see langword="false" /> Jeśli kliknij element, aby zaznaczyć tylko element. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.FullRowSelect%2A> Właściwości nie obowiązuje, chyba że <xref:System.Windows.Forms.ListView.View%2A> właściwość <xref:System.Windows.Forms.ListView> kontrola jest ustawiona na <xref:System.Windows.Forms.View.Details>. <xref:System.Windows.Forms.ListView.FullRowSelect%2A> Właściwość jest zwykle używana, gdy <xref:System.Windows.Forms.ListView> Wyświetla elementy z wielu podrzędnych i ważne jest, aby można wyświetlać wybrane elementy, gdy tekst elementu nie jest widoczne z powodu przewijanie w poziomie zawartości formantu.  
  
> [!NOTE]
>  Gdy <xref:System.Windows.Forms.ListView.FullRowSelect%2A> ustawiono `true`, etykietki narzędzi dla <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> nie będą wyświetlane; tylko etykietkę narzędzia dla obiektu nadrzędnego <xref:System.Windows.Forms.ListViewItem> jest wyświetlany.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.ListView> formantu, z których trzy <xref:System.Windows.Forms.ListViewItem> obiekty określone i trzy <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiekty określone dla każdego elementu. W przykładzie jest tworzony także <xref:System.Windows.Forms.ColumnHeader> obiektów, aby wyświetlić elementy podrzędne w widoku details. Dwa <xref:System.Windows.Forms.ImageList> obiekty również są tworzone w przykładzie kodu, aby zapewnić obrazy dla <xref:System.Windows.Forms.ListViewItem> obiektów. Te <xref:System.Windows.Forms.ImageList> obiekty są dodawane do <xref:System.Windows.Forms.ListView.LargeImageList%2A> i <xref:System.Windows.Forms.ListView.SmallImageList%2A> właściwości. W przykładzie użyto następujących właściwości w tworzeniu <xref:System.Windows.Forms.ListView> formantu.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 W tym przykładzie wymaga dodano kod <xref:System.Windows.Forms.Form> i wywołaj metodę utworzony w przykładzie z konstruktora lub innej metody w formularzu. Przykład wymaga również, że obrazy o nazwie `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, i `MyLargeImage2` znajdują się w katalogu głównym dysku C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="F:System.Windows.Forms.View.Details" />
      </Docs>
    </Member>
    <Member MemberName="GetItemAt">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem GetItemAt (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem GetItemAt(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.GetItemAt(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemAt (x As Integer, y As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ GetItemAt(int x, int y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">Współrzędna x lokalizacji do wyszukiwania elementu (wyrażony w współrzędne klienta).</param>
        <param name="y">Współrzędna y lokalizacji, aby wyszukać elementu (wyrażony w współrzędne klienta).</param>
        <summary>Pobiera element w określonej lokalizacji.</summary>
        <returns>A <see cref="T:System.Windows.Forms.ListViewItem" /> reprezentujący element w określonej pozycji. Jeśli nie ma elementu w określonej lokalizacji, metoda zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.GetItemAt%2A> Metoda pozwala określić, który element znajduje się w określonej lokalizacji, w obszarze klienta <xref:System.Windows.Forms.ListView> formantu. Można użyć tej metody, gdy użytkownik kliknie lub kliknie prawym przyciskiem myszy podelementów (gdy <xref:System.Windows.Forms.ListView.View%2A> właściwość jest ustawiona na `View.Details`) i chcesz określić, który element jest właścicielem podelement klikniętej oparte na współrzędne myszy w czasie użytkownik kliknął przycisk myszy .  
  
> [!NOTE]
>  Gdy <xref:System.Windows.Forms.ListView.FullRowSelect%2A> wartość właściwości jest `false`, ta metoda zwraca wartość elementu tylko wtedy, gdy określona lokalizacja znajduje się w granicach elementu nadrzędnego (która jest wyświetlana w pierwszej kolumnie, gdy formant jest w trybie details). Należy ustawić <xref:System.Windows.Forms.ListView.FullRowSelect%2A> właściwości `true` można pobrać elementu przy użyciu tej metody w podanej lokalizacji w granicach podelementów. Można również użyć <xref:System.Windows.Forms.ListView.HitTest%2A> metodę, aby pobrać szczegółowe informacje o elemencie w określonej lokalizacji.  
  
 Zrobić, przeciągnij i upuść położenia elementów w <xref:System.Windows.Forms.ListView>, możesz chcieć użyć <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A?displayProperty=nameWithType> — metoda zamiast <xref:System.Windows.Forms.ListView.GetItemAt%2A> metody. <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A?displayProperty=nameWithType> Metoda znajdzie najbliższego elementu niezależnie od tego, w którym znajduje się wskaźnik myszy. <xref:System.Windows.Forms.ListView.GetItemAt%2A> , Z drugiej strony, zwraca `null` Jeśli nie ma elementu w określonej lokalizacji.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListViewInsertionMark> Klasy jest obsługiwana tylko w systemach Windows XP i Windows Server 2003, gdy wywołuje aplikację <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Windows.Forms.PictureBox> i <xref:System.Windows.Forms.ListView> kontrolki. <xref:System.Windows.Forms.PictureBox> Został zainicjowany przez ustawienie <xref:System.Windows.Forms.PictureBox.BorderStyle%2A?displayProperty=nameWithType> i <xref:System.Windows.Forms.PictureBox.SizeMode%2A?displayProperty=nameWithType> właściwości za pomocą <xref:System.Windows.Forms.BorderStyle> i <xref:System.Windows.Forms.PictureBoxSizeMode> wyliczenia, odpowiednio. <xref:System.Windows.Forms.ListView> Jest wypełniana obrazy z katalogu próbek. <xref:System.Windows.Forms.ListView.GetItemAt%2A> Metoda jest używana w przypadku obsługi <xref:System.Windows.Forms.ListView> formantu <xref:System.Windows.Forms.Control.MouseDown> zdarzenia w celu określenia, czy element jest zaznaczony. Jeśli element jest zaznaczony, program obsługi zdarzeń wyświetla wybrany plik przez ustawienie <xref:System.Windows.Forms.PictureBox.Image%2A?displayProperty=nameWithType> właściwości. Przykład wymaga istnienia znajduje się w katalogu C:\documents and Settings\All Users\Documents\My Pictures\Sample obrazów JPG — pliki. Do uruchomienia tego przykładu, Wklej kod do formularza i wywołanie `InitializePictureBox` i `PopulateListView` metod w Konstruktorze formularza lub `Load` metody. Upewnij się, że wszystkie zdarzenia są skojarzone z swoich programów obsługi zdarzeń.  
  
 [!code-cpp[System.Windows.Forms.ListViewAndPictureBox#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListViewAndPictureBox/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListViewAndPictureBox#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewAndPictureBox/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ListViewAndPictureBox#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewAndPictureBox/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)" />
        <altmember cref="T:System.Windows.Forms.ListViewInsertionMark" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetItemRect">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera prostokąt ograniczający dla elementu w formancie.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetItemRect">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetItemRect (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetItemRect(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.GetItemRect(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemRect (index As Integer) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetItemRect(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks elementu w obrębie <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> których prostokątem chcesz przywrócić.</param>
        <summary>Pobiera prostokąt ograniczający dla określonego elementu w obrębie formantu widoku listy.</summary>
        <returns>A <see cref="T:System.Drawing.Rectangle" /> reprezentujący prostokąt ograniczający określonego <see cref="T:System.Windows.Forms.ListViewItem" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Prostokąt ograniczający zwracane przez tę wersję <xref:System.Windows.Forms.ListView.GetItemRect%2A> metody reprezentuje cały element, w tym ikonę, tekst elementu i podelementu tekstu. Aby określić, określonej części elementu do ograniczenia prostokąta, użyj innych wersji <xref:System.Windows.Forms.ListView.GetItemRect%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName="GetItemRect">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetItemRect (int index, System.Windows.Forms.ItemBoundsPortion portion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetItemRect(int32 index, valuetype System.Windows.Forms.ItemBoundsPortion portion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.GetItemRect(System.Int32,System.Windows.Forms.ItemBoundsPortion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemRect (index As Integer, portion As ItemBoundsPortion) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetItemRect(int index, System::Windows::Forms::ItemBoundsPortion portion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="portion" Type="System.Windows.Forms.ItemBoundsPortion" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks elementu w obrębie <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> których prostokątem chcesz przywrócić.</param>
        <param name="portion">Jeden z <see cref="T:System.Windows.Forms.ItemBoundsPortion" /> wartości, które reprezentuje część <see cref="T:System.Windows.Forms.ListViewItem" /> dla którego można pobrać prostokątem.</param>
        <summary>Pobiera określoną część prostokątem dla określonego elementu w obrębie formantu widoku listy.</summary>
        <returns>A <see cref="T:System.Drawing.Rectangle" /> reprezentujący prostokątem dla określonej części określonego <see cref="T:System.Windows.Forms.ListViewItem" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Prostokąt ograniczający zwracane przez tę wersję <xref:System.Windows.Forms.ListView.GetItemRect%2A> metody reprezentuje tylko części element określony w `portion` parametru. Aby zwrócić prostokątem cały element, należy użyć innych wersji <xref:System.Windows.Forms.ListView.GetItemRect%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="T:System.Windows.Forms.ItemBoundsPortion" />
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public bool GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.GridLines" />
      <MemberSignature Language="VB.NET" Value="Public Property GridLines As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GridLines { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy linie siatki, które pojawiają się między wiersze i kolumny zawierające elementów i podelementów w formancie.</summary>
        <value>
          <see langword="true" /> Jeśli linie siatki, które są rysowane wokół elementów i podelementów; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.GridLines%2A> Właściwości nie obowiązuje, chyba że <xref:System.Windows.Forms.ListView.View%2A> właściwość <xref:System.Windows.Forms.ListView> kontrola jest ustawiona na <xref:System.Windows.Forms.View.Details>. <xref:System.Windows.Forms.ListView.GridLines%2A> Właściwość pozwala wyświetlić wiersze, aby zidentyfikować wierszy i kolumn, które są wyświetlane w <xref:System.Windows.Forms.ListView> kontroli, gdy Wyświetla elementy i ich elementy podrzędne. Linie siatki, które są wyświetlane, nie zapewniają możliwość zmiany rozmiaru wierszy i kolumn jako aplikacji, takich jak program Microsoft Excel. Można zmieniać tylko kolumny, jeśli nagłówki kolumn są wyświetlane wskaźnika myszy z prawej strony, aby zmienić rozmiar kolumny, a następnie klikając i przeciągając aż kolumna jest odpowiedni rozmiar. Funkcja linie siatki służy zapewnienie użytkownika formantu widoczne granice wokół elementów i podelementów.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.ListView> formantu, z których trzy <xref:System.Windows.Forms.ListViewItem> obiekty określone i trzy <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiekty określone dla każdego elementu. W przykładzie jest tworzony także <xref:System.Windows.Forms.ColumnHeader> obiektów, aby wyświetlić elementy podrzędne w widoku details. Dwa <xref:System.Windows.Forms.ImageList> obiekty również są tworzone w przykładzie kodu, aby zapewnić obrazy dla <xref:System.Windows.Forms.ListViewItem> obiektów. Te <xref:System.Windows.Forms.ImageList> obiekty są dodawane do <xref:System.Windows.Forms.ListView.LargeImageList%2A> i <xref:System.Windows.Forms.ListView.SmallImageList%2A> właściwości. W przykładzie użyto następujących właściwości w tworzeniu <xref:System.Windows.Forms.ListView> formantu.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 W tym przykładzie wymaga dodano kod <xref:System.Windows.Forms.Form> i wywołaj metodę utworzony w przykładzie z konstruktora lub innej metody w formularzu. Przykład wymaga również, że obrazy o nazwie `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, i `MyLargeImage2` znajdują się w katalogu głównym dysku C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.View" />
      </Docs>
    </Member>
    <Member MemberName="Groups">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroupCollection Groups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewGroupCollection Groups" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Groups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Groups As ListViewGroupCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewGroupCollection ^ Groups { System::Windows::Forms::ListViewGroupCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListViewGroupCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroupCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see cref="T:System.Windows.Forms.ListViewGroup" /> obiektów przypisany do kontrolki.</summary>
        <value>A <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> zawiera wszystkich grup w <see cref="T:System.Windows.Forms.ListView" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView> Funkcja grupowanie umożliwia tworzenie grup visual logicznie powiązanych <xref:System.Windows.Forms.ListView> elementów. Każda grupa składa się z nagłówka tekstową następuje linii poziomej i elementy przypisane do tej grupy. Można wyrównać tekst nagłówka w lewo, prawo, lub centrum sterowania. Wszystkie grupy przypisane do <xref:System.Windows.Forms.ListView> sterowania są wyświetlane zawsze, gdy <xref:System.Windows.Forms.ListView.View%2A> wartość właściwości jest równa wartości innych niż <xref:System.Windows.Forms.View.List?displayProperty=nameWithType>.  
  
 <xref:System.Windows.Forms.ListView> grupy pomagają użytkownikom wyszukiwanie elementów, których szukają oddzielając elementy w kategoriach przydatne. Można utworzyć kategorii, niezależnie od należy. Jest jednym z podejść typowe grupować elementy, w oparciu o sposób lista jest sortowana. Na przykład można grupować elementy początkowa litera nazwy elementu, gdy lista jest sortowana alfabetycznie lub elementy podrzędne, takie jak typ lub daty, gdy lista jest sortowana przez kliknięcie nagłówka kolumny w widoku details. Eksplorator systemu Windows używa tego typu grupowania.  
  
 Aby używać funkcji grupowania, Dodaj co najmniej jeden <xref:System.Windows.Forms.ListViewGroup> obiekty do <xref:System.Windows.Forms.ListView.Groups%2A> Kolekcja <xref:System.Windows.Forms.ListView> formantu. Ustawianie wyrównania tekstu i nagłówek nagłówka grupy <xref:System.Windows.Forms.ListViewGroup.%23ctor%2A> konstruktora, lub ustawiania ich przy użyciu <xref:System.Windows.Forms.ListViewGroup.Header%2A?displayProperty=nameWithType> i <xref:System.Windows.Forms.ListViewGroup.HeaderAlignment%2A?displayProperty=nameWithType> właściwości.  
  
 Aby tymczasowo wyłączyć funkcję grupowania, ustaw <xref:System.Windows.Forms.ListView.ShowGroups%2A> właściwości `false`.  
  
 Można przypisać elementu do grupy, określając grupę w <xref:System.Windows.Forms.ListViewItem.%23ctor%2A> konstruktora, ustawiając <xref:System.Windows.Forms.ListViewItem.Group%2A?displayProperty=nameWithType> właściwości, lub bezpośrednio, dodając element <xref:System.Windows.Forms.ListViewGroup.Items%2A?displayProperty=nameWithType> kolekcji grupy. Wszystkie elementy powinny zostać przypisane do grup, zanim zostaną one wyświetlone. Wszystkie elementy, które nie są przypisane do grupy będą wyświetlane w domyślnej grupie mającej etykiety nagłówka "DefaultGroup{0}". Domyślna grupa nie jest zawarta w <xref:System.Windows.Forms.ListView.Groups%2A> kolekcji i nie można zmienić. Jest szczególnie przydatna w debugowaniu, aby upewnić się, że wszystkie elementy zostały poprawnie dodane do grupy.  
  
 Element można tylko w jednej grupy naraz. Można zmienić grupy, do której należy dany element, ustawiając <xref:System.Windows.Forms.ListViewItem.Group%2A?displayProperty=nameWithType> właściwości w czasie wykonywania, lub dodając go do <xref:System.Windows.Forms.ListViewGroup.Items%2A?displayProperty=nameWithType> kolekcji innej grupy, która automatycznie usuwa go z poprzedniej grupy.  
  
 Funkcja znacznika wstawiania jest wyłączona podczas korzystania z grup. Jest to spowodowane funkcja grupowania Porządkuje elementy przez członkostwo w grupie, podczas gdy funkcja znacznika wstawiania jest używany z położenia przeciągania i upuszczania w <xref:System.Windows.Forms.ListView> formantu, który już nie kolejność jej elementów.  
  
 <xref:System.Windows.Forms.ListView> wywołuje aplikacji są dostępne tylko w systemach Windows XP i Windows Server 2003 grupy <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> metody. W starszych systemach operacyjnych dowolny kod odnoszących się do grupy nie ma wpływu i grup nie będą wyświetlane. W związku z tym kodu, który jest zależny od funkcji grupowania mogą nie działać poprawnie.  
  
 Możesz chcesz dołączyć kod, który określa, czy dostępna jest funkcja grupowania i zapewniać funkcje alternatywne, gdy jest ona niedostępna. Na przykład można podać alternatywne sortowanie, gdy działających w systemach operacyjnych, które nie obsługują sortowanie według grupy.  
  
 Funkcja grupowania są udostępniane przez tę samą bibliotekę, która udostępnia funkcję kompozycji systemu operacyjnego. Aby sprawdzić dostępność tej biblioteki, należy wywołać <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> przeciążenie metody i przekaż <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> wartość.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.ListView> grupowania funkcji do organizowania elementów przez wartość podelementu w widoku details. Ten formularz grupowania jest podobny do grupowania użyte w Eksploratorze Windows. W tym przykładzie grupy są tworzone dynamicznie. Dla każdej kolumny podelementu jedna grupa jest tworzona dla każdej podelementu unikatowe wartości. Dla kolumny elementu nadrzędnego jedna grupa jest tworzona dla każdej początkowej litery. Kliknięcie nagłówka kolumny sortowania elementów do grup utworzonych dla tej kolumny. Ponowne kliknięcie nagłówka kolumny w tym samym Odwraca kolejność grup.  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
        <altmember cref="T:System.Windows.Forms.ListViewGroupCollection" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="P:System.Windows.Forms.ListView.ShowGroups" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ColumnHeaderStyle HeaderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ColumnHeaderStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderStyle As ColumnHeaderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ColumnHeaderStyle HeaderStyle { System::Windows::Forms::ColumnHeaderStyle get(); void set(System::Windows::Forms::ColumnHeaderStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnHeaderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia styl nagłówka kolumny.</summary>
        <value>Jeden z <see cref="T:System.Windows.Forms.ColumnHeaderStyle" /> wartości. Wartość domyślna to <see cref="F:System.Windows.Forms.ColumnHeaderStyle.Clickable" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.HeaderStyle%2A> Właściwość umożliwia określenie typu nagłówki kolumn do wyświetlenia, gdy <xref:System.Windows.Forms.ListView.View%2A> właściwość <xref:System.Windows.Forms.ListView> kontrola jest ustawiona na <xref:System.Windows.Forms.View.Details> i <xref:System.Windows.Forms.ListView> formant ma <xref:System.Windows.Forms.ColumnHeader> obiekty określone w <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>. <xref:System.Windows.Forms.ColumnHeader> obiekty definiowania kolumn, które są wyświetlane w <xref:System.Windows.Forms.ListView> formantu. Każda kolumna jest używana do wyświetlania informacji podelementu dla każdego elementu w <xref:System.Windows.Forms.ListView>.  
  
 <xref:System.Windows.Forms.ListView.HeaderStyle%2A> Właściwość umożliwia określenie, czy nagłówki kolumn są widoczne, lub jeśli są one widoczne, czy będą one działać jako aktywne przyciski. Jeśli <xref:System.Windows.Forms.ListView.HeaderStyle%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.ColumnHeaderStyle.None?displayProperty=nameWithType>, nagłówki kolumn nie są wyświetlane, mimo że elementów i podelementów z <xref:System.Windows.Forms.ListView> kontroli nadal są rozmieszczone w kolumnach. Jeśli <xref:System.Windows.Forms.ListView.HeaderStyle%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.ColumnHeaderStyle.Clickable?displayProperty=nameWithType>, nagłówki kolumn zachowywać się jak przyciski, które użytkownik może kliknąć do wykonania akcji, takich jak sortowania elementów w <xref:System.Windows.Forms.ListView> sterować przy użyciu elementów w kolumnie klikniętej jako klucza. To zachowanie można zaimplementować w procedurze obsługi dla <xref:System.Windows.Forms.ListView.ColumnClick> zdarzeń. Jeśli <xref:System.Windows.Forms.ListView.HeaderStyle%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.ColumnHeaderStyle.Nonclickable?displayProperty=nameWithType>, nagłówki kolumn są wyświetlane, ale nie można kliknąć.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje <xref:System.Windows.Forms.ListView> który zezwala na zaznaczanie wielu elementów. W przykładzie pokazano ustawienie <xref:System.Windows.Forms.ListView.HideSelection%2A> i <xref:System.Windows.Forms.ListView.HeaderStyle%2A> właściwości. Ilustruje też <xref:System.Windows.Forms.ColumnHeader.Text%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.ColumnHeader.TextAlign%2A?displayProperty=nameWithType> i <xref:System.Windows.Forms.ColumnHeader.Width%2A?displayProperty=nameWithType> właściwości. Aby uruchomić ten przykład, wklej następujący kod do formularza, który zawiera <xref:System.Windows.Forms.ListView> obiektu o nazwie `ListView1` i <xref:System.Windows.Forms.TextBox> o nazwie `TextBox1`. Wywołanie `InitializeListView` metody z Konstruktor elementu form lub <xref:System.Windows.Forms.Form.Load> obsługi zdarzeń.  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Określona wartość nie jest jednym z <see cref="T:System.Windows.Forms.ColumnHeaderStyle" /> wartości.</exception>
        <altmember cref="E:System.Windows.Forms.ListView.ColumnClick" />
        <altmember cref="T:System.Windows.Forms.ColumnHeaderStyle" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="HideSelection">
      <MemberSignature Language="C#" Value="public bool HideSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.HideSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property HideSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HideSelection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy pozostaje wyróżnione wybranego elementu w formancie, gdy formant utraci fokus.</summary>
        <value>
          <see langword="true" /> Jeśli nie ma zaznaczonego elementu podświetlony formant utraci fokus; <see langword="false" /> Jeśli wybrany element jest nadal wyświetlany wyróżnione gdy formant utraci fokus. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ta właściwość jest skonfigurowana `false`, wybrane elementy w <xref:System.Windows.Forms.ListView> kontroli pozostają wyróżnione innym kolorem niż bieżący kolor zaznaczenia określony przez system operacyjny podczas <xref:System.Windows.Forms.ListView> formant utraci fokus. Ta właściwość służy do zachowania elementy wybrane przez użytkownika, które są widoczne, gdy użytkownik kliknie inny formant w formularzu lub przenoszone do innego okna.  
  
> [!NOTE]
>  Jeśli dane z ułatwieniami dostępu aplikacji, zaleca się ustawienie <xref:System.Windows.Forms.ListView.HideSelection%2A> właściwości `false`.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje <xref:System.Windows.Forms.ListView> który zezwala na zaznaczanie wielu elementów. W przykładzie pokazano ustawienie <xref:System.Windows.Forms.ListView.HideSelection%2A> i <xref:System.Windows.Forms.ListView.HeaderStyle%2A> właściwości. Ilustruje też <xref:System.Windows.Forms.ColumnHeader.Text%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.ColumnHeader.TextAlign%2A?displayProperty=nameWithType>, i <xref:System.Windows.Forms.ColumnHeader.Width%2A?displayProperty=nameWithType> właściwości. Aby uruchomić ten przykład, wklej następujący kod do formularza, który zawiera <xref:System.Windows.Forms.ListView> obiektu o nazwie `ListView1` i <xref:System.Windows.Forms.TextBox> o nazwie `TextBox1`. Wywołanie `InitializeListView` metody z Konstruktor elementu form lub <xref:System.Windows.Forms.Form.Load> obsługi zdarzeń.  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTest">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zawiera informacje o elementach, podane x i y współrzędną.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewHitTestInfo HitTest (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewHitTestInfo HitTest(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.HitTest(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewHitTestInfo ^ HitTest(System::Drawing::Point point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewHitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <see cref="T:System.Drawing.Point" /> Na których mają zostać pobrane informacje o elementach. Współrzędne są podawane względem lewego górnego rogu formantu.</param>
        <summary>Zawiera informacje o elementach, danego punktu.</summary>
        <returns>Informacje elementu danego punktu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, aby określić, czy punkt znajduje się w element lub podelementu i gdzie w elemencie punkt znajduje się, takich jak w obszarze etykiety lub obrazu. Jeśli współrzędne znajdują się poza kontrolą zwróconego <xref:System.Windows.Forms.ListViewHitTestInfo> obiekt ma <xref:System.Windows.Forms.ListViewHitTestInfo.Location%2A> właściwości "None"; i <xref:System.Windows.Forms.ListViewHitTestInfo.Item%2A> i <xref:System.Windows.Forms.ListViewHitTestInfo.SubItem%2A> właściwości są ustawione na `null`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Punkt zawiera współrzędne, które jest mniejsza niż 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewHitTestInfo HitTest (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewHitTestInfo HitTest(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.HitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (x As Integer, y As Integer) As ListViewHitTestInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewHitTestInfo ^ HitTest(int x, int y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewHitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">Współrzędna x na których mają zostać pobrane informacje o elementach. Współrzędna jest określana względem lewego górnego rogu formantu.</param>
        <param name="y">Współrzędna y na których mają zostać pobrane informacje o elementach. Współrzędna jest określana względem lewego górnego rogu formantu.</param>
        <summary>Zawiera informacje o elementach, podane współrzędne x i y.</summary>
        <returns>Informacje elementu podane współrzędne x i y.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, aby ustalić, czy punkt znajduje się w element lub podelementu i gdzie w elemencie punkt znajduje się, takich jak w obszarze etykiety lub obrazu. Jeśli współrzędne znajdują się poza kontrolą zwróconego <xref:System.Windows.Forms.ListViewHitTestInfo> obiekt ma <xref:System.Windows.Forms.ListViewHitTestInfo.Location%2A> właściwości "None"; i <xref:System.Windows.Forms.ListViewHitTestInfo.Item%2A> i <xref:System.Windows.Forms.ListViewHitTestInfo.SubItem%2A> właściwości są ustawione na `null`.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, za pomocą <xref:System.Windows.Forms.ListView.HitTest%2A> metodę, aby określić lokalizację zdarzenia myszy w <xref:System.Windows.Forms.ListView>. Aby uruchomić ten przykład, wklej go do formularza systemu Windows, który zawiera <xref:System.Windows.Forms.ListView> o nazwie `listView1` który jest wypełniane przy użyciu elementów. Skojarz <xref:System.Windows.Forms.Control.MouseDown> zdarzenia dla `listView1` z `listView1_MouseDown` metody w tym przykładzie.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Współrzędna y lub x jest mniejsza niż 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="HotTracking">
      <MemberSignature Language="C#" Value="public bool HotTracking { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HotTracking" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.HotTracking" />
      <MemberSignature Language="VB.NET" Value="Public Property HotTracking As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HotTracking { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy tekst elementu lub podelementu ma wygląd hiperłącza, gdy wskaźnik myszy przesuwa się nad go.</summary>
        <value>
          <see langword="true" /> Jeśli tekst elementu ma wygląd hiperłącze, gdy wskaźnik myszy przesuwa się nad w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Włączanie aktywne śledzenie willcause <xref:System.Windows.Forms.ListView.Activation%2A> właściwości należy ustawić <xref:System.Windows.Forms.ItemActivation.OneClick> i <xref:System.Windows.Forms.ListView.HoverSelection%2A> można ustawić dla właściwości `true`. Ponadto Edytowanie etykiet w czasie wykonywania jest niedozwolone podczas aktywne śledzenie jest włączone.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje <xref:System.Windows.Forms.ListView> dostępu z włączoną funkcją śledzenia. Aby uruchomić ten przykład, wklej następujący kod do formularza systemu Windows i wywołanie `InitializeHotTrackingListView` metody z Konstruktor elementu form lub <xref:System.Windows.Forms.Form.Load> obsługi zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HoverSelection">
      <MemberSignature Language="C#" Value="public bool HoverSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HoverSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.HoverSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property HoverSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HoverSelection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy element jest zaznaczony automatycznie, gdy wskaźnik myszy jest nad elementem przez kilka sekund.</summary>
        <value>
          <see langword="true" /> Jeśli element jest automatycznie wybierany gdy wskaźnik myszy jest przesuwany nad w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ta właściwość jest skonfigurowana `true`, użytkownik może wskazywać element <xref:System.Windows.Forms.ListView> sterowania, aby wybrać element. Można wybrać wiele elementów (gdy <xref:System.Windows.Forms.ListView.MultiSelect%2A> właściwość jest ustawiona na wartość true) przez wskazanie do każdego elementu, trzymając wciśnięty klawisz CTRL. Ta funkcja umożliwia zapewniają łatwiejszy metodę dla użytkownika aplikacji do wybierania elementów w <xref:System.Windows.Forms.ListView> formantu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertionMark">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewInsertionMark InsertionMark { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewInsertionMark InsertionMark" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.InsertionMark" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertionMark As ListViewInsertionMark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewInsertionMark ^ InsertionMark { System::Windows::Forms::ListViewInsertionMark ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewInsertionMark</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt używany do określania oczekiwanej lokalizacji, gdy element zostanie przeciągnięty w <see cref="T:System.Windows.Forms.ListView" /> formantu.</summary>
        <value>A <see cref="T:System.Windows.Forms.ListViewInsertionMark" /> obiekt reprezentujący znacznika wstawiania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView> Wstawiania znaczników pozwala wizualnego wskazania oczekiwanej lokalizacji w ramach operacji przeciągania i upuszczania, gdy element zostanie przeciągnięty do nowej pozycji. Ta funkcja działa tylko wtedy, gdy <xref:System.Windows.Forms.ListView.AutoArrange%2A> właściwość jest ustawiona na `true` i kiedy <xref:System.Windows.Forms.ListView> formant nie może sortować elementy automatycznie. Aby zapobiec automatyczne sortowanie <xref:System.Windows.Forms.ListView.Sorting%2A> musi mieć ustawioną właściwość <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> i <xref:System.Windows.Forms.ListView.View%2A> musi mieć ustawioną właściwość <xref:System.Windows.Forms.View.LargeIcon?displayProperty=nameWithType>, <xref:System.Windows.Forms.View.SmallIcon?displayProperty=nameWithType>, lub <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType>. Ponadto funkcja znacznika wstawiania nie mogą być widoczne z <xref:System.Windows.Forms.ListView> funkcja grupowania, ponieważ funkcja grupowania Porządkuje elementy przez członkostwo w grupie.  
  
 <xref:System.Windows.Forms.ListViewInsertionMark> Klasa jest zazwyczaj używana w procedurze obsługi dla <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> lub <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> zdarzeń do zaktualizowania pozycji znaku wstawiania jako element zostanie przeciągnięty. Jest również używany w procedurze obsługi dla <xref:System.Windows.Forms.Control.DragDrop?displayProperty=nameWithType> lub <xref:System.Windows.Forms.Control.MouseUp?displayProperty=nameWithType> zdarzeń, aby wstawić przeciąganego elementu w poprawnej lokalizacji. Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Forms.ListViewInsertionMark> i [porady: wyświetlanie znacznika wstawiania w formancie ListView formularzy systemu Windows](~/docs/framework/winforms/controls/how-to-display-an-insertion-mark-in-a-windows-forms-listview-control.md).  
  
> [!NOTE]
>  Funkcja znacznika wstawiania jest dostępna tylko w systemie Windows XP i Windows Server 2003, gdy wywołuje aplikację <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> metody. W starszych systemach operacyjnych każdy kod związany z znacznika wstawiania nie ma wpływu i znacznika wstawiania nie będą wyświetlane. W związku z tym kodu, który jest zależny od funkcji znacznika wstawiania mogą nie działać poprawnie. Możesz chcesz dołączyć kod, który określa, czy ta funkcja jest dostępna i zapewniać funkcje alternatywne, gdy jest ona niedostępna. Na przykład można pominąć żadnego kodu, który implementuje element przeciągania i upuszczania położenia podczas działających w systemach operacyjnych, które nie obsługują znaczniki wstawiania.  
>   
>  Funkcja znacznika wstawiania są udostępniane przez tę samą bibliotekę, która udostępnia funkcję kompozycji systemu operacyjnego. Aby sprawdzić dostępność tej biblioteki, należy wywołać <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> przeciążenie metody i przekaż <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> wartość.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.ListView> funkcji znacznika wstawiania. W tym przykładzie implementuje przeciągania i upuszczania elementu zmiana kolejności przy użyciu zdarzenia standardowe przeciągania. Pozycja znacznika wstawiania jest aktualizowany w procedurze obsługi dla <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> zdarzeń. W tej obsługi położenia wskaźnika myszy jest porównywany punkt środkowy najbliższego elementu i zostanie użyty wynik, aby określić, czy znacznika wstawiania pojawia się po lewej lub prawej elementu.  
  
 [!code-cpp[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CPP/listviewinsertionmarkexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CS/listviewinsertionmarkexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/VB/listviewinsertionmarkexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewInsertionMark" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Jeden z <see cref="T:System.Windows.Forms.Keys" /> wartości.</param>
        <summary>Określa, czy określony klucz jest regularne klucz wejściowy lub specjalny klucz, który wymaga przetwarzania wstępnego.</summary>
        <returns>
          <see langword="true" /> określony klucz jest kluczem wejściowych regularne; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemActivate">
      <MemberSignature Language="C#" Value="public event EventHandler ItemActivate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ItemActivate" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemActivate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemActivate As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ItemActivate;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy element zostanie aktywowany.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.ItemActivate> Zdarzenie wystąpi, gdy użytkownik aktywuje co najmniej jeden element w <xref:System.Windows.Forms.ListView> formantu. Użytkownik może uaktywnić element z jednym kliknięciem lub kliknij dwukrotnie plik, w zależności od wartości <xref:System.Windows.Forms.ListView.Activation%2A> właściwości, lub za pomocą klawiatury. Z wewnątrz obsługi zdarzeń dla <xref:System.Windows.Forms.ListView.ItemActivate> zdarzeń, możesz odwoływać się do <xref:System.Windows.Forms.ListView.SelectedItems%2A> lub <xref:System.Windows.Forms.ListView.SelectedIndices%2A> właściwości, aby uzyskać dostępu do kolekcji elementów wybranych w <xref:System.Windows.Forms.ListView> ustalenie, elementy, które są aktywowane.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.ListView.ItemActivate> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.ListView> o nazwie `ListView1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.ListView.ItemActivate> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#473](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#473)]
 [!code-vb[System.Windows.Forms.EventExamples#473](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#473)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnItemActivate(System.EventArgs)" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="P:System.Windows.Forms.ListView.Activation" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedItems" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedIndices" />
      </Docs>
    </Member>
    <Member MemberName="ItemCheck">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ItemCheckEventHandler ItemCheck;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ItemCheckEventHandler ItemCheck" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemCheck" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCheck As ItemCheckEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ItemCheckEventHandler ^ ItemCheck;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemCheckEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zmianie stanu kontrolnego elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.CheckBoxes%2A> Właściwość musi być ustawiona na wartość true, aby pola wyboru, aby być wyświetlana obok każdego elementu w <xref:System.Windows.Forms.ListView> formantu. <xref:System.Windows.Forms.ListView.ItemCheck> Po zmianie stanu wyboru elementu, lub gdy wystąpi zdarzenie <xref:System.Windows.Forms.ListView.CheckBoxes%2A> właściwość jest ustawiona na `true`. Można utworzyć programu obsługi zdarzeń dla <xref:System.Windows.Forms.ListView.ItemCheck> zdarzenia w celu wykonywania zadań takich jak zmiana stanu elementu ikony lub innego zadania specyficzne dla aplikacji zawsze element jest wyewidencjonowany w <xref:System.Windows.Forms.ListView> formantu.  
  
> [!NOTE]
>  Jeśli uchwytu okna nie został utworzony podczas <xref:System.Windows.Forms.ListView.ItemCheck> zdarzenie jest zgłaszane, zdarzenie zostanie opóźnione. Po utworzeniu uchwyt okna (gdy formularz jest wyświetlany) żadnego opóźnione <xref:System.Windows.Forms.ListView.ItemCheck> zdarzeń zostanie wygenerowany. Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Forms.Control.HandleCreated>.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje wyewidencjonowany <xref:System.Windows.Forms.ListView> formant, który obsługuje <xref:System.Windows.Forms.ListView.ItemCheck> zdarzeń. W metodzie <xref:System.Windows.Forms.ItemCheckEventArgs.CurrentValue%2A?displayProperty=nameWithType> i <xref:System.Windows.Forms.ItemCheckEventArgs.Index%2A?displayProperty=nameWithType> właściwości, aby pobrać i zgadzają się ceną wybranych elementów menu. Do uruchomienia tego przykładu, wklej następujący kod do formularza zawierających `ListView` o nazwie `ListView1` i `TextBox` o nazwie `Textbox1`. Wywołanie `InititalizeListView` metody z Konstruktor elementu form lub `Load` metody. Upewnij się, że <xref:System.Windows.Forms.ListView.ItemCheck> wydarzenie jest skojarzone z programem obsługi zdarzeń w tym przykładzie.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" />
        <altmember cref="T:System.Windows.Forms.ItemCheckEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ItemChecked">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ItemCheckedEventHandler ItemChecked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ItemCheckedEventHandler ItemChecked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemChecked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemChecked As ItemCheckedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ItemCheckedEventHandler ^ ItemChecked;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemCheckedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zmianie stanu zaznaczenia elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest podobny do <xref:System.Windows.Forms.ListView.ItemCheck> zdarzeń, ale jest wywoływane po sprawdzeniu elementu.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.ListView.ItemChecked> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Innym przykładem zobacz <xref:System.Windows.Forms.ListView.ItemCheck> zdarzeń. Ten kod działa równie dobrze, jeśli program obsługi zdarzeń jest dołączony do <xref:System.Windows.Forms.ListView.ItemChecked> zdarzeń.  
  
 Aby uruchomić ten przykład kodu, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.ListView> o nazwie `ListView1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.ListView.ItemChecked> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#475](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#475)]
 [!code-vb[System.Windows.Forms.EventExamples#475](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#475)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ItemDragEventHandler ItemDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ItemDragEventHandler ItemDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDrag As ItemDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ItemDragEventHandler ^ ItemDrag;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy użytkownik rozpocznie przeciąganie elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.ItemDrag> Zdarzenie wystąpi, gdy użytkownik rozpocznie przeciąganie elementu. Zwykle programu obsługi zdarzeń dla <xref:System.Windows.Forms.ListView.ItemDrag> zdarzeń wykonuje zadanie przeciągania przez wywołanie metody <xref:System.Windows.Forms.Control.DoDragDrop%2A?displayProperty=nameWithType> metody. To zdarzenie służy do wykonywania zadań niezbędnych do przenoszenia elementów do i z aplikacji <xref:System.Windows.Forms.ListView> formantu.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.ListView.ItemDrag> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.ListView> o nazwie `ListView1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.ListView.ItemDrag> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#476](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#476)]
 [!code-vb[System.Windows.Forms.EventExamples#476](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#476)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" />
        <altmember cref="T:System.Windows.Forms.ItemDragEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ItemMouseHover">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ListViewItemMouseHoverEventHandler ItemMouseHover;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ListViewItemMouseHoverEventHandler ItemMouseHover" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemMouseHover" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemMouseHover As ListViewItemMouseHoverEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ListViewItemMouseHoverEventHandler ^ ItemMouseHover;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItemMouseHoverEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy mysz znajduje się nad elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.ListView.ItemMouseHover> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.ListView> o nazwie `ListView1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.ListView.ItemMouseHover> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#477](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#477)]
 [!code-vb[System.Windows.Forms.EventExamples#477](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#477)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.ListViewItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/ListViewItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ListView.ListViewItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::ListViewItemCollection ^ Items { System::Windows::Forms::ListView::ListViewItemCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListViewItemCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+ListViewItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję zawierającą wszystkie elementy w formancie.</summary>
        <value>A <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> zawiera wszystkie elementy w <see cref="T:System.Windows.Forms.ListView" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przy użyciu <xref:System.Windows.Forms.ListView.ListViewItemCollection> zwracane przez tę właściwość, należy można dodać elementy, usuń elementy i uzyskać liczbę elementów. Aby uzyskać więcej informacji o zadaniach wykonanych z elementów w kolekcji, zobacz <xref:System.Windows.Forms.ListView.ListViewItemCollection> klasy tematy dokumentacji.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.ListView> formantu, z których trzy <xref:System.Windows.Forms.ListViewItem> obiekty określone i trzy <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiekty określone dla każdego elementu. W przykładzie jest tworzony także <xref:System.Windows.Forms.ColumnHeader> obiektów, aby wyświetlić elementy podrzędne w widoku details. Dwa <xref:System.Windows.Forms.ImageList> obiekty również są tworzone w przykładzie kodu, aby zapewnić obrazy dla <xref:System.Windows.Forms.ListViewItem> obiektów. Te <xref:System.Windows.Forms.ImageList> obiekty są dodawane do <xref:System.Windows.Forms.ListView.LargeImageList%2A> i <xref:System.Windows.Forms.ListView.SmallImageList%2A> właściwości. W przykładzie użyto następujących właściwości w tworzeniu <xref:System.Windows.Forms.ListView> formantu.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 W tym przykładzie wymaga dodano kod <xref:System.Windows.Forms.Form> i wywołaj metodę utworzony w przykładzie z konstruktora lub innej metody w formularzu. Przykład wymaga również, że obrazy o nazwie `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, i `MyLargeImage2` znajdują się w katalogu głównym dysku C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />
      </Docs>
    </Member>
    <Member MemberName="ItemSelectionChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ListViewItemSelectionChangedEventHandler ItemSelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ListViewItemSelectionChangedEventHandler ItemSelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemSelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemSelectionChanged As ListViewItemSelectionChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ListViewItemSelectionChangedEventHandler ^ ItemSelectionChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItemSelectionChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy stan zaznaczenia elementu zostanie zmieniony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W trybie wirtualnym <xref:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged> zdarzenie wystąpi, gdy zmienia się stan zaznaczenia wielu elementów.  
  
 <xref:System.Windows.Forms.ListView.ItemSelectionChanged> Zdarzenie, czy stan elementu zostanie zmieniony z wybranych do wyłączona lub nie zaznaczone wybrane.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.ListView.ItemSelectionChanged> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.ListView> o nazwie `ListView1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.ListView.ItemSelectionChanged> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#478](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#478)]
 [!code-vb[System.Windows.Forms.EventExamples#478](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#478)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged" />
      </Docs>
    </Member>
    <Member MemberName="LabelEdit">
      <MemberSignature Language="C#" Value="public bool LabelEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LabelEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.LabelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Property LabelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LabelEdit { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy użytkownik może edytować etykiet elementów w formancie.</summary>
        <value>
          <see langword="true" /> Jeśli użytkownik może edytować etykiet elementów w czasie wykonywania. w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Windows.Forms.ListView.LabelEdit%2A> właściwość jest ustawiona na `true`, można zmodyfikować, klikając tekstu elementu, aby go zaznaczyć tekst elementu i klikając tekst elementu ponownie, aby umieścić tekst etykiety w trybie edycji. Użytkownika można zmodyfikować lub zastąpić Etykieta tekstowa elementu. Można użyć <xref:System.Windows.Forms.ListView.BeforeLabelEdit> i <xref:System.Windows.Forms.ListView.AfterLabelEdit> zdarzenia do wykonywania zadań przed i po użytkownik edytuje tekstu elementu. Nie można zmodyfikować tekst elementów podrzędnych, jeśli ta właściwość jest ustawiona na `true`. Aby zmienić tekst elementów podrzędnych, można wyświetlić okno dialogowe użytkownikom ich dwukrotnie podelementów w formancie.  
  
> [!NOTE]
>  Jeśli <xref:System.Windows.Forms.ListView.Activation%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.ItemActivation.OneClick> lub <xref:System.Windows.Forms.ItemActivation.TwoClick>, edytowanie etykiet, nie będą dozwolone niezależnie od wartości <xref:System.Windows.Forms.ListView.LabelEdit%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.ListView> formantu, z których trzy <xref:System.Windows.Forms.ListViewItem> obiekty określone i trzy <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiekty określone dla każdego elementu. W przykładzie jest tworzony także <xref:System.Windows.Forms.ColumnHeader> obiektów, aby wyświetlić elementy podrzędne w widoku details. Dwa <xref:System.Windows.Forms.ImageList> obiekty również są tworzone w przykładzie kodu, aby zapewnić obrazy dla <xref:System.Windows.Forms.ListViewItem> obiektów. Te <xref:System.Windows.Forms.ImageList> obiekty są dodawane do <xref:System.Windows.Forms.ListView.LargeImageList%2A> i <xref:System.Windows.Forms.ListView.SmallImageList%2A> właściwości. W przykładzie użyto następujących właściwości w tworzeniu <xref:System.Windows.Forms.ListView> formantu.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 W tym przykładzie wymaga dodano kod <xref:System.Windows.Forms.Form> i wywołaj metodę utworzony w przykładzie z konstruktora lub innej metody w formularzu. Przykład wymaga również, że obrazy o nazwie `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, i `MyLargeImage2` znajdują się w katalogu głównym dysku C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
        <altmember cref="E:System.Windows.Forms.ListView.AfterLabelEdit" />
      </Docs>
    </Member>
    <Member MemberName="LabelWrap">
      <MemberSignature Language="C#" Value="public bool LabelWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LabelWrap" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.LabelWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property LabelWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LabelWrap { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy etykiety elementów być zawijany, gdy elementy są wyświetlane w formancie jako ikony.</summary>
        <value>
          <see langword="true" /> Jeśli zawijanie etykiety elementów, gdy elementy są wyświetlane jako ikony; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Windows.Forms.ListView.LabelWrap%2A> właściwość jest ustawiona na `true`, tekst elementu jest zawijany do następnego wiersza tekstu, w razie potrzeby. Jeśli tekst jest dłuższy niż dwóch wierszy tekstu, tekst jest obcinana. Jeśli użytkownik wybierze elementu, jest wyświetlany tekst elementu. Jeśli <xref:System.Windows.Forms.ListView.LabelWrap%2A> właściwość jest ustawiona na `false`, cały tekst elementu jest wyświetlany w jednym wierszu. Tekst cały element jest wyświetlany podczas <xref:System.Windows.Forms.ListView.LabelWrap%2A> ma ustawioną wartość `false`. Ta właściwość jest tylko do użycia podczas <xref:System.Windows.Forms.ListView.View%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.View.LargeIcon> lub <xref:System.Windows.Forms.View.SmallIcon>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.View" />
      </Docs>
    </Member>
    <Member MemberName="LargeImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList LargeImageList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList LargeImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.LargeImageList" />
      <MemberSignature Language="VB.NET" Value="Public Property LargeImageList As ImageList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageList ^ LargeImageList { System::Windows::Forms::ImageList ^ get(); void set(System::Windows::Forms::ImageList ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Forms.ImageList" /> używany podczas wyświetlania elementów jako duże ikony w formancie.</summary>
        <value>
          <see cref="T:System.Windows.Forms.ImageList" /> Zawierający ikony do użycia podczas <see cref="P:System.Windows.Forms.ListView.View" /> właściwość jest ustawiona na <see cref="F:System.Windows.Forms.View.LargeIcon" />. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.LargeImageList%2A> Właściwość umożliwia określenie <xref:System.Windows.Forms.ImageList> obiekt, który zawiera ikony używane przy wyświetlaniu elementów z dużych ikon (gdy <xref:System.Windows.Forms.ListView.View%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.View.LargeIcon>). <xref:System.Windows.Forms.ListView> Formant może akceptować format grafiki <xref:System.Windows.Forms.ImageList> sterowanie obsługuje podczas wyświetlania ikon. <xref:System.Windows.Forms.ListView> Formant nie jest ograniczona do pliki ICO. Raz <xref:System.Windows.Forms.ImageList> jest przypisany do <xref:System.Windows.Forms.ListView.LargeImageList%2A> właściwości, można ustawić <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> właściwości każdego <xref:System.Windows.Forms.ListViewItem> w <xref:System.Windows.Forms.ListView> formantu indeks odpowiedni obraz w <xref:System.Windows.Forms.ImageList>. Rozmiar ikon dla <xref:System.Windows.Forms.ListView.LargeImageList%2A> jest określona przez <xref:System.Windows.Forms.ImageList.ImageSize%2A>.  
  
 Ponieważ dla można określić tylko jeden indeks <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A?displayProperty=nameWithType> właściwość <xref:System.Windows.Forms.ImageList> obiekty określone w <xref:System.Windows.Forms.ListView.LargeImageList%2A> i <xref:System.Windows.Forms.ListView.SmallImageList%2A> właściwości powinny mieć tej samej pozycji indeksu dla obrazów do wyświetlenia. Na przykład jeśli <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> właściwość <xref:System.Windows.Forms.ListViewItem> jest ustawiony na wartość 0, obrazów dla ikon małe i duże powinny być w tej samej pozycji indeksu w <xref:System.Windows.Forms.ImageList> obiekty określone w <xref:System.Windows.Forms.ListView.LargeImageList%2A> i <xref:System.Windows.Forms.ListView.SmallImageList%2A> właściwości.  
  
> [!NOTE]
>  Gdy obrazy są określane za pomocą kluczy, nadal konieczne umieść małych i dużych wersje obrazu w tej samej lokalizacji indeksu w swoich listach odpowiedniego obrazu. Podczas przełączania się między widokami, lokalizacji indeksu obrazu na jednej liście jest używana do lokalizowania obrazu na liście inne, niezależnie od tego, podana wartość klucza.  
  
 Aby ustawić <xref:System.Windows.Forms.ImageList> używany podczas wyświetlania elementów z małych ikon (wszystkie tryby wyświetlania innych niż <xref:System.Windows.Forms.View.LargeIcon>), użyj <xref:System.Windows.Forms.ListView.SmallImageList%2A> właściwości. Jeśli chcesz użyć obrazy, aby wyświetlić stan elementu, użyj <xref:System.Windows.Forms.ListView.StateImageList%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.ListView> formantu, z których trzy <xref:System.Windows.Forms.ListViewItem> obiekty określone i trzy <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiekty określone dla każdego elementu. W przykładzie jest tworzony także <xref:System.Windows.Forms.ColumnHeader> obiektów, aby wyświetlić elementy podrzędne w widoku details. Dwa <xref:System.Windows.Forms.ImageList> obiekty również są tworzone w przykładzie kodu, aby zapewnić obrazy dla <xref:System.Windows.Forms.ListViewItem> obiektów. Te <xref:System.Windows.Forms.ImageList> obiekty są dodawane do <xref:System.Windows.Forms.ListView.LargeImageList%2A> i <xref:System.Windows.Forms.ListView.SmallImageList%2A> właściwości. W przykładzie użyto następujących właściwości w tworzeniu <xref:System.Windows.Forms.ListView> formantu.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 W tym przykładzie wymaga dodano kod <xref:System.Windows.Forms.Form> i wywołaj metodę utworzony w przykładzie z konstruktora lub innej metody w formularzu. Przykład wymaga również, że obrazy o nazwie `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, i `MyLargeImage2` znajdują się w katalogu głównym dysku C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.SmallImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.StateImageList" />
      </Docs>
    </Member>
    <Member MemberName="ListViewItemSorter">
      <MemberSignature Language="C#" Value="public System.Collections.IComparer ListViewItemSorter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IComparer ListViewItemSorter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemSorter" />
      <MemberSignature Language="VB.NET" Value="Public Property ListViewItemSorter As IComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IComparer ^ ListViewItemSorter { System::Collections::IComparer ^ get(); void set(System::Collections::IComparer ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia moduł porównujący sortowania dla formantu.</summary>
        <value>
          <see cref="T:System.Collections.IComparer" /> Reprezentujący porównujący dla formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> Właściwości pozwala na określenie obiektu, który wykonuje sortowanie elementów w <xref:System.Windows.Forms.ListView> decyduje o <xref:System.Windows.Forms.ListView.Sort%2A> metoda jest wywoływana lub gdy elementy są dodawane do listy. Należy pamiętać, że elementy nie są automatycznie sortowane podczas zmiany ich tekst etykiety.  
  
 Określony obiekt musi być wystąpieniem klasy, która implementuje <xref:System.Collections.IComparer> interfejs, który zawiera tylko jedną metodę o nazwie <xref:System.Collections.Comparer.Compare%2A?displayProperty=nameWithType>.  
  
 Ta właściwość służy do zapewnienia sortowanie niestandardowe, na przykład kliknięcie nagłówka kolumny w widoku szczegółów. W tym celu należy utworzyć klasę, która implementuje <xref:System.Collections.IComparer> interfejsu i zawiera konstruktora akceptującego indeksu, aby sortować według kolumny. Następnie można wdrożyć program obsługi <xref:System.Windows.Forms.ListView.ColumnClick> zdarzeń, która tworzy wystąpienie tej klasy przy użyciu indeksu klikniętej kolumny. Podczas ustawiania <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> właściwości do nowego wystąpienia <xref:System.Windows.Forms.ListView> kontroli mają być automatycznie sortowane przy użyciu określonego obiektu. Kolejne wywołania <xref:System.Windows.Forms.ListView.Sort%2A> metody użyć tego samego obiektu.  
  
> [!NOTE]
>  Jeśli ustawisz wartość <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> właściwość <xref:System.Windows.Forms.ListView.Sort%2A> metoda jest wywoływana automatycznie.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy formularz zawierający <xref:System.Windows.Forms.ListView> kontroli ręcznie sortujące elementy, gdy kolumna w <xref:System.Windows.Forms.ListView> formant zostanie kliknięty. W przykładzie zdefiniowano klasę o nazwie `ListViewItemComparer` implementującej <xref:System.Collections.IComparer?displayProperty=nameWithType> interfejsu, który wykonuje <xref:System.Windows.Forms.ListViewItem> porównania. W przykładzie jest tworzony wystąpienia `ListViewItemComparer` i używa jej do ustawienia <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> właściwość <xref:System.Windows.Forms.ListView> formantu. <xref:System.Windows.Forms.ListView.Sort%2A> Wywołanie metody <xref:System.Windows.Forms.ListView.ColumnClick> program obsługi zdarzeń używa metody zdefiniowane w `ListViewItemComparer` do wykonania sortowania pozycji, na podstawie kolumny, która zostanie kliknięty.  
  
 [!code-cpp[ListView.ColumnClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.ColumnClick/CPP/listviewsort1.cpp#1)]
 [!code-csharp[ListView.ColumnClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.ColumnClick/CS/listviewsort1.cs#1)]
 [!code-vb[ListView.ColumnClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.ColumnClick/VB/listviewsort1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="E:System.Windows.Forms.ListView.ColumnClick" />
      </Docs>
    </Member>
    <Member MemberName="MultiSelect">
      <MemberSignature Language="C#" Value="public bool MultiSelect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MultiSelect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.MultiSelect" />
      <MemberSignature Language="VB.NET" Value="Public Property MultiSelect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MultiSelect { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy można wybierać wielu elementów.</summary>
        <value>
          <see langword="true" /> Jeśli wiele elementów w formancie można wybrać w tym samym czasie; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Windows.Forms.ListView.MultiSelect%2A> właściwość jest ustawiona na `true`, można wybierać wielu elementów w <xref:System.Windows.Forms.ListView> formantu. Aby zaznaczyć wiele elementów, użytkownik musi przytrzymaj klawisz CTRL podczas klikania elementów do wyboru. Klikając pierwszy element, aby zaznaczyć, a następnie, trzymając naciśnięty klawisz SHIFT, klikając przycisk Wybierz ostatni element można wybrać kolejnych elementów. Wiele funkcji wyboru umożliwia wybranie wielu elementów w <xref:System.Windows.Forms.ListView> kontroli i wykonaj operację na wszystkich wybranych elementów. Na przykład użytkownik może wybrać wiele elementów i kliknij prawym przyciskiem myszy wybrany element, aby wyświetlić menu skrótów, które wyświetla zestaw zadań, które można wykonywać na wybranych elementach.  
  
 Aby określić, które elementy są zaznaczone w <xref:System.Windows.Forms.ListView> kontrolować, użyj <xref:System.Windows.Forms.ListView.SelectedItems%2A> właściwości. <xref:System.Windows.Forms.ListView.SelectedItems%2A> Właściwości umożliwia dostęp do <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection> zawierający listę wybranych elementów. Jeśli chcesz pozycji indeksu <xref:System.Windows.Forms.ListView.ListViewItemCollection> zamiast elementów, możesz użyć <xref:System.Windows.Forms.ListView.SelectedIndices%2A> właściwości, aby uzyskać dostęp do <xref:System.Windows.Forms.ListView.SelectedIndexCollection>.  
  
 Jeśli nie chcesz zezwolić wielokrotny w <xref:System.Windows.Forms.ListView>, ale mimo to chcesz zaoferować użytkownikowi sposób dla wielu elementów do wyboru, pola wyboru można wyświetlić, ustawiając <xref:System.Windows.Forms.ListView.CheckBoxes%2A> właściwości `true`.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje <xref:System.Windows.Forms.ListView> który zezwala na zaznaczanie wielu elementów. W przykładzie pokazano ustawienie <xref:System.Windows.Forms.ListView.HideSelection%2A> i <xref:System.Windows.Forms.ListView.HeaderStyle%2A> właściwości. Aby uruchomić ten przykład, wklej następujący kod do formularza, który zawiera <xref:System.Windows.Forms.ListView> obiektu o nazwie `ListView1` i <xref:System.Windows.Forms.TextBox> o nazwie `TextBox1`. Wywołanie `InitializeListView` metody z Konstruktor elementu form lub `Load` metody.  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.SelectedItems" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedIndices" />
        <altmember cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" />
        <altmember cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckBoxes" />
      </Docs>
    </Member>
    <Member MemberName="OnAfterLabelEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterLabelEdit (System.Windows.Forms.LabelEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterLabelEdit(class System.Windows.Forms.LabelEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterLabelEdit (e As LabelEditEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterLabelEdit(System::Windows::Forms::LabelEditEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.LabelEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.LabelEditEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.ListView.AfterLabelEdit" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.ListView.OnAfterLabelEdit%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.ListView.AfterLabelEdit> zdarzenie, aby ograniczyć nowo edytowanych etykiety znaków alfabetu. W przykładzie użyto <xref:System.Text.ASCIIEncoding> klasę, aby otrzymać kod znaku ASCII każdego znaku nowej etykiety. Jeśli znak przypada między kodów ASCII, które reprezentują liczb, nowej etykiety nie można zastosować do elementu. W tym przykładzie wymaga się, że utworzono <xref:System.Windows.Forms.ListView> kontrolki w formularzu i elementy dodane do niego. Przykład wymaga również, że nawiązano połączenie <xref:System.Windows.Forms.ListView.AfterLabelEdit> zdarzenia w celu obsługi zdarzeń zdefiniowanych w przykładowym kodzie. Aby można było używać <xref:System.Text.ASCIIEncoding> klasy, musi zawierać plik <xref:System.Text> przestrzeni nazw.  
  
 [!code-cpp[ListView.AfterLabelEdit#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.AfterLabelEdit/CPP/form1.cpp#1)]
 [!code-csharp[ListView.AfterLabelEdit#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.AfterLabelEdit/CS/form1.cs#1)]
 [!code-vb[ListView.AfterLabelEdit#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.AfterLabelEdit/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.ListView.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.ListView.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.ListView.AfterLabelEdit" />
        <altmember cref="T:System.Windows.Forms.LabelEditEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnBackgroundImageChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackgroundImageChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackgroundImageChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnBackgroundImageChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBackgroundImageChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBackgroundImageChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.ListView.OnBackgroundImageChanged%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.ListView.OnBackgroundImageChanged(System.EventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.ListView.OnBackgroundImageChanged(System.EventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnBeforeLabelEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeLabelEdit (System.Windows.Forms.LabelEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeLabelEdit(class System.Windows.Forms.LabelEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeLabelEdit (e As LabelEditEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeLabelEdit(System::Windows::Forms::LabelEditEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.LabelEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.LabelEditEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.ListView.OnBeforeLabelEdit%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.ListView.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.ListView.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
        <altmember cref="T:System.Windows.Forms.LabelEditEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnCacheVirtualItems">
      <MemberSignature Language="C#" Value="protected virtual void OnCacheVirtualItems (System.Windows.Forms.CacheVirtualItemsEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCacheVirtualItems(class System.Windows.Forms.CacheVirtualItemsEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnCacheVirtualItems(System.Windows.Forms.CacheVirtualItemsEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCacheVirtualItems (e As CacheVirtualItemsEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCacheVirtualItems(System::Windows::Forms::CacheVirtualItemsEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.CacheVirtualItemsEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.CacheVirtualItemsEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.ListView.CacheVirtualItems" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.ListView.OnCacheVirtualItems%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.ListView.OnCacheVirtualItems(System.Windows.Forms.CacheVirtualItemsEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.ListView.OnCacheVirtualItems(System.Windows.Forms.CacheVirtualItemsEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnColumnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnClick (System.Windows.Forms.ColumnClickEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnClick(class System.Windows.Forms.ColumnClickEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnClick (e As ColumnClickEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnClick(System::Windows::Forms::ColumnClickEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ColumnClickEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.ColumnClickEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.ListView.ColumnClick" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.ListView.OnColumnClick%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy formularz zawierający <xref:System.Windows.Forms.ListView> kontroli ręcznie sortujące elementy, gdy kolumna w <xref:System.Windows.Forms.ListView> formant zostanie kliknięty. W przykładzie zdefiniowano klasę o nazwie `ListViewItemComparer` implementującej <xref:System.Collections.IComparer?displayProperty=nameWithType> interfejsu, który wykonuje <xref:System.Windows.Forms.ListViewItem> porównania. W przykładzie jest tworzony wystąpienia `ListViewItemComparer` i używa jej do ustawienia <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> właściwość <xref:System.Windows.Forms.ListView> formantu. <xref:System.Windows.Forms.ListView.Sort%2A> Wywołanie metody <xref:System.Windows.Forms.ListView.ColumnClick> program obsługi zdarzeń używa metody zdefiniowane w `ListViewItemComparer` do wykonania sortowania pozycji, na podstawie kolumny, która zostanie kliknięty.  
  
 [!code-cpp[ListView.ColumnClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.ColumnClick/CPP/listviewsort1.cpp#1)]
 [!code-csharp[ListView.ColumnClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.ColumnClick/CS/listviewsort1.cs#1)]
 [!code-vb[ListView.ColumnClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.ColumnClick/VB/listviewsort1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.ListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.ListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.ListView.ColumnClick" />
        <altmember cref="T:System.Windows.Forms.ColumnClickEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnColumnReordered">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnReordered (System.Windows.Forms.ColumnReorderedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnReordered(class System.Windows.Forms.ColumnReorderedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnColumnReordered(System.Windows.Forms.ColumnReorderedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnReordered (e As ColumnReorderedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnReordered(System::Windows::Forms::ColumnReorderedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ColumnReorderedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.ColumnReorderedEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.ListView.ColumnReordered" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.ListView.OnColumnReordered%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.ListView.OnColumnReordered(System.Windows.Forms.ColumnReorderedEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.ListView.OnColumnReordered(System.Windows.Forms.ColumnReorderedEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnColumnWidthChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnWidthChanged (System.Windows.Forms.ColumnWidthChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnWidthChanged(class System.Windows.Forms.ColumnWidthChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnColumnWidthChanged(System.Windows.Forms.ColumnWidthChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnWidthChanged (e As ColumnWidthChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnWidthChanged(System::Windows::Forms::ColumnWidthChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ColumnWidthChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.ColumnWidthChangedEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.ListView.ColumnWidthChanged" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.ListView.OnColumnWidthChanged%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.ListView.OnColumnWidthChanged(System.Windows.Forms.ColumnWidthChangedEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.ListView.OnColumnWidthChanged(System.Windows.Forms.ColumnWidthChangedEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnColumnWidthChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnWidthChanging (System.Windows.Forms.ColumnWidthChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnWidthChanging(class System.Windows.Forms.ColumnWidthChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnColumnWidthChanging(System.Windows.Forms.ColumnWidthChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnWidthChanging (e As ColumnWidthChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnWidthChanging(System::Windows::Forms::ColumnWidthChangingEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ColumnWidthChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.ColumnWidthChangingEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.ListView.ColumnWidthChanging" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.ColumnWidthChanging> Zdarzeń nie wystąpi, jeśli pełna okna funkcja przeciągania, opcję "Pokaż zawartość okna podczas przeciągania" jest wyłączona.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.ListView.OnColumnWidthChanging%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.ListView.OnColumnWidthChanging(System.Windows.Forms.ColumnWidthChangingEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.ListView.OnColumnWidthChanging(System.Windows.Forms.ColumnWidthChangingEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDrawColumnHeader">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawColumnHeader (System.Windows.Forms.DrawListViewColumnHeaderEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawColumnHeader(class System.Windows.Forms.DrawListViewColumnHeaderEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnDrawColumnHeader(System.Windows.Forms.DrawListViewColumnHeaderEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawColumnHeader (e As DrawListViewColumnHeaderEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawColumnHeader(System::Windows::Forms::DrawListViewColumnHeaderEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawListViewColumnHeaderEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.DrawListViewColumnHeaderEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.ListView.DrawColumnHeader" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.ListView.OnDrawColumnHeader%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.ListView.OnDrawColumnHeader(System.Windows.Forms.DrawListViewColumnHeaderEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.ListView.OnDrawColumnHeader(System.Windows.Forms.DrawListViewColumnHeaderEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDrawItem">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawItem (System.Windows.Forms.DrawListViewItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawItem(class System.Windows.Forms.DrawListViewItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawItem (e As DrawListViewItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawItem(System::Windows::Forms::DrawListViewItemEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawListViewItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.DrawListViewItemEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.ListView.DrawItem" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.ListView.OnDrawItem%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.ListView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.ListView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.DrawListViewItemEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnDrawSubItem">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawSubItem (System.Windows.Forms.DrawListViewSubItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawSubItem(class System.Windows.Forms.DrawListViewSubItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnDrawSubItem(System.Windows.Forms.DrawListViewSubItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawSubItem (e As DrawListViewSubItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawSubItem(System::Windows::Forms::DrawListViewSubItemEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawListViewSubItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.DrawListViewSubItemEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.ListView.DrawSubItem" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.ListView.OnDrawSubItem%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.ListView.OnDrawSubItem(System.Windows.Forms.DrawListViewSubItemEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.ListView.OnDrawSubItem(System.Windows.Forms.DrawListViewSubItemEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DrawListViewSubItemEventArgs" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see langword="FontChanged" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.Control.HandleCreated" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemActivate">
      <MemberSignature Language="C#" Value="protected virtual void OnItemActivate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemActivate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemActivate(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemActivate (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemActivate(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.ListView.ItemActivate" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.ListView.OnItemActivate%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.ListView.OnItemActivate(System.EventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.ListView.OnItemActivate(System.EventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.ListView.ItemActivate" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCheck">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCheck (System.Windows.Forms.ItemCheckEventArgs ice);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCheck(class System.Windows.Forms.ItemCheckEventArgs ice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCheck (ice As ItemCheckEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCheck(System::Windows::Forms::ItemCheckEventArgs ^ ice);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ice" Type="System.Windows.Forms.ItemCheckEventArgs" />
      </Parameters>
      <Docs>
        <param name="ice">
          <see cref="T:System.Windows.Forms.ItemCheckEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.ListView.ItemCheck" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.ListView.OnItemCheck%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.ListView.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.ListView.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.ListView.ItemCheck" />
        <altmember cref="T:System.Windows.Forms.ItemCheckEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemChecked">
      <MemberSignature Language="C#" Value="protected virtual void OnItemChecked (System.Windows.Forms.ItemCheckedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemChecked(class System.Windows.Forms.ItemCheckedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemChecked(System.Windows.Forms.ItemCheckedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemChecked (e As ItemCheckedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemChecked(System::Windows::Forms::ItemCheckedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ItemCheckedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.ItemCheckedEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.ListView.ItemChecked" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.ListView.OnItemChecked%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.ListView.OnItemChecked(System.Windows.Forms.ItemCheckedEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.ListView.OnItemChecked(System.Windows.Forms.ItemCheckedEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDrag (System.Windows.Forms.ItemDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDrag(class System.Windows.Forms.ItemDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDrag (e As ItemDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDrag(System::Windows::Forms::ItemDragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ItemDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.ItemDragEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.ListView.ItemDrag" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.ListView.OnItemDrag%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.ListView.ItemDrag" />
        <altmember cref="T:System.Windows.Forms.ItemDragEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemMouseHover">
      <MemberSignature Language="C#" Value="protected virtual void OnItemMouseHover (System.Windows.Forms.ListViewItemMouseHoverEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemMouseHover(class System.Windows.Forms.ListViewItemMouseHoverEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemMouseHover(System.Windows.Forms.ListViewItemMouseHoverEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemMouseHover (e As ListViewItemMouseHoverEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemMouseHover(System::Windows::Forms::ListViewItemMouseHoverEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ListViewItemMouseHoverEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.ListViewItemMouseHoverEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.ListView.ItemMouseHover" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.ListView.OnItemMouseHover%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.ListView.OnItemMouseHover(System.Windows.Forms.ListViewItemMouseHoverEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.ListView.OnItemMouseHover(System.Windows.Forms.ListViewItemMouseHoverEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemSelectionChanged (System.Windows.Forms.ListViewItemSelectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemSelectionChanged(class System.Windows.Forms.ListViewItemSelectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemSelectionChanged(System.Windows.Forms.ListViewItemSelectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemSelectionChanged (e As ListViewItemSelectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemSelectionChanged(System::Windows::Forms::ListViewItemSelectionChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ListViewItemSelectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.ListViewItemSelectionChangedEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.ListView.ItemSelectionChanged" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.ListView.OnItemSelectionChanged%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.ListView.OnItemSelectionChanged(System.Windows.Forms.ListViewItemSelectionChangedEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.ListView.OnItemSelectionChanged(System.Windows.Forms.ListViewItemSelectionChangedEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseHover">
      <MemberSignature Language="C#" Value="protected override void OnMouseHover (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseHover(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnMouseHover(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseHover (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseHover(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.Control.MouseHover" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Windows.Forms.ListView.OnMouseHover%2A> metoda jest wywoływana, gdy wskaźnik myszy jest umieszczony nad <xref:System.Windows.Forms.ListViewItem>, wywołuje metodę <xref:System.Windows.Forms.ListView.ItemMouseHover> zdarzeń.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.ListView.OnMouseHover%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.ListView.OnMouseHover(System.EventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.ListView.OnMouseHover(System.EventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.Control.MouseLeave" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnParentChanged">
      <MemberSignature Language="C#" Value="protected override void OnParentChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnParentChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnParentChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnParentChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnParentChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.Control.ParentChanged" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResize">
      <MemberSignature Language="C#" Value="protected override void OnResize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnResize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnResize(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnResize (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnResize(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.Control.Resize" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRetrieveVirtualItem">
      <MemberSignature Language="C#" Value="protected virtual void OnRetrieveVirtualItem (System.Windows.Forms.RetrieveVirtualItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRetrieveVirtualItem(class System.Windows.Forms.RetrieveVirtualItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnRetrieveVirtualItem(System.Windows.Forms.RetrieveVirtualItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRetrieveVirtualItem (e As RetrieveVirtualItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRetrieveVirtualItem(System::Windows::Forms::RetrieveVirtualItemEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.RetrieveVirtualItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.RetrieveVirtualItemEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.ListView.OnRetrieveVirtualItem%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.ListView.OnRetrieveVirtualItem(System.Windows.Forms.RetrieveVirtualItemEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.ListView.OnRetrieveVirtualItem(System.Windows.Forms.RetrieveVirtualItemEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRightToLeftLayoutChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRightToLeftLayoutChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnRightToLeftLayoutChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRightToLeftLayoutChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRightToLeftLayoutChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.ListView.RightToLeftLayoutChanged" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.ListView.OnRightToLeftLayoutChanged%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.ListView.OnRightToLeftLayoutChanged(System.EventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.ListView.OnRightToLeftLayoutChanged(System.EventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSearchForVirtualItem">
      <MemberSignature Language="C#" Value="protected virtual void OnSearchForVirtualItem (System.Windows.Forms.SearchForVirtualItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSearchForVirtualItem(class System.Windows.Forms.SearchForVirtualItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnSearchForVirtualItem(System.Windows.Forms.SearchForVirtualItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSearchForVirtualItem (e As SearchForVirtualItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSearchForVirtualItem(System::Windows::Forms::SearchForVirtualItemEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.SearchForVirtualItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.SearchForVirtualItemEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.ListView.SearchForVirtualItem" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.ListView.OnSearchForVirtualItem%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.ListView.OnSearchForVirtualItem(System.Windows.Forms.SearchForVirtualItemEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.ListView.OnSearchForVirtualItem(System.Windows.Forms.SearchForVirtualItemEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnSelectedIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedIndexChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.ListView.SelectedIndexChanged" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.ListView.OnSelectedIndexChanged%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.ListView.OnSelectedIndexChanged(System.EventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.ListView.OnSelectedIndexChanged(System.EventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.ListView.SelectedIndexChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnSystemColorsChanged">
      <MemberSignature Language="C#" Value="protected override void OnSystemColorsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSystemColorsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnSystemColorsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSystemColorsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSystemColorsChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.Control.SystemColorsChanged" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVirtualItemsSelectionRangeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnVirtualItemsSelectionRangeChanged (System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnVirtualItemsSelectionRangeChanged(class System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged(System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnVirtualItemsSelectionRangeChanged (e As ListViewVirtualItemsSelectionRangeChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnVirtualItemsSelectionRangeChanged(System::Windows::Forms::ListViewVirtualItemsSelectionRangeChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged(System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged(System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OwnerDraw">
      <MemberSignature Language="C#" Value="public bool OwnerDraw { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OwnerDraw" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.OwnerDraw" />
      <MemberSignature Language="VB.NET" Value="Public Property OwnerDraw As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OwnerDraw { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą czy <see cref="T:System.Windows.Forms.ListView" /> kontroli jest rysowany przez system operacyjny lub przez kod, który podasz.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Windows.Forms.ListView" /> kontroli jest rysowany przez kod, który można podać; <see langword="false" /> Jeśli <see cref="T:System.Windows.Forms.ListView" /> kontroli jest rysowany przez system operacyjny. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.Forms.ListView> formant jest zwykle rysowane przez system operacyjny. Aby dostosować wygląd <xref:System.Windows.Forms.ListView> zestaw elementów podrzędnych i nagłówków kolumn <xref:System.Windows.Forms.ListView.OwnerDraw%2A> właściwości `true` i zapewnienia obsługi dla co najmniej jednego z następujących zdarzeń: <xref:System.Windows.Forms.ListView.DrawItem>, <xref:System.Windows.Forms.ListView.DrawSubItem>, <xref:System.Windows.Forms.ListView.DrawColumnHeader>. Jest to Rysowanie przez właściciela. Gdy <xref:System.Windows.Forms.ListView.View%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>, wszystkie trzy zdarzenia występują; w przeciwnym razie tylko <xref:System.Windows.Forms.ListView.DrawItem> zdarzenie.  
  
> [!NOTE]
>  Informacje podelementu zwykle pojawiają się w widoku tile, a także wyświetlić szczegółowe informacje, ale w widoku tile musi zostać narysowany programu obsługi dla <xref:System.Windows.Forms.ListView.DrawItem> zdarzeń. <xref:System.Windows.Forms.ListView.DrawSubItem> Zdarzenie nie występuje na wszystkie elementy podrzędne, dla którego nie <xref:System.Windows.Forms.ColumnHeader> obiekt został dodany do <xref:System.Windows.Forms.ListView.Columns%2A> kolekcji. Należy zauważyć, że pierwszy podelementu każdego <xref:System.Windows.Forms.ListViewItem> obiekt reprezentuje elementu nadrzędnego i jest wyświetlany w pierwszej kolumnie.  
  
 W widoku szczegółów może obsłużyć <xref:System.Windows.Forms.ListView.DrawItem> zdarzeń do rysowania wspólne elementy, aby wszystkie elementy podrzędne, takie jak tło i obsługi <xref:System.Windows.Forms.ListView.DrawSubItem> zdarzeń, aby narysować elementy na poszczególne elementy podrzędne, takie jak wartości tekstowe. Możesz także rysować wszystkie elementy <xref:System.Windows.Forms.ListView> kontrolować za pomocą tylko jednego z dwóch zdarzeń, chociaż może to być mniej wygodne. Aby narysować nagłówków kolumn w widoku szczegółów, musi obsługiwać <xref:System.Windows.Forms.ListView.DrawColumnHeader> zdarzeń.  
  
> [!NOTE]
>  Aby uniknąć problemów z migotania grafiki, gdy właściciel rysowania, zastąpić <xref:System.Windows.Forms.ListView> kontroli oraz ustawić <xref:System.Windows.Forms.ListView.DoubleBuffered%2A> właściwości `true`.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak zapewnić Rysowanie niestandardowe dla <xref:System.Windows.Forms.ListView> formantu. <xref:System.Windows.Forms.ListView> Formant w przykładzie ma gradientu tła. Elementy podrzędne z wartości ujemnych ma red pierwszego planu i tła czarny.  
  
 Program obsługi <xref:System.Windows.Forms.ListView.DrawItem> zdarzeń rysuje tła dla całego elementów. Program obsługi <xref:System.Windows.Forms.ListView.DrawSubItem> zdarzeń rysuje wartości tekstowe i tekst i tło podelementy mają wartości ujemnych. Program obsługi <xref:System.Windows.Forms.ListView.DrawColumnHeader> zdarzeń rysuje każdy nagłówek kolumny.  
  
 A <xref:System.Windows.Forms.ContextMenu> składnika pozwala przełączać się między widoku szczegółów i widok listy. W widoku listy, tylko <xref:System.Windows.Forms.ListView.DrawItem> zdarzenia. W takim przypadku tła i tekstu zarówno rysowania <xref:System.Windows.Forms.ListView.DrawItem> obsługi zdarzeń.  
  
 [!code-csharp[ListViewOwnerDraw#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#1)]
 [!code-vb[ListViewOwnerDraw#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawColumnHeader" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia odstęp między <see cref="T:System.Windows.Forms.ListView" /> kontroli i jego zawartość.</summary>
        <value>
          <see cref="T:System.Windows.Forms.Padding" /> , Który określa odstęp między <see cref="T:System.Windows.Forms.ListView" /> kontroli i jego zawartość.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość nie jest odpowiedni dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wartość <see cref="P:System.Windows.Forms.ListView.Padding" /> zmiany właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler Paint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler Paint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.Paint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Paint As PaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PaintEventHandler ^ Paint;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="T:System.Windows.Forms.ListView" /> kontroli jest rysowane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView> Kontroli jest rysowany przez system operacyjny lub właściciela jest rysowany, więc <xref:System.Windows.Forms.ListView.Paint> nigdy nie zdarzenia. Aby uzyskać więcej informacji na temat rysowania przez właściciela, zobacz <xref:System.Windows.Forms.ListView.OwnerDraw%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RealizeProperties">
      <MemberSignature Language="C#" Value="protected void RealizeProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RealizeProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.RealizeProperties" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RealizeProperties ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RealizeProperties();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicjuje właściwości <see cref="T:System.Windows.Forms.ListView" /> formant, który Zarządzanie wygląd formantu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedrawItems">
      <MemberSignature Language="C#" Value="public void RedrawItems (int startIndex, int endIndex, bool invalidateOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedrawItems(int32 startIndex, int32 endIndex, bool invalidateOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.RedrawItems(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedrawItems (startIndex As Integer, endIndex As Integer, invalidateOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedrawItems(int startIndex, int endIndex, bool invalidateOnly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="endIndex" Type="System.Int32" />
        <Parameter Name="invalidateOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startIndex">Indeks pierwszego elementu w zakresie do narysowania.</param>
        <param name="endIndex">Indeks dla ostatniego elementu zakresu do narysowania.</param>
        <param name="invalidateOnly">
          <see langword="true" /> unieważnianie zakres elementów; <see langword="false" /> unieważnienie i odświeżenia elementów.</param>
        <summary>Wymusza zakres <see cref="T:System.Windows.Forms.ListViewItem" /> obiektów do narysowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.RedrawItems%2A> Metoda może być używane czy <xref:System.Windows.Forms.ListView> jest w trybie wirtualnym lub w trybie regularne.  
  
 Jeśli <xref:System.Windows.Forms.ListView.BeginUpdate%2A> metoda została wywołana przed wywołaniem do <xref:System.Windows.Forms.ListView.RedrawItems%2A>, nie nastąpi ponownego rysowania.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> lub <paramref name="endIndex" /> jest mniejszy niż 0, większa lub równa liczbie elementów w <see cref="T:System.Windows.Forms.ListView" /> lub, jeśli w trybie wirtualnym, większa niż wartość <see cref="P:System.Windows.Forms.ListView.VirtualListSize" />.  
  
 —lub—  
  
 Podany <paramref name="startIndex" /> jest większa niż <paramref name="endIndex." /></exception>
      </Docs>
    </Member>
    <Member MemberName="RetrieveVirtualItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.RetrieveVirtualItemEventHandler RetrieveVirtualItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.RetrieveVirtualItemEventHandler RetrieveVirtualItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.RetrieveVirtualItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RetrieveVirtualItem As RetrieveVirtualItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::RetrieveVirtualItemEventHandler ^ RetrieveVirtualItem;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RetrieveVirtualItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="T:System.Windows.Forms.ListView" /> jest w trybie wirtualnym i wymaga <see cref="T:System.Windows.Forms.ListViewItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Windows.Forms.ListView> obiekt jest w trybie wirtualnym, tworzy <xref:System.Windows.Forms.ListViewItem> obiektów dynamicznie zamiast <xref:System.Windows.Forms.ListView.Items%2A> kolekcji. To zdarzenie jest wywoływane, gdy trzeba utworzyć obiekt <xref:System.Windows.Forms.ListViewItem> obiektu. Program obsługi dla tego zdarzenia, należy utworzyć odpowiedni <xref:System.Windows.Forms.ListViewItem> lub pobrać go z pamięci podręcznej i przekazać go ponownie w zasadzie o <xref:System.Windows.Forms.RetrieveVirtualItemEventArgs.Item%2A> właściwości.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje obsługi dla tego zdarzenia. W tym przykładzie listView1 musi każdego <xref:System.Windows.Forms.ListViewItem> do wyświetlenia kwadrat jej indeks. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Windows.Forms.ListView.VirtualMode%2A> właściwości.  
  
 [!code-csharp[System.Windows.Forms.ListView.VirtualMode#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/cs/VirtualMode.cs#2)]
 [!code-vb[System.Windows.Forms.ListView.VirtualMode#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/vb/VirtualMode.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.RetrieveVirtualItemEventArgs.Item" /> Nie ustawiono właściwości do elementu podczas <see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" /> zdarzenie jest obsługiwane.</exception>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayout">
      <MemberSignature Language="C#" Value="public virtual bool RightToLeftLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RightToLeftLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.RightToLeftLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RightToLeftLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RightToLeftLayout { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy formant jest poukładany od prawej do lewej.</summary>
        <value>
          <see langword="true" /> Aby wskazać <see cref="T:System.Windows.Forms.ListView" /> kontroli zależy od prawej do lewej, a w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView> Właściwości jest przeznaczona dla aplikacje międzynarodowe, gdy język jest do odczytu od prawej do lewej. Jeśli ustawisz <xref:System.Windows.Forms.ListView> i <xref:System.Windows.Forms.RightToLeft> na true, zawartość i tekst formantu układane będą od prawej do lewej.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RightToLeftLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RightToLeftLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.RightToLeftLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RightToLeftLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RightToLeftLayoutChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wartość <see cref="P:System.Windows.Forms.ListView.RightToLeftLayout" /> zmiany właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.ListView.RightToLeftLayoutChanged> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.ListView> o nazwie `ListView1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.ListView.RightToLeftLayoutChanged> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#462](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#462)]
 [!code-vb[System.Windows.Forms.EventExamples#462](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#462)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scrollable">
      <MemberSignature Language="C#" Value="public bool Scrollable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Scrollable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Scrollable" />
      <MemberSignature Language="VB.NET" Value="Public Property Scrollable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Scrollable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy pasek przewijania jest dodawany do formantu, gdy nie jest wystarczająco dużo miejsca, aby wyświetlić wszystkie elementy.</summary>
        <value>
          <see langword="true" /> Jeśli pasków przewijania zostaną dodane do kontroli, gdy jest to konieczne, umożliwia użytkownikom wyświetlić wszystkie elementy; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ta właściwość jest skonfigurowana `true`, <xref:System.Windows.Forms.ListView> Wyświetla pionowy pasek przewijania do użycia, gdy liczba elementów przekracza rozmiar obszaru klienckiego formantu. Ta właściwość służy do zapewnienia, że użytkownik ma dostęp wszystkich elementów, które są dostępne w <xref:System.Windows.Forms.ListView> formantu.  
  
> [!NOTE]
>  W wersjach [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] przed wersji 2.0, nagłówki kolumn nie malowane prawidłowo w przypadku ustawienia tej właściwości na `false` i zmianę rozmiaru formantu, aby była większa. Aby obejść ten problem, należy ustawić tę właściwość na `true` w <xref:System.Windows.Forms.Form.ResizeBegin> obsługi zdarzeń i ustaw ją z powrotem do `false` w <xref:System.Windows.Forms.Form.ResizeEnd> obsługi zdarzeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchForVirtualItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.SearchForVirtualItemEventHandler SearchForVirtualItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.SearchForVirtualItemEventHandler SearchForVirtualItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.SearchForVirtualItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SearchForVirtualItem As SearchForVirtualItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::SearchForVirtualItemEventHandler ^ SearchForVirtualItem;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SearchForVirtualItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="T:System.Windows.Forms.ListView" /> jest w trybie wirtualnym i odbywa się wyszukiwanie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie występuje, gdy <xref:System.Windows.Forms.ListView> jest w trybie wirtualnym i <xref:System.Windows.Forms.ListView.FindNearestItem%2A> lub <xref:System.Windows.Forms.ListView.FindItemWithText%2A> metoda jest wywoływana. Podczas obsługi tego zdarzenia, należy obliczyć, którego element z listy elementów dostarczonych przez <xref:System.Windows.Forms.ListView.Items%2A> właściwość pasuje do kryteriów wyszukiwania i zestaw <xref:System.Windows.Forms.SearchForVirtualItemEventArgs.Index%2A?displayProperty=nameWithType> właściwości Indeks <xref:System.Windows.Forms.ListViewItem>. Jeśli element nie zostanie podany, <xref:System.Windows.Forms.ListView.FindNearestItem%2A> i <xref:System.Windows.Forms.ListView.FindItemWithText%2A> zwróci `null`.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie wyszukiwania zwraca najbardziej pasującą do określonej liczby całkowitej na liście kwadratów pierwszych dziesięć tysięcy. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Windows.Forms.ListView.VirtualMode%2A> właściwości.  
  
 [!code-csharp[System.Windows.Forms.ListView.VirtualMode#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/cs/VirtualMode.cs#4)]
 [!code-vb[System.Windows.Forms.ListView.VirtualMode#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/vb/VirtualMode.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.SelectedIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectedIndexChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="P:System.Windows.Forms.ListView.SelectedIndices" /> zmiany kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.SelectedIndices%2A> Zawsze, gdy zmienia się kolekcja <xref:System.Windows.Forms.ListViewItem.Selected%2A> właściwość <xref:System.Windows.Forms.ListViewItem> zmiany. Zmiana właściwości może wystąpić programowo lub gdy użytkownik wybiera element lub czyści zaznaczenie elementu. Gdy użytkownik wybierze element bez naciskając klawisz CTRL, aby wykonać wyboru wielokrotnego, formantu najpierw wyczyści poprzedniego zaznaczenia. W takim przypadku to zdarzenie wystąpi jeden raz dla każdego elementu, która wcześniej została wybrana i jeden raz dla nowo wybranego elementu.  
  
 Aby określić, które elementy są zaznaczone w <xref:System.Windows.Forms.ListView> kontrolować, użyj <xref:System.Windows.Forms.ListView.SelectedItems%2A> właściwości, aby uzyskać dostęp do <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection>. Można utworzyć program obsługi zdarzeń dla tego zdarzenia do wykonywania zadań, gdy następuje zmiana do zaznaczonego elementu w <xref:System.Windows.Forms.ListView> formantu.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.ListView.SelectedItems%2A> właściwość <xref:System.Windows.Forms.ListView.SelectedIndexChanged> zdarzeń, <xref:System.Windows.Forms.ListView.HeaderStyle%2A> członków i <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection> klasy. Aby uruchomić ten przykład, wklej następujący kod do formularza, który zawiera <xref:System.Windows.Forms.ListView> obiektu o nazwie `ListView1` i <xref:System.Windows.Forms.TextBox> o nazwie `TextBox1`. Wywołanie `InitializeListView` metody z Konstruktor elementu form lub `Load` metody. W tym przykładzie wymaga, aby program obsługi zdarzeń poprawnie skojarzone z <xref:System.Windows.Forms.ListView.SelectedIndexChanged> zdarzeń  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.ItemSelectionChanged" />
        <altmember cref="M:System.Windows.Forms.ListView.OnSelectedIndexChanged(System.EventArgs)" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedIndices" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedItems" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndices">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.SelectedIndexCollection SelectedIndices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/SelectedIndexCollection SelectedIndices" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.SelectedIndices" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedIndices As ListView.SelectedIndexCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::SelectedIndexCollection ^ SelectedIndices { System::Windows::Forms::ListView::SelectedIndexCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+SelectedIndexCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera indeksy wybranych elementów w formancie.</summary>
        <value>A <see cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" /> zawiera indeksy wybrane elementy. Jeśli obecnie nie wybrano żadnych elementów, pustą <see cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" /> jest zwracany.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.SelectedIndices%2A> Właściwość nie zawiera żadnych indeksów, jeśli właściwość jest dostępny przed <xref:System.Windows.Forms.ListView> zostanie utworzony uchwyt, które zwykle występuje, gdy <xref:System.Windows.Forms.ListView> jest początkowo załadowany do wyświetlenia w formularzu. Należy sprawdzić, jeśli dojście jest tworzony z <xref:System.Windows.Forms.Control.IsHandleCreated%2A> właściwości. Gdy <xref:System.Windows.Forms.ListView.MultiSelect%2A> właściwość jest ustawiona na `true`, ta właściwość zwraca kolekcję zawierającą indeksy wszystkie elementy, które są wybrane w <xref:System.Windows.Forms.ListView>. Dla pojedynczego wyboru <xref:System.Windows.Forms.ListView>, ta właściwość zwraca kolekcję zawierającą zawierających indeks wybranego elementu tylko w pojedynczym elementem <xref:System.Windows.Forms.ListView>. Aby uzyskać więcej informacji o zadaniach wykonanych z elementów w kolekcji, zobacz <xref:System.Windows.Forms.ListView.SelectedIndexCollection>.  
  
 Jeśli chcesz uzyskać kolekcję elementów, które są wybrane w <xref:System.Windows.Forms.ListView> formantu zamiast pozycji indeksu elementów, które są wybrane, użyj <xref:System.Windows.Forms.ListView.SelectedItems%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, za pomocą <xref:System.Windows.Forms.ListView.SelectedIndices%2A>, <xref:System.Windows.Forms.ListView.SelectedIndexChanged>, i <xref:System.Windows.Forms.ListView.HeaderStyle%2A> elementy członkowskie i <xref:System.Windows.Forms.ListView.SelectedIndexCollection> klasy. Aby uruchomić ten przykład, wklej następujący kod do formularza, który zawiera <xref:System.Windows.Forms.ListView> obiektu o nazwie `ListView1` i <xref:System.Windows.Forms.TextBox> o nazwie `TextBox1`. Wywołanie `InitializeListView` metody z Konstruktor elementu form lub `Load` metody. W tym przykładzie wymaga obsługi zdarzeń jest poprawnie skojarzone z <xref:System.Windows.Forms.ListView.SelectedIndexChanged> zdarzeń.  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView1#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#3)]
[!code-csharp[System.Windows.Forms.ListView1#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#3)]
[!code-vb[System.Windows.Forms.ListView1#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedItems" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItems">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.SelectedListViewItemCollection SelectedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/SelectedListViewItemCollection SelectedItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.SelectedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedItems As ListView.SelectedListViewItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::SelectedListViewItemCollection ^ SelectedItems { System::Windows::Forms::ListView::SelectedListViewItemCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+SelectedListViewItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera elementy, które są zaznaczone w formancie.</summary>
        <value>A <see cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" /> zawiera elementy, które są wybrane w formancie. Jeśli obecnie nie wybrano żadnych elementów, pustą <see cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" /> jest zwracany.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.SelectedItems%2A> Właściwości nie zawiera żadnych elementów, jeśli właściwość jest dostępny przed <xref:System.Windows.Forms.ListView> zostanie utworzony uchwyt, które zwykle występuje, gdy <xref:System.Windows.Forms.ListView> jest początkowo załadowany do wyświetlenia w formularzu. Należy sprawdzić, jeśli dojście jest tworzony z <xref:System.Windows.Forms.Control.IsHandleCreated%2A> właściwości. Gdy <xref:System.Windows.Forms.ListView.MultiSelect%2A> właściwość jest ustawiona na `true`, ta właściwość zwraca kolekcję zawierającą elementy, które są wybrane w <xref:System.Windows.Forms.ListView>. Dla pojedynczego wyboru <xref:System.Windows.Forms.ListView>, ta właściwość zwraca kolekcję zawierającą tylko wybrany element w <xref:System.Windows.Forms.ListView>. Aby uzyskać więcej informacji o zadaniach wykonanych z elementów w kolekcji, zobacz <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection>.  
  
 Jeśli chcesz uzyskać kolekcję pozycje indeksu w ramach <xref:System.Windows.Forms.ListView.ListViewItemCollection> elementów, które są wybrane w <xref:System.Windows.Forms.ListView> formantu zamiast elementy, które są wybrane, użyj <xref:System.Windows.Forms.ListView.SelectedIndices%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, za pomocą <xref:System.Windows.Forms.ListView.SelectedItems%2A>, <xref:System.Windows.Forms.ListView.SelectedIndexChanged> zdarzenia i <xref:System.Windows.Forms.ListView.HeaderStyle%2A> elementy członkowskie i <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection> klasy. Aby uruchomić ten przykład, wklej następujący kod do formularza, który zawiera <xref:System.Windows.Forms.ListView> obiektu o nazwie `ListView1` i <xref:System.Windows.Forms.TextBox> o nazwie `TextBox1`. Wywołanie `InitializeListView` metody z Konstruktor elementu form lub `Load` metody. W tym przykładzie wymaga obsługi zdarzeń jest poprawnie skojarzone z <xref:System.Windows.Forms.ListView.SelectedIndexChanged> zdarzeń  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedIndices" />
      </Docs>
    </Member>
    <Member MemberName="ShowGroups">
      <MemberSignature Language="C#" Value="public bool ShowGroups { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowGroups" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ShowGroups" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowGroups As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowGroups { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy mają być wyświetlane w grupach.</summary>
        <value>
          <see langword="true" /> Aby wyświetlić elementy w grupach; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wszystkie grupy przypisane do <xref:System.Windows.Forms.ListView> sterowania są wyświetlane zawsze, gdy <xref:System.Windows.Forms.ListView.View%2A> wartość właściwości jest równa wartości innych niż <xref:System.Windows.Forms.View.List>. <xref:System.Windows.Forms.ListView> Funkcja grupowanie umożliwia tworzenie grup visual logicznie powiązanych <xref:System.Windows.Forms.ListView> elementy w systemie Windows XP i Windows Server 2003. Aby włączyć tę funkcję, aplikacja musi wywołać <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> metody. Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Forms.ListView.Groups%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.Groups" />
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
        <altmember cref="T:System.Windows.Forms.ListViewGroupCollection" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="ShowItemToolTips">
      <MemberSignature Language="C#" Value="public bool ShowItemToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowItemToolTips" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ShowItemToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowItemToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowItemToolTips { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy elementy ToolTip mają być wyświetlane dla <see cref="T:System.Windows.Forms.ListViewItem" /> obiektów zawartych w <see cref="T:System.Windows.Forms.ListView" />.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Windows.Forms.ListViewItem" /> etykietki narzędzi powinny być wyświetlane; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Windows.Forms.ListView.ShowItemToolTips%2A> właściwość jest ustawiona na `true`oraz <xref:System.Windows.Forms.ListViewItem> mający zostanie etykietka narzędzia, wyświetl ją; w przeciwnym razie nie będą wyświetlane żadne.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.ListView.ShowItemToolTips%2A> i <xref:System.Windows.Forms.ListViewItem.ToolTipText%2A?displayProperty=nameWithType> właściwości. Aby uruchomić ten przykład, Wklej kod do formularza systemu Windows i wywołanie `InitializeItemsWithToolTips` z konstruktora formularza lub <xref:System.Windows.Forms.Form.Load> obsługi zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.ListViewItemWhidbeyMembers#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.ListViewItemWhidbeyMembers#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmallImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList SmallImageList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList SmallImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.SmallImageList" />
      <MemberSignature Language="VB.NET" Value="Public Property SmallImageList As ImageList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageList ^ SmallImageList { System::Windows::Forms::ImageList ^ get(); void set(System::Windows::Forms::ImageList ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Forms.ImageList" /> używany podczas wyświetlania elementów jako małe ikony w formancie.</summary>
        <value>
          <see cref="T:System.Windows.Forms.ImageList" /> Zawierający ikony do użycia podczas <see cref="P:System.Windows.Forms.ListView.View" /> właściwość jest ustawiona na <see cref="F:System.Windows.Forms.View.SmallIcon" />. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.SmallImageList%2A> Właściwość umożliwia określenie <xref:System.Windows.Forms.ImageList> obiekt, który zawiera ikony używane przy wyświetlaniu elementów z małych ikon (gdy <xref:System.Windows.Forms.ListView.View%2A> wartość właściwości jest równa wartości inne niż <xref:System.Windows.Forms.View.LargeIcon>). <xref:System.Windows.Forms.ListView> Formant może akceptować format grafiki <xref:System.Windows.Forms.ImageList> sterowanie obsługuje podczas wyświetlania ikon. <xref:System.Windows.Forms.ListView> Formant nie jest ograniczona do pliki ICO. Raz <xref:System.Windows.Forms.ImageList> jest przypisany do <xref:System.Windows.Forms.ListView.SmallImageList%2A> właściwości, można ustawić <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> właściwości każdego <xref:System.Windows.Forms.ListViewItem> w <xref:System.Windows.Forms.ListView> formantu indeks odpowiedni obraz w <xref:System.Windows.Forms.ImageList>. Rozmiar ikon dla <xref:System.Windows.Forms.ListView.SmallImageList%2A> jest określona przez <xref:System.Windows.Forms.ImageList.ImageSize%2A> właściwości.  
  
 Ponieważ dla można określić tylko jeden indeks <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A?displayProperty=nameWithType> właściwość <xref:System.Windows.Forms.ImageList> obiekty określone w <xref:System.Windows.Forms.ListView.LargeImageList%2A> i <xref:System.Windows.Forms.ListView.SmallImageList%2A> właściwości powinny mieć tej samej pozycji indeksu dla obrazów do wyświetlenia. Na przykład jeśli <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> właściwość <xref:System.Windows.Forms.ListViewItem> jest ustawiony na wartość 0, obrazów dla ikon małe i duże powinny być w tej samej pozycji indeksu w <xref:System.Windows.Forms.ImageList> obiekty określone w <xref:System.Windows.Forms.ListView.LargeImageList%2A> i <xref:System.Windows.Forms.ListView.SmallImageList%2A> właściwości.  
  
> [!NOTE]
>  Gdy obrazy są określane za pomocą kluczy, nadal konieczne umieść małych i dużych wersje obrazu w tej samej lokalizacji indeksu w swoich listach odpowiedniego obrazu. Podczas przełączania się między widokami, lokalizacji indeksu obrazu na jednej liście jest używana do lokalizowania obrazu na liście inne, niezależnie od tego, podana wartość klucza.  
  
 Aby ustawić <xref:System.Windows.Forms.ImageList> używany podczas wyświetlania elementów z dużych ikon (po <xref:System.Windows.Forms.ListView.View%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.View.LargeIcon>), użyj <xref:System.Windows.Forms.ListView.LargeImageList%2A> właściwości. Jeśli chcesz użyć obrazy, aby wyświetlić stan elementu, użyj <xref:System.Windows.Forms.ListView.StateImageList%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.ListView> formantu, z których trzy <xref:System.Windows.Forms.ListViewItem> obiekty określone i trzy <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiekty określone dla każdego elementu. W przykładzie jest tworzony także <xref:System.Windows.Forms.ColumnHeader> obiektów, aby wyświetlić elementy podrzędne w widoku details. Dwa <xref:System.Windows.Forms.ImageList> obiekty również są tworzone w przykładzie kodu, aby zapewnić obrazy dla <xref:System.Windows.Forms.ListViewItem> obiektów. Te <xref:System.Windows.Forms.ImageList> obiekty są dodawane do <xref:System.Windows.Forms.ListView.LargeImageList%2A> i <xref:System.Windows.Forms.ListView.SmallImageList%2A> właściwości. W przykładzie użyto następujących właściwości w tworzeniu <xref:System.Windows.Forms.ListView> formantu.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 W tym przykładzie wymaga dodano kod <xref:System.Windows.Forms.Form> i wywołaj metodę utworzony w przykładzie z konstruktora lub innej metody w formularzu. Przykład wymaga również, że obrazy o nazwie `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, i `MyLargeImage2` znajdują się w katalogu głównym dysku C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="P:System.Windows.Forms.ListView.LargeImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.StateImageList" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sortuje elementy widoku listy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj elementy są sortowane przy użyciu <xref:System.Windows.Forms.ListView.Sorting%2A> właściwość, która sortuje elementy na podstawie tekstu elementu. Aby dostosować kolejność sortowania, należy napisać klasy, która implementuje <xref:System.Collections.IComparer> interfejsu i ustaw <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> właściwości do obiektu dla tej klasy. Jest to przydatne, na przykład, aby posortować według podelementu tekstu. Aby uzyskać więcej informacji dotyczących wykonywania ręcznego sortowania elementów Zobacz przykład <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> właściwości.  
  
 Jeśli <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> wartość właściwości jest równa wartości innych niż <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> lub, jeśli <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> właściwość jest ustawiona, lista jest sortowana automatycznie po dodaniu elementów. Elementy nie są sortowane automatycznie, gdy zmieni się tekst etykiety.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.ListViewItemSorter" />
      </Docs>
    </Member>
    <Member MemberName="Sorting">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.SortOrder Sorting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.SortOrder Sorting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Sorting" />
      <MemberSignature Language="VB.NET" Value="Public Property Sorting As SortOrder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::SortOrder Sorting { System::Windows::Forms::SortOrder get(); void set(System::Windows::Forms::SortOrder value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SortOrder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolejność sortowania dla elementów w formancie.</summary>
        <value>Jeden z <see cref="T:System.Windows.Forms.SortOrder" /> wartości. Wartość domyślna to <see cref="F:System.Windows.Forms.SortOrder.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.Sorting%2A> Właściwość umożliwia określenie, czy elementy są sortowane według <xref:System.Windows.Forms.ListView> formantu. Domyślnie sortowania nie jest wykonywana. Podczas <xref:System.Windows.Forms.ListView.Sorting%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.SortOrder.Ascending> lub <xref:System.Windows.Forms.SortOrder.Descending>, elementów w <xref:System.Windows.Forms.ListView> są automatycznie sortowane w kolejności rosnącej kolejności alfabetycznej (Jeśli ustawiono właściwość <xref:System.Windows.Forms.SortOrder.Ascending>) lub malejąco w porządku alfabetycznym (po Właściwość jest ustawiona na <xref:System.Windows.Forms.SortOrder.Descending>). Ta właściwość służy do automatycznego sortowania elementów, które są wyświetlane w Twojej <xref:System.Windows.Forms.ListView> formantu, aby ułatwić użytkownikom znajdowanie elementów, gdy dostępnych dużą liczbę elementów.  
  
 Jeśli chcesz wykonać własne elementu sortowanie zamiast <xref:System.Windows.Forms.ListView.Sorting%2A> właściwości, należy zastosować <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> właściwość w połączeniu z <xref:System.Windows.Forms.ListView.Sort%2A> metody.  
  
 Jeśli <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> wartość właściwości jest równa wartości innych niż <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> lub, jeśli <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> właściwość jest ustawiona, lista jest sortowana automatycznie po dodaniu elementów. Elementy nie są sortowane automatycznie, gdy zmieni się tekst etykiety.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.ListView> formantu, z których trzy <xref:System.Windows.Forms.ListViewItem> obiekty określone i trzy <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiekty określone dla każdego elementu. W przykładzie jest tworzony także <xref:System.Windows.Forms.ColumnHeader> obiektów, aby wyświetlić elementy podrzędne w widoku details. Dwa <xref:System.Windows.Forms.ImageList> obiekty również są tworzone w przykładzie kodu, aby zapewnić obrazy dla <xref:System.Windows.Forms.ListViewItem> obiektów. Te <xref:System.Windows.Forms.ImageList> obiekty są dodawane do <xref:System.Windows.Forms.ListView.LargeImageList%2A> i <xref:System.Windows.Forms.ListView.SmallImageList%2A> właściwości. W przykładzie użyto następujących właściwości w tworzeniu <xref:System.Windows.Forms.ListView> formantu.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 W tym przykładzie wymaga dodano kod <xref:System.Windows.Forms.Form> i wywołaj metodę utworzony w przykładzie z konstruktora lub innej metody w formularzu. Przykład wymaga również, że obrazy o nazwie `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, i `MyLargeImage2` znajdują się w katalogu głównym dysku C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Określona wartość nie jest jednym z <see cref="T:System.Windows.Forms.SortOrder" /> wartości.</exception>
        <altmember cref="T:System.Windows.Forms.SortOrder" />
      </Docs>
    </Member>
    <Member MemberName="StateImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList StateImageList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList StateImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.StateImageList" />
      <MemberSignature Language="VB.NET" Value="Public Property StateImageList As ImageList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageList ^ StateImageList { System::Windows::Forms::ImageList ^ get(); void set(System::Windows::Forms::ImageList ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Forms.ImageList" /> skojarzone z określonym przez aplikację stanów w formancie.</summary>
        <value>
          <see cref="T:System.Windows.Forms.ImageList" /> Zawierający zestaw obrazów stanu, które mogą służyć do wskazywania stanu zdefiniowanym przez aplikację elementu. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.StateImageList%2A> Właściwość umożliwia określenie <xref:System.Windows.Forms.ImageList> zawierający obrazy używane do reprezentowania specyficzne dla aplikacji stan elementu w <xref:System.Windows.Forms.ListView> formantu. Stan obrazów są wyświetlane z lewej strony ikony dla elementu. Obrazy stanu, takie jak zaznaczony i niezaznaczony pola wyboru można służy do wskazywania stanów elementu zdefiniowanym przez aplikację. Stan obrazy są widoczne we wszystkich widokach programu <xref:System.Windows.Forms.ListView> formantu.  
  
 Jeśli <xref:System.Windows.Forms.ImageList> została określona w <xref:System.Windows.Forms.ListView.StateImageList%2A> właściwości i <xref:System.Windows.Forms.ListView.CheckBoxes%2A> właściwość jest ustawiona na `true`, obrazów na pozycji indeksu 0 i 1 w <xref:System.Windows.Forms.ImageList> są wyświetlane pola wyboru. Obraz na pozycji indeksu 0 jest wyświetlany zamiast niezaznaczone pole wyboru i wyświetlania obrazu na pozycji indeksu 1 zamiast zaznaczone pole wyboru.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.LargeImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.SmallImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckBoxes" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ta właściwość nie jest odpowiedni dla tej klasy.</summary>
        <value>Tekst do wyświetlenia w <see cref="T:System.Windows.Forms.ListView" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość nie jest odpowiedni dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="P:System.Windows.Forms.ListView.Text" /> zmiany właściwości.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TileSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size TileSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size TileSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.TileSize" />
      <MemberSignature Language="VB.NET" Value="Public Property TileSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size TileSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia rozmiar kafelków wyświetlane w widoku sąsiadującym.</summary>
        <value>A <see cref="T:System.Drawing.Size" /> zawierający nowy rozmiar kafelka.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formanty tej właściwości rozmiar Kafelki podczas obliczania <xref:System.Windows.Forms.ListView.View%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType>. Ustawienie tej właściwości jest przydatne w celu uniknięcia zawijania wierszy, gdy tekst podelementu jest zbyt długi, który będzie wyświetlany w jednym wierszu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.ListView> funkcji kafelków. W tym przykładzie widoku tile Wyświetla elementy, które reprezentują książki. Każdy element jest widoczny jako Kafelek ikoną książkę, tytuł, autora i roku publikacji. Na przykład kodu do pracy musi zawierać plik ikony o nazwie Book.ico w tym samym katalogu co w przykładzie. Aby wyświetlić kafelka wyświetlić bez ikony, komentarz linii odnoszących się do <xref:System.Windows.Forms.ImageList> obiektu.  
  
 [!code-cpp[System.Windows.Forms.ListView.Tiling#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Tiling/CPP/listviewtilingexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.Tiling#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Tiling/CS/listviewtilingexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.Tiling#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Tiling/VB/listviewtilingexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="TopItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem TopItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem TopItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.TopItem" />
      <MemberSignature Language="VB.NET" Value="Public Property TopItem As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItem ^ TopItem { System::Windows::Forms::ListViewItem ^ get(); void set(System::Windows::Forms::ListViewItem ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia pierwszego widocznego elementu w formancie.</summary>
        <value>A <see cref="T:System.Windows.Forms.ListViewItem" /> reprezentujący pierwszego widocznego elementu w formancie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Początkowo jest element z pozycji indeksu zero (0) w górnej części <xref:System.Windows.Forms.ListView> formantu. Jeśli <xref:System.Windows.Forms.ListView> zawartość formantu jest przewijane, inny element może być w górnej części kontrolki. Ta właściwość służy do podawania lub określić, który element jest widoczny w górnej części <xref:System.Windows.Forms.ListView> formantu. Wartość <xref:System.Windows.Forms.ListView.TopItem%2A> właściwości nie zawsze zachowa, w zależności od tego, gdzie jest żądany górnego elementu w widoku listy.  
  
 Liczba elementów, które są widoczne w <xref:System.Windows.Forms.ListView> kontroli w dowolnym momencie zależy od wysokości widoku listy oraz rozmiar elementów zawiera. Jeśli elementy przekraczają wysokość widoku listy, elementy będą nadal na wiele stron, które można przewijać. Jeśli ustawisz <xref:System.Windows.Forms.ListView.TopItem%2A> właściwości z elementem na ostatniej stronie <xref:System.Windows.Forms.ListView>, element zostanie automatycznie być wyświetlony w wyniku przewijania; jednak <xref:System.Windows.Forms.ListView.TopItem%2A> zostanie ustawiona do rzeczywistego górnego elementu ostatniej strony.  
  
 W celu zapewnienia konkretny element w regionie visible formantu (lecz niekoniecznie w górnej pozycji), użyj <xref:System.Windows.Forms.ListView.EnsureVisible%2A> metody.  
  
> [!NOTE]
>  Ustawienie tej właściwości nie ma efektu, jeśli <xref:System.Windows.Forms.ListView.Scrollable%2A> wartość właściwości jest `false`.  
>   
>  Ustawienie tej właściwości nie jest obsługiwana w wersjach [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] przed w wersji 2.0.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje Resetowanie styl <xref:System.Windows.Forms.ListViewItem> podelementy obiektu z <xref:System.Windows.Forms.ListView.TopItem%2A> właściwości i <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.ResetStyle%2A?displayProperty=nameWithType> metody. Aby uruchomić przykład, wklej następujący kod do postaci zawierające przycisk o nazwie `Button1` i Wywołaj `InitializeListView` metody w Konstruktorze formularza lub <xref:System.Windows.Forms.Form.Load> obsługi zdarzeń.  
  
 [!code-cpp[System.Windows.Forms.ListViewItemStyle#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListViewItemStyle#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ListViewItemStyle#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.ListView.View" /> Właściwość jest ustawiona na <see cref="F:System.Windows.Forms.View.LargeIcon" />, <see cref="F:System.Windows.Forms.View.SmallIcon" />, lub <see cref="F:System.Windows.Forms.View.Tile" />.</exception>
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="M:System.Windows.Forms.ListView.EnsureVisible(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca reprezentację ciągu <see cref="T:System.Windows.Forms.ListView" /> formantu.</summary>
        <returns>Wpisz ciąg, który stanowi formantu, liczba elementów w <see cref="T:System.Windows.Forms.ListView" /> kontroli i typ pierwszego elementu w <see cref="T:System.Windows.Forms.ListView" />, jeśli liczba jest 0.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateExtendedStyles">
      <MemberSignature Language="C#" Value="protected void UpdateExtendedStyles ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UpdateExtendedStyles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.UpdateExtendedStyles" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UpdateExtendedStyles ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UpdateExtendedStyles();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aktualizuje rozszerzone style stosowane do formantu widoku listy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Windows.Forms.ListView.UpdateExtendedStyles%2A> metody w klasie pochodnej, aby zastąpić rozszerzone style używane przez <xref:System.Windows.Forms.ListView> formantu. Jeśli ta metoda jest wywoływana, należy upewnić się, że rozszerzone style ustawić za pomocą właściwości w <xref:System.Windows.Forms.ListView> formantu są wykorzystywane w pochodnej wersji formantu.  
  
 Poniżej przedstawiono właściwości stosowane rozszerzonego stylu do <xref:System.Windows.Forms.ListView> formantu.  
  
-   <xref:System.Windows.Forms.ListView.Activation%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.HoverSelection%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.Activation" />
        <altmember cref="P:System.Windows.Forms.ListView.AllowColumnReorder" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckBoxes" />
        <altmember cref="P:System.Windows.Forms.ListView.FullRowSelect" />
        <altmember cref="P:System.Windows.Forms.ListView.GridLines" />
        <altmember cref="P:System.Windows.Forms.ListView.HoverSelection" />
      </Docs>
    </Member>
    <Member MemberName="UseCompatibleStateImageBehavior">
      <MemberSignature Language="C#" Value="public bool UseCompatibleStateImageBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCompatibleStateImageBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCompatibleStateImageBehavior As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCompatibleStateImageBehavior { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą czy <see cref="T:System.Windows.Forms.ListView" /> używa stanu zachowanie obrazu, który jest zgodny z [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 1.1 lub [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0.</summary>
        <value>
          <see langword="true" /> Jeśli stan zachowanie obrazu jest zgodna z [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 1.1; <see langword="false" /> Jeśli zachowanie jest zgodna z [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zmienia się na <xref:System.Windows.Forms.ListView> kontroli w [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0 włączyć stan niestandardowe obrazy można ustawić, aby wskazać, czy element jest zaznaczenie w stanie nieokreślonym. Dzięki tej funkcji [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0 działa inaczej niż .NET Framework 1.1. Po utworzeniu aplikacji, które są zależne od zachowania w [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 1.1, upewnij się, że <xref:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior%2A> ma ustawioną właściwość `true`, która jest wartością domyślną. Aby w pełni korzystać w stanie niestandardowych obrazów, ustaw <xref:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior%2A> do `false`.  
  
> [!NOTE]
>  Jeśli używasz [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)] projektanta, <xref:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior%2A> będzie mieć ustawioną właściwość `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.View View { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.View View" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.View" />
      <MemberSignature Language="VB.NET" Value="Public Property View As View" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::View View { System::Windows::Forms::View get(); void set(System::Windows::Forms::View value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.View</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia sposób wyświetlania elementów w formancie.</summary>
        <value>Jeden z <see cref="T:System.Windows.Forms.View" /> wartości. Wartość domyślna to <see cref="F:System.Windows.Forms.View.LargeIcon" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.View%2A> Właściwości można określić typ wyświetlania <xref:System.Windows.Forms.ListView> kontrola korzysta w celu wyświetlenia elementów. Można ustawić <xref:System.Windows.Forms.ListView.View%2A> właściwości wyświetlania każdego elementu z duże lub małe ikony lub wyświetlania elementów w pionie listy. Opcja najszerszym jest widok szczegółów, dzięki czemu można wyświetlić nie tylko elementów, ale wszystkie podelementy określony dla każdego elementu. Każdy element jest wyświetlany w siatce, z każdego elementu na liście w pionie i elementy podrzędne dla każdego elementu wyświetlanego w kolumnie z nagłówkami kolumn. Widok szczegółów jest doskonały sposób wyświetlania informacji o bazie danych do użytkownika. Z systemu Windows XP i Windows Server 2003 można również wyświetlić jako Kafelki, które saldo informacji graficznych i tekstowych pokazując dużych ikon wraz z informacjami podelementu wybrane elementy. Aby włączyć widoku kafelków, należy wywołać aplikacji <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> metody. Widok mały obraz przedstawia każdego elementu z ikony, jak i informacje tekstowe z prawej strony ikony. Widok duży obraz przedstawia każdego elementu z ikony, jak i informacje tekstowe pod ikoną. Rozmiar ikon dla listy obrazów jest określona przez <xref:System.Windows.Forms.ImageList.ImageSize%2A> właściwość <xref:System.Windows.Forms.ImageList> dla <xref:System.Windows.Forms.ListView.SmallImageList%2A> lub <xref:System.Windows.Forms.ListView.LargeImageList%2A> właściwości.  
  
> [!NOTE]
>  Jeśli używasz wielu list obrazów, małe i duże ikony w widoku, z <xref:System.Windows.Forms.ListView> formantu, należy umieścić małych i dużych wersji obrazu w tym samym indeks lokalizacji w swoich listach odpowiedniego obrazu. Podczas przełączania się między widokami, lokalizacji indeksu obrazu na jednej liście jest używana do lokalizowania obrazu na liście inne, niezależnie od tego, podana wartość klucza.  
  
 Większość właściwości w <xref:System.Windows.Forms.ListView> formantu wpływa na sposób różne widoki zachowują się lub są wyświetlane. Niektóre właściwości, które mają wpływ na widoki elementów są użyteczne tylko kiedy <xref:System.Windows.Forms.ListView.View%2A> właściwość jest ustawiona na określoną wartość, a inne są przydatne we wszystkich widokach. Na przykład, właściwości, takie jak <xref:System.Windows.Forms.ListView.GridLines%2A> i <xref:System.Windows.Forms.ListView.FullRowSelect%2A> są użyteczne tylko podczas <xref:System.Windows.Forms.ListView.View%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>, podczas gdy <xref:System.Windows.Forms.ListView.MultiSelect%2A> i <xref:System.Windows.Forms.ListView.CheckBoxes%2A> właściwości są przydatne we wszystkich widokach.  
  
 W poniższej tabeli przedstawiono niektóre <xref:System.Windows.Forms.ListView> elementów członkowskich i widoki są ważne w.  
  
|Element członkowski ListView|Widok|  
|---------------------|----------|  
|<xref:System.Windows.Forms.ListView.Alignment%2A> Właściwość|<xref:System.Windows.Forms.View.SmallIcon> lub <xref:System.Windows.Forms.View.LargeIcon>|  
|<xref:System.Windows.Forms.ListView.AutoArrange%2A> Właściwość|<xref:System.Windows.Forms.View.SmallIcon> lub <xref:System.Windows.Forms.View.LargeIcon>|  
|<xref:System.Windows.Forms.ListView.AutoResizeColumn%2A> — Metoda|<xref:System.Windows.Forms.View.Details>|  
|<xref:System.Windows.Forms.ListView.CheckBoxes%2A>|Wszystkie widoki, z wyjątkiem <xref:System.Windows.Forms.View.Tile>|  
|<xref:System.Windows.Forms.ListView.Columns%2A> Właściwość|<xref:System.Windows.Forms.View.Details> lub <xref:System.Windows.Forms.View.Tile>|  
|<xref:System.Windows.Forms.ListView.DrawSubItem> Zdarzenia|<xref:System.Windows.Forms.View.Details>|  
|<xref:System.Windows.Forms.ListView.FindItemWithText%2A> — Metoda|<xref:System.Windows.Forms.View.Details>, <xref:System.Windows.Forms.View.List>, lub <xref:System.Windows.Forms.View.Tile>|  
|<xref:System.Windows.Forms.ListView.FindNearestItem%2A> — Metoda|<xref:System.Windows.Forms.View.SmallIcon> lub <xref:System.Windows.Forms.View.LargeIcon>|  
|<xref:System.Windows.Forms.ListView.GetItemAt%2A> — Metoda|<xref:System.Windows.Forms.View.Details> lub <xref:System.Windows.Forms.View.Tile>|  
|<xref:System.Windows.Forms.ListView.Groups%2A> Właściwość|Wszystkie widoki, z wyjątkiem <xref:System.Windows.Forms.View.List>|  
|<xref:System.Windows.Forms.ListView.HeaderStyle%2A> Właściwość|<xref:System.Windows.Forms.View.Details>|  
|<xref:System.Windows.Forms.ListView.InsertionMark%2A> Właściwość|<xref:System.Windows.Forms.View.LargeIcon>, <xref:System.Windows.Forms.View.SmallIcon>, lub <xref:System.Windows.Forms.View.Tile>|  
  
 Można użyć <xref:System.Windows.Forms.ListView.View%2A> właściwości, aby zapewnić różne widoki danych w aplikacji lub zablokować określonego widoku mogą korzystać z zalet tego widoku. Na przykład <xref:System.Windows.Forms.ListView.View%2A> często ustawiono właściwość <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType> ponieważ w widoku szczegółów oferuje następujące opcje wyświetlania nie są dostępne w innych widokach.  
  
> [!NOTE]
>  Jeśli Twoje <xref:System.Windows.Forms.ListView> formant nie ma żadnych nagłówków kolumn określone i ustawisz <xref:System.Windows.Forms.ListView.View%2A> właściwości <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>, <xref:System.Windows.Forms.ListView> kontrolka nie będzie wyświetlać wszystkie elementy. Jeśli Twoje <xref:System.Windows.Forms.ListView> formant nie ma żadnych nagłówków kolumn określone i ustawisz <xref:System.Windows.Forms.ListView.View%2A> właściwości <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType>, <xref:System.Windows.Forms.ListView> kontrolka nie będzie wyświetlać wszystkie elementy podrzędne.  
  
 Widoku tile wyświetla każdy element o dużych ikon na informacje po lewej stronie i tekstową po prawej stronie. Informacje tekstowe składa się z etykiety elementu, a następnie podelementy. Domyślnie jest wyświetlana tylko pierwszy podelementu, które odpowiada etykiety elementu. Aby wyświetlić dodatkowe elementy podrzędne, należy dodać <xref:System.Windows.Forms.ColumnHeader> obiekty do <xref:System.Windows.Forms.ListView.Columns%2A> kolekcji. Każdy podelementu na kafelku odpowiada nagłówka kolumny. Aby kontrolować, które elementy podrzędne są wyświetlane i kolejność, w którym są wyświetlane, należy ustawić <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Name%2A?displayProperty=nameWithType> właściwości dla każdego elementu i <xref:System.Windows.Forms.ColumnHeader.Name%2A?displayProperty=nameWithType> właściwości dla każdego nagłówka. Następnie dodawania, usuwania i zmienić kolejność nagłówków w <xref:System.Windows.Forms.ListView.Columns%2A> kolekcji do osiągnięcia pożądany wynik.  
  
 Aby kontrolować rozmiar kafelków w widoku tile, ustaw <xref:System.Windows.Forms.ListView.TileSize%2A> właściwości. Jest to przydatne w celu uniknięcia zawijania wierszy, gdy tekst podelementu jest zbyt długi dla pojedynczego wiersza.  
  
 Na przykład widoku tile zobacz <xref:System.Windows.Forms.ListView.TileSize%2A> właściwości.  
  
> [!NOTE]
>  Chociaż kolumn są wyświetlane tylko w widoku szczegółów, nie będą wyświetlane w widoku szczegółów lub widoku tile podelementy bez nagłówków kolumn.  
  
 Widoku tile jest dostępna tylko w systemie Windows XP i Windows Server 2003, gdy aplikacja wywołuje <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> metody. W starszych systemach operacyjnych, dowolny kod związane z widoku tile nie obowiązuje, a <xref:System.Windows.Forms.ListView> kontrolka ma być wyświetlana w widoku dużych ikon. W związku z tym kodu, który jest zależny od widoku tile mogą nie działać poprawnie.  
  
 Możesz chcesz dołączyć kod, który określa, czy widoku tile jest dostępna i zapewniać funkcje alternatywne, gdy jest ona niedostępna. Na przykład, jeśli używasz właściciela rysunek do dostosowywania wyglądu <xref:System.Windows.Forms.ListView> elementów w widoku tile, warto uruchamiał kod rysowania odpowiednie do widoku dużych ikon w systemach operacyjnych, które nie obsługują widoku tile.  
  
 Funkcja widoku kafelków są udostępniane przez tę samą bibliotekę, która udostępnia funkcję kompozycji systemu operacyjnego. Aby sprawdzić dostępność tej biblioteki, należy wywołać <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> przeciążenie metody i przekaż <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> wartość.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.ListView> formantu, z których trzy <xref:System.Windows.Forms.ListViewItem> obiekty określone i trzy <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiekty określone dla każdego elementu. W przykładzie jest tworzony także <xref:System.Windows.Forms.ColumnHeader> obiektów, aby wyświetlić elementy podrzędne w widoku details. Dwa <xref:System.Windows.Forms.ImageList> obiekty również są tworzone w przykładzie kodu, aby zapewnić obrazy dla <xref:System.Windows.Forms.ListViewItem> obiektów. Te <xref:System.Windows.Forms.ImageList> obiekty są dodawane do <xref:System.Windows.Forms.ListView.LargeImageList%2A> i <xref:System.Windows.Forms.ListView.SmallImageList%2A> właściwości. W przykładzie użyto następujących właściwości w tworzeniu <xref:System.Windows.Forms.ListView> formantu.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 W tym przykładzie wymaga dodano kod <xref:System.Windows.Forms.Form> i wywołaj metodę utworzony w przykładzie z konstruktora lub innej metody w formularzu. Przykład wymaga również, że obrazy o nazwie `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, i `MyLargeImage2` znajdują się w katalogu głównym dysku C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Określona wartość nie jest jednym z <see cref="T:System.Windows.Forms.View" /> wartości.</exception>
        <altmember cref="T:System.Windows.Forms.View" />
        <altmember cref="P:System.Windows.Forms.ListView.TileSize" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="VirtualItemsSelectionRangeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler VirtualItemsSelectionRangeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler VirtualItemsSelectionRangeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VirtualItemsSelectionRangeChanged As ListViewVirtualItemsSelectionRangeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ListViewVirtualItemsSelectionRangeChangedEventHandler ^ VirtualItemsSelectionRangeChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="T:System.Windows.Forms.ListView" /> jest w trybie wirtualnym i zaznaczenie stan zakresu elementów zostanie zmieniony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Windows.Forms.ListView> nie jest w trybie wirtualnym, <xref:System.Windows.Forms.ListView.ItemSelectionChanged> wystąpi zdarzenie.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.ListView> o nazwie `ListView1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#482](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#482)]
 [!code-vb[System.Windows.Forms.EventExamples#482](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#482)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.ItemSelectionChanged" />
      </Docs>
    </Member>
    <Member MemberName="VirtualListSize">
      <MemberSignature Language="C#" Value="public int VirtualListSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VirtualListSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.VirtualListSize" />
      <MemberSignature Language="VB.NET" Value="Public Property VirtualListSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int VirtualListSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę <see cref="T:System.Windows.Forms.ListViewItem" /> obiektów zawartych na liście w trybie wirtualnym.</summary>
        <value>Liczba <see cref="T:System.Windows.Forms.ListViewItem" /> obiektów zawartych w <see cref="T:System.Windows.Forms.ListView" /> w trybie wirtualnym.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pobierania lub ustawiania <xref:System.Windows.Forms.ListView.VirtualListSize%2A> właściwości podczas <xref:System.Windows.Forms.ListView.VirtualMode%2A> ustawioną `false` nie wpłyną <xref:System.Windows.Forms.ListView>.  
  
 Jeśli <xref:System.Windows.Forms.ListView.VirtualMode%2A> ustawiono `true`i <xref:System.Windows.Forms.ListView.VirtualListSize%2A> właściwości jest większa niż 0 i musi obsługiwać <xref:System.Windows.Forms.ListView.RetrieveVirtualItem> zdarzeń, podając prawidłowy <xref:System.Windows.Forms.ListViewItem>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Windows.Forms.ListView.VirtualListSize" /> ma ustawioną wartość mniejszą niż 0.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.ListView.VirtualMode" /> ustawiono <see langword="true" />, <see cref="P:System.Windows.Forms.ListView.VirtualListSize" /> jest większa niż 0 i <see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" /> nie jest obsługiwana.</exception>
        <altmember cref="P:System.Windows.Forms.ListView.VirtualMode" />
      </Docs>
    </Member>
    <Member MemberName="VirtualMode">
      <MemberSignature Language="C#" Value="public bool VirtualMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VirtualMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.VirtualMode" />
      <MemberSignature Language="VB.NET" Value="Public Property VirtualMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool VirtualMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy podano własne operacje zarządzania danymi dla <see cref="T:System.Windows.Forms.ListView" /> formantu.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Windows.Forms.ListView" /> używa operacje zarządzania danymi, które zapewniają; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie <xref:System.Windows.Forms.ListView.VirtualMode%2A> właściwości `true` umieszcza <xref:System.Windows.Forms.ListView> w trybie wirtualnym. W trybie wirtualnej normalnej <xref:System.Windows.Forms.ListView.Items%2A> kolekcji nie jest używana. Zamiast tego <xref:System.Windows.Forms.ListViewItem> obiekty są tworzone dynamicznie <xref:System.Windows.Forms.ListView> wymaga ich.  
  
 Tryb wirtualny może być przydatne w wielu sytuacjach. Jeśli <xref:System.Windows.Forms.ListView> obiektu powinno zostać zapełnione z bardzo dużych kolekcji już w pamięci, tworzenie <xref:System.Windows.Forms.ListViewItem> obiekt dla każdego wpisu może być niepotrzebne. W trybie wirtualnym są tworzone tylko tych elementów, które są wymagane. W pozostałych przypadkach wartości <xref:System.Windows.Forms.ListViewItem> obiektów może wymagać ponownego obliczenia często i w ten sposób dla całej kolekcji dałby w efekcie można zaakceptować wydajności. W trybie wirtualnym wymagane elementy są obliczane.  
  
 Aby można było używać trybu wirtualnego, musi obsługiwać <xref:System.Windows.Forms.ListView.RetrieveVirtualItem> zdarzenie, które jest wywoływane zawsze <xref:System.Windows.Forms.ListView> wymaga elementu. Ten program obsługi zdarzeń należy utworzyć <xref:System.Windows.Forms.ListViewItem> obiektu, który należy pod określonym indeksem. Ponadto <xref:System.Windows.Forms.ListView.VirtualListSize%2A> musi być ustawiona właściwość rozmiar listy wirtualnej.  
  
 Obsługa <xref:System.Windows.Forms.ListView.SearchForVirtualItem> zdarzeń umożliwia wyszukiwanie w trybie wirtualnym. Jeśli to zdarzenie nie jest obsługiwana, <xref:System.Windows.Forms.ListView.FindItemWithText%2A> i <xref:System.Windows.Forms.ListView.FindNearestItem%2A> zwróci metody `null`.  
  
 Może obsłużyć <xref:System.Windows.Forms.ListView.CacheVirtualItems> zdarzeń w celu utrzymania pamięci podręcznej <xref:System.Windows.Forms.ListViewItem> obiektów. Jeśli obliczenia lub wyszukiwania, aby utworzyć <xref:System.Windows.Forms.ListViewItem> obiektu jest kosztowne, obsługi pamięci podręcznej może poprawić wydajność.  
  
 Jeśli <xref:System.Windows.Forms.ListView.View%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.View.Tile>, wartość zostanie automatycznie zmieniony na <xref:System.Windows.Forms.View.LargeIcon> podczas <xref:System.Windows.Forms.ListView.VirtualMode%2A> ma ustawioną wartość `true`.  
  
 W trybie wirtualnym <xref:System.Windows.Forms.ListView.Items%2A> kolekcji jest wyłączona. Próba dostępu do niego powoduje <xref:System.InvalidOperationException>. To samo dotyczy z <xref:System.Windows.Forms.ListView.CheckedItems%2A> kolekcji i <xref:System.Windows.Forms.ListView.SelectedItems%2A> kolekcji. Jeśli chcesz pobrać wybrany lub zaznaczone elementy, użyj <xref:System.Windows.Forms.ListView.SelectedIndices%2A> i <xref:System.Windows.Forms.ListView.CheckedIndices%2A> kolekcje zamiast tego.  
  
   
  
## Examples  
 W tym przykładzie przedstawiono prosty <xref:System.Windows.Forms.ListView> których zawartość jest kwadratów pierwszych dziesięć tysięcy. Go obsługuje przeszukiwanie i używa pamięci podręcznej, aby zwiększyć wydajność.  
  
 [!code-csharp[System.Windows.Forms.ListView.VirtualMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/cs/VirtualMode.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.VirtualMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/vb/VirtualMode.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.ListView.VirtualMode" /> ustawiono <see langword="true" /> i istnieje jeden z następujących warunków:  
  
-   <see cref="P:System.Windows.Forms.ListView.VirtualListSize" /> jest większa niż 0 i <see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" /> nie jest obsługiwana.  
  
     —lub—  
  
-   <see cref="P:System.Windows.Forms.ListView.Items" />, <see cref="P:System.Windows.Forms.ListView.CheckedItems" />, lub <see cref="P:System.Windows.Forms.ListView.SelectedItems" /> zawiera elementy.  
  
     —lub—  
  
-   Zmiany zostały wprowadzone <see cref="P:System.Windows.Forms.ListView.Items" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">Systemu Windows <see cref="T:System.Windows.Forms.Message" /> do procesu.</param>
        <summary>Zastępuje <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>