<Type Name="ComboBox+ObjectCollection" FullName="System.Windows.Forms.ComboBox+ObjectCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e6e79b7ff97b9cb0c402078063d028b8a3109fd0" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69194749" /></Metadata><TypeSignature Language="C#" Value="public class ComboBox.ObjectCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ComboBox/ObjectCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ComboBox.ObjectCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ComboBox.ObjectCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ComboBox::ObjectCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ComboBox.ObjectCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="824af-101">Reprezentuje kolekcję elementów w <see cref="T:System.Windows.Forms.ComboBox" />.</span><span class="sxs-lookup"><span data-stu-id="824af-101">Represents the collection of items in a <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="824af-102">Klasa hermetyzuje elementy <xref:System.Windows.Forms.ComboBox>w. <xref:System.Windows.Forms.ComboBox.ObjectCollection?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="824af-102">The <xref:System.Windows.Forms.ComboBox.ObjectCollection?displayProperty=nameWithType> class encapsulates the items in the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="824af-103">Kolekcja obiektów pola kombi może służyć do zarządzania wieloma typami obiektów, w tym ciągami, obrazami i niestandardowymi obiektami biznesowymi.</span><span class="sxs-lookup"><span data-stu-id="824af-103">The object collection of a combo box can be used to manage many types of objects, including strings, images, and custom business objects.</span></span>  
  
 <span data-ttu-id="824af-104">Elementy można dodawać do kolekcji na kilka sposobów.</span><span class="sxs-lookup"><span data-stu-id="824af-104">You can add items to the collection in several ways.</span></span> <span data-ttu-id="824af-105"><xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> Metoda dodaje jeden obiekt do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="824af-105">The <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> method adds one object to the collection.</span></span> <span data-ttu-id="824af-106">Aby dodać wiele obiektów do kolekcji, najlepiej jest utworzyć tablicę elementów i przypisać ją <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> przy użyciu metody.</span><span class="sxs-lookup"><span data-stu-id="824af-106">To add a number of objects to the collection, it is best to create an array of items and assign with the <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> method.</span></span> <span data-ttu-id="824af-107">Aby wstawić obiekt w określonej lokalizacji w kolekcji, można użyć <xref:System.Windows.Forms.ComboBox.ObjectCollection.Insert%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="824af-107">To insert an object at a specific location within the collection, you can use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Insert%2A> method.</span></span> <span data-ttu-id="824af-108">Aby usunąć elementy ze znanego indeksu w kolekcji, można użyć <xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> metody <xref:System.Windows.Forms.ComboBox.ObjectCollection.RemoveAt%2A> lub metody.</span><span class="sxs-lookup"><span data-stu-id="824af-108">To remove items at a known index in the collection you can use either the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> method or the <xref:System.Windows.Forms.ComboBox.ObjectCollection.RemoveAt%2A> method.</span></span> <span data-ttu-id="824af-109"><xref:System.Windows.Forms.ComboBox.ObjectCollection.Clear%2A> Metoda usuwa wszystkie elementy z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="824af-109">The <xref:System.Windows.Forms.ComboBox.ObjectCollection.Clear%2A> method removes all the items from the collection.</span></span>  
  
 <span data-ttu-id="824af-110">Oprócz metod i właściwości do dodawania i usuwania elementów, <xref:System.Windows.Forms.ComboBox.ObjectCollection?displayProperty=nameWithType> udostępnia również metody znajdowania elementów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="824af-110">In addition to methods and properties for adding and removing items, the <xref:System.Windows.Forms.ComboBox.ObjectCollection?displayProperty=nameWithType> also provides methods to find items within the collection.</span></span> <span data-ttu-id="824af-111"><xref:System.Windows.Forms.ComboBox.ObjectCollection.Contains%2A> Metoda pozwala określić, czy obiekt jest członkiem kolekcji.</span><span class="sxs-lookup"><span data-stu-id="824af-111">The <xref:System.Windows.Forms.ComboBox.ObjectCollection.Contains%2A> method enables you to determine if an object is a member of the collection.</span></span> <span data-ttu-id="824af-112">Gdy wiesz, że element znajduje się w kolekcji, możesz użyć <xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A> metody, aby określić, gdzie znajduje się w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="824af-112">Once you know that the item is located within the collection, you can use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A> method to determine where the item is located within the collection.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectCollection (System.Windows.Forms.ComboBox owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ComboBox owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.#ctor(System.Windows.Forms.ComboBox)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ComboBox)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectCollection(System::Windows::Forms::ComboBox ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ComboBox.ObjectCollection : System.Windows.Forms.ComboBox -&gt; System.Windows.Forms.ComboBox.ObjectCollection" Usage="new System.Windows.Forms.ComboBox.ObjectCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ComboBox" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="824af-113"><see cref="T:System.Windows.Forms.ComboBox" /> , Który jest właścicielem tej kolekcji obiektów.</span><span class="sxs-lookup"><span data-stu-id="824af-113">The <see cref="T:System.Windows.Forms.ComboBox" /> that owns this object collection.</span></span></param>
        <summary><span data-ttu-id="824af-114">Inicjuje nowe wystąpienie <see cref="T:System.Windows.Forms.ComboBox.ObjectCollection" />.</span><span class="sxs-lookup"><span data-stu-id="824af-114">Initializes a new instance of <see cref="T:System.Windows.Forms.ComboBox.ObjectCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="824af-115">Nie można utworzyć wystąpienia tej klasy bez kojarzenia jej z <xref:System.Windows.Forms.ComboBox> kontrolką.</span><span class="sxs-lookup"><span data-stu-id="824af-115">An instance of this class cannot be created without associating it with a <xref:System.Windows.Forms.ComboBox> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="member this.Add : obj -&gt; int" Usage="objectCollection.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="824af-116">Obiekt reprezentujący element, który ma zostać dodany do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="824af-116">An object representing the item to add to the collection.</span></span></param>
        <summary><span data-ttu-id="824af-117">Dodaje element do listy elementów dla <see cref="T:System.Windows.Forms.ComboBox" />elementu.</span><span class="sxs-lookup"><span data-stu-id="824af-117">Adds an item to the list of items for a <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
        <returns><span data-ttu-id="824af-118">Indeks (liczony od zera) elementu w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="824af-118">The zero-based index of the item in the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="824af-119">Ta metoda dodaje element do pola kombi.</span><span class="sxs-lookup"><span data-stu-id="824af-119">This method adds an item to the combo box.</span></span> <span data-ttu-id="824af-120"><xref:System.Windows.Forms.ComboBox.Sorted%2A> Jeśli właściwość <xref:System.Windows.Forms.ComboBox> jest ustawiona na `true`, element zostanie wstawiony do listy alfabetycznie.</span><span class="sxs-lookup"><span data-stu-id="824af-120">If the <xref:System.Windows.Forms.ComboBox.Sorted%2A> property of the <xref:System.Windows.Forms.ComboBox> is set to `true`, the item is inserted into the list alphabetically.</span></span> <span data-ttu-id="824af-121">W przeciwnym razie element zostanie wstawiony na końcu listy.</span><span class="sxs-lookup"><span data-stu-id="824af-121">Otherwise, the item is inserted at the end of the list.</span></span>  
  
 <span data-ttu-id="824af-122">Wizualna reprezentacja elementu jest wyświetlana w polu kombi.</span><span class="sxs-lookup"><span data-stu-id="824af-122">A visual representation of the item is displayed in the combo box.</span></span> <span data-ttu-id="824af-123">Ta reprezentacja zawartości jest określana <xref:System.Windows.Forms.ListControl.DisplayMember%2A> przez właściwość.</span><span class="sxs-lookup"><span data-stu-id="824af-123">This content representation is specified by the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property.</span></span> <span data-ttu-id="824af-124">Jeśli właściwość jest `null`, `ToString` Metoda elementu jest wywoływana w celu uzyskania ciągu, który jest wyświetlany w polu kombi; w przeciwnym razie zostanie wyświetlona Właściwość przechowywanego obiektu określona przez <xref:System.Windows.Forms.ListControl.DisplayMember%2A> właściwość. <xref:System.Windows.Forms.ListControl.DisplayMember%2A></span><span class="sxs-lookup"><span data-stu-id="824af-124">If the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property is `null`, the item's `ToString` method is called to obtain the string that is displayed in the combo box; otherwise, the property of the stored object as specified by the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property is displayed.</span></span> <span data-ttu-id="824af-125">Występuje <xref:System.SystemException> , gdy jest za mało miejsca, aby można było zapisać nowy element.</span><span class="sxs-lookup"><span data-stu-id="824af-125">A <xref:System.SystemException> occurs if there is insufficient space available to store the new item.</span></span> <span data-ttu-id="824af-126">Aby dodać zestaw elementów do pola kombi najlepiej użyć <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="824af-126">To add a set of items to the combo box it is best to use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> method.</span></span> <span data-ttu-id="824af-127">Jeśli zdecydujesz się na użycie <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> metody w celu dodania liczby elementów do pola kombi, <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> Użyj metody, aby zawiesić odtwarzanie <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> podczas dodawania oraz metodę wznawiania odrysowania.</span><span class="sxs-lookup"><span data-stu-id="824af-127">If you choose to use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> method to add a number of items to the combo box, use the <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> method to suspend repainting during your add and the <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> method to resume repainting.</span></span> <span data-ttu-id="824af-128">Możesz użyć <xref:System.Windows.Forms.ComboBox.ObjectCollection.Insert%2A> metody, aby określić lokalizację na liście, w której element zostanie dodany.</span><span class="sxs-lookup"><span data-stu-id="824af-128">You can use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Insert%2A> method to specify the location in the list where an item is added.</span></span> <span data-ttu-id="824af-129">Po dodaniu obiektu do kolekcji <xref:System.Windows.Forms.ComboBox> wywołuje <xref:System.Object.ToString%2A> metodę obiektu, aby uzyskać ciąg do wyświetlenia na liście.</span><span class="sxs-lookup"><span data-stu-id="824af-129">When an object is added to the collection, the <xref:System.Windows.Forms.ComboBox> calls the object's <xref:System.Object.ToString%2A> method to obtain the string to display in the list.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="824af-130"><paramref name="item" /> Parametr został<see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="824af-130">The <paramref name="item" /> parameter was <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (object[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(object[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.AddRange(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Object ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.AddRange : obj[] -&gt; unit" Usage="objectCollection.AddRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="items"><span data-ttu-id="824af-131">Tablica obiektów, które mają zostać dodane do listy.</span><span class="sxs-lookup"><span data-stu-id="824af-131">An array of objects to add to the list.</span></span></param>
        <summary><span data-ttu-id="824af-132">Dodaje tablicę elementów do listy elementów dla elementu <see cref="T:System.Windows.Forms.ComboBox" />.</span><span class="sxs-lookup"><span data-stu-id="824af-132">Adds an array of items to the list of items for a <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="824af-133"><xref:System.Windows.Forms.ComboBox.Sorted%2A> Jeśli właściwość <xref:System.Windows.Forms.ComboBox> ma wartość true, elementy są wstawiane do listy alfabetycznie.</span><span class="sxs-lookup"><span data-stu-id="824af-133">If the <xref:System.Windows.Forms.ComboBox.Sorted%2A> property of the <xref:System.Windows.Forms.ComboBox> is set to true, the items are inserted into the list alphabetically.</span></span> <span data-ttu-id="824af-134">W przeciwnym razie elementy są wstawiane w kolejności, w jakiej występują w tablicy.</span><span class="sxs-lookup"><span data-stu-id="824af-134">Otherwise, the items are inserted in the order they occur within the array.</span></span> <span data-ttu-id="824af-135">Ta metoda jest zwykle przenoszona tablicą <xref:System.String> obiektów, ale tablica dowolnego typu obiektu może być przenoszona do tej metody.</span><span class="sxs-lookup"><span data-stu-id="824af-135">This method is typically passed an array of <xref:System.String> objects, but an array of any type of object can be passed to this method.</span></span> <span data-ttu-id="824af-136">Po dodaniu obiektu do kolekcji metoda wywołuje <xref:System.Object.ToString%2A> metodę obiektu, aby uzyskać ciąg do wyświetlenia na liście.</span><span class="sxs-lookup"><span data-stu-id="824af-136">When an object is added to the collection, the method calls the object's <xref:System.Object.ToString%2A> method to obtain the string to display in the list.</span></span> <span data-ttu-id="824af-137">W przypadku używania tej metody do dodawania elementów do kolekcji nie trzeba wywoływać <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> metod i <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> w celu optymalizacji wydajności.</span><span class="sxs-lookup"><span data-stu-id="824af-137">When using this method to add items to the collection, you do not need to call the <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> and <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> methods to optimize performance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="824af-138">Poniższy przykład kodu demonstruje, jak zainicjować <xref:System.Windows.Forms.ComboBox> formant przez ustawienie właściwości text i <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> użycie metody do wypełnienia <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="824af-138">The following code example demonstrates how to initialize a <xref:System.Windows.Forms.ComboBox> control by setting the text property and using the <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> method to populate the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="824af-139">Pokazuje również obsługę <xref:System.Windows.Forms.ComboBox.DropDown> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="824af-139">It also demonstrates handling the <xref:System.Windows.Forms.ComboBox.DropDown> event.</span></span> <span data-ttu-id="824af-140">Aby uruchomić przykład, wklej następujący kod w formularzu i Wywołaj `InitializeComboBox` metodę z konstruktora lub `Load` metody formularza.</span><span class="sxs-lookup"><span data-stu-id="824af-140">To run the example, paste the following code in a form and call the `InitializeComboBox` method from the form's constructor or `Load` method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="824af-141">Element w <paramref name="items" /> parametrze został <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="824af-141">An item in the <paramref name="items" /> parameter was <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="objectCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="824af-142">Usuwa wszystkie elementy z <see cref="T:System.Windows.Forms.ComboBox" />.</span><span class="sxs-lookup"><span data-stu-id="824af-142">Removes all items from the <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="824af-143">Po usunięciu elementów z listy wszystkie informacje o usuniętych elementach zostaną utracone.</span><span class="sxs-lookup"><span data-stu-id="824af-143">When you remove items from the list, all information about the deleted items is lost.</span></span> <span data-ttu-id="824af-144">Aby usunąć pojedynczy element z <xref:System.Windows.Forms.ComboBox>, <xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> Użyj metody lub <xref:System.Windows.Forms.ComboBox.ObjectCollection.RemoveAt%2A> .</span><span class="sxs-lookup"><span data-stu-id="824af-144">To remove a single item from the <xref:System.Windows.Forms.ComboBox>, use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> or <xref:System.Windows.Forms.ComboBox.ObjectCollection.RemoveAt%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool&#xA;override this.Contains : obj -&gt; bool" Usage="objectCollection.Contains value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="824af-145">Obiekt reprezentujący element, który ma zostać zlokalizowany w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="824af-145">An object representing the item to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="824af-146">Określa, czy określony element znajduje się w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="824af-146">Determines if the specified item is located within the collection.</span></span></summary>
        <returns><span data-ttu-id="824af-147"><see langword="true" />Jeśli element znajduje się w kolekcji; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="824af-147"><see langword="true" /> if the item is located within the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="824af-148"><xref:System.Windows.Forms.ComboBox.ObjectCollection.Contains%2A> Metoda pozwala określić, czy obiekt jest członkiem kolekcji.</span><span class="sxs-lookup"><span data-stu-id="824af-148">The <xref:System.Windows.Forms.ComboBox.ObjectCollection.Contains%2A> method enables you to determine if an object is a member of the collection.</span></span> <span data-ttu-id="824af-149">Gdy wiesz, że element znajduje się w kolekcji, możesz użyć <xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A> metody, aby określić, gdzie znajduje się w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="824af-149">Once you know that the item is located within the collection, you can use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A> method to determine where the item is located within the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (object[] dest, int arrayIndex);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(object[] dest, int32 arrayIndex) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.CopyTo(System.Object[],System.Int32)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (dest As Object(), arrayIndex As Integer)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Object ^&gt; ^ dest, int arrayIndex);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.CopyTo : obj[] * int -&gt; unit" Usage="objectCollection.CopyTo (dest, arrayIndex)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public void CopyTo (object[] destination, int arrayIndex);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(object[] destination, int32 arrayIndex) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Object(), arrayIndex As Integer)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Object ^&gt; ^ destination, int arrayIndex);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.CopyTo : obj[] * int -&gt; unit" Usage="objectCollection.CopyTo (destination, arrayIndex)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.CopyTo(System.Object[],System.Int32)" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Object[]" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dest" Type="System.Object[]" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="arrayIndex" Type="System.Int32" Index="1" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="824af-150">Tablica obiektów, do której ma zostać skopiowana kolekcja.</span><span class="sxs-lookup"><span data-stu-id="824af-150">The object array to copy the collection to.</span></span></param>
        <param name="dest"><span data-ttu-id="824af-151">Tablica obiektów, do której ma zostać skopiowana kolekcja.</span><span class="sxs-lookup"><span data-stu-id="824af-151">The object array to copy the collection to.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="824af-152">Lokalizacja w tablicy docelowej, do której ma zostać skopiowana kolekcja.</span><span class="sxs-lookup"><span data-stu-id="824af-152">The location in the destination array to copy the collection to.</span></span></param>
        <summary><span data-ttu-id="824af-153">Kopiuje całą kolekcję do istniejącej tablicy obiektów w określonej lokalizacji w tablicy.</span><span class="sxs-lookup"><span data-stu-id="824af-153">Copies the entire collection into an existing array of objects at a specified location within the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="824af-154">Tej metody można użyć do łączenia elementów z wielu kolekcji w jedną tablicę.</span><span class="sxs-lookup"><span data-stu-id="824af-154">You can use this method to combine the items from multiple collections into a single array.</span></span> <span data-ttu-id="824af-155">Następnie można użyć tej tablicy do wypełnienia zawartości innej <xref:System.Windows.Forms.ComboBox> kontrolki <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> przy użyciu metody <xref:System.Windows.Forms.ComboBox.ObjectCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="824af-155">You can then use this array to populate the contents of another <xref:System.Windows.Forms.ComboBox> control using the <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> method of the <xref:System.Windows.Forms.ComboBox.ObjectCollection> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ObjectCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.ComboBox.ObjectCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="824af-156">Pobiera liczbę elementów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="824af-156">Gets the number of items in the collection.</span></span></summary>
        <value><span data-ttu-id="824af-157">Liczba elementów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="824af-157">The number of items in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="824af-158">Ta właściwość umożliwia określenie liczby elementów w <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="824af-158">This property enables you to determine the number of items in the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="824af-159">Tej wartości można użyć podczas zapętlenia przez wartości kolekcji.</span><span class="sxs-lookup"><span data-stu-id="824af-159">You can use this value when looping through the values of the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="objectCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="824af-160">Zwraca moduł wyliczający, który może być używany do iteracji w kolekcji elementów.</span><span class="sxs-lookup"><span data-stu-id="824af-160">Returns an enumerator that can be used to iterate through the item collection.</span></span></summary>
        <returns><span data-ttu-id="824af-161"><see cref="T:System.Collections.IEnumerator" /> Reprezentuje kolekcję elementów.</span><span class="sxs-lookup"><span data-stu-id="824af-161">An <see cref="T:System.Collections.IEnumerator" /> that represents the item collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : obj -&gt; int&#xA;override this.IndexOf : obj -&gt; int" Usage="objectCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="824af-162">Obiekt reprezentujący element, który ma zostać zlokalizowany w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="824af-162">An object representing the item to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="824af-163">Pobiera indeks w kolekcji określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="824af-163">Retrieves the index within the collection of the specified item.</span></span></summary>
        <returns><span data-ttu-id="824af-164">Indeks (liczony od zera), w którym znajduje się element w kolekcji; w przeciwnym razie-1.</span><span class="sxs-lookup"><span data-stu-id="824af-164">The zero-based index where the item is located within the collection; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="824af-165"><xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A> Metoda pozwala określić, gdzie element znajduje się w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="824af-165">The <xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A> method enables you to determine where an item is located within the collection.</span></span> <span data-ttu-id="824af-166">Aby określić, czy element znajduje się w kolekcji przed wywołaniem tej metody, użyj <xref:System.Windows.Forms.ComboBox.ObjectCollection.Contains%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="824af-166">To determine if an item is located within the collection before calling this method, use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Contains%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="824af-167"><paramref name="value" /> Parametr został<see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="824af-167">The <paramref name="value" /> parameter was <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * obj -&gt; unit&#xA;override this.Insert : int * obj -&gt; unit" Usage="objectCollection.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="824af-168">Lokalizacja indeksu na podstawie zera, w którym wstawiany jest element.</span><span class="sxs-lookup"><span data-stu-id="824af-168">The zero-based index location where the item is inserted.</span></span></param>
        <param name="item"><span data-ttu-id="824af-169">Obiekt reprezentujący element do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="824af-169">An object representing the item to insert.</span></span></param>
        <summary><span data-ttu-id="824af-170">Wstawia element do kolekcji o określonym indeksie.</span><span class="sxs-lookup"><span data-stu-id="824af-170">Inserts an item into the collection at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="824af-171"><xref:System.Windows.Forms.ComboBox.Sorted%2A> Jeśli właściwość <xref:System.Windows.Forms.ComboBox> ma wartość true, `index` parametr jest ignorowany.</span><span class="sxs-lookup"><span data-stu-id="824af-171">If the <xref:System.Windows.Forms.ComboBox.Sorted%2A> property of the <xref:System.Windows.Forms.ComboBox> is true, the `index` parameter is ignored.</span></span> <span data-ttu-id="824af-172">Gdy obiekt zostanie dodany do kolekcji, <xref:System.Windows.Forms.ComboBox> wywołuje <xref:System.Object.ToString%2A> metodę obiektu, aby uzyskać ciąg do wyświetlenia na liście.</span><span class="sxs-lookup"><span data-stu-id="824af-172">When an object is added to the collection, the <xref:System.Windows.Forms.ComboBox> calls the object's <xref:System.Object.ToString%2A> method is to obtain the string to display in the list.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="824af-173"><paramref name="item" /> Was .<see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="824af-173">The <paramref name="item" /> was <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="824af-174"><paramref name="index" /> Była mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="824af-174">The <paramref name="index" /> was less than zero.</span></span>  
  
<span data-ttu-id="824af-175">—lub—</span><span class="sxs-lookup"><span data-stu-id="824af-175">-or-</span></span> 
<span data-ttu-id="824af-176"><paramref name="index" /> Była większa niż liczba elementów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="824af-176">The <paramref name="index" /> was greater than the count of items in the collection.</span></span></exception>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ObjectCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.ComboBox.ObjectCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="824af-177">Pobiera wartość wskazującą, czy można modyfikować tę kolekcję.</span><span class="sxs-lookup"><span data-stu-id="824af-177">Gets a value indicating whether this collection can be modified.</span></span></summary>
        <value><span data-ttu-id="824af-178">Zawsze <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="824af-178">Always <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ObjectCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Windows.Forms.ComboBox.ObjectCollection.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="824af-179">Indeks elementu w kolekcji do pobrania.</span><span class="sxs-lookup"><span data-stu-id="824af-179">The index of the item in the collection to retrieve.</span></span></param>
        <summary><span data-ttu-id="824af-180">Pobiera element o określonym indeksie w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="824af-180">Retrieves the item at the specified index within the collection.</span></span></summary>
        <value><span data-ttu-id="824af-181">Obiekt reprezentujący element znajdujący się w określonym indeksie w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="824af-181">An object representing the item located at the specified index within the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="824af-182">Tej metody można użyć do uzyskania elementu w określonej lokalizacji w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="824af-182">You can use this method to obtain the item at the specified location within the collection.</span></span> <span data-ttu-id="824af-183">Można użyć <xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A> , aby znaleźć lokalizację elementu lub użyć zwracanego indeksu <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> z metody.</span><span class="sxs-lookup"><span data-stu-id="824af-183">You can use <xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A> to find the location of an item, or you can use the index return from the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="824af-184">Indeks był mniejszy od zera.</span><span class="sxs-lookup"><span data-stu-id="824af-184">The index was less than zero.</span></span>  
  
<span data-ttu-id="824af-185">—lub—</span><span class="sxs-lookup"><span data-stu-id="824af-185">-or-</span></span> 
<span data-ttu-id="824af-186"><paramref name="index" /> Była większa niż liczba elementów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="824af-186">The <paramref name="index" /> was greater of equal to the count of items in the collection.</span></span></exception>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit&#xA;override this.Remove : obj -&gt; unit" Usage="objectCollection.Remove value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="824af-187"><see cref="T:System.Object" /> Do usunięcia z listy.</span><span class="sxs-lookup"><span data-stu-id="824af-187">The <see cref="T:System.Object" /> to remove from the list.</span></span></param>
        <summary><span data-ttu-id="824af-188">Usuwa określony element z <see cref="T:System.Windows.Forms.ComboBox" />.</span><span class="sxs-lookup"><span data-stu-id="824af-188">Removes the specified item from the <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="824af-189">Nie jest zgłaszany żaden wyjątek, jeśli nie znaleziono określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="824af-189">No exception is thrown if the specified item is not found.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="objectCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="824af-190">Indeks elementu do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="824af-190">The index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="824af-191">Usuwa element z <see cref="T:System.Windows.Forms.ComboBox" /> o określonym indeksie.</span><span class="sxs-lookup"><span data-stu-id="824af-191">Removes an item from the <see cref="T:System.Windows.Forms.ComboBox" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="824af-192">Poniższy przykład <xref:System.Windows.Forms.ComboBox> kodu demonstruje sposób inicjowania kontrolki przez <xref:System.Windows.Forms.ComboBox.MaxDropDownItems%2A> ustawienie <xref:System.Windows.Forms.ComboBox> właściwości <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> i <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> , <xref:System.Windows.Forms.ComboBox.ObjectCollection.RemoveAt%2A> przy użyciu metod do wyszukiwania i metody usuwania elementu z programu <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="824af-192">The following code example demonstrates how to initialize a <xref:System.Windows.Forms.ComboBox> control by setting the <xref:System.Windows.Forms.ComboBox.MaxDropDownItems%2A> and <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> properties, using the <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> methods to search the <xref:System.Windows.Forms.ComboBox> and the <xref:System.Windows.Forms.ComboBox.ObjectCollection.RemoveAt%2A> method to remove an item from the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="824af-193">Pokazuje również obsługę <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="824af-193">It also shows handling the <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/CPP/form1.cpp#0)]
 [!code-csharp[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/CS/form1.cs#0)]
 [!code-vb[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/VB/form1.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="824af-194">Wartość <paramref name="value" /> parametru była mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="824af-194">The <paramref name="value" /> parameter was less than zero.</span></span>  
  
<span data-ttu-id="824af-195">—lub—</span><span class="sxs-lookup"><span data-stu-id="824af-195">-or-</span></span> 
<span data-ttu-id="824af-196"><paramref name="value" /> Parametr jest większy lub równy liczbie elementów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="824af-196">The <paramref name="value" /> parameter was greater than or equal to the count of items in the collection.</span></span></exception>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array dest, int index);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array dest, int32 index) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (dest As Array, index As Integer) Implements ICollection.CopyTo" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ dest, int index) = System::Collections::ICollection::CopyTo;" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array destination, int index);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array destination, int32 index) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (destination As Array, index As Integer) Implements ICollection.CopyTo" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ destination, int index) = System::Collections::ICollection::CopyTo;" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Array" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dest" Type="System.Array" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="index" Type="System.Int32" Index="1" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="824af-197">Jednowymiarowa tablica, która jest miejscem docelowym elementów skopiowanych z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="824af-197">The one-dimensional array that is the destination of the elements copied from the collection.</span></span> <span data-ttu-id="824af-198">Tablica musi mieć indeksowane zaczynające od zera.</span><span class="sxs-lookup"><span data-stu-id="824af-198">The array must have zero-based indexing.</span></span></param>
        <param name="dest"><span data-ttu-id="824af-199">Jednowymiarowa tablica, która jest miejscem docelowym elementów skopiowanych z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="824af-199">The one-dimensional array that is the destination of the elements copied from the collection.</span></span> <span data-ttu-id="824af-200">Tablica musi mieć indeksowane zaczynające od zera.</span><span class="sxs-lookup"><span data-stu-id="824af-200">The array must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="824af-201">Indeks (liczony od zera) w tablicy, w której rozpoczyna się kopiowanie.</span><span class="sxs-lookup"><span data-stu-id="824af-201">The zero-based index in the array at which copying begins.</span></span></param>
        <summary><span data-ttu-id="824af-202">Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />Zobacz.</span><span class="sxs-lookup"><span data-stu-id="824af-202">For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="824af-203">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="824af-203">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="824af-204">Może być używana tylko wtedy, <xref:System.Windows.Forms.ComboBox.ObjectCollection> gdy wystąpienie jest rzutowane <xref:System.Collections.ICollection> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="824af-204">It can be used only when the <xref:System.Windows.Forms.ComboBox.ObjectCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ObjectCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="824af-205">Aby uzyskać opis tego elementu członkowskiego, <see cref="P:System.Collections.ICollection.IsSynchronized" />Zobacz.</span><span class="sxs-lookup"><span data-stu-id="824af-205">For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</span></span></summary>
        <value><span data-ttu-id="824af-206"><see langword="false" />we wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="824af-206"><see langword="false" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="824af-207">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="824af-207">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="824af-208">Może być używana tylko wtedy, <xref:System.Windows.Forms.ComboBox.ObjectCollection> gdy wystąpienie jest rzutowane <xref:System.Collections.ICollection> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="824af-208">It can be used only when the <xref:System.Windows.Forms.ComboBox.ObjectCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ObjectCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="824af-209">Aby uzyskać opis tego elementu członkowskiego, <see cref="P:System.Collections.ICollection.SyncRoot" />Zobacz.</span><span class="sxs-lookup"><span data-stu-id="824af-209">For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</span></span></summary>
        <value><span data-ttu-id="824af-210">Obiekt, który może służyć do synchronizowania dostępu do <see cref="T:System.Windows.Forms.ComboBox.ObjectCollection" />.</span><span class="sxs-lookup"><span data-stu-id="824af-210">An object that can be used to synchronize access to the <see cref="T:System.Windows.Forms.ComboBox.ObjectCollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="824af-211">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="824af-211">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="824af-212">Może być używana tylko wtedy, <xref:System.Windows.Forms.ComboBox.ObjectCollection> gdy wystąpienie jest rzutowane <xref:System.Collections.ICollection> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="824af-212">It can be used only when the <xref:System.Windows.Forms.ComboBox.ObjectCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (item As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ item) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="824af-213">Obiekt, który reprezentuje element, który ma zostać dodany do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="824af-213">An object that represents the item to add to the collection.</span></span></param>
        <summary><span data-ttu-id="824af-214">Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.Collections.IList.Add(System.Object)" />Zobacz.</span><span class="sxs-lookup"><span data-stu-id="824af-214">For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="824af-215">Indeks (liczony od zera) elementu w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="824af-215">The zero-based index of the item in the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="824af-216">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="824af-216">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="824af-217">Może być używana tylko wtedy, <xref:System.Windows.Forms.ComboBox.ObjectCollection> gdy wystąpienie jest rzutowane <xref:System.Collections.IList> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="824af-217">It can be used only when the <xref:System.Windows.Forms.ComboBox.ObjectCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 <span data-ttu-id="824af-218">Ta metoda dodaje element do pola kombi.</span><span class="sxs-lookup"><span data-stu-id="824af-218">This method adds an item to the combo box.</span></span> <span data-ttu-id="824af-219"><xref:System.Windows.Forms.ComboBox.Sorted%2A> Jeśli właściwość <xref:System.Windows.Forms.ComboBox> jest ustawiona na `true`, element zostanie wstawiony do listy alfabetycznie.</span><span class="sxs-lookup"><span data-stu-id="824af-219">If the <xref:System.Windows.Forms.ComboBox.Sorted%2A> property of the <xref:System.Windows.Forms.ComboBox> is set to `true`, the item is inserted into the list alphabetically.</span></span> <span data-ttu-id="824af-220">W przeciwnym razie element zostanie wstawiony na końcu listy.</span><span class="sxs-lookup"><span data-stu-id="824af-220">Otherwise, the item is inserted at the end of the list.</span></span>  
  
 <span data-ttu-id="824af-221">Wizualna reprezentacja elementu jest wyświetlana w polu kombi.</span><span class="sxs-lookup"><span data-stu-id="824af-221">A visual representation of the item is displayed in the combo box.</span></span> <span data-ttu-id="824af-222">Ta reprezentacja zawartości jest określana <xref:System.Windows.Forms.ListControl.DisplayMember%2A> przez właściwość.</span><span class="sxs-lookup"><span data-stu-id="824af-222">This content representation is specified by the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property.</span></span> <span data-ttu-id="824af-223">Jeśli właściwość jest `null`, <xref:System.Object.ToString%2A> Metoda elementu jest wywoływana w celu uzyskania ciągu, który jest wyświetlany w polu kombi; w przeciwnym razie zostanie wyświetlona Właściwość przechowywanego obiektu określona przez <xref:System.Windows.Forms.ListControl.DisplayMember%2A> właściwość. <xref:System.Windows.Forms.ListControl.DisplayMember%2A></span><span class="sxs-lookup"><span data-stu-id="824af-223">If the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property is `null`, the item's <xref:System.Object.ToString%2A> method is called to obtain the string that is displayed in the combo box; otherwise, the property of the stored object as specified by the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property is displayed.</span></span> <span data-ttu-id="824af-224">Aby dodać zestaw elementów do pola kombi, najlepiej użyć <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="824af-224">To add a set of items to the combo box, it is best to use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> method.</span></span> <span data-ttu-id="824af-225">Jeśli zdecydujesz się na użycie <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> metody do dodania zestawu elementów do pola kombi, <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> Użyj metody, aby zawiesić odtwarzanie <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> podczas dodawania oraz metodę wznawiania odrysowania.</span><span class="sxs-lookup"><span data-stu-id="824af-225">If you choose to use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> method to add a set of items to the combo box, use the <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> method to suspend repainting during your add and the <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> method to resume repainting.</span></span> <span data-ttu-id="824af-226">Możesz użyć <xref:System.Windows.Forms.ComboBox.ObjectCollection.Insert%2A> metody, aby określić lokalizację na liście, w której element zostanie dodany.</span><span class="sxs-lookup"><span data-stu-id="824af-226">You can use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Insert%2A> method to specify the location in the list where an item is added.</span></span> <span data-ttu-id="824af-227">Po dodaniu obiektu do kolekcji <xref:System.Windows.Forms.ComboBox> wywołuje <xref:System.Object.ToString%2A> metodę obiektu, aby uzyskać ciąg do wyświetlenia na liście.</span><span class="sxs-lookup"><span data-stu-id="824af-227">When an object is added to the collection, the <xref:System.Windows.Forms.ComboBox> calls the object's <xref:System.Object.ToString%2A> method to obtain the string to display in the list.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="824af-228">Parametr ma wartość <see langword="null" />. <paramref name="item" /></span><span class="sxs-lookup"><span data-stu-id="824af-228">The <paramref name="item" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="824af-229">Za mało dostępnego miejsca do zapisania nowego elementu.</span><span class="sxs-lookup"><span data-stu-id="824af-229">There is insufficient space available to store the new item.</span></span></exception>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ObjectCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="824af-230">Aby uzyskać opis tego elementu członkowskiego, <see cref="P:System.Collections.IList.IsFixedSize" />Zobacz.</span><span class="sxs-lookup"><span data-stu-id="824af-230">For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</span></span></summary>
        <value><span data-ttu-id="824af-231"><see langword="false" />we wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="824af-231"><see langword="false" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="824af-232">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="824af-232">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="824af-233">Może być używana tylko wtedy, <xref:System.Windows.Forms.ComboBox.ObjectCollection> gdy wystąpienie jest rzutowane <xref:System.Collections.IList> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="824af-233">It can be used only when the <xref:System.Windows.Forms.ComboBox.ObjectCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
  </Members>
</Type>
