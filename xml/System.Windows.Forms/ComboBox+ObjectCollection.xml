<Type Name="ComboBox+ObjectCollection" FullName="System.Windows.Forms.ComboBox+ObjectCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8bc759759c10a1e2366c36bfdaf5c18cf1e58f9e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30703505" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ComboBox.ObjectCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ComboBox/ObjectCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ComboBox.ObjectCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ComboBox.ObjectCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ComboBox::ObjectCollection : System::Collections::IList" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="007a0-101">Reprezentuje kolekcję elementów w <see cref="T:System.Windows.Forms.ComboBox" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="007a0-101">Represents the collection of items in a <see cref="T:System.Windows.Forms.ComboBox" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="007a0-102"><xref:System.Windows.Forms.ComboBox.ObjectCollection?displayProperty=nameWithType> Klasa hermetyzuje elementów <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="007a0-102">The <xref:System.Windows.Forms.ComboBox.ObjectCollection?displayProperty=nameWithType> class encapsulates the items in the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="007a0-103">Kolekcja obiektów, pola kombi może być używana do zarządzania wiele typów obiektów, w tym ciągów, obrazy i obiektów niestandardowych biznesowych.</span><span class="sxs-lookup"><span data-stu-id="007a0-103">The object collection of a combo box can be used to manage many types of objects, including strings, images, and custom business objects.</span></span>  
  
 <span data-ttu-id="007a0-104">Można dodać elementów do kolekcji na kilka sposobów.</span><span class="sxs-lookup"><span data-stu-id="007a0-104">You can add items to the collection in several ways.</span></span> <span data-ttu-id="007a0-105"><xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> Metody dodaje jednego obiektu do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="007a0-105">The <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> method adds one object to the collection.</span></span> <span data-ttu-id="007a0-106">Aby dodać wiele obiektów do kolekcji, najlepiej utworzyć tablicę elementów i przypisać z <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="007a0-106">To add a number of objects to the collection, it is best to create an array of items and assign with the <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> method.</span></span> <span data-ttu-id="007a0-107">Aby wstawić obiektu z określonej lokalizacji w kolekcji, można użyć <xref:System.Windows.Forms.ComboBox.ObjectCollection.Insert%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="007a0-107">To insert an object at a specific location within the collection, you can use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Insert%2A> method.</span></span> <span data-ttu-id="007a0-108">Aby usunąć elementy w indeksie znane w kolekcji można użyć jednej <xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> metody lub <xref:System.Windows.Forms.ComboBox.ObjectCollection.RemoveAt%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="007a0-108">To remove items at a known index in the collection you can use either the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> method or the <xref:System.Windows.Forms.ComboBox.ObjectCollection.RemoveAt%2A> method.</span></span> <span data-ttu-id="007a0-109"><xref:System.Windows.Forms.ComboBox.ObjectCollection.Clear%2A> Metoda usuwa wszystkie elementy z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="007a0-109">The <xref:System.Windows.Forms.ComboBox.ObjectCollection.Clear%2A> method removes all the items from the collection.</span></span>  
  
 <span data-ttu-id="007a0-110">Oprócz metod i właściwości dla Dodawanie i usuwanie elementów <xref:System.Windows.Forms.ComboBox.ObjectCollection?displayProperty=nameWithType> również udostępnia metody, aby znaleźć elementy w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="007a0-110">In addition to methods and properties for adding and removing items, the <xref:System.Windows.Forms.ComboBox.ObjectCollection?displayProperty=nameWithType> also provides methods to find items within the collection.</span></span> <span data-ttu-id="007a0-111"><xref:System.Windows.Forms.ComboBox.ObjectCollection.Contains%2A> Metody umożliwia określenie, czy obiekt jest członkiem kolekcji.</span><span class="sxs-lookup"><span data-stu-id="007a0-111">The <xref:System.Windows.Forms.ComboBox.ObjectCollection.Contains%2A> method enables you to determine if an object is a member of the collection.</span></span> <span data-ttu-id="007a0-112">Po sprawdzeniu, czy element znajduje się w kolekcji, można użyć <xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A> metodę, aby określić, w którym element znajduje się w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="007a0-112">Once you know that the item is located within the collection, you can use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A> method to determine where the item is located within the collection.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectCollection (System.Windows.Forms.ComboBox owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ComboBox owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.#ctor(System.Windows.Forms.ComboBox)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ComboBox)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectCollection(System::Windows::Forms::ComboBox ^ owner);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ComboBox" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="007a0-113">
            <see cref="T:System.Windows.Forms.ComboBox" /> , Który jest właścicielem tej kolekcji obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-113">The <see cref="T:System.Windows.Forms.ComboBox" /> that owns this object collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="007a0-114">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ComboBox.ObjectCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-114">Initializes a new instance of <see cref="T:System.Windows.Forms.ComboBox.ObjectCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="007a0-115">Nie można utworzyć wystąpienia tej klasy nie było możliwe skojarzenie go z <xref:System.Windows.Forms.ComboBox> formantu.</span><span class="sxs-lookup"><span data-stu-id="007a0-115">An instance of this class cannot be created without associating it with a <xref:System.Windows.Forms.ComboBox> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="007a0-116">Obiekt reprezentujący element, aby dodać do kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-116">An object representing the item to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="007a0-117">Dodaje element do listy elementów do <see cref="T:System.Windows.Forms.ComboBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-117">Adds an item to the list of items for a <see cref="T:System.Windows.Forms.ComboBox" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="007a0-118">Liczony od zera indeks elementu w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-118">The zero-based index of the item in the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="007a0-119">Ta metoda dodaje element do pola kombi.</span><span class="sxs-lookup"><span data-stu-id="007a0-119">This method adds an item to the combo box.</span></span> <span data-ttu-id="007a0-120">Jeśli <xref:System.Windows.Forms.ComboBox.Sorted%2A> właściwość <xref:System.Windows.Forms.ComboBox> ma ustawioną wartość `true`, element jest umieszczone na liście w kolejności alfabetycznej.</span><span class="sxs-lookup"><span data-stu-id="007a0-120">If the <xref:System.Windows.Forms.ComboBox.Sorted%2A> property of the <xref:System.Windows.Forms.ComboBox> is set to `true`, the item is inserted into the list alphabetically.</span></span> <span data-ttu-id="007a0-121">W przeciwnym razie element są wstawiane na końcu listy.</span><span class="sxs-lookup"><span data-stu-id="007a0-121">Otherwise, the item is inserted at the end of the list.</span></span>  
  
 <span data-ttu-id="007a0-122">Wizualną reprezentację element jest wyświetlany w polu kombi.</span><span class="sxs-lookup"><span data-stu-id="007a0-122">A visual representation of the item is displayed in the combo box.</span></span> <span data-ttu-id="007a0-123">Taka reprezentacja zawartości jest określona przez <xref:System.Windows.Forms.ListControl.DisplayMember%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="007a0-123">This content representation is specified by the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property.</span></span> <span data-ttu-id="007a0-124">Jeśli <xref:System.Windows.Forms.ListControl.DisplayMember%2A> właściwość jest `null`, elementu `ToString` metoda jest wywoływana, aby uzyskać ciąg, który jest wyświetlany w polu kombi, a w przeciwnym razie wartość właściwości przechowywanych obiektu określony przez <xref:System.Windows.Forms.ListControl.DisplayMember%2A> właściwość jest wyświetlana.</span><span class="sxs-lookup"><span data-stu-id="007a0-124">If the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property is `null`, the item's `ToString` method is called to obtain the string that is displayed in the combo box; otherwise, the property of the stored object as specified by the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property is displayed.</span></span> <span data-ttu-id="007a0-125">A <xref:System.SystemException> występuje, gdy jest za mało miejsca zapisać nowy element.</span><span class="sxs-lookup"><span data-stu-id="007a0-125">A <xref:System.SystemException> occurs if there is insufficient space available to store the new item.</span></span> <span data-ttu-id="007a0-126">Aby dodać zestaw elementów do pola kombi jest najlepiej użyć <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="007a0-126">To add a set of items to the combo box it is best to use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> method.</span></span> <span data-ttu-id="007a0-127">Jeśli chcesz użyć <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> metody, aby dodać liczbę elementów do pola kombi, użyj <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> metody wstrzymania ponownego rysowania podczas Dodaj użytkownika i <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> metodę, aby wznowić ponownego rysowania.</span><span class="sxs-lookup"><span data-stu-id="007a0-127">If you choose to use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> method to add a number of items to the combo box, use the <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> method to suspend repainting during your add and the <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> method to resume repainting.</span></span> <span data-ttu-id="007a0-128">Można użyć <xref:System.Windows.Forms.ComboBox.ObjectCollection.Insert%2A> metodę, aby określić lokalizację na liście, w którym element został dodany.</span><span class="sxs-lookup"><span data-stu-id="007a0-128">You can use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Insert%2A> method to specify the location in the list where an item is added.</span></span> <span data-ttu-id="007a0-129">Gdy obiekt zostanie dodany do kolekcji, <xref:System.Windows.Forms.ComboBox> wywołuje metodę obiektu <xref:System.Object.ToString%2A> metodę, aby uzyskać ciąg do wyświetlenia na liście.</span><span class="sxs-lookup"><span data-stu-id="007a0-129">When an object is added to the collection, the <xref:System.Windows.Forms.ComboBox> calls the object's <xref:System.Object.ToString%2A> method to obtain the string to display in the list.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="007a0-130">
            <paramref name="item" /> Parametru <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-130">The <paramref name="item" /> parameter was <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (object[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(object[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.AddRange(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Object ^&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="007a0-131">Tablica obiektów, aby dodać do listy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-131">An array of objects to add to the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="007a0-132">Dodaje tablicę elementów do listy elementów do <see cref="T:System.Windows.Forms.ComboBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-132">Adds an array of items to the list of items for a <see cref="T:System.Windows.Forms.ComboBox" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="007a0-133">Jeśli <xref:System.Windows.Forms.ComboBox.Sorted%2A> właściwość <xref:System.Windows.Forms.ComboBox> ma ustawioną wartość true, elementy są umieszczone na liście alfabetycznie.</span><span class="sxs-lookup"><span data-stu-id="007a0-133">If the <xref:System.Windows.Forms.ComboBox.Sorted%2A> property of the <xref:System.Windows.Forms.ComboBox> is set to true, the items are inserted into the list alphabetically.</span></span> <span data-ttu-id="007a0-134">W przeciwnym razie elementy są wstawiane w kolejności, w jakiej występują w tablicy.</span><span class="sxs-lookup"><span data-stu-id="007a0-134">Otherwise, the items are inserted in the order they occur within the array.</span></span> <span data-ttu-id="007a0-135">Ta metoda jest zwykle przekazywany tablicę <xref:System.String> obiektów, ale tablica obiekty dowolnego typu, które mogą zostać przekazane do tej metody.</span><span class="sxs-lookup"><span data-stu-id="007a0-135">This method is typically passed an array of <xref:System.String> objects, but an array of any type of object can be passed to this method.</span></span> <span data-ttu-id="007a0-136">Gdy obiekt zostanie dodany do kolekcji, metoda wywołuje metodę obiektu <xref:System.Object.ToString%2A> metodę, aby uzyskać ciąg do wyświetlenia na liście.</span><span class="sxs-lookup"><span data-stu-id="007a0-136">When an object is added to the collection, the method calls the object's <xref:System.Object.ToString%2A> method to obtain the string to display in the list.</span></span> <span data-ttu-id="007a0-137">Przy użyciu tej metody do dodawania elementów do kolekcji, nie trzeba wywołać <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> i <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> metod w celu optymalizacji wydajności.</span><span class="sxs-lookup"><span data-stu-id="007a0-137">When using this method to add items to the collection, you do not need to call the <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> and <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> methods to optimize performance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="007a0-138">Poniższy przykład kodu pokazuje, jak zainicjować <xref:System.Windows.Forms.ComboBox> kontroli przez ustawienie właściwości text i przy użyciu <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> metodę, aby wypełnić <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="007a0-138">The following code example demonstrates how to initialize a <xref:System.Windows.Forms.ComboBox> control by setting the text property and using the <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> method to populate the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="007a0-139">Obsługa ilustruje też <xref:System.Windows.Forms.ComboBox.DropDown> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="007a0-139">It also demonstrates handling the <xref:System.Windows.Forms.ComboBox.DropDown> event.</span></span> <span data-ttu-id="007a0-140">Aby uruchomić przykład, wklej następujący kod w postaci i wywołanie `InitializeComboBox` metody z Konstruktor elementu form lub `Load` — metoda.</span><span class="sxs-lookup"><span data-stu-id="007a0-140">To run the example, paste the following code in a form and call the `InitializeComboBox` method from the form's constructor or `Load` method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="007a0-141">Element <paramref name="items" /> parametru <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-141">An item in the <paramref name="items" /> parameter was <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="007a0-142">Usuwa wszystkie elementy z <see cref="T:System.Windows.Forms.ComboBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-142">Removes all items from the <see cref="T:System.Windows.Forms.ComboBox" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="007a0-143">Po usunięciu elementów z listy wszystkie informacje dotyczące usunięte elementy zostaną utracone.</span><span class="sxs-lookup"><span data-stu-id="007a0-143">When you remove items from the list, all information about the deleted items is lost.</span></span> <span data-ttu-id="007a0-144">Aby usunąć z jednym elementem <xref:System.Windows.Forms.ComboBox>, użyj <xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> lub <xref:System.Windows.Forms.ComboBox.ObjectCollection.RemoveAt%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="007a0-144">To remove a single item from the <xref:System.Windows.Forms.ComboBox>, use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> or <xref:System.Windows.Forms.ComboBox.ObjectCollection.RemoveAt%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="007a0-145">Obiekt reprezentujący element do zlokalizowania w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-145">An object representing the item to locate in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="007a0-146">Określa, czy określony element znajduje się w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-146">Determines if the specified item is located within the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="007a0-147">
            <see langword="true" /> Jeśli element znajduje się w kolekcji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-147">
              <see langword="true" /> if the item is located within the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="007a0-148"><xref:System.Windows.Forms.ComboBox.ObjectCollection.Contains%2A> Metody umożliwia określenie, czy obiekt jest członkiem kolekcji.</span><span class="sxs-lookup"><span data-stu-id="007a0-148">The <xref:System.Windows.Forms.ComboBox.ObjectCollection.Contains%2A> method enables you to determine if an object is a member of the collection.</span></span> <span data-ttu-id="007a0-149">Po sprawdzeniu, czy element znajduje się w kolekcji, można użyć <xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A> metodę, aby określić, w którym element znajduje się w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="007a0-149">Once you know that the item is located within the collection, you can use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A> method to determine where the item is located within the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (object[] destination, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(object[] destination, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.CopyTo(System.Object[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Object(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Object ^&gt; ^ destination, int arrayIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Object[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="007a0-150">Tablica obiektów do skopiowania do kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-150">The object array to copy the collection to.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="007a0-151">Lokalizacja, w celu skopiowania kolekcji do tablicy docelowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-151">The location in the destination array to copy the collection to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="007a0-152">Kopiuje całą kolekcję na tablicę istniejące obiekty w określonej lokalizacji w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-152">Copies the entire collection into an existing array of objects at a specified location within the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="007a0-153">Ta metoda umożliwia łączenie elementów z wielu kolekcji do jednej macierzy.</span><span class="sxs-lookup"><span data-stu-id="007a0-153">You can use this method to combine the items from multiple collections into a single array.</span></span> <span data-ttu-id="007a0-154">Można następnie użyć tej tablicy do wypełnienia zawartość innego <xref:System.Windows.Forms.ComboBox> kontrolować za pomocą <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> metody <xref:System.Windows.Forms.ComboBox.ObjectCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="007a0-154">You can then use this array to populate the contents of another <xref:System.Windows.Forms.ComboBox> control using the <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> method of the <xref:System.Windows.Forms.ComboBox.ObjectCollection> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ObjectCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="007a0-155">Pobiera liczbę elementów w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-155">Gets the number of items in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="007a0-156">Liczba elementów w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-156">The number of items in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="007a0-157">Ta właściwość umożliwia określenie liczby elementów w <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="007a0-157">This property enables you to determine the number of items in the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="007a0-158">Tej wartości można użyć, gdy wartości kolekcji w pętli.</span><span class="sxs-lookup"><span data-stu-id="007a0-158">You can use this value when looping through the values of the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="007a0-159">Zwraca moduł wyliczający, który może służyć do iterowania po kolekcji elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-159">Returns an enumerator that can be used to iterate through the item collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="007a0-160">
            <see cref="T:System.Collections.IEnumerator" /> Reprezentujący kolekcji elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-160">An <see cref="T:System.Collections.IEnumerator" /> that represents the item collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="007a0-161">Obiekt reprezentujący element do zlokalizowania w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-161">An object representing the item to locate in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="007a0-162">Pobiera indeks w kolekcji określony element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-162">Retrieves the index within the collection of the specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="007a0-163">Liczony od zera indeks, w którym element znajduje się w kolekcji; w przeciwnym razie wartość -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-163">The zero-based index where the item is located within the collection; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="007a0-164"><xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A> Metody umożliwia określenie, w którym element znajduje się w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="007a0-164">The <xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A> method enables you to determine where an item is located within the collection.</span></span> <span data-ttu-id="007a0-165">Aby określić, jeśli element znajduje się w kolekcji przed wywołaniem tej metody, użyj <xref:System.Windows.Forms.ComboBox.ObjectCollection.Contains%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="007a0-165">To determine if an item is located within the collection before calling this method, use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Contains%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="007a0-166">
            <paramref name="value" /> Parametru <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-166">The <paramref name="value" /> parameter was <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="007a0-167">Lokalizacja liczony od zera indeks, gdzie wstawiony element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-167">The zero-based index location where the item is inserted.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="007a0-168">Obiekt reprezentujący element do wstawienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-168">An object representing the item to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="007a0-169">Wstawia element do kolekcji pod określonym indeksem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-169">Inserts an item into the collection at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="007a0-170">Jeśli <xref:System.Windows.Forms.ComboBox.Sorted%2A> właściwość <xref:System.Windows.Forms.ComboBox> ma wartość true, `index` parametru jest ignorowana.</span><span class="sxs-lookup"><span data-stu-id="007a0-170">If the <xref:System.Windows.Forms.ComboBox.Sorted%2A> property of the <xref:System.Windows.Forms.ComboBox> is true, the `index` parameter is ignored.</span></span> <span data-ttu-id="007a0-171">Gdy obiekt zostanie dodany do kolekcji, <xref:System.Windows.Forms.ComboBox> wywołuje metodę obiektu <xref:System.Object.ToString%2A> metody jest uzyskanie ciąg do wyświetlenia na liście.</span><span class="sxs-lookup"><span data-stu-id="007a0-171">When an object is added to the collection, the <xref:System.Windows.Forms.ComboBox> calls the object's <xref:System.Object.ToString%2A> method is to obtain the string to display in the list.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="007a0-172">
            <paramref name="item" /> Został <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-172">The <paramref name="item" /> was <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="007a0-173">
            <paramref name="index" /> Była mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-173">The <paramref name="index" /> was less than zero.</span>
          </span>
          <span data-ttu-id="007a0-174">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-174">-or-</span>
          </span>
          <span data-ttu-id="007a0-175">
            <paramref name="index" /> Była większa niż liczba elementów w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-175">The <paramref name="index" /> was greater than the count of items in the collection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ObjectCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="007a0-176">Pobiera wartość wskazującą, czy można modyfikować tej kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-176">Gets a value indicating whether this collection can be modified.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="007a0-177">Zawsze <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-177">Always <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ObjectCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="007a0-178">Indeks elementu w kolekcji do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-178">The index of the item in the collection to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="007a0-179">Pobiera element pod określonym indeksem w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-179">Retrieves the item at the specified index within the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="007a0-180">Obiekt reprezentujący element znajduje się pod określonym indeksem w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-180">An object representing the item located at the specified index within the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="007a0-181">Ta metoda służy do uzyskania elementu w określonej lokalizacji w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="007a0-181">You can use this method to obtain the item at the specified location within the collection.</span></span> <span data-ttu-id="007a0-182">Można użyć <xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A> można znaleźć lokalizacji elementu, lub można użyć indeksu zwrócone z <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="007a0-182">You can use <xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A> to find the location of an item, or you can use the index return from the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="007a0-183">Indeks był mniejszy od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-183">The index was less than zero.</span>
          </span>
          <span data-ttu-id="007a0-184">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-184">-or-</span>
          </span>
          <span data-ttu-id="007a0-185">
            <paramref name="index" /> Była większa równe liczba elementów w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-185">The <paramref name="index" /> was greater of equal to the count of items in the collection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="007a0-186">
            <see cref="T:System.Object" /> Do usunięcia z listy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-186">The <see cref="T:System.Object" /> to remove from the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="007a0-187">Usuwa określony element z <see cref="T:System.Windows.Forms.ComboBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-187">Removes the specified item from the <see cref="T:System.Windows.Forms.ComboBox" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="007a0-188">Wyjątek nie jest generowany, jeśli określony element nie zostanie znaleziony.</span><span class="sxs-lookup"><span data-stu-id="007a0-188">No exception is thrown if the specified item is not found.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="007a0-189">Indeks elementu do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-189">The index of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="007a0-190">Usuwa element z <see cref="T:System.Windows.Forms.ComboBox" /> pod określonym indeksem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-190">Removes an item from the <see cref="T:System.Windows.Forms.ComboBox" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="007a0-191">Poniższy przykład kodu pokazuje, jak zainicjować <xref:System.Windows.Forms.ComboBox> kontroli przez ustawienie <xref:System.Windows.Forms.ComboBox.MaxDropDownItems%2A> i <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> właściwości, za pomocą <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> metody do wyszukiwania <xref:System.Windows.Forms.ComboBox> i <xref:System.Windows.Forms.ComboBox.ObjectCollection.RemoveAt%2A> metodę, aby usunąć element z <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="007a0-191">The following code example demonstrates how to initialize a <xref:System.Windows.Forms.ComboBox> control by setting the <xref:System.Windows.Forms.ComboBox.MaxDropDownItems%2A> and <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> properties, using the <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> methods to search the <xref:System.Windows.Forms.ComboBox> and the <xref:System.Windows.Forms.ComboBox.ObjectCollection.RemoveAt%2A> method to remove an item from the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="007a0-192">Przedstawiono również obsługa <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="007a0-192">It also shows handling the <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/CPP/form1.cpp#0)]
 [!code-csharp[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/CS/form1.cs#0)]
 [!code-vb[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/VB/form1.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="007a0-193">
            <paramref name="value" /> Parametr była mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-193">The <paramref name="value" /> parameter was less than zero.</span>
          </span>
          <span data-ttu-id="007a0-194">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-194">-or-</span>
          </span>
          <span data-ttu-id="007a0-195">
            <paramref name="value" /> Parametr jest mniejsza niż liczba elementów w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-195">The <paramref name="value" /> parameter was greater than or equal to the count of items in the collection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array destination, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array destination, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (destination As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ destination, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="007a0-196">Jednowymiarowa tablica, która jest miejscem docelowym elementów kopiowanych z kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-196">The one-dimensional array that is the destination of the elements copied from the collection.</span>
          </span>
          <span data-ttu-id="007a0-197">Tablica musi mieć indeksowane zaczynające od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-197">The array must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="007a0-198">Rozpoczyna się od zera indeks w tablicy, od których kopiowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-198">The zero-based index in the array at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="007a0-199">Opis tego elementu członkowskiego, zobacz <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-199">For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="007a0-200">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="007a0-200">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="007a0-201">Można go używać tylko wtedy, gdy <xref:System.Windows.Forms.ComboBox.ObjectCollection> wystąpienia jest rzutowane na <xref:System.Collections.ICollection> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="007a0-201">It can be used only when the <xref:System.Windows.Forms.ComboBox.ObjectCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ObjectCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="007a0-202">Opis tego elementu członkowskiego, zobacz <see cref="P:System.Collections.ICollection.IsSynchronized" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-202">For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="007a0-203">
            <see langword="false" /> we wszystkich przypadkach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-203">
              <see langword="false" /> in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="007a0-204">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="007a0-204">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="007a0-205">Można go używać tylko wtedy, gdy <xref:System.Windows.Forms.ComboBox.ObjectCollection> wystąpienia jest rzutowane na <xref:System.Collections.ICollection> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="007a0-205">It can be used only when the <xref:System.Windows.Forms.ComboBox.ObjectCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ObjectCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="007a0-206">Opis tego elementu członkowskiego, zobacz <see cref="P:System.Collections.ICollection.SyncRoot" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-206">For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="007a0-207">Obiekt, który może służyć do synchronizujący dostęp do <see cref="T:System.Windows.Forms.ComboBox.ObjectCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-207">An object that can be used to synchronize access to the <see cref="T:System.Windows.Forms.ComboBox.ObjectCollection" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="007a0-208">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="007a0-208">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="007a0-209">Można go używać tylko wtedy, gdy <xref:System.Windows.Forms.ComboBox.ObjectCollection> wystąpienia jest rzutowane na <xref:System.Collections.ICollection> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="007a0-209">It can be used only when the <xref:System.Windows.Forms.ComboBox.ObjectCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (item As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ item) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="007a0-210">Obiekt, który reprezentuje element, aby dodać do kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-210">An object that represents the item to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="007a0-211">Opis tego elementu członkowskiego, zobacz <see cref="M:System.Collections.IList.Add(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-211">For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="007a0-212">Liczony od zera indeks elementu w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-212">The zero-based index of the item in the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="007a0-213">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="007a0-213">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="007a0-214">Można go używać tylko wtedy, gdy <xref:System.Windows.Forms.ComboBox.ObjectCollection> wystąpienia jest rzutowane na <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="007a0-214">It can be used only when the <xref:System.Windows.Forms.ComboBox.ObjectCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 <span data-ttu-id="007a0-215">Ta metoda dodaje element do pola kombi.</span><span class="sxs-lookup"><span data-stu-id="007a0-215">This method adds an item to the combo box.</span></span> <span data-ttu-id="007a0-216">Jeśli <xref:System.Windows.Forms.ComboBox.Sorted%2A> właściwość <xref:System.Windows.Forms.ComboBox> ma ustawioną wartość `true`, element jest umieszczone na liście w kolejności alfabetycznej.</span><span class="sxs-lookup"><span data-stu-id="007a0-216">If the <xref:System.Windows.Forms.ComboBox.Sorted%2A> property of the <xref:System.Windows.Forms.ComboBox> is set to `true`, the item is inserted into the list alphabetically.</span></span> <span data-ttu-id="007a0-217">W przeciwnym razie element są wstawiane na końcu listy.</span><span class="sxs-lookup"><span data-stu-id="007a0-217">Otherwise, the item is inserted at the end of the list.</span></span>  
  
 <span data-ttu-id="007a0-218">Wizualną reprezentację element jest wyświetlany w polu kombi.</span><span class="sxs-lookup"><span data-stu-id="007a0-218">A visual representation of the item is displayed in the combo box.</span></span> <span data-ttu-id="007a0-219">Taka reprezentacja zawartości jest określona przez <xref:System.Windows.Forms.ListControl.DisplayMember%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="007a0-219">This content representation is specified by the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property.</span></span> <span data-ttu-id="007a0-220">Jeśli <xref:System.Windows.Forms.ListControl.DisplayMember%2A> właściwość jest `null`, elementu <xref:System.Object.ToString%2A> metoda jest wywoływana, aby uzyskać ciąg, który jest wyświetlany w polu kombi, a w przeciwnym razie wartość właściwości przechowywanych obiektu określony przez <xref:System.Windows.Forms.ListControl.DisplayMember%2A> właściwość jest wyświetlana.</span><span class="sxs-lookup"><span data-stu-id="007a0-220">If the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property is `null`, the item's <xref:System.Object.ToString%2A> method is called to obtain the string that is displayed in the combo box; otherwise, the property of the stored object as specified by the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property is displayed.</span></span> <span data-ttu-id="007a0-221">Aby dodać zestaw elementów do pola kombi, najlepiej użyć <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="007a0-221">To add a set of items to the combo box, it is best to use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> method.</span></span> <span data-ttu-id="007a0-222">Jeśli chcesz użyć <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> metody, aby dodać zestaw elementów do pola kombi, użyj <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> metody wstrzymania ponownego rysowania podczas Dodaj użytkownika i <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> metodę, aby wznowić ponownego rysowania.</span><span class="sxs-lookup"><span data-stu-id="007a0-222">If you choose to use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> method to add a set of items to the combo box, use the <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> method to suspend repainting during your add and the <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> method to resume repainting.</span></span> <span data-ttu-id="007a0-223">Można użyć <xref:System.Windows.Forms.ComboBox.ObjectCollection.Insert%2A> metodę, aby określić lokalizację na liście, w którym element został dodany.</span><span class="sxs-lookup"><span data-stu-id="007a0-223">You can use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Insert%2A> method to specify the location in the list where an item is added.</span></span> <span data-ttu-id="007a0-224">Gdy obiekt zostanie dodany do kolekcji, <xref:System.Windows.Forms.ComboBox> wywołuje metodę obiektu <xref:System.Object.ToString%2A> metodę, aby uzyskać ciąg do wyświetlenia na liście.</span><span class="sxs-lookup"><span data-stu-id="007a0-224">When an object is added to the collection, the <xref:System.Windows.Forms.ComboBox> calls the object's <xref:System.Object.ToString%2A> method to obtain the string to display in the list.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="007a0-225">
            <paramref name="item" /> Parametr jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-225">The <paramref name="item" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="007a0-226">Jest za mało miejsca zapisać nowy element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-226">There is insufficient space available to store the new item.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ObjectCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="007a0-227">Opis tego elementu członkowskiego, zobacz <see cref="P:System.Collections.IList.IsFixedSize" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-227">For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="007a0-228">
            <see langword="false" /> we wszystkich przypadkach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="007a0-228">
              <see langword="false" /> in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="007a0-229">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="007a0-229">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="007a0-230">Można go używać tylko wtedy, gdy <xref:System.Windows.Forms.ComboBox.ObjectCollection> wystąpienia jest rzutowane na <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="007a0-230">It can be used only when the <xref:System.Windows.Forms.ComboBox.ObjectCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
  </Members>
</Type>