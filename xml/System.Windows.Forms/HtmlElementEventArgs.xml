<Type Name="HtmlElementEventArgs" FullName="System.Windows.Forms.HtmlElementEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ead50f01f4dfcc097dcdfb2ec7117d4e32767126" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39999960" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HtmlElementEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HtmlElementEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.HtmlElementEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HtmlElementEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlElementEventArgs sealed : EventArgs" />
  <TypeSignature Language="F#" Value="type HtmlElementEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia dane dla zdarzenia, zdefiniowany na <see cref="T:System.Windows.Forms.HtmlDocument" /> i <see cref="T:System.Windows.Forms.HtmlElement" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.HtmlElementEventArgs> hermetyzuje te same informacje w `window.event` obiekt podczas programowania dla niezarządzanego HTML DOM lub podczas pisania skryptu Active dla stron HTML.  
  
 W większości przypadków można użyć <xref:System.Windows.Forms.HtmlElementEventArgs.ToElement%2A> można znaleźć elementu HTML, który otrzymuje Akcja zdarzenia i <xref:System.Windows.Forms.HtmlElementEventArgs.FromElement%2A> można znaleźć element HTML, który powoduje nam pozostaw bieżącego zdarzenia. Jednak nie wszystkie zdarzenia dostarcza wartości tych właściwości; zobacz dokumentację zarządzanych zdarzeń lub odpowiedniej dokumentacji w dokumentacji zestawu SDK programu Internet Explorer, aby dowiedzieć się, jeśli zdarzenie dostarcza go.  
  
 Wiele zdarzeń w modelu DOM HTML są wysyłane do ich elementów nadrzędnych, chyba że są one anulowane. Jest to nazywane Propagacja zdarzeń. Jeśli `SPAN` wewnątrz `DIV` odbiera kliknięcie, a następnie kliknij wywołaniu zdarzenia dla `SPAN` po pierwsze, następnie dla `DIV`, a na koniec strony HTML `BODY` elementu. <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> Określa, czy zdarzenie będzie działać w ten sposób, czy nie.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego typu. W tym przykładzie program obsługi zdarzeń raporty w momencie wystąpienia <xref:System.Windows.Forms.HtmlDocument.Click> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby zgłosić na wiele zdarzeń lub zdarzeń, które często występują, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączane wiadomość w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wkleić go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.HtmlDocument> o nazwie `HtmlDocument1`. Upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.HtmlDocument.Click> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]
 [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AltKeyPressed">
      <MemberSignature Language="C#" Value="public bool AltKeyPressed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AltKeyPressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.AltKeyPressed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AltKeyPressed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AltKeyPressed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AltKeyPressed : bool" Usage="System.Windows.Forms.HtmlElementEventArgs.AltKeyPressed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje, czy klawisz ALT został naciśnięty po wystąpieniu tego zdarzenia.</summary>
        <value>
          <see langword="true" /> czy klawisz ALT został naciśnięty; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raporty w momencie wystąpienia <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby zgłosić na wiele zdarzeń lub zdarzeń, które często występują, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączane wiadomość w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wkleić go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.HtmlDocument> o nazwie `HtmlDocument1`. Upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]
 [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BubbleEvent">
      <MemberSignature Language="C#" Value="public bool BubbleEvent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BubbleEvent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent" />
      <MemberSignature Language="VB.NET" Value="Public Property BubbleEvent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BubbleEvent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BubbleEvent : bool with get, set" Usage="System.Windows.Forms.HtmlElementEventArgs.BubbleEvent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy bieżące zdarzenie przechodzić przez hierarchię elementu HTML Document Object Model.</summary>
        <value>
          <see langword="true" /> Jeśli zdarzenie propaguje; <see langword="false" /> Jeśli tak nie jest.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie wszystkie zdarzenia w bąbelków Document Object Model. Wszystkie zdarzenia udostępnianych przez <xref:System.Windows.Forms.HtmlDocument> zarządzanych otoka bąbelków, z wyjątkiem produktów <xref:System.Windows.Forms.HtmlDocument.Stop>. Aby uzyskać <xref:System.Windows.Forms.HtmlElement>, `Error` i `Load` nie będą się pojawiać zdarzenia. Ustawienie `BubbleEvent` do `true` podczas dowolne z tych zdarzeń nie odniesie skutku.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raporty w momencie wystąpienia <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby zgłosić na wiele zdarzeń lub zdarzeń, które często występują, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączane wiadomość w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wkleić go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.HtmlDocument> o nazwie `HtmlDocument1`. Upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]
 [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientMousePosition">
      <MemberSignature Language="C#" Value="public System.Drawing.Point ClientMousePosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point ClientMousePosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientMousePosition As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point ClientMousePosition { System::Drawing::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientMousePosition : System.Drawing.Point" Usage="System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia położenie kursora myszy w obszarze klienta dokumentu.</summary>
        <value>Bieżące położenie kursora myszy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ClientMousePosition` zapewnia położenie myszy kursora względem lewego górnego rogu dokumencie. Użyj <xref:System.Windows.Forms.HtmlElementEventArgs.MousePosition%2A> Jeśli potrzebujesz współrzędne myszy względem elementu, który spowodował zdarzenie.  
  
   
  
## Examples  
 Następujący plik HTML przedstawiono względne położenie `TABLE` wewnątrz `BODY` tagu.  
  
```  
<HTML>  
  
<BODY>  
  
    <TABLE style="position:relative;top:100px;left:100px;">  
        <TR>  
            <TD>Text</TD>  
            <TD>More text</TD>  
        </TR>  
    </TABLE>  
  
</BODY>  
  
</HTML>  
  
```  
  
 Poniższy przykład kodu wyświetla różnicę między <xref:System.Windows.Forms.HtmlElementEventArgs.MousePosition%2A>, <xref:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition%2A>, i <xref:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition%2A> po użytkownik kliknie element `TABLE`. <xref:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition%2A> spowoduje wyświetlenie współrzędnych względem lewego górnego rogu obszaru klienckiego dokumentu. <xref:System.Windows.Forms.HtmlElementEventArgs.MousePosition%2A> spowoduje wyświetlenie współrzędnych względem lewego górnego rogu `TABLE`. Po kliknięciu jednego z wierszy tekstu, <xref:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition%2A> spowoduje wyświetlenie współrzędnych względnych w stosunku, `TD` elementu.  
  
 W tym przykładzie wymaga, że skonfigurowano `Document_MouseDown` jako procedura obsługi <xref:System.Windows.Forms.HtmlDocument.MouseDown> zdarzenie na <xref:System.Windows.Forms.HtmlDocument>.  
  
 [!code-csharp[System.Windows.Forms.HtmlElementEventArgs#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElementEventArgs/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.HtmlElementEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElementEventArgs/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.HtmlElementEventArgs.MousePosition" />
        <altmember cref="P:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition" />
      </Docs>
    </Member>
    <Member MemberName="CtrlKeyPressed">
      <MemberSignature Language="C#" Value="public bool CtrlKeyPressed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CtrlKeyPressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.CtrlKeyPressed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CtrlKeyPressed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CtrlKeyPressed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CtrlKeyPressed : bool" Usage="System.Windows.Forms.HtmlElementEventArgs.CtrlKeyPressed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje, czy klawisz CTRL został naciśnięty po wystąpieniu tego zdarzenia.</summary>
        <value>
          <see langword="true" /> Jeśli klawisz CTRL został naciśnięty; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raporty w momencie wystąpienia <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby zgłosić na wiele zdarzeń lub zdarzeń, które często występują, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączane wiadomość w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wkleić go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.HtmlDocument> o nazwie `HtmlDocument1`. Upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]
 [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventType">
      <MemberSignature Language="C#" Value="public string EventType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EventType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.EventType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EventType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EventType : string" Usage="System.Windows.Forms.HtmlElementEventArgs.EventType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę zdarzenia, które zostało podniesione.</summary>
        <value>Nazwa zdarzenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raporty w momencie wystąpienia <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby zgłosić na wiele zdarzeń lub zdarzeń, które często występują, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączane wiadomość w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wkleić go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.HtmlDocument> o nazwie `HtmlDocument1`. Upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]
 [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.HtmlDocument" />
        <altmember cref="T:System.Windows.Forms.HtmlElement" />
      </Docs>
    </Member>
    <Member MemberName="FromElement">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElement FromElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlElement FromElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.FromElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FromElement As HtmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlElement ^ FromElement { System::Windows::Forms::HtmlElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FromElement : System.Windows.Forms.HtmlElement" Usage="System.Windows.Forms.HtmlElementEventArgs.FromElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Windows.Forms.HtmlElement" /> wskaźnik myszy znajduje się przenoszenie opuszczenie.</summary>
        <value>
          <see cref="T:System.Windows.Forms.HtmlElement" /> Wskaźnik myszy znajduje się przenoszenie opuszczenie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.HtmlElementEventArgs.FromElement%2A> ma prawidłową wartość podczas zdarzenia myszy takich jak <xref:System.Windows.Forms.HtmlElement.MouseEnter> i <xref:System.Windows.Forms.HtmlElement.MouseLeave>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPressedCode">
      <MemberSignature Language="C#" Value="public int KeyPressedCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyPressedCode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.KeyPressedCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyPressedCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int KeyPressedCode { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyPressedCode : int" Usage="System.Windows.Forms.HtmlElementEventArgs.KeyPressedCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość ASCII wpisano znak klawiatury <see cref="E:System.Windows.Forms.HtmlElement.KeyPress" />, <see cref="E:System.Windows.Forms.HtmlElement.KeyDown" />, lub <see cref="E:System.Windows.Forms.HtmlElement.KeyUp" /> zdarzeń.</summary>
        <value>Wartość ASCII wpisu złożone klawiatury.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raporty w momencie wystąpienia <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby zgłosić na wiele zdarzeń lub zdarzeń, które często występują, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączane wiadomość w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wkleić go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.HtmlDocument> o nazwie `HtmlDocument1`. Upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]
 [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseButtonsPressed">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MouseButtons MouseButtonsPressed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.MouseButtons MouseButtonsPressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.MouseButtonsPressed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MouseButtonsPressed As MouseButtons" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MouseButtons MouseButtonsPressed { System::Windows::Forms::MouseButtons get(); };" />
      <MemberSignature Language="F#" Value="member this.MouseButtonsPressed : System.Windows.Forms.MouseButtons" Usage="System.Windows.Forms.HtmlElementEventArgs.MouseButtonsPressed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseButtons</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera przycisku myszy, który został kliknięty podczas <see cref="E:System.Windows.Forms.HtmlElement.MouseDown" /> lub <see cref="E:System.Windows.Forms.HtmlElement.MouseUp" /> zdarzeń.</summary>
        <value>Przycisk myszy, który został kliknięty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raporty w momencie wystąpienia <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby zgłosić na wiele zdarzeń lub zdarzeń, które często występują, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączane wiadomość w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wkleić go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.HtmlDocument> o nazwie `HtmlDocument1`. Upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]
 [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MousePosition">
      <MemberSignature Language="C#" Value="public System.Drawing.Point MousePosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point MousePosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.MousePosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MousePosition As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point MousePosition { System::Drawing::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.MousePosition : System.Drawing.Point" Usage="System.Windows.Forms.HtmlElementEventArgs.MousePosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia położenie kursora myszy względem elementu pozycjonowanego względnie nadrzędnego.</summary>
        <value>Pozycja kursora myszy względem lewego górnego rogu nadrzędnego elementu, który spowodował zdarzenie, jeśli element nadrzędny jest pozycjonowane względnie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pozycjonowanie względne służy w formacie HTML można umieścić element na stronie względem jego elementu nadrzędnego.  
  
 Jeśli element jest pozycjonowany w stosunkowo, właściwość ta zwróci ten sam wynik jako <xref:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition%2A>.  
  
   
  
## Examples  
 Następujący plik HTML przedstawiono względne położenie `TABLE` wewnątrz `BODY` tagu.  
  
```  
<HTML>  
  
<BODY>  
  
    <TABLE style="position:relative;top:100px;left:100px;">  
        <TR>  
            <TD>Text/TD>  
            <TD>More text</TD>  
        </TR>  
    </TABLE>  
  
</BODY>  
  
</HTML>  
  
```  
  
 Poniższy przykład kodu wyświetla różnicę między <xref:System.Windows.Forms.HtmlElementEventArgs.MousePosition%2A>, <xref:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition%2A>, i <xref:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition%2A> po użytkownik kliknie element `TABLE`. <xref:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition%2A> spowoduje wyświetlenie współrzędnych względem lewego górnego rogu obszaru klienckiego dokumentu. <xref:System.Windows.Forms.HtmlElementEventArgs.MousePosition%2A> spowoduje wyświetlenie współrzędnych względem lewego górnego rogu `TABLE`. Po kliknięciu jednego z wierszy tekstu, <xref:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition%2A> spowoduje wyświetlenie współrzędnych względnych w stosunku, `TD` elementu.  
  
 W tym przykładzie wymaga, że skonfigurowano `Document_MouseDown` jako procedura obsługi <xref:System.Windows.Forms.HtmlDocument.MouseDown> zdarzenie na <xref:System.Windows.Forms.HtmlDocument>.  
  
 [!code-csharp[System.Windows.Forms.HtmlElementEventArgs#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElementEventArgs/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.HtmlElementEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElementEventArgs/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition" />
        <altmember cref="P:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition" />
      </Docs>
    </Member>
    <Member MemberName="OffsetMousePosition">
      <MemberSignature Language="C#" Value="public System.Drawing.Point OffsetMousePosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point OffsetMousePosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OffsetMousePosition As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point OffsetMousePosition { System::Drawing::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.OffsetMousePosition : System.Drawing.Point" Usage="System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia położenie kursora myszy względem elementu, który wywołuje zdarzenie.</summary>
        <value>Położenie myszy względem elementu, który wywołuje zdarzenie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Następujący plik HTML przedstawiono względne położenie `TABLE` wewnątrz `BODY` tagu.  
  
```  
<HTML>  
  
<BODY>  
  
    <TABLE style="position:relative;top:100px;left:100px;">  
        <TR>  
            <TD>Text</TD>  
            <TD>More text</TD>  
        </TR>  
    </TABLE>  
  
</BODY>  
  
</HTML>  
  
```  
  
 Poniższy przykład kodu wyświetla różnicę między <xref:System.Windows.Forms.HtmlElementEventArgs.MousePosition%2A>, <xref:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition%2A> i <xref:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition%2A> po użytkownik kliknie element `TABLE`. <xref:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition%2A> spowoduje wyświetlenie współrzędnych względem lewego górnego rogu obszaru klienckiego dokumentu. <xref:System.Windows.Forms.HtmlElementEventArgs.MousePosition%2A> spowoduje wyświetlenie współrzędnych względem lewego górnego rogu `TABLE`. Po kliknięciu jednego z wierszy tekstu, <xref:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition%2A> spowoduje wyświetlenie współrzędnych względnych w stosunku, `TD` elementu.  
  
 W tym przykładzie wymaga, że skonfigurowano `Document_MouseDown` jako procedura obsługi <xref:System.Windows.Forms.HtmlDocument.MouseDown> zdarzenie na <xref:System.Windows.Forms.HtmlDocument>.  
  
 [!code-csharp[System.Windows.Forms.HtmlElementEventArgs#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElementEventArgs/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.HtmlElementEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElementEventArgs/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition" />
        <altmember cref="P:System.Windows.Forms.HtmlElementEventArgs.MousePosition" />
      </Docs>
    </Member>
    <Member MemberName="ReturnValue">
      <MemberSignature Language="C#" Value="public bool ReturnValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReturnValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.ReturnValue" />
      <MemberSignature Language="VB.NET" Value="Public Property ReturnValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReturnValue { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReturnValue : bool with get, set" Usage="System.Windows.Forms.HtmlElementEventArgs.ReturnValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość zwracaną przez obsługiwane zdarzenie.</summary>
        <value>
          <see langword="true" /> Jeśli zdarzenie został obsłużony; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raporty w momencie wystąpienia <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby zgłosić na wiele zdarzeń lub zdarzeń, które często występują, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączane wiadomość w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wkleić go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.HtmlDocument> o nazwie `HtmlDocument1`. Upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]
 [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftKeyPressed">
      <MemberSignature Language="C#" Value="public bool ShiftKeyPressed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShiftKeyPressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.ShiftKeyPressed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShiftKeyPressed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShiftKeyPressed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShiftKeyPressed : bool" Usage="System.Windows.Forms.HtmlElementEventArgs.ShiftKeyPressed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje, czy klawisz SHIFT został naciśnięty po wystąpieniu tego zdarzenia.</summary>
        <value>
          <see langword="true" /> Jeśli klawisz SHIFT został naciśnięty; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raporty w momencie wystąpienia <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby zgłosić na wiele zdarzeń lub zdarzeń, które często występują, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączane wiadomość w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wkleić go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.HtmlDocument> o nazwie `HtmlDocument1`. Upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]
 [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToElement">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElement ToElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlElement ToElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.ToElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ToElement As HtmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlElement ^ ToElement { System::Windows::Forms::HtmlElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToElement : System.Windows.Forms.HtmlElement" Usage="System.Windows.Forms.HtmlElementEventArgs.ToElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Windows.Forms.HtmlElement" /> których użytkownik jest wskaźnika myszy.</summary>
        <value>Element, w których porusza się wskaźnik myszy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.HtmlElementEventArgs.ToElement%2A> ma prawidłową wartość podczas zdarzenia myszy takich jak <xref:System.Windows.Forms.HtmlElement.MouseEnter> i <xref:System.Windows.Forms.HtmlElement.MouseLeave>.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raporty w momencie wystąpienia <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby zgłosić na wiele zdarzeń lub zdarzeń, które często występują, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączane wiadomość w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wkleić go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.HtmlDocument> o nazwie `HtmlDocument1`. Upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]
 [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>