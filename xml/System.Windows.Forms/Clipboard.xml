<Type Name="Clipboard" FullName="System.Windows.Forms.Clipboard">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8604e0fcace0c0ba869ba3f4c73a8c320bf0d9c6" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30704234" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Clipboard" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Clipboard extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Clipboard" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Clipboard" />
  <TypeSignature Language="C++ CLI" Value="public ref class Clipboard sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia metody umieść na danych i pobierania danych ze Schowka systemu Windows. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać listę wstępnie zdefiniowane formaty do użycia z <xref:System.Windows.Forms.Clipboard> , zobacz <xref:System.Windows.Forms.DataFormats> klasy.  
  
 Wywołanie <xref:System.Windows.Forms.Clipboard.SetDataObject%2A> umieszczać dane w Schowku, zastępując jego zawartość. Umieszczenie trwałe kopii danych w Schowku, ustaw `copy` parametr `true`.  
  
> [!NOTE]
>  Aby umieścić dane w Schowku w różnych formatach, użyj <xref:System.Windows.Forms.DataObject> klasy lub <xref:System.Windows.Forms.IDataObject> implementacji. Umieść dane do Schowka w wielu formatach, aby zmaksymalizować możliwości, czy aplikacja docelowa, których użytkownik może nie wiedzieć, wymagania dotyczące formatu można pomyślnie pobrać dane.  
  
 Wywołanie <xref:System.Windows.Forms.Clipboard.GetDataObject%2A> można pobrać danych ze Schowka. Dane są zwracane jako obiekt, który implementuje <xref:System.Windows.Forms.IDataObject> interfejsu. Użyj metody określone przez <xref:System.Windows.Forms.IDataObject> i pól w <xref:System.Windows.Forms.DataFormats> do wyodrębniania danych z obiektu. Jeśli nie znasz format danych, należy pobrać, wywołanie <xref:System.Windows.Forms.IDataObject.GetFormats%2A> metody <xref:System.Windows.Forms.IDataObject> interfejsu spowoduje wyświetlenie listy wszystkich formatów te dane są przechowywane w. Następnie wywołaj <xref:System.Windows.Forms.IDataObject.GetData%2A> metody <xref:System.Windows.Forms.IDataObject> interfejs, a następnie określ format, którego może używać aplikacja.  
  
 W [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], <xref:System.Windows.Forms.Clipboard> klasa udostępnia dodatkowe metody, które ułatwiają pracować ze Schowka systemu Windows. Wywołanie <xref:System.Windows.Forms.Clipboard.Clear%2A> metoda usuwania wszystkich danych ze Schowka. Aby dodać danych określonego formatu Schowka, odpowiednie wywołania zastąpieniu istniejących danych `Set` *Format* metody, takie jak <xref:System.Windows.Forms.Clipboard.SetText%2A>, lub zadzwoń <xref:System.Windows.Forms.Clipboard.SetData%2A> metodę, aby określić format. Do pobierania danych określonego formatu Schowka, pierwsze wywołanie odpowiednie `Contains` *Format* — metoda (takie jak <xref:System.Windows.Forms.Clipboard.ContainsText%2A>) metody do określenia, czy Schowek zawiera dane w formacie, a następnie wywołać odpowiednie `Get` *Format* — metoda (takie jak <xref:System.Windows.Forms.Clipboard.GetText%2A>) do pobierania danych, jeśli w Schowku znajduje się on. Aby określić format w tych operacji, należy wywołać <xref:System.Windows.Forms.Clipboard.ContainsData%2A> i <xref:System.Windows.Forms.Clipboard.GetData%2A> metody zamiast tego.  
  
> [!NOTE]
>  Wszystkie aplikacje systemu Windows Udostępnianie Schowka systemu Windows, więc zawartość mogą ulec zmianie po przełączeniu do innej aplikacji.  
>   
>  Obiekt musi być możliwy do serializacji dla niego do umieszczenia w Schowku. Nie można serializować obiektu są przekazywane do metody Schowka, metoda zakończy się niepowodzeniem bez generowania wyjątku. Zobacz <xref:System.Runtime.Serialization> uzyskać więcej informacji o serializacji. Jeśli aplikacja docelowej wymaga format bardzo określone dane, nagłówki dodana do danych w procesie serializacji może uniemożliwić aplikacji rozpoznanie danych. Aby zachować format danych, należy dodać dane jako <xref:System.Byte> tablicy do <xref:System.IO.MemoryStream> i przekaż <xref:System.IO.MemoryStream> do <xref:System.Windows.Forms.DataObject.SetData%2A> metody.  
>   
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawiony na tryb Jednowątkowego apartamentu wątku pojedynczego. Aby korzystać z tej klasy, upewnij się, że Twoje `Main` metoda jest oznaczona atrybutem <xref:System.STAThreadAttribute> atrybutu.  
>   
>  Uwagi może być konieczne, gdy w formacie Metaplik ze Schowka. Ze względu na ograniczenia w bieżąca implementacja <xref:System.Windows.Forms.DataObject> klasy, metapliki używane przez program .NET Framework mogą nie być rozpoznawane przez aplikacje używające starszego formatu metaplik. W takim przypadku konieczna jest współpraca z interfejsów programowania aplikacji (API) Win32 Schowka. Aby uzyskać więcej informacji, zobacz artykuł 323530, "Metapliki w Schowku są nie widoczne do wszystkich aplikacji," w bazie wiedzy Microsoft Knowledge Base pod http://support.microsoft.com.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.Clipboard> metody umieścić dane na i pobrać Schowka systemu Windows. Ten kod zakłada `button1`, `button2`, `textBox1`, i `textBox2` zostały utworzone i umieszczony na formularzu.  
  
 `button1_Click` Wywołania metody <xref:System.Windows.Forms.Clipboard.SetDataObject%2A> wziąć zaznaczonego tekstu w polu tekstowym i umieść ją na Schowka systemu Windows.  
  
 `button2_Click` Wywołania metody <xref:System.Windows.Forms.Clipboard.GetDataObject%2A> można pobrać danych ze Schowka systemu Windows. W kodzie użyto <xref:System.Windows.Forms.IDataObject> i <xref:System.Windows.Forms.DataFormats> można wyodrębnić danych zwróconych i wyświetla dane w `textBox2`.  
  
 [!code-cpp[Classic Clipboard Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataObject" />
    <altmember cref="T:System.Windows.Forms.DataFormats" />
    <altmember cref="T:System.Windows.Forms.IDataObject" />
  </Docs>
  <Members>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public static void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Powoduje usunięcie wszystkich danych ze Schowka.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ Schowek jest współużytkowany przez wiele procesów, wywołanie tej metody może mieć wpływ na tych procesów.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawiony na tryb Jednowątkowego apartamentu wątku pojedynczego. Aby korzystać z tej klasy, upewnij się, że Twoje `Main` metoda jest oznaczona atrybutem <xref:System.STAThreadAttribute> atrybutu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano tego elementu członkowskiego.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Clipboard#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Ten błąd zazwyczaj występuje, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). Dodaj <see cref="T:System.STAThreadAttribute" /> do tej aplikacji <see langword="Main" /> metody.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Czyszczenie Schowka systemu Windows. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionClipboard.OwnClipboard" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ContainsAudio">
      <MemberSignature Language="C#" Value="public static bool ContainsAudio ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsAudio() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsAudio" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsAudio () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsAudio();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wskazuje, czy dane w Schowku w <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> format.</summary>
        <returns>
          <see langword="true" /> Jeśli brak dostępnych danych audio w Schowku; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do określenia czy Schowek zawiera dane audio przed pobraniem go przy użyciu <xref:System.Windows.Forms.Clipboard.GetAudioStream%2A> metody.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawiony na tryb Jednowątkowego apartamentu wątku pojedynczego. Aby korzystać z tej klasy, upewnij się, że Twoje `Main` metoda jest oznaczona atrybutem <xref:System.STAThreadAttribute> atrybutu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Ten błąd zazwyczaj występuje, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). Dodaj <see cref="T:System.STAThreadAttribute" /> do tej aplikacji <see langword="Main" /> metody.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Aby uzyskać dostęp do Schowka systemu Windows. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetAudio" />
      </Docs>
    </Member>
    <Member MemberName="ContainsData">
      <MemberSignature Language="C#" Value="public static bool ContainsData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsData (format As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsData(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">Format danych do wyszukania. Zobacz <see cref="T:System.Windows.Forms.DataFormats" /> formatów wstępnie zdefiniowane.</param>
        <summary>Wskazuje, czy dane w Schowku, który znajduje się w określonym formacie lub mogą być konwertowane do tego formatu.</summary>
        <returns>
          <see langword="true" /> Jeśli brak danych w Schowku, który znajduje się w określonym <paramref name="format" /> lub może być przekonwertowany do formatu tej; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataFormats> Klasa zawiera nazwy formatu wstępnie zdefiniowane, korzystających z tej metody.  
  
 Ta metoda, aby określić, czy w Schowku znajduje się przed pobraniem go przy użyciu danych w określonym formacie lub niezgodny format <xref:System.Windows.Forms.Clipboard.GetData%2A> metody.  
  
> [!NOTE]
>  Można przekonwertować danych do innego formatu był przechowywany określenie, czy konwersja jest dozwolone, a żądany format jest zgodny z formatem przechowywane. Na przykład dane przechowywane jako Unicode można przekonwertować na tekst.  
>   
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawiony na tryb Jednowątkowego apartamentu wątku pojedynczego. Aby korzystać z tej klasy, upewnij się, że Twoje `Main` metoda jest oznaczona atrybutem <xref:System.STAThreadAttribute> atrybutu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano tego elementu członkowskiego.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.Clipboard#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Ten błąd zazwyczaj występuje, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). Dodaj <see cref="T:System.STAThreadAttribute" /> do tej aplikacji <see langword="Main" /> metody.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Aby uzyskać dostęp do Schowka systemu Windows. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetData(System.String)" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetData(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsFileDropList">
      <MemberSignature Language="C#" Value="public static bool ContainsFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsFileDropList () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsFileDropList();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wskazuje, czy dane w Schowku, który znajduje się w <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> sformatuj lub mogą być konwertowane do tego formatu.</summary>
        <returns>
          <see langword="true" /> Jeśli lista rozwijana pliku w Schowku; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lista rozwijana pliku jest kolekcją ciągi zawierające informacje o ścieżce dla plików.  
  
 Ta metoda służy do określenia czy przed pobraniem go w Schowku znajduje się lista rozwijana pliku <xref:System.Windows.Forms.Clipboard.GetFileDropList%2A> metody.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawiony na tryb Jednowątkowego apartamentu wątku pojedynczego. Aby korzystać z tej klasy, upewnij się, że Twoje `Main` metoda jest oznaczona atrybutem <xref:System.STAThreadAttribute> atrybutu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano tego elementu członkowskiego.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.Clipboard#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Ten błąd zazwyczaj występuje, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). Dodaj <see cref="T:System.STAThreadAttribute" /> do tej aplikacji <see langword="Main" /> metody.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Aby uzyskać dostęp do Schowka systemu Windows. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetFileDropList" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsImage">
      <MemberSignature Language="C#" Value="public static bool ContainsImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsImage" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsImage () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsImage();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wskazuje, czy dane w Schowku, który znajduje się w <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> sformatuj lub mogą być konwertowane do tego formatu.</summary>
        <returns>
          <see langword="true" /> Jeśli dane obrazu w Schowku; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do określenia, czy Schowek zawiera dane obrazu, przed pobraniem go przy użyciu <xref:System.Windows.Forms.Clipboard.GetImage%2A> metody.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawiony na tryb Jednowątkowego apartamentu wątku pojedynczego. Aby korzystać z tej klasy, upewnij się, że Twoje `Main` metoda jest oznaczona atrybutem <xref:System.STAThreadAttribute> atrybutu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano tego elementu członkowskiego.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.Clipboard#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Ten błąd zazwyczaj występuje, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). Dodaj <see cref="T:System.STAThreadAttribute" /> do tej aplikacji <see langword="Main" /> metody.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Aby uzyskać dostęp do Schowka systemu Windows. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetImage" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ContainsText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wskazuje, czy dane tekstu w Schowku.</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public static bool ContainsText ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsText" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsText () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wskazuje, czy dane w Schowku w <see cref="F:System.Windows.Forms.TextDataFormat.Text" /> lub <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> format, w zależności od systemu operacyjnego.</summary>
        <returns>
          <see langword="true" /> w przypadku danych tekstowych w Schowku; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda sprawdza obecność danych w <xref:System.Windows.Forms.TextDataFormat.UnicodeText> formatowania na [!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)] i [!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)]. W przeciwnym razie ta metoda sprawdza obecność danych w <xref:System.Windows.Forms.TextDataFormat.Text> format.  
  
 Ta metoda służy do określenia czy Schowek zawiera dane tekstowe przed pobraniem go przy użyciu <xref:System.Windows.Forms.Clipboard.GetText%2A> metody.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawiony na tryb Jednowątkowego apartamentu wątku pojedynczego. Aby korzystać z tej klasy, upewnij się, że Twoje `Main` metoda jest oznaczona atrybutem <xref:System.STAThreadAttribute> atrybutu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano przeciążenia <xref:System.Windows.Forms.Clipboard.ContainsText%2A> metodę, która jest podobna do tego przeciążenia.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Ten błąd zazwyczaj występuje, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). Dodaj <see cref="T:System.STAThreadAttribute" /> do tej aplikacji <see langword="Main" /> metody.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Aby uzyskać dostęp do Schowka systemu Windows. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="F:System.Windows.Forms.TextDataFormat.Text" />
        <altmember cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public static bool ContainsText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsText (format As TextDataFormat) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsText(System::Windows::Forms::TextDataFormat format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="format">Jeden z <see cref="T:System.Windows.Forms.TextDataFormat" /> wartości.</param>
        <summary>Wskazuje, czy dane tekstu w Schowku w formacie wskazanych przez określony <see cref="T:System.Windows.Forms.TextDataFormat" /> wartość.</summary>
        <returns>
          <see langword="true" /> Jeśli jest danych tekstu w Schowku wartość określona dla <paramref name="format" />; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do określenia czy Schowek zawiera dane tekstowe przed pobraniem go przy użyciu <xref:System.Windows.Forms.Clipboard.GetText%2A> metody.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawiony na tryb Jednowątkowego apartamentu wątku pojedynczego. Aby korzystać z tej klasy, upewnij się, że Twoje `Main` metoda jest oznaczona atrybutem <xref:System.STAThreadAttribute> atrybutu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano tego elementu członkowskiego.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Ten błąd zazwyczaj występuje, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). Dodaj <see cref="T:System.STAThreadAttribute" /> do tej aplikacji <see langword="Main" /> metody.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="format" /> nie jest prawidłową <see cref="T:System.Windows.Forms.TextDataFormat" /> wartość.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Aby uzyskać dostęp do Schowka systemu Windows. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetAudioStream">
      <MemberSignature Language="C#" Value="public static System.IO.Stream GetAudioStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream GetAudioStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAudioStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ GetAudioStream();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera strumień audio ze Schowka.</summary>
        <returns>A <see cref="T:System.IO.Stream" /> zawierający dane audio lub <see langword="null" /> Jeśli Schowek nie zawiera żadnych danych w <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> format.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Windows.Forms.Clipboard.ContainsAudio%2A> metodę, aby określić, czy Schowek zawiera dane audio przed ich pobraniem przy użyciu tej metody.  
  
 Użyj <xref:System.Windows.Forms.Clipboard.SetAudio%2A> metoda umożliwiająca dodanie danych do Schowka.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawiony na tryb Jednowątkowego apartamentu wątku pojedynczego. Aby korzystać z tej klasy, upewnij się, że Twoje `Main` metoda jest oznaczona atrybutem <xref:System.STAThreadAttribute> atrybutu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano tego elementu członkowskiego.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Ten błąd zazwyczaj występuje, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). Dodaj <see cref="T:System.STAThreadAttribute" /> do tej aplikacji <see langword="Main" /> metody.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Aby uzyskać dostęp do Schowka systemu Windows. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetAudio" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public static object GetData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetData (format As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetData(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">Format danych do pobrania. Zobacz <see cref="T:System.Windows.Forms.DataFormats" /> formatów wstępnie zdefiniowane.</param>
        <summary>Pobiera dane ze Schowka w określonym formacie.</summary>
        <returns>
          <see cref="T:System.Object" /> Reprezentujący danych ze Schowka lub <see langword="null" /> Jeśli Schowek nie zawiera żadnych danych, który znajduje się w określonym <paramref name="format" /> lub mogą być konwertowane do tego formatu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Windows.Forms.Clipboard.ContainsData%2A> metody w celu ustalenia, czy Schowek zawiera dane w określonym formacie lub niezgodny format przed ich pobraniem przy użyciu tej metody.  
  
 Jeśli ta metoda nie może znaleźć danych w określonym formacie, próbuje przekonwertować na format danych. Jeśli dane nie można przekonwertować na określony format lub dane są przechowywane z automatycznej konwersji ustawioną `false`, ta metoda zwraca `null`.  
  
> [!NOTE]
>  Można przekonwertować danych do innego formatu był przechowywany określenie, czy konwersja jest dozwolone, a żądany format jest zgodny z formatem przechowywane. Na przykład dane przechowywane jako Unicode można przekonwertować na tekst.  
>   
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawiony na tryb Jednowątkowego apartamentu wątku pojedynczego. Aby korzystać z tej klasy, upewnij się, że Twoje `Main` metoda jest oznaczona atrybutem <xref:System.STAThreadAttribute> atrybutu.  
  
 Użyj <xref:System.Windows.Forms.Clipboard.SetData%2A> metody, aby dodać dane do Schowka w określonym formacie.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano tego elementu członkowskiego.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.Clipboard#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Ten błąd zazwyczaj występuje, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). Dodaj <see cref="T:System.STAThreadAttribute" /> do tej aplikacji <see langword="Main" /> metody.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Aby uzyskać dostęp do Schowka systemu Windows. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsData(System.String)" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetData(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataObject">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.IDataObject GetDataObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.IDataObject GetDataObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetDataObject" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDataObject () As IDataObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::IDataObject ^ GetDataObject();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IDataObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera dane, które jest obecnie w systemie Schowka.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.IDataObject" /> Reprezentujący dane w Schowku, lub <see langword="null" /> , jeśli nie ma żadnych danych w Schowku.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typ danych obiektu zwróconego z Schowka może się różnić, ta metoda zwraca dane w <xref:System.Windows.Forms.IDataObject>. Następnie można użyć metody <xref:System.Windows.Forms.IDataObject> interfejs do wyodrębniania danych w jego typie odpowiednie dane.  
  
 Ta metoda próbuje pobrać dane dziesięciokrotnie w odstępach czasu 100 milisekund i zgłasza <xref:System.Runtime.InteropServices.ExternalException> Jeśli wszystkie próby kończą się niepowodzeniem.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawiony na tryb Jednowątkowego apartamentu wątku pojedynczego. Aby korzystać z tej klasy, upewnij się, że Twoje `Main` metoda jest oznaczona atrybutem <xref:System.STAThreadAttribute> atrybutu.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.Clipboard> metody umieścić dane na i pobrać Schowka systemu Windows. Ten kod zakłada `button1`, `button2`, `textBox1`, i `textBox2` zostały umieszczone w formularzu.  
  
 `button1_Click` Wywołania metody <xref:System.Windows.Forms.Clipboard.SetDataObject%2A> wziąć zaznaczonego tekstu w polu tekstowym i umieść ją na Schowka systemu Windows.  
  
 `button2_Click` Wywołania metody <xref:System.Windows.Forms.Clipboard.GetDataObject%2A> można pobrać danych ze Schowka systemu Windows. W kodzie użyto <xref:System.Windows.Forms.IDataObject> i <xref:System.Windows.Forms.DataFormats> można wyodrębnić dane zwrócone. Dane są wyświetlane w `textBox2`.  
  
 [!code-cpp[Classic Clipboard Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można pobrać danych ze Schowka. Ten błąd zazwyczaj występuje, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie pracuje w trybie jednowątkowego apartamentu (STA) i <see cref="P:System.Windows.Forms.Application.MessageLoop" /> wartość właściwości jest <see langword="true" />. Dodaj <see cref="T:System.STAThreadAttribute" /> do tej aplikacji <see langword="Main" /> metody.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Aby uzyskać dostęp do Schowka systemu Windows. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object)" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
      </Docs>
    </Member>
    <Member MemberName="GetFileDropList">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.StringCollection GetFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Specialized.StringCollection GetFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileDropList () As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Specialized::StringCollection ^ GetFileDropList();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera kolekcję nazw plików ze Schowka.</summary>
        <returns>A <see cref="T:System.Collections.Specialized.StringCollection" /> zawierający nazwy plików lub <see langword="null" /> Jeśli Schowek nie zawiera żadnych danych, który znajduje się w <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> sformatuj lub mogą być konwertowane do tego formatu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lista rozwijana pliku jest kolekcją ciągi zawierające informacje o ścieżce dla plików.  
  
 Lista rozwijana plik jest przechowywany w Schowku jako <xref:System.String> tablicy. Ta metoda konwertuje tej tablicy do <xref:System.Collections.Specialized.StringCollection> i zwraca kolekcję.  
  
 Użyj <xref:System.Windows.Forms.Clipboard.ContainsFileDropList%2A> metodę, aby określić, czy w Schowku znajduje się lista rozwijana pliku przed ich pobraniem przy użyciu tej metody.  
  
 Użyj <xref:System.Windows.Forms.Clipboard.SetFileDropList%2A> metody w celu dodania lista rozwijana pliku do Schowka.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawiony na tryb Jednowątkowego apartamentu wątku pojedynczego. Aby korzystać z tej klasy, upewnij się, że Twoje `Main` metoda jest oznaczona atrybutem <xref:System.STAThreadAttribute> atrybutu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano tego elementu członkowskiego.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.Clipboard#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Ten błąd zazwyczaj występuje, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). Dodaj <see cref="T:System.STAThreadAttribute" /> do tej aplikacji <see langword="Main" /> metody.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Aby uzyskać dostęp do Schowka systemu Windows. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Collections.Specialized.StringCollection" />
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsFileDropList" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image GetImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Image GetImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetImage" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetImage () As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ GetImage();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera obraz ze Schowka.</summary>
        <returns>
          <see cref="T:System.Drawing.Image" /> Reprezentujący danych obraz ze Schowka lub <see langword="null" /> Jeśli Schowek nie zawiera żadnych danych, który znajduje się w <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> sformatuj lub mogą być konwertowane do tego formatu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Windows.Forms.Clipboard.ContainsImage%2A> metodę, aby określić, czy Schowek zawiera dane obrazu, przed pobraniem go przy użyciu tej metody.  
  
 Użyj <xref:System.Windows.Forms.Clipboard.SetImage%2A> metody w celu dodania obrazu danych do Schowka.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawiony na tryb Jednowątkowego apartamentu wątku pojedynczego. Aby korzystać z tej klasy, upewnij się, że Twoje `Main` metoda jest oznaczona atrybutem <xref:System.STAThreadAttribute> atrybutu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano tego elementu członkowskiego.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.Clipboard#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Ten błąd zazwyczaj występuje, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). Dodaj <see cref="T:System.STAThreadAttribute" /> do tej aplikacji <see langword="Main" /> metody.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Aby uzyskać dostęp do Schowka systemu Windows. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Drawing.Image" />
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsImage" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera dane tekst ze Schowka.</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public static string GetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetText" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetText () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera dane tekst ze Schowka w <see cref="F:System.Windows.Forms.TextDataFormat.Text" /> lub <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> format, w zależności od systemu operacyjnego.</summary>
        <returns>Danych tekst ze Schowka lub <see cref="F:System.String.Empty" /> Jeśli Schowek nie zawiera danych w <see cref="F:System.Windows.Forms.TextDataFormat.Text" /> lub <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> format, w zależności od systemu operacyjnego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zwraca dane tekstowe w <xref:System.Windows.Forms.TextDataFormat.UnicodeText> formatowania na [!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)] i [!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)]. W przeciwnym razie ta metoda zwraca dane tekstowe w <xref:System.Windows.Forms.TextDataFormat.Text> format.  
  
 Użyj <xref:System.Windows.Forms.Clipboard.ContainsText%2A> metodę, aby określić, czy Schowek zawiera dane tekstowe przed ich pobraniem przy użyciu tej metody.  
  
 Użyj <xref:System.Windows.Forms.Clipboard.SetText%2A> metody w celu dodania danych tekst do Schowka.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawiony na tryb Jednowątkowego apartamentu wątku pojedynczego. Aby korzystać z tej klasy, upewnij się, że Twoje `Main` metoda jest oznaczona atrybutem <xref:System.STAThreadAttribute> atrybutu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano przeciążenia <xref:System.Windows.Forms.Clipboard.GetText%2A> metodę, która jest podobna do tego przeciążenia.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Ten błąd zazwyczaj występuje, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). Dodaj <see cref="T:System.STAThreadAttribute" /> do tej aplikacji <see langword="Main" /> metody.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Aby uzyskać dostęp do Schowka systemu Windows. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public static string GetText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetText (format As TextDataFormat) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetText(System::Windows::Forms::TextDataFormat format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="format">Jeden z <see cref="T:System.Windows.Forms.TextDataFormat" /> wartości.</param>
        <summary>Pobiera dane tekst ze Schowka w formacie wskazanych przez określony <see cref="T:System.Windows.Forms.TextDataFormat" /> wartość.</summary>
        <returns>Danych tekst ze Schowka lub <see cref="F:System.String.Empty" /> Jeśli Schowek nie zawiera danych w określonym formacie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Windows.Forms.Clipboard.ContainsText%2A> metodę, aby określić, czy Schowek zawiera dane tekstowe przed ich pobraniem przy użyciu tej metody.  
  
 Użyj <xref:System.Windows.Forms.Clipboard.SetText%2A> metody w celu dodania danych tekst do Schowka.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawiony na tryb Jednowątkowego apartamentu wątku pojedynczego. Aby korzystać z tej klasy, upewnij się, że Twoje `Main` metoda jest oznaczona atrybutem <xref:System.STAThreadAttribute> atrybutu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano tego elementu członkowskiego.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Ten błąd zazwyczaj występuje, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). Dodaj <see cref="T:System.STAThreadAttribute" /> do tej aplikacji <see langword="Main" /> metody.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="format" /> nie jest prawidłową <see cref="T:System.Windows.Forms.TextDataFormat" /> wartość.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Aby uzyskać dostęp do Schowka systemu Windows. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAudio">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Czyści Schowka, a następnie dodaje dane w <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> formacie, zastępując istniejące dane.</summary>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public static void SetAudio (byte[] audioBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAudio(unsigned int8[] audioBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetAudio(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAudio (audioBytes As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAudio(cli::array &lt;System::Byte&gt; ^ audioBytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioBytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="audioBytes">A <see cref="T:System.Byte" /> tablica zawierająca dane audio.</param>
        <summary>Czyści Schowka, a następnie dodaje <see cref="T:System.Byte" /> tablicy w <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> format po konwersji na <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby pobrać danych ze Schowka, należy najpierw użyć <xref:System.Windows.Forms.Clipboard.ContainsAudio%2A> metodę, aby określić, czy Schowek zawiera dane audio przed pobraniem go przy użyciu <xref:System.Windows.Forms.Clipboard.GetAudioStream%2A> metody.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawiony na tryb Jednowątkowego apartamentu wątku pojedynczego. Aby korzystać z tej klasy, upewnij się, że Twoje `Main` metoda jest oznaczona atrybutem <xref:System.STAThreadAttribute> atrybutu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano przeciążenia <xref:System.Windows.Forms.Clipboard.SetAudio%2A> metodę, która jest podobna do tego przeciążenia.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Ten błąd zazwyczaj występuje, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). Dodaj <see cref="T:System.STAThreadAttribute" /> do tej aplikacji <see langword="Main" /> metody.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="audioBytes" /> jest <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">do dodawania danych do Schowka systemu Windows. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      </Docs>
    </Member>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public static void SetAudio (System.IO.Stream audioStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAudio(class System.IO.Stream audioStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetAudio(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAudio (audioStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAudio(System::IO::Stream ^ audioStream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="audioStream">A <see cref="T:System.IO.Stream" /> zawierający dane audio.</param>
        <summary>Czyści Schowka, a następnie dodaje <see cref="T:System.IO.Stream" /> w <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> format.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby pobrać danych ze Schowka, należy najpierw użyć <xref:System.Windows.Forms.Clipboard.ContainsAudio%2A> metodę, aby określić, czy Schowek zawiera dane audio przed pobraniem go przy użyciu <xref:System.Windows.Forms.Clipboard.GetAudioStream%2A> metody.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawiony na tryb Jednowątkowego apartamentu wątku pojedynczego. Aby korzystać z tej klasy, upewnij się, że Twoje `Main` metoda jest oznaczona atrybutem <xref:System.STAThreadAttribute> atrybutu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano tego elementu członkowskiego.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Ten błąd zazwyczaj występuje, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). Dodaj <see cref="T:System.STAThreadAttribute" /> do tej aplikacji <see langword="Main" /> metody.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="audioStream" /> jest <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">do dodawania danych do Schowka systemu Windows. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public static void SetData (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetData(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetData (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetData(System::String ^ format, System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Format danych można ustawić. Zobacz <see cref="T:System.Windows.Forms.DataFormats" /> formatów wstępnie zdefiniowane.</param>
        <param name="data">
          <see cref="T:System.Object" /> Reprezentujący dane do dodania.</param>
        <summary>Czyści Schowka, a następnie dodaje danych w określonym formacie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie znasz format w aplikacji docelowej, można przechowywać dane w wielu formatach za pomocą tej metody.  
  
 Podczas pobierania danych przechowywane przy użyciu tej metody można przekonwertować na format zgodny.  
  
 Aby pobrać danych ze Schowka w określonym formacie, należy najpierw użyć <xref:System.Windows.Forms.Clipboard.ContainsData%2A> metody, aby określić, czy w Schowku znajduje się przed pobraniem go przy użyciu danych w tym formacie <xref:System.Windows.Forms.Clipboard.GetData%2A> metody.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawiony na tryb Jednowątkowego apartamentu wątku pojedynczego. Aby korzystać z tej klasy, upewnij się, że Twoje `Main` metoda jest oznaczona atrybutem <xref:System.STAThreadAttribute> atrybutu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano tego elementu członkowskiego.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.Clipboard#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Ten błąd zazwyczaj występuje, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). Dodaj <see cref="T:System.STAThreadAttribute" /> do tej aplikacji <see langword="Main" /> metody.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> jest <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">dla danych dowolnego typu lub format dodawanych do Schowka systemu Windows. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsData(System.String)" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetData(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetDataObject">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Czyści Schowka, a następnie dodaje do niego dane.</summary>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetDataObject">
      <MemberSignature Language="C#" Value="public static void SetDataObject (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDataObject(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetDataObject (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDataObject(System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">Dane do Schowka.</param>
        <summary>Czyści Schowka i umieszcza w nim nietrwałych danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane zostaną usunięte ze Schowka systemu Windows, gdy aplikacja jest kończona.  
  
 Ta metoda próbuje ustawić danych dziesięciokrotnie w odstępach czasu 100 milisekund i zgłasza <xref:System.Runtime.InteropServices.ExternalException> Jeśli wszystkie próby kończą się niepowodzeniem.  
  
> [!NOTE]
>  Obiekt musi być możliwy do serializacji dla niego do umieszczenia w Schowku. Nie można serializować obiektu w przypadku przekazania do tej metody, zakończy się niepowodzeniem bez generowania wyjątku. Zobacz <xref:System.Runtime.Serialization> uzyskać więcej informacji o serializacji.  
>   
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawiony na tryb Jednowątkowego apartamentu wątku pojedynczego. Aby korzystać z tej klasy, upewnij się, że Twoje `Main` metoda jest oznaczona atrybutem <xref:System.STAThreadAttribute> atrybutu.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.Clipboard.SetDataObject%2A> można umieścić dane nietrwałych tekstu do Schowka systemu Windows. W `button1_Click` metoda, zaznaczony tekst jest kopiowana z `textBox1` i wkleić do Schowka. W `button2_Click` metoda, informacje jest pobierany ze Schowka i wyświetlane w `textBox2`. Ten kod zakłada `button1`, `button2`, `textBox1`, i `textBox2` zostały utworzone i umieszczane na formularzu.  
  
 [!code-cpp[Classic Clipboard Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można umieścić dane w Schowku. Ten błąd zazwyczaj występuje, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). Dodaj <see cref="T:System.STAThreadAttribute" /> do tej aplikacji <see langword="Main" /> metody.</exception>
        <exception cref="T:System.ArgumentNullException">Wartość <paramref name="data" /> jest <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">dla danych dowolnego typu lub format dodawanych do Schowka systemu Windows. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </Member>
    <Member MemberName="SetDataObject">
      <MemberSignature Language="C#" Value="public static void SetDataObject (object data, bool copy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDataObject(object data, bool copy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetDataObject (data As Object, copy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDataObject(System::Object ^ data, bool copy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="copy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="data">Dane do Schowka.</param>
        <param name="copy">
          <see langword="true" /> Jeśli chcesz dane pozostają w Schowku po zamknięciu tej aplikacji; w przeciwnym razie <see langword="false" />.</param>
        <summary>Czyści Schowka, a następnie umieszcza w nim dane i określa, czy dane powinny pozostać po zamknięciu aplikacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `copy` parametr jest `false`, dane zostaną usunięte ze Schowka systemu Windows po zamknięciu aplikacji.  
  
 Ta metoda próbuje ustawić danych dziesięciokrotnie w odstępach czasu 100 milisekund i zgłasza <xref:System.Runtime.InteropServices.ExternalException> Jeśli wszystkie próby kończą się niepowodzeniem.  
  
> [!NOTE]
>  Obiekt musi być możliwy do serializacji dla niego do umieszczenia w Schowku. Nie można serializować obiektu w przypadku przekazania do tej metody, zakończy się niepowodzeniem bez generowania wyjątku. Zobacz <xref:System.Runtime.Serialization> uzyskać więcej informacji o serializacji.  
>   
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawiony na tryb Jednowątkowego apartamentu wątku pojedynczego. Aby korzystać z tej klasy, upewnij się, że Twoje `Main` metoda jest oznaczona atrybutem <xref:System.STAThreadAttribute> atrybutu.  
  
   
  
## Examples  
 Następująca metoda jest uruchamiane w aplikacji. W polu tekstowym w systemie Schowka powoduje trwałe kopii danych zaznaczonego tekstu. Ten kod zakłada `button1`, `textBox1`, i `textBox2` zostały utworzone i umieszczane na formularzu.  
  
 [!code-cpp[Classic Clipboard.SetDataObject1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard.SetDataObject1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard.SetDataObject1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/VB/source.vb#1)]  
  
 W innej aplikacji, następująca metoda odczytuje tekst ze Schowka systemu Windows i wkleja tekstu do `textBox2`. Ten kod zakłada `button2` i `textBox2` zostały utworzone i umieszczane na formularzu.  
  
 [!code-cpp[Classic Clipboard.SetDataObject1 Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Clipboard.SetDataObject1 Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CS/source.cs#2)]
 [!code-vb[Classic Clipboard.SetDataObject1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można umieścić dane w Schowku. Ten błąd zazwyczaj występuje, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). Dodaj <see cref="T:System.STAThreadAttribute" /> do tej aplikacji <see langword="Main" /> metody.</exception>
        <exception cref="T:System.ArgumentNullException">Wartość <paramref name="data" /> jest <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">dla danych dowolnego typu lub format dodawanych do Schowka systemu Windows. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </Member>
    <Member MemberName="SetDataObject">
      <MemberSignature Language="C#" Value="public static void SetDataObject (object data, bool copy, int retryTimes, int retryDelay);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDataObject(object data, bool copy, int32 retryTimes, int32 retryDelay) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object,System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetDataObject (data As Object, copy As Boolean, retryTimes As Integer, retryDelay As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDataObject(System::Object ^ data, bool copy, int retryTimes, int retryDelay);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="copy" Type="System.Boolean" />
        <Parameter Name="retryTimes" Type="System.Int32" />
        <Parameter Name="retryDelay" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">Dane do Schowka.</param>
        <param name="copy">
          <see langword="true" /> Jeśli chcesz dane pozostają w Schowku po zamknięciu tej aplikacji; w przeciwnym razie <see langword="false" />.</param>
        <param name="retryTimes">Liczba prób wprowadzania danych do Schowka.</param>
        <param name="retryDelay">Liczba milisekund, aby wstrzymać między próbami.</param>
        <summary>Czyści Schowka, a następnie próbuje umieścić na nim danych określona liczba razy i określona opóźnienie między próbami opcjonalnie pozostawiając dane w Schowku po umożliwia zamknięcie aplikacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dodawanie danych do Schowka można czasami się niepowodzeniem, jeśli Schowek jest zajęty z innego wątku lub aplikacji. Ta metoda jest przydatna w celu obejścia tego problemu w środowiskach z intensywnym użyciem Schowka.  
  
 Jeśli `copy` parametr jest `false`, dane zostaną usunięte ze Schowka systemu Windows po zamknięciu aplikacji.  
  
> [!NOTE]
>  Obiekt musi być możliwy do serializacji dla niego do umieszczenia w Schowku. Nie można serializować obiektu w przypadku przekazania do tej metody, zakończy się niepowodzeniem bez generowania wyjątku. Zobacz <xref:System.Runtime.Serialization> uzyskać więcej informacji o serializacji.  
>   
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawiony na tryb Jednowątkowego apartamentu wątku pojedynczego. Aby korzystać z tej klasy, upewnij się, że Twoje `Main` metoda jest oznaczona atrybutem <xref:System.STAThreadAttribute> atrybutu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). Dodaj <see cref="T:System.STAThreadAttribute" /> do tej aplikacji <see langword="Main" /> metody.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="retryTimes" /> jest mniejsza od zera.  
  
 —lub—  
  
 <paramref name="retryDelay" /> jest mniejsza od zera.</exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można umieścić dane w Schowku. Ten błąd zazwyczaj występuje, gdy Schowek jest używany przez inny proces.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">dla danych dowolnego typu lub format dodawanych do Schowka systemu Windows. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </Member>
    <Member MemberName="SetFileDropList">
      <MemberSignature Language="C#" Value="public static void SetFileDropList (System.Collections.Specialized.StringCollection filePaths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFileDropList(class System.Collections.Specialized.StringCollection filePaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetFileDropList (filePaths As StringCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetFileDropList(System::Collections::Specialized::StringCollection ^ filePaths);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePaths" Type="System.Collections.Specialized.StringCollection" />
      </Parameters>
      <Docs>
        <param name="filePaths">A <see cref="T:System.Collections.Specialized.StringCollection" /> zawierający nazwy plików.</param>
        <summary>Czyści Schowka, a następnie dodaje Kolekcja nazw plików w <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> format.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lista rozwijana pliku jest kolekcją ciągi zawierające informacje o ścieżce dla plików.  
  
 Lista rozwijana plik jest przechowywany w Schowku jako <xref:System.String> tablicy. Ta metoda konwertuje `filePaths` do <xref:System.String> tablicy przed dodaniem go do Schowka.  
  
 Aby pobrać listę Usuń plik ze Schowka, należy najpierw użyć <xref:System.Windows.Forms.Clipboard.ContainsFileDropList%2A> metody, aby określić, czy w Schowku znajduje się przed pobraniem go przy użyciu danych w tym formacie <xref:System.Windows.Forms.Clipboard.GetFileDropList%2A> metody.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawiony na tryb Jednowątkowego apartamentu wątku pojedynczego. Aby korzystać z tej klasy, upewnij się, że Twoje `Main` metoda jest oznaczona atrybutem <xref:System.STAThreadAttribute> atrybutu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano tego elementu członkowskiego.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.Clipboard#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Ten błąd zazwyczaj występuje, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). Dodaj <see cref="T:System.STAThreadAttribute" /> do tej aplikacji <see langword="Main" /> metody.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filePaths" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="filePaths" /> nie zawiera żadnych parametrów.  
  
 —lub—  
  
 Co najmniej jeden z parametrów w <paramref name="filePaths" /> jest <see cref="F:System.String.Empty" />, zawiera tylko biały znak, zawiera jeden lub więcej nieprawidłowych znaków, zgodnie z definicją w <see cref="F:System.IO.Path.InvalidPathChars" />, jest <see langword="null" />, zawiera dwukropek (:) lub przekracza maksymalną długość zdefiniowana w systemie.  
  
 Zobacz <see cref="P:System.Exception.InnerException" /> właściwość <see cref="T:System.ArgumentException" /> Aby uzyskać więcej informacji.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">do dodawania danych w <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> formacie do Schowka systemu Windows. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Aby uzyskać dostęp do systemu plików. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsFileDropList" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetFileDropList" />
      </Docs>
    </Member>
    <Member MemberName="SetImage">
      <MemberSignature Language="C#" Value="public static void SetImage (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetImage(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetImage(System.Drawing.Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetImage(System::Drawing::Image ^ image);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="image">
          <see cref="T:System.Drawing.Image" /> Do dodania do Schowka.</param>
        <summary>Czyści Schowka, a następnie dodaje <see cref="T:System.Drawing.Image" /> w <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> format.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby pobrać dane obraz ze Schowka, należy najpierw użyć <xref:System.Windows.Forms.Clipboard.ContainsImage%2A> metodę, aby określić, czy Schowek zawiera dane obrazu, przed pobraniem go przy użyciu <xref:System.Windows.Forms.Clipboard.GetImage%2A> metody.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawiony na tryb Jednowątkowego apartamentu wątku pojedynczego. Aby korzystać z tej klasy, upewnij się, że Twoje `Main` metoda jest oznaczona atrybutem <xref:System.STAThreadAttribute> atrybutu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano tego elementu członkowskiego.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.Clipboard#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Ten błąd zazwyczaj występuje, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). Dodaj <see cref="T:System.STAThreadAttribute" /> do tej aplikacji <see langword="Main" /> metody.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="image" /> jest <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">do dodawania danych w <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> formacie do Schowka systemu Windows. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsImage" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetImage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Czyści Schowka, a następnie dodaje dane tekstowe do niego.</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public static void SetText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetText(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst, aby dodać do Schowka.</param>
        <summary>Czyści Schowka, a następnie dodaje dane tekstowe w <see cref="F:System.Windows.Forms.TextDataFormat.Text" /> lub <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> format, w zależności od systemu operacyjnego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda dodaje dane tekstowe w <xref:System.Windows.Forms.TextDataFormat.UnicodeText> formatowania na [!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)] i [!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)]. W przeciwnym razie ta metoda dodaje dane tekstowe w <xref:System.Windows.Forms.TextDataFormat.Text> format.  
  
 Aby pobrać dane tekst ze Schowka, należy najpierw użyć <xref:System.Windows.Forms.Clipboard.ContainsText%2A> metodę, aby określić, czy Schowek zawiera dane tekstowe przed pobraniem go przy użyciu <xref:System.Windows.Forms.Clipboard.GetText%2A> metody.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawiony na tryb Jednowątkowego apartamentu wątku pojedynczego. Aby korzystać z tej klasy, upewnij się, że Twoje `Main` metoda jest oznaczona atrybutem <xref:System.STAThreadAttribute> atrybutu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano przeciążenia <xref:System.Windows.Forms.Clipboard.SetText%2A> metodę, która jest podobna do tego przeciążenia.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Ten błąd zazwyczaj występuje, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). Dodaj <see cref="T:System.STAThreadAttribute" /> do tej aplikacji <see langword="Main" /> metody.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="text" /> jest <see langword="null" /> lub <see cref="F:System.String.Empty" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">do dodawania danych tekst do Schowka systemu Windows. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionClipboard.OwnClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
      </Docs>
    </Member>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public static void SetText (string text, System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetText(string text, valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetText(System.String,System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetText (text As String, format As TextDataFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetText(System::String ^ text, System::Windows::Forms::TextDataFormat format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="text">Tekst, aby dodać do Schowka.</param>
        <param name="format">Jeden z <see cref="T:System.Windows.Forms.TextDataFormat" /> wartości.</param>
        <summary>Czyści Schowka, a następnie dodaje danych tekst w formacie wskazanych przez określony <see cref="T:System.Windows.Forms.TextDataFormat" /> wartość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby pobrać dane tekst ze Schowka, należy najpierw użyć <xref:System.Windows.Forms.Clipboard.ContainsText%2A> metodę, aby określić, czy Schowek zawiera dane tekstowe przed pobraniem go przy użyciu <xref:System.Windows.Forms.Clipboard.GetText%2A> metody.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawiony na tryb Jednowątkowego apartamentu wątku pojedynczego. Aby korzystać z tej klasy, upewnij się, że Twoje `Main` metoda jest oznaczona atrybutem <xref:System.STAThreadAttribute> atrybutu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano tego elementu członkowskiego.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Ten błąd zazwyczaj występuje, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). Dodaj <see cref="T:System.STAThreadAttribute" /> do tej aplikacji <see langword="Main" /> metody.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="text" /> jest <see langword="null" /> lub <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="format" /> nie jest prawidłową <see cref="T:System.Windows.Forms.TextDataFormat" /> wartość.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">do dodawania danych tekst do Schowka systemu Windows. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionClipboard.OwnClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
      </Docs>
    </Member>
  </Members>
</Type>