<Type Name="Clipboard" FullName="System.Windows.Forms.Clipboard">
  <Metadata><Meta Name="ms.openlocfilehash" Value="06eaa1806954189e51eff9779059bb3c8e32b6ce" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69195200" /></Metadata><TypeSignature Language="C#" Value="public sealed class Clipboard" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Clipboard extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Clipboard" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Clipboard" />
  <TypeSignature Language="C++ CLI" Value="public ref class Clipboard sealed" />
  <TypeSignature Language="F#" Value="type Clipboard = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zapewnia metody umieszczania danych i pobierania danych ze schowka systemowego. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby zapoznać się z listą wstępnie zdefiniowanych formatów do <xref:System.Windows.Forms.Clipboard> użycia z klasą <xref:System.Windows.Forms.DataFormats> , zobacz Klasa.  
  
 Wywołaj <xref:System.Windows.Forms.Clipboard.SetDataObject%2A> , aby umieścić dane w schowku, zastępując jego bieżącą zawartość. Aby umieścić trwałą kopię danych w schowku, ustaw `copy` parametr na. `true`  
  
> [!NOTE]
>  Aby umieścić dane w schowku w wielu formatach, użyj <xref:System.Windows.Forms.DataObject> klasy <xref:System.Windows.Forms.IDataObject> lub implementacji. Umieść dane w schowku w wielu formatach, aby zmaksymalizować prawdopodobieństwo, że aplikacja docelowa, której wymagania dotyczące formatu mogą nie być znane, można pomyślnie pobrać dane.  
  
 Wywołanie <xref:System.Windows.Forms.Clipboard.GetDataObject%2A> pobierania danych ze schowka. Dane są zwracane jako obiekt implementujący <xref:System.Windows.Forms.IDataObject> interfejs. Użyj metod określonych przez <xref:System.Windows.Forms.IDataObject> i pola w <xref:System.Windows.Forms.DataFormats> celu wyodrębnienia danych z obiektu. Jeśli nie znasz formatu pobranych danych, wywołaj <xref:System.Windows.Forms.IDataObject.GetFormats%2A> metodę <xref:System.Windows.Forms.IDataObject> interfejsu, aby uzyskać listę wszystkich formatów, w których są przechowywane dane. Następnie Wywołaj <xref:System.Windows.Forms.IDataObject.GetData%2A> metodę <xref:System.Windows.Forms.IDataObject> interfejsu i określ format, który może być używany przez aplikację.  
  
 W [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]systemieKlasazawieradodatkowe metody, które ułatwiają pracę ze schowkiem systemowym. <xref:System.Windows.Forms.Clipboard> Wywołaj <xref:System.Windows.Forms.Clipboard.Clear%2A> metodę, aby usunąć wszystkie dane ze schowka. Aby dodać dane określonego formatu do schowka, zastępując `Set`istniejące dane, wywołaj odpowiednią metodę *formatowania* , taką jak <xref:System.Windows.Forms.Clipboard.SetText%2A>, lub wywołaj <xref:System.Windows.Forms.Clipboard.SetData%2A> metodę, aby określić format. Aby pobrać dane określonego formatu ze schowka, najpierw Wywołaj odpowiednią `Contains`metodę *formatu* (taką jak <xref:System.Windows.Forms.Clipboard.ContainsText%2A>), aby określić, czy Schowek zawiera dane w tym formacie, a następnie Wywołaj odpowiednie `Get`Metoda *formatowania* (na przykład <xref:System.Windows.Forms.Clipboard.GetText%2A>) w celu pobrania danych, jeśli schowek ją zawiera. Aby określić format w tych operacjach, należy wywołać <xref:System.Windows.Forms.Clipboard.ContainsData%2A> metody <xref:System.Windows.Forms.Clipboard.GetData%2A> i.  
  
> [!NOTE]
>  Wszystkie aplikacje oparte na systemie Windows współdzielą Schowek systemu, więc zawartość może ulec zmianie po przełączeniu do innej aplikacji.  
>   
>  Obiekt musi być możliwy do serializacji, aby można go było umieścić w Schowku. Jeśli przekazanie obiektu, którego nie można serializować, do metody Schowka, metoda zakończy się niepowodzeniem bez zgłaszania wyjątku. Aby <xref:System.Runtime.Serialization> uzyskać więcej informacji na temat serializacji, zobacz. Jeśli aplikacja docelowa wymaga bardzo określonego formatu danych, nagłówki dodane do danych w procesie serializacji mogą uniemożliwiać aplikacji rozpoznawanie danych. Aby zachować format danych, Dodaj dane <xref:System.Byte> jako tablicę <xref:System.IO.MemoryStream> do <xref:System.Windows.Forms.DataObject.SetData%2A> i przekaż <xref:System.IO.MemoryStream> do metody.  
>   
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawionych na tryb Single Thread Apartment (STA). Aby użyć tej klasy, należy się upewnić, że `Main` Metoda jest oznaczona <xref:System.STAThreadAttribute> przy użyciu atrybutu.  
>   
>  W przypadku używania formatu metapliku ze schowka mogą być konieczne specjalne uwagi. Ze względu na ograniczenie bieżącej implementacji <xref:System.Windows.Forms.DataObject> klasy, format metapliku używany przez .NET Framework może nie być rozpoznawany przez aplikacje korzystające ze starszego formatu metapliku. W takim przypadku należy współpracować z interfejsem programowania aplikacji (API) w schowku Win32.
  
   
  
## Examples  
 Poniższy przykład kodu używa <xref:System.Windows.Forms.Clipboard> metod, aby umieścić dane i pobrać je ze schowka systemowego. Ten kod przyjmuje `button1`, `button2`, `textBox1`, i `textBox2` został utworzony i umieszczony w formularzu.  
  
 `button1_Click` Metoda wywołuje<xref:System.Windows.Forms.Clipboard.SetDataObject%2A> zaznaczony tekst z pola tekstowego i umieszcza je w schowku systemowym.  
  
 `button2_Click` Metoda wywołuje<xref:System.Windows.Forms.Clipboard.GetDataObject%2A> pobieranie danych ze schowka systemowego. Kod używa <xref:System.Windows.Forms.IDataObject> i <xref:System.Windows.Forms.DataFormats> do wyodrębniania zwracanych danych i wyświetla dane w `textBox2`.  
  
 [!code-cpp[Classic Clipboard Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataObject" />
    <altmember cref="T:System.Windows.Forms.DataFormats" />
    <altmember cref="T:System.Windows.Forms.IDataObject" />
    <related type="Article" href="https://msdn.microsoft.com/library/15abda8b-0527-47c7-aedb-77ab595f2bf1">Dodatkowe zagadnienia dotyczące zabezpieczeń dotyczące formularzy systemu Windows</related>
  </Docs>
  <Members>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public static void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Clear();" />
      <MemberSignature Language="F#" Value="static member Clear : unit -&gt; unit" Usage="System.Windows.Forms.Clipboard.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa wszystkie dane ze schowka.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ze względu na to, że Schowek jest współużytkowany przez wiele procesów, wywołanie tej metody może mieć wpływ na te procesy.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawionych na tryb Single Thread Apartment (STA). Aby użyć tej klasy, należy się upewnić, że `Main` Metoda jest oznaczona <xref:System.STAThreadAttribute> przy użyciu atrybutu.  
  
   
  
## Examples  
 Poniższy przykład demonstruje ten element członkowski.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Clipboard#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Zwykle zdarza się to, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). <see cref="T:System.STAThreadAttribute" /> Dodaj do <see langword="Main" /> metody aplikacji.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Czyszczenie schowka systemowego. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionClipboard.OwnClipboard" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ContainsAudio">
      <MemberSignature Language="C#" Value="public static bool ContainsAudio ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsAudio() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsAudio" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsAudio () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsAudio();" />
      <MemberSignature Language="F#" Value="static member ContainsAudio : unit -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsAudio " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wskazuje, czy w tym <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> formacie znajdują się dane w Schowku.</summary>
        <returns><see langword="true" />Jeśli w schowku znajdują się dane audio, w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, aby określić, czy Schowek zawiera dane audio przed pobraniem go <xref:System.Windows.Forms.Clipboard.GetAudioStream%2A> za pomocą metody.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawionych na tryb Single Thread Apartment (STA). Aby użyć tej klasy, należy się upewnić, że `Main` Metoda jest oznaczona <xref:System.STAThreadAttribute> przy użyciu atrybutu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Zwykle zdarza się to, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). <see cref="T:System.STAThreadAttribute" /> Dodaj do <see langword="Main" /> metody aplikacji.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">w celu uzyskania dostępu do schowka systemowego. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetAudio" />
      </Docs>
    </Member>
    <Member MemberName="ContainsData">
      <MemberSignature Language="C#" Value="public static bool ContainsData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsData (format As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsData(System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member ContainsData : string -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsData format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="format">Format danych do wyszukania. Zobacz <see cref="T:System.Windows.Forms.DataFormats" /> , aby uzyskać wstępnie zdefiniowane formaty.</param>
        <summary>Wskazuje, czy w schowku znajdują się dane w określonym formacie lub można je przekonwertować na ten format.</summary>
        <returns><see langword="true" />Jeśli w schowku znajdują się dane, które znajdują <paramref name="format" /> się w określonym lub można je przekonwertować na ten format <see langword="false" />; w przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataFormats> Klasa zawiera wstępnie zdefiniowane nazwy formatów, których można użyć z tą metodą.  
  
 Użyj tej metody, aby określić, czy Schowek zawiera dane w określonym formacie czy w zgodnym formacie przed pobraniem go <xref:System.Windows.Forms.Clipboard.GetData%2A> za pomocą metody.  
  
> [!NOTE]
>  Dane można przekonwertować na inny format, jeśli został on zapisany, określając, że konwersja jest dozwolona, i jeśli żądany format jest zgodny z zapisanym formatem. Na przykład dane przechowywane w formacie Unicode można przekonwertować na tekst.  
>   
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawionych na tryb Single Thread Apartment (STA). Aby użyć tej klasy, należy się upewnić, że `Main` Metoda jest oznaczona <xref:System.STAThreadAttribute> przy użyciu atrybutu.  
  
   
  
## Examples  
 Poniższy przykład demonstruje ten element członkowski.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.Clipboard#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Zwykle zdarza się to, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). <see cref="T:System.STAThreadAttribute" /> Dodaj do <see langword="Main" /> metody aplikacji.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">w celu uzyskania dostępu do schowka systemowego. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetData(System.String)" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetData(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsFileDropList">
      <MemberSignature Language="C#" Value="public static bool ContainsFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsFileDropList () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsFileDropList();" />
      <MemberSignature Language="F#" Value="static member ContainsFileDropList : unit -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsFileDropList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wskazuje, czy w schowku znajdują się dane w <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> formacie lub można je przekonwertować na ten format.</summary>
        <returns><see langword="true" />Jeśli w schowku znajduje się lista upuszczania plików; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lista rozwijana plików jest kolekcją ciągów zawierających informacje o ścieżce dla plików.  
  
 Użyj tej metody, aby określić, czy Schowek zawiera listę rozwijaną plików przed pobraniem jej <xref:System.Windows.Forms.Clipboard.GetFileDropList%2A> przy użyciu metody.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawionych na tryb Single Thread Apartment (STA). Aby użyć tej klasy, należy się upewnić, że `Main` Metoda jest oznaczona <xref:System.STAThreadAttribute> przy użyciu atrybutu.  
  
   
  
## Examples  
 Poniższy przykład demonstruje ten element członkowski.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.Clipboard#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Zwykle zdarza się to, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). <see cref="T:System.STAThreadAttribute" /> Dodaj do <see langword="Main" /> metody aplikacji.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">w celu uzyskania dostępu do schowka systemowego. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetFileDropList" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsImage">
      <MemberSignature Language="C#" Value="public static bool ContainsImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsImage" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsImage () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsImage();" />
      <MemberSignature Language="F#" Value="static member ContainsImage : unit -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wskazuje, czy w schowku znajdują się dane w <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> formacie lub można je przekonwertować na ten format.</summary>
        <returns><see langword="true" />Jeśli w schowku znajdują się dane obrazu, w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, aby określić, czy Schowek zawiera dane obrazu przed pobraniem go <xref:System.Windows.Forms.Clipboard.GetImage%2A> za pomocą metody.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawionych na tryb Single Thread Apartment (STA). Aby użyć tej klasy, należy się upewnić, że `Main` Metoda jest oznaczona <xref:System.STAThreadAttribute> przy użyciu atrybutu.  
  
   
  
## Examples  
 Poniższy przykład demonstruje ten element członkowski.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.Clipboard#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Zwykle zdarza się to, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). <see cref="T:System.STAThreadAttribute" /> Dodaj do <see langword="Main" /> metody aplikacji.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">w celu uzyskania dostępu do schowka systemowego. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetImage" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ContainsText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wskazuje, czy w schowku znajdują się dane tekstowe.</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public static bool ContainsText ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsText" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsText () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsText();" />
      <MemberSignature Language="F#" Value="static member ContainsText : unit -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wskazuje, czy w przypadku w formacie <see cref="F:System.Windows.Forms.TextDataFormat.Text" /> lub <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> w schowku znajdują się dane, w zależności od systemu operacyjnego.</summary>
        <returns><see langword="true" />Jeśli w schowku znajdują się dane tekstowe; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda sprawdza obecność danych w <xref:System.Windows.Forms.TextDataFormat.UnicodeText> [!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)] formacie i [!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)]. W przeciwnym razie ta metoda sprawdza obecność danych w <xref:System.Windows.Forms.TextDataFormat.Text> formacie.  
  
 Użyj tej metody, aby określić, czy Schowek zawiera dane tekstowe przed pobraniem go <xref:System.Windows.Forms.Clipboard.GetText%2A> za pomocą metody.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawionych na tryb Single Thread Apartment (STA). Aby użyć tej klasy, należy się upewnić, że `Main` Metoda jest oznaczona <xref:System.STAThreadAttribute> przy użyciu atrybutu.  
  
   
  
## Examples  
 Poniższy przykład ilustruje Przeciążenie <xref:System.Windows.Forms.Clipboard.ContainsText%2A> metody podobnej do tego przeciążenia.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Zwykle zdarza się to, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). <see cref="T:System.STAThreadAttribute" /> Dodaj do <see langword="Main" /> metody aplikacji.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">w celu uzyskania dostępu do schowka systemowego. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="F:System.Windows.Forms.TextDataFormat.Text" />
        <altmember cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public static bool ContainsText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsText (format As TextDataFormat) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsText(System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="static member ContainsText : System.Windows.Forms.TextDataFormat -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsText format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="format">Jedna z <see cref="T:System.Windows.Forms.TextDataFormat" /> wartości.</param>
        <summary>Wskazuje, czy w Schowku nie ma danych tekstowych w formacie wskazanym przez określoną <see cref="T:System.Windows.Forms.TextDataFormat" /> wartość.</summary>
        <returns><see langword="true" />w przypadku danych tekstowych w schowku w wartości określonej dla <paramref name="format" />; <see langword="false" />w przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, aby określić, czy Schowek zawiera dane tekstowe przed pobraniem go <xref:System.Windows.Forms.Clipboard.GetText%2A> za pomocą metody.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawionych na tryb Single Thread Apartment (STA). Aby użyć tej klasy, należy się upewnić, że `Main` Metoda jest oznaczona <xref:System.STAThreadAttribute> przy użyciu atrybutu.  
  
   
  
## Examples  
 Poniższy przykład demonstruje ten element członkowski.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Zwykle zdarza się to, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). <see cref="T:System.STAThreadAttribute" /> Dodaj do <see langword="Main" /> metody aplikacji.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="format" />nie jest prawidłową <see cref="T:System.Windows.Forms.TextDataFormat" /> wartością.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">w celu uzyskania dostępu do schowka systemowego. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetAudioStream">
      <MemberSignature Language="C#" Value="public static System.IO.Stream GetAudioStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream GetAudioStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAudioStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ GetAudioStream();" />
      <MemberSignature Language="F#" Value="static member GetAudioStream : unit -&gt; System.IO.Stream" Usage="System.Windows.Forms.Clipboard.GetAudioStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera strumień audio ze schowka.</summary>
        <returns>Zawierające dane audio lub <see langword="null" /> Jeśli Schowek nie <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> zawiera żadnych danych w formacie. <see cref="T:System.IO.Stream" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Windows.Forms.Clipboard.ContainsAudio%2A> , aby określić, czy Schowek zawiera dane audio przed pobraniem go z tą metodą.  
  
 Użyj metody <xref:System.Windows.Forms.Clipboard.SetAudio%2A> , aby dodać dane audio do Schowka.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawionych na tryb Single Thread Apartment (STA). Aby użyć tej klasy, należy się upewnić, że `Main` Metoda jest oznaczona <xref:System.STAThreadAttribute> przy użyciu atrybutu.  
  
   
  
## Examples  
 Poniższy przykład demonstruje ten element członkowski.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Zwykle zdarza się to, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). <see cref="T:System.STAThreadAttribute" /> Dodaj do <see langword="Main" /> metody aplikacji.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">w celu uzyskania dostępu do schowka systemowego. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetAudio" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public static object GetData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetData (format As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetData(System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member GetData : string -&gt; obj" Usage="System.Windows.Forms.Clipboard.GetData format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="format">Format danych do pobrania. Zobacz <see cref="T:System.Windows.Forms.DataFormats" /> , aby uzyskać wstępnie zdefiniowane formaty.</param>
        <summary>Pobiera dane ze schowka w określonym formacie.</summary>
        <returns>Reprezentuje dane Schowka lub <see langword="null" /> Jeśli Schowek nie zawiera żadnych danych w określonym <paramref name="format" /> lub można go przekonwertować na ten format. <see cref="T:System.Object" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Windows.Forms.Clipboard.ContainsData%2A> , aby określić, czy Schowek zawiera dane w określonym formacie czy w zgodnym formacie przed pobraniem go z tą metodą.  
  
 Jeśli ta metoda nie może znaleźć danych w określonym formacie, próbuje przekonwertować dane do formatu. Jeśli dane nie mogą zostać skonwertowane do określonego formatu lub jeśli dane były przechowywane z automatyczną konwersją na `false`wartość, ta metoda zwraca. `null`  
  
> [!NOTE]
>  Dane można przekonwertować na inny format, jeśli został on zapisany, określając, że konwersja jest dozwolona, i jeśli żądany format jest zgodny z zapisanym formatem. Na przykład dane przechowywane w formacie Unicode można przekonwertować na tekst.  
>   
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawionych na tryb Single Thread Apartment (STA). Aby użyć tej klasy, należy się upewnić, że `Main` Metoda jest oznaczona <xref:System.STAThreadAttribute> przy użyciu atrybutu.  
  
 Użyj metody <xref:System.Windows.Forms.Clipboard.SetData%2A> , aby dodać dane do Schowka w określonym formacie.  
  
   
  
## Examples  
 Poniższy przykład demonstruje ten element członkowski.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.Clipboard#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Zwykle zdarza się to, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). <see cref="T:System.STAThreadAttribute" /> Dodaj do <see langword="Main" /> metody aplikacji.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">w celu uzyskania dostępu do schowka systemowego. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsData(System.String)" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetData(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataObject">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.IDataObject GetDataObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.IDataObject GetDataObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetDataObject" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDataObject () As IDataObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::IDataObject ^ GetDataObject();" />
      <MemberSignature Language="F#" Value="static member GetDataObject : unit -&gt; System.Windows.Forms.IDataObject" Usage="System.Windows.Forms.Clipboard.GetDataObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IDataObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera dane znajdujące się obecnie w schowku systemowym.</summary>
        <returns>Reprezentuje dane znajdujące się obecnie w schowku lub <see langword="null" /> w przypadku braku danych w Schowku. <see cref="T:System.Windows.Forms.IDataObject" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ typ danych obiektu zwróconego ze schowka może się różnić, Metoda ta zwraca dane w <xref:System.Windows.Forms.IDataObject>. Następnie można użyć metod <xref:System.Windows.Forms.IDataObject> interfejsu w celu wyodrębnienia danych w ich prawidłowym typie danych.  
  
 Ta metoda próbuje pobrać dane dziesięć razy w interwałach 100-milisekundowych i zgłasza <xref:System.Runtime.InteropServices.ExternalException> , że wszystkie próby nie powiodą się.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawionych na tryb Single Thread Apartment (STA). Aby użyć tej klasy, należy się upewnić, że `Main` Metoda jest oznaczona <xref:System.STAThreadAttribute> przy użyciu atrybutu.  
  
   
  
## Examples  
 Poniższy przykład kodu używa <xref:System.Windows.Forms.Clipboard> metod, aby umieścić dane i pobrać je ze schowka systemowego. Ten kod przyjmuje `button1`, `button2`, `textBox1`, i `textBox2` został umieszczony w formularzu.  
  
 `button1_Click` Metoda wywołuje<xref:System.Windows.Forms.Clipboard.SetDataObject%2A> zaznaczony tekst z pola tekstowego i umieszcza je w schowku systemowym.  
  
 `button2_Click` Metoda wywołuje<xref:System.Windows.Forms.Clipboard.GetDataObject%2A> pobieranie danych ze schowka systemowego. Kod używa <xref:System.Windows.Forms.IDataObject> i <xref:System.Windows.Forms.DataFormats> , aby wyodrębnić zwrócone dane. Dane są wyświetlane w `textBox2`.  
  
 [!code-cpp[Classic Clipboard Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można pobrać danych ze schowka. Zwykle zdarza się to, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA), a <see cref="P:System.Windows.Forms.Application.MessageLoop" /> wartość właściwości to. <see langword="true" /> <see cref="T:System.STAThreadAttribute" /> Dodaj do <see langword="Main" /> metody aplikacji.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">w celu uzyskania dostępu do schowka systemowego. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object)" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
      </Docs>
    </Member>
    <Member MemberName="GetFileDropList">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.StringCollection GetFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Specialized.StringCollection GetFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileDropList () As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Specialized::StringCollection ^ GetFileDropList();" />
      <MemberSignature Language="F#" Value="static member GetFileDropList : unit -&gt; System.Collections.Specialized.StringCollection" Usage="System.Windows.Forms.Clipboard.GetFileDropList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera kolekcję nazw plików ze schowka.</summary>
        <returns>Zawiera nazwy plików lub <see langword="null" /> Jeśli Schowek nie zawiera żadnych <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> danych w formacie lub można go przekonwertować na ten format. <see cref="T:System.Collections.Specialized.StringCollection" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lista rozwijana plików jest kolekcją ciągów zawierających informacje o ścieżce dla plików.  
  
 Lista rozwijana plików jest przechowywana w schowku jako <xref:System.String> tablica. Ta metoda konwertuje tę tablicę na <xref:System.Collections.Specialized.StringCollection> i zwraca kolekcję.  
  
 Użyj metody <xref:System.Windows.Forms.Clipboard.ContainsFileDropList%2A> , aby określić, czy Schowek zawiera listę rozwijaną plików przed pobraniem jej z tą metodą.  
  
 Użyj metody <xref:System.Windows.Forms.Clipboard.SetFileDropList%2A> , aby dodać listę rozwijaną do Schowka.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawionych na tryb Single Thread Apartment (STA). Aby użyć tej klasy, należy się upewnić, że `Main` Metoda jest oznaczona <xref:System.STAThreadAttribute> przy użyciu atrybutu.  
  
   
  
## Examples  
 Poniższy przykład demonstruje ten element członkowski.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.Clipboard#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Zwykle zdarza się to, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). <see cref="T:System.STAThreadAttribute" /> Dodaj do <see langword="Main" /> metody aplikacji.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">w celu uzyskania dostępu do schowka systemowego. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Collections.Specialized.StringCollection" />
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsFileDropList" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image GetImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Image GetImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetImage" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetImage () As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ GetImage();" />
      <MemberSignature Language="F#" Value="static member GetImage : unit -&gt; System.Drawing.Image" Usage="System.Windows.Forms.Clipboard.GetImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera obraz ze schowka.</summary>
        <returns>Reprezentuje dane obrazu Schowka lub <see langword="null" /> Jeśli Schowek nie zawiera żadnych <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> danych w formacie lub można go przekonwertować na ten format. <see cref="T:System.Drawing.Image" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Windows.Forms.Clipboard.ContainsImage%2A> , aby określić, czy Schowek zawiera dane obrazu przed pobraniem go z tą metodą.  
  
 Użyj metody <xref:System.Windows.Forms.Clipboard.SetImage%2A> , aby dodać dane obrazu do Schowka.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawionych na tryb Single Thread Apartment (STA). Aby użyć tej klasy, należy się upewnić, że `Main` Metoda jest oznaczona <xref:System.STAThreadAttribute> przy użyciu atrybutu.  
  
   
  
## Examples  
 Poniższy przykład demonstruje ten element członkowski.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.Clipboard#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Zwykle zdarza się to, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). <see cref="T:System.STAThreadAttribute" /> Dodaj do <see langword="Main" /> metody aplikacji.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">w celu uzyskania dostępu do schowka systemowego. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Drawing.Image" />
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsImage" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera dane tekstowe ze schowka.</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public static string GetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetText" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetText () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetText();" />
      <MemberSignature Language="F#" Value="static member GetText : unit -&gt; string" Usage="System.Windows.Forms.Clipboard.GetText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera dane tekstowe ze schowka w formacie <see cref="F:System.Windows.Forms.TextDataFormat.Text" /> lub <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> , w zależności od systemu operacyjnego.</summary>
        <returns>Dane tekstowe ze schowka lub <see cref="F:System.String.Empty" /> Jeśli Schowek nie zawiera danych <see cref="F:System.Windows.Forms.TextDataFormat.Text" /> w formacie lub <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> , w zależności od systemu operacyjnego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zwraca dane tekstowe w <xref:System.Windows.Forms.TextDataFormat.UnicodeText> [!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)] formacie i [!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)]. W przeciwnym razie ta metoda zwraca dane tekstowe w <xref:System.Windows.Forms.TextDataFormat.Text> formacie.  
  
 Użyj metody <xref:System.Windows.Forms.Clipboard.ContainsText%2A> , aby określić, czy Schowek zawiera dane tekstowe przed pobraniem go z tą metodą.  
  
 Użyj metody <xref:System.Windows.Forms.Clipboard.SetText%2A> , aby dodać dane tekstowe do Schowka.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawionych na tryb Single Thread Apartment (STA). Aby użyć tej klasy, należy się upewnić, że `Main` Metoda jest oznaczona <xref:System.STAThreadAttribute> przy użyciu atrybutu.  
  
   
  
## Examples  
 Poniższy przykład ilustruje Przeciążenie <xref:System.Windows.Forms.Clipboard.GetText%2A> metody podobnej do tego przeciążenia.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Zwykle zdarza się to, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). <see cref="T:System.STAThreadAttribute" /> Dodaj do <see langword="Main" /> metody aplikacji.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">w celu uzyskania dostępu do schowka systemowego. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public static string GetText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetText (format As TextDataFormat) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetText(System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="static member GetText : System.Windows.Forms.TextDataFormat -&gt; string" Usage="System.Windows.Forms.Clipboard.GetText format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="format">Jedna z <see cref="T:System.Windows.Forms.TextDataFormat" /> wartości.</param>
        <summary>Pobiera dane tekstowe ze schowka w formacie wskazanym przez określoną <see cref="T:System.Windows.Forms.TextDataFormat" /> wartość.</summary>
        <returns>Dane tekstowe ze schowka lub <see cref="F:System.String.Empty" /> Jeśli Schowek nie zawiera danych w określonym formacie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Windows.Forms.Clipboard.ContainsText%2A> , aby określić, czy Schowek zawiera dane tekstowe przed pobraniem go z tą metodą.  
  
 Użyj metody <xref:System.Windows.Forms.Clipboard.SetText%2A> , aby dodać dane tekstowe do Schowka.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawionych na tryb Single Thread Apartment (STA). Aby użyć tej klasy, należy się upewnić, że `Main` Metoda jest oznaczona <xref:System.STAThreadAttribute> przy użyciu atrybutu.  
  
   
  
## Examples  
 Poniższy przykład demonstruje ten element członkowski.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Zwykle zdarza się to, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). <see cref="T:System.STAThreadAttribute" /> Dodaj do <see langword="Main" /> metody aplikacji.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="format" />nie jest prawidłową <see cref="T:System.Windows.Forms.TextDataFormat" /> wartością.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">w celu uzyskania dostępu do schowka systemowego. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAudio">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Czyści schowek, a następnie dodaje dane w <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> formacie, zastępując istniejące dane.</summary>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public static void SetAudio (byte[] audioBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAudio(unsigned int8[] audioBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetAudio(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAudio (audioBytes As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAudio(cli::array &lt;System::Byte&gt; ^ audioBytes);" />
      <MemberSignature Language="F#" Value="static member SetAudio : byte[] -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetAudio audioBytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioBytes" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="audioBytes"><see cref="T:System.Byte" /> Tablica zawierająca dane audio.</param>
        <summary>Czyści schowek, a następnie dodaje <see cref="T:System.Byte" /> tablicę <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> w formacie <see cref="T:System.IO.Stream" />po przeprowadzeniu konwersji do.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby pobrać dane audio ze schowka, najpierw Użyj <xref:System.Windows.Forms.Clipboard.ContainsAudio%2A> metody, aby określić, czy Schowek zawiera dane audio przed pobraniem go <xref:System.Windows.Forms.Clipboard.GetAudioStream%2A> za pomocą metody.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawionych na tryb Single Thread Apartment (STA). Aby użyć tej klasy, należy się upewnić, że `Main` Metoda jest oznaczona <xref:System.STAThreadAttribute> przy użyciu atrybutu.  
  
   
  
## Examples  
 Poniższy przykład ilustruje Przeciążenie <xref:System.Windows.Forms.Clipboard.SetAudio%2A> metody podobnej do tego przeciążenia.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Zwykle zdarza się to, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). <see cref="T:System.STAThreadAttribute" /> Dodaj do <see langword="Main" /> metody aplikacji.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="audioBytes" />jest <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">do dodawania danych audio do schowka systemowego. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      </Docs>
    </Member>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public static void SetAudio (System.IO.Stream audioStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAudio(class System.IO.Stream audioStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetAudio(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAudio (audioStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAudio(System::IO::Stream ^ audioStream);" />
      <MemberSignature Language="F#" Value="static member SetAudio : System.IO.Stream -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetAudio audioStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioStream" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="audioStream"><see cref="T:System.IO.Stream" /> Zawierający dane audio.</param>
        <summary>Czyści schowek, a następnie dodaje <see cref="T:System.IO.Stream" /> <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> w formacie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby pobrać dane audio ze schowka, najpierw Użyj <xref:System.Windows.Forms.Clipboard.ContainsAudio%2A> metody, aby określić, czy Schowek zawiera dane audio przed pobraniem go <xref:System.Windows.Forms.Clipboard.GetAudioStream%2A> za pomocą metody.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawionych na tryb Single Thread Apartment (STA). Aby użyć tej klasy, należy się upewnić, że `Main` Metoda jest oznaczona <xref:System.STAThreadAttribute> przy użyciu atrybutu.  
  
   
  
## Examples  
 Poniższy przykład demonstruje ten element członkowski.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Zwykle zdarza się to, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). <see cref="T:System.STAThreadAttribute" /> Dodaj do <see langword="Main" /> metody aplikacji.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="audioStream" />jest <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">do dodawania danych audio do schowka systemowego. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public static void SetData (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetData(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetData (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetData(System::String ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="static member SetData : string * obj -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="data" Type="System.Object" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="format">Format danych do ustawienia. Zobacz <see cref="T:System.Windows.Forms.DataFormats" /> , aby uzyskać wstępnie zdefiniowane formaty.</param>
        <param name="data"><see cref="T:System.Object" /> Reprezentujący dane do dodania.</param>
        <summary>Czyści schowek, a następnie dodaje dane w określonym formacie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie znasz formatu aplikacji docelowej, możesz przechowywać dane w wielu formatach za pomocą tej metody.  
  
 Dane przechowywane przy użyciu tej metody można przekonwertować na format zgodny podczas pobierania.  
  
 Aby pobrać dane ze schowka w określonym formacie, należy najpierw użyć <xref:System.Windows.Forms.Clipboard.ContainsData%2A> metody, aby określić, czy Schowek zawiera dane w tym formacie przed pobraniem go <xref:System.Windows.Forms.Clipboard.GetData%2A> za pomocą metody.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawionych na tryb Single Thread Apartment (STA). Aby użyć tej klasy, należy się upewnić, że `Main` Metoda jest oznaczona <xref:System.STAThreadAttribute> przy użyciu atrybutu.  
  
   
  
## Examples  
 Poniższy przykład demonstruje ten element członkowski.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.Clipboard#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Zwykle zdarza się to, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). <see cref="T:System.STAThreadAttribute" /> Dodaj do <see langword="Main" /> metody aplikacji.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="data" />jest <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">do dodawania danych dowolnego typu lub formatowania do schowka systemowego. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsData(System.String)" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetData(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetDataObject">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Czyści schowek, a następnie dodaje do niego dane.</summary>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetDataObject">
      <MemberSignature Language="C#" Value="public static void SetDataObject (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDataObject(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetDataObject (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDataObject(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="static member SetDataObject : obj -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetDataObject data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">Dane, które mają zostać umieszczone w Schowku.</param>
        <summary>Czyści schowek, a następnie umieszcza w nim nietrwałe dane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po zakończeniu działania aplikacji dane zostaną usunięte ze schowka systemowego.  
  
 Ta metoda próbuje ustawić dziesięć danych w interwałach 100-milisekundowych i zgłasza <xref:System.Runtime.InteropServices.ExternalException> , że wszystkie próby nie powiodą się.  
  
> [!NOTE]
>  Obiekt musi być możliwy do serializacji, aby można go było umieścić w Schowku. W przypadku przekazania niemożliwego do serializacji obiektu do tej metody nie zostanie zgłoszony wyjątek. Aby <xref:System.Runtime.Serialization> uzyskać więcej informacji na temat serializacji, zobacz.  
>   
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawionych na tryb Single Thread Apartment (STA). Aby użyć tej klasy, należy się upewnić, że `Main` Metoda jest oznaczona <xref:System.STAThreadAttribute> przy użyciu atrybutu.  
  
   
  
## Examples  
 Poniższy przykład kodu używa <xref:System.Windows.Forms.Clipboard.SetDataObject%2A> do umieszczania nietrwałych danych tekstowych w schowku systemowym. W metodzie zaznaczony tekst jest kopiowany z `textBox1` i wklejany w Schowku. `button1_Click` W metodzie informacje są pobierane ze schowka i wyświetlane w `textBox2`. `button2_Click` Ten kod przyjmuje `button1`, `button2`, `textBox1`, i `textBox2` został utworzony i umieszczony w formularzu.  
  
 [!code-cpp[Classic Clipboard Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można umieścić danych w Schowku. Zwykle zdarza się to, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). <see cref="T:System.STAThreadAttribute" /> Dodaj do <see langword="Main" /> metody aplikacji.</exception>
        <exception cref="T:System.ArgumentNullException">Wartość <paramref name="data" /> jest <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">do dodawania danych dowolnego typu lub formatowania do schowka systemowego. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </Member>
    <Member MemberName="SetDataObject">
      <MemberSignature Language="C#" Value="public static void SetDataObject (object data, bool copy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDataObject(object data, bool copy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetDataObject (data As Object, copy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDataObject(System::Object ^ data, bool copy);" />
      <MemberSignature Language="F#" Value="static member SetDataObject : obj * bool -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetDataObject (data, copy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="copy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="data">Dane, które mają zostać umieszczone w Schowku.</param>
        <param name="copy"><see langword="true" />Jeśli chcesz, aby dane pozostawały w Schowku po zakończeniu tej aplikacji; w przeciwnym razie. <see langword="false" /></param>
        <summary>Czyści schowek, a następnie umieszcza w nim dane i określa, czy dane powinny pozostać po zakończeniu działania aplikacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli parametr ma `false`wartość, dane zostaną usunięte ze schowka systemu po zakończeniu działania aplikacji. `copy`  
  
 Ta metoda próbuje ustawić dziesięć danych w interwałach 100-milisekundowych i zgłasza <xref:System.Runtime.InteropServices.ExternalException> , że wszystkie próby nie powiodą się.  
  
> [!NOTE]
>  Obiekt musi być możliwy do serializacji, aby można go było umieścić w Schowku. W przypadku przekazania niemożliwego do serializacji obiektu do tej metody nie zostanie zgłoszony wyjątek. Aby <xref:System.Runtime.Serialization> uzyskać więcej informacji na temat serializacji, zobacz.  
>   
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawionych na tryb Single Thread Apartment (STA). Aby użyć tej klasy, należy się upewnić, że `Main` Metoda jest oznaczona <xref:System.STAThreadAttribute> przy użyciu atrybutu.  
  
   
  
## Examples  
 Następująca metoda jest uruchamiana w aplikacji. Umieszcza trwałą kopię wybranych danych tekstowych w polu tekstowym w schowku systemowym. Ten kod zakłada `button1`, `textBox1`, i `textBox2` został utworzony i umieszczony w formularzu.  
  
 [!code-cpp[Classic Clipboard.SetDataObject1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard.SetDataObject1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard.SetDataObject1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/VB/source.vb#1)]  
  
 W innej aplikacji następująca metoda pobiera tekst ze schowka systemowego i wkleja tekst do `textBox2`. Ten kod zakłada `button2` i `textBox2` został utworzony i umieszczony w formularzu.  
  
 [!code-cpp[Classic Clipboard.SetDataObject1 Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Clipboard.SetDataObject1 Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CS/source.cs#2)]
 [!code-vb[Classic Clipboard.SetDataObject1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można umieścić danych w Schowku. Zwykle zdarza się to, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). <see cref="T:System.STAThreadAttribute" /> Dodaj do <see langword="Main" /> metody aplikacji.</exception>
        <exception cref="T:System.ArgumentNullException">Wartość <paramref name="data" /> jest <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">do dodawania danych dowolnego typu lub formatowania do schowka systemowego. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </Member>
    <Member MemberName="SetDataObject">
      <MemberSignature Language="C#" Value="public static void SetDataObject (object data, bool copy, int retryTimes, int retryDelay);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDataObject(object data, bool copy, int32 retryTimes, int32 retryDelay) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object,System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetDataObject (data As Object, copy As Boolean, retryTimes As Integer, retryDelay As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDataObject(System::Object ^ data, bool copy, int retryTimes, int retryDelay);" />
      <MemberSignature Language="F#" Value="static member SetDataObject : obj * bool * int * int -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetDataObject (data, copy, retryTimes, retryDelay)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="copy" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="retryTimes" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="retryDelay" Type="System.Int32" Index="3" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="data">Dane, które mają zostać umieszczone w Schowku.</param>
        <param name="copy"><see langword="true" />Jeśli chcesz, aby dane pozostawały w Schowku po zakończeniu tej aplikacji; w przeciwnym razie. <see langword="false" /></param>
        <param name="retryTimes">Liczba prób umieszczenia danych w Schowku.</param>
        <param name="retryDelay">Liczba milisekund, która ma zostać wstrzymana między kolejnymi próbami.</param>
        <summary>Czyści schowek, a następnie próbuje umieścić na nim dane określoną liczbę razy i z określonym opóźnieniem między próbami, opcjonalnie pozostawiając dane w Schowku po zakończeniu działania aplikacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dodanie danych do schowka może czasami zakończyć się niepowodzeniem, jeśli Schowek jest zajęty przy użyciu innego wątku lub aplikacji. Ta metoda jest przydatna do obejścia tego problemu w środowiskach z użyciem dużego Schowka.  
  
 Jeśli parametr ma `false`wartość, dane zostaną usunięte ze schowka systemu po zakończeniu działania aplikacji. `copy`  
  
> [!NOTE]
>  Obiekt musi być możliwy do serializacji, aby można go było umieścić w Schowku. W przypadku przekazania niemożliwego do serializacji obiektu do tej metody nie zostanie zgłoszony wyjątek. Aby <xref:System.Runtime.Serialization> uzyskać więcej informacji na temat serializacji, zobacz.  
>   
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawionych na tryb Single Thread Apartment (STA). Aby użyć tej klasy, należy się upewnić, że `Main` Metoda jest oznaczona <xref:System.STAThreadAttribute> przy użyciu atrybutu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). <see cref="T:System.STAThreadAttribute" /> Dodaj do <see langword="Main" /> metody aplikacji.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="data" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="retryTimes" />jest mniejsza od zera.  
  
—lub— 
 <paramref name="retryDelay" />jest mniejsza od zera.</exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można umieścić danych w Schowku. Zwykle zdarza się to, gdy Schowek jest używany przez inny proces.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">do dodawania danych dowolnego typu lub formatowania do schowka systemowego. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </Member>
    <Member MemberName="SetFileDropList">
      <MemberSignature Language="C#" Value="public static void SetFileDropList (System.Collections.Specialized.StringCollection filePaths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFileDropList(class System.Collections.Specialized.StringCollection filePaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetFileDropList (filePaths As StringCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetFileDropList(System::Collections::Specialized::StringCollection ^ filePaths);" />
      <MemberSignature Language="F#" Value="static member SetFileDropList : System.Collections.Specialized.StringCollection -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetFileDropList filePaths" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePaths" Type="System.Collections.Specialized.StringCollection" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="filePaths">A <see cref="T:System.Collections.Specialized.StringCollection" /> zawiera nazwy plików.</param>
        <summary>Czyści schowek, a następnie dodaje kolekcję nazw plików w <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> formacie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lista rozwijana plików jest kolekcją ciągów zawierających informacje o ścieżce dla plików.  
  
 Lista rozwijana plików jest przechowywana w schowku jako <xref:System.String> tablica. Ta metoda jest `filePaths` <xref:System.String> konwertowana na tablicę przed dodaniem jej do Schowka.  
  
 Aby pobrać listę rozwijaną plików ze schowka, najpierw Użyj metody, <xref:System.Windows.Forms.Clipboard.ContainsFileDropList%2A> aby określić, czy Schowek zawiera dane w tym formacie przed pobraniem go <xref:System.Windows.Forms.Clipboard.GetFileDropList%2A> za pomocą metody.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawionych na tryb Single Thread Apartment (STA). Aby użyć tej klasy, należy się upewnić, że `Main` Metoda jest oznaczona <xref:System.STAThreadAttribute> przy użyciu atrybutu.  
  
   
  
## Examples  
 Poniższy przykład demonstruje ten element członkowski.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.Clipboard#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Zwykle zdarza się to, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). <see cref="T:System.STAThreadAttribute" /> Dodaj do <see langword="Main" /> metody aplikacji.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="filePaths" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="filePaths" />nie zawiera żadnych ciągów.  
  
—lub— 
Co najmniej jeden <paramref name="filePaths" /> z ciągów w ma wartość <see cref="F:System.String.Empty" />, zawiera tylko białe znaki, zawiera co najmniej jeden nieprawidłowy znak zdefiniowany przez, is <see langword="null" />, zawiera dwukropek (:) lub przekracza maksymalną długość zdefiniowaną przez <see cref="F:System.IO.Path.InvalidPathChars" />system.  
  
Aby uzyskać więcej informacji, zobacz Właściwość.<see cref="P:System.Exception.InnerException" /> <see cref="T:System.ArgumentException" /></exception>
        <permission cref="T:System.Security.Permissions.UIPermission">do dodawania danych w <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> formacie do schowka systemowego. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">w celu uzyskania dostępu do systemu plików. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsFileDropList" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetFileDropList" />
      </Docs>
    </Member>
    <Member MemberName="SetImage">
      <MemberSignature Language="C#" Value="public static void SetImage (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetImage(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetImage(System.Drawing.Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetImage(System::Drawing::Image ^ image);" />
      <MemberSignature Language="F#" Value="static member SetImage : System.Drawing.Image -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetImage image" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="image">, <see cref="T:System.Drawing.Image" /> Aby dodać do Schowka.</param>
        <summary>Czyści schowek, a następnie dodaje <see cref="T:System.Drawing.Image" /> <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> w formacie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby pobrać dane obrazu ze schowka, należy najpierw użyć <xref:System.Windows.Forms.Clipboard.ContainsImage%2A> metody, aby określić, czy Schowek zawiera dane obrazu przed pobraniem go <xref:System.Windows.Forms.Clipboard.GetImage%2A> za pomocą metody.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawionych na tryb Single Thread Apartment (STA). Aby użyć tej klasy, należy się upewnić, że `Main` Metoda jest oznaczona <xref:System.STAThreadAttribute> przy użyciu atrybutu.  
  
   
  
## Examples  
 Poniższy przykład demonstruje ten element członkowski.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.Clipboard#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Zwykle zdarza się to, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). <see cref="T:System.STAThreadAttribute" /> Dodaj do <see langword="Main" /> metody aplikacji.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="image" />jest <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">do dodawania danych w <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> formacie do schowka systemowego. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsImage" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetImage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Czyści schowek, a następnie dodaje do niego dane tekstowe.</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public static void SetText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="static member SetText : string -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text">Tekst, który ma zostać dodany do Schowka.</param>
        <summary>Czyści schowek, a następnie dodaje dane tekstowe w formacie <see cref="F:System.Windows.Forms.TextDataFormat.Text" /> lub <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> , w zależności od systemu operacyjnego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda dodaje dane tekstowe w <xref:System.Windows.Forms.TextDataFormat.UnicodeText> [!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)] formacie i [!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)]. W przeciwnym razie ta metoda dodaje dane tekstowe w <xref:System.Windows.Forms.TextDataFormat.Text> formacie.  
  
 Aby pobrać dane tekstowe ze schowka, najpierw Użyj <xref:System.Windows.Forms.Clipboard.ContainsText%2A> metody, aby określić, czy Schowek zawiera dane tekstowe przed pobraniem go <xref:System.Windows.Forms.Clipboard.GetText%2A> za pomocą metody.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawionych na tryb Single Thread Apartment (STA). Aby użyć tej klasy, należy się upewnić, że `Main` Metoda jest oznaczona <xref:System.STAThreadAttribute> przy użyciu atrybutu.  
  
   
  
## Examples  
 Poniższy przykład ilustruje Przeciążenie <xref:System.Windows.Forms.Clipboard.SetText%2A> metody podobnej do tego przeciążenia.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Zwykle zdarza się to, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). <see cref="T:System.STAThreadAttribute" /> Dodaj do <see langword="Main" /> metody aplikacji.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="text" />jest <see langword="null" /> lub <see cref="F:System.String.Empty" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">do dodawania danych tekstowych do schowka systemowego. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionClipboard.OwnClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
      </Docs>
    </Member>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public static void SetText (string text, System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetText(string text, valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetText(System.String,System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetText (text As String, format As TextDataFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetText(System::String ^ text, System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="static member SetText : string * System.Windows.Forms.TextDataFormat -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetText (text, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text">Tekst, który ma zostać dodany do Schowka.</param>
        <param name="format">Jedna z <see cref="T:System.Windows.Forms.TextDataFormat" /> wartości.</param>
        <summary>Czyści schowek, a następnie dodaje dane tekstowe w formacie wskazanym przez określoną <see cref="T:System.Windows.Forms.TextDataFormat" /> wartość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby pobrać dane tekstowe ze schowka, najpierw Użyj <xref:System.Windows.Forms.Clipboard.ContainsText%2A> metody, aby określić, czy Schowek zawiera dane tekstowe przed pobraniem go <xref:System.Windows.Forms.Clipboard.GetText%2A> za pomocą metody.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Klasy można używać tylko w wątkach ustawionych na tryb Single Thread Apartment (STA). Aby użyć tej klasy, należy się upewnić, że `Main` Metoda jest oznaczona <xref:System.STAThreadAttribute> przy użyciu atrybutu.  
  
   
  
## Examples  
 Poniższy przykład demonstruje ten element członkowski.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Nie można wyczyścić Schowka. Zwykle zdarza się to, gdy Schowek jest używany przez inny proces.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Bieżący wątek nie jest w trybie jednowątkowego apartamentu (STA). <see cref="T:System.STAThreadAttribute" /> Dodaj do <see langword="Main" /> metody aplikacji.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="text" />jest <see langword="null" /> lub <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="format" />nie jest prawidłową <see cref="T:System.Windows.Forms.TextDataFormat" /> wartością.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">do dodawania danych tekstowych do schowka systemowego. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionClipboard.OwnClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
      </Docs>
    </Member>
  </Members>
</Type>
