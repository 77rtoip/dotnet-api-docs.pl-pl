<Type Name="LabelEditEventArgs" FullName="System.Windows.Forms.LabelEditEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7cb4d3529a026276f59648aeeed3276ddf8d270c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36519374" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LabelEditEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LabelEditEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.LabelEditEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class LabelEditEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class LabelEditEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type LabelEditEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia dane dla <see cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" /> i <see cref="E:System.Windows.Forms.ListView.AfterLabelEdit" /> zdarzenia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.Forms.LabelEditEventArgs> Określa indeks i podpis <xref:System.Windows.Forms.ListViewItem> i podpis po był edytowany przez użytkownika. Ta klasa udostępnia także <xref:System.Windows.Forms.LabelEditEventArgs.CancelEdit%2A> właściwości. Można użyć tej właściwości w <xref:System.Windows.Forms.ListView.BeforeLabelEdit?displayProperty=nameWithType> obsługi zdarzeń, aby uniemożliwić użytkownikowi edytowanie etykiety. Można również użyć go w <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType> obsługi zdarzeń do przywrócenia zmian, zwraca etykietę do oryginalnej wartości. Jest to przydatne, jeśli chcesz sprawdzić poprawność danych wejściowych użytkownika przed zatwierdzeniem zmiany.  
  
> [!NOTE]
>  Ponieważ <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType> zdarzeń odbywa się przed zatwierdzeniem, wywoływania edycję etykiety <xref:System.Windows.Forms.ListView.Sort%2A?displayProperty=nameWithType> sortowania elementu przy użyciu wartości oryginalnej metody w procedurze obsługi dla tego zdarzenia.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje Obsługa <xref:System.Windows.Forms.ListView.BeforeLabelEdit?displayProperty=nameWithType> zdarzeń i przy użyciu <xref:System.Windows.Forms.LabelEditEventArgs.Item%2A> i <xref:System.Windows.Forms.LabelEditEventArgs.CancelEdit%2A> właściwości. Aby uruchomić przykład, wklej następujący kod w nadrzędnym formularza <xref:System.Windows.Forms.ListView> formantu o nazwie `ListView1` i wypełniane przy użyciu co najmniej 3 elementów. Upewnij się, że wszystkie zdarzenia są skojarzone z ich metod obsługi zdarzeń.  
  
 [!code-cpp[System.Windows.Forms.ListView3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView3/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListView" />
    <altmember cref="T:System.Windows.Forms.ListViewItem" />
    <altmember cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
    <altmember cref="E:System.Windows.Forms.ListView.AfterLabelEdit" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.LabelEditEventArgs" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LabelEditEventArgs (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LabelEditEventArgs.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LabelEditEventArgs(int item);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.LabelEditEventArgs : int -&gt; System.Windows.Forms.LabelEditEventArgs" Usage="new System.Windows.Forms.LabelEditEventArgs item" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">Liczony od zera indeks <see cref="T:System.Windows.Forms.ListViewItem" />, zawierających etykietę do edycji.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.LabelEditEventArgs" /> klasy z określonym indeksem do <see cref="T:System.Windows.Forms.ListViewItem" /> do edycji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor można używać podczas podnoszenia <xref:System.Windows.Forms.ListView.BeforeLabelEdit?displayProperty=nameWithType> lub <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType> zdarzeń w czasie wykonywania, aby określić określonych elementów <xref:System.Windows.Forms.ListView> do edycji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LabelEditEventArgs (int item, string label);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 item, string label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LabelEditEventArgs.#ctor(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item As Integer, label As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LabelEditEventArgs(int item, System::String ^ label);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.LabelEditEventArgs : int * string -&gt; System.Windows.Forms.LabelEditEventArgs" Usage="new System.Windows.Forms.LabelEditEventArgs (item, label)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
        <Parameter Name="label" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item">Liczony od zera indeks <see cref="T:System.Windows.Forms.ListViewItem" />, zawierających etykietę do edycji.</param>
        <param name="label">Nowy tekst przypisany do etykiety <see cref="T:System.Windows.Forms.ListViewItem" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.LabelEditEventArgs" /> klasy z określonym indeksem do <see cref="T:System.Windows.Forms.ListViewItem" /> edytowany i nowy tekst etykiety <see cref="T:System.Windows.Forms.ListViewItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor można używać podczas podnoszenia <xref:System.Windows.Forms.ListView.BeforeLabelEdit?displayProperty=nameWithType> lub <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType> zdarzeń w czasie wykonywania, aby określić elementu listy w <xref:System.Windows.Forms.ListView> do edycji. Konstruktor umożliwia także określić nowy tekst skojarzony z etykietą elementu <xref:System.Windows.Forms.ListViewItem>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public bool CancelEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LabelEditEventArgs.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Property CancelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CancelEdit { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : bool with get, set" Usage="System.Windows.Forms.LabelEditEventArgs.CancelEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy zmiany wprowadzone do etykiety <see cref="T:System.Windows.Forms.ListViewItem" /> powinno być anulowane.</summary>
        <value>
          <see langword="true" /> Jeśli operacja edytowania etykiety dla <see cref="T:System.Windows.Forms.ListViewItem" /> powinien być anulowana, a w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia anulowanie zmian wprowadzonych do etykiety <xref:System.Windows.Forms.ListViewItem> , przywracając jego oryginalny tekst. Użyj tej właściwości, aby zapobiec podpis elementu zostanie zmieniony na wartość, która nie spełnia wymagań aplikacji.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje Obsługa <xref:System.Windows.Forms.ListView.BeforeLabelEdit?displayProperty=nameWithType> zdarzeń i przy użyciu <xref:System.Windows.Forms.LabelEditEventArgs.Item%2A> i <xref:System.Windows.Forms.LabelEditEventArgs.CancelEdit%2A> właściwości. Aby uruchomić przykład, wklej następujący kod w formularz zawierający formant ListView o nazwie ListView1 i wypełniane przy użyciu co najmniej 3 elementów. Upewnij się, że wszystkie zdarzenia są skojarzone z ich metod obsługi zdarzeń.  
  
 [!code-cpp[System.Windows.Forms.ListView3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView3/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public int Item { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Item" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LabelEditEventArgs.Item" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Item { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Item : int" Usage="System.Windows.Forms.LabelEditEventArgs.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczony od zera indeks <see cref="T:System.Windows.Forms.ListViewItem" /> zawierających etykietę do edycji.</summary>
        <value>Liczony od zera indeks <see cref="T:System.Windows.Forms.ListViewItem" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje Obsługa <xref:System.Windows.Forms.ListView.BeforeLabelEdit?displayProperty=nameWithType> zdarzeń i przy użyciu <xref:System.Windows.Forms.LabelEditEventArgs.Item%2A> i <xref:System.Windows.Forms.LabelEditEventArgs.CancelEdit%2A> właściwości. Aby uruchomić przykład, wklej następujący kod w formularz zawierający formant ListView o nazwie ListView1 i wypełniane przy użyciu co najmniej 3 elementów. Upewnij się, że wszystkie zdarzenia są skojarzone z ich metod obsługi zdarzeń.  
  
 [!code-cpp[System.Windows.Forms.ListView3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView3/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LabelEditEventArgs.Label" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Label : string" Usage="System.Windows.Forms.LabelEditEventArgs.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nowy tekst przypisany do etykiety <see cref="T:System.Windows.Forms.ListViewItem" />.</summary>
        <value>Nowy tekst do skojarzenia z <see cref="T:System.Windows.Forms.ListViewItem" /> lub <see langword="null" /> Jeśli tekst jest bez zmian.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.ListView> o nazwie `ListView1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#463](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#463)]
 [!code-vb[System.Windows.Forms.EventExamples#463](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#463)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>