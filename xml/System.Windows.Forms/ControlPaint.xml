<Type Name="ControlPaint" FullName="System.Windows.Forms.ControlPaint">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="432db2b284138b9d7ab3daa194644806f84c4727" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30703763" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ControlPaint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ControlPaint extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ControlPaint" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ControlPaint" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlPaint sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia metody używane do malowania formanty standardowe systemu Windows i ich elementów. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metody zawarte w <xref:System.Windows.Forms.ControlPaint> klasy umożliwiają narysować własne kontrolki lub elementów kontrolki. Rysowanie własne kontrolki można kontrolować, jeśli <xref:System.Windows.Forms.ControlStyles.UserPaint> bit jest ustawiony na wartość `true` dla formantu. Można uzyskać lub ustawiony przez wywołanie usługi bits styl <xref:System.Windows.Forms.Control.GetStyle%2A> lub <xref:System.Windows.Forms.Control.SetStyle%2A> metody. Możesz ustawić wiele bitów stylu dla każdego formantu. <xref:System.Windows.Forms.ControlStyles> Elementy członkowskie wyliczenia można łączyć z bitowego operacji.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje jedną z <xref:System.Windows.Forms.ControlPaint> konstruktorów do rysowania płaskiej <xref:System.Windows.Forms.Button> formantu.  
  
 [!code-cpp[ButtonState#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ButtonState/CPP/buttonstate1.cpp#2)]
 [!code-csharp[ButtonState#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ButtonState/CS/buttonstate1.cs#2)]
 [!code-vb[ButtonState#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ButtonState/VB/buttonstate1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Control" />
    <altmember cref="T:System.Windows.Forms.ControlStyles" />
  </Docs>
  <Members>
    <Member MemberName="ContrastControlDark">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color ContrastControlDark { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Drawing.Color ContrastControlDark" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ControlPaint.ContrastControlDark" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ContrastControlDark As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Color ContrastControlDark { System::Drawing::Color get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolor ma być używana jako <see cref="P:System.Drawing.SystemColors.ControlDark" /> kolorów.</summary>
        <value>
          <see cref="T:System.Drawing.Color" /> Do użycia jako <see cref="P:System.Drawing.SystemColors.ControlDark" /> kolorów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli użytkownik ma włączony <xref:System.Windows.Forms.SystemInformation.HighContrast%2A> tryb, ta właściwość jest ustawiony na <xref:System.Drawing.SystemColors.WindowFrame%2A?displayProperty=nameWithType>; w przeciwnym razie wartość jest równa <xref:System.Drawing.SystemColors.ControlDark%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.SystemInformation" />
        <altmember cref="T:System.Drawing.SystemColors" />
      </Docs>
    </Member>
    <Member MemberName="CreateHBitmap16Bit">
      <MemberSignature Language="C#" Value="public static IntPtr CreateHBitmap16Bit (System.Drawing.Bitmap bitmap, System.Drawing.Color background);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int CreateHBitmap16Bit(class System.Drawing.Bitmap bitmap, valuetype System.Drawing.Color background) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.CreateHBitmap16Bit(System.Drawing.Bitmap,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr CreateHBitmap16Bit(System::Drawing::Bitmap ^ bitmap, System::Drawing::Color background);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmap" Type="System.Drawing.Bitmap" />
        <Parameter Name="background" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="bitmap">
          <see cref="T:System.Drawing.Bitmap" /> Do utworzenia.</param>
        <param name="background">
          <see cref="T:System.Drawing.Color" /> Tła.</param>
        <summary>Tworzy 16 kolorów mapy bitowej.</summary>
        <returns>
          <see cref="T:System.IntPtr" /> Reprezentujący dojście do mapy bitowej.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHBitmapColorMask">
      <MemberSignature Language="C#" Value="public static IntPtr CreateHBitmapColorMask (System.Drawing.Bitmap bitmap, IntPtr monochromeMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int CreateHBitmapColorMask(class System.Drawing.Bitmap bitmap, native int monochromeMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.CreateHBitmapColorMask(System.Drawing.Bitmap,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr CreateHBitmapColorMask(System::Drawing::Bitmap ^ bitmap, IntPtr monochromeMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmap" Type="System.Drawing.Bitmap" />
        <Parameter Name="monochromeMask" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="bitmap">
          <see cref="T:System.Drawing.Bitmap" /> Do utworzenia.</param>
        <param name="monochromeMask">Wskaźnik do monochromatyczny maski.</param>
        <summary>Tworzy Win32 <see langword="HBITMAP" /> obrazu.</summary>
        <returns>
          <see cref="T:System.IntPtr" /> Reprezentujący dojście do mapy bitowej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest odpowiedzialny za cofnięciem przydziału `HBITMAP`. Jeśli obraz używa przejrzystości, tło zostanie wypełniony kolorem określony.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHBitmapTransparencyMask">
      <MemberSignature Language="C#" Value="public static IntPtr CreateHBitmapTransparencyMask (System.Drawing.Bitmap bitmap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int CreateHBitmapTransparencyMask(class System.Drawing.Bitmap bitmap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.CreateHBitmapTransparencyMask(System.Drawing.Bitmap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr CreateHBitmapTransparencyMask(System::Drawing::Bitmap ^ bitmap);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmap" Type="System.Drawing.Bitmap" />
      </Parameters>
      <Docs>
        <param name="bitmap">
          <see cref="T:System.Drawing.Bitmap" /> Utworzyć maskę przezroczystości.</param>
        <summary>Tworzy maskę kolor dla Podana mapa bitowa wskazuje kolor, który powinien być wyświetlany jako przezroczysty.</summary>
        <returns>Dojście do <see cref="T:System.Drawing.Bitmap" /> maski.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest odpowiedzialny za cofnięciem przydziału mapy bitowej.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dark">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy nowy obiekt ciemnym dla formantu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dark">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color Dark (System.Drawing.Color baseColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Color Dark(valuetype System.Drawing.Color baseColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.Dark(System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Dark (baseColor As Color) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Color Dark(System::Drawing::Color baseColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="baseColor">
          <see cref="T:System.Drawing.Color" /> Do być przyciemniony.</param>
        <summary>Tworzy nowy obiekt ciemnym formantu z określonego koloru.</summary>
        <returns>A <see cref="T:System.Drawing.Color" /> reprezentujący ciemnego koloru w formancie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli określony <xref:System.Drawing.Color> jest jednym z <xref:System.Drawing.SystemColors>, kolor jest konwertowana na <xref:System.Drawing.SystemColors.ControlDark%2A?displayProperty=nameWithType> kolorów; w przeciwnym razie zostaje zmniejszona jasność koloru.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dark">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color Dark (System.Drawing.Color baseColor, float percOfDarkDark);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Color Dark(valuetype System.Drawing.Color baseColor, float32 percOfDarkDark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.Dark(System.Drawing.Color,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Dark (baseColor As Color, percOfDarkDark As Single) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Color Dark(System::Drawing::Color baseColor, float percOfDarkDark);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseColor" Type="System.Drawing.Color" />
        <Parameter Name="percOfDarkDark" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="baseColor">
          <see cref="T:System.Drawing.Color" /> Do być przyciemniony.</param>
        <param name="percOfDarkDark">Procent Ciemniej określonego <see cref="T:System.Drawing.Color" />.</param>
        <summary>Tworzy nowy obiekt ciemnym formantu z określonego koloru i ściemnia go według określonej wartości procentowej.</summary>
        <returns>A <see cref="T:System.Drawing.Color" /> reprezentujące ciemnego koloru w formancie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli określony <xref:System.Drawing.Color> jest jednym z <xref:System.Drawing.SystemColors>, kolor jest konwertowana na <xref:System.Drawing.SystemColors.ControlDark%2A?displayProperty=nameWithType> kolorów; w przeciwnym razie zostaje zmniejszona jasność koloru.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DarkDark">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color DarkDark (System.Drawing.Color baseColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Color DarkDark(valuetype System.Drawing.Color baseColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DarkDark(System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DarkDark (baseColor As Color) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Color DarkDark(System::Drawing::Color baseColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="baseColor">
          <see cref="T:System.Drawing.Color" /> Do być przyciemniony.</param>
        <summary>Tworzy nowy obiekt ciemnym formantu z określonego koloru.</summary>
        <returns>A <see cref="T:System.Drawing.Color" /> reprezentujący ciemnego koloru w formancie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli określony <xref:System.Drawing.Color> jest jednym z <xref:System.Drawing.SystemColors>, kolor jest konwertowana na <xref:System.Drawing.SystemColors.ControlDarkDark%2A?displayProperty=nameWithType> kolorów; w przeciwnym razie wartość zwiększa się jasność koloru.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawBorder">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rysuje obramowanie w formancie styl przycisku.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawBorder">
      <MemberSignature Language="C#" Value="public static void DrawBorder (System.Drawing.Graphics graphics, System.Drawing.Rectangle bounds, System.Drawing.Color color, System.Windows.Forms.ButtonBorderStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color color, valuetype System.Windows.Forms.ButtonBorderStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.ButtonBorderStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawBorder(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle bounds, System::Drawing::Color color, System::Windows::Forms::ButtonBorderStyle style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="color" Type="System.Drawing.Color" />
        <Parameter Name="style" Type="System.Windows.Forms.ButtonBorderStyle" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> Reprezentujący wymiary obramowania.</param>
        <param name="color">
          <see cref="T:System.Drawing.Color" /> Obramowania.</param>
        <param name="style">Jeden z <see cref="T:System.Windows.Forms.ButtonBorderStyle" /> wartości, które określa styl obramowania.</param>
        <summary>Rysuje obramowanie z określonego stylu i koloru, na powierzchni określonej grafiki i w granicach określonego w formancie styl przycisku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje, użyj jednej z <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> metody. Aby uruchomić ten przykład, wklej następujący kod w formularzu, który importuje <xref:System.Windows.Forms> i <xref:System.Drawing> przestrzeni nazw. Upewnij się, formularza <xref:System.Windows.Forms.Control.Paint> wydarzenie jest skojarzone z programem obsługi zdarzeń w tym przykładzie.  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawBorder">
      <MemberSignature Language="C#" Value="public static void DrawBorder (System.Drawing.Graphics graphics, System.Drawing.Rectangle bounds, System.Drawing.Color leftColor, int leftWidth, System.Windows.Forms.ButtonBorderStyle leftStyle, System.Drawing.Color topColor, int topWidth, System.Windows.Forms.ButtonBorderStyle topStyle, System.Drawing.Color rightColor, int rightWidth, System.Windows.Forms.ButtonBorderStyle rightStyle, System.Drawing.Color bottomColor, int bottomWidth, System.Windows.Forms.ButtonBorderStyle bottomStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color leftColor, int32 leftWidth, valuetype System.Windows.Forms.ButtonBorderStyle leftStyle, valuetype System.Drawing.Color topColor, int32 topWidth, valuetype System.Windows.Forms.ButtonBorderStyle topStyle, valuetype System.Drawing.Color rightColor, int32 rightWidth, valuetype System.Windows.Forms.ButtonBorderStyle rightStyle, valuetype System.Drawing.Color bottomColor, int32 bottomWidth, valuetype System.Windows.Forms.ButtonBorderStyle bottomStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawBorder(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle bounds, System::Drawing::Color leftColor, int leftWidth, System::Windows::Forms::ButtonBorderStyle leftStyle, System::Drawing::Color topColor, int topWidth, System::Windows::Forms::ButtonBorderStyle topStyle, System::Drawing::Color rightColor, int rightWidth, System::Windows::Forms::ButtonBorderStyle rightStyle, System::Drawing::Color bottomColor, int bottomWidth, System::Windows::Forms::ButtonBorderStyle bottomStyle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="leftColor" Type="System.Drawing.Color" />
        <Parameter Name="leftWidth" Type="System.Int32" />
        <Parameter Name="leftStyle" Type="System.Windows.Forms.ButtonBorderStyle" />
        <Parameter Name="topColor" Type="System.Drawing.Color" />
        <Parameter Name="topWidth" Type="System.Int32" />
        <Parameter Name="topStyle" Type="System.Windows.Forms.ButtonBorderStyle" />
        <Parameter Name="rightColor" Type="System.Drawing.Color" />
        <Parameter Name="rightWidth" Type="System.Int32" />
        <Parameter Name="rightStyle" Type="System.Windows.Forms.ButtonBorderStyle" />
        <Parameter Name="bottomColor" Type="System.Drawing.Color" />
        <Parameter Name="bottomWidth" Type="System.Int32" />
        <Parameter Name="bottomStyle" Type="System.Windows.Forms.ButtonBorderStyle" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> Reprezentujący wymiary obramowania.</param>
        <param name="leftColor">
          <see cref="T:System.Drawing.Color" /> z lewej krawędzi.</param>
        <param name="leftWidth">Szerokość krawędzi lewej.</param>
        <param name="leftStyle">Jeden z <see cref="T:System.Windows.Forms.ButtonBorderStyle" /> wartości, które określa styl lewej krawędzi.</param>
        <param name="topColor">
          <see cref="T:System.Drawing.Color" /> Górnej krawędzi obramowania.</param>
        <param name="topWidth">Szerokość krawędzi górnej.</param>
        <param name="topStyle">Jeden z <see cref="T:System.Windows.Forms.ButtonBorderStyle" /> wartości, które określa styl górnej krawędzi.</param>
        <param name="rightColor">
          <see cref="T:System.Drawing.Color" /> Prawa krawędź.</param>
        <param name="rightWidth">Szerokość krawędzi prawej.</param>
        <param name="rightStyle">Jeden z <see cref="T:System.Windows.Forms.ButtonBorderStyle" /> wartości, które określa styl prawej krawędzi.</param>
        <param name="bottomColor">
          <see cref="T:System.Drawing.Color" /> Dolnego obramowania.</param>
        <param name="bottomWidth">Szerokość krawędzi dolnej.</param>
        <param name="bottomStyle">Jeden z <see cref="T:System.Windows.Forms.ButtonBorderStyle" /> wartości, które określa styl dolnej krawędzi.</param>
        <summary>Rysuje obramowanie w formancie stylów przycisków z określonych stylów, kolorów i szerokości obramowania; na powierzchni określonej grafiki; i w określonym zakresie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje, użyj jednej z <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> metody. Aby uruchomić ten przykład, wklej następujący kod w formularzu, który importuje <xref:System.Windows.Forms> i <xref:System.Drawing> przestrzeni nazw. Upewnij się, formularza <xref:System.Windows.Forms.Control.Paint> wydarzenie jest skojarzone z programem obsługi zdarzeń w tym przykładzie.  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ButtonBorderStyle" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawBorder3D">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rysuje obramowanie trójwymiarowe style w formancie.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawBorder3D">
      <MemberSignature Language="C#" Value="public static void DrawBorder3D (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder3D(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawBorder3D(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="rectangle">
          <see cref="T:System.Drawing.Rectangle" /> Reprezentujący wymiary obramowania.</param>
        <summary>Rysuje styl trójwymiarowe obramowanie na powierzchni określonej grafiki i w określonym zakresie w formancie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Border3DStyle.Etched?displayProperty=nameWithType> Styl używany domyślnie do rysowania obramowania.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, użyj jednej z <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> metody. Aby uruchomić ten przykład, wklej następujący kod w formularzu, który importuje <xref:System.Windows.Forms> i <xref:System.Drawing> przestrzeni nazw. Upewnij się, formularza <xref:System.Windows.Forms.Control.Paint> wydarzenie jest skojarzone z programem obsługi zdarzeń w tym przykładzie.  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="T:System.Windows.Forms.Border3DStyle" />
      </Docs>
    </Member>
    <Member MemberName="DrawBorder3D">
      <MemberSignature Language="C#" Value="public static void DrawBorder3D (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.Border3DStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder3D(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.Border3DStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Border3DStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawBorder3D(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::Border3DStyle style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="style" Type="System.Windows.Forms.Border3DStyle" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="rectangle">
          <see cref="T:System.Drawing.Rectangle" /> Reprezentujący wymiary obramowania.</param>
        <param name="style">Jeden z <see cref="T:System.Windows.Forms.Border3DStyle" /> wartości, które określa styl obramowania.</param>
        <summary>Rysuje styl trójwymiarowe obramowanie z określonego stylu na powierzchni określonej grafiki i w określonym zakresie w formancie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje, użyj jednej z <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> metody. Aby uruchomić ten przykład, wklej następujący kod w formularzu, który importuje <xref:System.Windows.Forms> i <xref:System.Drawing> przestrzeni nazw. Upewnij się, formularza <xref:System.Windows.Forms.Control.Paint> wydarzenie jest skojarzone z programem obsługi zdarzeń w tym przykładzie.  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="T:System.Windows.Forms.Border3DStyle" />
      </Docs>
    </Member>
    <Member MemberName="DrawBorder3D">
      <MemberSignature Language="C#" Value="public static void DrawBorder3D (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.Border3DStyle style, System.Windows.Forms.Border3DSide sides);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder3D(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.Border3DStyle style, valuetype System.Windows.Forms.Border3DSide sides) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawBorder3D(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::Border3DStyle style, System::Windows::Forms::Border3DSide sides);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="style" Type="System.Windows.Forms.Border3DStyle" />
        <Parameter Name="sides" Type="System.Windows.Forms.Border3DSide" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="rectangle">
          <see cref="T:System.Drawing.Rectangle" /> Reprezentujący wymiary obramowania.</param>
        <param name="style">Jeden z <see cref="T:System.Windows.Forms.Border3DStyle" /> wartości, które określa styl obramowania.</param>
        <param name="sides">Jeden z <see cref="T:System.Windows.Forms.Border3DSide" /> wartości, które określa prostokąta, by narysować obramowanie stronę.</param>
        <summary>Rysuje obramowanie trójwymiarowe styl przy użyciu określonego stylu na powierzchni określonej grafiki i stron oraz w granicach określonego w formancie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje, użyj jednej z <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> metody. Aby uruchomić ten przykład, wklej następujący kod w formularzu, który importuje <xref:System.Windows.Forms> i <xref:System.Drawing> przestrzeni nazw. Upewnij się, formularza <xref:System.Windows.Forms.Control.Paint> wydarzenie jest skojarzone z programem obsługi zdarzeń w tym przykładzie.  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="T:System.Windows.Forms.Border3DStyle" />
        <altmember cref="T:System.Windows.Forms.Border3DSide" />
      </Docs>
    </Member>
    <Member MemberName="DrawBorder3D">
      <MemberSignature Language="C#" Value="public static void DrawBorder3D (System.Drawing.Graphics graphics, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder3D(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawBorder3D(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="x">Współrzędna x górnego rogu prostokąt obramowania.</param>
        <param name="y">Współrzędna y górnego rogu prostokąt obramowania.</param>
        <param name="width">Szerokość obramowania prostokąta.</param>
        <param name="height">Wysokość prostokąta obramowania.</param>
        <summary>Rysuje styl trójwymiarowe obramowanie na powierzchni określonej grafiki i w określonym zakresie w formancie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Border3DStyle.Etched?displayProperty=nameWithType> Styl używany domyślnie do rysowania obramowania.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, użyj jednej z <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> metody. Aby uruchomić ten przykład, wklej następujący kod w formularzu, który importuje <xref:System.Windows.Forms> i <xref:System.Drawing> przestrzeni nazw. Upewnij się, formularza <xref:System.Windows.Forms.Control.Paint> wydarzenie jest skojarzone z programem obsługi zdarzeń w tym przykładzie.  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawBorder3D">
      <MemberSignature Language="C#" Value="public static void DrawBorder3D (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.Border3DStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder3D(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.Border3DStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.Border3DStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawBorder3D(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::Border3DStyle style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="style" Type="System.Windows.Forms.Border3DStyle" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="x">Współrzędna x górnego rogu prostokąt obramowania.</param>
        <param name="y">Współrzędna y górnego rogu prostokąt obramowania.</param>
        <param name="width">Szerokość obramowania prostokąta.</param>
        <param name="height">Wysokość prostokąta obramowania.</param>
        <param name="style">Jeden z <see cref="T:System.Windows.Forms.Border3DStyle" /> wartości, które określa styl obramowania.</param>
        <summary>Rysuje styl trójwymiarowe obramowanie z określonego stylu na powierzchni określonej grafiki i w określonym zakresie w formancie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje, użyj jednej z <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> metody. Aby uruchomić ten przykład, wklej następujący kod w formularzu, który importuje <xref:System.Windows.Forms> i <xref:System.Drawing> przestrzeni nazw. Upewnij się, formularza <xref:System.Windows.Forms.Control.Paint> wydarzenie jest skojarzone z programem obsługi zdarzeń w tym przykładzie.  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Border3DStyle" />
      </Docs>
    </Member>
    <Member MemberName="DrawBorder3D">
      <MemberSignature Language="C#" Value="public static void DrawBorder3D (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.Border3DStyle style, System.Windows.Forms.Border3DSide sides);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder3D(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.Border3DStyle style, valuetype System.Windows.Forms.Border3DSide sides) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawBorder3D(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::Border3DStyle style, System::Windows::Forms::Border3DSide sides);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="style" Type="System.Windows.Forms.Border3DStyle" />
        <Parameter Name="sides" Type="System.Windows.Forms.Border3DSide" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="x">Współrzędna x górnego rogu prostokąt obramowania.</param>
        <param name="y">Współrzędna y górnego rogu prostokąt obramowania.</param>
        <param name="width">Szerokość obramowania prostokąta.</param>
        <param name="height">Wysokość prostokąta obramowania.</param>
        <param name="style">Jeden z <see cref="T:System.Windows.Forms.Border3DStyle" /> wartości, które określa styl obramowania.</param>
        <param name="sides">
          <see cref="T:System.Windows.Forms.Border3DSide" /> Prostokąta, by narysować obramowanie.</param>
        <summary>Rysuje obramowanie trójwymiarowe styl przy użyciu określonego stylu na powierzchni określonej grafiki i po stronie i w określonym zakresie w formancie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje, użyj jednej z <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> metody. Aby uruchomić ten przykład, wklej następujący kod w formularzu, który importuje <xref:System.Windows.Forms> i <xref:System.Drawing> przestrzeni nazw. Upewnij się, formularza <xref:System.Windows.Forms.Control.Paint> wydarzenie jest skojarzone z programem obsługi zdarzeń w tym przykładzie.  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Border3DStyle" />
        <altmember cref="T:System.Windows.Forms.Border3DSide" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawButton">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rysuje kontrolkę przycisku.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawButton(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="rectangle">
          <see cref="T:System.Drawing.Rectangle" /> Reprezentujący wymiary przycisku.</param>
        <param name="state">Bitowe połączenie <see cref="T:System.Windows.Forms.ButtonState" /> wartości, które określa stan używany do rysowania przycisku.</param>
        <summary>Rysuje kontrolkę przycisku w określonym stanie na powierzchni określonej grafiki i w określonym zakresie.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.Button" />
      </Docs>
    </Member>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawButton(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="x">Współrzędna x lewym górnym rogu prostokąta rysowania.</param>
        <param name="y">Współrzędna y lewym górnym rogu prostokąta rysowania.</param>
        <param name="width">Szerokość przycisku.</param>
        <param name="height">Wysokość przycisku.</param>
        <param name="state">Bitowe połączenie <see cref="T:System.Windows.Forms.ButtonState" /> wartości, które określa stan używany do rysowania przycisku.</param>
        <summary>Rysuje kontrolkę przycisku w określonym stanie na powierzchni określonej grafiki i w określonym zakresie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[ButtonState#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ButtonState/CPP/buttonstate1.cpp#2)]
 [!code-csharp[ButtonState#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ButtonState/CS/buttonstate1.cs#2)]
 [!code-vb[ButtonState#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ButtonState/VB/buttonstate1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Button" />
        <altmember cref="T:System.Windows.Forms.ButtonState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawCaptionButton">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rysuje kontrolkę przycisku podpis.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawCaptionButton">
      <MemberSignature Language="C#" Value="public static void DrawCaptionButton (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.CaptionButton button, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawCaptionButton(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.CaptionButton button, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawCaptionButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CaptionButton,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawCaptionButton(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::CaptionButton button, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="button" Type="System.Windows.Forms.CaptionButton" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="rectangle">
          <see cref="T:System.Drawing.Rectangle" /> Reprezentujący wymiary przycisk podpis.</param>
        <param name="button">Jeden z <see cref="T:System.Windows.Forms.CaptionButton" /> wartości, które określają typ przycisku podpis do rysowania.</param>
        <param name="state">Bitowe połączenie <see cref="T:System.Windows.Forms.ButtonState" /> wartości, które określa stan używany do rysowania przycisku.</param>
        <summary>Rysuje formantu przycisku określony podpis w określonym stanie na powierzchni określonej grafiki i w określonym zakresie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Windows.Forms.ControlPaint.DrawCaptionButton%2A?displayProperty=nameWithType> — metoda i <xref:System.Windows.Forms.CaptionButton> wyliczenia. Aby uruchomić ten przykład, wklej następujący kod w postaci zawierające przycisk o nazwie `Button1`. Formularz należy importować <xref:System.Windows.Forms> i <xref:System.Drawing> przestrzeni nazw. Upewnij się, przycisku <xref:System.Windows.Forms.Control.Paint> wydarzenie jest skojarzone z programem obsługi zdarzeń w tym przykładzie.  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.CaptionButton" />
      </Docs>
    </Member>
    <Member MemberName="DrawCaptionButton">
      <MemberSignature Language="C#" Value="public static void DrawCaptionButton (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.CaptionButton button, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawCaptionButton(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.CaptionButton button, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawCaptionButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.CaptionButton,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawCaptionButton(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::CaptionButton button, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="button" Type="System.Windows.Forms.CaptionButton" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="x">Współrzędna x górnego rogu prostokąta rysowania.</param>
        <param name="y">Współrzędna y górnego rogu prostokąta rysowania.</param>
        <param name="width">Szerokość prostokąta rysowania.</param>
        <param name="height">Wysokość prostokąta rysowania.</param>
        <param name="button">Jeden z <see cref="T:System.Windows.Forms.CaptionButton" /> wartości, które określają typ przycisku podpis do rysowania.</param>
        <param name="state">Bitowe połączenie <see cref="T:System.Windows.Forms.ButtonState" /> wartości, które określa stan używany do rysowania przycisku.</param>
        <summary>Rysuje formantu przycisku określony podpis w określonym stanie na powierzchni określonej grafiki i w określonym zakresie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Windows.Forms.ControlPaint.DrawCaptionButton%2A> — metoda i <xref:System.Windows.Forms.CaptionButton> wyliczenia. Aby uruchomić ten przykład, wklej następujący kod w nadrzędnym formularza <xref:System.Windows.Forms.Button> o nazwie `Button1`. Formularz należy importować <xref:System.Windows.Forms> i <xref:System.Drawing> przestrzeni nazw. Upewnij się, przycisku <xref:System.Windows.Forms.Control.Paint> wydarzenie jest skojarzone z programem obsługi zdarzeń w tym przykładzie.  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.CaptionButton" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawCheckBox">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rysuje kontrolkę pola wyboru.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawCheckBox">
      <MemberSignature Language="C#" Value="public static void DrawCheckBox (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawCheckBox(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawCheckBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawCheckBox(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="rectangle">
          <see cref="T:System.Drawing.Rectangle" /> Reprezentujący wymiary pole wyboru.</param>
        <param name="state">Bitowe połączenie <see cref="T:System.Windows.Forms.ButtonState" /> wartości, które określa stan używany do rysowania pole wyboru.</param>
        <summary>Rysuje kontrolkę pola wyboru w określonym stanie na powierzchni określonej grafiki i w określonym zakresie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawCheckBox">
      <MemberSignature Language="C#" Value="public static void DrawCheckBox (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawCheckBox(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawCheckBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawCheckBox(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="x">Współrzędna x lewym górnym rogu prostokąta rysowania.</param>
        <param name="y">Współrzędna y lewym górnym rogu prostokąta rysowania.</param>
        <param name="width">Szerokość pola wyboru.</param>
        <param name="height">Wysokość pola wyboru.</param>
        <param name="state">Bitowe połączenie <see cref="T:System.Windows.Forms.ButtonState" /> wartości, które określa stan używany do rysowania pole wyboru.</param>
        <summary>Rysuje kontrolkę pola wyboru w określonym stanie na powierzchni określonej grafiki i w określonym zakresie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawComboButton">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zawiera przycisku rozwijanego kontrolki pola kombi.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawComboButton">
      <MemberSignature Language="C#" Value="public static void DrawComboButton (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawComboButton(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawComboButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawComboButton(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="rectangle">
          <see cref="T:System.Drawing.Rectangle" /> Reprezentujący wymiary pola kombi.</param>
        <param name="state">Bitowe połączenie <see cref="T:System.Windows.Forms.ButtonState" /> wpisz wartości, które określa stan używany do rysowania pole kombi.</param>
        <summary>Zawiera przycisku rozwijanego kontrolki pola kombi w określonym stanie na powierzchni określonej grafiki i w określonym zakresie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawComboButton">
      <MemberSignature Language="C#" Value="public static void DrawComboButton (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawComboButton(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawComboButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawComboButton(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="x">Współrzędna x górnego rogu prostokąt obramowania.</param>
        <param name="y">Współrzędna y górnego rogu prostokąt obramowania.</param>
        <param name="width">Szerokość pola kombi.</param>
        <param name="height">Wysokość pola kombi.</param>
        <param name="state">Bitowe połączenie <see cref="T:System.Windows.Forms.ButtonState" /> wpisz wartości, które określa stan używany do rysowania pole kombi.</param>
        <summary>Zawiera przycisku rozwijanego kontrolki pola kombi w określonym stanie na powierzchni określonej grafiki i w określonym zakresie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawContainerGrabHandle">
      <MemberSignature Language="C#" Value="public static void DrawContainerGrabHandle (System.Drawing.Graphics graphics, System.Drawing.Rectangle bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawContainerGrabHandle(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawContainerGrabHandle(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawContainerGrabHandle(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle bounds);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> Reprezentujący wymiary Przechwyć symbolu dojścia.</param>
        <summary>Rysuje symbolu dojścia Przechwyć formantu kontenera na powierzchni określonej grafiki i w określonym zakresie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uchwyty są używane przez kontenery, aby poinformować użytkownika, czy użytkownik może zmieniać bezpośrednio kontenerów. Operowanie może obejmować akcje, takie jak zmiany rozmiaru i przenoszenia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawFocusRectangle">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rysuje prostokąt fokusu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawFocusRectangle">
      <MemberSignature Language="C#" Value="public static void DrawFocusRectangle (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawFocusRectangle(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawFocusRectangle(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="rectangle">
          <see cref="T:System.Drawing.Rectangle" /> Reprezentujący wymiary Przechwyć symbolu dojścia.</param>
        <summary>Rysuje prostokąt fokusu na powierzchni określonej grafiki i w określonym zakresie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Prostokąt fokusu jest używany w systemie Windows wskaż, jakie formant ma fokus klawiatury bieżący prostokąt kropkami.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, za pomocą <xref:System.Windows.Forms.ControlPaint.DrawFocusRectangle%2A> — metoda i <xref:System.Windows.Forms.Control.Handle%2A?displayProperty=nameWithType> właściwości. Aby uruchomić ten przykład, wklej następujący kod w formularzu. Dodawanie dwóch przycisków o nazwie `Button1` i `Button2` do formularza i sprawdź wszystkie zdarzenia są podłączone do swoich programów obsługi zdarzeń.  
  
 [!code-cpp[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawFocusRectangle">
      <MemberSignature Language="C#" Value="public static void DrawFocusRectangle (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawFocusRectangle(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawFocusRectangle(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Drawing::Color foreColor, System::Drawing::Color backColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="rectangle">
          <see cref="T:System.Drawing.Rectangle" /> Reprezentujący wymiary Przechwyć symbolu dojścia.</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" /> Obiektu do Rysuj prostokąt fokusu w oznacza to kolor pierwszego planu.</param>
        <param name="backColor">
          <see cref="T:System.Drawing.Color" /> Oznacza to kolor tła obiektu do Rysuj prostokąt fokusu w.</param>
        <summary>Rysuje prostokąt fokusu na powierzchni określonej grafiki i w określonym zakresie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Prostokąt fokusu jest używany w systemie Windows wskaż, jakie formant ma fokus klawiatury bieżący prostokąt kropkami.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, za pomocą <xref:System.Windows.Forms.ControlPaint.DrawFocusRectangle%2A> — metoda i <xref:System.Windows.Forms.Control.Handle%2A?displayProperty=nameWithType> właściwości. Aby uruchomić ten przykład, wklej następujący kod w formularzu. Dodawanie dwóch przycisków o nazwie `Button1` i Button2 do formularza i sprawdź wszystkie zdarzenia są podłączone do swoich programów obsługi zdarzeń.  
  
 [!code-cpp[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawGrabHandle">
      <MemberSignature Language="C#" Value="public static void DrawGrabHandle (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, bool primary, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawGrabHandle(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, bool primary, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawGrabHandle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawGrabHandle(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, bool primary, bool enabled);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="primary" Type="System.Boolean" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="rectangle">
          <see cref="T:System.Drawing.Rectangle" /> Reprezentujący wymiary Przechwyć symbolu dojścia.</param>
        <param name="primary">
          <see langword="true" /> Rysowanie dojście jako uchwyt Przechwyć podstawowego; w przeciwnym razie <see langword="false" />.</param>
        <param name="enabled">
          <see langword="true" /> Rysowanie dojście jest włączona; w przeciwnym razie <see langword="false" />.</param>
        <summary>Rysuje symbolu dojścia Przechwyć standardowe zaznaczenie na powierzchni grafiki określony w określonym zakresie i w określonym stanie i styl.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uchwyty są używane przez obiekty, aby poinformować użytkownika, czy użytkownik może zmieniać bezpośrednio obiektu. Operowanie może obejmować akcje, takie jak zmiany rozmiaru i przenoszenia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawGrid">
      <MemberSignature Language="C#" Value="public static void DrawGrid (System.Drawing.Graphics graphics, System.Drawing.Rectangle area, System.Drawing.Size pixelsBetweenDots, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawGrid(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle area, valuetype System.Drawing.Size pixelsBetweenDots, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawGrid(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Size,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawGrid(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle area, System::Drawing::Size pixelsBetweenDots, System::Drawing::Color backColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="area" Type="System.Drawing.Rectangle" />
        <Parameter Name="pixelsBetweenDots" Type="System.Drawing.Size" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="area">
          <see cref="T:System.Drawing.Rectangle" /> Reprezentujący wymiary siatki.</param>
        <param name="pixelsBetweenDots">
          <see cref="T:System.Drawing.Size" /> Które określić wysokość i szerokość między punktami siatki.</param>
        <param name="backColor">
          <see cref="T:System.Drawing.Color" /> Tła za siatki.</param>
        <summary>Rysuje siatki jednego piksela punktów z określonym odstępy w granicach określonego na powierzchni określonej grafiki i w określonym kolorze.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `backColor` Parametr jest używany do obliczania kolor wypełnienia punktów, dzięki czemu siatki jest zawsze widoczne na tle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawImageDisabled">
      <MemberSignature Language="C#" Value="public static void DrawImageDisabled (System.Drawing.Graphics graphics, System.Drawing.Image image, int x, int y, System.Drawing.Color background);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawImageDisabled(class System.Drawing.Graphics graphics, class System.Drawing.Image image, int32 x, int32 y, valuetype System.Drawing.Color background) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawImageDisabled(System.Drawing.Graphics,System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawImageDisabled(System::Drawing::Graphics ^ graphics, System::Drawing::Image ^ image, int x, int y, System::Drawing::Color background);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="background" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="image">
          <see cref="T:System.Drawing.Image" /> Do rysowania.</param>
        <param name="x">Współrzędna x górnego rogu obrazu obramowania.</param>
        <param name="y">Współrzędna y górnego rogu obrazu obramowania.</param>
        <param name="background">
          <see cref="T:System.Drawing.Color" /> Za obrazu tła.</param>
        <summary>Rysuje obraz określony w stanie wyłączenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `background` Parametr jest używany do obliczania kolor wypełnienia wyłączone obrazu, aby zawsze była widoczna na tle.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Image" />
      </Docs>
    </Member>
    <Member MemberName="DrawLockedFrame">
      <MemberSignature Language="C#" Value="public static void DrawLockedFrame (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, bool primary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawLockedFrame(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, bool primary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawLockedFrame(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawLockedFrame(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, bool primary);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="primary" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="rectangle">
          <see cref="T:System.Drawing.Rectangle" /> Reprezentujący wymiary ramki.</param>
        <param name="primary">
          <see langword="true" /> Rysowanie tej ramki z kolory używane do wyboru podstawowego; w przeciwnym razie <see langword="false" />.</param>
        <summary>Rysuje ramkę wyboru zablokowane na ekranie w określonym zakresie i na powierzchni określonej grafiki. Określa, czy do rysowania ramki głównej wybranych kolorów.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawMenuGlyph">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rysuje symbolu menu w formancie elementu menu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawMenuGlyph">
      <MemberSignature Language="C#" Value="public static void DrawMenuGlyph (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.MenuGlyph glyph);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawMenuGlyph(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.MenuGlyph glyph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.MenuGlyph)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawMenuGlyph(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::MenuGlyph glyph);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="glyph" Type="System.Windows.Forms.MenuGlyph" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="rectangle">
          <see cref="T:System.Drawing.Rectangle" /> Reprezentujący wymiary symbolu.</param>
        <param name="glyph">Jeden z <see cref="T:System.Windows.Forms.MenuGlyph" /> wartości, które określa obraz do rysowania.</param>
        <summary>Rysuje symbolu menu określony w kontrolce elementów menu w określonym zakresie i na określonej powierzchni.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas rysowania przez właściciela <xref:System.Windows.Forms.MenuItem> formantów, należy sprawdzić wartości właściwości, aby ustalić poprawne symbolu, aby narysować lub Usuń. Na przykład, jeśli <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=nameWithType> właściwość jest ustawiona na `true`, należy wywołać <xref:System.Windows.Forms.MenuGlyph.Checkmark> wartość <xref:System.Windows.Forms.MenuGlyph> Rysowanie znacznik wyboru na <xref:System.Windows.Forms.MenuItem>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MenuItem" />
        <altmember cref="T:System.Windows.Forms.MenuGlyph" />
      </Docs>
    </Member>
    <Member MemberName="DrawMenuGlyph">
      <MemberSignature Language="C#" Value="public static void DrawMenuGlyph (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.MenuGlyph glyph, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawMenuGlyph(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.MenuGlyph glyph, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.MenuGlyph,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawMenuGlyph(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::MenuGlyph glyph, System::Drawing::Color foreColor, System::Drawing::Color backColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="glyph" Type="System.Windows.Forms.MenuGlyph" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="rectangle">
          <see cref="T:System.Drawing.Rectangle" /> Reprezentujący wymiary symbolu.</param>
        <param name="glyph">Jeden z <see cref="T:System.Windows.Forms.MenuGlyph" /> wartości, które określa obraz do rysowania.</param>
        <param name="foreColor">Kolor, który zastępuje <see cref="P:System.Drawing.Color.White" /> jako kolor pierwszego planu.</param>
        <param name="backColor">Kolor, który zastępuje <see cref="P:System.Drawing.Color.Black" /> jako kolor tła.</param>
        <summary>Rysuje symbolu określonego menu w formancie elementów menu w określonym zakresie i na powierzchni określonego zastępowanie <see cref="P:System.Drawing.Color.White" /> kolorem określone w <paramref name="backColor" /> parametru i zastępowanie <see cref="P:System.Drawing.Color.Black" /> kolorem określone w <paramref name="foreColor" /> parametru.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas rysowania przez właściciela <xref:System.Windows.Forms.MenuItem> formantów, należy sprawdzić wartości właściwości, aby ustalić poprawne symbolu, aby narysować lub Usuń. Na przykład, jeśli <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=nameWithType> właściwość jest ustawiona na `true`, należy wywołać <xref:System.Windows.Forms.MenuGlyph.Checkmark> wartość <xref:System.Windows.Forms.MenuGlyph> Rysowanie znacznik wyboru na <xref:System.Windows.Forms.MenuItem>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MenuItem" />
        <altmember cref="T:System.Windows.Forms.MenuGlyph" />
      </Docs>
    </Member>
    <Member MemberName="DrawMenuGlyph">
      <MemberSignature Language="C#" Value="public static void DrawMenuGlyph (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.MenuGlyph glyph);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawMenuGlyph(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.MenuGlyph glyph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.MenuGlyph)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawMenuGlyph(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::MenuGlyph glyph);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="glyph" Type="System.Windows.Forms.MenuGlyph" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="x">Współrzędna x lewym górnym rogu prostokąta rysowania.</param>
        <param name="y">Współrzędna y lewym górnym rogu prostokąta rysowania.</param>
        <param name="width">Szerokość symbolu menu.</param>
        <param name="height">Wysokość symbolu menu.</param>
        <param name="glyph">Jeden z <see cref="T:System.Windows.Forms.MenuGlyph" /> wartości, które określa obraz do rysowania.</param>
        <summary>Rysuje symbolu menu określonego w kontrolce elementu menu z określone granice i na określonej powierzchni.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas rysowania przez właściciela <xref:System.Windows.Forms.MenuItem> formantów, należy sprawdzić wartości właściwości, aby ustalić poprawne symbolu, aby narysować lub Usuń. Na przykład, jeśli <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=nameWithType> właściwość jest ustawiona na wywołanie ma wartość true, <xref:System.Windows.Forms.MenuGlyph.Checkmark> wartość <xref:System.Windows.Forms.MenuGlyph> Rysowanie znacznik wyboru na <xref:System.Windows.Forms.MenuItem>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawMenuGlyph">
      <MemberSignature Language="C#" Value="public static void DrawMenuGlyph (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.MenuGlyph glyph, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawMenuGlyph(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.MenuGlyph glyph, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.MenuGlyph,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawMenuGlyph(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::MenuGlyph glyph, System::Drawing::Color foreColor, System::Drawing::Color backColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="glyph" Type="System.Windows.Forms.MenuGlyph" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="x">Współrzędna x lewym górnym rogu prostokąta rysowania.</param>
        <param name="y">Współrzędna y lewym górnym rogu prostokąta rysowania.</param>
        <param name="width">Szerokość symbolu menu.</param>
        <param name="height">Wysokość symbolu menu.</param>
        <param name="glyph">Jeden z <see cref="T:System.Windows.Forms.MenuGlyph" /> wartości, które określa obraz do rysowania.</param>
        <param name="foreColor">Kolor, który zastępuje <see cref="P:System.Drawing.Color.White" /> jako kolor pierwszego planu.</param>
        <param name="backColor">Kolor, który zastępuje <see cref="P:System.Drawing.Color.Black" /> jako kolor tła.</param>
        <summary>Rysuje symbolu określonego menu w formancie elementów menu w określonych współrzędnych, wysokość i szerokość na powierzchni określonego zastępowanie <see cref="P:System.Drawing.Color.White" /> kolorem określone w <paramref name="backColor" /> parametru i zastępowanie <see cref="P:System.Drawing.Color.Black" /> kolorem określony w <paramref name="foreColor" /> parametru.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas rysowania przez właściciela <xref:System.Windows.Forms.MenuItem> formantów, należy sprawdzić wartości właściwości, aby ustalić poprawne symbolu, aby narysować lub Usuń. Na przykład, jeśli <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=nameWithType> właściwość jest ustawiona na `true`, należy wywołać <xref:System.Windows.Forms.MenuGlyph.Checkmark> wartość <xref:System.Windows.Forms.MenuGlyph> Rysowanie znacznik wyboru na <xref:System.Windows.Forms.MenuItem>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MenuItem" />
        <altmember cref="T:System.Windows.Forms.MenuGlyph" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawMixedCheckBox">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rysuje trójstanowy pole wyboru.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawMixedCheckBox">
      <MemberSignature Language="C#" Value="public static void DrawMixedCheckBox (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawMixedCheckBox(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawMixedCheckBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawMixedCheckBox(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="rectangle">
          <see cref="T:System.Drawing.Rectangle" /> Reprezentujący wymiary pole wyboru.</param>
        <param name="state">Bitowe połączenie <see cref="T:System.Windows.Forms.ButtonState" /> wartości, które określa stan używany do rysowania pole wyboru.</param>
        <summary>Rysuje trójstanowy pole wyboru w określonym stanie na powierzchni określonej grafiki i w określonym zakresie.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.CheckBox.ThreeState" />
      </Docs>
    </Member>
    <Member MemberName="DrawMixedCheckBox">
      <MemberSignature Language="C#" Value="public static void DrawMixedCheckBox (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawMixedCheckBox(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawMixedCheckBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawMixedCheckBox(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="x">Współrzędna x lewym górnym rogu prostokąta rysowania.</param>
        <param name="y">Współrzędna y lewym górnym rogu prostokąta rysowania.</param>
        <param name="width">Szerokość pola wyboru.</param>
        <param name="height">Wysokość pola wyboru.</param>
        <param name="state">Bitowe połączenie <see cref="T:System.Windows.Forms.ButtonState" /> wartości, które określa stan używany do rysowania pole wyboru.</param>
        <summary>Rysuje trójstanowy pole wyboru w określonym stanie na powierzchni określonej grafiki i w określonym zakresie.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.CheckBox.ThreeState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawRadioButton">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rysuje kontrolkę przycisku radiowego.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawRadioButton">
      <MemberSignature Language="C#" Value="public static void DrawRadioButton (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawRadioButton(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawRadioButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawRadioButton(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="rectangle">
          <see cref="T:System.Drawing.Rectangle" /> Reprezentujący wymiary przycisku radiowego.</param>
        <param name="state">Bitowe połączenie <see cref="T:System.Windows.Forms.ButtonState" /> wartości, które określa stan używany do rysowania przycisk radiowy.</param>
        <summary>Rysuje kontrolkę przycisku radiowego w określonym stanie na powierzchni określonej grafiki i w określonym zakresie.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.RadioButton" />
      </Docs>
    </Member>
    <Member MemberName="DrawRadioButton">
      <MemberSignature Language="C#" Value="public static void DrawRadioButton (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawRadioButton(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawRadioButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawRadioButton(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="x">Współrzędna x lewym górnym rogu prostokąta rysowania.</param>
        <param name="y">Współrzędna y lewym górnym rogu prostokąta rysowania.</param>
        <param name="width">Szerokość przycisku radiowego.</param>
        <param name="height">Wysokość przycisku radiowego.</param>
        <param name="state">Bitowe połączenie <see cref="T:System.Windows.Forms.ButtonState" /> wartości, które określa stan używany do rysowania przycisk radiowy.</param>
        <summary>Rysuje kontrolkę przycisku radiowego w określonym stanie na powierzchni określonej grafiki i w określonym zakresie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawReversibleFrame">
      <MemberSignature Language="C#" Value="public static void DrawReversibleFrame (System.Drawing.Rectangle rectangle, System.Drawing.Color backColor, System.Windows.Forms.FrameStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawReversibleFrame(valuetype System.Drawing.Rectangle rectangle, valuetype System.Drawing.Color backColor, valuetype System.Windows.Forms.FrameStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawReversibleFrame(System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.FrameStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawReversibleFrame(System::Drawing::Rectangle rectangle, System::Drawing::Color backColor, System::Windows::Forms::FrameStyle style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="style" Type="System.Windows.Forms.FrameStyle" />
      </Parameters>
      <Docs>
        <param name="rectangle">
          <see cref="T:System.Drawing.Rectangle" /> Reprezentujący wymiary prostokąta do rysowania we współrzędnych ekranu.</param>
        <param name="backColor">
          <see cref="T:System.Drawing.Color" /> z tła ramki.</param>
        <param name="style">Jeden z <see cref="T:System.Windows.Forms.FrameStyle" /> wartości, które określa rodzaj ramki.</param>
        <summary>Rysuje odwracalnego ramek na ekranie w określone granice kolorem tła określonego i w określonym stanie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `backColor` Parametr jest używany do obliczania koloru wypełnienia ramki, aby zawsze była widoczna na tle.  
  
 Wyniki tej metody można wycofać, rysując samej ramce. Rysowanie ramki za pomocą tej metody jest podobny do odwracanie region ekranu, z tą różnicą, że zapewnia lepszą wydajność dla szerokiego zakresu kolorów.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.Control.RectangleToScreen%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.PointToScreen%2A?displayProperty=nameWithType>i <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A> elementów członkowskich. Aby uruchomić przykład, wklej następujący kod w postaci o nazwie `Form1` zawierające kilka formantów. W tym przykładzie wymaga, że zdarzenia myszy są podłączone do obsługi zdarzeń zdefiniowanych w przykładzie.  
  
 [!code-cpp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.FrameStyle" />
      </Docs>
    </Member>
    <Member MemberName="DrawReversibleLine">
      <MemberSignature Language="C#" Value="public static void DrawReversibleLine (System.Drawing.Point start, System.Drawing.Point end, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawReversibleLine(valuetype System.Drawing.Point start, valuetype System.Drawing.Point end, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawReversibleLine(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DrawReversibleLine (start As Point, end As Point, backColor As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawReversibleLine(System::Drawing::Point start, System::Drawing::Point end, System::Drawing::Color backColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Drawing.Point" />
        <Parameter Name="end" Type="System.Drawing.Point" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="start">Początkowe <see cref="T:System.Drawing.Point" /> linii, we współrzędnych ekranu.</param>
        <param name="end">Zakończenie <see cref="T:System.Drawing.Point" /> linii, we współrzędnych ekranu.</param>
        <param name="backColor">
          <see cref="T:System.Drawing.Color" /> Dla tła wiersza.</param>
        <summary>Rysuje linię odwracalnego na ekranie w obrębie określonej początkowej i końcowej punktów i kolor tła określony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `backColor` Parametr jest używany do obliczania kolor wypełnienia wiersza, aby zawsze była widoczna na tle.  
  
 Wyniki tej metody można wycofać, rysując tej samej linii. Rysowanie linii za pomocą tej metody jest podobny do odwracanie region ekranu, z tą różnicą, że zapewnia lepszą wydajność dla szerokiego zakresu kolorów.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, za pomocą <xref:System.Windows.Forms.ControlPaint.DrawReversibleLine%2A?displayProperty=nameWithType> i <xref:System.Windows.Forms.Control.PointToScreen%2A?displayProperty=nameWithType> metody. Aby uruchomić przykład, wklej następujący kod w formularzu. Dodawanie przycisku o nazwie `Button3` do formularza i sprawdź wszystkie zdarzenia są podłączone do swoich programów obsługi zdarzeń.  
  
 [!code-cpp[System.Windows.Forms.ControlPaint1#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.ControlPaint1#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.ControlPaint1#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.FrameStyle" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawScrollButton">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rysuje przycisk przewijania na pasku przewijania formantu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawScrollButton">
      <MemberSignature Language="C#" Value="public static void DrawScrollButton (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ScrollButton button, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawScrollButton(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.ScrollButton button, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawScrollButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ScrollButton,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawScrollButton(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::ScrollButton button, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="button" Type="System.Windows.Forms.ScrollButton" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="rectangle">
          <see cref="T:System.Drawing.Rectangle" /> Reprezentujący wymiary symbolu.</param>
        <param name="button">Jeden z <see cref="T:System.Windows.Forms.ScrollButton" /> wartości, które określają typ strzałkę przewijania do rysowania.</param>
        <param name="state">Bitowe połączenie <see cref="T:System.Windows.Forms.ButtonState" /> wartości, które określa stan używany do rysowania przycisku przewijania.</param>
        <summary>Rysuje przycisku przewijania określonego na pasek przewijania w określonym stanie na powierzchni określonej grafiki i w określonym zakresie.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.ScrollButton" />
        <altmember cref="T:System.Windows.Forms.ButtonState" />
        <altmember cref="T:System.Windows.Forms.ScrollBar" />
      </Docs>
    </Member>
    <Member MemberName="DrawScrollButton">
      <MemberSignature Language="C#" Value="public static void DrawScrollButton (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ScrollButton button, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawScrollButton(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.ScrollButton button, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawScrollButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ScrollButton,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawScrollButton(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::ScrollButton button, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="button" Type="System.Windows.Forms.ScrollButton" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="x">Współrzędna x lewym górnym rogu prostokąta rysowania.</param>
        <param name="y">Współrzędna y lewym górnym rogu prostokąta rysowania.</param>
        <param name="width">Szerokość przycisku przewijania.</param>
        <param name="height">Wysokość przycisku przewijania.</param>
        <param name="button">Jeden z <see cref="T:System.Windows.Forms.ScrollButton" /> wartości, które określają typ strzałkę przewijania do rysowania.</param>
        <param name="state">Bitowe połączenie <see cref="T:System.Windows.Forms.ButtonState" /> wartości, które określa stan używany do rysowania przycisku przewijania.</param>
        <summary>Rysuje przycisku przewijania określonego na pasek przewijania w określonym stanie na powierzchni określonej grafiki i w określonym zakresie.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.ScrollButton" />
        <altmember cref="T:System.Windows.Forms.ButtonState" />
        <altmember cref="T:System.Windows.Forms.ScrollBar" />
      </Docs>
    </Member>
    <Member MemberName="DrawSelectionFrame">
      <MemberSignature Language="C#" Value="public static void DrawSelectionFrame (System.Drawing.Graphics graphics, bool active, System.Drawing.Rectangle outsideRect, System.Drawing.Rectangle insideRect, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawSelectionFrame(class System.Drawing.Graphics graphics, bool active, valuetype System.Drawing.Rectangle outsideRect, valuetype System.Drawing.Rectangle insideRect, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawSelectionFrame(System.Drawing.Graphics,System.Boolean,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawSelectionFrame(System::Drawing::Graphics ^ graphics, bool active, System::Drawing::Rectangle outsideRect, System::Drawing::Rectangle insideRect, System::Drawing::Color backColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="active" Type="System.Boolean" />
        <Parameter Name="outsideRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="insideRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="active">
          <see langword="true" /> Rysowanie ramki wyboru w stanie aktywnym; w przeciwnym razie <see langword="false" />.</param>
        <param name="outsideRect">
          <see cref="T:System.Drawing.Rectangle" /> Reprezentujący zewnętrzne granic ramki wyboru.</param>
        <param name="insideRect">
          <see cref="T:System.Drawing.Rectangle" /> Reprezentujący wewnętrznego obramowania ramki wyboru.</param>
        <param name="backColor">
          <see cref="T:System.Drawing.Color" /> z tła ramki.</param>
        <summary>Rysuje ramkę wyboru standardowe w określonym stanie, na powierzchni określonej grafiki, z określonym wymiarów wewnętrznych i zewnętrznych i kolor tła określony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ramka zaznaczenia jest ramki, który jest rysowany wokół wybranego składnika w czasie projektowania.  
  
 `backColor` Parametr jest używany do obliczania koloru wypełnienia ramki, aby zawsze była widoczna na tle.  
  
 Jeśli `active` ustawiono parametr `true`, ramki wyboru jest rysowane jako zestaw znaków kreskowania wskazujący, że składnik został aktywowany; w przeciwnym razie ramki wyboru jest rysowany z wzorcem kropkowanej lub żadna, w zależności od wdrożenia .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawSizeGrip">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rysuje uchwyt rozmiaru w formularzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawSizeGrip">
      <MemberSignature Language="C#" Value="public static void DrawSizeGrip (System.Drawing.Graphics graphics, System.Drawing.Color backColor, System.Drawing.Rectangle bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawSizeGrip(class System.Drawing.Graphics graphics, valuetype System.Drawing.Color backColor, valuetype System.Drawing.Rectangle bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawSizeGrip(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawSizeGrip(System::Drawing::Graphics ^ graphics, System::Drawing::Color backColor, System::Drawing::Rectangle bounds);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="backColor">
          <see cref="T:System.Drawing.Color" /> Tła używany do określenia kolory rozmiar uchwytu.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> Reprezentujący wymiary rozmiar uchwytu.</param>
        <summary>Rysuje uchwyt rozmiar na formularzu określone granice i kolor tła i na powierzchni określonej grafiki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `backColor` Parametr jest używany do obliczania kolor uchwytu rozmiar, aby zawsze była widoczna na tle.  
  
 Podczas definiowania okna może być zmieniany, mogą obejmować uchwyt rozmiaru. Uchwyt rozmiar jest dojścia specjalne, które umożliwia użytkownikowi zmienianie rozmiaru okna.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Form" />
        <altmember cref="T:System.Windows.Forms.SizeGripStyle" />
      </Docs>
    </Member>
    <Member MemberName="DrawSizeGrip">
      <MemberSignature Language="C#" Value="public static void DrawSizeGrip (System.Drawing.Graphics graphics, System.Drawing.Color backColor, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawSizeGrip(class System.Drawing.Graphics graphics, valuetype System.Drawing.Color backColor, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawSizeGrip(System.Drawing.Graphics,System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawSizeGrip(System::Drawing::Graphics ^ graphics, System::Drawing::Color backColor, int x, int y, int width, int height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="backColor">
          <see cref="T:System.Drawing.Color" /> Tła używany do określenia kolory rozmiar uchwytu.</param>
        <param name="x">Współrzędna x lewego górnego rogu rozmiar uchwytu.</param>
        <param name="y">Współrzędna y lewego górnego rogu rozmiar uchwytu.</param>
        <param name="width">Szerokość uchwytu rozmiar.</param>
        <param name="height">Wysokość uchwytu rozmiar.</param>
        <summary>Rysuje uchwyt rozmiar na formularzu określone granice i kolor tła i na powierzchni określonej grafiki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `backColor` Parametr jest używany do obliczania kolor uchwytu rozmiar, aby zawsze była widoczna na tle.  
  
 Podczas definiowania okna może być zmieniany, mogą obejmować uchwyt rozmiaru. Uchwyt rozmiar jest dojścia specjalne, które umożliwia użytkownikowi zmienianie rozmiaru okna.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Form" />
        <altmember cref="T:System.Windows.Forms.SizeGripStyle" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawStringDisabled">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rysuje określonego ciągu w stanie wyłączenia.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawStringDisabled">
      <MemberSignature Language="C#" Value="public static void DrawStringDisabled (System.Drawing.Graphics graphics, string s, System.Drawing.Font font, System.Drawing.Color color, System.Drawing.RectangleF layoutRectangle, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawStringDisabled(class System.Drawing.Graphics graphics, string s, class System.Drawing.Font font, valuetype System.Drawing.Color color, valuetype System.Drawing.RectangleF layoutRectangle, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawStringDisabled(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawStringDisabled(System::Drawing::Graphics ^ graphics, System::String ^ s, System::Drawing::Font ^ font, System::Drawing::Color color, System::Drawing::RectangleF layoutRectangle, System::Drawing::StringFormat ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="color" Type="System.Drawing.Color" />
        <Parameter Name="layoutRectangle" Type="System.Drawing.RectangleF" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="s">Ciąg do rysowania.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> Do rysowania ciąg z.</param>
        <param name="color">
          <see cref="T:System.Drawing.Color" /> Tła za ciąg.</param>
        <param name="layoutRectangle">
          <see cref="T:System.Drawing.RectangleF" /> Reprezentujący wymiary ciągu.</param>
        <param name="format">
          <see cref="T:System.Drawing.StringFormat" /> Do zastosowania do ciągu.</param>
        <summary>Rysuje określonego ciągu w stanie wyłączenia na powierzchni określonej grafiki; w określonym zakresie; w określonej czcionki, kolor i format.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawStringDisabled">
      <MemberSignature Language="C#" Value="public static void DrawStringDisabled (System.Drawing.IDeviceContext dc, string s, System.Drawing.Font font, System.Drawing.Color color, System.Drawing.Rectangle layoutRectangle, System.Windows.Forms.TextFormatFlags format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawStringDisabled(class System.Drawing.IDeviceContext dc, string s, class System.Drawing.Font font, valuetype System.Drawing.Color color, valuetype System.Drawing.Rectangle layoutRectangle, valuetype System.Windows.Forms.TextFormatFlags format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawStringDisabled(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Rectangle,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawStringDisabled(System::Drawing::IDeviceContext ^ dc, System::String ^ s, System::Drawing::Font ^ font, System::Drawing::Color color, System::Drawing::Rectangle layoutRectangle, System::Windows::Forms::TextFormatFlags format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="color" Type="System.Drawing.Color" />
        <Parameter Name="layoutRectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="format" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">GDI podstawie <see cref="T:System.Windows.Forms.TextRenderer" />.</param>
        <param name="s">Ciąg do rysowania.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> Do rysowania ciąg z.</param>
        <param name="color">
          <see cref="T:System.Drawing.Color" /> Tła za ciąg.</param>
        <param name="layoutRectangle">
          <see cref="T:System.Drawing.RectangleF" /> Reprezentujący wymiary ciągu.</param>
        <param name="format">
          <see cref="T:System.Drawing.StringFormat" /> Do zastosowania do ciągu.</param>
        <summary>Rysuje określonego ciągu w stanie wyłączenia na powierzchni grafiki określony w określonym zakresie i w określonej czcionki, kolor i format, korzystając z określonego na podstawie GDI <see cref="T:System.Windows.Forms.TextRenderer" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawVisualStyleBorder">
      <MemberSignature Language="C#" Value="public static void DrawVisualStyleBorder (System.Drawing.Graphics graphics, System.Drawing.Rectangle bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawVisualStyleBorder(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawVisualStyleBorder(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawVisualStyleBorder(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle bounds);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Korzystać.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> Reprezentujący wymiary obramowania.</param>
        <summary>Rysuje obramowanie w stylu odpowiednie dla elementy wyłączone.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillReversibleRectangle">
      <MemberSignature Language="C#" Value="public static void FillReversibleRectangle (System.Drawing.Rectangle rectangle, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FillReversibleRectangle(valuetype System.Drawing.Rectangle rectangle, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.FillReversibleRectangle(System.Drawing.Rectangle,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FillReversibleRectangle(System::Drawing::Rectangle rectangle, System::Drawing::Color backColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="rectangle">
          <see cref="T:System.Drawing.Rectangle" /> Reprezentujący wymiary prostokąta, aby wypełnić współrzędne ekranu.</param>
        <param name="backColor">
          <see cref="T:System.Drawing.Color" /> Za wypełnienia tła.</param>
        <summary>Rysuje prostokąt wypełniony, odwracalnego na ekranie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `backColor` Parametr jest używany do obliczania kolor wypełnienia prostokąta, dzięki czemu jest zawsze widoczne na tle.  
  
 Wyniki tej metody można wycofać, rysując sam prostokąta. Rysowanie w prostokącie za pomocą tej metody przypomina odwracanie regionów ekranu, z tą różnicą, że zapewnia lepszą wydajność dla szerokiego zakresu kolorów.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, przy użyciu <xref:System.Windows.Forms.ControlPaint.FillReversibleRectangle%2A> metody. Aby uruchomić przykład, wklej następujący kod w formularzu. Dodawanie przycisku o nazwie `Button2` do formularza i sprawdź wszystkie zdarzenia są podłączone do swoich programów obsługi zdarzeń.  
  
 [!code-cpp[System.Windows.Forms.ControlPaint1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ControlPaint1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ControlPaint1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.BackColor" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Light">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy nowy obiekt jasny kolor dla formantu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Light">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color Light (System.Drawing.Color baseColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Color Light(valuetype System.Drawing.Color baseColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.Light(System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Light (baseColor As Color) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Color Light(System::Drawing::Color baseColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="baseColor">
          <see cref="T:System.Drawing.Color" /> Do zostać zmniejszone.</param>
        <summary>Tworzy nowy obiekt jasny kolor formantu z określonego koloru.</summary>
        <returns>A <see cref="T:System.Drawing.Color" /> reprezentujący jasny kolor w formancie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli określony <xref:System.Drawing.Color> jest jednym z <xref:System.Drawing.SystemColors>, kolor jest konwertowana na <xref:System.Drawing.SystemColors.ControlLight%2A?displayProperty=nameWithType> kolorów; w przeciwnym razie zostaje zmniejszona jasność koloru.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Light">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color Light (System.Drawing.Color baseColor, float percOfLightLight);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Color Light(valuetype System.Drawing.Color baseColor, float32 percOfLightLight) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.Light(System.Drawing.Color,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Light (baseColor As Color, percOfLightLight As Single) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Color Light(System::Drawing::Color baseColor, float percOfLightLight);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseColor" Type="System.Drawing.Color" />
        <Parameter Name="percOfLightLight" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="baseColor">
          <see cref="T:System.Drawing.Color" /> Do zostać zmniejszone.</param>
        <param name="percOfLightLight">Wartość procentowa, aby rozjaśnić określonego <see cref="T:System.Drawing.Color" />.</param>
        <summary>Tworzy nowy obiekt jasny kolor formantu z określonego koloru i rozjaśnić go według określonej wartości procentowej.</summary>
        <returns>A <see cref="T:System.Drawing.Color" /> reprezentujący jasny kolor w formancie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli określony <xref:System.Drawing.Color> jest jednym z <xref:System.Drawing.SystemColors>, kolor jest konwertowana na <xref:System.Drawing.SystemColors.ControlLight%2A?displayProperty=nameWithType> kolorów; w przeciwnym razie zostaje zmniejszona jasność koloru.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LightLight">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color LightLight (System.Drawing.Color baseColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Color LightLight(valuetype System.Drawing.Color baseColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.LightLight(System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LightLight (baseColor As Color) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Color LightLight(System::Drawing::Color baseColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="baseColor">
          <see cref="T:System.Drawing.Color" /> Do zostać zmniejszone.</param>
        <summary>Tworzy nowy obiekt jasny kolor formantu z określonego koloru.</summary>
        <returns>A <see cref="T:System.Drawing.Color" /> reprezentujący jasny kolor w formancie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli określony <xref:System.Drawing.Color> jest jednym z <xref:System.Drawing.SystemColors>, kolor jest konwertowana na <xref:System.Drawing.SystemColors.ControlLightLight%2A?displayProperty=nameWithType> kolorów; w przeciwnym razie wartość zwiększa się jasność koloru.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>