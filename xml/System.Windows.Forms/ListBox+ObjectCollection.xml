<Type Name="ListBox+ObjectCollection" FullName="System.Windows.Forms.ListBox+ObjectCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="68bd5697ee07ce234d4a07957f57be18869789ef" />
    <Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="12/01/2018" />
    <Meta Name="ms.locfileid" Value="52732800" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListBox.ObjectCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ListBox/ObjectCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListBox.ObjectCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListBox.ObjectCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ListBox::ObjectCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ListBox.ObjectCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="25086-101">Reprezentuje kolekcję elementów na liście <see cref="T:System.Windows.Forms.ListBox" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="25086-101">Represents the collection of items in a <see cref="T:System.Windows.Forms.ListBox" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25086-102"><xref:System.Windows.Forms.ListBox.ObjectCollection> Klasa przechowuje elementy wyświetlane w <xref:System.Windows.Forms.ListBox>.</span><span class="sxs-lookup"><span data-stu-id="25086-102">The <xref:System.Windows.Forms.ListBox.ObjectCollection> class stores the items displayed in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="25086-103">Istnieją dwie inne kolekcje zdefiniowane <xref:System.Windows.Forms.ListBox> klasy, które umożliwiają określenie, jakie elementy są zaznaczone w tej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="25086-103">There are two other collections defined within the <xref:System.Windows.Forms.ListBox> class that enable you to determine what items are selected within this collection.</span></span> <span data-ttu-id="25086-104"><xref:System.Windows.Forms.ListBox.SelectedObjectCollection> Klasa udostępnia właściwości i metod do określania, jakie elementy są zaznaczone w <xref:System.Windows.Forms.ListBox.ObjectCollection>, podczas gdy <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> klasy umożliwia określenie, jakie indeksy w <xref:System.Windows.Forms.ListBox.ObjectCollection> są zaznaczone.</span><span class="sxs-lookup"><span data-stu-id="25086-104">The <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> class provides properties and methods for determining what items are selected within the <xref:System.Windows.Forms.ListBox.ObjectCollection>, while the <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> class enables you to determine what indexes within the <xref:System.Windows.Forms.ListBox.ObjectCollection> are selected.</span></span>  
  
 <span data-ttu-id="25086-105">Istnieją różne sposoby, aby dodać elementy do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="25086-105">There are a number of ways to add items to the collection.</span></span> <span data-ttu-id="25086-106"><xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> Metoda zapewnia możliwość dodawania jednego obiektu do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="25086-106">The <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method provides the ability to add a single object to the collection.</span></span> <span data-ttu-id="25086-107">Aby dodać wiele obiektów do kolekcji, utworzyć tablicę elementów i przypisz ją do <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="25086-107">To add a number of objects to the collection, you create an array of items and assign it to the <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> method.</span></span> <span data-ttu-id="25086-108">Jeśli chcesz wstawić obiektu z określonej lokalizacji w tej kolekcji, możesz użyć <xref:System.Windows.Forms.ListBox.ObjectCollection.Insert%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="25086-108">If you want to insert an object at a specific location within the collection, you can use the <xref:System.Windows.Forms.ListBox.ObjectCollection.Insert%2A> method.</span></span> <span data-ttu-id="25086-109">Aby usunąć elementy, można użyć albo <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> metody lub <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> metodę, jeśli wiesz, gdzie element znajduje się w tej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="25086-109">To remove items, you can use either the <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> method or the <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> method if you know where the item is located within the collection.</span></span> <span data-ttu-id="25086-110"><xref:System.Windows.Forms.ListBox.ObjectCollection.Clear%2A> Metoda umożliwia usunięcie wszystkich elementów z kolekcji zamiast <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> metodę, aby usunąć pojedynczy element w danym momencie.</span><span class="sxs-lookup"><span data-stu-id="25086-110">The <xref:System.Windows.Forms.ListBox.ObjectCollection.Clear%2A> method enables you to remove all items from the collection instead of using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> method to remove a single item at a time.</span></span>  
  
 <span data-ttu-id="25086-111">Możesz też manipulować elementy <xref:System.Windows.Forms.ListBox> przy użyciu <xref:System.Windows.Forms.ListControl.DataSource%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="25086-111">You can also manipulate the items of a <xref:System.Windows.Forms.ListBox> by using the <xref:System.Windows.Forms.ListControl.DataSource%2A> property.</span></span> <span data-ttu-id="25086-112">Jeśli używasz <xref:System.Windows.Forms.ListControl.DataSource%2A> właściwości, aby dodać elementy do <xref:System.Windows.Forms.ListBox>, można wyświetlać elementy w <xref:System.Windows.Forms.ListBox> przy użyciu <xref:System.Windows.Forms.ListBox.Items%2A> właściwość, ale nie można dodać lub usunąć elementy z listy za pomocą metody <xref:System.Windows.Forms.ListBox.ObjectCollection>.</span><span class="sxs-lookup"><span data-stu-id="25086-112">If you use the <xref:System.Windows.Forms.ListControl.DataSource%2A> property to add items to a <xref:System.Windows.Forms.ListBox>, you can view the items in the <xref:System.Windows.Forms.ListBox> using the <xref:System.Windows.Forms.ListBox.Items%2A> property but you cannot add or remove items from the list using the methods of the <xref:System.Windows.Forms.ListBox.ObjectCollection>.</span></span>  
  
 <span data-ttu-id="25086-113">Oprócz metod i właściwości do dodawania i usuwania elementów <xref:System.Windows.Forms.ListBox.ObjectCollection> zapewnia także metody, aby znaleźć elementy w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="25086-113">In addition to methods and properties for adding and removing items, the <xref:System.Windows.Forms.ListBox.ObjectCollection> also provides methods to find items within the collection.</span></span> <span data-ttu-id="25086-114"><xref:System.Windows.Forms.ListBox.ObjectCollection.Contains%2A> Metody umożliwia określenie, czy obiekt jest członkiem kolekcji.</span><span class="sxs-lookup"><span data-stu-id="25086-114">The <xref:System.Windows.Forms.ListBox.ObjectCollection.Contains%2A> method enables you to determine whether an object is a member of the collection.</span></span> <span data-ttu-id="25086-115">Gdy wiesz, że element znajduje się w tej kolekcji, możesz użyć <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A> metodę, aby określić, gdzie element znajduje się w tej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="25086-115">Once you know that the item is located within the collection, you can use the <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A> method to determine where the item is located within the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="25086-116">Poniższy przykład kodu demonstruje, rysowanych przez właściciela <xref:System.Windows.Forms.ListBox> , ustawiając <xref:System.Windows.Forms.ListBox.DrawMode%2A> właściwości `OwnerDrawVariable` wartość i obsługa <xref:System.Windows.Forms.ListBox.DrawItem> i <xref:System.Windows.Forms.ListBox.MeasureItem> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="25086-116">The following code example demonstrates an owner-drawn <xref:System.Windows.Forms.ListBox> by setting the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property to the `OwnerDrawVariable` value and handling the <xref:System.Windows.Forms.ListBox.DrawItem> and <xref:System.Windows.Forms.ListBox.MeasureItem> events.</span></span> <span data-ttu-id="25086-117">Ilustruje też ustawienie <xref:System.Windows.Forms.ListBox.BorderStyle%2A> i <xref:System.Windows.Forms.ListBox.ScrollAlwaysVisible%2A> właściwości i za pomocą <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="25086-117">It also demonstrates setting the <xref:System.Windows.Forms.ListBox.BorderStyle%2A> and <xref:System.Windows.Forms.ListBox.ScrollAlwaysVisible%2A> properties and using the <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> method.</span></span>  
  
 <span data-ttu-id="25086-118">Aby uruchomić ten przykład, wkleić go do pusty formularz, który importuje <xref:System.Drawing> przestrzeni nazw i <xref:System.Windows.Forms> przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="25086-118">To run this example, paste it into an empty form that imports the <xref:System.Drawing> namespace and the <xref:System.Windows.Forms> namespace.</span></span> <span data-ttu-id="25086-119">Wywołaj `InitializeOwnerDrawnListBox` z konstruktora formularza lub `Load` metody.</span><span class="sxs-lookup"><span data-stu-id="25086-119">Call `InitializeOwnerDrawnListBox` from the form's constructor or `Load` method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListBox.SelectedObjectCollection" />
    <altmember cref="T:System.Windows.Forms.ListBox.SelectedIndexCollection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="25086-120">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-120">Initializes a new instance of <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectCollection (System.Windows.Forms.ListBox owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListBox owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.#ctor(System.Windows.Forms.ListBox)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListBox)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectCollection(System::Windows::Forms::ListBox ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ListBox.ObjectCollection : System.Windows.Forms.ListBox -&gt; System.Windows.Forms.ListBox.ObjectCollection" Usage="new System.Windows.Forms.ListBox.ObjectCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListBox" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="25086-121">
            <see cref="T:System.Windows.Forms.ListBox" /> , Który jest właścicielem kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-121">The <see cref="T:System.Windows.Forms.ListBox" /> that owns the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25086-122">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-122">Initializes a new instance of <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25086-123">Nie można utworzyć wystąpienia tej klasy, bez skojarzenia z <xref:System.Windows.Forms.ListBox> kontroli.</span><span class="sxs-lookup"><span data-stu-id="25086-123">You cannot create an instance of this class without associating it with a <xref:System.Windows.Forms.ListBox> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectCollection (System.Windows.Forms.ListBox owner, object[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListBox owner, object[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.#ctor(System.Windows.Forms.ListBox,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListBox, value As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectCollection(System::Windows::Forms::ListBox ^ owner, cli::array &lt;System::Object ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ListBox.ObjectCollection : System.Windows.Forms.ListBox * obj[] -&gt; System.Windows.Forms.ListBox.ObjectCollection" Usage="new System.Windows.Forms.ListBox.ObjectCollection (owner, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListBox" />
        <Parameter Name="value" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="25086-124">
            <see cref="T:System.Windows.Forms.ListBox" /> , Który jest właścicielem kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-124">The <see cref="T:System.Windows.Forms.ListBox" /> that owns the collection.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="25086-125">Tablica obiektów do dodania do kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-125">An array of objects to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25086-126">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> zawierający tablicę obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-126">Initializes a new instance of <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> containing an array of objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25086-127">Nie można utworzyć wystąpienia tej klasy, bez skojarzenia z <xref:System.Windows.Forms.ListBox> kontroli.</span><span class="sxs-lookup"><span data-stu-id="25086-127">You cannot create an instance of this class without associating it with a <xref:System.Windows.Forms.ListBox> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectCollection (System.Windows.Forms.ListBox owner, System.Windows.Forms.ListBox.ObjectCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListBox owner, class System.Windows.Forms.ListBox/ObjectCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.#ctor(System.Windows.Forms.ListBox,System.Windows.Forms.ListBox.ObjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListBox, value As ListBox.ObjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectCollection(System::Windows::Forms::ListBox ^ owner, System::Windows::Forms::ListBox::ObjectCollection ^ value);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ListBox.ObjectCollection : System.Windows.Forms.ListBox * System.Windows.Forms.ListBox.ObjectCollection -&gt; System.Windows.Forms.ListBox.ObjectCollection" Usage="new System.Windows.Forms.ListBox.ObjectCollection (owner, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListBox" />
        <Parameter Name="value" Type="System.Windows.Forms.ListBox+ObjectCollection" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="25086-128">
            <see cref="T:System.Windows.Forms.ListBox" /> , Który jest właścicielem kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-128">The <see cref="T:System.Windows.Forms.ListBox" /> that owns the collection.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="25086-129">A <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> z którym zawartość jest kopiowana do tej kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-129">A <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> from which the contents are copied to this collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25086-130">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> oparte na innym <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-130">Initializes a new instance of <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> based on another <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25086-131">Nie można utworzyć wystąpienia tej klasy, bez skojarzenia z <xref:System.Windows.Forms.ListBox> kontroli.</span><span class="sxs-lookup"><span data-stu-id="25086-131">You cannot create an instance of this class without associating it with a <xref:System.Windows.Forms.ListBox> control.</span></span> <span data-ttu-id="25086-132">Ta wersja konstruktora pozwala przy użyciu elementów określonych w istniejącym wystąpieniu programu <xref:System.Windows.Forms.ListBox.ObjectCollection> klasy, aby dodać elementy do kolekcji, podczas jego tworzenia.</span><span class="sxs-lookup"><span data-stu-id="25086-132">This version of the constructor enables you to use the items specified in an existing instance of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class to add items to the collection when it is created.</span></span> <span data-ttu-id="25086-133">Można użyć tego konstruktora do użycia elementów określony w innym <xref:System.Windows.Forms.ListBox> kontrolki z tą kolekcją.</span><span class="sxs-lookup"><span data-stu-id="25086-133">You can use this constructor to use the items specified in another <xref:System.Windows.Forms.ListBox> control with this collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="member this.Add : obj -&gt; int" Usage="objectCollection.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="25086-134">Obiekt reprezentujący element do dodania do kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-134">An object representing the item to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25086-135">Dodaje element do listy elementów do <see cref="T:System.Windows.Forms.ListBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-135">Adds an item to the list of items for a <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25086-136">Liczony od zera indeks elementu w kolekcji lub wartość-1, jeśli <see cref="M:System.Windows.Forms.ListBox.BeginUpdate" /> została wywołana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-136">The zero-based index of the item in the collection, or -1 if <see cref="M:System.Windows.Forms.ListBox.BeginUpdate" /> has been called.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25086-137">Jeśli <xref:System.Windows.Forms.ListBox.Sorted%2A> właściwość <xref:System.Windows.Forms.ListBox> ustawiono `true`, element jest umieszczone na liście w kolejności alfabetycznej.</span><span class="sxs-lookup"><span data-stu-id="25086-137">If the <xref:System.Windows.Forms.ListBox.Sorted%2A> property of the <xref:System.Windows.Forms.ListBox> is set to `true`, the item is inserted into the list alphabetically.</span></span> <span data-ttu-id="25086-138">W przeciwnym razie element jest wstawiany na końcu listy.</span><span class="sxs-lookup"><span data-stu-id="25086-138">Otherwise, the item is inserted at the end of the list.</span></span> <span data-ttu-id="25086-139">Aby wstawić element do pola listy na określonej pozycji, użyj <xref:System.Windows.Forms.ListBox.ObjectCollection.Insert%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="25086-139">To insert an item into the list box at a specific position, use the <xref:System.Windows.Forms.ListBox.ObjectCollection.Insert%2A> method.</span></span> <span data-ttu-id="25086-140">Aby dodać zestaw elementów do pola listy, w ramach jednej operacji, użyj <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="25086-140">To add a set of items to the list box in a single operation, use the <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> method.</span></span> <span data-ttu-id="25086-141">Jeśli chcesz używać <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> metodę, aby dodać dużą liczbę elementów do listy, użyj <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> i <xref:System.Windows.Forms.ListBox.EndUpdate%2A> metody, aby zapobiec <xref:System.Windows.Forms.ListBox> z odświeżenie na każdym dodaniu elementu do listy do momentu wszystkie elementy są dodawane do listy.</span><span class="sxs-lookup"><span data-stu-id="25086-141">If you want to use the <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method to add a large number of items to the list, use the <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> and <xref:System.Windows.Forms.ListBox.EndUpdate%2A> methods to prevent the <xref:System.Windows.Forms.ListBox> from repainting each time an item is added to the list until all items are added to the list.</span></span> <span data-ttu-id="25086-142">Podczas dodawania elementów do <xref:System.Windows.Forms.ListBox>, jest bardziej wydajne elementy można sortować najpierw, a następnie dodaj nowe elementy.</span><span class="sxs-lookup"><span data-stu-id="25086-142">When adding items to a <xref:System.Windows.Forms.ListBox>, it is more efficient to sort the items first and then add new items.</span></span>  
  
 <span data-ttu-id="25086-143">Gdy obiekt zostanie dodany do kolekcji, <xref:System.Windows.Forms.ListBox> najpierw sprawdza, czy aby sprawdzić, czy <xref:System.Windows.Forms.ListControl.DisplayMember%2A> właściwość <xref:System.Windows.Forms.ListControl> klasy ma nazwę elementu członkowskiego w obiekcie określonym do odwołania podczas uzyskiwania tekstu elementu.</span><span class="sxs-lookup"><span data-stu-id="25086-143">When an object is added to the collection, the <xref:System.Windows.Forms.ListBox> first checks to see if the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property of the <xref:System.Windows.Forms.ListControl> class has the name of a member from the object specified to reference when obtaining the item text.</span></span> <span data-ttu-id="25086-144">Jeśli <xref:System.Windows.Forms.ListControl.DisplayMember%2A> właściwość nie ma członka, który został określony, <xref:System.Windows.Forms.ListBox> następnie wywołuje <xref:System.Object.ToString%2A> metody obiektu można uzyskać tekst do wyświetlenia na liście.</span><span class="sxs-lookup"><span data-stu-id="25086-144">If the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property does not have a member specified, the <xref:System.Windows.Forms.ListBox> then calls the <xref:System.Object.ToString%2A> method of the object to obtain the text to display in the list.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="25086-145">Poniższy przykład kodu demonstruje sposób tworzenia <xref:System.Windows.Forms.ListBox> formant, który zawiera wiele elementów w kolumnach i może mieć więcej niż jeden element zaznaczony na liście formantu.</span><span class="sxs-lookup"><span data-stu-id="25086-145">The following code example demonstrates how to create a <xref:System.Windows.Forms.ListBox> control that displays multiple items in columns and can have more than one item selected in the control's list.</span></span> <span data-ttu-id="25086-146">Przykładowy kod dodaje 50 elementów do <xref:System.Windows.Forms.ListBox> przy użyciu <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> metody <xref:System.Windows.Forms.ListBox.ObjectCollection> klasy, a następnie wybiera trzy elementy z listy przy użyciu <xref:System.Windows.Forms.ListBox.SetSelected%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="25086-146">The code for the example adds 50 items to the <xref:System.Windows.Forms.ListBox> using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class and then selects three items from the list using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method.</span></span> <span data-ttu-id="25086-147">Kod następnie wyświetla wartości z <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> kolekcji (za pośrednictwem <xref:System.Windows.Forms.ListBox.SelectedItems%2A> właściwości) i <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> (za pośrednictwem <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> właściwości).</span><span class="sxs-lookup"><span data-stu-id="25086-147">The code then displays values from the <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> collection (through the <xref:System.Windows.Forms.ListBox.SelectedItems%2A> property) and the <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> (through the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> property).</span></span> <span data-ttu-id="25086-148">W tym przykładzie wymaga czy kod jest na terenie i wywoływane z <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="25086-148">This example requires that the code is located in and called from a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Classic ListBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ListBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ListBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ListBox Example/CS/source.cs#1)]
 [!code-vb[Classic ListBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ListBox Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="25086-149">Ma za mało miejsca dodać nowy element do listy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-149">There is insufficient space available to add the new item to the list.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="25086-150">
            <paramref name="item" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-150">
              <paramref name="item" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="25086-151">Dodaje grupę elementów na liście elementów <see cref="T:System.Windows.Forms.ListBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-151">Adds a group of items to the list of items for a <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (object[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(object[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.AddRange(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Object ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.AddRange : obj[] -&gt; unit" Usage="objectCollection.AddRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="25086-152">Tablica obiektów, aby dodać do listy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-152">An array of objects to add to the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25086-153">Dodaje tablica elementów do listy elementów do <see cref="T:System.Windows.Forms.ListBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-153">Adds an array of items to the list of items for a <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25086-154">Jeśli <xref:System.Windows.Forms.ListBox.Sorted%2A> właściwość <xref:System.Windows.Forms.ListBox> ustawiono `true`, elementy są umieszczone na liście w kolejności alfabetycznej.</span><span class="sxs-lookup"><span data-stu-id="25086-154">If the <xref:System.Windows.Forms.ListBox.Sorted%2A> property of the <xref:System.Windows.Forms.ListBox> is set to `true`, the items are inserted into the list alphabetically.</span></span> <span data-ttu-id="25086-155">W przeciwnym razie elementy są wstawiane w kolejności występowania w tablicy.</span><span class="sxs-lookup"><span data-stu-id="25086-155">Otherwise, the items are inserted in the order that they occur within the array.</span></span> <span data-ttu-id="25086-156">Ta metoda jest zwykle przekazywany tablicę <xref:System.String> obiektów, ale tablica obiekty dowolnego typu może być przekazywany do tej metody.</span><span class="sxs-lookup"><span data-stu-id="25086-156">This method is typically passed an array of <xref:System.String> objects, but an array of any type of object can be passed to this method.</span></span> <span data-ttu-id="25086-157">Gdy obiekt zostanie dodany do kolekcji, <xref:System.Windows.Forms.ListBox> najpierw sprawdza, czy aby sprawdzić, czy <xref:System.Windows.Forms.ListControl.DisplayMember%2A> właściwość <xref:System.Windows.Forms.ListControl> klasy ma nazwę elementu członkowskiego w obiekcie określonym do odwołania podczas uzyskiwania tekstu elementu.</span><span class="sxs-lookup"><span data-stu-id="25086-157">When an object is added to the collection, the <xref:System.Windows.Forms.ListBox> first checks to see if the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property of the <xref:System.Windows.Forms.ListControl> class has the name of a member from the object specified to reference when obtaining the item text.</span></span> <span data-ttu-id="25086-158">Jeśli <xref:System.Windows.Forms.ListControl.DisplayMember%2A> właściwość nie ma członka, który został określony, <xref:System.Windows.Forms.ListBox> następnie wywołuje <xref:System.Object.ToString%2A> metody obiektu można uzyskać tekst do wyświetlenia na liście.</span><span class="sxs-lookup"><span data-stu-id="25086-158">If the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property does not have a member specified, the <xref:System.Windows.Forms.ListBox> then calls the <xref:System.Object.ToString%2A> method of the object to obtain the text to display in the list.</span></span> <span data-ttu-id="25086-159">Przy użyciu tej metody, aby dodać elementy do <xref:System.Windows.Forms.ListBox>, nie trzeba wywoływać <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> i <xref:System.Windows.Forms.ListBox.EndUpdate%2A> metod w celu zoptymalizowania wydajności.</span><span class="sxs-lookup"><span data-stu-id="25086-159">When using this method to add items to the <xref:System.Windows.Forms.ListBox>, you do not need to call the <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> and <xref:System.Windows.Forms.ListBox.EndUpdate%2A> methods to optimize performance.</span></span> <span data-ttu-id="25086-160">Podczas dodawania elementów do <xref:System.Windows.Forms.ListBox>, jest bardziej wydajne elementy można sortować najpierw, a następnie dodaj nowe elementy.</span><span class="sxs-lookup"><span data-stu-id="25086-160">When adding items to a <xref:System.Windows.Forms.ListBox>, it is more efficient to sort the items first and then add new items.</span></span> <span data-ttu-id="25086-161">Można użyć tej metody, aby dodać grupę elementów do listy lub ponownie użyć elementy przechowywane w innej <xref:System.Windows.Forms.ListBox>.</span><span class="sxs-lookup"><span data-stu-id="25086-161">You can use this method to add a group of items to the list or to reuse the items stored in a different <xref:System.Windows.Forms.ListBox>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="25086-162">Poniższy przykład kodu demonstruje, rysowanych przez właściciela <xref:System.Windows.Forms.ListBox> , ustawiając <xref:System.Windows.Forms.ListBox.DrawMode%2A> właściwości `OwnerDrawVariable` wartość i obsługa <xref:System.Windows.Forms.ListBox.DrawItem> i <xref:System.Windows.Forms.ListBox.MeasureItem> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="25086-162">The following code example demonstrates an owner-drawn <xref:System.Windows.Forms.ListBox> by setting the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property to the `OwnerDrawVariable` value and handling the <xref:System.Windows.Forms.ListBox.DrawItem> and <xref:System.Windows.Forms.ListBox.MeasureItem> events.</span></span> <span data-ttu-id="25086-163">Ilustruje też ustawienie <xref:System.Windows.Forms.ListBox.BorderStyle%2A> i <xref:System.Windows.Forms.ListBox.ScrollAlwaysVisible%2A> właściwości i za pomocą <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="25086-163">It also demonstrates setting the <xref:System.Windows.Forms.ListBox.BorderStyle%2A> and <xref:System.Windows.Forms.ListBox.ScrollAlwaysVisible%2A> properties and using the <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> method.</span></span>  
  
 <span data-ttu-id="25086-164">Aby uruchomić ten przykład, wkleić go do pusty formularz, który importuje <xref:System.Drawing> przestrzeni nazw i <xref:System.Windows.Forms> przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="25086-164">To run this example, paste it into an empty form that imports the <xref:System.Drawing> namespace and the <xref:System.Windows.Forms> namespace.</span></span> <span data-ttu-id="25086-165">Wywołaj `InitializeOwnerDrawnListBox` z konstruktora formularza lub `Load` metody.</span><span class="sxs-lookup"><span data-stu-id="25086-165">Call `InitializeOwnerDrawnListBox` from the form's constructor or `Load` method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Add(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListBox.ObjectCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListBox/ObjectCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.AddRange(System.Windows.Forms.ListBox.ObjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As ListBox.ObjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Windows::Forms::ListBox::ObjectCollection ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListBox.ObjectCollection -&gt; unit" Usage="objectCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListBox+ObjectCollection" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="25086-166">A <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> do załadowania do tej kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-166">A <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> to load into this collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25086-167">Dodaje elementy do istniejącego <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> do listy elementów w <see cref="T:System.Windows.Forms.ListBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-167">Adds the items of an existing <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> to the list of items in a <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25086-168">Jeśli <xref:System.Windows.Forms.ListBox.Sorted%2A> właściwość <xref:System.Windows.Forms.ListBox> ustawiono `true`, elementy są umieszczone na liście w kolejności alfabetycznej.</span><span class="sxs-lookup"><span data-stu-id="25086-168">If the <xref:System.Windows.Forms.ListBox.Sorted%2A> property of the <xref:System.Windows.Forms.ListBox> is set to `true`, the items are inserted into the list alphabetically.</span></span> <span data-ttu-id="25086-169">W przeciwnym razie elementy są wstawiane w kolejności występowania w tablicy.</span><span class="sxs-lookup"><span data-stu-id="25086-169">Otherwise, the items are inserted in the order that they occur within the array.</span></span> <span data-ttu-id="25086-170">Ta metoda jest zwykle przekazywany tablicę <xref:System.String> obiektów, ale tablica obiekty dowolnego typu może być przekazywany do tej metody.</span><span class="sxs-lookup"><span data-stu-id="25086-170">This method is typically passed an array of <xref:System.String> objects, but an array of any type of object can be passed to this method.</span></span> <span data-ttu-id="25086-171">Gdy obiekt zostanie dodany do kolekcji, <xref:System.Windows.Forms.ListBox> najpierw sprawdza, czy aby sprawdzić, czy <xref:System.Windows.Forms.ListControl.DisplayMember%2A> właściwość <xref:System.Windows.Forms.ListControl> klasy ma nazwę elementu członkowskiego w obiekcie określonym do odwołania podczas uzyskiwania tekstu elementu.</span><span class="sxs-lookup"><span data-stu-id="25086-171">When an object is added to the collection, the <xref:System.Windows.Forms.ListBox> first checks to see if the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property of the <xref:System.Windows.Forms.ListControl> class has the name of a member from the object specified to reference when obtaining the item text.</span></span> <span data-ttu-id="25086-172">Jeśli <xref:System.Windows.Forms.ListControl.DisplayMember%2A> właściwość nie ma członka, który został określony, <xref:System.Windows.Forms.ListBox> następnie wywołuje <xref:System.Object.ToString%2A> metody obiektu można uzyskać tekst do wyświetlenia na liście.</span><span class="sxs-lookup"><span data-stu-id="25086-172">If the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property does not have a member specified, the <xref:System.Windows.Forms.ListBox> then calls the <xref:System.Object.ToString%2A> method of the object to obtain the text to display in the list.</span></span>  
  
 <span data-ttu-id="25086-173">Przy użyciu tej metody, aby dodać elementy do <xref:System.Windows.Forms.ListBox>, nie trzeba wywoływać <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> i <xref:System.Windows.Forms.ListBox.EndUpdate%2A> metod w celu zoptymalizowania wydajności.</span><span class="sxs-lookup"><span data-stu-id="25086-173">When using this method to add items to the <xref:System.Windows.Forms.ListBox>, you do not need to call the <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> and <xref:System.Windows.Forms.ListBox.EndUpdate%2A> methods to optimize performance.</span></span> <span data-ttu-id="25086-174">Podczas dodawania elementów do <xref:System.Windows.Forms.ListBox>, jest bardziej wydajne elementy można sortować najpierw, a następnie dodaj nowe elementy.</span><span class="sxs-lookup"><span data-stu-id="25086-174">When adding items to a <xref:System.Windows.Forms.ListBox>, it is more efficient to sort the items first and then add new items.</span></span> <span data-ttu-id="25086-175">Ta metoda służy do ponownego użycia elementy przechowywane w innej <xref:System.Windows.Forms.ListBox>.</span><span class="sxs-lookup"><span data-stu-id="25086-175">You can use this method to reuse the items stored in a different <xref:System.Windows.Forms.ListBox>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Add(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="objectCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="25086-176">Usuwa wszystkie elementy z kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-176">Removes all items from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25086-177">Po usunięciu elementów z listy wszystkich informacji o usuniętych elementów zostaną utracone.</span><span class="sxs-lookup"><span data-stu-id="25086-177">When you remove items from the list, all information about the deleted items is lost.</span></span> <span data-ttu-id="25086-178">Aby usunąć pojedynczy element z <xref:System.Windows.Forms.ListBox>, użyj <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> lub <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="25086-178">To remove a single item from the <xref:System.Windows.Forms.ListBox>, use the <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> or <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool&#xA;override this.Contains : obj -&gt; bool" Usage="objectCollection.Contains value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="25086-179">Obiekt reprezentujący element do zlokalizowania w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-179">An object representing the item to locate in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25086-180">Określa, czy określony element znajduje się w tej kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-180">Determines whether the specified item is located within the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25086-181">
            <see langword="true" /> Jeśli element znajduje się w kolekcji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-181">
              <see langword="true" /> if the item is located within the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25086-182"><xref:System.Windows.Forms.ListBox.ObjectCollection.Contains%2A> Metody umożliwia określenie, czy obiekt jest członkiem kolekcji.</span><span class="sxs-lookup"><span data-stu-id="25086-182">The <xref:System.Windows.Forms.ListBox.ObjectCollection.Contains%2A> method enables you to determine whether an object is a member of the collection.</span></span> <span data-ttu-id="25086-183">Gdy wiesz, że element znajduje się w tej kolekcji, możesz użyć <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A> metodę, aby określić, gdzie element znajduje się w tej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="25086-183">Once you know that the item is located within the collection, you can use the <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A> method to determine where the item is located within the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="25086-184">
            <paramref name="value" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-184">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.IndexOf(System.Object)" />
        <altmember cref="M:System.Windows.Forms.ListBox.FindString(System.String)" />
        <altmember cref="M:System.Windows.Forms.ListBox.FindStringExact(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (object[] dest, int arrayIndex);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(object[] dest, int32 arrayIndex) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.CopyTo(System.Object[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (dest As Object(), arrayIndex As Integer)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Object ^&gt; ^ dest, int arrayIndex);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.CopyTo : obj[] * int -&gt; unit" Usage="objectCollection.CopyTo (dest, arrayIndex)" FrameworkAlternate="netframework-2.0" />
      <MemberSignature Language="C#" Value="public void CopyTo (object[] destination, int arrayIndex);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(object[] destination, int32 arrayIndex) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Object(), arrayIndex As Integer)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Object ^&gt; ^ destination, int arrayIndex);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.CopyTo : obj[] * int -&gt; unit" Usage="objectCollection.CopyTo (destination, arrayIndex)" FrameworkAlternate="netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Object[]" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="destination" Type="System.Object[]" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="arrayIndex" Type="System.Int32" Index="1" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="25086-185">Tablica obiektów, w którym elementy z kolekcji są kopiowane do.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-185">The object array in which the items from the collection are copied to.</span>
          </span>
        </param>
        <param name="dest">To be added.</param>
        <param name="arrayIndex">
          <span data-ttu-id="25086-186">Lokalizacja, w tablicy docelowej, aby skopiować elementy z kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-186">The location within the destination array to copy the items from the collection to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25086-187">Kopiuje całą kolekcję do istniejącej tablicy obiektów w określonej lokalizacji w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-187">Copies the entire collection into an existing array of objects at a specified location within the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25086-188">Ta metoda umożliwia łączenie elementów z wieloma kolekcjami w jedną.</span><span class="sxs-lookup"><span data-stu-id="25086-188">You can use this method to combine the items from multiple collections into a single array.</span></span> <span data-ttu-id="25086-189">Następnie można użyć tej tablicy, do wypełniania zawartość innego <xref:System.Windows.Forms.ListBox> sterować za pomocą <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> metody <xref:System.Windows.Forms.ListBox.ObjectCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="25086-189">You can then use this array to populate the contents of another <xref:System.Windows.Forms.ListBox> control using the <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ObjectCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.ListBox.ObjectCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25086-190">Pobiera liczbę elementów w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-190">Gets the number of items in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25086-191">Liczba elementów w kolekcji</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-191">The number of items in the collection</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25086-192">Ta właściwość umożliwia określenie liczby elementów w <xref:System.Windows.Forms.ListBox>.</span><span class="sxs-lookup"><span data-stu-id="25086-192">This property enables you to determine the number of items in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="25086-193">Następnie można użyć tej wartości, gdy są pętli wartości kolekcji należy podać liczbę iteracji do wykonania pętli.</span><span class="sxs-lookup"><span data-stu-id="25086-193">You can then use this value when you are looping through the values of the collection and you need to provide a number of iterations to perform the loop.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="objectCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="25086-194">Zwraca moduł wyliczający służące do iterowania po kolekcji elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-194">Returns an enumerator to use to iterate through the item collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25086-195">
            <see cref="T:System.Collections.IEnumerator" /> Reprezentujący kolekcji elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-195">An <see cref="T:System.Collections.IEnumerator" /> that represents the item collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : obj -&gt; int&#xA;override this.IndexOf : obj -&gt; int" Usage="objectCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="25086-196">Obiekt reprezentujący element do zlokalizowania w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-196">An object representing the item to locate in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25086-197">Zwraca indeks w kolekcji określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-197">Returns the index within the collection of the specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25086-198">Liczony od zera indeks, w którym element znajduje się w kolekcji; w przeciwnym razie wartość ujemną (-1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-198">The zero-based index where the item is located within the collection; otherwise, negative one (-1).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25086-199"><xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A> Metody umożliwia określenie, gdzie element znajduje się w tej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="25086-199">The <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A> method enables you to determine where an item is located within the collection.</span></span> <span data-ttu-id="25086-200">Aby określić, czy element znajduje się w obrębie kolekcji przed wywołaniem tej metody, należy użyć <xref:System.Windows.Forms.ListBox.ObjectCollection.Contains%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="25086-200">To determine whether an item is located within the collection before calling this method, use the <xref:System.Windows.Forms.ListBox.ObjectCollection.Contains%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="25086-201">
            <paramref name="value" /> Parametr ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-201">The <paramref name="value" /> parameter is null.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * obj -&gt; unit&#xA;override this.Insert : int * obj -&gt; unit" Usage="objectCollection.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="25086-202">Lokalizacja liczony od zera indeks polegający na wstawieniu elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-202">The zero-based index location where the item is inserted.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="25086-203">Obiekt reprezentujący element do wstawienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-203">An object representing the item to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25086-204">Wstawia element do pola listy w określonym indeksie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-204">Inserts an item into the list box at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25086-205">Ta metoda umożliwia wstawianie elementu na określonej pozycji w ciągu <xref:System.Windows.Forms.ListBox>.</span><span class="sxs-lookup"><span data-stu-id="25086-205">This method enables you to insert an item at a specific position within the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="25086-206">Jeśli <xref:System.Windows.Forms.ListBox.Sorted%2A> właściwość <xref:System.Windows.Forms.ListBox> jest ustawiona na wartość true, element jest dodawany w odpowiednich miejscach w posortowanej listy niezależnie od wartości określonej w `index` parametru.</span><span class="sxs-lookup"><span data-stu-id="25086-206">If the <xref:System.Windows.Forms.ListBox.Sorted%2A> property of the <xref:System.Windows.Forms.ListBox> is set to true, the item is added in the correct position within the sorted list regardless of the values specified in the `index` parameter.</span></span> <span data-ttu-id="25086-207">Gdy obiekt zostanie dodany do kolekcji, <xref:System.Windows.Forms.ListBox> najpierw sprawdza, czy aby sprawdzić, czy <xref:System.Windows.Forms.ListControl.DisplayMember%2A> właściwość <xref:System.Windows.Forms.ListControl> klasy ma nazwę elementu członkowskiego w obiekcie określonym do odwołania podczas uzyskiwania tekstu elementu.</span><span class="sxs-lookup"><span data-stu-id="25086-207">When an object is added to the collection, the <xref:System.Windows.Forms.ListBox> first checks to see if the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property of the <xref:System.Windows.Forms.ListControl> class has the name of a member from the object specified to reference when obtaining the item text.</span></span> <span data-ttu-id="25086-208">Jeśli <xref:System.Windows.Forms.ListControl.DisplayMember%2A> właściwość nie ma członka, który został określony, <xref:System.Windows.Forms.ListBox> następnie wywołuje <xref:System.Object.ToString%2A> metody obiektu można uzyskać tekst do wyświetlenia na liście.</span><span class="sxs-lookup"><span data-stu-id="25086-208">If the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property does not have a member specified, the <xref:System.Windows.Forms.ListBox> then calls the <xref:System.Object.ToString%2A> method of the object to obtain the text to display in the list.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="25086-209">
            <paramref name="index" /> Parametr jest mniejsza od zera lub większa niż wartość <see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" /> właściwość <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-209">The <paramref name="index" /> parameter is less than zero or greater than value of the <see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" /> property of the <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> class.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="25086-210">
            <paramref name="item" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-210">
              <paramref name="item" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ObjectCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.ListBox.ObjectCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25086-211">Pobiera wartość wskazującą, czy kolekcja jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-211">Gets a value indicating whether the collection is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25086-212">
            <see langword="true" /> Jeśli ta kolekcja jest tylko do odczytu. w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-212">
              <see langword="true" /> if this collection is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25086-213">Ta właściwość jest zawsze `false` dla tej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="25086-213">This property is always `false` for this collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ObjectCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Windows.Forms.ListBox.ObjectCollection.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="25086-214">Indeks elementu w kolekcji do pobrania lub ustawienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-214">The index of the item in the collection to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25086-215">Pobiera lub ustawia element pod określonym indeksem w tej kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-215">Gets or sets the item at the specified index within the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25086-216">Obiekt reprezentujący element znajdujący się w określonym indeksie kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-216">An object representing the item located at the specified index within the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25086-217">Ta metoda służy do uzyskiwania <xref:System.Windows.Forms.ListBox> elementu przechowywaną w określonej lokalizacji w tej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="25086-217">You can use this method to obtain the <xref:System.Windows.Forms.ListBox> item stored at a specific location within the collection.</span></span> <span data-ttu-id="25086-218">Aby określić indeks konkretny element w kolekcji, użyj <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="25086-218">To determine the index of a specific item within the collection, use the <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="25086-219">
            <paramref name="index" /> Parametru jest mniejsza od zera i mniejszy niż wartość <see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" /> właściwość <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-219">The <paramref name="index" /> parameter is less than zero or greater than or equal to the value of the <see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" /> property of the <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit&#xA;override this.Remove : obj -&gt; unit" Usage="objectCollection.Remove value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="25086-220">Obiekt reprezentujący element do usunięcia z kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-220">An object representing the item to remove from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25086-221">Usuwa określony obiekt z kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-221">Removes the specified object from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25086-222">Po usunięciu elementu z listy indeksów zmienić w przypadku kolejnych elementów na liście.</span><span class="sxs-lookup"><span data-stu-id="25086-222">When you remove an item from the list, the indexes change for subsequent items in the list.</span></span> <span data-ttu-id="25086-223">Wszystkie informacje o usunięty element zostanie usunięty.</span><span class="sxs-lookup"><span data-stu-id="25086-223">All information about the removed item is deleted.</span></span> <span data-ttu-id="25086-224">Aby usunąć określony element z listy, określając rzeczywisty element, aby usunąć z listy, można użyć tej metody.</span><span class="sxs-lookup"><span data-stu-id="25086-224">You can use this method to remove a specific item from the list by specifying the actual item to remove from the list.</span></span> <span data-ttu-id="25086-225">Aby określić indeks elementu do usunięcia, a nie sam element, należy użyć <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="25086-225">To specify the index of the item to remove instead of the item itself, use the <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> method.</span></span> <span data-ttu-id="25086-226">Aby usunąć wszystkie elementy z listy, należy użyć <xref:System.Windows.Forms.ListBox.ObjectCollection.Clear%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="25086-226">To remove all items from the list, use the <xref:System.Windows.Forms.ListBox.ObjectCollection.Clear%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Clear" />
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="objectCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="25086-227">Liczony od zera indeks elementu, który ma zostać usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-227">The zero-based index of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25086-228">Usuwa element o określonym indeksie kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-228">Removes the item at the specified index within the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25086-229">Po usunięciu elementu z listy indeksów zmienić w przypadku kolejnych elementów na liście.</span><span class="sxs-lookup"><span data-stu-id="25086-229">When you remove an item from the list, the indexes change for subsequent items in the list.</span></span> <span data-ttu-id="25086-230">Wszystkie informacje o usunięty element zostanie usunięty.</span><span class="sxs-lookup"><span data-stu-id="25086-230">All information about the removed item is deleted.</span></span> <span data-ttu-id="25086-231">Ta metoda służy do usuwania określonego elementu listy, określając indeks elementu do usunięcia z listy.</span><span class="sxs-lookup"><span data-stu-id="25086-231">You can use this method to remove a specific item from the list by specifying the index of the item to remove from the list.</span></span> <span data-ttu-id="25086-232">Aby określić element do usunięcia, a nie wskaźnik do elementu, użyj <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="25086-232">To specify the item to remove instead of the index to the item, use the <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> method.</span></span> <span data-ttu-id="25086-233">Aby usunąć wszystkie elementy z listy, należy użyć <xref:System.Windows.Forms.ListBox.ObjectCollection.Clear%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="25086-233">To remove all items from the list, use the <xref:System.Windows.Forms.ListBox.ObjectCollection.Clear%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="25086-234">Poniższy przykład kodu demonstruje sposób używania <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> właściwość o <xref:System.Windows.Forms.ListBox.TopIndex%2A> właściwości, aby przenieść aktualnie wybranego elementu do górnej części listy elementów w obszarze podglądu <xref:System.Windows.Forms.ListBox>.</span><span class="sxs-lookup"><span data-stu-id="25086-234">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> property with the <xref:System.Windows.Forms.ListBox.TopIndex%2A> property to move the currently selected item to the top of the list of items in the display area of the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="25086-235">Dalej pokazuje, jak i usuwanie elementów za pomocą <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> metody <xref:System.Windows.Forms.ListBox.ObjectCollection?displayProperty=nameWithType> klasy i jak wyczyścić wszystkie zaznaczenia elementu przy użyciu <xref:System.Windows.Forms.ListBox.ClearSelected%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="25086-235">The example further demonstrates how to remove items using the <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection?displayProperty=nameWithType> class, and how to clear all item selection using the <xref:System.Windows.Forms.ListBox.ClearSelected%2A> method.</span></span> <span data-ttu-id="25086-236">Kod najpierw Przenosi zaznaczony element w <xref:System.Windows.Forms.ListBox> na górze listy.</span><span class="sxs-lookup"><span data-stu-id="25086-236">The code first moves the currently selected item in the <xref:System.Windows.Forms.ListBox> to the top of the list.</span></span> <span data-ttu-id="25086-237">Następnie kod usuwa wszystkie elementy przed aktualnie wybranego elementu i czyści wszystkie wybory w <xref:System.Windows.Forms.ListBox>.</span><span class="sxs-lookup"><span data-stu-id="25086-237">The code then removes all items before the currently selected item and clears all selections in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="25086-238">W tym przykładzie wymaga, aby <xref:System.Windows.Forms.ListBox> zawierające elementy zostanie dodany do formularza, a element jest aktualnie wybrany w <xref:System.Windows.Forms.ListBox>.</span><span class="sxs-lookup"><span data-stu-id="25086-238">This example requires that a <xref:System.Windows.Forms.ListBox> containing items is added to a form and that an item is currently selected in the <xref:System.Windows.Forms.ListBox>.</span></span>  
  
 [!code-cpp[ListBox.SelectedIndex#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.SelectedIndex/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.SelectedIndex#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.SelectedIndex/CS/form1.cs#1)]
 [!code-vb[ListBox.SelectedIndex#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.SelectedIndex/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="25086-239">
            <paramref name="index" /> Parametru jest mniejsza od zera i mniejszy niż wartość <see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" /> właściwość <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-239">The <paramref name="index" /> parameter is less than zero or greater than or equal to the value of the <see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" /> property of the <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> class.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Clear" />
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array dest, int index);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array dest, int32 index) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (dest As Array, index As Integer) Implements ICollection.CopyTo" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ dest, int index) = System::Collections::ICollection::CopyTo;" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array destination, int index);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array destination, int32 index) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (destination As Array, index As Integer) Implements ICollection.CopyTo" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ destination, int index) = System::Collections::ICollection::CopyTo;" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="destination" Type="System.Array" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="index" Type="System.Int32" Index="1" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="25086-240">Jednowymiarowa tablica, która jest lokalizacją docelową elementów kopiowanych z <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-240">The one-dimensional array that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="25086-241">Tablica musi mieć indeksowane zaczynające od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-241">The array must have zero-based indexing.</span>
          </span>
        </param>
        <param name="dest">To be added.</param>
        <param name="index">
          <span data-ttu-id="25086-242">Rozpoczyna się od zera indeks w tablicy, w których kopiowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-242">The zero-based index in the array at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25086-243">Kopiuje elementy kolekcji do tablicy, zaczynając od określonego indeksu tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-243">Copies the elements of the collection to an array, starting at a particular array index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25086-244">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="25086-244">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="25086-245">Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.ListBox.ObjectCollection> wystąpienia jest rzutowany na <xref:System.Collections.ICollection> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="25086-245">It can be used only when the <xref:System.Windows.Forms.ListBox.ObjectCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <exception cref="T:System.ArrayTypeMismatchException">
          <span data-ttu-id="25086-246">Typ tablicy nie jest zgodny z elementami w <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-246">The array type is not compatible with the items in the <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ObjectCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25086-247">Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="P:System.Collections.ICollection.IsSynchronized" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-247">For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25086-248">
            <see langword="false" /> we wszystkich przypadkach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-248">
              <see langword="false" /> in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25086-249">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="25086-249">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="25086-250">Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.ListBox.ObjectCollection> wystąpienia jest rzutowany na <xref:System.Collections.ICollection> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="25086-250">It can be used only when the <xref:System.Windows.Forms.ListBox.ObjectCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ObjectCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25086-251">Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="P:System.Collections.ICollection.SyncRoot" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-251">For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25086-252">Obiekt, który może służyć do synchronizowania dostępu do <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-252">An object that can be used to synchronize access to the <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25086-253">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="25086-253">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="25086-254">Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.ListBox.ObjectCollection> wystąpienia jest rzutowany na <xref:System.Collections.ICollection> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="25086-254">It can be used only when the <xref:System.Windows.Forms.ListBox.ObjectCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (item As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ item) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="25086-255">Obiekt, który ma zostać dodany do <see cref="T:System.Windows.Forms.ListBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-255">The object to be added to the <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25086-256">Dodaje obiekt, do którego <see cref="T:System.Windows.Forms.ListBox" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-256">Adds an object to the <see cref="T:System.Windows.Forms.ListBox" /> class.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25086-257">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="25086-257">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="25086-258">Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.ListBox.ObjectCollection> wystąpienia jest rzutowany na <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="25086-258">It can be used only when the <xref:System.Windows.Forms.ListBox.ObjectCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="25086-259">
            <paramref name="item" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-259">
              <paramref name="item" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="25086-260">Bieżący <see cref="T:System.Windows.Forms.ListBox" /> ma źródła danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-260">The current <see cref="T:System.Windows.Forms.ListBox" /> has a data source.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="25086-261">Ma za mało miejsca zapisać nowy element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-261">There is insufficient space available to store the new item.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ObjectCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25086-262">Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="P:System.Collections.IList.IsFixedSize" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-262">For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25086-263">
            <see langword="true" /> we wszystkich przypadkach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25086-263">
              <see langword="true" /> in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25086-264">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="25086-264">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="25086-265">Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.ListBox.ObjectCollection> wystąpienia jest rzutowany na <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="25086-265">It can be used only when the <xref:System.Windows.Forms.ListBox.ObjectCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>