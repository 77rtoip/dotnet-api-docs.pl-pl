<Type Name="ListBox+IntegerCollection" FullName="System.Windows.Forms.ListBox+IntegerCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7c88af1d890157e2409e2712e5c36679962584d2" /><Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="11/09/2018" /><Meta Name="ms.locfileid" Value="51318078" /></Metadata><TypeSignature Language="C#" Value="public class ListBox.IntegerCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ListBox/IntegerCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListBox.IntegerCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListBox.IntegerCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ListBox::IntegerCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ListBox.IntegerCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="d9883-101">Reprezentuje kolekcję liczb całkowitych w <see cref="T:System.Windows.Forms.ListBox" />.</span><span class="sxs-lookup"><span data-stu-id="d9883-101">Represents a collection of integers in a <see cref="T:System.Windows.Forms.ListBox" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9883-102"><xref:System.Windows.Forms.ListBox.IntegerCollection> jest kolekcją posortowany, do której elementy są dołączane za pomocą <xref:System.Windows.Forms.ListBox.IntegerCollection.Add%2A> i <xref:System.Windows.Forms.ListBox.IntegerCollection.AddRange%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="d9883-102"><xref:System.Windows.Forms.ListBox.IntegerCollection> is a sorted collection to which items are appended by using the <xref:System.Windows.Forms.ListBox.IntegerCollection.Add%2A> and <xref:System.Windows.Forms.ListBox.IntegerCollection.AddRange%2A> methods.</span></span> <span data-ttu-id="d9883-103">Zduplikowane wartości są usuwane.</span><span class="sxs-lookup"><span data-stu-id="d9883-103">Duplicate values are removed.</span></span>  
  
 <span data-ttu-id="d9883-104"><xref:System.Windows.Forms.ListBox.IntegerCollection> Jest używana głównie w <xref:System.Windows.Forms.ListBox.CustomTabOffsets%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="d9883-104">The <xref:System.Windows.Forms.ListBox.IntegerCollection> is used mainly by the <xref:System.Windows.Forms.ListBox.CustomTabOffsets%2A> property.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntegerCollection (System.Windows.Forms.ListBox owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListBox owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.#ctor(System.Windows.Forms.ListBox)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListBox)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntegerCollection(System::Windows::Forms::ListBox ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ListBox.IntegerCollection : System.Windows.Forms.ListBox -&gt; System.Windows.Forms.ListBox.IntegerCollection" Usage="new System.Windows.Forms.ListBox.IntegerCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListBox" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="d9883-105"><see cref="T:System.Windows.Forms.ListBox" /> , Który jest właścicielem kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d9883-105">The <see cref="T:System.Windows.Forms.ListBox" /> that owns the collection.</span></span></param>
        <summary><span data-ttu-id="d9883-106">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="d9883-106">Initializes a new instance of the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9883-107">Nie można utworzyć wystąpienia <xref:System.Windows.Forms.ListBox.IntegerCollection> klasy bez skojarzenia z <xref:System.Windows.Forms.ListBox> kontroli.</span><span class="sxs-lookup"><span data-stu-id="d9883-107">You cannot create an instance of the <xref:System.Windows.Forms.ListBox.IntegerCollection> class without associating it with a <xref:System.Windows.Forms.ListBox> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.Add(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(int item);" />
      <MemberSignature Language="F#" Value="member this.Add : int -&gt; int" Usage="integerCollection.Add item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="d9883-108">Liczba całkowita, aby dodać je do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d9883-108">The integer to add to the collection.</span></span></param>
        <summary><span data-ttu-id="d9883-109">Unikatowa liczba całkowita są dodawane do kolekcji w kolejności posortowanej.</span><span class="sxs-lookup"><span data-stu-id="d9883-109">Adds a unique integer to the collection in sorted order.</span></span></summary>
        <returns><span data-ttu-id="d9883-110">Indeks dodanego elementu.</span><span class="sxs-lookup"><span data-stu-id="d9883-110">The index of the added item.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="d9883-111">Ma za mało miejsca zapisać nowy element.</span><span class="sxs-lookup"><span data-stu-id="d9883-111">There is insufficient space available to store the new item.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d9883-112">Dodaje grupę liczb całkowitych do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d9883-112">Adds a group of integers to the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (int[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(int32[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.AddRange(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;int&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.AddRange : int[] -&gt; unit" Usage="integerCollection.AddRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="items"><span data-ttu-id="d9883-113">Tablica liczb całkowitych do dodania do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d9883-113">The array of integers to add to the collection.</span></span></param>
        <summary><span data-ttu-id="d9883-114">Tablica liczb całkowitych są dodawane do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d9883-114">Adds an array of integers to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9883-115">Tablica liczb całkowitych jest dołączany do kolekcji, a duplikaty są usuwane z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d9883-115">The array of integers is appended to the collection, and duplicates are removed from the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListBox.IntegerCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListBox/IntegerCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.AddRange(System.Windows.Forms.ListBox.IntegerCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As ListBox.IntegerCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Windows::Forms::ListBox::IntegerCollection ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListBox.IntegerCollection -&gt; unit" Usage="integerCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListBox+IntegerCollection" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d9883-116"><see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> Można dodać do innej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d9883-116">The <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> to add to another collection.</span></span></param>
        <summary><span data-ttu-id="d9883-117">Dodaje zawartość do istniejącego <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> do innej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d9883-117">Adds the contents of an existing <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> to another collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9883-118">Zawartość istniejącego <xref:System.Windows.Forms.ListBox.IntegerCollection> są dołączane do bieżącej kolekcji, a duplikaty są usuwane z kolekcji połączone.</span><span class="sxs-lookup"><span data-stu-id="d9883-118">The contents of the existing <xref:System.Windows.Forms.ListBox.IntegerCollection> are appended to the current collection, and duplicates are removed from the combined collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="integerCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d9883-119">Usuwa wszystkie liczby całkowite z <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="d9883-119">Removes all integers from the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.IntegerCollection.Remove(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.Contains(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(int item);" />
      <MemberSignature Language="F#" Value="member this.Contains : int -&gt; bool" Usage="integerCollection.Contains item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="d9883-120">Liczba całkowita, aby wyszukać w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d9883-120">The integer to search for in the collection.</span></span></param>
        <summary><span data-ttu-id="d9883-121">Określa, czy określona liczba całkowita znajduje się w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d9883-121">Determines whether the specified integer is in the collection.</span></span></summary>
        <returns><span data-ttu-id="d9883-122"><see langword="true" /> Jeżeli określona liczba całkowita znajduje się w kolekcji; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d9883-122"><see langword="true" /> if the specified integer is in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9883-123">Użyj <xref:System.Windows.Forms.ListBox.IntegerCollection.Contains%2A> metodę pozwala ustalić, czy liczba całkowita jest elementem członkowskim <xref:System.Windows.Forms.ListBox.IntegerCollection>.</span><span class="sxs-lookup"><span data-stu-id="d9883-123">Use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Contains%2A> method to determine whether an integer is a member of the <xref:System.Windows.Forms.ListBox.IntegerCollection>.</span></span> <span data-ttu-id="d9883-124">Gdy wiesz, że element znajduje się w tej kolekcji, możesz użyć <xref:System.Windows.Forms.ListBox.IntegerCollection.IndexOf%2A> metodę, aby określić, gdzie element znajduje się w tej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d9883-124">Once you know that the item is located within the collection, you can use the <xref:System.Windows.Forms.ListBox.IntegerCollection.IndexOf%2A> method to determine where the item is located within the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array destination, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array destination, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ destination, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="integerCollection.CopyTo (destination, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="d9883-125">Tablica, do którego <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> jest kopiowany.</span><span class="sxs-lookup"><span data-stu-id="d9883-125">The array into which the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> is copied.</span></span></param>
        <param name="index"><span data-ttu-id="d9883-126">Lokalizacja w tablicy docelowej, do którego należy kopiować <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="d9883-126">The location within the destination array to which to copy the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></param>
        <summary><span data-ttu-id="d9883-127">Kopiuje cały <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> do istniejącej tablicy liczb całkowitych w określonej lokalizacji w tablicy.</span><span class="sxs-lookup"><span data-stu-id="d9883-127">Copies the entire <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> into an existing array of integers at a specified location within the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9883-128">Użyj <xref:System.Windows.Forms.ListBox.IntegerCollection.CopyTo%2A> metodę, aby połączyć liczb całkowitych z wieloma kolekcjami w jedną.</span><span class="sxs-lookup"><span data-stu-id="d9883-128">Use the <xref:System.Windows.Forms.ListBox.IntegerCollection.CopyTo%2A> method to combine the integers from multiple collections into a single array.</span></span> <span data-ttu-id="d9883-129">Następnie można użyć tej tablicy, do wypełniania zawartość innego <xref:System.Windows.Forms.ListBox> sterować za pomocą <xref:System.Windows.Forms.ListBox.IntegerCollection.AddRange%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="d9883-129">You can then use this array to populate the contents of another <xref:System.Windows.Forms.ListBox> control using the <xref:System.Windows.Forms.ListBox.IntegerCollection.AddRange%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.ListBox.IntegerCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9883-130">Pobiera liczbę wybranych elementów w <see cref="T:System.Windows.Forms.ListBox" />.</span><span class="sxs-lookup"><span data-stu-id="d9883-130">Gets the number of selected items in the <see cref="T:System.Windows.Forms.ListBox" />.</span></span></summary>
        <value><span data-ttu-id="d9883-131">Liczba wybranych elementów w <see cref="T:System.Windows.Forms.ListBox" />.</span><span class="sxs-lookup"><span data-stu-id="d9883-131">The number of selected items in the <see cref="T:System.Windows.Forms.ListBox" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9883-132">Użyj <xref:System.Windows.Forms.ListBox.IntegerCollection.Count%2A> właściwości, aby określić liczbę wybranych elementów w <xref:System.Windows.Forms.ListBox.IntegerCollection>.</span><span class="sxs-lookup"><span data-stu-id="d9883-132">Use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Count%2A> property to determine the number of selected items in the <xref:System.Windows.Forms.ListBox.IntegerCollection>.</span></span> <span data-ttu-id="d9883-133">Tej wartości można następnie użyć, gdy są pętli elementy należy podać liczbę iteracji do wykonania pętli.</span><span class="sxs-lookup"><span data-stu-id="d9883-133">You can then use this value when you are looping through the items and you need to provide a number of iterations to perform the loop.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.IndexOf(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(int item);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : int -&gt; int" Usage="integerCollection.IndexOf item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="d9883-134">Liczba całkowita, dla którego mają zostać pobrane indeksu.</span><span class="sxs-lookup"><span data-stu-id="d9883-134">The integer for which to retrieve the index.</span></span></param>
        <summary><span data-ttu-id="d9883-135">Pobiera indeks w <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> określonej liczby całkowitej.</span><span class="sxs-lookup"><span data-stu-id="d9883-135">Retrieves the index within the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> of the specified integer.</span></span></summary>
        <returns><span data-ttu-id="d9883-136">Liczony od zera indeks liczba całkowita w <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />; w przeciwnym razie wartość ujemną (-1).</span><span class="sxs-lookup"><span data-stu-id="d9883-136">The zero-based index of the integer in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />; otherwise, negative one (-1).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9883-137">Użyj <xref:System.Windows.Forms.ListBox.IntegerCollection.IndexOf%2A> metodę, aby określić, gdzie element znajduje się w tej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d9883-137">Use the <xref:System.Windows.Forms.ListBox.IntegerCollection.IndexOf%2A> method to determine where an item is located within the collection.</span></span> <span data-ttu-id="d9883-138">Aby określić, czy element znajduje się w obrębie kolekcji przed wywołaniem tej metody, należy użyć <xref:System.Windows.Forms.ListBox.IntegerCollection.Contains%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="d9883-138">To determine whether an item is located within the collection before calling this method, use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Contains%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public int this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int default[int] { int get(int index); void set(int index, int value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : int with get, set" Usage="System.Windows.Forms.ListBox.IntegerCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="d9883-139">Pozycja <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d9883-139">The position of the <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> in the collection.</span></span></param>
        <summary><span data-ttu-id="d9883-140">Pobiera lub ustawia <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> o określonym indeksie.</span><span class="sxs-lookup"><span data-stu-id="d9883-140">Gets or sets the <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> having the specified index.</span></span></summary>
        <value><span data-ttu-id="d9883-141">Wybrane <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> w określonej pozycji.</span><span class="sxs-lookup"><span data-stu-id="d9883-141">The selected <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> at the specified position.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.Remove(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (item As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(int item);" />
      <MemberSignature Language="F#" Value="member this.Remove : int -&gt; unit" Usage="integerCollection.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="d9883-142">Liczba całkowita, aby usunąć z <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="d9883-142">The integer to remove from the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></param>
        <summary><span data-ttu-id="d9883-143">Usuwa określoną liczbę całkowitą z <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="d9883-143">Removes the specified integer from the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9883-144">Po usunięciu całkowitą od <xref:System.Windows.Forms.ListBox.IntegerCollection>, indeksy zmiany dla kolejnych liczb całkowitych w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d9883-144">When you remove an integer from the <xref:System.Windows.Forms.ListBox.IntegerCollection>, the indexes change for subsequent integers in the collection.</span></span> <span data-ttu-id="d9883-145">Wszystkie informacje o całkowitą usunięte zostaną usunięte.</span><span class="sxs-lookup"><span data-stu-id="d9883-145">All information about the removed integer is deleted.</span></span> <span data-ttu-id="d9883-146">Możesz użyć <xref:System.Windows.Forms.ListBox.IntegerCollection.Remove%2A> metodę, aby usunąć określony element z listy, określając rzeczywisty element, aby usunąć z listy.</span><span class="sxs-lookup"><span data-stu-id="d9883-146">You can use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Remove%2A> method to remove a specific item from the list by specifying the actual item to remove from the list.</span></span> <span data-ttu-id="d9883-147">Aby określić indeks liczby całkowitej, aby usunąć zamiast liczby całkowitej, samego, użyj <xref:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="d9883-147">To specify the index of the integer to remove instead of the integer itself, use the <xref:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt%2A> method.</span></span>  
  
 <span data-ttu-id="d9883-148">Jeśli nie jest liczba całkowita <xref:System.Windows.Forms.ListBox.IntegerCollection>, ta metoda nie działa.</span><span class="sxs-lookup"><span data-stu-id="d9883-148">If the integer is not in the <xref:System.Windows.Forms.ListBox.IntegerCollection>, this method does nothing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="integerCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="d9883-149">Liczony od zera indeks liczby całkowitej do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="d9883-149">The zero-based index of the integer to remove.</span></span></param>
        <summary><span data-ttu-id="d9883-150">Usuwa całkowitą pod określonym indeksem z <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="d9883-150">Removes the integer at the specified index from the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9883-151">Po usunięciu całkowitą od <xref:System.Windows.Forms.ListBox.IntegerCollection>, indeksy zmiany dla kolejnych liczb całkowitych w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d9883-151">When you remove an integer from the <xref:System.Windows.Forms.ListBox.IntegerCollection>, the indexes change for subsequent integers in the collection.</span></span> <span data-ttu-id="d9883-152">Wszystkie informacje o całkowitą usunięte zostaną usunięte.</span><span class="sxs-lookup"><span data-stu-id="d9883-152">All information about the removed integer is deleted.</span></span> <span data-ttu-id="d9883-153">Możesz użyć <xref:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt%2A> metodę, aby usunąć określoną liczbę całkowitą z listy, określając indeksu liczby całkowitej, aby usunąć z listy.</span><span class="sxs-lookup"><span data-stu-id="d9883-153">You can use the <xref:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt%2A> method to remove a specific integer from the list by specifying the index of the integer to remove from the list.</span></span> <span data-ttu-id="d9883-154">Aby określić element do usunięcia, a nie wskaźnik do elementu, użyj <xref:System.Windows.Forms.ListBox.IntegerCollection.Remove%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="d9883-154">To specify the item to remove instead of the index to the item, use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Remove%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9883-155">Pobiera wartość wskazującą, czy jest zsynchronizowany dostęp do kolekcji (wątkowo).</span><span class="sxs-lookup"><span data-stu-id="d9883-155">Gets a value indicating whether access to the collection is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="d9883-156"><see langword="true" /> we wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="d9883-156"><see langword="true" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9883-157">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="d9883-157">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d9883-158">Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.ListBox.IntegerCollection> wystąpienia jest rzutowany na <xref:System.Collections.ICollection> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="d9883-158">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9883-159">Pobiera obiekt, który może służyć do synchronizowania dostępu do kolekcji kontrolek.</span><span class="sxs-lookup"><span data-stu-id="d9883-159">Gets an object that can be used to synchronize access to the collection of controls.</span></span></summary>
        <value><span data-ttu-id="d9883-160">Obiekt używany do synchronizacji do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d9883-160">The object used to synchronize to the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9883-161">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="d9883-161">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d9883-162">Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.ListBox.IntegerCollection> wystąpienia jest rzutowany na <xref:System.Collections.ICollection> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="d9883-162">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d9883-163">Pobiera wyliczenie wszystkich liczb całkowitych w <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="d9883-163">Retrieves an enumeration of all the integers in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></summary>
        <returns><span data-ttu-id="d9883-164"><see cref="T:System.Collections.IEnumerator" /> Dla <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="d9883-164">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9883-165">Ta metoda tworzy moduł wyliczający, który zawiera migawkę kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d9883-165">This method creates an enumerator that contains a snapshot of the collection.</span></span> <span data-ttu-id="d9883-166">Kolekcję można zmienić, zmieniając modułu wyliczającego; jednak wielu modułów wyliczających jednocześnie może uzyskiwać dostęp do tej samej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d9883-166">You can change the collection by changing the enumerator; however, multiple enumerators can simultaneously access the same collection.</span></span> <span data-ttu-id="d9883-167">Zmiana kolekcji (bezpośrednio lub za pośrednictwem innego modułu wyliczającego) może spowodować w związku z tym <xref:System.Collections.IEnumerator.Current%2A> lub <xref:System.Collections.IEnumerator.MoveNext%2A> do zgłoszenia wyjątku.</span><span class="sxs-lookup"><span data-stu-id="d9883-167">Changing the collection (either directly or through another enumerator) can thus cause <xref:System.Collections.IEnumerator.Current%2A> or <xref:System.Collections.IEnumerator.MoveNext%2A> to throw an exception.</span></span>  
  
 <span data-ttu-id="d9883-168">Dwa moduły wyliczające utworzone na podstawie tej samej kolekcji, w tym samym czasie może zawierać różnych migawek.</span><span class="sxs-lookup"><span data-stu-id="d9883-168">Two enumerators created from the same collection at the same time can contain different snapshots.</span></span>  
  
 <span data-ttu-id="d9883-169">Usunięcie obiektów z modułu wyliczającego powoduje również usunięcie ich z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d9883-169">Removing objects from the enumerator also removes them from the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="T:System.Collections.IEnumerator" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (item As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ item) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="d9883-170">Tabulator, aby dodać do <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="d9883-170">The tab stop to add to the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></param>
        <summary><span data-ttu-id="d9883-171">Tabulator są dodawane do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d9883-171">Adds a tab stop to the collection.</span></span></summary>
        <returns><span data-ttu-id="d9883-172">Indeks, w którym liczba całkowita został dodany do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d9883-172">The index at which the integer was added to the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9883-173">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="d9883-173">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d9883-174">Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.ListBox.IntegerCollection> wystąpienia jest rzutowany na <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="d9883-174">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d9883-175"><paramref name="item" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9883-175"><paramref name="item" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d9883-176"><paramref name="item" /> nie jest całkowita 32-bitowych.</span><span class="sxs-lookup"><span data-stu-id="d9883-176"><paramref name="item" /> is not an 32-bit signed integer.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="d9883-177">Brak wystarczającej ilości miejsca na przechowywanie nowego elementu w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d9883-177">There is insufficient space to store the new item in the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d9883-178">Czyści wszystkie tabulatory z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d9883-178">Clears all the tab stops from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9883-179">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="d9883-179">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d9883-180">Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.ListBox.IntegerCollection> wystąpienia jest rzutowany na <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="d9883-180">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (item As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ item) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="d9883-181">Tabulator, aby zlokalizować w <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="d9883-181">The tab stop to locate in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></param>
        <summary><span data-ttu-id="d9883-182">Określa, czy określony tabulatora znajduje się w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d9883-182">Determines whether the specified tab stop is in the collection.</span></span></summary>
        <returns><span data-ttu-id="d9883-183"><see langword="true" /> Jeśli element całkowitą znajduje się w IntegerCollection; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d9883-183"><see langword="true" /> if item is an integer located in the IntegerCollection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9883-184">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="d9883-184">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d9883-185">Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.ListBox.IntegerCollection> wystąpienia jest rzutowany na <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="d9883-185">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (item As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ item) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="d9883-186">Tabulator, aby zlokalizować w <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="d9883-186">The tab stop to locate in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></param>
        <summary><span data-ttu-id="d9883-187">Zwraca indeks określonej tabulatora w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d9883-187">Returns the index of the specified tab stop in the collection.</span></span></summary>
        <returns><span data-ttu-id="d9883-188">Liczony od zera indeks elementu, jeśli został znaleziony w <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />; w przeciwnym razie wartość -1.</span><span class="sxs-lookup"><span data-stu-id="d9883-188">The zero-based index of item if it was found in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9883-189">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="d9883-189">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d9883-190">Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.ListBox.IntegerCollection> wystąpienia jest rzutowany na <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="d9883-190">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="d9883-191">Liczony od zera indeks wartości powinien zostać wstawiony.</span><span class="sxs-lookup"><span data-stu-id="d9883-191">The zero-based index at which value should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="d9883-192">Obiekt do wstawienia do <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="d9883-192">The object to insert into the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></param>
        <summary><span data-ttu-id="d9883-193">Wstawia element do kolekcji pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="d9883-193">Inserts an item into the collection at a specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9883-194">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="d9883-194">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d9883-195">Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.ListBox.IntegerCollection> wystąpienia jest rzutowany na <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="d9883-195">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d9883-196">Zawsze generowany.</span><span class="sxs-lookup"><span data-stu-id="d9883-196">Always thrown.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9883-197">Pobiera wartość wskazującą, czy kolekcja o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="d9883-197">Gets a value indicating whether the collection has a fixed size.</span></span></summary>
        <value><span data-ttu-id="d9883-198"><see langword="true" /> we wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="d9883-198"><see langword="true" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9883-199">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="d9883-199">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d9883-200">Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.ListBox.IntegerCollection> wystąpienia jest rzutowany na <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="d9883-200">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9883-201">Pobiera wartość wskazującą, czy kolekcja jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="d9883-201">Gets a value indicating whether the collection is read-only.</span></span></summary>
        <value><span data-ttu-id="d9883-202"><see langword="false" /> we wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="d9883-202"><see langword="false" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9883-203">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="d9883-203">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d9883-204">Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.ListBox.IntegerCollection> wystąpienia jest rzutowany na <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="d9883-204">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="d9883-205">Liczony od zera indeks, który określa tabulatora, które można pobrać.</span><span class="sxs-lookup"><span data-stu-id="d9883-205">The zero-based index that specifies which tab stop to get.</span></span></param>
        <summary><span data-ttu-id="d9883-206">Pobiera lub ustawia pozycję tabulatora pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="d9883-206">Gets or sets the tab stop at the specified index.</span></span></summary>
        <value><span data-ttu-id="d9883-207">Tabulator, który jest przechowywany w określonej lokalizacji w <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="d9883-207">The tab stop that is stored at the specified location in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9883-208">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="d9883-208">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d9883-209">Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.ListBox.IntegerCollection> wystąpienia jest rzutowany na <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="d9883-209">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d9883-210">Obiekt nie jest liczbą całkowitą.</span><span class="sxs-lookup"><span data-stu-id="d9883-210">The object is not an integer.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d9883-211">Obiekt do dodania do <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="d9883-211">The object to add to the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></param>
        <summary><span data-ttu-id="d9883-212">Usuwa pierwsze wystąpienie elementu z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d9883-212">Removes the first occurrence of an item from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9883-213">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="d9883-213">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d9883-214">Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.ListBox.IntegerCollection> wystąpienia jest rzutowany na <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="d9883-214">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d9883-215">Zawsze generowany.</span><span class="sxs-lookup"><span data-stu-id="d9883-215">Always thrown.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="d9883-216">Indeks elementu do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="d9883-216">The index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="d9883-217">Usuwa element z określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="d9883-217">Removes the item at a specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9883-218">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="d9883-218">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d9883-219">Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.ListBox.IntegerCollection> wystąpienia jest rzutowany na <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="d9883-219">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d9883-220">Zawsze generowany.</span><span class="sxs-lookup"><span data-stu-id="d9883-220">Always thrown.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>