<Type Name="KeyEventArgs" FullName="System.Windows.Forms.KeyEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1be119e083a16f9c3ecd5d90463e590ed44a3df4" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48668794" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class KeyEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.KeyEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type KeyEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ae91a-101">Udostępnia dane dla <see cref="E:System.Windows.Forms.Control.KeyDown" /> lub <see cref="E:System.Windows.Forms.Control.KeyUp" /> zdarzeń.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ae91a-101">Provides data for the <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae91a-102">A <xref:System.Windows.Forms.KeyEventArgs>, określający klucza użytkownik naciśnięty i czy wszystkie klawisze modyfikujące (CTRL, ALT i SHIFT) zostały naciśnięte w tym samym czasie jest przekazywany z każdym <xref:System.Windows.Forms.Control.KeyDown> lub <xref:System.Windows.Forms.Control.KeyUp> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ae91a-102">A <xref:System.Windows.Forms.KeyEventArgs>, which specifies the key the user pressed and whether any modifier keys (CTRL, ALT, and SHIFT) were pressed at the same time, is passed with each <xref:System.Windows.Forms.Control.KeyDown> or <xref:System.Windows.Forms.Control.KeyUp> event.</span></span>  
  
 <span data-ttu-id="ae91a-103"><xref:System.Windows.Forms.Control.KeyDown> Zdarzenie występuje, gdy użytkownik naciśnie dowolny klawisz.</span><span class="sxs-lookup"><span data-stu-id="ae91a-103">The <xref:System.Windows.Forms.Control.KeyDown> event occurs when the user presses any key.</span></span> <span data-ttu-id="ae91a-104"><xref:System.Windows.Forms.Control.KeyUp> Zdarzenie występuje, gdy użytkownik zwolni klawisz.</span><span class="sxs-lookup"><span data-stu-id="ae91a-104">The <xref:System.Windows.Forms.Control.KeyUp> event occurs when the user releases the key.</span></span> <span data-ttu-id="ae91a-105">Duplikuj <xref:System.Windows.Forms.Control.KeyDown> zdarzenia występują każdorazowo klawisz się powtarza, jeśli klawisz jest wciśnięty, ale tylko jeden <xref:System.Windows.Forms.Control.KeyUp> zdarzenie jest generowane, gdy użytkownik zwolni klawisz.</span><span class="sxs-lookup"><span data-stu-id="ae91a-105">Duplicate <xref:System.Windows.Forms.Control.KeyDown> events occur each time the key repeats, if the key is held down, but only one <xref:System.Windows.Forms.Control.KeyUp> event is generated when the user releases the key.</span></span>  
  
 <span data-ttu-id="ae91a-106"><xref:System.Windows.Forms.Control.KeyPress> Również wystąpi zdarzenie po naciśnięciu klawisza.</span><span class="sxs-lookup"><span data-stu-id="ae91a-106">The <xref:System.Windows.Forms.Control.KeyPress> event also occurs when a key is pressed.</span></span> <span data-ttu-id="ae91a-107">A <xref:System.Windows.Forms.KeyPressEventArgs> jest przekazywany z każdym <xref:System.Windows.Forms.Control.KeyPress> zdarzenia i określa znak, który został utworzony w wyniku każdego naciśnięcie klawisza.</span><span class="sxs-lookup"><span data-stu-id="ae91a-107">A <xref:System.Windows.Forms.KeyPressEventArgs> is passed with each <xref:System.Windows.Forms.Control.KeyPress> event, and specifies the character that was composed as a result of each key press.</span></span>  
  
 <span data-ttu-id="ae91a-108">Aby uzyskać informacje na temat modelu zdarzeń, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="ae91a-108">For information about the event model, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ae91a-109">Poniższe przykłady kodu przedstawiają sposoby wykrywania stanu naciśnięcie klawisza.</span><span class="sxs-lookup"><span data-stu-id="ae91a-109">The following code examples demonstrate how to detect the state of a key press.</span></span>  
  
 <span data-ttu-id="ae91a-110">**Przykład 1**</span><span class="sxs-lookup"><span data-stu-id="ae91a-110">**Example 1**</span></span>  
  
 <span data-ttu-id="ae91a-111">Poniższy przykład kodu demonstruje sposób używania <xref:System.Windows.Forms.Control.KeyDown> zdarzenie z <xref:System.Windows.Forms.Help> klasy, aby wyświetlić styl rozwinięcia pomocy dla użytkownika aplikacji.</span><span class="sxs-lookup"><span data-stu-id="ae91a-111">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application.</span></span> <span data-ttu-id="ae91a-112">W przykładzie użyto <xref:System.Windows.Forms.KeyEventArgs> właściwości przekazywany do metody obsługi zdarzeń, aby odfiltrować wszystkie odmiany funkcji naciśnięcie klawisza F1, za pomocą klawisza modyfikującego.</span><span class="sxs-lookup"><span data-stu-id="ae91a-112">The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</span></span> <span data-ttu-id="ae91a-113">Gdy użytkownik naciśnie dowolnych wariantów F1, zawierającą wszystkie modyfikator klawiatury <xref:System.Windows.Forms.Help> klasy wyświetli okno wyskakujące, podobnie jak <xref:System.Windows.Forms.ToolTip>, w pobliżu formantu.</span><span class="sxs-lookup"><span data-stu-id="ae91a-113">When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control.</span></span> <span data-ttu-id="ae91a-114">Jeśli użytkownik naciśnie klawisz ALT + F2, różnych Pomoc podręczną jest wyświetlany z dodatkowymi informacjami.</span><span class="sxs-lookup"><span data-stu-id="ae91a-114">If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 <span data-ttu-id="ae91a-115">**Przykład 2**</span><span class="sxs-lookup"><span data-stu-id="ae91a-115">**Example 2**</span></span>  
  
 <span data-ttu-id="ae91a-116">Poniższy przykład określa, czy użytkownik nacisnął klawisz ALT + E, a wskaźnik myszy znajduje się nad <xref:System.Windows.Forms.TreeNode>, umożliwia użytkownikom edytowanie, <xref:System.Windows.Forms.TreeNode>.</span><span class="sxs-lookup"><span data-stu-id="ae91a-116">The following example determines whether the user pressed ALT+E, and if the mouse pointer is over a <xref:System.Windows.Forms.TreeNode>, allows the user to edit that <xref:System.Windows.Forms.TreeNode>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#3)]
 [!code-csharp[Windows.Forms.Control Members4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#3)]
 [!code-vb[Windows.Forms.Control Members4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#3)]  
  
 <span data-ttu-id="ae91a-117">**Przykład 3**</span><span class="sxs-lookup"><span data-stu-id="ae91a-117">**Example 3**</span></span>  
  
 <span data-ttu-id="ae91a-118">Poniższy przykład określa, czy użytkownik nacisnął klawisz kluczem nienumeryczne i jeśli tak, anuluje <xref:System.Windows.Forms.Control.KeyPress> zdarzeń za pomocą <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="ae91a-118">The following example determines whether the user pressed a non-numeric key, and if so, cancels the <xref:System.Windows.Forms.Control.KeyPress> event by using the <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> property.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
    <altmember cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
    <altmember cref="T:System.Windows.Forms.KeyPressEventArgs" />
    <altmember cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyEventArgs (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeyEventArgs.#ctor(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyData As Keys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyEventArgs(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.KeyEventArgs : System.Windows.Forms.Keys -&gt; System.Windows.Forms.KeyEventArgs" Usage="new System.Windows.Forms.KeyEventArgs keyData" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="ae91a-119">A <see cref="T:System.Windows.Forms.Keys" /> reprezentujący klucz, który został naciśnięty w połączeniu z dowolnego flagi modyfikatora, które wskazują zostały naciśnięte klawisze CTRL, SHIFT i ALT, w tym samym czasie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae91a-119">A <see cref="T:System.Windows.Forms.Keys" /> representing the key that was pressed, combined with any modifier flags that indicate which CTRL, SHIFT, and ALT keys were pressed at the same time.</span>
          </span>
          <span data-ttu-id="ae91a-120">Możliwe wartości są uzyskiwane stosować bitowe OR (|) operator, który ma być stałe od <see cref="T:System.Windows.Forms.Keys" /> wyliczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae91a-120">Possible values are obtained be applying the bitwise OR (|) operator to constants from the <see cref="T:System.Windows.Forms.Keys" /> enumeration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae91a-121">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.KeyEventArgs" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae91a-121">Initializes a new instance of the <see cref="T:System.Windows.Forms.KeyEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.KeyPressEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Alt">
      <MemberSignature Language="C#" Value="public virtual bool Alt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Alt" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Alt" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Alt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Alt { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Alt : bool" Usage="System.Windows.Forms.KeyEventArgs.Alt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ae91a-122">Pobiera wartość wskazującą, czy został naciśnięty klawisz ALT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae91a-122">Gets a value indicating whether the ALT key was pressed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ae91a-123">
            <see langword="true" /> Jeśli klawisz ALT został naciśnięty; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae91a-123">
              <see langword="true" /> if the ALT key was pressed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ae91a-124">**Przykład 1**</span><span class="sxs-lookup"><span data-stu-id="ae91a-124">**Example 1**</span></span>  
  
 <span data-ttu-id="ae91a-125">Poniższy przykład kodu demonstruje sposób używania <xref:System.Windows.Forms.Control.KeyDown> zdarzenie z <xref:System.Windows.Forms.Help> klasy, aby wyświetlić styl rozwinięcia pomocy dla użytkownika aplikacji.</span><span class="sxs-lookup"><span data-stu-id="ae91a-125">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application.</span></span> <span data-ttu-id="ae91a-126">W przykładzie użyto <xref:System.Windows.Forms.KeyEventArgs> właściwości przekazywany do metody obsługi zdarzeń, aby odfiltrować wszystkie odmiany funkcji naciśnięcie klawisza F1, za pomocą klawisza modyfikującego.</span><span class="sxs-lookup"><span data-stu-id="ae91a-126">The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</span></span> <span data-ttu-id="ae91a-127">Gdy użytkownik naciśnie dowolnych wariantów F1, zawierającą wszystkie modyfikator klawiatury <xref:System.Windows.Forms.Help> klasy wyświetli okno wyskakujące, podobnie jak <xref:System.Windows.Forms.ToolTip>, w pobliżu formantu.</span><span class="sxs-lookup"><span data-stu-id="ae91a-127">When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control.</span></span> <span data-ttu-id="ae91a-128">Jeśli użytkownik naciśnie klawisz ALT + F2, różnych Pomoc podręczną jest wyświetlany z dodatkowymi informacjami.</span><span class="sxs-lookup"><span data-stu-id="ae91a-128">If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 <span data-ttu-id="ae91a-129">**Przykład 2**</span><span class="sxs-lookup"><span data-stu-id="ae91a-129">**Example 2**</span></span>  
  
 <span data-ttu-id="ae91a-130">Poniższy przykład określa, czy użytkownik nacisnął klawisz ALT + E, a wskaźnik myszy znajduje się nad <xref:System.Windows.Forms.TreeNode>, umożliwia użytkownikom edytowanie, <xref:System.Windows.Forms.TreeNode>.</span><span class="sxs-lookup"><span data-stu-id="ae91a-130">The following example determines whether the user pressed ALT+E, and if the mouse pointer is over <xref:System.Windows.Forms.TreeNode>, allows the user to edit that <xref:System.Windows.Forms.TreeNode>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#3)]
 [!code-csharp[Windows.Forms.Control Members4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#3)]
 [!code-vb[Windows.Forms.Control Members4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Control" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Shift" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Modifiers" />
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="public bool Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Control" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Control" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Control As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Control { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Control : bool" Usage="System.Windows.Forms.KeyEventArgs.Control" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ae91a-131">Pobiera wartość wskazującą, czy został naciśnięty klawisz CTRL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae91a-131">Gets a value indicating whether the CTRL key was pressed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ae91a-132">
            <see langword="true" /> Jeśli klawisz CTRL został naciśnięty; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae91a-132">
              <see langword="true" /> if the CTRL key was pressed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ae91a-133">Poniższy przykład kodu demonstruje sposób używania <xref:System.Windows.Forms.Control.KeyDown> zdarzenie z <xref:System.Windows.Forms.Help> klasy, aby wyświetlić styl rozwinięcia pomocy dla użytkownika aplikacji.</span><span class="sxs-lookup"><span data-stu-id="ae91a-133">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application.</span></span> <span data-ttu-id="ae91a-134">W przykładzie użyto <xref:System.Windows.Forms.KeyEventArgs> właściwości przekazywany do metody obsługi zdarzeń, aby odfiltrować wszystkie odmiany funkcji naciśnięcie klawisza F1, za pomocą klawisza modyfikującego.</span><span class="sxs-lookup"><span data-stu-id="ae91a-134">The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</span></span> <span data-ttu-id="ae91a-135">Gdy użytkownik naciśnie dowolnych wariantów F1, zawierającą wszystkie modyfikator klawiatury <xref:System.Windows.Forms.Help> klasy wyświetli okno wyskakujące, podobnie jak <xref:System.Windows.Forms.ToolTip>, w pobliżu formantu.</span><span class="sxs-lookup"><span data-stu-id="ae91a-135">When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control.</span></span> <span data-ttu-id="ae91a-136">Jeśli użytkownik naciśnie klawisz ALT + F2, różnych Pomoc podręczną jest wyświetlany z dodatkowymi informacjami.</span><span class="sxs-lookup"><span data-stu-id="ae91a-136">If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Alt" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Shift" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Modifiers" />
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Handled : bool with get, set" Usage="System.Windows.Forms.KeyEventArgs.Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ae91a-137">Pobiera lub ustawia wartość wskazującą, czy zdarzenie został obsłużony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae91a-137">Gets or sets a value indicating whether the event was handled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ae91a-138">
            <see langword="true" /> Aby pominąć kontrolki domyślna obsługa; w przeciwnym razie <see langword="false" /> również przekazać zdarzenia wzdłuż na domyślny program obsługi sterowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae91a-138">
              <see langword="true" /> to bypass the control's default handling; otherwise, <see langword="false" /> to also pass the event along to the default control handler.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae91a-139"><xref:System.Windows.Forms.KeyEventArgs.Handled%2A> jest implementowane w inny sposób przez różne formanty w formularzach Windows.</span><span class="sxs-lookup"><span data-stu-id="ae91a-139"><xref:System.Windows.Forms.KeyEventArgs.Handled%2A> is implemented differently by different controls within Windows Forms.</span></span> <span data-ttu-id="ae91a-140">Dla formantów, takich jak <xref:System.Windows.Forms.TextBox> podklasami kontroluje natywny Win32, zostanie on zinterpretowany oznacza komunikat klucza nie powinny być przekazywane do podstawowych kontroli natywnych.</span><span class="sxs-lookup"><span data-stu-id="ae91a-140">For controls like <xref:System.Windows.Forms.TextBox> which subclass native Win32 controls, it is interpreted to mean that the key message should not be passed to the underlying native control.</span></span> <span data-ttu-id="ae91a-141">Jeśli ustawisz `Handled` na wartość TRUE <xref:System.Windows.Forms.TextBox>, formant nie przejdzie naciśnięcie klawisza `events` bazowego kontrolkę pola tekstowego Win32, ale będą nadal wyświetlana znaki, które wpisany przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="ae91a-141">If you set `Handled` to true on a <xref:System.Windows.Forms.TextBox>, that control will not pass the key press `events` to the underlying Win32 text box control, but it will still display the characters that the user typed.</span></span>  
  
 <span data-ttu-id="ae91a-142">Jeśli chcesz zapobiec odbieranie naciśnięcie klawisza, Użyj bieżącego formantu <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="ae91a-142">If you want to prevent the current control from receiving a key press, use the <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ae91a-143">Poniższy przykład określa, czy użytkownik nacisnął klawisz kluczem nienumeryczne i jeśli tak, anuluje <xref:System.Windows.Forms.Control.KeyPress> zdarzeń za pomocą <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="ae91a-143">The following example determines whether the user pressed a non-numeric key, and if so, cancels the <xref:System.Windows.Forms.Control.KeyPress> event by using the <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> property.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.SuppressKeyPress" />
      </Docs>
    </Member>
    <Member MemberName="KeyCode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Keys KeyCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Keys KeyCode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.KeyCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyCode As Keys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Keys KeyCode { System::Windows::Forms::Keys get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyCode : System.Windows.Forms.Keys" Usage="System.Windows.Forms.KeyEventArgs.KeyCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Keys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ae91a-144">Pobiera kod klawiatury <see cref="E:System.Windows.Forms.Control.KeyDown" /> lub <see cref="E:System.Windows.Forms.Control.KeyUp" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae91a-144">Gets the keyboard code for a <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ae91a-145">A <see cref="T:System.Windows.Forms.Keys" /> wartość, która jest kod klucza dla zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae91a-145">A <see cref="T:System.Windows.Forms.Keys" /> value that is the key code for the event.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ae91a-146">W poniższych przykładach kodu pokazano sposób użycia <xref:System.Windows.Forms.KeyEventArgs.KeyCode%2A> właściwości w celu określenia, który klawisz został naciśnięty.</span><span class="sxs-lookup"><span data-stu-id="ae91a-146">The following code examples show how to use the <xref:System.Windows.Forms.KeyEventArgs.KeyCode%2A> property to determine which key was pressed.</span></span>  
  
 <span data-ttu-id="ae91a-147">**Przykład 1**</span><span class="sxs-lookup"><span data-stu-id="ae91a-147">**Example 1**</span></span>  
  
 <span data-ttu-id="ae91a-148">Poniższy przykład kodu demonstruje sposób używania <xref:System.Windows.Forms.Control.KeyDown> zdarzenie z <xref:System.Windows.Forms.Help> klasy, aby wyświetlić styl rozwinięcia pomocy dla użytkownika aplikacji.</span><span class="sxs-lookup"><span data-stu-id="ae91a-148">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application.</span></span> <span data-ttu-id="ae91a-149">W przykładzie użyto <xref:System.Windows.Forms.KeyEventArgs> właściwości przekazywany do metody obsługi zdarzeń, aby odfiltrować wszystkie odmiany funkcji naciśnięcie klawisza F1, za pomocą klawisza modyfikującego.</span><span class="sxs-lookup"><span data-stu-id="ae91a-149">The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</span></span> <span data-ttu-id="ae91a-150">Gdy użytkownik naciśnie dowolnych wariantów F1, zawierającą wszystkie modyfikator klawiatury <xref:System.Windows.Forms.Help> klasy wyświetli okno wyskakujące, podobnie jak <xref:System.Windows.Forms.ToolTip>, w pobliżu formantu.</span><span class="sxs-lookup"><span data-stu-id="ae91a-150">When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control.</span></span> <span data-ttu-id="ae91a-151">Jeśli użytkownik naciśnie klawisz ALT + F2, różnych Pomoc podręczną jest wyświetlany z dodatkowymi informacjami.</span><span class="sxs-lookup"><span data-stu-id="ae91a-151">If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 <span data-ttu-id="ae91a-152">**Przykład 2**</span><span class="sxs-lookup"><span data-stu-id="ae91a-152">**Example 2**</span></span>  
  
 <span data-ttu-id="ae91a-153">Poniższy przykład określa, czy użytkownik nacisnął klawisz ALT + E, a wskaźnik myszy znajduje się nad <xref:System.Windows.Forms.TreeNode>, umożliwia użytkownikom edytowanie, <xref:System.Windows.Forms.TreeNode>.</span><span class="sxs-lookup"><span data-stu-id="ae91a-153">The following example determines whether the user pressed ALT+E, and if the mouse pointer is over a <xref:System.Windows.Forms.TreeNode>, allows the user to edit that <xref:System.Windows.Forms.TreeNode>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#3)]
 [!code-csharp[Windows.Forms.Control Members4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#3)]
 [!code-vb[Windows.Forms.Control Members4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#3)]  
  
 <span data-ttu-id="ae91a-154">**Przykład 3**</span><span class="sxs-lookup"><span data-stu-id="ae91a-154">**Example 3**</span></span>  
  
 <span data-ttu-id="ae91a-155">Poniższy przykład określa, czy użytkownik nacisnął klawisz kluczem nienumeryczne i jeśli tak, anuluje <xref:System.Windows.Forms.Control.KeyPress> zdarzeń za pomocą <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="ae91a-155">The following example determines whether the user pressed a non-numeric key, and if so, cancels the <xref:System.Windows.Forms.Control.KeyPress> event by using the <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> property.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyData" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyValue" />
      </Docs>
    </Member>
    <Member MemberName="KeyData">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Keys KeyData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Keys KeyData" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.KeyData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyData As Keys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Keys KeyData { System::Windows::Forms::Keys get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyData : System.Windows.Forms.Keys" Usage="System.Windows.Forms.KeyEventArgs.KeyData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Keys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ae91a-156">Pobiera dane klucza dla <see cref="E:System.Windows.Forms.Control.KeyDown" /> lub <see cref="E:System.Windows.Forms.Control.KeyUp" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae91a-156">Gets the key data for a <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ae91a-157">A <see cref="T:System.Windows.Forms.Keys" /> reprezentującą kod klucza dla klucza, który został naciśnięty w połączeniu z flagi modyfikatora, które wskazują, która kombinacja klawiszy CTRL, SHIFT i ALT został naciśnięty w tym samym czasie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae91a-157">A <see cref="T:System.Windows.Forms.Keys" /> representing the key code for the key that was pressed, combined with modifier flags that indicate which combination of CTRL, SHIFT, and ALT keys was pressed at the same time.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae91a-158">Możesz użyć stałe od <xref:System.Windows.Forms.Keys> do wyodrębnienia informacji z <xref:System.Windows.Forms.KeyEventArgs.KeyData%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="ae91a-158">You can use constants from <xref:System.Windows.Forms.Keys> to extract information from the <xref:System.Windows.Forms.KeyEventArgs.KeyData%2A> property.</span></span> <span data-ttu-id="ae91a-159">Bitowy operator AND umożliwia porównanie danych zwróconych przez <xref:System.Windows.Forms.KeyEventArgs.KeyData%2A> za pomocą stałych w <xref:System.Windows.Forms.Keys> do uzyskania informacji dotyczących kluczy użytkownik nacisnął klawisz.</span><span class="sxs-lookup"><span data-stu-id="ae91a-159">Use the bitwise AND operator to compare data returned by <xref:System.Windows.Forms.KeyEventArgs.KeyData%2A> with constants in <xref:System.Windows.Forms.Keys> to obtain information about which keys the user pressed.</span></span> <span data-ttu-id="ae91a-160">Aby określić, czy został naciśnięty klawisz modyfikujący określonego, użyj <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, i <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="ae91a-160">To determine whether a specific modifier key was pressed, use the <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, and <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ae91a-161">Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="ae91a-161">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="ae91a-162">W tym przykładzie program obsługi zdarzeń raporty w momencie wystąpienia <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ae91a-162">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="ae91a-163">Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu.</span><span class="sxs-lookup"><span data-stu-id="ae91a-163">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="ae91a-164">Aby zgłosić na wiele zdarzeń lub zdarzeń, które często występują, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączane wiadomość w wielowierszowym <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="ae91a-164">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="ae91a-165">Aby uruchomić przykładowy kod, wkleić go do projektu, który zawiera wystąpienie typu, który dziedziczy z <xref:System.Windows.Forms.Control>, takich jak <xref:System.Windows.Forms.Button> lub <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="ae91a-165">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="ae91a-166">Następnie nadaj nazwę wystąpienia `Control1` i upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ae91a-166">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#48](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#48)]
 [!code-vb[System.Windows.Forms.EventExamples#48](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#48)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyValue" />
      </Docs>
    </Member>
    <Member MemberName="KeyValue">
      <MemberSignature Language="C#" Value="public int KeyValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.KeyValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyValue As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int KeyValue { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyValue : int" Usage="System.Windows.Forms.KeyEventArgs.KeyValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ae91a-167">Pobiera wartość klawiatury <see cref="E:System.Windows.Forms.Control.KeyDown" /> lub <see cref="E:System.Windows.Forms.Control.KeyUp" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae91a-167">Gets the keyboard value for a <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ae91a-168">Reprezentacja liczby całkowitej dla <see cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae91a-168">The integer representation of the <see cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ae91a-169">Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="ae91a-169">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="ae91a-170">W tym przykładzie program obsługi zdarzeń raporty w momencie wystąpienia <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ae91a-170">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="ae91a-171">Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu.</span><span class="sxs-lookup"><span data-stu-id="ae91a-171">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="ae91a-172">Aby zgłosić na wiele zdarzeń lub zdarzeń, które często występują, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączane wiadomość w wielowierszowym <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="ae91a-172">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="ae91a-173">Aby uruchomić przykładowy kod, wkleić go do projektu, który zawiera wystąpienie typu, który dziedziczy z <xref:System.Windows.Forms.Control>, takich jak <xref:System.Windows.Forms.Button> lub <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="ae91a-173">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="ae91a-174">Następnie nadaj nazwę wystąpienia `Control1` i upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ae91a-174">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#48](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#48)]
 [!code-vb[System.Windows.Forms.EventExamples#48](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#48)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyData" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" />
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Keys Modifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Keys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modifiers As Keys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Keys Modifiers { System::Windows::Forms::Keys get(); };" />
      <MemberSignature Language="F#" Value="member this.Modifiers : System.Windows.Forms.Keys" Usage="System.Windows.Forms.KeyEventArgs.Modifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Keys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ae91a-175">Pobiera flagi modyfikatora <see cref="E:System.Windows.Forms.Control.KeyDown" /> lub <see cref="E:System.Windows.Forms.Control.KeyUp" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae91a-175">Gets the modifier flags for a <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span>
          </span>
          <span data-ttu-id="ae91a-176">Flagi wskazują, która kombinacja klawiszy CTRL, SHIFT i ALT został naciśnięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae91a-176">The flags indicate which combination of CTRL, SHIFT, and ALT keys was pressed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ae91a-177">A <see cref="T:System.Windows.Forms.Keys" /> reprezentującą flagi modyfikatora jeden lub więcej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae91a-177">A <see cref="T:System.Windows.Forms.Keys" /> value representing one or more modifier flags.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae91a-178">Aby określić, czy został naciśnięty klawisz modyfikujący określonego, użyj <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, i <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="ae91a-178">To determine whether a specific modifier key was pressed, use the <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, and <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> properties.</span></span> <span data-ttu-id="ae91a-179">Flagi modyfikatora może być łączone z bitowe OR.</span><span class="sxs-lookup"><span data-stu-id="ae91a-179">Modifier flags can be combined with bitwise OR.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ae91a-180">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.KeyEventArgs.Modifiers%2A> właściwości w celu określenia klawisze modyfikujące, które zostały naciśnięte wraz z kluczem podstawowym.</span><span class="sxs-lookup"><span data-stu-id="ae91a-180">The following code example shows how to use the <xref:System.Windows.Forms.KeyEventArgs.Modifiers%2A> property to determine which modifier keys were pressed along with the primary key.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Alt" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Control" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Shift" />
        <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
      </Docs>
    </Member>
    <Member MemberName="Shift">
      <MemberSignature Language="C#" Value="public virtual bool Shift { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Shift" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Shift" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Shift As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Shift { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Shift : bool" Usage="System.Windows.Forms.KeyEventArgs.Shift" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ae91a-181">Pobiera wartość wskazującą, czy klawisz SHIFT został naciśnięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae91a-181">Gets a value indicating whether the SHIFT key was pressed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ae91a-182">
            <see langword="true" /> Jeśli klawisz SHIFT został naciśnięty; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae91a-182">
              <see langword="true" /> if the SHIFT key was pressed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ae91a-183">Poniższy przykład określa, czy użytkownik nacisnął klawisz Shift przy użyciu klawisza F1, a jeśli tak, wyświetla Pomoc.</span><span class="sxs-lookup"><span data-stu-id="ae91a-183">The following example determines whether the user pressed the Shift key with the F1 key, and if so, displays help.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Alt" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Control" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Modifiers" />
      </Docs>
    </Member>
    <Member MemberName="SuppressKeyPress">
      <MemberSignature Language="C#" Value="public bool SuppressKeyPress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressKeyPress" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.SuppressKeyPress" />
      <MemberSignature Language="VB.NET" Value="Public Property SuppressKeyPress As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SuppressKeyPress { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SuppressKeyPress : bool with get, set" Usage="System.Windows.Forms.KeyEventArgs.SuppressKeyPress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ae91a-184">Pobiera lub ustawia wartość wskazującą, czy zdarzenie kluczy powinny być przekazywane do podstawowych kontroli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae91a-184">Gets or sets a value indicating whether the key event should be passed on to the underlying control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ae91a-185">
            <see langword="true" /> Jeśli kluczowych zdarzeń nie ma zostać odesłana do kontroli. w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae91a-185">
              <see langword="true" /> if the key event should not be sent to the control; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae91a-186">Możesz przypisać `true` do tej właściwości w obsłudze zdarzeń, takich jak <xref:System.Windows.Forms.Control.KeyDown> Aby uniknąć wprowadzenia danych przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="ae91a-186">You can assign `true` to this property in an event handler such as <xref:System.Windows.Forms.Control.KeyDown> in order to prevent user input.</span></span>  
  
 <span data-ttu-id="ae91a-187">Ustawienie <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> do `true` ustawia również <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> do `true`.</span><span class="sxs-lookup"><span data-stu-id="ae91a-187">Setting <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> to `true` also sets <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ae91a-188">Poniższy przykład kodu uniemożliwia osiągnięcie naciśnięć klawiszy numerycznych <xref:System.Windows.Forms.TextBox> formantu o nazwie `textBox1`.</span><span class="sxs-lookup"><span data-stu-id="ae91a-188">The following code example prevents numeric keystrokes from reaching the <xref:System.Windows.Forms.TextBox> control named `textBox1`.</span></span>  
  
 [!code-csharp[KeyEventArgs.SuppressKeyPress#1](~/samples/snippets/csharp/VS_Snippets_Winforms/keyeventargs.suppresskeypress/cs/form1.cs#1)]
 [!code-vb[KeyEventArgs.SuppressKeyPress#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/keyeventargs.suppresskeypress/vb/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Handled" />
      </Docs>
    </Member>
  </Members>
</Type>