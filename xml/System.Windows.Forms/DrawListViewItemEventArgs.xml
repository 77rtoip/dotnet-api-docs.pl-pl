<Type Name="DrawListViewItemEventArgs" FullName="System.Windows.Forms.DrawListViewItemEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="84dc221859f29df513ef4d9a3b25539c09dd79f5" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64210793" /></Metadata><TypeSignature Language="C#" Value="public class DrawListViewItemEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DrawListViewItemEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DrawListViewItemEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DrawListViewItemEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DrawListViewItemEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DrawListViewItemEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia dane dla <see cref="E:System.Windows.Forms.ListView.DrawItem" /> zdarzeń.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> Zdarzenie umożliwia dostosowanie wyglądu <xref:System.Windows.Forms.ListView> kontrolki przy użyciu Rysowanie przez właściciela.  
  
 <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> Wydarzenie jest podniesione przez <xref:System.Windows.Forms.ListView> decyduje o <xref:System.Windows.Forms.ListView.OwnerDraw%2A?displayProperty=nameWithType> właściwość jest ustawiona na `true`. <xref:System.Windows.Forms.DrawListViewItemEventArgs> Przekazany na zdarzenie obsługi zawiera informacje dotyczące <xref:System.Windows.Forms.ListViewItem> do rysowania i udostępnia również metody pomagające rysowania elementu.  
  
 Użyj <xref:System.Windows.Forms.DrawListViewItemEventArgs.State%2A> lub <xref:System.Windows.Forms.DrawListViewItemEventArgs.Item%2A> właściwości, aby pobrać informacje o elemencie, aby narysować. Użyj <xref:System.Windows.Forms.DrawListViewItemEventArgs.ItemIndex%2A?displayProperty=nameWithType> właściwość służąca do pobierania indeks elementu.  
  
 Użyj <xref:System.Windows.Forms.DrawListViewItemEventArgs.Graphics%2A> się tym rzeczywista z zakresu określonego przez właściwość <xref:System.Windows.Forms.DrawListViewItemEventArgs.Bounds%2A> właściwości. Aby narysować standard <xref:System.Windows.Forms.ListView> elementy, które nie są dostosowania, użyj <xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawBackground%2A>, <xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawText%2A>, i <xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawFocusRectangle%2A> metody.  
  
> [!NOTE]
>  Aby zapobiec problemom dotyczącym migotania grafiki, gdy właściciel rysowania, zastąpić <xref:System.Windows.Forms.ListView> i ustaw <xref:System.Windows.Forms.ListView.DoubleBuffered%2A> właściwość `true`. Ta funkcja jest dostępna tylko na Windows XP i rodziny Windows Server 2003 w przypadku, gdy Twoja aplikacja wywołuje <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób udostępniania Rysowanie niestandardowe dla <xref:System.Windows.Forms.ListView> kontroli. <xref:System.Windows.Forms.ListView> w przykładzie kontrolkę gradientu tła. Elementy podrzędne przy użyciu wartości ujemnych mają czerwone pierwszego planu i tła czarnego.  
  
 Program obsługi <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> zdarzeń rysuje tło całe elementy. Program obsługi <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzeń rysuje wartości tekstowe i tekst i tło podelementów, które mają wartości ujemnych. Program obsługi <xref:System.Windows.Forms.ListView.DrawColumnHeader> zdarzeń rysuje nagłówek każdej kolumny.  
  
 A <xref:System.Windows.Forms.ContextMenu> składnik zapewnia sposób przełączania widoku szczegółów i widok listy. W widoku listy tylko <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> jest wyzwalane zdarzenie. W tym przypadku tekstu i tła obu rysowania <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> programu obsługi zdarzeń.  
  
 [!code-csharp[ListViewOwnerDraw#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#1)]
 [!code-vb[ListViewOwnerDraw#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListView" />
    <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
    <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
    <altmember cref="T:System.Windows.Forms.ListViewItem" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawListViewItemEventArgs (System.Drawing.Graphics graphics, System.Windows.Forms.ListViewItem item, System.Drawing.Rectangle bounds, int itemIndex, System.Windows.Forms.ListViewItemStates state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Graphics graphics, class System.Windows.Forms.ListViewItem item, valuetype System.Drawing.Rectangle bounds, int32 itemIndex, valuetype System.Windows.Forms.ListViewItemStates state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawListViewItemEventArgs.#ctor(System.Drawing.Graphics,System.Windows.Forms.ListViewItem,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.ListViewItemStates)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawListViewItemEventArgs(System::Drawing::Graphics ^ graphics, System::Windows::Forms::ListViewItem ^ item, System::Drawing::Rectangle bounds, int itemIndex, System::Windows::Forms::ListViewItemStates state);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DrawListViewItemEventArgs : System.Drawing.Graphics * System.Windows.Forms.ListViewItem * System.Drawing.Rectangle * int * System.Windows.Forms.ListViewItemStates -&gt; System.Windows.Forms.DrawListViewItemEventArgs" Usage="new System.Windows.Forms.DrawListViewItemEventArgs (graphics, item, bounds, itemIndex, state)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.ListViewItemStates" />
      </Parameters>
      <Docs>
        <param name="graphics"><see cref="T:System.Drawing.Graphics" /> Na do rysowania.</param>
        <param name="item"><see cref="T:System.Windows.Forms.ListViewItem" /> Do rysowania.</param>
        <param name="bounds"><see cref="T:System.Drawing.Rectangle" /> w ramach którego do rysowania.</param>
        <param name="itemIndex">Indeks <see cref="T:System.Windows.Forms.ListViewItem" /> w ramach <see cref="P:System.Windows.Forms.ListView.Items" /> kolekcji.</param>
        <param name="state">Bitowa kombinacja <see cref="T:System.Windows.Forms.ListViewItemStates" /> wartości oznaczają bieżący stan <see cref="T:System.Windows.Forms.ListViewItem" /> do rysowania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.DrawListViewItemEventArgs" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewItemEventArgs.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.DrawListViewItemEventArgs.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera rozmiar i położenie <see cref="T:System.Windows.Forms.ListViewItem" /> do rysowania.</summary>
        <value>A <see cref="T:System.Drawing.Rectangle" /> reprezentujący granice <see cref="T:System.Windows.Forms.ListViewItem" /> do rysowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W lokalizacji określonej przez tę właściwość, jest określana względem lewy górny róg <xref:System.Windows.Forms.ListView> kontroli.  
  
 Aby pobrać granice dla określonej części <xref:System.Windows.Forms.ListViewItem>, użyj <xref:System.Windows.Forms.ListViewItem.GetBounds%2A?displayProperty=nameWithType> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Windows.Forms.DrawListViewItemEventArgs.Bounds%2A> właściwości w aplikacji, która zapewnia Rysowanie niestandardowe dla <xref:System.Windows.Forms.ListView> kontroli. W tym przykładzie program obsługi <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> zdarzeń rysuje tło całe elementy. We wszystkich widokach z wyjątkiem w widoku szczegółów tego programu obsługi rysuje tekst pierwszego planu. W widoku szczegółów tekst pierwszego planu jest rysowana <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzeń.  
  
 Aby uzyskać kompletny przykład, zobacz <xref:System.Windows.Forms.DrawListViewItemEventArgs> temat odwołania.  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.GetBounds(System.Windows.Forms.ItemBoundsPortion)" />
        <altmember cref="T:System.Drawing.Rectangle" />
      </Docs>
    </Member>
    <Member MemberName="DrawBackground">
      <MemberSignature Language="C#" Value="public void DrawBackground ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawBackground() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawListViewItemEventArgs.DrawBackground" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawBackground ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawBackground();" />
      <MemberSignature Language="F#" Value="member this.DrawBackground : unit -&gt; unit" Usage="drawListViewItemEventArgs.DrawBackground " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rysuje tło <see cref="T:System.Windows.Forms.ListViewItem" /> przy użyciu jego bieżącym kolorem tła.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do rysowania standardowego tła, który używa bieżącej wartości <xref:System.Windows.Forms.ListViewItem.BackColor%2A?displayProperty=nameWithType> właściwości. Tło jest rysowane w celu wypełnienia obszaru, który został określony przez <xref:System.Windows.Forms.DrawListViewItemEventArgs.Bounds%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Bounds" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="DrawDefault">
      <MemberSignature Language="C#" Value="public bool DrawDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DrawDefault" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewItemEventArgs.DrawDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property DrawDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DrawDefault { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DrawDefault : bool with get, set" Usage="System.Windows.Forms.DrawListViewItemEventArgs.DrawDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia właściwości wskazującą czy <see cref="T:System.Windows.Forms.ListView" /> kontrolka będzie używać domyślnego rysowania dla <see cref="T:System.Windows.Forms.ListViewItem" />.</summary>
        <value><see langword="true" /> Jeśli system rysuje element; <see langword="false" /> Jeśli program obsługi zdarzeń rysuje element. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustaw tę właściwość na `true` po elementu nie wymaga niestandardowego rysowania. Jest to przydatne, gdy trzeba dostosować tylko niektóre elementy w ramach kontrolki, na przykład wybrane elementy.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raporty w momencie wystąpienia <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu.  
  
 Aby uruchomić przykładowy kod, wkleić go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.ListView> o nazwie `ListView1`. Upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#471](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#471)]
 [!code-vb[System.Windows.Forms.EventExamples#471](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#471)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawFocusRectangle">
      <MemberSignature Language="C#" Value="public void DrawFocusRectangle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawFocusRectangle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawListViewItemEventArgs.DrawFocusRectangle" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawFocusRectangle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawFocusRectangle();" />
      <MemberSignature Language="F#" Value="member this.DrawFocusRectangle : unit -&gt; unit" Usage="drawListViewItemEventArgs.DrawFocusRectangle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rysuje prostokąt fokusu dla <see cref="T:System.Windows.Forms.ListViewItem" /> jeśli ma ona fokus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda ta jest przydatna w celu narysowania prostokąta standardowa fokus wokół wybranego elementu. Prostokąt fokusu jest zazwyczaj rysowany z zakresu określonego przez <xref:System.Windows.Forms.DrawListViewItemEventArgs.Bounds%2A> właściwości. Jeśli formant znajduje się w widoku szczegółów i <xref:System.Windows.Forms.ListView.FullRowSelect%2A?displayProperty=nameWithType> wartość właściwości jest `false`, jednak prostokąt fokusu jest rysowane wokół obszaru tekstu domyślnego dla pierwszej kolumny elementu.  
  
 Prostokąt fokusu zostanie wyświetlona tylko wtedy, gdy element ma fokus, więc nie trzeba sprawdzić stan aktywny elementu przed wywołaniem tej metody.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawFocusRectangle%2A> metody w aplikacji, która zapewnia Rysowanie niestandardowe dla <xref:System.Windows.Forms.ListView> kontroli. W tym przykładzie program obsługi <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> zdarzeń rysuje tło całe elementy. We wszystkich widokach z wyjątkiem w widoku szczegółów tego programu obsługi rysuje tekst pierwszego planu. W widoku szczegółów tekst pierwszego planu jest rysowana <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzeń.  
  
 Aby uzyskać kompletny przykład, zobacz <xref:System.Windows.Forms.DrawListViewItemEventArgs> temat odwołania.  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Bounds" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rysuje tekst <see cref="T:System.Windows.Forms.ListViewItem" /> przy użyciu jego bieżący kolor pierwszego planu i formatowanie domyślne.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public void DrawText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawListViewItemEventArgs.DrawText" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawText ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawText();" />
      <MemberSignature Language="F#" Value="member this.DrawText : unit -&gt; unit" Usage="drawListViewItemEventArgs.DrawText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rysuje tekst <see cref="T:System.Windows.Forms.ListViewItem" /> przy użyciu jego bieżący kolor pierwszego planu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma zostać narysowany element tekst przy użyciu bieżących wartości <xref:System.Windows.Forms.ListViewItem.ForeColor%2A?displayProperty=nameWithType> i <xref:System.Windows.Forms.ListViewItem.Font%2A?displayProperty=nameWithType> właściwości. Tekst jest rysowana z zakresu określonego przez <xref:System.Windows.Forms.DrawListViewItemEventArgs.Bounds%2A> właściwości. Można też rysować tekst ręcznie przy użyciu <xref:System.Drawing.Graphics> pobierane w drodze <xref:System.Windows.Forms.DrawListViewItemEventArgs.Graphics%2A> właściwości.  
  
 <xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawText%2A> Metoda jest najbardziej przydatna, gdy <xref:System.Windows.Forms.ListView.View%2A?displayProperty=nameWithType> właściwości jest równa wartości innych niż <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>. W widoku szczegółów, ta metoda rysuje tekst <xref:System.Windows.Forms.ListViewItem>, ale nie pobiera tekst dla podrzędnych. W związku z tym, w widoku szczegółów jest zazwyczaj bardziej wygodne wszystkie narysuj <xref:System.Windows.Forms.ListView> tekstu w obsłudze dla <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawText%2A> metody w aplikacji, która zapewnia Rysowanie niestandardowe dla <xref:System.Windows.Forms.ListView> kontroli. W tym przykładzie program obsługi <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> zdarzeń rysuje tło całe elementy. We wszystkich widokach z wyjątkiem w widoku szczegółów tego programu obsługi rysuje tekst pierwszego planu. W widoku szczegółów tekst pierwszego planu jest rysowana <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzeń.  
  
 Aby uzyskać kompletny przykład, zobacz <xref:System.Windows.Forms.DrawListViewItemEventArgs> temat odwołania.  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Bounds" />
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Graphics" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.Font" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public void DrawText (System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawText(valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawListViewItemEventArgs.DrawText(System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawText (flags As TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawText(System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="member this.DrawText : System.Windows.Forms.TextFormatFlags -&gt; unit" Usage="drawListViewItemEventArgs.DrawText flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="flags">Bitowa kombinacja <see cref="T:System.Windows.Forms.TextFormatFlags" /> wartości.</param>
        <summary>Rysuje tekst <see cref="T:System.Windows.Forms.ListViewItem" /> przy użyciu jego bieżący kolor pierwszego planu i formatowania z określonym <see cref="T:System.Windows.Forms.TextFormatFlags" /> wartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma zostać narysowany element tekst przy użyciu bieżących wartości <xref:System.Windows.Forms.ListViewItem.ForeColor%2A?displayProperty=nameWithType> i <xref:System.Windows.Forms.ListViewItem.Font%2A?displayProperty=nameWithType> właściwości. <xref:System.Windows.Forms.TextFormatFlags> Wartościom określonym w `flags` parametru umożliwiają zapewnienie właściwości formatowania dla węzła etykiety, takie jak wyrównanie tekstu. Tekst jest rysowana z zakresu określonego przez <xref:System.Windows.Forms.DrawListViewItemEventArgs.Bounds%2A> właściwości. Można też rysować tekst ręcznie przy użyciu <xref:System.Drawing.Graphics> pobierane w drodze <xref:System.Windows.Forms.DrawListViewItemEventArgs.Graphics%2A> właściwości.  
  
 <xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawText%2A> Metoda jest najbardziej przydatna, gdy <xref:System.Windows.Forms.ListView.View%2A?displayProperty=nameWithType> właściwości jest równa wartości innych niż <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>. W widoku szczegółów, ta metoda rysuje tekst <xref:System.Windows.Forms.ListViewItem>, ale nie pobiera tekst dla podrzędnych. W związku z tym, w widoku szczegółów jest zazwyczaj bardziej wygodne wszystkie narysuj <xref:System.Windows.Forms.ListView> tekstu w obsłudze dla <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzeń.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Bounds" />
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Graphics" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.Font" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ForeColor" />
        <altmember cref="T:System.Windows.Forms.TextFormatFlags" />
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewItemEventArgs.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Graphics : System.Drawing.Graphics" Usage="System.Windows.Forms.DrawListViewItemEventArgs.Graphics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Drawing.Graphics" /> używany do rysowania <see cref="T:System.Windows.Forms.ListViewItem" />.</summary>
        <value>A <see cref="T:System.Drawing.Graphics" /> używany do rysowania <see cref="T:System.Windows.Forms.ListViewItem" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Graphics> Klasa udostępnia właściwości i metody, które są przydatne do rysowania na urządzenia.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Windows.Forms.DrawListViewItemEventArgs.Graphics%2A> właściwości w aplikacji, która zapewnia Rysowanie niestandardowe dla <xref:System.Windows.Forms.ListView> kontroli. W tym przykładzie program obsługi <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> zdarzeń rysuje tło całe elementy. We wszystkich widokach z wyjątkiem w widoku szczegółów tego programu obsługi rysuje tekst pierwszego planu. W widoku szczegółów tekst pierwszego planu jest rysowana <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzeń.  
  
 Aby uzyskać kompletny przykład, zobacz <xref:System.Windows.Forms.DrawListViewItemEventArgs> temat odwołania.  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem Item { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem Item" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewItemEventArgs.Item" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItem ^ Item { System::Windows::Forms::ListViewItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Item : System.Windows.Forms.ListViewItem" Usage="System.Windows.Forms.DrawListViewItemEventArgs.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Windows.Forms.ListViewItem" /> do rysowania.</summary>
        <value><see cref="T:System.Windows.Forms.ListViewItem" /> Do rysowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy do uzyskania dostępu <xref:System.Windows.Forms.ListViewItem> do rysowania. To jest przydatne, gdy <xref:System.Windows.Forms.DrawListViewItemEventArgs.State%2A> właściwości dostarcza wystarczających informacji do własnych potrzeb. <xref:System.Windows.Forms.DrawListViewItemEventArgs.State%2A> Właściwość udostępnia tylko podstawowe informacje o stanie używanej, na przykład, aby ustalić, czy element jest wybrany, zaznaczone lub skupia się. <xref:System.Windows.Forms.DrawListViewItemEventArgs.Item%2A> Właściwości, z drugiej strony, zezwala na dostęp do wszystkich elementów członkowskich <xref:System.Windows.Forms.ListViewItem>. Musisz uzyskać dostęp elementu bezpośrednio, na przykład, aby narysować <xref:System.Windows.Forms.ListViewItem.Text%2A?displayProperty=nameWithType> wartość samodzielnie, zamiast używać <xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawText%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Windows.Forms.DrawListViewItemEventArgs.Item%2A> właściwości w aplikacji, która zapewnia Rysowanie niestandardowe dla <xref:System.Windows.Forms.ListView> kontroli. W tym przykładzie program obsługi <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> zdarzeń rysuje tło całe elementy. We wszystkich widokach z wyjątkiem w widoku szczegółów tego programu obsługi rysuje tekst pierwszego planu. W widoku szczegółów tekst pierwszego planu jest rysowana <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzeń.  
  
 Aby uzyskać kompletny przykład, zobacz <xref:System.Windows.Forms.DrawListViewItemEventArgs> temat odwołania.  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.DrawListViewItemEventArgs.DrawText" />
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.ItemIndex" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.Text" />
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.State" />
      </Docs>
    </Member>
    <Member MemberName="ItemIndex">
      <MemberSignature Language="C#" Value="public int ItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewItemEventArgs.ItemIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ItemIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemIndex : int" Usage="System.Windows.Forms.DrawListViewItemEventArgs.ItemIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera indeks <see cref="T:System.Windows.Forms.ListViewItem" /> w ramach <see cref="P:System.Windows.Forms.ListView.Items" /> kolekcji zawierającego <see cref="T:System.Windows.Forms.ListView" />.</summary>
        <value>Indeks <see cref="T:System.Windows.Forms.ListViewItem" /> w ramach <see cref="P:System.Windows.Forms.ListView.Items" /> kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raporty w momencie wystąpienia <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu.  
  
 Aby uruchomić przykładowy kod, wkleić go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.ListView> o nazwie `ListView1`. Upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#471](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#471)]
 [!code-vb[System.Windows.Forms.EventExamples#471](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#471)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="P:System.Windows.Forms.ListView.Items" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItemStates State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ListViewItemStates State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewItemEventArgs.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As ListViewItemStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItemStates State { System::Windows::Forms::ListViewItemStates get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Windows.Forms.ListViewItemStates" Usage="System.Windows.Forms.DrawListViewItemEventArgs.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItemStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący stan <see cref="T:System.Windows.Forms.ListViewItem" /> do rysowania.</summary>
        <value>Bitowa kombinacja <see cref="T:System.Windows.Forms.ListViewItemStates" /> wartości oznaczają bieżący stan <see cref="T:System.Windows.Forms.ListViewItem" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy do Sprawdź, czy <xref:System.Windows.Forms.ListViewItem> do rysowania znajduje się w określonym stanie. Ta właściwość zapewnia tylko podstawowe informacje o stanie elementu. Za pomocą tej właściwości, na przykład, czy element jest wybrany, zaznaczone czy fokus. Jeśli potrzebujesz dowiedzieć się więcej, należy pobrać elementu za pomocą <xref:System.Windows.Forms.DrawListViewItemEventArgs.Item%2A> właściwości i bezpośrednio sprawdzić jego właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Windows.Forms.DrawListViewItemEventArgs.State%2A> właściwości w aplikacji, która zapewnia Rysowanie niestandardowe dla <xref:System.Windows.Forms.ListView> kontroli. W tym przykładzie program obsługi <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> zdarzeń rysuje tło całe elementy. We wszystkich widokach z wyjątkiem w widoku szczegółów tego programu obsługi rysuje tekst pierwszego planu. W widoku szczegółów tekst pierwszego planu jest rysowana <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzeń.  
  
 Aby uzyskać kompletny przykład, zobacz <xref:System.Windows.Forms.DrawListViewItemEventArgs> temat odwołania.  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Item" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItemStates" />
      </Docs>
    </Member>
  </Members>
</Type>