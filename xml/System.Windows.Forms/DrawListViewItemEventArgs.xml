<Type Name="DrawListViewItemEventArgs" FullName="System.Windows.Forms.DrawListViewItemEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a33d26bd97fd75fc0e1ba43f4000d19efb8a5802" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30703571" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DrawListViewItemEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DrawListViewItemEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DrawListViewItemEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DrawListViewItemEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DrawListViewItemEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia dane dla <see cref="E:System.Windows.Forms.ListView.DrawItem" /> zdarzeń.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> Zdarzeń umożliwia dostosowanie wyglądu <xref:System.Windows.Forms.ListView> formantu przy użyciu Rysowanie przez właściciela.  
  
 <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> Zdarzenie jest wywoływane przez <xref:System.Windows.Forms.ListView> decyduje o <xref:System.Windows.Forms.ListView.OwnerDraw%2A?displayProperty=nameWithType> właściwość jest ustawiona na `true`. <xref:System.Windows.Forms.DrawListViewItemEventArgs> Przekazany obsługi zdarzenia zawiera informacje dotyczące <xref:System.Windows.Forms.ListViewItem> do rysowania i udostępnia również metody pomagające rysowania elementu.  
  
 Użyj <xref:System.Windows.Forms.DrawListViewItemEventArgs.State%2A> lub <xref:System.Windows.Forms.DrawListViewItemEventArgs.Item%2A> właściwości, aby pobrać informacje o elemencie do rysowania. Użyj <xref:System.Windows.Forms.DrawListViewItemEventArgs.ItemIndex%2A?displayProperty=nameWithType> właściwości do pobrania indeks elementu.  
  
 Użyj <xref:System.Windows.Forms.DrawListViewItemEventArgs.Graphics%2A> nie rzeczywista z zakresu określonego przez właściwość <xref:System.Windows.Forms.DrawListViewItemEventArgs.Bounds%2A> właściwości. Rysowanie standard <xref:System.Windows.Forms.ListView> elementy, które nie są dostosowania, użyj <xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawBackground%2A>, <xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawText%2A>, i <xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawFocusRectangle%2A> metody.  
  
> [!NOTE]
>  Aby uniknąć problemów z migotania grafiki, gdy właściciel rysowania, zastąpić <xref:System.Windows.Forms.ListView> kontroli oraz ustawić <xref:System.Windows.Forms.ListView.DoubleBuffered%2A> właściwości `true`. Ta funkcja jest dostępna tylko w systemie Windows XP i z rodziny Windows Server 2003, gdy aplikacja wywołuje <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak zapewnić Rysowanie niestandardowe dla <xref:System.Windows.Forms.ListView> formantu. <xref:System.Windows.Forms.ListView> Formant w przykładzie ma gradientu tła. Elementy podrzędne z wartości ujemnych ma red pierwszego planu i tła czarny.  
  
 Program obsługi <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> zdarzeń rysuje tła dla całego elementów. Program obsługi <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzeń rysuje wartości tekstowe i tekst i tło podelementy mają wartości ujemnych. Program obsługi <xref:System.Windows.Forms.ListView.DrawColumnHeader> zdarzeń rysuje każdy nagłówek kolumny.  
  
 A <xref:System.Windows.Forms.ContextMenu> składnika pozwala przełączać się między widoku szczegółów i widok listy. W widoku listy, tylko <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> zdarzenie jest wywoływane. W takim przypadku tła i tekstu zarówno rysowania <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> obsługi zdarzeń.  
  
 [!code-csharp[ListViewOwnerDraw#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#1)]
 [!code-vb[ListViewOwnerDraw#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListView" />
    <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
    <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
    <altmember cref="T:System.Windows.Forms.ListViewItem" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawListViewItemEventArgs (System.Drawing.Graphics graphics, System.Windows.Forms.ListViewItem item, System.Drawing.Rectangle bounds, int itemIndex, System.Windows.Forms.ListViewItemStates state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Graphics graphics, class System.Windows.Forms.ListViewItem item, valuetype System.Drawing.Rectangle bounds, int32 itemIndex, valuetype System.Windows.Forms.ListViewItemStates state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawListViewItemEventArgs.#ctor(System.Drawing.Graphics,System.Windows.Forms.ListViewItem,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.ListViewItemStates)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawListViewItemEventArgs(System::Drawing::Graphics ^ graphics, System::Windows::Forms::ListViewItem ^ item, System::Drawing::Rectangle bounds, int itemIndex, System::Windows::Forms::ListViewItemStates state);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.ListViewItemStates" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Powierzchni, na którym ma zostać narysowany.</param>
        <param name="item">
          <see cref="T:System.Windows.Forms.ListViewItem" /> Do rysowania.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> w ramach którego ma zostać narysowany.</param>
        <param name="itemIndex">Indeks <see cref="T:System.Windows.Forms.ListViewItem" /> w <see cref="P:System.Windows.Forms.ListView.Items" /> kolekcji.</param>
        <param name="state">Bitowe połączenie <see cref="T:System.Windows.Forms.ListViewItemStates" /> wartości wskazująca bieżący stan <see cref="T:System.Windows.Forms.ListViewItem" /> do rysowania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.DrawListViewItemEventArgs" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewItemEventArgs.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera rozmiar i położenie <see cref="T:System.Windows.Forms.ListViewItem" /> do rysowania.</summary>
        <value>A <see cref="T:System.Drawing.Rectangle" /> reprezentujący granice <see cref="T:System.Windows.Forms.ListViewItem" /> do rysowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lokalizacji określonej przez właściwość ta jest określana względem lewego górnego rogu <xref:System.Windows.Forms.ListView> formantu.  
  
 Można pobrać granice dla określonych fragmentów <xref:System.Windows.Forms.ListViewItem>, użyj <xref:System.Windows.Forms.ListViewItem.GetBounds%2A?displayProperty=nameWithType> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.DrawListViewItemEventArgs.Bounds%2A> właściwości w aplikacji, która zapewnia Rysowanie niestandardowe dla <xref:System.Windows.Forms.ListView> formantu. W tym przykładzie obsługi dla <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> zdarzeń rysuje tła dla całego elementów. We wszystkich widokach oprócz widoku szczegółów ten program obsługi rysuje tekst pierwszego planu. W widoku szczegółów tekst pierwszego planu jest rysowana <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzeń.  
  
 Aby uzyskać pełny przykład, zobacz <xref:System.Windows.Forms.DrawListViewItemEventArgs> temat odwołania.  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.GetBounds(System.Windows.Forms.ItemBoundsPortion)" />
        <altmember cref="T:System.Drawing.Rectangle" />
      </Docs>
    </Member>
    <Member MemberName="DrawBackground">
      <MemberSignature Language="C#" Value="public void DrawBackground ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawBackground() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawListViewItemEventArgs.DrawBackground" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawBackground ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawBackground();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tło jest rysowane <see cref="T:System.Windows.Forms.ListViewItem" /> przy użyciu jego bieżący kolor tła.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do rysowania standardowego tła, który używa bieżącej wartości <xref:System.Windows.Forms.ListViewItem.BackColor%2A?displayProperty=nameWithType> właściwości. Tło jest rysowane aby wypełnił obszar określony przez <xref:System.Windows.Forms.DrawListViewItemEventArgs.Bounds%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Bounds" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="DrawDefault">
      <MemberSignature Language="C#" Value="public bool DrawDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DrawDefault" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewItemEventArgs.DrawDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property DrawDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DrawDefault { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia właściwości wskazującą czy <see cref="T:System.Windows.Forms.ListView" /> kontrolka będzie używać domyślnego rysowania dla <see cref="T:System.Windows.Forms.ListViewItem" />.</summary>
        <value>
          <see langword="true" /> Jeśli system rysuje elementu; <see langword="false" /> Jeśli element rysuje programu obsługi zdarzeń. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest ustawiana `true` po elemencie nie wymaga Rysowanie niestandardowe. Jest to przydatne, gdy trzeba dostosować tylko niektóre elementy wewnątrz formantu, takie jak wybrane elementy.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.ListView> o nazwie `ListView1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#471](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#471)]
 [!code-vb[System.Windows.Forms.EventExamples#471](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#471)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawFocusRectangle">
      <MemberSignature Language="C#" Value="public void DrawFocusRectangle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawFocusRectangle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawListViewItemEventArgs.DrawFocusRectangle" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawFocusRectangle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawFocusRectangle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rysuje prostokąt fokusu dla <see cref="T:System.Windows.Forms.ListViewItem" /> Jeśli fokus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, aby narysować prostokąt fokusu standardowe wokół elementu. Prostokąt fokusu zwykle jest rysowany z zakresu określonego przez <xref:System.Windows.Forms.DrawListViewItemEventArgs.Bounds%2A> właściwości. Jeśli kontrolka znajduje się w widoku szczegółów i <xref:System.Windows.Forms.ListView.FullRowSelect%2A?displayProperty=nameWithType> wartość właściwości jest `false`, jednak prostokąt fokusu jest rysowany wokół tekstu domyślny obszar dla pierwszej kolumny elementu.  
  
 Prostokąt fokusu zostanie wyświetlona tylko wtedy, gdy element ma fokus, dzięki czemu nie trzeba sprawdzić stan aktywny elementu przed wywołaniem tej metody.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawFocusRectangle%2A> w aplikacji, która zapewnia Rysowanie niestandardowe dla metody <xref:System.Windows.Forms.ListView> formantu. W tym przykładzie obsługi dla <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> zdarzeń rysuje tła dla całego elementów. We wszystkich widokach oprócz widoku szczegółów ten program obsługi rysuje tekst pierwszego planu. W widoku szczegółów tekst pierwszego planu jest rysowana <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzeń.  
  
 Aby uzyskać pełny przykład, zobacz <xref:System.Windows.Forms.DrawListViewItemEventArgs> temat odwołania.  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Bounds" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rysuje tekst <see cref="T:System.Windows.Forms.ListViewItem" /> przy użyciu jego bieżący kolor pierwszego planu i formatowanie domyślne.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public void DrawText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawListViewItemEventArgs.DrawText" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawText ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rysuje tekst <see cref="T:System.Windows.Forms.ListViewItem" /> przy użyciu jego bieżący kolor pierwszego planu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do pisania tekstu elementu za pomocą bieżącej wartości <xref:System.Windows.Forms.ListViewItem.ForeColor%2A?displayProperty=nameWithType> i <xref:System.Windows.Forms.ListViewItem.Font%2A?displayProperty=nameWithType> właściwości. Tekst jest rysowany z zakresu określonego przez <xref:System.Windows.Forms.DrawListViewItemEventArgs.Bounds%2A> właściwości. Można również Rysuj tekst ręcznie przy użyciu <xref:System.Drawing.Graphics> pobierane w drodze <xref:System.Windows.Forms.DrawListViewItemEventArgs.Graphics%2A> właściwości.  
  
 <xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawText%2A> Metoda jest najbardziej przydatna, gdy <xref:System.Windows.Forms.ListView.View%2A?displayProperty=nameWithType> wartość właściwości jest równa wartości innych niż <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>. W widoku szczegółów, ta metoda rysuje tekst <xref:System.Windows.Forms.ListViewItem>, ale nie pobiera tekst podelementy. Dlatego w widoku szczegółów jest zazwyczaj wygodniejsze do rysowania wszystkie <xref:System.Windows.Forms.ListView> tekstu w procedurze obsługi dla <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawText%2A> w aplikacji, która zapewnia Rysowanie niestandardowe dla metody <xref:System.Windows.Forms.ListView> formantu. W tym przykładzie obsługi dla <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> zdarzeń rysuje tła dla całego elementów. We wszystkich widokach oprócz widoku szczegółów ten program obsługi rysuje tekst pierwszego planu. W widoku szczegółów tekst pierwszego planu jest rysowana <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzeń.  
  
 Aby uzyskać pełny przykład, zobacz <xref:System.Windows.Forms.DrawListViewItemEventArgs> temat odwołania.  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Bounds" />
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Graphics" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.Font" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public void DrawText (System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawText(valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawListViewItemEventArgs.DrawText(System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawText (flags As TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawText(System::Windows::Forms::TextFormatFlags flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="flags">Bitowe połączenie <see cref="T:System.Windows.Forms.TextFormatFlags" /> wartości.</param>
        <summary>Rysuje tekst <see cref="T:System.Windows.Forms.ListViewItem" /> przy użyciu jego bieżący kolor pierwszego planu i formatowania go z określonym <see cref="T:System.Windows.Forms.TextFormatFlags" /> wartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do pisania tekstu elementu za pomocą bieżącej wartości <xref:System.Windows.Forms.ListViewItem.ForeColor%2A?displayProperty=nameWithType> i <xref:System.Windows.Forms.ListViewItem.Font%2A?displayProperty=nameWithType> właściwości. <xref:System.Windows.Forms.TextFormatFlags> Wartości określonej w `flags` parametru umożliwiają zapewnienie właściwości formatowania dla etykiety, węzła, takie jak wyrównanie tekstu. Tekst jest rysowany z zakresu określonego przez <xref:System.Windows.Forms.DrawListViewItemEventArgs.Bounds%2A> właściwości. Można również Rysuj tekst ręcznie przy użyciu <xref:System.Drawing.Graphics> pobierane w drodze <xref:System.Windows.Forms.DrawListViewItemEventArgs.Graphics%2A> właściwości.  
  
 <xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawText%2A> Metoda jest najbardziej przydatna, gdy <xref:System.Windows.Forms.ListView.View%2A?displayProperty=nameWithType> wartość właściwości jest równa wartości innych niż <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>. W widoku szczegółów, ta metoda rysuje tekst <xref:System.Windows.Forms.ListViewItem>, ale nie pobiera tekst podelementy. Dlatego w widoku szczegółów jest zazwyczaj wygodniejsze do rysowania wszystkie <xref:System.Windows.Forms.ListView> tekstu w procedurze obsługi dla <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzeń.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Bounds" />
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Graphics" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.Font" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ForeColor" />
        <altmember cref="T:System.Windows.Forms.TextFormatFlags" />
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewItemEventArgs.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Drawing.Graphics" /> używany do rysowania <see cref="T:System.Windows.Forms.ListViewItem" />.</summary>
        <value>A <see cref="T:System.Drawing.Graphics" /> używany do rysowania <see cref="T:System.Windows.Forms.ListViewItem" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Graphics> Klasa udostępnia właściwości i metody, które są przydatne do rysowania na urządzenia.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.DrawListViewItemEventArgs.Graphics%2A> właściwości w aplikacji, która zapewnia Rysowanie niestandardowe dla <xref:System.Windows.Forms.ListView> formantu. W tym przykładzie obsługi dla <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> zdarzeń rysuje tła dla całego elementów. We wszystkich widokach oprócz widoku szczegółów ten program obsługi rysuje tekst pierwszego planu. W widoku szczegółów tekst pierwszego planu jest rysowana <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzeń.  
  
 Aby uzyskać pełny przykład, zobacz <xref:System.Windows.Forms.DrawListViewItemEventArgs> temat odwołania.  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem Item { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem Item" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewItemEventArgs.Item" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItem ^ Item { System::Windows::Forms::ListViewItem ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Windows.Forms.ListViewItem" /> do rysowania.</summary>
        <value>
          <see cref="T:System.Windows.Forms.ListViewItem" /> Do rysowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy do uzyskania dostępu <xref:System.Windows.Forms.ListViewItem> do rysowania. Jest to przydatne podczas <xref:System.Windows.Forms.DrawListViewItemEventArgs.State%2A> właściwość nie ma wystarczających informacji do własnych potrzeb. <xref:System.Windows.Forms.DrawListViewItemEventArgs.State%2A> Właściwość zapewnia tylko podstawowe informacje o stanie pomocne, na przykład, aby ustalić, czy element jest wybrany, zaznaczone lub fokus. <xref:System.Windows.Forms.DrawListViewItemEventArgs.Item%2A> Właściwości, z drugiej strony, zezwala na dostęp do wszystkich elementów członkowskich <xref:System.Windows.Forms.ListViewItem>. Należy uruchomić element bezpośrednio, na przykład do rysowania <xref:System.Windows.Forms.ListViewItem.Text%2A?displayProperty=nameWithType> wartość samodzielnie zamiast <xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawText%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.DrawListViewItemEventArgs.Item%2A> właściwości w aplikacji, która zapewnia Rysowanie niestandardowe dla <xref:System.Windows.Forms.ListView> formantu. W tym przykładzie obsługi dla <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> zdarzeń rysuje tła dla całego elementów. We wszystkich widokach oprócz widoku szczegółów ten program obsługi rysuje tekst pierwszego planu. W widoku szczegółów tekst pierwszego planu jest rysowana <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzeń.  
  
 Aby uzyskać pełny przykład, zobacz <xref:System.Windows.Forms.DrawListViewItemEventArgs> temat odwołania.  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.DrawListViewItemEventArgs.DrawText" />
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.ItemIndex" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.Text" />
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.State" />
      </Docs>
    </Member>
    <Member MemberName="ItemIndex">
      <MemberSignature Language="C#" Value="public int ItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewItemEventArgs.ItemIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ItemIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera indeks <see cref="T:System.Windows.Forms.ListViewItem" /> w <see cref="P:System.Windows.Forms.ListView.Items" /> zbiór zawierający <see cref="T:System.Windows.Forms.ListView" />.</summary>
        <value>Indeks <see cref="T:System.Windows.Forms.ListViewItem" /> w <see cref="P:System.Windows.Forms.ListView.Items" /> kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.ListView> o nazwie `ListView1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#471](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#471)]
 [!code-vb[System.Windows.Forms.EventExamples#471](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#471)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="P:System.Windows.Forms.ListView.Items" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItemStates State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ListViewItemStates State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewItemEventArgs.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As ListViewItemStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItemStates State { System::Windows::Forms::ListViewItemStates get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItemStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący stan <see cref="T:System.Windows.Forms.ListViewItem" /> do rysowania.</summary>
        <value>Bitowe połączenie <see cref="T:System.Windows.Forms.ListViewItemStates" /> wartości wskazująca bieżący stan <see cref="T:System.Windows.Forms.ListViewItem" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej właściwości, aby sprawdzić czy <xref:System.Windows.Forms.ListViewItem> do rysowania znajduje się w określonym stanie. Ta właściwość zapewnia tylko podstawowe informacje o stanie dotyczące pozycji. Tej właściwości, na przykład służy do sprawdzenia, czy element jest wybrany, zaznaczone, fokus. Jeśli potrzebujesz dowiedzieć się więcej, należy pobrać elementu za pomocą <xref:System.Windows.Forms.DrawListViewItemEventArgs.Item%2A> właściwości i sprawdź jej właściwości bezpośrednio.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.DrawListViewItemEventArgs.State%2A> właściwości w aplikacji, która zapewnia Rysowanie niestandardowe dla <xref:System.Windows.Forms.ListView> formantu. W tym przykładzie obsługi dla <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> zdarzeń rysuje tła dla całego elementów. We wszystkich widokach oprócz widoku szczegółów ten program obsługi rysuje tekst pierwszego planu. W widoku szczegółów tekst pierwszego planu jest rysowana <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzeń.  
  
 Aby uzyskać pełny przykład, zobacz <xref:System.Windows.Forms.DrawListViewItemEventArgs> temat odwołania.  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Item" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItemStates" />
      </Docs>
    </Member>
  </Members>
</Type>