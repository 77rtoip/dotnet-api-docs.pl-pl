<Type Name="DrawListViewItemEventArgs" FullName="System.Windows.Forms.DrawListViewItemEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2a5e81e4ae97157c4df3c9628b1fe7449a0e1641" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69189491" /></Metadata><TypeSignature Language="C#" Value="public class DrawListViewItemEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DrawListViewItemEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DrawListViewItemEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DrawListViewItemEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DrawListViewItemEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DrawListViewItemEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Dostarcza dane dla <see cref="E:System.Windows.Forms.ListView.DrawItem" /> zdarzenia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie umożliwia dostosowanie wyglądu <xref:System.Windows.Forms.ListView> kontrolki przy użyciu rysowania przez właściciela. <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType>  
  
 Zdarzenie jest wywoływane <xref:System.Windows.Forms.ListView> przez kontrolkę, gdy <xref:System.Windows.Forms.ListView.OwnerDraw%2A?displayProperty=nameWithType> właściwość jest ustawiona na `true`. <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> Przekazanie do procedury obsługi zdarzeń zawiera informacje na <xref:System.Windows.Forms.ListViewItem> temat do rysowania i zawiera metody ułatwiające narysowanie elementu. <xref:System.Windows.Forms.DrawListViewItemEventArgs>  
  
 Użyj właściwości <xref:System.Windows.Forms.DrawListViewItemEventArgs.Item%2A> lub, aby pobrać informacje o elemencie do narysowania. <xref:System.Windows.Forms.DrawListViewItemEventArgs.State%2A> <xref:System.Windows.Forms.DrawListViewItemEventArgs.ItemIndex%2A?displayProperty=nameWithType> Użyj właściwości, aby pobrać indeks elementu.  
  
 Użyj właściwości, aby wykonać rzeczywiste Rysowanie w obszarze określonym <xref:System.Windows.Forms.DrawListViewItemEventArgs.Bounds%2A> przez właściwość. <xref:System.Windows.Forms.DrawListViewItemEventArgs.Graphics%2A> Aby narysować <xref:System.Windows.Forms.ListView> standardowe elementy, które nie wymagają dostosowania, <xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawBackground%2A>Użyj metod <xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawText%2A>, i <xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawFocusRectangle%2A> .  
  
> [!NOTE]
>  Aby uniknąć problemów z migotaniem grafiki podczas rysowania przez <xref:System.Windows.Forms.ListView> właściciela, Zastąp formant i <xref:System.Windows.Forms.ListView.DoubleBuffered%2A> ustaw właściwość na `true`. Ta funkcja jest dostępna tylko w systemach Windows XP i Windows Server 2003, gdy aplikacja wywołuje <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> metodę.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Windows.Forms.ListView> jak zapewnić niestandardowy rysunek dla kontrolki. <xref:System.Windows.Forms.ListView> Kontrolka w przykładzie ma tło gradientu. Elementy podelementowe z wartościami ujemnymi mają czerwony pierwszy plan i czarne tło.  
  
 Procedura obsługi <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> zdarzenia rysuje tło dla całych elementów. Procedura obsługi dla <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzenia rysuje wartości tekstowe oraz tekst i tło dla podelementów, które mają wartości ujemne. Procedura obsługi dla <xref:System.Windows.Forms.ListView.DrawColumnHeader> zdarzenia rysuje każdy nagłówek kolumny.  
  
 <xref:System.Windows.Forms.ContextMenu> Składnik umożliwia przełączenie między widokiem szczegółów a widokiem listy. W widoku listy tylko <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> zdarzenie jest wyzwalane. W takim przypadku tekst i tło są rysowane w programie <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> obsługi zdarzeń.  
  
 [!code-csharp[ListViewOwnerDraw#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#1)]
 [!code-vb[ListViewOwnerDraw#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListView" />
    <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
    <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
    <altmember cref="T:System.Windows.Forms.ListViewItem" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawListViewItemEventArgs (System.Drawing.Graphics graphics, System.Windows.Forms.ListViewItem item, System.Drawing.Rectangle bounds, int itemIndex, System.Windows.Forms.ListViewItemStates state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Graphics graphics, class System.Windows.Forms.ListViewItem item, valuetype System.Drawing.Rectangle bounds, int32 itemIndex, valuetype System.Windows.Forms.ListViewItemStates state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawListViewItemEventArgs.#ctor(System.Drawing.Graphics,System.Windows.Forms.ListViewItem,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.ListViewItemStates)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawListViewItemEventArgs(System::Drawing::Graphics ^ graphics, System::Windows::Forms::ListViewItem ^ item, System::Drawing::Rectangle bounds, int itemIndex, System::Windows::Forms::ListViewItemStates state);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DrawListViewItemEventArgs : System.Drawing.Graphics * System.Windows.Forms.ListViewItem * System.Drawing.Rectangle * int * System.Windows.Forms.ListViewItemStates -&gt; System.Windows.Forms.DrawListViewItemEventArgs" Usage="new System.Windows.Forms.DrawListViewItemEventArgs (graphics, item, bounds, itemIndex, state)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.ListViewItemStates" />
      </Parameters>
      <Docs>
        <param name="graphics">Powierzchnia <see cref="T:System.Drawing.Graphics" /> , na której należy narysować.</param>
        <param name="item"><see cref="T:System.Windows.Forms.ListViewItem" /> Do rysowania.</param>
        <param name="bounds">, <see cref="T:System.Drawing.Rectangle" /> W którym ma zostać narysowany rysunek.</param>
        <param name="itemIndex"><see cref="T:System.Windows.Forms.ListViewItem" /> Indeks<see cref="P:System.Windows.Forms.ListView.Items" /> w kolekcji.</param>
        <param name="state">Bitowa kombinacja <see cref="T:System.Windows.Forms.ListViewItemStates" /> wartości wskazujących bieżący stan <see cref="T:System.Windows.Forms.ListViewItem" /> elementu do rysowania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.DrawListViewItemEventArgs" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewItemEventArgs.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.DrawListViewItemEventArgs.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera rozmiar i lokalizację <see cref="T:System.Windows.Forms.ListViewItem" /> do rysowania.</summary>
        <value><see cref="T:System.Drawing.Rectangle" /> Reprezentuje granice<see cref="T:System.Windows.Forms.ListViewItem" /> do rysowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lokalizacja określona przez tę właściwość jest określana względem lewego górnego rogu <xref:System.Windows.Forms.ListView> kontrolki.  
  
 Aby pobrać granice dla określonych części <xref:System.Windows.Forms.ListViewItem>, <xref:System.Windows.Forms.ListViewItem.GetBounds%2A?displayProperty=nameWithType> Użyj metody.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Windows.Forms.DrawListViewItemEventArgs.Bounds%2A> właściwości w aplikacji, która udostępnia niestandardowe rysunki <xref:System.Windows.Forms.ListView> dla kontrolki. W tym przykładzie procedura obsługi dla <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> zdarzenia rysuje tło dla całych elementów. We wszystkich widokach poza widokiem szczegółów, ten program obsługi rysuje także tekst pierwszego planu. W widoku szczegółów tekst pierwszego planu jest rysowany w <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzeniu.  
  
 Pełny przykład można znaleźć w <xref:System.Windows.Forms.DrawListViewItemEventArgs> temacie Omówienie referencyjne.  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.GetBounds(System.Windows.Forms.ItemBoundsPortion)" />
        <altmember cref="T:System.Drawing.Rectangle" />
      </Docs>
    </Member>
    <Member MemberName="DrawBackground">
      <MemberSignature Language="C#" Value="public void DrawBackground ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawBackground() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawListViewItemEventArgs.DrawBackground" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawBackground ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawBackground();" />
      <MemberSignature Language="F#" Value="member this.DrawBackground : unit -&gt; unit" Usage="drawListViewItemEventArgs.DrawBackground " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rysuje tło <see cref="T:System.Windows.Forms.ListViewItem" /> przy użyciu bieżącego koloru tła.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, aby narysować standardowe tło używające bieżącej wartości <xref:System.Windows.Forms.ListViewItem.BackColor%2A?displayProperty=nameWithType> właściwości. Tło jest rysowane w celu wypełnienia obszaru określonego przez <xref:System.Windows.Forms.DrawListViewItemEventArgs.Bounds%2A> właściwość.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Bounds" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="DrawDefault">
      <MemberSignature Language="C#" Value="public bool DrawDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DrawDefault" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewItemEventArgs.DrawDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property DrawDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DrawDefault { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DrawDefault : bool with get, set" Usage="System.Windows.Forms.DrawListViewItemEventArgs.DrawDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia właściwość wskazującą, czy <see cref="T:System.Windows.Forms.ListView" /> kontrolka będzie używać domyślnego rysowania <see cref="T:System.Windows.Forms.ListViewItem" />dla elementu.</summary>
        <value><see langword="true" />Jeśli system rysuje element; <see langword="false" /> Jeśli program obsługi zdarzeń rysuje element. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustaw tę właściwość na `true` , gdy element nie wymaga rysowania niestandardowego. Jest to przydatne, gdy trzeba dostosować tylko niektóre elementy w kontrolce, takie jak wybrane elementy.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportuje wystąpienie <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> zdarzenia. Ten raport pomaga dowiedzieć się, kiedy wystąpi zdarzenie i może pomóc w debugowaniu.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu zawierającego wystąpienie typu <xref:System.Windows.Forms.ListView> o nazwie. `ListView1` Następnie upewnij się, że program obsługi zdarzeń jest skojarzony <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> ze zdarzeniem.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#471](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#471)]
 [!code-vb[System.Windows.Forms.EventExamples#471](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#471)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawFocusRectangle">
      <MemberSignature Language="C#" Value="public void DrawFocusRectangle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawFocusRectangle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawListViewItemEventArgs.DrawFocusRectangle" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawFocusRectangle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawFocusRectangle();" />
      <MemberSignature Language="F#" Value="member this.DrawFocusRectangle : unit -&gt; unit" Usage="drawListViewItemEventArgs.DrawFocusRectangle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rysuje prostokąt fokusu w <see cref="T:System.Windows.Forms.ListViewItem" /> przypadku, gdy ma fokus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody do rysowania standardowego prostokąta fokusu wokół elementu. Prostokąt fokusu jest zwykle rysowany w obszarze określonym przez <xref:System.Windows.Forms.DrawListViewItemEventArgs.Bounds%2A> właściwość. Jeśli formant znajduje się w widoku szczegółów, a <xref:System.Windows.Forms.ListView.FullRowSelect%2A?displayProperty=nameWithType> wartość właściwości to `false`, prostokąt fokusu jest rysowany wokół domyślnego obszaru tekstu dla pierwszej kolumny elementu.  
  
 Prostokąt fokus jest rysowany tylko wtedy, gdy element ma fokus, więc nie trzeba sprawdzać stanu fokusu elementu przed wywołaniem tej metody.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawFocusRectangle%2A> metody w aplikacji, która udostępnia niestandardowe rysunki <xref:System.Windows.Forms.ListView> dla kontrolki. W tym przykładzie procedura obsługi dla <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> zdarzenia rysuje tło dla całych elementów. We wszystkich widokach poza widokiem szczegółów, ten program obsługi rysuje także tekst pierwszego planu. W widoku szczegółów tekst pierwszego planu jest rysowany w <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzeniu.  
  
 Pełny przykład można znaleźć w <xref:System.Windows.Forms.DrawListViewItemEventArgs> temacie Omówienie referencyjne.  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Bounds" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rysuje tekst <see cref="T:System.Windows.Forms.ListViewItem" /> przy użyciu bieżącego koloru pierwszego planu i domyślnego formatowania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public void DrawText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawListViewItemEventArgs.DrawText" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawText ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawText();" />
      <MemberSignature Language="F#" Value="member this.DrawText : unit -&gt; unit" Usage="drawListViewItemEventArgs.DrawText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rysuje tekst <see cref="T:System.Windows.Forms.ListViewItem" /> przy użyciu bieżącego koloru pierwszego planu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do rysowania tekstu elementu przy użyciu bieżących wartości <xref:System.Windows.Forms.ListViewItem.ForeColor%2A?displayProperty=nameWithType> właściwości i. <xref:System.Windows.Forms.ListViewItem.Font%2A?displayProperty=nameWithType> Tekst jest rysowany w obszarze określonym przez <xref:System.Windows.Forms.DrawListViewItemEventArgs.Bounds%2A> właściwość. Możesz również ręcznie narysować tekst przy użyciu <xref:System.Drawing.Graphics> pobranego <xref:System.Windows.Forms.DrawListViewItemEventArgs.Graphics%2A> za pośrednictwem właściwości.  
  
 Metoda jest najbardziej użyteczna, <xref:System.Windows.Forms.ListView.View%2A?displayProperty=nameWithType> gdy właściwość jest ustawiona na wartość inną niż <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>. <xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawText%2A> W widoku szczegółów ta metoda rysuje tekst dla <xref:System.Windows.Forms.ListViewItem>, ale nie rysuje tekstu dla elementów SubItems. W związku z tym w widoku szczegółów zwykle wygodniejsze jest rysowanie całego <xref:System.Windows.Forms.ListView> tekstu w programie obsługi <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzenia.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawText%2A> metody w aplikacji, która udostępnia niestandardowe rysunki <xref:System.Windows.Forms.ListView> dla kontrolki. W tym przykładzie procedura obsługi dla <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> zdarzenia rysuje tło dla całych elementów. We wszystkich widokach poza widokiem szczegółów, ten program obsługi rysuje także tekst pierwszego planu. W widoku szczegółów tekst pierwszego planu jest rysowany w <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzeniu.  
  
 Pełny przykład można znaleźć w <xref:System.Windows.Forms.DrawListViewItemEventArgs> temacie Omówienie referencyjne.  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Bounds" />
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Graphics" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.Font" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public void DrawText (System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawText(valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawListViewItemEventArgs.DrawText(System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawText (flags As TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawText(System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="member this.DrawText : System.Windows.Forms.TextFormatFlags -&gt; unit" Usage="drawListViewItemEventArgs.DrawText flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="flags">Bitowa kombinacja <see cref="T:System.Windows.Forms.TextFormatFlags" /> wartości.</param>
        <summary>Rysuje tekst <see cref="T:System.Windows.Forms.ListViewItem" /> przy użyciu bieżącego koloru pierwszego planu i formatowanie go o określonych <see cref="T:System.Windows.Forms.TextFormatFlags" /> wartościach.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do rysowania tekstu elementu przy użyciu bieżących wartości <xref:System.Windows.Forms.ListViewItem.ForeColor%2A?displayProperty=nameWithType> właściwości i. <xref:System.Windows.Forms.ListViewItem.Font%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.TextFormatFlags> Wartości określone `flags` w parametrze umożliwiają dostarczenie właściwości formatowania dla etykiety węzła, takich jak wyrównanie tekstu. Tekst jest rysowany w obszarze określonym przez <xref:System.Windows.Forms.DrawListViewItemEventArgs.Bounds%2A> właściwość. Możesz również ręcznie narysować tekst przy użyciu <xref:System.Drawing.Graphics> pobranego <xref:System.Windows.Forms.DrawListViewItemEventArgs.Graphics%2A> za pośrednictwem właściwości.  
  
 Metoda jest najbardziej użyteczna, <xref:System.Windows.Forms.ListView.View%2A?displayProperty=nameWithType> gdy właściwość jest ustawiona na wartość inną niż <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>. <xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawText%2A> W widoku szczegółów ta metoda rysuje tekst dla <xref:System.Windows.Forms.ListViewItem>, ale nie rysuje tekstu dla elementów SubItems. W związku z tym w widoku szczegółów zwykle wygodniejsze jest rysowanie całego <xref:System.Windows.Forms.ListView> tekstu w programie obsługi <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzenia.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Bounds" />
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Graphics" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.Font" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ForeColor" />
        <altmember cref="T:System.Windows.Forms.TextFormatFlags" />
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewItemEventArgs.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Graphics : System.Drawing.Graphics" Usage="System.Windows.Forms.DrawListViewItemEventArgs.Graphics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera użyty do narysowania <see cref="T:System.Windows.Forms.ListViewItem" />. <see cref="T:System.Drawing.Graphics" /></summary>
        <value><see cref="T:System.Drawing.Graphics" /> Używany do <see cref="T:System.Windows.Forms.ListViewItem" />rysowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Graphics> Klasa zawiera właściwości i metody przydatne do rysowania na urządzeniu wyświetlającym.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Windows.Forms.DrawListViewItemEventArgs.Graphics%2A> właściwości w aplikacji, która udostępnia niestandardowe rysunki <xref:System.Windows.Forms.ListView> dla kontrolki. W tym przykładzie procedura obsługi dla <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> zdarzenia rysuje tło dla całych elementów. We wszystkich widokach poza widokiem szczegółów, ten program obsługi rysuje także tekst pierwszego planu. W widoku szczegółów tekst pierwszego planu jest rysowany w <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzeniu.  
  
 Pełny przykład można znaleźć w <xref:System.Windows.Forms.DrawListViewItemEventArgs> temacie Omówienie referencyjne.  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem Item { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem Item" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewItemEventArgs.Item" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItem ^ Item { System::Windows::Forms::ListViewItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Item : System.Windows.Forms.ListViewItem" Usage="System.Windows.Forms.DrawListViewItemEventArgs.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ListViewItem" /> Pobiera do rysowania.</summary>
        <value><see cref="T:System.Windows.Forms.ListViewItem" /> Do rysowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej właściwości, aby uzyskać <xref:System.Windows.Forms.ListViewItem> dostęp do programu do rysowania. Jest to przydatne, <xref:System.Windows.Forms.DrawListViewItemEventArgs.State%2A> gdy właściwość nie dostarcza odpowiednich informacji, które spełniają Twoje potrzeby. <xref:System.Windows.Forms.DrawListViewItemEventArgs.State%2A> Właściwość zawiera tylko podstawowe informacje o stanie, których można użyć, na przykład w celu ustalenia, czy element jest zaznaczony, zaznaczony lub skoncentrowany. Właściwość z drugiej strony umożliwia dostęp do wszystkich elementów członkowskich <xref:System.Windows.Forms.ListViewItem>. <xref:System.Windows.Forms.DrawListViewItemEventArgs.Item%2A> Musisz uzyskać bezpośredni dostęp do elementu, na przykład, aby narysować <xref:System.Windows.Forms.ListViewItem.Text%2A?displayProperty=nameWithType> wartość samodzielnie zamiast korzystać z <xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawText%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Windows.Forms.DrawListViewItemEventArgs.Item%2A> właściwości w aplikacji, która udostępnia niestandardowe rysunki <xref:System.Windows.Forms.ListView> dla kontrolki. W tym przykładzie procedura obsługi dla <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> zdarzenia rysuje tło dla całych elementów. We wszystkich widokach poza widokiem szczegółów, ten program obsługi rysuje także tekst pierwszego planu. W widoku szczegółów tekst pierwszego planu jest rysowany w <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzeniu.  
  
 Pełny przykład można znaleźć w <xref:System.Windows.Forms.DrawListViewItemEventArgs> temacie Omówienie referencyjne.  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.DrawListViewItemEventArgs.DrawText" />
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.ItemIndex" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.Text" />
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.State" />
      </Docs>
    </Member>
    <Member MemberName="ItemIndex">
      <MemberSignature Language="C#" Value="public int ItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewItemEventArgs.ItemIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ItemIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemIndex : int" Usage="System.Windows.Forms.DrawListViewItemEventArgs.ItemIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera indeks <see cref="T:System.Windows.Forms.ListViewItem" /> <see cref="P:System.Windows.Forms.ListView.Items" /> w kolekcji zawierającej. <see cref="T:System.Windows.Forms.ListView" /></summary>
        <value><see cref="T:System.Windows.Forms.ListViewItem" /> Indeks<see cref="P:System.Windows.Forms.ListView.Items" /> w kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportuje wystąpienie <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> zdarzenia. Ten raport pomaga dowiedzieć się, kiedy wystąpi zdarzenie i może pomóc w debugowaniu.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu zawierającego wystąpienie typu <xref:System.Windows.Forms.ListView> o nazwie. `ListView1` Następnie upewnij się, że program obsługi zdarzeń jest skojarzony <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> ze zdarzeniem.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#471](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#471)]
 [!code-vb[System.Windows.Forms.EventExamples#471](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#471)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="P:System.Windows.Forms.ListView.Items" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItemStates State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ListViewItemStates State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewItemEventArgs.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As ListViewItemStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItemStates State { System::Windows::Forms::ListViewItemStates get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Windows.Forms.ListViewItemStates" Usage="System.Windows.Forms.DrawListViewItemEventArgs.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItemStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący stan elementu <see cref="T:System.Windows.Forms.ListViewItem" /> do rysowania.</summary>
        <value>Bitowa kombinacja <see cref="T:System.Windows.Forms.ListViewItemStates" /> wartości wskazujących bieżący stan <see cref="T:System.Windows.Forms.ListViewItem" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej właściwości, aby sprawdzić, <xref:System.Windows.Forms.ListViewItem> czy element do rysowania znajduje się w określonym stanie. Ta właściwość zawiera tylko podstawowe informacje o stanie elementu. Można użyć tej właściwości, na przykład, aby określić, czy element jest zaznaczony, zaznaczony lub skoncentrowany. Jeśli potrzebujesz dowiedzieć się więcej, pobierz element za pomocą <xref:System.Windows.Forms.DrawListViewItemEventArgs.Item%2A> właściwości i sprawdź jego właściwości bezpośrednio.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Windows.Forms.DrawListViewItemEventArgs.State%2A> właściwości w aplikacji, która udostępnia niestandardowe rysunki <xref:System.Windows.Forms.ListView> dla kontrolki. W tym przykładzie procedura obsługi dla <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> zdarzenia rysuje tło dla całych elementów. We wszystkich widokach poza widokiem szczegółów, ten program obsługi rysuje także tekst pierwszego planu. W widoku szczegółów tekst pierwszego planu jest rysowany w <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> zdarzeniu.  
  
 Pełny przykład można znaleźć w <xref:System.Windows.Forms.DrawListViewItemEventArgs> temacie Omówienie referencyjne.  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Item" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItemStates" />
      </Docs>
    </Member>
  </Members>
</Type>
