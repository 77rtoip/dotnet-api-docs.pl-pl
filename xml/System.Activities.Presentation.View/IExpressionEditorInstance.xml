<Type Name="IExpressionEditorInstance" FullName="System.Activities.Presentation.View.IExpressionEditorInstance">
  <TypeSignature Language="C#" Value="public interface IExpressionEditorInstance" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IExpressionEditorInstance" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.View.IExpressionEditorInstance" />
  <TypeSignature Language="VB.NET" Value="Public Interface IExpressionEditorInstance" />
  <TypeSignature Language="C++ CLI" Value="public interface class IExpressionEditorInstance" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="90ce2-101">Reprezentuje wystąpienie edytora wyrażeń.</span><span class="sxs-lookup"><span data-stu-id="90ce2-101">Represents an expression editor instance.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90ce2-102">Aby uzyskać szczegółowy opis wystąpienie edytora wyrażeń, zobacz <xref:System.Activities.Presentation.View.IExpressionEditorService>.</span><span class="sxs-lookup"><span data-stu-id="90ce2-102">For a detailed description of an expression editor instance, see <xref:System.Activities.Presentation.View.IExpressionEditorService>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AcceptsReturn">
      <MemberSignature Language="C#" Value="public bool AcceptsReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsReturn" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.IExpressionEditorInstance.AcceptsReturn" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsReturn { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90ce2-103">Pobiera lub ustawia wartość wskazującą, czy wystąpienie edytora wyrażenie akceptuje klawisz RETURN.</span><span class="sxs-lookup"><span data-stu-id="90ce2-103">Gets or sets a value that indicates whether the expression editor instance accepts the RETURN key.</span></span></summary>
        <value>
          <span data-ttu-id="90ce2-104"><see langword="true" /> Jeśli Edytor wyrażenie akceptuje klawisz RETURN; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="90ce2-104"><see langword="true" /> if the expression editor accepts the RETURN key; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsTab">
      <MemberSignature Language="C#" Value="public bool AcceptsTab { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsTab" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.IExpressionEditorInstance.AcceptsTab" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsTab As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsTab { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90ce2-105">Pobiera lub ustawia wartość wskazującą, czy wystąpienie edytora wyrażenie akceptuje klawisz TAB.</span><span class="sxs-lookup"><span data-stu-id="90ce2-105">Gets or sets a value that indicates whether the expression editor instance accepts the TAB key.</span></span></summary>
        <value>
          <span data-ttu-id="90ce2-106"><see langword="true" /> Jeśli Edytor wyrażenie akceptuje klawisza TAB; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="90ce2-106"><see langword="true" /> if the expression editor accepts the TAB key; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCompleteWord">
      <MemberSignature Language="C#" Value="public bool CanCompleteWord ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCompleteWord() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanCompleteWord" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCompleteWord () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanCompleteWord();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90ce2-107">Pobiera wartość logiczną wskazującą, czy wystąpienie edytora wyrażeń można wykonać ciągu jest wpisana przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="90ce2-107">Gets a Boolean value that indicates whether the expression editor instance can complete the string being typed by the user.</span></span></summary>
        <returns><span data-ttu-id="90ce2-108">Zwraca <see cref="T:System.Boolean" /> ustawioną <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="90ce2-108">Returns a <see cref="T:System.Boolean" /> set to <see langword="true" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCopy">
      <MemberSignature Language="C#" Value="public bool CanCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanCopy" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCopy () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanCopy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90ce2-109">Pobiera wartość logiczną wskazującą, czy wystąpienie edytora wyrażeń może zostać zamknięty.</span><span class="sxs-lookup"><span data-stu-id="90ce2-109">Gets a Boolean value that indicates whether the expression editor instance can be closed.</span></span></summary>
        <returns>
          <span data-ttu-id="90ce2-110"><see langword="true" /> Jeśli wystąpienie edytora wyrażeń, może zostać zamknięty; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="90ce2-110"><see langword="true" /> if the expression editor instance can be closed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCut">
      <MemberSignature Language="C#" Value="public bool CanCut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanCut" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCut () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanCut();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90ce2-111">Pobiera wartość logiczną wskazującą, czy wyrażenie może być obcięte.</span><span class="sxs-lookup"><span data-stu-id="90ce2-111">Gets a Boolean value that indicates whether the expression can be cut.</span></span></summary>
        <returns>
          <span data-ttu-id="90ce2-112"><see langword="true" /> Jeśli wyrażenie może być obcięte; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="90ce2-112"><see langword="true" /> if the expression can be cut; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDecreaseFilterLevel">
      <MemberSignature Language="C#" Value="public bool CanDecreaseFilterLevel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanDecreaseFilterLevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanDecreaseFilterLevel" />
      <MemberSignature Language="VB.NET" Value="Public Function CanDecreaseFilterLevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanDecreaseFilterLevel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90ce2-113">Zwraca wartość wskazującą, czy można zmniejszyć poziom filtrowania, korzystając z filtrowania Intellisense.</span><span class="sxs-lookup"><span data-stu-id="90ce2-113">Returns a value that indicates whether the filter level can be decreased when using Intellisense filtering.</span></span></summary>
        <returns>
          <span data-ttu-id="90ce2-114"><see langword="true" /> Jeśli można zmniejszyć poziom filtrowania; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="90ce2-114"><see langword="true" /> if the filter level can be decreased; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanGlobalIntellisense">
      <MemberSignature Language="C#" Value="public bool CanGlobalIntellisense ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanGlobalIntellisense() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanGlobalIntellisense" />
      <MemberSignature Language="VB.NET" Value="Public Function CanGlobalIntellisense () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanGlobalIntellisense();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90ce2-115">Pobiera wartość logiczną wskazującą, czy wystąpienie edytora wyrażeń można pobrać globalnych funkcji IntelliSense na wyrażeniu.</span><span class="sxs-lookup"><span data-stu-id="90ce2-115">Gets a Boolean value that indicates whether the expression editor instance can retrieve global IntelliSense on the expression.</span></span></summary>
        <returns><span data-ttu-id="90ce2-116">Zwraca <see cref="T:System.Boolean" /> ustawioną <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="90ce2-116">Returns a <see cref="T:System.Boolean" /> set to <see langword="true" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanIncreaseFilterLevel">
      <MemberSignature Language="C#" Value="public bool CanIncreaseFilterLevel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanIncreaseFilterLevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanIncreaseFilterLevel" />
      <MemberSignature Language="VB.NET" Value="Public Function CanIncreaseFilterLevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanIncreaseFilterLevel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90ce2-117">Zwraca wartość wskazującą, czy można zwiększyć poziom filtrowania, korzystając z filtrowania Intellisense.</span><span class="sxs-lookup"><span data-stu-id="90ce2-117">Returns a value that indicates whether the filter level can be increased when using Intellisense filtering.</span></span></summary>
        <returns>
          <span data-ttu-id="90ce2-118"><see langword="true" /> Jeśli można zwiększyć poziom filtrowania; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="90ce2-118"><see langword="true" /> if the filter level can be increased; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanParameterInfo">
      <MemberSignature Language="C#" Value="public bool CanParameterInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanParameterInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanParameterInfo" />
      <MemberSignature Language="VB.NET" Value="Public Function CanParameterInfo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanParameterInfo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90ce2-119">Pobiera wartość logiczną wskazującą, czy wystąpienie edytora wyrażeń mogą pobierać informacje o parametrach na wyrażeniu.</span><span class="sxs-lookup"><span data-stu-id="90ce2-119">Gets a Boolean value that indicates whether the expression editor instance can retrieve parameter information on the expression.</span></span></summary>
        <returns><span data-ttu-id="90ce2-120">Zwraca <see cref="T:System.Boolean" /> ustawioną <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="90ce2-120">Returns a <see cref="T:System.Boolean" /> set to <see langword="true" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanPaste">
      <MemberSignature Language="C#" Value="public bool CanPaste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanPaste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanPaste" />
      <MemberSignature Language="VB.NET" Value="Public Function CanPaste () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanPaste();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90ce2-121">Pobiera wartość logiczną wskazującą, czy można wkleić wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="90ce2-121">Gets a Boolean value that indicates whether the expression can be pasted.</span></span></summary>
        <returns>
          <span data-ttu-id="90ce2-122"><see langword="true" /> Jeśli wyrażenie można wkleić; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="90ce2-122"><see langword="true" /> if the expression can be pasted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanQuickInfo">
      <MemberSignature Language="C#" Value="public bool CanQuickInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanQuickInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanQuickInfo" />
      <MemberSignature Language="VB.NET" Value="Public Function CanQuickInfo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanQuickInfo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90ce2-123">Pobiera wartość logiczną wskazującą, czy wystąpienie edytora wyrażeń można pobrać informacji o typie, który będzie wyświetlany w etykietce narzędzia Szybkie informacje funkcji IntelliSense.</span><span class="sxs-lookup"><span data-stu-id="90ce2-123">Gets a Boolean value that indicates whether the expression editor instance can retrieve type information to be shown in an IntelliSense quick info tool tip.</span></span></summary>
        <returns><span data-ttu-id="90ce2-124">Zwraca <see cref="T:System.Boolean" /> ustawioną <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="90ce2-124">Returns a <see cref="T:System.Boolean" /> set to <see langword="true" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRedo">
      <MemberSignature Language="C#" Value="public bool CanRedo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRedo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanRedo" />
      <MemberSignature Language="VB.NET" Value="Public Function CanRedo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanRedo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90ce2-125">Pobiera wartość logiczną wskazującą, czy system może wykonaj operację ponownie.</span><span class="sxs-lookup"><span data-stu-id="90ce2-125">Gets a Boolean value that indicates whether the system can redo the operation.</span></span></summary>
        <returns>
          <span data-ttu-id="90ce2-126"><see langword="true" /> Jeśli system można wykonać ponownie operację; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="90ce2-126"><see langword="true" /> if the system can redo the operation; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUndo">
      <MemberSignature Language="C#" Value="public bool CanUndo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanUndo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanUndo" />
      <MemberSignature Language="VB.NET" Value="Public Function CanUndo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanUndo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90ce2-127">Pobiera wartość logiczną wskazującą, czy system można cofnąć operacji.</span><span class="sxs-lookup"><span data-stu-id="90ce2-127">Gets a Boolean value that indicates whether the system can undo the operation.</span></span></summary>
        <returns>
          <span data-ttu-id="90ce2-128"><see langword="true" /> Jeśli system nie można cofnąć operacji; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="90ce2-128"><see langword="true" /> if the system can undo the operation; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearSelection">
      <MemberSignature Language="C#" Value="public void ClearSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.ClearSelection" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearSelection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearSelection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90ce2-129">Czyści zaznaczenie w wystąpieniu edytora.</span><span class="sxs-lookup"><span data-stu-id="90ce2-129">Clears the selection in the editor instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90ce2-130">Zamyka i Przeczyszcza edytora elementów.</span><span class="sxs-lookup"><span data-stu-id="90ce2-130">Closes and purges the editor items.</span></span> <span data-ttu-id="90ce2-131">Spowoduje to zamknięcie wystąpienie edytora określonego wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="90ce2-131">This will close the specific expression editor instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Closing">
      <MemberSignature Language="C#" Value="event EventHandler Closing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closing" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.View.IExpressionEditorInstance.Closing" />
      <MemberSignature Language="VB.NET" Value="Event Closing As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Closing;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90ce2-132">Występuje, gdy wystąpienie edytora wyrażeń jest zamykany.</span><span class="sxs-lookup"><span data-stu-id="90ce2-132">Occurs when the expression editor instance is closing.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompleteWord">
      <MemberSignature Language="C#" Value="public bool CompleteWord ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CompleteWord() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CompleteWord" />
      <MemberSignature Language="VB.NET" Value="Public Function CompleteWord () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CompleteWord();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90ce2-133">Określa, czy wystąpienie edytora wyrażeń można udostępnić listę zakończeń częściowe wyrazu wpisana przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="90ce2-133">Determines whether the expression editor instance can provide a list of completions for the partial word typed by the user.</span></span> <span data-ttu-id="90ce2-134">Na przykład elementy członkowskie, argumentów i nazwy metod można pokazać użytkownikowi na próba pomóc im Dokończ wyraz, który wpisywania.</span><span class="sxs-lookup"><span data-stu-id="90ce2-134">For example, member, argument, and method names can be shown to the user in an attempt to help them complete the word they are typing.</span></span></summary>
        <returns>
          <span data-ttu-id="90ce2-135"><see langword="true" /> Jeśli ta metoda zakończy się pomyślnie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="90ce2-135"><see langword="true" /> if this method succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public bool Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90ce2-136">Kopiuje aktywne wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="90ce2-136">Copies the active expression.</span></span></summary>
        <returns>
          <span data-ttu-id="90ce2-137"><see langword="true" /> Jeśli kopia zakończy się pomyślnie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="90ce2-137"><see langword="true" /> if the copy is successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public bool Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Cut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Function Cut () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Cut();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90ce2-138">Wytnij active wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="90ce2-138">Cuts the active expression.</span></span></summary>
        <returns>
          <span data-ttu-id="90ce2-139"><see langword="true" /> Jeśli wycinania zakończy się pomyślnie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="90ce2-139"><see langword="true" /> if the cut is successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecreaseFilterLevel">
      <MemberSignature Language="C#" Value="public bool DecreaseFilterLevel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DecreaseFilterLevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.DecreaseFilterLevel" />
      <MemberSignature Language="VB.NET" Value="Public Function DecreaseFilterLevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool DecreaseFilterLevel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90ce2-140">Umożliwia zmniejszenie poziomu filtr, aby wyświetlić wszystkie elementy na liście filtrów Intellisense i zwraca wartość wskazującą, czy ta operacja zakończyła się powodzeniem.</span><span class="sxs-lookup"><span data-stu-id="90ce2-140">Decreases the filter level to show all items in the Intellisense filter list and returns a value that indicates whether this operation was successful.</span></span></summary>
        <returns>
          <span data-ttu-id="90ce2-141"><see langword="true" /> Jeśli ta metoda zakończy się pomyślnie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="90ce2-141"><see langword="true" /> if this method succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Focus();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90ce2-142">Ustawia skupić się na wystąpienie edytora.</span><span class="sxs-lookup"><span data-stu-id="90ce2-142">Sets focus on the editor instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCommittedText">
      <MemberSignature Language="C#" Value="public string GetCommittedText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCommittedText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.GetCommittedText" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCommittedText () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCommittedText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90ce2-143">Pobiera tekst służący do generowania wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="90ce2-143">Gets the text used to generate an expression.</span></span></summary>
        <returns><span data-ttu-id="90ce2-144">Zwraca <see cref="T:System.String" /> zawierający tekst służący do generowania wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="90ce2-144">Returns a <see cref="T:System.String" /> that contains the text used to generate an expression.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalIntellisense">
      <MemberSignature Language="C#" Value="public bool GlobalIntellisense ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GlobalIntellisense() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.GlobalIntellisense" />
      <MemberSignature Language="VB.NET" Value="Public Function GlobalIntellisense () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GlobalIntellisense();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90ce2-145">Pobiera globalne IntelliSense w wyrażeniu w edytorze wyrażenia i zwraca wartość wskazującą, czy ta operacja zakończyła się powodzeniem.</span><span class="sxs-lookup"><span data-stu-id="90ce2-145">Retrieves global IntelliSense on the expression in the expression editor and returns a value that indicates whether this operation was successful.</span></span></summary>
        <returns>
          <span data-ttu-id="90ce2-146"><see langword="true" /> Jeśli ta metoda zakończy się pomyślnie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="90ce2-146"><see langword="true" /> if this method succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GotAggregateFocus">
      <MemberSignature Language="C#" Value="event EventHandler GotAggregateFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler GotAggregateFocus" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.View.IExpressionEditorInstance.GotAggregateFocus" />
      <MemberSignature Language="VB.NET" Value="Event GotAggregateFocus As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ GotAggregateFocus;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90ce2-147">Występuje, gdy wystąpienie edytora wyrażenie ma fokus agregacji.</span><span class="sxs-lookup"><span data-stu-id="90ce2-147">Occurs when the expression editor instance has aggregate focus.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAggregateFocus">
      <MemberSignature Language="C#" Value="public bool HasAggregateFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAggregateFocus" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.IExpressionEditorInstance.HasAggregateFocus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAggregateFocus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAggregateFocus { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90ce2-148">Pobiera wartość wskazującą, czy wystąpienie ma fokus agregacji.</span><span class="sxs-lookup"><span data-stu-id="90ce2-148">Gets a value that indicates whether the instance has aggregate focus.</span></span></summary>
        <value>
          <span data-ttu-id="90ce2-149"><see langword="true" /> Jeśli wystąpienie edytora ma fokus agregacji; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="90ce2-149"><see langword="true" /> if the editor instance has aggregate focus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90ce2-150">Wystąpienie ma wartość zagregowaną skupić się podczas <xref:System.Activities.Presentation.View.IExpressionEditorInstance.HostControl%2A> lub inny formant utworzone przez <xref:System.Activities.Presentation.View.IExpressionEditorInstance.HostControl%2A> ma fokus.</span><span class="sxs-lookup"><span data-stu-id="90ce2-150">The instance has aggregate focus when the <xref:System.Activities.Presentation.View.IExpressionEditorInstance.HostControl%2A> or any other control created by the <xref:System.Activities.Presentation.View.IExpressionEditorInstance.HostControl%2A> has focus.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.IExpressionEditorInstance.HorizontalScrollBarVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalScrollBarVisibility As ScrollBarVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollBarVisibility HorizontalScrollBarVisibility { System::Windows::Controls::ScrollBarVisibility get(); void set(System::Windows::Controls::ScrollBarVisibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90ce2-151">Pobiera lub ustawia wartość wskazującą, czy poziomy pasek przewijania jest widoczny.</span><span class="sxs-lookup"><span data-stu-id="90ce2-151">Gets or sets a value that indicates whether the horizontal scrollbar is visible.</span></span></summary>
        <value><span data-ttu-id="90ce2-152">Zwraca <see cref="T:System.Windows.Controls.ScrollBarVisibility" />.</span><span class="sxs-lookup"><span data-stu-id="90ce2-152">Returns <see cref="T:System.Windows.Controls.ScrollBarVisibility" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HostControl">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Control HostControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.Control HostControl" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.IExpressionEditorInstance.HostControl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HostControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Control ^ HostControl { System::Windows::Controls::Control ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90ce2-153">Pobiera <see cref="T:System.Windows.Controls.Control" /> wystąpienia, który może służyć do wyświetlenia w <see langword="ExpressionTextBox" />.</span><span class="sxs-lookup"><span data-stu-id="90ce2-153">Gets a <see cref="T:System.Windows.Controls.Control" /> instance that can be used to display in the <see langword="ExpressionTextBox" />.</span></span></summary>
        <value><span data-ttu-id="90ce2-154">Zwraca <see cref="T:System.Windows.Controls.Control" />.</span><span class="sxs-lookup"><span data-stu-id="90ce2-154">Returns <see cref="T:System.Windows.Controls.Control" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncreaseFilterLevel">
      <MemberSignature Language="C#" Value="public bool IncreaseFilterLevel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IncreaseFilterLevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.IncreaseFilterLevel" />
      <MemberSignature Language="VB.NET" Value="Public Function IncreaseFilterLevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IncreaseFilterLevel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90ce2-155">Zwiększa poziom filtr, aby pokazać wspólne elementy na liście filtrów Intellisense i zwraca wartość wskazującą, czy ta operacja zakończyła się powodzeniem.</span><span class="sxs-lookup"><span data-stu-id="90ce2-155">Increases the filter level to show common items in the Intellisense filter list and returns a value that indicates whether this operation was successful.</span></span></summary>
        <returns>
          <span data-ttu-id="90ce2-156"><see langword="true" /> Jeśli ta metoda zakończy się pomyślnie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="90ce2-156"><see langword="true" /> if this method succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LostAggregateFocus">
      <MemberSignature Language="C#" Value="event EventHandler LostAggregateFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LostAggregateFocus" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.View.IExpressionEditorInstance.LostAggregateFocus" />
      <MemberSignature Language="VB.NET" Value="Event LostAggregateFocus As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LostAggregateFocus;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90ce2-157">Reprezentuje zdarzenie jest zgłaszane, gdy wystąpienie edytora wyrażeń traci fokus agregacji.</span><span class="sxs-lookup"><span data-stu-id="90ce2-157">Represents an event that is raised when the expression editor instance loses aggregate focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90ce2-158">Wystąpienie utraci agregacji skupić się podczas <xref:System.Activities.Presentation.View.IExpressionEditorInstance.HostControl%2A> i każdego formantu utworzone przez <xref:System.Activities.Presentation.View.IExpressionEditorInstance.HostControl%2A> luźno fokus.</span><span class="sxs-lookup"><span data-stu-id="90ce2-158">The instance loses aggregate focus when the <xref:System.Activities.Presentation.View.IExpressionEditorInstance.HostControl%2A> and every control created by the <xref:System.Activities.Presentation.View.IExpressionEditorInstance.HostControl%2A> loose focus.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLines">
      <MemberSignature Language="C#" Value="public int MaxLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLines" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.IExpressionEditorInstance.MaxLines" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLines As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLines { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90ce2-159">Pobiera lub ustawia maksymalną liczbę wierszy tekstu, który będzie wyświetlany przez <see langword="ExpressionTextBox" /> formantu.</span><span class="sxs-lookup"><span data-stu-id="90ce2-159">Gets or sets the maximum number of lines of text to be displayed by the <see langword="ExpressionTextBox" /> control.</span></span> <span data-ttu-id="90ce2-160">Ta właściwość określa niejawnie wysokość <see langword="ExpressionTextBox" /> kontrolować podczas powiększania do dopasowania.</span><span class="sxs-lookup"><span data-stu-id="90ce2-160">This property implicitly sets the height of the <see langword="ExpressionTextBox" /> control when growing to fit.</span></span></summary>
        <value><span data-ttu-id="90ce2-161">Zwraca <see cref="T:System.Int32" /> zawierający maksymalną liczbę wierszy tekstu, który będzie wyświetlany przez <see langword="ExpressionTextBox" /> formantu.</span><span class="sxs-lookup"><span data-stu-id="90ce2-161">Returns an <see cref="T:System.Int32" /> that containing the maximum number of lines of text to be displayed by the <see langword="ExpressionTextBox" /> control.</span></span></value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="MinLines">
      <MemberSignature Language="C#" Value="public int MinLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinLines" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.IExpressionEditorInstance.MinLines" />
      <MemberSignature Language="VB.NET" Value="Public Property MinLines As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinLines { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90ce2-162">Pobiera lub Ustawia minimalną liczbę wierszy tekstu, który będzie wyświetlany przez <see langword="ExpressionTextBox" /> formantu.</span><span class="sxs-lookup"><span data-stu-id="90ce2-162">Gets or sets the minimum number of lines of text to be displayed by the <see langword="ExpressionTextBox" /> control.</span></span> <span data-ttu-id="90ce2-163">Ta właściwość określa niejawnie wysokość <see langword="ExpressionTextBox" /> formantu.</span><span class="sxs-lookup"><span data-stu-id="90ce2-163">This property implicitly sets the height of the <see langword="ExpressionTextBox" /> control.</span></span></summary>
        <value><span data-ttu-id="90ce2-164">Zwraca <see cref="T:System.Int32" /> zawiera minimalną liczbę wierszy tekstu, który będzie wyświetlany przez <see langword="ExpressionTextBox" /> formantu.</span><span class="sxs-lookup"><span data-stu-id="90ce2-164">Returns an <see cref="T:System.Int32" /> that contains the minimum number of lines of text to be displayed by the <see langword="ExpressionTextBox" /> control.</span></span></value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterInfo">
      <MemberSignature Language="C#" Value="public bool ParameterInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ParameterInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.ParameterInfo" />
      <MemberSignature Language="VB.NET" Value="Public Function ParameterInfo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ParameterInfo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90ce2-165">Pobiera informacje o parametrach w wyrażeniu w edytorze wyrażenia i zwraca wartość wskazującą, czy ta operacja zakończyła się powodzeniem.</span><span class="sxs-lookup"><span data-stu-id="90ce2-165">Retrieves parameter information on the expression in the expression editor and returns a value that indicates whether this operation was successful.</span></span></summary>
        <returns>
          <span data-ttu-id="90ce2-166"><see langword="true" /> Jeśli ta metoda zakończy się pomyślnie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="90ce2-166"><see langword="true" /> if this method succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public bool Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Paste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Function Paste () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Paste();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90ce2-167">Wkleja active wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="90ce2-167">Pastes the active expression.</span></span></summary>
        <returns>
          <span data-ttu-id="90ce2-168"><see langword="true" /> Jeśli Wklej zakończy się pomyślnie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="90ce2-168"><see langword="true" /> if the paste is successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuickInfo">
      <MemberSignature Language="C#" Value="public bool QuickInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool QuickInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.QuickInfo" />
      <MemberSignature Language="VB.NET" Value="Public Function QuickInfo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool QuickInfo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90ce2-169">Określa, czy typ informacji ma być wyświetlany w etykietce narzędzia Szybkie informacje funkcji IntelliSense.</span><span class="sxs-lookup"><span data-stu-id="90ce2-169">Determines whether type information to be shown in an IntelliSense quick info tool tip.</span></span></summary>
        <returns>
          <span data-ttu-id="90ce2-170"><see langword="true" /> Jeśli ta metoda zakończy się pomyślnie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="90ce2-170"><see langword="true" /> if this method succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Redo">
      <MemberSignature Language="C#" Value="public bool Redo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Redo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.Redo" />
      <MemberSignature Language="VB.NET" Value="Public Function Redo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Redo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90ce2-171">Ostatnia operacja, która została cofnąć przywrócenie w edytorze, oznacza to, odwrotnej skutków operacji cofania.</span><span class="sxs-lookup"><span data-stu-id="90ce2-171">Reapplies the last operation that was undone in the editor, that is, reverse the effects of the undo operation.</span></span></summary>
        <returns>
          <span data-ttu-id="90ce2-172"><see langword="true" /> Jeśli Powtórz zakończy się pomyślnie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="90ce2-172"><see langword="true" /> if the redo is successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.IExpressionEditorInstance.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90ce2-173">Pobiera lub ustawia wartość tekstu.</span><span class="sxs-lookup"><span data-stu-id="90ce2-173">Gets or sets the value of the text.</span></span></summary>
        <value><span data-ttu-id="90ce2-174">Zwraca <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="90ce2-174">Returns <see cref="T:System.String" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.View.IExpressionEditorInstance.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90ce2-175">Reprezentuje zdarzenie jest wywoływane, gdy zostanie zmieniony tekst w wystąpieniu edytora wyrażeń.</span><span class="sxs-lookup"><span data-stu-id="90ce2-175">Represents an event that is raised when the text in an expression editor instance is changed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public bool Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Function Undo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Undo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90ce2-176">Cofa ostatnią operację w edytorze.</span><span class="sxs-lookup"><span data-stu-id="90ce2-176">Undoes the last operation in the editor.</span></span></summary>
        <returns>
          <span data-ttu-id="90ce2-177"><see langword="true" /> Jeśli cofnięcie zakończy się pomyślnie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="90ce2-177"><see langword="true" /> if the undo is successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.IExpressionEditorInstance.VerticalScrollBarVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalScrollBarVisibility As ScrollBarVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollBarVisibility VerticalScrollBarVisibility { System::Windows::Controls::ScrollBarVisibility get(); void set(System::Windows::Controls::ScrollBarVisibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90ce2-178">Pobiera lub ustawia wartość wskazującą, czy pionowy pasek przewijania jest widoczny.</span><span class="sxs-lookup"><span data-stu-id="90ce2-178">Gets or sets a value that indicates whether the vertical scrollbar is visible.</span></span></summary>
        <value><span data-ttu-id="90ce2-179">Zwraca <see cref="T:System.Windows.Controls.ScrollBarVisibility" />.</span><span class="sxs-lookup"><span data-stu-id="90ce2-179">Returns <see cref="T:System.Windows.Controls.ScrollBarVisibility" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>