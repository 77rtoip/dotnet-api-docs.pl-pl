<Type Name="DesignerView" FullName="System.Activities.Presentation.View.DesignerView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="936dde289aa6fed97c199fd6194307ea2c78ed8b" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69323136" /></Metadata><TypeSignature Language="C#" Value="public class DesignerView : System.Windows.Controls.UserControl, System.Windows.Markup.IComponentConnector, System.Windows.Markup.IStyleConnector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignerView extends System.Windows.Controls.UserControl implements class System.Windows.Markup.IComponentConnector, class System.Windows.Markup.IStyleConnector" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.View.DesignerView" />
  <TypeSignature Language="VB.NET" Value="Public Class DesignerView&#xA;Inherits UserControl&#xA;Implements IComponentConnector, IStyleConnector" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignerView : System::Windows::Controls::UserControl, System::Windows::Markup::IComponentConnector, System::Windows::Markup::IStyleConnector" />
  <TypeSignature Language="F#" Value="type DesignerView = class&#xA;    inherit UserControl&#xA;    interface IComponentConnector&#xA;    interface IStyleConnector" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.UserControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IComponentConnector</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.IStyleConnector</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0">
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("PresentationBuildTasks", "4.0.0.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Udostępnia kontrolki Windows Presentation Foundation (WPF) dla widoku projektanta, który reprezentuje kanwę przepływu pracy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementuje interfejsy <xref:System.Windows.Markup.IStyleConnector> i, aby zapewnić obsługę nazwanych elementów XAML i dołączyć do nich programy obsługi zdarzeń. <xref:System.Windows.Markup.IComponentConnector>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ActivitySchema">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Model.ModelItem ActivitySchema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem ActivitySchema" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.DesignerView.ActivitySchema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActivitySchema As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::Model::ModelItem ^ ActivitySchema { System::Activities::Presentation::Model::ModelItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActivitySchema : System.Activities.Presentation.Model.ModelItem" Usage="System.Activities.Presentation.View.DesignerView.ActivitySchema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera schemat aktywności.</summary>
        <value>Schemat działania.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivitySchemaProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ActivitySchemaProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ActivitySchemaProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.ActivitySchemaProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ActivitySchemaProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ActivitySchemaProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ActivitySchemaProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.View.DesignerView.ActivitySchemaProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zawiera właściwość zależności, która reprezentuje <see cref="P:System.Activities.Presentation.View.DesignerView.ActivitySchema" /> właściwość.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAnnotationCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand AddAnnotationCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand AddAnnotationCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.AddAnnotationCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AddAnnotationCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ AddAnnotationCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable AddAnnotationCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.AddAnnotationCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie używane do dodawania adnotacji.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollapseAllCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand CollapseAllCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand CollapseAllCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.CollapseAllCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CollapseAllCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ CollapseAllCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable CollapseAllCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.CollapseAllCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie używane do zwijania wszystkich interfejsów użytkownika dla bieżącego elementu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollapseCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand CollapseCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand CollapseCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.CollapseCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CollapseCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ CollapseCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable CollapseCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.CollapseCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie używane do zwijania interfejsu użytkownika dla bieżącego elementu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandMenuMode">
      <MemberSignature Language="C#" Value="see GetCommandMenuMode, and SetCommandMenuMode" />
      <MemberSignature Language="ILAsm" Value="see GetCommandMenuMode, and SetCommandMenuMode" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.DesignerView.CommandMenuMode" />
      <MemberSignature Language="VB.NET" Value="see GetCommandMenuMode, and SetCommandMenuMode" />
      <MemberSignature Language="F#" Value="see GetCommandMenuMode, and SetCommandMenuMode" Usage="see GetCommandMenuMode, and SetCommandMenuMode" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wskazuje tryb menu poleceń.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandMenuModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandMenuModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandMenuModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.CommandMenuModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandMenuModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandMenuModeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandMenuModeProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.View.DesignerView.CommandMenuModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zawiera właściwość zależności, która reprezentuje <see cref="T:System.Activities.Presentation.View.CommandMenuMode" /> właściwość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zapewnia typy do obsługi systemu wejścia Windows Presentation Foundation (WPF).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand CommitCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand CommitCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.CommitCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommitCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ CommitCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommitCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.CommitCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie używane do aktualizowania wartości źródłowej w <see cref="T:System.Windows.Data.BindingExpression" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.EditingContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.EditingContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.DesignerView.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As EditingContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::EditingContext ^ Context { System::Activities::Presentation::EditingContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Activities.Presentation.EditingContext" Usage="System.Activities.Presentation.View.DesignerView.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.EditingContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolekcję usług udostępnianych między wszystkimi elementami zawartymi w projektancie.</summary>
        <value>Kontekst.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz publikować i zażądać usług w kontekście.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyAsImageCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand CopyAsImageCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand CopyAsImageCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.CopyAsImageCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CopyAsImageCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ CopyAsImageCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable CopyAsImageCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.CopyAsImageCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Input.RoutedCommand" /> Służy do kopiowania bieżącej powierzchni projektu przepływu pracy jako zrzutu ekranu i umieszczania jej w Schowku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zapewnia typy do obsługi systemu wejścia Windows Presentation Foundation (WPF).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand CopyCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand CopyCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.CopyCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CopyCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ CopyCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable CopyCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.CopyCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie używane do kopiowania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateArgumentCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand CreateArgumentCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand CreateArgumentCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.CreateArgumentCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CreateArgumentCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ CreateArgumentCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable CreateArgumentCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.CreateArgumentCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie użyte do utworzenia nowego argumentu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateVariableCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand CreateVariableCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand CreateVariableCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.CreateVariableCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CreateVariableCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ CreateVariableCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable CreateVariableCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.CreateVariableCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie używane do tworzenia nowej zmiennej dla aktualnie wybranego działania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWorkflowElementCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand CreateWorkflowElementCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand CreateWorkflowElementCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.CreateWorkflowElementCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CreateWorkflowElementCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ CreateWorkflowElementCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable CreateWorkflowElementCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.CreateWorkflowElementCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie używane do tworzenia nowego <see cref="T:System.Activities.Presentation.WorkflowViewElement" /> na bieżącej [!INCLUDE[wfd1](~/includes/wfd1-md.md)] powierzchni podczas przeciągania elementu przepływu pracy z przybornika na powierzchnię projektanta.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomMenuItemsSeparatorCommand">
      <MemberSignature Language="C#" Value="public const string CustomMenuItemsSeparatorCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string CustomMenuItemsSeparatorCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.CustomMenuItemsSeparatorCommand" />
      <MemberSignature Language="VB.NET" Value="Public Const CustomMenuItemsSeparatorCommand As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ CustomMenuItemsSeparatorCommand;" />
      <MemberSignature Language="F#" Value="val mutable CustomMenuItemsSeparatorCommand : string" Usage="System.Activities.Presentation.View.DesignerView.CustomMenuItemsSeparatorCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stała w postaci ciągu, która zawiera identyfikator GUID separatora elementów menu niestandardowego.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CutCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand CutCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand CutCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.CutCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CutCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ CutCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable CutCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.CutCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie używane do wycinania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CycleThroughDesignerCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand CycleThroughDesignerCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand CycleThroughDesignerCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.CycleThroughDesignerCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CycleThroughDesignerCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ CycleThroughDesignerCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable CycleThroughDesignerCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.CycleThroughDesignerCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie używane do przetworzenia różnych elementów interfejsu użytkownika bieżącej [!INCLUDE[wfd1](~/includes/wfd1-md.md)] powierzchni.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAllAnnotationCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand DeleteAllAnnotationCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand DeleteAllAnnotationCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.DeleteAllAnnotationCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DeleteAllAnnotationCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ DeleteAllAnnotationCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable DeleteAllAnnotationCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.DeleteAllAnnotationCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie używane do usuwania całej adnotacji.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAnnotationCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand DeleteAnnotationCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand DeleteAnnotationCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.DeleteAnnotationCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DeleteAnnotationCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ DeleteAnnotationCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable DeleteAnnotationCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.DeleteAnnotationCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie używane do usuwania określonej adnotacji.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteBreakpointCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand DeleteBreakpointCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand DeleteBreakpointCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.DeleteBreakpointCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DeleteBreakpointCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ DeleteBreakpointCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable DeleteBreakpointCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.DeleteBreakpointCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie używane do usuwania zestawu punktów przerwania dla bieżącego działania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableBreakpointCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand DisableBreakpointCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand DisableBreakpointCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.DisableBreakpointCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DisableBreakpointCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ DisableBreakpointCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable DisableBreakpointCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.DisableBreakpointCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie używane do wyłączania zestawu punktów przerwania dla bieżącego działania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditAnnotationCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand EditAnnotationCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand EditAnnotationCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.EditAnnotationCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EditAnnotationCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ EditAnnotationCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable EditAnnotationCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.EditAnnotationCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie używane do edytowania adnotacji.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableBreakpointCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand EnableBreakpointCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand EnableBreakpointCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.EnableBreakpointCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EnableBreakpointCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ EnableBreakpointCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable EnableBreakpointCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.EnableBreakpointCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie używane do włączania punktu przerwania dla bieżącego działania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandAllCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand ExpandAllCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand ExpandAllCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.ExpandAllCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExpandAllCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ ExpandAllCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable ExpandAllCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.ExpandAllCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie używane do rozwijania listy dla bieżącego elementu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand ExpandCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand ExpandCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.ExpandCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExpandCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ ExpandCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable ExpandCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.ExpandCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie używane do przejścia do wybranego elementu podrzędnego działania złożonego i rozszerza je, aby wypełnić pełny ekran [!INCLUDE[wfd1](~/includes/wfd1-md.md)] powierzchni. Polecenie <paramref name="View full screen" /> menu kontekstowego inicjuje tę akcję.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandInPlaceCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand ExpandInPlaceCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand ExpandInPlaceCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.ExpandInPlaceCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExpandInPlaceCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ ExpandInPlaceCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable ExpandInPlaceCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.ExpandInPlaceCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie używane do rozwijania listy dla bieżącego elementu w miejscu w bieżącym ekranie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FitToScreenCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand FitToScreenCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand FitToScreenCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.FitToScreenCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FitToScreenCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ FitToScreenCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable FitToScreenCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.FitToScreenCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie używane do dopasowania bieżącego elementu do ekranu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushState">
      <MemberSignature Language="C#" Value="public void FlushState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FlushState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.DesignerView.FlushState" />
      <MemberSignature Language="VB.NET" Value="Public Sub FlushState ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FlushState();" />
      <MemberSignature Language="F#" Value="member this.FlushState : unit -&gt; unit" Usage="designerView.FlushState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje stan skojarzony z bieżącym widokiem projektanta.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedViewElement">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.WorkflowViewElement FocusedViewElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.WorkflowViewElement FocusedViewElement" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.DesignerView.FocusedViewElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FocusedViewElement As WorkflowViewElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::WorkflowViewElement ^ FocusedViewElement { System::Activities::Presentation::WorkflowViewElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FocusedViewElement : System.Activities.Presentation.WorkflowViewElement" Usage="System.Activities.Presentation.View.DesignerView.FocusedViewElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.WorkflowViewElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, jaki element widoku ma fokus.</summary>
        <value>Widok, który ma fokus.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedViewElementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusedViewElementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusedViewElementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.FocusedViewElementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusedViewElementProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusedViewElementProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FocusedViewElementProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.View.DesignerView.FocusedViewElementProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zawiera właściwość zależności, która reprezentuje <see cref="P:System.Activities.Presentation.View.DesignerView.FocusedViewElement" /> właściwość.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCommandMenuMode">
      <MemberSignature Language="C#" Value="public static System.Activities.Presentation.View.CommandMenuMode GetCommandMenuMode (System.Windows.DependencyObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.Presentation.View.CommandMenuMode GetCommandMenuMode(class System.Windows.DependencyObject obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.DesignerView.GetCommandMenuMode(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCommandMenuMode (obj As DependencyObject) As CommandMenuMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::Presentation::View::CommandMenuMode ^ GetCommandMenuMode(System::Windows::DependencyObject ^ obj);" />
      <MemberSignature Language="F#" Value="static member GetCommandMenuMode : System.Windows.DependencyObject -&gt; System.Activities.Presentation.View.CommandMenuMode" Usage="System.Activities.Presentation.View.DesignerView.GetCommandMenuMode obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.View.CommandMenuMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="obj">Obiekt, którego Tryb menu poleceń zostanie pobrany.</param>
        <summary>Pobiera Tryb menu poleceń określonego obiektu.</summary>
        <returns>Tryb menu poleceń dla <paramref name="obj" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GoToParentCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand GoToParentCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand GoToParentCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.GoToParentCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GoToParentCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ GoToParentCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable GoToParentCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.GoToParentCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie używane do nawigowania do działania nadrzędnego wybranego działania podrzędnego i rozszerza je w celu wypełnienia pełnego ekranu [!INCLUDE[wfd1](~/includes/wfd1-md.md)] powierzchni. Polecenie <paramref name="View parent" /> menu kontekstowego inicjuje tę akcję.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HideAllAnnotationCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand HideAllAnnotationCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand HideAllAnnotationCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.HideAllAnnotationCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HideAllAnnotationCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ HideAllAnnotationCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable HideAllAnnotationCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.HideAllAnnotationCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie używane do ukrywania wszystkich adnotacji.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeComponent">
      <MemberSignature Language="C#" Value="public void InitializeComponent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeComponent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.DesignerView.InitializeComponent" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitializeComponent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeComponent();" />
      <MemberSignature Language="F#" Value="abstract member InitializeComponent : unit -&gt; unit&#xA;override this.InitializeComponent : unit -&gt; unit" Usage="designerView.InitializeComponent " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IComponentConnector.InitializeComponent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CodeDom.Compiler.GeneratedCode("PresentationBuildTasks", "4.0.0.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerNonUserCode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicjuje formant.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InPanModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty InPanModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty InPanModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.InPanModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InPanModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ InPanModeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable InPanModeProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.View.DesignerView.InPanModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Właściwość InPanMode.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertBreakpointCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand InsertBreakpointCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand InsertBreakpointCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.InsertBreakpointCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InsertBreakpointCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ InsertBreakpointCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable InsertBreakpointCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.InsertBreakpointCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie używane do ustawiania punktu przerwania dla bieżącego działania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMultipleSelectionMode">
      <MemberSignature Language="C#" Value="public bool IsMultipleSelectionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMultipleSelectionMode" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.DesignerView.IsMultipleSelectionMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMultipleSelectionMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMultipleSelectionMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMultipleSelectionMode : bool" Usage="System.Activities.Presentation.View.DesignerView.IsMultipleSelectionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy element jest w trybie wielokrotnego wyboru.</summary>
        <value><see langword="true" />Jeśli element jest w trybie wyboru wielokrotnego; w przeciwnym <see langword="false" />razie,. <see cref="T:System.Activities.Presentation.View.DesignerView" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli przytrzymasz wciśnięty klawisz CTRL lub SHIFT i wybierzesz więcej niż jeden element, `true`jest to.  Jeśli wybrano tylko jeden element, jest `false`to.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.DesignerView.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool with get, set" Usage="System.Activities.Presentation.View.DesignerView.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa, czy <see cref="T:System.Activities.Presentation.View.DesignerView" /> jest tylko do odczytu.</summary>
        <value><see langword="true" />Jeśli jest <see cref="T:System.Activities.Presentation.View.DesignerView" /> tylko do odczytu; <see langword="false" />w przeciwnym razie.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsReadOnlyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsReadOnlyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.IsReadOnlyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsReadOnlyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsReadOnlyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsReadOnlyProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.View.DesignerView.IsReadOnlyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zawiera właściwość zależności, która reprezentuje <see cref="P:System.Activities.Presentation.View.DesignerView.IsReadOnly" /> właściwość.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeRootDesigner">
      <MemberSignature Language="C#" Value="public void MakeRootDesigner (System.Activities.Presentation.Model.ModelItem modelItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeRootDesigner(class System.Activities.Presentation.Model.ModelItem modelItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.DesignerView.MakeRootDesigner(System.Activities.Presentation.Model.ModelItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeRootDesigner(System::Activities::Presentation::Model::ModelItem ^ modelItem);" />
      <MemberSignature Language="F#" Value="member this.MakeRootDesigner : System.Activities.Presentation.Model.ModelItem -&gt; unit" Usage="designerView.MakeRootDesigner modelItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
      </Parameters>
      <Docs>
        <param name="modelItem">Jest <see cref="T:System.Activities.Presentation.Model.ModelItem" /> to Projektant główny.</param>
        <summary>Umieszcza określony element modelu w katalogu głównym (górnym) hierarchii projektantów.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuItemStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style MenuItemStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style MenuItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.DesignerView.MenuItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property MenuItemStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ MenuItemStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MenuItemStyle : System.Windows.Style with get, set" Usage="System.Activities.Presentation.View.DesignerView.MenuItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia styl elementu menu.</summary>
        <value>Styl elementu menu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuItemStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MenuItemStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MenuItemStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.MenuItemStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MenuItemStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MenuItemStyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MenuItemStyleProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.View.DesignerView.MenuItemStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zawiera właściwość zależności, która reprezentuje <see cref="P:System.Activities.Presentation.View.DesignerView.MenuItemStyle" /> właściwość.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuSeparatorStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style MenuSeparatorStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style MenuSeparatorStyle" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.DesignerView.MenuSeparatorStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property MenuSeparatorStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ MenuSeparatorStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MenuSeparatorStyle : System.Windows.Style with get, set" Usage="System.Activities.Presentation.View.DesignerView.MenuSeparatorStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia styl separatora menu.</summary>
        <value>Styl separatora menu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuSeparatorStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MenuSeparatorStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MenuSeparatorStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.MenuSeparatorStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MenuSeparatorStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MenuSeparatorStyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MenuSeparatorStyleProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.View.DesignerView.MenuSeparatorStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zawiera właściwość zależności, która reprezentuje <see cref="P:System.Activities.Presentation.View.DesignerView.MenuSeparatorStyle" /> właściwość.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveFocusCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand MoveFocusCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand MoveFocusCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.MoveFocusCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MoveFocusCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ MoveFocusCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable MoveFocusCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.MoveFocusCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie używane do przenoszenia fokusu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuOpening">
      <MemberSignature Language="C#" Value="protected override void OnContextMenuOpening (System.Windows.Controls.ContextMenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnContextMenuOpening(class System.Windows.Controls.ContextMenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.DesignerView.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnContextMenuOpening (e As ContextMenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnContextMenuOpening(System::Windows::Controls::ContextMenuEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnContextMenuOpening : System.Windows.Controls.ContextMenuEventArgs -&gt; unit" Usage="designerView.OnContextMenuOpening e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ContextMenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dane zdarzenia.</param>
        <summary>Podnosi zdarzenie ContextMenuOpening.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitialized">
      <MemberSignature Language="C#" Value="protected override void OnInitialized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInitialized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.DesignerView.OnInitialized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInitialized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInitialized(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInitialized : EventArgs -&gt; unit" Usage="designerView.OnInitialized e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dane dotyczące zdarzenia.</param>
        <summary>Obsługuje zdarzenie przez <see cref="T:System.Windows.Controls.UserControl" /> wywołanie implementacji klasy bazowej, dodanie programu obsługi zdarzeń dla <see cref="E:System.Windows.UIElement.GotKeyboardFocus" /> zdarzenia kierowanego i ustawienie koloru pierwszego planu dla widoku projektanta. <see cref="E:System.Windows.FrameworkElement.Initialized" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.DesignerView.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="designerView.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dane dotyczące zdarzenia.</param>
        <summary>Podnosi zdarzenie OnKeyDown.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragOver">
      <MemberSignature Language="C#" Value="protected override void OnPreviewDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.DesignerView.OnPreviewDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreviewDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="designerView.OnPreviewDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dane dotyczące zdarzenia.</param>
        <summary>Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected override void OnPreviewMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.DesignerView.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="designerView.OnPreviewMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Dane dotyczące zdarzenia.</param>
        <summary>Wywołuje się, gdy wystąpi zdarzenie PreviewMouseLeftButtonDown.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseWheel">
      <MemberSignature Language="C#" Value="protected override void OnPreviewMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.DesignerView.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreviewMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit" Usage="designerView.OnPreviewMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Windows.Input.MouseWheelEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Podnosi zdarzenie PreviewMouseWheel.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest wywoływane, gdy nieobsłużone <xref:System.Windows.Input.Mouse.PreviewMouseWheel> dołączone zdarzenie osiągnie element w swojej trasie, który jest pochodną tej klasy. Zastąp tę metodę, aby dodać obsługę klasy dla tego zdarzenia. Jeśli po przetworzeniu tego zdarzenia zostanie naciśnięty klawisz CTRL, widok jest powiększony lub wychodzący, na podstawie przenoszenia kółka myszy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnReferenceUpdated">
      <MemberSignature Language="C#" Value="public void OnReferenceUpdated (System.Reflection.AssemblyName updatedReference, bool isAdded);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnReferenceUpdated(class System.Reflection.AssemblyName updatedReference, bool isAdded) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.DesignerView.OnReferenceUpdated(System.Reflection.AssemblyName,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnReferenceUpdated (updatedReference As AssemblyName, isAdded As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnReferenceUpdated(System::Reflection::AssemblyName ^ updatedReference, bool isAdded);" />
      <MemberSignature Language="F#" Value="member this.OnReferenceUpdated : System.Reflection.AssemblyName * bool -&gt; unit" Usage="designerView.OnReferenceUpdated (updatedReference, isAdded)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updatedReference" Type="System.Reflection.AssemblyName" />
        <Parameter Name="isAdded" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="updatedReference">Przywoływany zestaw, który jest dodawany lub usuwany.</param>
        <param name="isAdded"><see langword="true" />Jeśli odwołanie do zestawu zostanie dodane; <see langword="false" /> Jeśli odwołanie do zestawu zostanie usunięte.</param>
        <summary>Odświeża listę importowanych przestrzeni nazw w zależności od tego, czy określony przywoływany zestaw został dodany, czy usunięty.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli przywoływany zestaw zostanie dodany, przestrzenie nazw typów znalezionych w zestawie są dodawane do listy importowanych przestrzeni nazw. Jeśli przywoływany zestaw zostanie usunięty, przestrzenie nazw typów znalezionych w zestawie zostaną usunięte z listy importowanych przestrzeni nazw.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand PasteCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand PasteCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.PasteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PasteCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ PasteCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable PasteCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.PasteCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie używane do wklejania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedoCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand RedoCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand RedoCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.RedoCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RedoCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ RedoCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable RedoCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.RedoCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie używane do ponawiania operacji.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterViewElement">
      <MemberSignature Language="C#" Value="public void RegisterViewElement (System.Activities.Presentation.WorkflowViewElement viewElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterViewElement(class System.Activities.Presentation.WorkflowViewElement viewElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.DesignerView.RegisterViewElement(System.Activities.Presentation.WorkflowViewElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterViewElement (viewElement As WorkflowViewElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterViewElement(System::Activities::Presentation::WorkflowViewElement ^ viewElement);" />
      <MemberSignature Language="F#" Value="member this.RegisterViewElement : System.Activities.Presentation.WorkflowViewElement -&gt; unit" Usage="designerView.RegisterViewElement viewElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewElement" Type="System.Activities.Presentation.WorkflowViewElement" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="viewElement">Element widoku przepływu pracy.</param>
        <summary>Rejestruje element widoku.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetZoomCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand ResetZoomCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand ResetZoomCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.ResetZoomCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResetZoomCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ ResetZoomCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable ResetZoomCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.ResetZoomCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie używane do resetowania powiększenia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand RestoreCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand RestoreCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.RestoreCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RestoreCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ RestoreCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable RestoreCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.RestoreCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie używane do przywracania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RootDesigner">
      <MemberSignature Language="C#" Value="public System.Windows.UIElement RootDesigner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.UIElement RootDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.DesignerView.RootDesigner" />
      <MemberSignature Language="VB.NET" Value="Public Property RootDesigner As UIElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::UIElement ^ RootDesigner { System::Windows::UIElement ^ get(); void set(System::Windows::UIElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RootDesigner : System.Windows.UIElement with get, set" Usage="System.Activities.Presentation.View.DesignerView.RootDesigner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia element <see cref="T:System.Windows.UIElement" /> , który jest reprezentacją elementu głównego dla bieżącego drzewa modelu.</summary>
        <value>Element główny.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj <xref:System.Activities.Presentation.View.DesignerView.MakeRootDesigner%2A> metodę, aby ustawić tę właściwość <xref:System.Activities.Presentation.WorkflowViewElement> na reprezentację <xref:System.Activities.Presentation.Model.ModelItem>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootDesignerProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RootDesignerProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RootDesignerProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.RootDesignerProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RootDesignerProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RootDesignerProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RootDesignerProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.View.DesignerView.RootDesignerProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zawiera właściwość zależności, która reprezentuje <see cref="P:System.Activities.Presentation.View.DesignerView.RootDesigner" /> właściwość.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAsImageCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand SaveAsImageCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand SaveAsImageCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.SaveAsImageCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SaveAsImageCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ SaveAsImageCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable SaveAsImageCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.SaveAsImageCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie użyte do zapisania bieżącej powierzchni projektowej przepływu pracy jako obrazu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectAllCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand SelectAllCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand SelectAllCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.SelectAllCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectAllCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ SelectAllCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectAllCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.SelectAllCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie używane do zaznaczania wszystkich obiektów w widoku.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCommandMenuMode">
      <MemberSignature Language="C#" Value="public static void SetCommandMenuMode (System.Windows.DependencyObject obj, System.Activities.Presentation.View.CommandMenuMode value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCommandMenuMode(class System.Windows.DependencyObject obj, class System.Activities.Presentation.View.CommandMenuMode value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.DesignerView.SetCommandMenuMode(System.Windows.DependencyObject,System.Activities.Presentation.View.CommandMenuMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCommandMenuMode (obj As DependencyObject, value As CommandMenuMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCommandMenuMode(System::Windows::DependencyObject ^ obj, System::Activities::Presentation::View::CommandMenuMode ^ value);" />
      <MemberSignature Language="F#" Value="static member SetCommandMenuMode : System.Windows.DependencyObject * System.Activities.Presentation.View.CommandMenuMode -&gt; unit" Usage="System.Activities.Presentation.View.DesignerView.SetCommandMenuMode (obj, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Activities.Presentation.View.CommandMenuMode" />
      </Parameters>
      <Docs>
        <param name="obj">Obiekt zależności, na którym jest ustawiony tryb menu poleceń.</param>
        <param name="value">Wartość trybu menu poleceń do ustawienia.</param>
        <summary>Ustawia tryb menu poleceń dla określonego obiektu zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldCollapseAll">
      <MemberSignature Language="C#" Value="public bool ShouldCollapseAll { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShouldCollapseAll" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.DesignerView.ShouldCollapseAll" />
      <MemberSignature Language="VB.NET" Value="Public Property ShouldCollapseAll As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShouldCollapseAll { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShouldCollapseAll : bool with get, set" Usage="System.Activities.Presentation.View.DesignerView.ShouldCollapseAll" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy widok projektu powinien zwinąć wszystkie widoczne elementy podrzędne.</summary>
        <value><see langword="true" />Jeśli jest <see cref="T:System.Activities.Presentation.View.DesignerView" /> tylko do odczytu; <see langword="false" />w przeciwnym razie.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldExpandAll">
      <MemberSignature Language="C#" Value="public bool ShouldExpandAll { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShouldExpandAll" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.DesignerView.ShouldExpandAll" />
      <MemberSignature Language="VB.NET" Value="Public Property ShouldExpandAll As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShouldExpandAll { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShouldExpandAll : bool with get, set" Usage="System.Activities.Presentation.View.DesignerView.ShouldExpandAll" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy element powinien rozwijać całą listę.</summary>
        <value><see langword="true" />Jeśli element powinien rozwinąć całą listę; <see langword="false" />w przeciwnym razie. <see cref="T:System.Activities.Presentation.View.DesignerView" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowAllAnnotationCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand ShowAllAnnotationCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand ShowAllAnnotationCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.ShowAllAnnotationCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ShowAllAnnotationCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ ShowAllAnnotationCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable ShowAllAnnotationCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.ShowAllAnnotationCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie używane do wyświetlania wszystkich adnotacji.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IComponentConnector.Connect">
      <MemberSignature Language="C#" Value="void IComponentConnector.Connect (int connectionId, object target);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IComponentConnector.Connect(int32 connectionId, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.DesignerView.System#Windows#Markup#IComponentConnector#Connect(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Connect (connectionId As Integer, target As Object) Implements IComponentConnector.Connect" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IComponentConnector.Connect(int connectionId, System::Object ^ target) = System::Windows::Markup::IComponentConnector::Connect;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CodeDom.Compiler.GeneratedCode("PresentationBuildTasks", "4.0.0.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerNonUserCode</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.Int32" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="connectionId">Identyfikator połączenia.</param>
        <param name="target">Element docelowy.</param>
        <summary>Dołącza zdarzenia i nazwy do skompilowanej zawartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten interfejs jest przeznaczony do użytku tylko przez kompilator znaczników.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IStyleConnector.Connect">
      <MemberSignature Language="C#" Value="void IStyleConnector.Connect (int connectionId, object target);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IStyleConnector.Connect(int32 connectionId, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.DesignerView.System#Windows#Markup#IStyleConnector#Connect(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Connect (connectionId As Integer, target As Object) Implements IStyleConnector.Connect" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IStyleConnector.Connect(int connectionId, System::Object ^ target) = System::Windows::Markup::IStyleConnector::Connect;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IStyleConnector.Connect(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CodeDom.Compiler.GeneratedCode("PresentationBuildTasks", "4.0.0.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerNonUserCode</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.Int32" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="connectionId">Identyfikator połączenia.</param>
        <param name="target">Element docelowy.</param>
        <summary>Wywołuje StyleBamlReader, aby dołączyć zdarzenia do EventSetters i szablonów w skompilowanej zawartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa jest przeznaczona do użycia tylko przez kompilator znaczników.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleArgumentDesignerCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand ToggleArgumentDesignerCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand ToggleArgumentDesignerCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.ToggleArgumentDesignerCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToggleArgumentDesignerCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ ToggleArgumentDesignerCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable ToggleArgumentDesignerCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.ToggleArgumentDesignerCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie używane do wyświetlania lub ukrywania projektanta argumentów. <paramref name="Arguments" /> Kliknięcie przycisku[!INCLUDE[wfd1](~/includes/wfd1-md.md)] na powierzchni powoduje zainicjowanie tej akcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje, jak powiązać tę właściwość z przyciskiem.  
  
```xaml  
<Button xmlns:sapv="clr-namespace:System.Activities.Presentation.View;assembly=System.Activities.Presentation" Command="sapv:DesignerView.ToggleArgumentDesignerCommand">Show/Hide Arguments</Button>  
```  
  
 Poniższy przykład kodu demonstruje, jak wywołać tę właściwość w C#.  
  
```csharp  
DesignerView dView = des.Context.Services.GetService<DesignerView>();  
((RoutedCommand)DesignerView.ToggleArgumentDesignerCommand).Execute(null, dView);  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleImportsDesignerCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand ToggleImportsDesignerCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand ToggleImportsDesignerCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.ToggleImportsDesignerCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToggleImportsDesignerCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ ToggleImportsDesignerCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable ToggleImportsDesignerCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.ToggleImportsDesignerCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie używane do przełączania projektanta importów.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleMiniMapCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand ToggleMiniMapCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand ToggleMiniMapCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.ToggleMiniMapCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToggleMiniMapCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ ToggleMiniMapCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable ToggleMiniMapCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.ToggleMiniMapCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie używane do pokazywania lub ukrywania kontrolki minimapa na [!INCLUDE[wfd1](~/includes/wfd1-md.md)] powierzchni.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleSelectionCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand ToggleSelectionCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand ToggleSelectionCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.ToggleSelectionCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToggleSelectionCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ ToggleSelectionCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable ToggleSelectionCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.ToggleSelectionCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie używane do przełączania zaznaczenia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleVariableDesignerCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand ToggleVariableDesignerCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand ToggleVariableDesignerCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.ToggleVariableDesignerCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToggleVariableDesignerCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ ToggleVariableDesignerCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable ToggleVariableDesignerCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.ToggleVariableDesignerCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie używane do wyświetlania lub ukrywania projektanta zmiennych. <paramref name="Variables" /> Kliknięcie przycisku[!INCLUDE[wfd1](~/includes/wfd1-md.md)] na powierzchni powoduje zainicjowanie tej akcji.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UndoCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand UndoCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand UndoCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.UndoCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UndoCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ UndoCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable UndoCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.UndoCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie użyte do cofnięcia ostatniej operacji w buforze.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterViewElement">
      <MemberSignature Language="C#" Value="public void UnregisterViewElement (System.Activities.Presentation.WorkflowViewElement viewElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterViewElement(class System.Activities.Presentation.WorkflowViewElement viewElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.DesignerView.UnregisterViewElement(System.Activities.Presentation.WorkflowViewElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterViewElement (viewElement As WorkflowViewElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnregisterViewElement(System::Activities::Presentation::WorkflowViewElement ^ viewElement);" />
      <MemberSignature Language="F#" Value="member this.UnregisterViewElement : System.Activities.Presentation.WorkflowViewElement -&gt; unit" Usage="designerView.UnregisterViewElement viewElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewElement" Type="System.Activities.Presentation.WorkflowViewElement" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="viewElement">Element widoku przepływu pracy.</param>
        <summary>Wyrejestruj element widoku.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowShellBarItemVisibility">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.View.ShellBarItemVisibility WorkflowShellBarItemVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Activities.Presentation.View.ShellBarItemVisibility WorkflowShellBarItemVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.DesignerView.WorkflowShellBarItemVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property WorkflowShellBarItemVisibility As ShellBarItemVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::View::ShellBarItemVisibility WorkflowShellBarItemVisibility { System::Activities::Presentation::View::ShellBarItemVisibility get(); void set(System::Activities::Presentation::View::ShellBarItemVisibility value); };" />
      <MemberSignature Language="F#" Value="member this.WorkflowShellBarItemVisibility : System.Activities.Presentation.View.ShellBarItemVisibility with get, set" Usage="System.Activities.Presentation.View.DesignerView.WorkflowShellBarItemVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.View.ShellBarItemVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą widoczność widoczności przez pasek powłoki przepływu pracy.</summary>
        <value>Wartość, która wskazuje na sortowanie widoczności, która ma pasek powłoki przepływu pracy.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowShellHeaderItemsVisibility">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.View.ShellHeaderItemsVisibility WorkflowShellHeaderItemsVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Activities.Presentation.View.ShellHeaderItemsVisibility WorkflowShellHeaderItemsVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.DesignerView.WorkflowShellHeaderItemsVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property WorkflowShellHeaderItemsVisibility As ShellHeaderItemsVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::View::ShellHeaderItemsVisibility WorkflowShellHeaderItemsVisibility { System::Activities::Presentation::View::ShellHeaderItemsVisibility get(); void set(System::Activities::Presentation::View::ShellHeaderItemsVisibility value); };" />
      <MemberSignature Language="F#" Value="member this.WorkflowShellHeaderItemsVisibility : System.Activities.Presentation.View.ShellHeaderItemsVisibility with get, set" Usage="System.Activities.Presentation.View.DesignerView.WorkflowShellHeaderItemsVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.View.ShellHeaderItemsVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą widoczność, którą ma nagłówek powłoki przepływu pracy.</summary>
        <value>Wartość, która wskazuje na sortowanie widoczności, która zawiera nagłówek powłoki przepływu pracy.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZoomFactor">
      <MemberSignature Language="C#" Value="public double ZoomFactor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ZoomFactor" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.DesignerView.ZoomFactor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ZoomFactor As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ZoomFactor { double get(); };" />
      <MemberSignature Language="F#" Value="member this.ZoomFactor : double" Usage="System.Activities.Presentation.View.DesignerView.ZoomFactor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący poziom powiększenia działania.</summary>
        <value>Bieżący poziom powiększenia działania.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZoomInCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand ZoomInCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand ZoomInCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.ZoomInCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ZoomInCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ ZoomInCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable ZoomInCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.ZoomInCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie używane do powiększania bieżącej [!INCLUDE[wfd1](~/includes/wfd1-md.md)] powierzchni.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZoomOutCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand ZoomOutCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand ZoomOutCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.ZoomOutCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ZoomOutCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ ZoomOutCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable ZoomOutCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.ZoomOutCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie używane do powiększania z bieżącą powierzchnię systemu Windows Projektant przepływu pracy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
