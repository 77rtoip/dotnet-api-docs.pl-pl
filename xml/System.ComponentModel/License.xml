<Type Name="License" FullName="System.ComponentModel.License">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a0499b518b591120f8170f2b5de4d47e4954379b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36701832" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class License : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit License extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.License" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class License&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class License abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type License = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="6c5d3-101">Udostępnia <see langword="abstract" /> klasę podstawową dla wszystkich licencji.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6c5d3-101">Provides the <see langword="abstract" /> base class for all licenses.</span>
      </span>
      <span data-ttu-id="6c5d3-102">Licencja otrzymuje określonego wystąpienia składnika.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6c5d3-102">A license is granted to a specific instance of a component.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c5d3-103">Wszystkie składniki należy wywołać <xref:System.ComponentModel.License.Dispose%2A> licencje przyznają podczas obliczania składnik jest usunięty lub sfinalizowany.</span><span class="sxs-lookup"><span data-stu-id="6c5d3-103">All components must call <xref:System.ComponentModel.License.Dispose%2A> for the licenses they grant when the component is disposed or finalized.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="6c5d3-104">
        <para>Przy dziedziczeniu z <see cref="T:System.ComponentModel.License" />, konieczne jest przesłonięcie następujących członków: <see cref="P:System.ComponentModel.License.LicenseKey" /> i <see cref="M:System.ComponentModel.License.Dispose" />.  Aby uzyskać więcej informacji dotyczących licencji, zobacz [porady: składniki licencji i formanty] (http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57).</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="6c5d3-104">
          <para>When you inherit from <see cref="T:System.ComponentModel.License" />, you must override the following members: <see cref="P:System.ComponentModel.License.LicenseKey" /> and <see cref="M:System.ComponentModel.License.Dispose" />.  For more information on licensing, see [How to: License Components and Controls](http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57).</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.ComponentModel.LicenseContext" />
    <altmember cref="T:System.ComponentModel.LicenseException" />
    <altmember cref="T:System.ComponentModel.LicenseManager" />
    <altmember cref="T:System.ComponentModel.LicenseProvider" />
    <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
    <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
    <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected License ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.License.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; License();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6c5d3-105">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.License" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c5d3-105">Initializes a new instance of the <see cref="T:System.ComponentModel.License" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public abstract void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.License.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit" Usage="license.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6c5d3-106">W przypadku przesłonięcia w klasie pochodnej usuwa zasoby używane przez licencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c5d3-106">When overridden in a derived class, disposes of the resources used by the license.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c5d3-107">Wszystkie składniki należy wywołać <xref:System.ComponentModel.License.Dispose%2A> dotyczące licencji, które udzielają, gdy składnik jest usuwane lub sfinalizowany.</span><span class="sxs-lookup"><span data-stu-id="6c5d3-107">All components must call <xref:System.ComponentModel.License.Dispose%2A> for the licenses that they grant when the component is disposed of or finalized.</span></span>  
  
 <span data-ttu-id="6c5d3-108">A <xref:System.ComponentModel.LicenseProvider> można użyć licencji, domyślnie przyzna śledzenie ich użycia.</span><span class="sxs-lookup"><span data-stu-id="6c5d3-108">A <xref:System.ComponentModel.LicenseProvider> can use the licenses it grants to track its usage.</span></span>  
  
 <span data-ttu-id="6c5d3-109">Wywołanie <xref:System.ComponentModel.License.Dispose%2A> po zakończeniu przy użyciu <xref:System.ComponentModel.License>.</span><span class="sxs-lookup"><span data-stu-id="6c5d3-109">Call <xref:System.ComponentModel.License.Dispose%2A> when you are finished using the <xref:System.ComponentModel.License>.</span></span> <span data-ttu-id="6c5d3-110"><xref:System.ComponentModel.License.Dispose%2A> Pozostawia metody <xref:System.ComponentModel.License> w stanie uniemożliwiającym jego używanie.</span><span class="sxs-lookup"><span data-stu-id="6c5d3-110">The <xref:System.ComponentModel.License.Dispose%2A> method leaves the <xref:System.ComponentModel.License> in an unusable state.</span></span> <span data-ttu-id="6c5d3-111">Po wywołaniu <xref:System.ComponentModel.License.Dispose%2A>, konieczne jest zwolnienie wszystkich odwołań do <xref:System.ComponentModel.License> , można odzyskać pamięci, jej klasy przez wyrzucanie elementów bezużytecznych.</span><span class="sxs-lookup"><span data-stu-id="6c5d3-111">After calling <xref:System.ComponentModel.License.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.License> so the memory it was occupying can be reclaimed by garbage collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6c5d3-112">Wywoływanie zawsze <xref:System.ComponentModel.License.Dispose%2A> przed zwolnieniem ostatniego odwołania do <xref:System.ComponentModel.License>.</span><span class="sxs-lookup"><span data-stu-id="6c5d3-112">Always call <xref:System.ComponentModel.License.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.License>.</span></span> <span data-ttu-id="6c5d3-113">W przeciwnym razie zasoby <xref:System.ComponentModel.License> jest przy użyciu nie zostanie zwolniona, dopóki wywołania kolekcji pamięci <xref:System.ComponentModel.License> destruktor obiektu.</span><span class="sxs-lookup"><span data-stu-id="6c5d3-113">Otherwise, the resources the <xref:System.ComponentModel.License> is using will not be freed until garbage collection calls the <xref:System.ComponentModel.License> object's destructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <Member MemberName="LicenseKey">
      <MemberSignature Language="C#" Value="public abstract string LicenseKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LicenseKey" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.License.LicenseKey" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property LicenseKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ LicenseKey { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LicenseKey : string" Usage="System.ComponentModel.License.LicenseKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6c5d3-114">W przypadku przesłonięcia w klasie pochodnej pobiera klucz licencji przyznane dla tego składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c5d3-114">When overridden in a derived class, gets the license key granted to this component.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6c5d3-115">Klucz licencji przyznane dla tego składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c5d3-115">A license key granted to this component.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c5d3-116">A <xref:System.ComponentModel.LicenseProvider> można użyć dowolnego ciągu znaków Unicode jako klucza licencji.</span><span class="sxs-lookup"><span data-stu-id="6c5d3-116">A <xref:System.ComponentModel.LicenseProvider> can use any Unicode character string as a license key.</span></span> <span data-ttu-id="6c5d3-117"><xref:System.ComponentModel.License.LicenseKey%2A> Powinien być traktowany jako nieprzezroczyste pliku cookie, oznacza to, pliku cookie z celowo ukryte struktury wewnętrznej.</span><span class="sxs-lookup"><span data-stu-id="6c5d3-117">The <xref:System.ComponentModel.License.LicenseKey%2A> should be treated as an opaque cookie, that is, a cookie with a deliberately hidden internal structure.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
  </Members>
</Type>