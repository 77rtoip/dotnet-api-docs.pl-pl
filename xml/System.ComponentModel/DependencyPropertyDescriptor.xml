<Type Name="DependencyPropertyDescriptor" FullName="System.ComponentModel.DependencyPropertyDescriptor">
  <TypeSignature Language="C#" Value="public sealed class DependencyPropertyDescriptor : System.ComponentModel.PropertyDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DependencyPropertyDescriptor extends System.ComponentModel.PropertyDescriptor" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.DependencyPropertyDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DependencyPropertyDescriptor&#xA;Inherits PropertyDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependencyPropertyDescriptor sealed : System::ComponentModel::PropertyDescriptor" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.PropertyDescriptor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9b1c7-101">Udostępnia rozszerzenie <see cref="T:System.ComponentModel.PropertyDescriptor" /> który konta dla właściwości dodatkowe właściwości właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-101">Provides an extension of <see cref="T:System.ComponentModel.PropertyDescriptor" /> that accounts for the additional property characteristics of a dependency property.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b1c7-102">Ta klasa jest używana głównie przez projektanta aplikacji.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-102">This class is primarily used by designer applications.</span></span> <span data-ttu-id="9b1c7-103">Te aplikacje może być konieczne właściwości właściwości zależności za pomocą właściwości systemu windows lub innych narzędzi używanych do edycji wartości właściwości raportu.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-103">These applications may need to report the dependency property characteristics through property windows or other tools used for editing property values.</span></span>  
  
 <span data-ttu-id="9b1c7-104">Aby sprawdzić konkretnej właściwości, aby ustalić, czy ma <xref:System.ComponentModel.DependencyPropertyDescriptor> dostępne jako <xref:System.ComponentModel.PropertyDescriptor>, albo wywoływać <xref:System.ComponentModel.DependencyPropertyDescriptor.FromProperty%28System.ComponentModel.PropertyDescriptor%29?displayProperty=nameWithType>, lub <xref:System.ComponentModel.DependencyPropertyDescriptor.FromName%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-104">In order to check a specific property to determine whether it has <xref:System.ComponentModel.DependencyPropertyDescriptor> available to serve as a <xref:System.ComponentModel.PropertyDescriptor>, call either <xref:System.ComponentModel.DependencyPropertyDescriptor.FromProperty%28System.ComponentModel.PropertyDescriptor%29?displayProperty=nameWithType>, or <xref:System.ComponentModel.DependencyPropertyDescriptor.FromName%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9b1c7-105">Jeśli każda metoda zwraca `null`, a następnie właściwość nie jest właściwością zależności.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-105">If either method returns `null`, then the property is not a dependency property.</span></span> <span data-ttu-id="9b1c7-106">Jeśli metoda zwraca prawidłową <xref:System.ComponentModel.DependencyPropertyDescriptor> , a następnie właściwość jest właściwością zależności.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-106">If the method returns a valid <xref:System.ComponentModel.DependencyPropertyDescriptor> , then the property is a dependency property.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddValueChanged">
      <MemberSignature Language="C#" Value="public override void AddValueChanged (object component, EventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddValueChanged(object component, class System.EventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddValueChanged (component As Object, handler As EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddValueChanged(System::Object ^ component, EventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="handler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="9b1c7-107">Element, aby dodać obsługę programu.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-107">The component to add the handler for.</span></span></param>
        <param name="handler"><span data-ttu-id="9b1c7-108">Delegat do dodania jako odbiornik.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-108">The delegate to add as a listener.</span></span></param>
        <summary><span data-ttu-id="9b1c7-109">Umożliwia inne obiekty, aby otrzymać powiadomienie, gdy ta właściwość ulegnie zmianie.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-109">Enables other objects to be notified when this property changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::AttributeCollection ^ Attributes { System::ComponentModel::AttributeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b1c7-110">Pobiera kolekcję atrybutów dla tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-110">Gets the collection of attributes for this member.</span></span></summary>
        <value><span data-ttu-id="9b1c7-111"><see cref="T:System.ComponentModel.AttributeCollection" /> Kolekcję atrybutów.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-111">The <see cref="T:System.ComponentModel.AttributeCollection" /> collection of attributes.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanResetValue">
      <MemberSignature Language="C#" Value="public override bool CanResetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanResetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanResetValue (component As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanResetValue(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="9b1c7-112">Składnik, aby sprawdzić możliwość resetowania.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-112">The component to test for reset capability.</span></span></param>
        <summary><span data-ttu-id="9b1c7-113">Zwraca czy Resetowanie obiektu zmienia jego wartość.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-113">Returns whether resetting an object changes its value.</span></span></summary>
        <returns>
          <span data-ttu-id="9b1c7-114"><see langword="true" /> Resetowanie składnika zmienia się wartość; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-114"><see langword="true" /> if resetting the component changes its value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b1c7-115">Ta metoda polega na podstawowych <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-115">This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public override string Category { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Category" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.Category" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Category As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Category { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b1c7-116">Pobiera nazwę kategorii, której należy element członkowski, jak określono w <see cref="T:System.ComponentModel.CategoryAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-116">Gets the name of the category that the member belongs to, as specified in the <see cref="T:System.ComponentModel.CategoryAttribute" />.</span></span></summary>
        <value><span data-ttu-id="9b1c7-117">Nazwa kategorii, do której należy element członkowski.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-117">The name of the category to which the member belongs.</span></span> <span data-ttu-id="9b1c7-118">W przypadku nie <see cref="T:System.ComponentModel.CategoryAttribute" />, nazwa kategorii ustawiono domyślnej kategorii <see langword="Misc" />.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-118">If there is no <see cref="T:System.ComponentModel.CategoryAttribute" />, the category name is set to the default category, <see langword="Misc" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b1c7-119">Ta właściwość zależy od odpowiadającego <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-119">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComponentType">
      <MemberSignature Language="C#" Value="public override Type ComponentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ComponentType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.ComponentType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ComponentType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ComponentType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b1c7-120">Pobiera typ składnika, który jest powiązany tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-120">Gets the type of the component this property is bound to.</span></span></summary>
        <value><span data-ttu-id="9b1c7-121">A <see cref="T:System.Type" /> reprezentujący typ składnika, ta właściwość jest powiązana.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-121">A <see cref="T:System.Type" /> that represents the type of component this property is bound to.</span></span> <span data-ttu-id="9b1c7-122">Gdy <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)" /> lub <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /> są wywoływane, określony obiekt może być wystąpienia tego typu.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-122">When <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)" /> or <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /> are invoked, the object specified might be an instance of this type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b1c7-123">Ta właściwość zależy od odpowiadającego <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-123">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Converter">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter Converter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.TypeConverter Converter" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.Converter" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Converter As TypeConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::TypeConverter ^ Converter { System::ComponentModel::TypeConverter ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b1c7-124">Pobiera konwerter typu dla tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-124">Gets the type converter for this property.</span></span></summary>
        <value><span data-ttu-id="9b1c7-125">A <see cref="T:System.ComponentModel.TypeConverter" /> używany do przekonwertowania <see cref="T:System.Type" /> tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-125">A <see cref="T:System.ComponentModel.TypeConverter" /> that is used to convert the <see cref="T:System.Type" /> of this property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b1c7-126">Ta właściwość może być `null` w przypadkach, gdy oparte na atrybutach <xref:System.ComponentModel.TypeConverter> nie jest klasą publiczną.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-126">This property may be `null` in cases where the attributed <xref:System.ComponentModel.TypeConverter> is not a public class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DependencyProperty">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyProperty DependencyProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyProperty DependencyProperty" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DependencyProperty As DependencyProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyProperty ^ DependencyProperty { System::Windows::DependencyProperty ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b1c7-127">Zwraca identyfikator właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-127">Returns the dependency property identifier.</span></span></summary>
        <value><span data-ttu-id="9b1c7-128">Identyfikator właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-128">The dependency property identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b1c7-129">Ta właściwość może być `null` Jeśli <xref:System.ComponentModel.DependencyPropertyDescriptor> wystąpienie zostało utworzone dla właściwości, która nie jest właściwością zależności.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-129">This property may be `null` if a <xref:System.ComponentModel.DependencyPropertyDescriptor> instance was created for a property that is not a dependency property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public override string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b1c7-130">Pobiera opis elementu członkowskiego, jak określono w <see cref="T:System.ComponentModel.DescriptionAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-130">Gets the description of the member, as specified in the <see cref="T:System.ComponentModel.DescriptionAttribute" />.</span></span></summary>
        <value><span data-ttu-id="9b1c7-131">Opis elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-131">The description of the member.</span></span> <span data-ttu-id="9b1c7-132">W przypadku nie <see cref="T:System.ComponentModel.DescriptionAttribute" />, wartość właściwości jest równa domyślna, czyli ciąg pusty ("").</span><span class="sxs-lookup"><span data-stu-id="9b1c7-132">If there is no <see cref="T:System.ComponentModel.DescriptionAttribute" />, the property value is set to the default, which is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b1c7-133">Ta właściwość zależy od odpowiadającego <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-133">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignerCoerceValueCallback">
      <MemberSignature Language="C#" Value="public System.Windows.CoerceValueCallback DesignerCoerceValueCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.CoerceValueCallback DesignerCoerceValueCallback" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property DesignerCoerceValueCallback As CoerceValueCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::CoerceValueCallback ^ DesignerCoerceValueCallback { System::Windows::CoerceValueCallback ^ get(); void set(System::Windows::CoerceValueCallback ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.CoerceValueCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b1c7-134">Pobiera lub ustawia wywołanie zwrotne, które projektantów Użyj, aby zmodyfikować efektywną wartość właściwości zależności, aby wartość właściwości zależności są przechowywane w aparacie właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-134">Gets or sets a callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.</span></span></summary>
        <value><span data-ttu-id="9b1c7-135">Wywołanie zwrotne, które projektantów Użyj, aby zmodyfikować efektywną wartość właściwości zależności, aby wartość właściwości zależności są przechowywane w aparacie właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-135">A callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeOnly">
      <MemberSignature Language="C#" Value="public override bool DesignTimeOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeOnly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DesignTimeOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DesignTimeOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b1c7-136">Pobiera informację, czy ten element członkowski należy ustawić tylko w czasie projektowania, jak określono w <see cref="T:System.ComponentModel.DesignOnlyAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-136">Gets whether this member should be set only at design time, as specified in the <see cref="T:System.ComponentModel.DesignOnlyAttribute" />.</span></span></summary>
        <value>
          <span data-ttu-id="9b1c7-137"><see langword="true" /> Jeśli ten element członkowski należy ustawić tylko w czasie projektowania; <see langword="false" /> Jeśli element członkowski może zostać ustawione w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-137"><see langword="true" /> if this member should be set only at design time; <see langword="false" /> if the member can be set during run time.</span></span> <span data-ttu-id="9b1c7-138">W przypadku nie <see cref="T:System.ComponentModel.DesignOnlyAttribute" />, wartość zwracana jest wartość domyślna, czyli <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-138">If there is no <see cref="T:System.ComponentModel.DesignOnlyAttribute" />, the return value is the default, which is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b1c7-139">Ta właściwość zależy od odpowiadającego <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-139">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public override string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b1c7-140">Pobiera nazwę, która może być wyświetlana w oknie, takie jak okna właściwości.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-140">Gets the name that can be displayed in a window, such as a Properties window.</span></span></summary>
        <value><span data-ttu-id="9b1c7-141">Nazwa, aby wyświetlić właściwości.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-141">The name to display for the property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b1c7-142">Ta właściwość zależy od odpowiadającego <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-142">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.DependencyProperty.Name" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="9b1c7-143"><see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> Do porównania z bieżącym wystąpieniem.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-143">The <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="9b1c7-144">Porównuje dwa <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> wystąpienia pod kątem równości.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-144">Compares two <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> instances for equality.</span></span></summary>
        <returns>
          <span data-ttu-id="9b1c7-145"><see langword="true" /> Jeśli wartości są równoważne; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-145"><see langword="true" /> if the values are equivalent; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromName">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9b1c7-146">Zwraca <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> dla nazwy właściwości podana.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-146">Returns a <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> for a provided property name.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromName">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.DependencyPropertyDescriptor FromName (string name, Type ownerType, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.DependencyPropertyDescriptor FromName(string name, class System.Type ownerType, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromName (name As String, ownerType As Type, targetType As Type) As DependencyPropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::DependencyPropertyDescriptor ^ FromName(System::String ^ name, Type ^ ownerType, Type ^ targetType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DependencyPropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ownerType" Type="System.Type" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9b1c7-147">Zarejestrowaną nazwę właściwości zależności lub dołączona właściwość.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-147">The registered name of a dependency property or an attached property.</span></span></param>
        <param name="ownerType"><span data-ttu-id="9b1c7-148"><see cref="T:System.Type" /> Obiektu, który jest właścicielem definicji właściwości.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-148">The <see cref="T:System.Type" /> of the object that owns the property definition.</span></span></param>
        <param name="targetType"><span data-ttu-id="9b1c7-149"><see cref="T:System.Type" /> Chcesz ustawić właściwości dla obiektu.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-149">The <see cref="T:System.Type" /> of the object you want to set the property for.</span></span></param>
        <summary><span data-ttu-id="9b1c7-150">Zwraca <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> dla nazwy właściwości podana.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-150">Returns a <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> for a provided property name.</span></span></summary>
        <returns><span data-ttu-id="9b1c7-151">Żądany <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-151">The requested <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b1c7-152">`name` Mogą odwoływać się do właściwości zależności lub dołączona właściwość i jest `name` parametru jako przekazaną do <xref:System.Windows.DependencyProperty.Register%2A> lub <xref:System.Windows.DependencyProperty.RegisterAttached%2A> wywołaniu, które zdefiniowano właściwość zagrożona.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-152">The `name` may refer to a dependency property or an attached property, and is the `name` parameter as passed to the <xref:System.Windows.DependencyProperty.Register%2A> or <xref:System.Windows.DependencyProperty.RegisterAttached%2A> call that defined the property in question.</span></span> <span data-ttu-id="9b1c7-153">`ownerType` Typ obiektu, który jest właścicielem właściwości ponownie jako przekazywane do <xref:System.Windows.DependencyProperty.Register%2A> lub <xref:System.Windows.DependencyProperty.RegisterAttached%2A>.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-153">`ownerType` is the type of object that owns the property, again as passed to <xref:System.Windows.DependencyProperty.Register%2A> or <xref:System.Windows.DependencyProperty.RegisterAttached%2A>.</span></span> <span data-ttu-id="9b1c7-154">`targetType` jest to typ obiektu, którego chcesz ustawić właściwość.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-154">`targetType` is the type of object you want to set the property for.</span></span> <span data-ttu-id="9b1c7-155">Dla właściwości zależności `ownerType` i `targetType` są tego samego typu.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-155">For dependency properties, `ownerType` and `targetType` are the same type.</span></span> <span data-ttu-id="9b1c7-156">Dołączone właściwości, które zwykle różnią się.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-156">For attached properties they usually differ.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromName">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.DependencyPropertyDescriptor FromName (string name, Type ownerType, Type targetType, bool ignorePropertyType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.DependencyPropertyDescriptor FromName(string name, class System.Type ownerType, class System.Type targetType, bool ignorePropertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromName (name As String, ownerType As Type, targetType As Type, ignorePropertyType As Boolean) As DependencyPropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::DependencyPropertyDescriptor ^ FromName(System::String ^ name, Type ^ ownerType, Type ^ targetType, bool ignorePropertyType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DependencyPropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ownerType" Type="System.Type" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="ignorePropertyType" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9b1c7-157">Zarejestrowaną nazwę właściwości zależności lub dołączona właściwość.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-157">The registered name of a dependency property or an attached property.</span></span></param>
        <param name="ownerType"><span data-ttu-id="9b1c7-158"><see cref="T:System.Type" /> Obiektu, który jest właścicielem definicji właściwości.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-158">The <see cref="T:System.Type" /> of the object that owns the property definition.</span></span></param>
        <param name="targetType"><span data-ttu-id="9b1c7-159"><see cref="T:System.Type" /> Chcesz ustawić właściwości dla obiektu.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-159">The <see cref="T:System.Type" /> of the object you want to set the property for.</span></span></param>
        <param name="ignorePropertyType"><span data-ttu-id="9b1c7-160">Określa, aby zignorować typ właściwości.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-160">Specifies to ignore the property type.</span></span></param>
        <summary><span data-ttu-id="9b1c7-161">Zwraca <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> dla nazwy właściwości podana.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-161">Returns a <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> for a provided property name.</span></span></summary>
        <returns><span data-ttu-id="9b1c7-162">Żądany <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-162">The requested <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b1c7-163">`name` Mogą odwoływać się do właściwości zależności lub dołączona właściwość i jest `name` parametru jako przekazaną do <xref:System.Windows.DependencyProperty.Register%2A> lub <xref:System.Windows.DependencyProperty.RegisterAttached%2A> wywołaniu, które zdefiniowano właściwość zagrożona.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-163">The `name` may refer to a dependency property or an attached property, and is the `name` parameter as passed to the <xref:System.Windows.DependencyProperty.Register%2A> or <xref:System.Windows.DependencyProperty.RegisterAttached%2A> call that defined the property in question.</span></span> <span data-ttu-id="9b1c7-164">`ownerType` Typ obiektu, który jest właścicielem właściwości ponownie jako przekazywane do <xref:System.Windows.DependencyProperty.Register%2A> lub <xref:System.Windows.DependencyProperty.RegisterAttached%2A>.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-164">`ownerType` is the type of object that owns the property, again as passed to <xref:System.Windows.DependencyProperty.Register%2A> or <xref:System.Windows.DependencyProperty.RegisterAttached%2A>.</span></span> <span data-ttu-id="9b1c7-165">`targetType` jest to typ obiektu, którego chcesz ustawić właściwość.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-165">`targetType` is the type of object you want to set the property for.</span></span> <span data-ttu-id="9b1c7-166">Dla właściwości zależności `ownerType` i `targetType` są tego samego typu.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-166">For dependency properties, `ownerType` and `targetType` are the same type.</span></span> <span data-ttu-id="9b1c7-167">Dołączone właściwości, które zwykle różnią się.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-167">For attached properties they usually differ.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromProperty">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9b1c7-168">Zwraca <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> opartą na podany <see cref="T:System.ComponentModel.PropertyDescriptor" /> lub udostępnionego typu, w zależności od podpis używany.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-168">Returns a <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> based either on a provided <see cref="T:System.ComponentModel.PropertyDescriptor" /> or a provided type, depending on the signature used.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.DependencyPropertyDescriptor FromProperty (System.ComponentModel.PropertyDescriptor property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.DependencyPropertyDescriptor FromProperty(class System.ComponentModel.PropertyDescriptor property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromProperty (property As PropertyDescriptor) As DependencyPropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::DependencyPropertyDescriptor ^ FromProperty(System::ComponentModel::PropertyDescriptor ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DependencyPropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="9b1c7-169"><see cref="T:System.ComponentModel.PropertyDescriptor" /> Do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-169">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to check.</span></span></param>
        <summary><span data-ttu-id="9b1c7-170">Zwraca <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> dla podanego <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-170">Returns a <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> for a provided <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span></span></summary>
        <returns><span data-ttu-id="9b1c7-171">Jeśli właściwość opisanego przez <paramref name="property" /> właściwości zależności, zwraca prawidłową <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-171">If the property described by <paramref name="property" /> is a dependency property, returns a valid <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</span></span> <span data-ttu-id="9b1c7-172">W przeciwnym razie zwraca <see langword="null" /> <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-172">Otherwise, returns a <see langword="null" /><see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b1c7-173">Ta metoda jest podstawową metodę przez projektanta aplikacji można uzyskać <xref:System.ComponentModel.DependencyPropertyDescriptor> na podstawie sprawdzania wszystkie właściwości <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-173">This method is the primary method used by designer applications to obtain a <xref:System.ComponentModel.DependencyPropertyDescriptor> on basis of checking all properties for a <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.DependencyPropertyDescriptor FromProperty (System.Windows.DependencyProperty dependencyProperty, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.DependencyPropertyDescriptor FromProperty(class System.Windows.DependencyProperty dependencyProperty, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::DependencyPropertyDescriptor ^ FromProperty(System::Windows::DependencyProperty ^ dependencyProperty, Type ^ targetType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DependencyPropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyProperty" Type="System.Windows.DependencyProperty" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="dependencyProperty"><span data-ttu-id="9b1c7-174">Identyfikator właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-174">The identifier for a dependency property.</span></span></param>
        <param name="targetType"><span data-ttu-id="9b1c7-175">Typ obiektu, gdy właściwość jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-175">The type of the object where the property is set.</span></span></param>
        <summary><span data-ttu-id="9b1c7-176">Zwraca <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> dla typu właściwości i docelowa podana zależności.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-176">Returns a <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> for a provided dependency property and target type.</span></span></summary>
        <returns><span data-ttu-id="9b1c7-177">A <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> dla właściwości zależności podana.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-177">A <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> for the provided dependency property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b1c7-178">`dependencyProperty` Może odwoływać się do właściwości zależności lub dołączona właściwość.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-178">The `dependencyProperty` may refer to a dependency property or an attached property.</span></span> <span data-ttu-id="9b1c7-179">`targetType` jest to typ obiektu, którego chcesz ustawić właściwość.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-179">`targetType` is the type of object you want to set the property for.</span></span> <span data-ttu-id="9b1c7-180">Dla właściwości zależności, które jest odpowiednikiem typu <xref:System.Windows.DependencyProperty.OwnerType%2A> dla `dependencyProperty`.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-180">For dependency properties, that type is equivalent to the <xref:System.Windows.DependencyProperty.OwnerType%2A> for the `dependencyProperty`.</span></span> <span data-ttu-id="9b1c7-181">Dla dołączone właściwości `targetType` jest zazwyczaj innymi <xref:System.Windows.DependencyObject> typu.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-181">For attached properties the `targetType` is typically some other <xref:System.Windows.DependencyObject> type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetChildProperties (object instance, Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetChildProperties(object instance, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChildProperties (instance As Object, filter As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::PropertyDescriptorCollection ^ GetChildProperties(System::Object ^ instance, cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="9b1c7-182">Składnik można pobrać właściwości.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-182">A component to get the properties for.</span></span></param>
        <param name="filter"><span data-ttu-id="9b1c7-183">Tablica typu <see cref="T:System.Attribute" /> do użycia jako filtr.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-183">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span></span></param>
        <summary><span data-ttu-id="9b1c7-184">Zwraca <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-184">Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</span></span></summary>
        <returns><span data-ttu-id="9b1c7-185">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> z właściwościami, spełniających określone atrybuty dla określonego składnika.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-185">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the specified attributes for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b1c7-186">Ta metoda polega na podstawowych <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-186">This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public override object GetEditor (Type editorBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetEditor(class System.Type editorBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEditor (editorBaseType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetEditor(Type ^ editorBaseType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="editorBaseType"><span data-ttu-id="9b1c7-187">Typ podstawowy edytor, który jest używany w celu rozróżnienia wielu edytory, które obsługuje właściwości.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-187">The base type of editor, which is used to differentiate between multiple editors that a property supports.</span></span></param>
        <summary><span data-ttu-id="9b1c7-188">Pobiera edytora określonego typu.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-188">Gets an editor of the specified type.</span></span></summary>
        <returns><span data-ttu-id="9b1c7-189">Wystąpienie typu żądanego Edytor lub <see langword="null" /> Jeśli nie można odnaleźć edytora.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-189">An instance of the requested editor type, or <see langword="null" /> if an editor cannot be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b1c7-190">Ta metoda polega na podstawowych <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-190">This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9b1c7-191">Zwraca wartość skrótu dla tego <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-191">Returns the hash code for this <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</span></span></summary>
        <returns><span data-ttu-id="9b1c7-192">Kod skrótu 32-bitowej liczby całkowitej ze znakiem.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-192">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b1c7-193">Wartość skrótu dla <xref:System.ComponentModel.DependencyPropertyDescriptor> opiera się zarówno na podstawie identyfikatora właściwości zależności, jak i na typ, na którym jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-193">The hash code for <xref:System.ComponentModel.DependencyPropertyDescriptor> is based both on the identifier for a dependency property and on the type on which it is set.</span></span> <span data-ttu-id="9b1c7-194">Ta implementacja gwarantuje, że <xref:System.ComponentModel.DependencyPropertyDescriptor> nieprawidłowo nie zwracać taki sam skrót dla właściwości, które są dziedziczone przez wiele klas pochodnych możliwe lub dla właściwości, przypisane w przeciwnym razie ponownie za pomocą właściwości systemu.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-194">This implementation assures that a <xref:System.ComponentModel.DependencyPropertyDescriptor> does not improperly return the same hash code for properties that are inherited by the many possible derived classes, or for properties that are otherwise re-assigned through the property system.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (component As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="9b1c7-195">Wystąpienie składnika.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-195">The component instance.</span></span></param>
        <summary><span data-ttu-id="9b1c7-196">Bieżąca wartość właściwości składnika Resturns.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-196">Resturns the current value of the property on a component.</span></span></summary>
        <returns><span data-ttu-id="9b1c7-197">Żądana wartość.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-197">The requested value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b1c7-198">Ta metoda polega na podstawowych <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-198">This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAttached">
      <MemberSignature Language="C#" Value="public bool IsAttached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAttached" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.IsAttached" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAttached As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAttached { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b1c7-199">Pobiera wartość wskazującą, czy właściwość jest zarejestrowany jako dołączona właściwość i jest on używany przez użycie dołączone.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-199">Gets a value that indicates whether the property is registered as an attached property and is being used through an attached usage.</span></span></summary>
        <value>
          <span data-ttu-id="9b1c7-200"><see langword="true" /> Jeśli właściwość jest dołączona właściwość; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-200"><see langword="true" /> if the property is an attached property; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBrowsable">
      <MemberSignature Language="C#" Value="public override bool IsBrowsable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBrowsable" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsBrowsable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsBrowsable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b1c7-201">Pobiera wartość, która wskazuje wartość <see cref="T:System.ComponentModel.BrowsableAttribute" /> we właściwości.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-201">Gets a value that indicates the value of the <see cref="T:System.ComponentModel.BrowsableAttribute" /> on the property.</span></span></summary>
        <value>
          <span data-ttu-id="9b1c7-202"><see langword="true" /> Jeśli <see cref="T:System.ComponentModel.BrowsableAttribute" /> została określona we właściwości; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-202"><see langword="true" /> if the <see cref="T:System.ComponentModel.BrowsableAttribute" /> was specified on the property; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b1c7-203">Ta właściwość zależy od odpowiadającego <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-203">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocalizable">
      <MemberSignature Language="C#" Value="public override bool IsLocalizable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocalizable" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsLocalizable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsLocalizable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b1c7-204">Pobiera wartość wskazującą, czy ta właściwość powinna być lokalizowany, jak określono w <see cref="T:System.ComponentModel.LocalizableAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-204">Gets a value indicating whether this property should be localized, as specified in the <see cref="T:System.ComponentModel.LocalizableAttribute" />.</span></span></summary>
        <value>
          <span data-ttu-id="9b1c7-205"><see langword="true" /> Jeśli element członkowski jest oznaczony atrybutem <see cref="T:System.ComponentModel.LocalizableAttribute" /> Konstruktor wartość PRAWDA; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-205"><see langword="true" /> if the member is marked with the <see cref="T:System.ComponentModel.LocalizableAttribute" /> constructor of the value true; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b1c7-206">Ta właściwość zależy od odpowiadającego <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-206">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public override bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b1c7-207">Pobiera wartość wskazującą, czy ta właściwość jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-207">Gets a value indicating whether this property is read-only.</span></span></summary>
        <value>
          <span data-ttu-id="9b1c7-208"><see langword="true" /> Jeśli właściwość jest tylko do odczytu. w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-208"><see langword="true" /> if the property is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b1c7-209">Ta właściwość zależy od odpowiadającego <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-209">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 <span data-ttu-id="9b1c7-210">Właściwości zależności są rejestrowane jako tylko do odczytu przy użyciu wywołania metody określonej i Konwencja [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] otoki właściwości, które są wyświetlane przez odbicie i deskryptorów właściwości również musi być tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-210">Dependency properties are registered as read-only using particular method calls, and by convention the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] wrapper properties that are the properties viewed by reflection and the descriptors must also be read-only.</span></span> <span data-ttu-id="9b1c7-211">Jednakże ponieważ jest to Konwencji i nie stanowi wymóg do kompilacji, można dokładnie sprawdzić zależności właściwość identyfikatora tylko do odczytu stanu.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-211">However, since this is a convention and not a requirement to compile, you might want to double check the dependency property identifier read-only state.</span></span> <span data-ttu-id="9b1c7-212">Aby to zrobić, należy uzyskać identyfikator (<xref:System.Windows.DependencyProperty>) to wartość <xref:System.ComponentModel.DependencyPropertyDescriptor> , a następnie sprawdź wartość <xref:System.Windows.DependencyProperty.ReadOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-212">To do this, get the identifier (<xref:System.Windows.DependencyProperty>) value for this <xref:System.ComponentModel.DependencyPropertyDescriptor> and then check the value of <xref:System.Windows.DependencyProperty.ReadOnly%2A>.</span></span> <span data-ttu-id="9b1c7-213">Należy pamiętać, że <xref:System.Windows.DependencyProperty.ReadOnly%2A> jest na podstawie identyfikatora, nie metadanych.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-213">Note that the <xref:System.Windows.DependencyProperty.ReadOnly%2A> is on the identifier itself, not metadata.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public System.Windows.PropertyMetadata Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.PropertyMetadata Metadata" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Metadata As PropertyMetadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::PropertyMetadata ^ Metadata { System::Windows::PropertyMetadata ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyMetadata</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b1c7-214">Pobiera metadane skojarzone z właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-214">Gets the metadata associated with the dependency property.</span></span></summary>
        <value><span data-ttu-id="9b1c7-215">Metadane właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-215">The dependency property metadata.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b1c7-216">Wartość może być `null` Jeśli brak metadanych nie lub właściwość nie jest właściwością zależności.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-216">The value can be `null` if there is  no metadata or if the property is not a dependency property.</span></span>  
  
 <span data-ttu-id="9b1c7-217">Metadane, który posiada odpowiadającego pojęcia związane z [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] atrybutów jest ponownie uwidocznione jako atrybuty w <xref:System.ComponentModel.DependencyPropertyDescriptor.Attributes%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-217">Metadata that has matching concepts in [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] attributes is re-exposed as attributes in the <xref:System.ComponentModel.DependencyPropertyDescriptor.Attributes%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public override Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ PropertyType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b1c7-218">Pobiera reprezentowanego <see cref="T:System.Type" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-218">Gets the represented <see cref="T:System.Type" /> of the dependency property.</span></span></summary>
        <value><span data-ttu-id="9b1c7-219"><see cref="T:System.Type" /> Właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-219">The <see cref="T:System.Type" /> of the dependency property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b1c7-220">Ta właściwość zwraca <xref:System.Type> , który został zarejestrowany właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-220">This property returns the <xref:System.Type> that the dependency property was registered with.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveValueChanged">
      <MemberSignature Language="C#" Value="public override void RemoveValueChanged (object component, EventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveValueChanged(object component, class System.EventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveValueChanged (component As Object, handler As EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveValueChanged(System::Object ^ component, EventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="handler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="9b1c7-221">Element, aby dodać obsługę programu.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-221">The component to add the handler for.</span></span></param>
        <param name="handler"><span data-ttu-id="9b1c7-222">Delegat do dodania jako odbiornik.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-222">The delegate to add as a listener.</span></span></param>
        <summary><span data-ttu-id="9b1c7-223">Umożliwia inne obiekty, aby otrzymać powiadomienie, gdy ta właściwość ulegnie zmianie.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-223">Enables other objects to be notified when this property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b1c7-224">Ta metoda polega na podstawowych <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-224">This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetValue">
      <MemberSignature Language="C#" Value="public override void ResetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetValue (component As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetValue(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="9b1c7-225">Składnik z wartością właściwości, która ma być zresetowane do wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-225">The component with the property value that is to be reset to the default value.</span></span></param>
        <summary><span data-ttu-id="9b1c7-226">Resetuje wartości dla tej właściwości składnika do wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-226">Resets the value for this property of the component to the default value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b1c7-227">Ta metoda polega na podstawowych <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-227">This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public override void SetValue (object component, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetValue(object component, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetValue (component As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetValue(System::Object ^ component, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="9b1c7-228">Składnik, należy ustawić wartość właściwości.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-228">The component with the property value that is to be set.</span></span></param>
        <param name="value"><span data-ttu-id="9b1c7-229">Nowa wartość.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-229">The new value.</span></span></param>
        <summary><span data-ttu-id="9b1c7-230">Ustawia wartość składnika innej wartości.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-230">Sets the value of the component to a different value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b1c7-231">Ta metoda polega na podstawowych <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-231">This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValue">
      <MemberSignature Language="C#" Value="public override bool ShouldSerializeValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ShouldSerializeValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ShouldSerializeValue (component As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ShouldSerializeValue(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="9b1c7-232">Składnik razem z właściwością badane trwałości.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-232">The component with the property to be examined for persistence.</span></span></param>
        <summary><span data-ttu-id="9b1c7-233">Wskazuje, czy wartość tej właściwości musi zostać utrwalony przez procesy serializacji.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-233">Indicates whether the value of this property needs to be persisted by serialization processes.</span></span></summary>
        <returns>
          <span data-ttu-id="9b1c7-234"><see langword="true" /> Jeśli właściwość powinna zostać utrwalony; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-234"><see langword="true" /> if the property should be persisted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsChangeEvents">
      <MemberSignature Language="C#" Value="public override bool SupportsChangeEvents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsChangeEvents" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SupportsChangeEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsChangeEvents { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b1c7-235">Wskazuje, czy powiadomienia o zmianie wartości dla tej właściwości mogą pochodzić od poza deskryptora właściwości, takie jak ze składnika, czy powiadomienia będą pochodzić wyłącznie od bezpośrednie wywołania wprowadzone <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-235">Indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />.</span></span></summary>
        <value>
          <span data-ttu-id="9b1c7-236"><see langword="true" /> Jeśli powiadomienia dla tej właściwości może pochodzą z poza deskryptora właściwości, takie jak sam składnik.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-236"><see langword="true" /> if notifications for this property may originate from outside the property descriptor, such as from the component itself.</span></span> <span data-ttu-id="9b1c7-237"><see langword="false" /> Jeśli powiadomienia będą pochodzić wyłącznie od bezpośrednie wywołania <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-237"><see langword="false" /> if notifications will only originate from direct calls made to <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b1c7-238">Na przykład w przypadku `true` przypadku może wdrożyć składnik <xref:System.ComponentModel.INotifyPropertyChanged> interfejsu lub mogą mieć jawnego `propertyName.Changed` zdarzeń dla tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-238">For example, for the `true` case, the component may implement the <xref:System.ComponentModel.INotifyPropertyChanged> interface, or may have an explicit `propertyName.Changed` event for this property.</span></span>  
  
 <span data-ttu-id="9b1c7-239">Ta właściwość zależy od odpowiadającego <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-239">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9b1c7-240">Konwertuje wartość tego wystąpienia na jego równoważną reprezentację w postaci ciągu.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-240">Converts the value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="9b1c7-241">Zwraca <see cref="P:System.ComponentModel.MemberDescriptor.Name" /> wartość.</span><span class="sxs-lookup"><span data-stu-id="9b1c7-241">Returns the <see cref="P:System.ComponentModel.MemberDescriptor.Name" /> value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>