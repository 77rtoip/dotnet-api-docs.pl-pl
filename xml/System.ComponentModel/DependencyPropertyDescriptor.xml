<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DependencyPropertyDescriptor.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58b92ae7ae04745f0947cc4f73be429fa86e1532f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8b92ae7ae04745f0947cc4f73be429fa86e1532f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.DependencyPropertyDescriptor">
          <source>Provides an extension of <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> that accounts for the additional property characteristics of a dependency property.</source>
          <target state="translated">Udostępnia rozszerzenie <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> który konta dla właściwości dodatkowe właściwości właściwości zależności.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DependencyPropertyDescriptor">
          <source>This class is primarily used by designer applications.</source>
          <target state="translated">Ta klasa jest używana głównie przez projektanta aplikacji.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DependencyPropertyDescriptor">
          <source>These applications may need to report the dependency property characteristics through property windows or other tools used for editing property values.</source>
          <target state="translated">Te aplikacje może być konieczne właściwości właściwości zależności za pomocą właściwości systemu windows lub innych narzędzi używanych do edycji wartości właściwości raportu.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DependencyPropertyDescriptor">
          <source>In order to check a specific property to determine whether it has <ph id="ph1">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> available to serve as a <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>, call either <ph id="ph3">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor.FromProperty%28System.ComponentModel.PropertyDescriptor%29?displayProperty=nameWithType&gt;</ph>, or <ph id="ph4">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor.FromName%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Aby sprawdzić konkretnej właściwości, aby ustalić, czy ma <ph id="ph1">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> dostępne jako <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>, albo wywoływać <ph id="ph3">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor.FromProperty%28System.ComponentModel.PropertyDescriptor%29?displayProperty=nameWithType&gt;</ph>, lub <ph id="ph4">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor.FromName%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DependencyPropertyDescriptor">
          <source>If either method returns <ph id="ph1">`null`</ph>, then the property is not a dependency property.</source>
          <target state="translated">Jeśli każda metoda zwraca <ph id="ph1">`null`</ph>, a następnie właściwość nie jest właściwością zależności.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DependencyPropertyDescriptor">
          <source>If the method returns a valid <ph id="ph1">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> , then the property is a dependency property.</source>
          <target state="translated">Jeśli metoda zwraca prawidłową <ph id="ph1">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> , a następnie właściwość jest właściwością zależności.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
          <source>The component to add the handler for.</source>
          <target state="translated">Element, aby dodać obsługę programu.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
          <source>The delegate to add as a listener.</source>
          <target state="translated">Delegat do dodania jako odbiornik.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
          <source>Enables other objects to be notified when this property changes.</source>
          <target state="translated">Umożliwia inne obiekty, aby otrzymać powiadomienie, gdy ta właściwość ulegnie zmianie.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Attributes">
          <source>Gets the collection of attributes for this member.</source>
          <target state="translated">Pobiera kolekcję atrybutów dla tego elementu członkowskiego.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Attributes">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph> collection of attributes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph> Kolekcję atrybutów.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)">
          <source>The component to test for reset capability.</source>
          <target state="translated">Składnik, aby sprawdzić możliwość resetowania.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)">
          <source>Returns whether resetting an object changes its value.</source>
          <target state="translated">Zwraca czy Resetowanie obiektu zmienia jego wartość.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if resetting the component changes its value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Resetowanie składnika zmienia się wartość; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)">
          <source>This method relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Ta metoda polega na podstawowych <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Category">
          <source>Gets the name of the category that the member belongs to, as specified in the <ph id="ph1">&lt;see cref="T:System.ComponentModel.CategoryAttribute" /&gt;</ph>.</source>
          <target state="translated">Pobiera nazwę kategorii, której należy element członkowski, jak określono w <ph id="ph1">&lt;see cref="T:System.ComponentModel.CategoryAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Category">
          <source>The name of the category to which the member belongs.</source>
          <target state="translated">Nazwa kategorii, do której należy element członkowski.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Category">
          <source>If there is no <ph id="ph1">&lt;see cref="T:System.ComponentModel.CategoryAttribute" /&gt;</ph>, the category name is set to the default category, <ph id="ph2">&lt;see langword="Misc" /&gt;</ph>.</source>
          <target state="translated">W przypadku nie <ph id="ph1">&lt;see cref="T:System.ComponentModel.CategoryAttribute" /&gt;</ph>, nazwa kategorii ustawiono domyślnej kategorii <ph id="ph2">&lt;see langword="Misc" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Category">
          <source>This property relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Ta właściwość zależy od odpowiadającego <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.ComponentType">
          <source>Gets the type of the component this property is bound to.</source>
          <target state="translated">Pobiera typ składnika, który jest powiązany tej właściwości.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.ComponentType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of component this property is bound to.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> reprezentujący typ składnika, ta właściwość jest powiązana.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.ComponentType">
          <source>When <ph id="ph1">&lt;see cref="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /&gt;</ph> are invoked, the object specified might be an instance of this type.</source>
          <target state="translated">Gdy <ph id="ph1">&lt;see cref="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)" /&gt;</ph> lub <ph id="ph2">&lt;see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /&gt;</ph> są wywoływane, określony obiekt może być wystąpienia tego typu.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.ComponentType">
          <source>This property relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Ta właściwość zależy od odpowiadającego <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Converter">
          <source>Gets the type converter for this property.</source>
          <target state="translated">Pobiera konwerter typu dla tej właściwości.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Converter">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> that is used to convert the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> of this property.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> używany do przekonwertowania <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> tej właściwości.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Converter">
          <source>This property may be <ph id="ph1">`null`</ph> in cases where the attributed <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> is not a public class.</source>
          <target state="translated">Ta właściwość może być <ph id="ph1">`null`</ph> w przypadkach, gdy oparte na atrybutach <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> nie jest klasą publiczną.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty">
          <source>Returns the dependency property identifier.</source>
          <target state="translated">Zwraca identyfikator właściwości zależności.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty">
          <source>The dependency property identifier.</source>
          <target state="translated">Identyfikator właściwości zależności.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty">
          <source>This property may be <ph id="ph1">`null`</ph> if a <ph id="ph2">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> instance was created for a property that is not a dependency property.</source>
          <target state="translated">Ta właściwość może być <ph id="ph1">`null`</ph> Jeśli <ph id="ph2">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> wystąpienie zostało utworzone dla właściwości, która nie jest właściwością zależności.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Description">
          <source>Gets the description of the member, as specified in the <ph id="ph1">&lt;see cref="T:System.ComponentModel.DescriptionAttribute" /&gt;</ph>.</source>
          <target state="translated">Pobiera opis elementu członkowskiego, jak określono w <ph id="ph1">&lt;see cref="T:System.ComponentModel.DescriptionAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Description">
          <source>The description of the member.</source>
          <target state="translated">Opis elementu członkowskiego.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Description">
          <source>If there is no <ph id="ph1">&lt;see cref="T:System.ComponentModel.DescriptionAttribute" /&gt;</ph>, the property value is set to the default, which is an empty string ("").</source>
          <target state="translated">W przypadku nie <ph id="ph1">&lt;see cref="T:System.ComponentModel.DescriptionAttribute" /&gt;</ph>, wartość właściwości jest równa domyślna, czyli ciąg pusty ("").</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Description">
          <source>This property relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Ta właściwość zależy od odpowiadającego <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback">
          <source>Gets or sets a callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.</source>
          <target state="translated">Pobiera lub ustawia wywołanie zwrotne, które projektantów Użyj, aby zmodyfikować efektywną wartość właściwości zależności, aby wartość właściwości zależności są przechowywane w aparacie właściwości zależności.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback">
          <source>A callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.</source>
          <target state="translated">Wywołanie zwrotne, które projektantów Użyj, aby zmodyfikować efektywną wartość właściwości zależności, aby wartość właściwości zależności są przechowywane w aparacie właściwości zależności.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly">
          <source>Gets whether this member should be set only at design time, as specified in the <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignOnlyAttribute" /&gt;</ph>.</source>
          <target state="translated">Pobiera informację, czy ten element członkowski należy ustawić tylko w czasie projektowania, jak określono w <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignOnlyAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this member should be set only at design time; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the member can be set during run time.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli ten element członkowski należy ustawić tylko w czasie projektowania; <ph id="ph2">&lt;see langword="false" /&gt;</ph> Jeśli element członkowski może zostać ustawione w czasie wykonywania.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly">
          <source>If there is no <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignOnlyAttribute" /&gt;</ph>, the return value is the default, which is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">W przypadku nie <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignOnlyAttribute" /&gt;</ph>, wartość zwracana jest wartość domyślna, czyli <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly">
          <source>This property relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Ta właściwość zależy od odpowiadającego <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.DisplayName">
          <source>Gets the name that can be displayed in a window, such as a Properties window.</source>
          <target state="translated">Pobiera nazwę, która może być wyświetlana w oknie, takie jak okna właściwości.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.DisplayName">
          <source>The name to display for the property.</source>
          <target state="translated">Nazwa, aby wyświetlić właściwości.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.DisplayName">
          <source>This property relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Ta właściwość zależy od odpowiadającego <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> to compare with the current instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> Do porównania z bieżącym wystąpieniem.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)">
          <source>Compares two <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> instances for equality.</source>
          <target state="translated">Porównuje dwa <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> wystąpienia pod kątem równości.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the values are equivalent; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli wartości są równoważne; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.DependencyPropertyDescriptor">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> for a provided property name.</source>
          <target state="translated">Zwraca <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> dla nazwy właściwości podana.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
          <source>The registered name of a dependency property or an attached property.</source>
          <target state="translated">Zarejestrowaną nazwę właściwości zależności lub dołączona właściwość.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the object that owns the property definition.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> Obiektu, który jest właścicielem definicji właściwości.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the object you want to set the property for.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> Chcesz ustawić właściwości dla obiektu.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> for a provided property name.</source>
          <target state="translated">Zwraca <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> dla nazwy właściwości podana.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
          <source>The requested <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph>.</source>
          <target state="translated">Żądany <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
          <source>The <ph id="ph1">`name`</ph> may refer to a dependency property or an attached property, and is the <ph id="ph2">`name`</ph> parameter as passed to the <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</ph> call that defined the property in question.</source>
          <target state="translated"><ph id="ph1">`name`</ph> Mogą odwoływać się do właściwości zależności lub dołączona właściwość i jest <ph id="ph2">`name`</ph> parametru jako przekazaną do <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph> lub <ph id="ph4">&lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</ph> wywołaniu, które zdefiniowano właściwość zagrożona.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
          <source><ph id="ph1">`ownerType`</ph> is the type of object that owns the property, again as passed to <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`ownerType`</ph> Typ obiektu, który jest właścicielem właściwości ponownie jako przekazywane do <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph> lub <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
          <source><ph id="ph1">`targetType`</ph> is the type of object you want to set the property for.</source>
          <target state="translated"><ph id="ph1">`targetType`</ph> jest to typ obiektu, którego chcesz ustawić właściwość.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
          <source>For dependency properties, <ph id="ph1">`ownerType`</ph> and <ph id="ph2">`targetType`</ph> are the same type.</source>
          <target state="translated">Dla właściwości zależności <ph id="ph1">`ownerType`</ph> i <ph id="ph2">`targetType`</ph> są tego samego typu.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
          <source>For attached properties they usually differ.</source>
          <target state="translated">Dołączone właściwości, które zwykle różnią się.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
          <source>The registered name of a dependency property or an attached property.</source>
          <target state="translated">Zarejestrowaną nazwę właściwości zależności lub dołączona właściwość.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the object that owns the property definition.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> Obiektu, który jest właścicielem definicji właściwości.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the object you want to set the property for.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> Chcesz ustawić właściwości dla obiektu.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
          <source>Specifies to ignore the property type.</source>
          <target state="translated">Określa, aby zignorować typ właściwości.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> for a provided property name.</source>
          <target state="translated">Zwraca <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> dla nazwy właściwości podana.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
          <source>The requested <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph>.</source>
          <target state="translated">Żądany <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
          <source>The <ph id="ph1">`name`</ph> may refer to a dependency property or an attached property, and is the <ph id="ph2">`name`</ph> parameter as passed to the <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</ph> call that defined the property in question.</source>
          <target state="translated"><ph id="ph1">`name`</ph> Mogą odwoływać się do właściwości zależności lub dołączona właściwość i jest <ph id="ph2">`name`</ph> parametru jako przekazaną do <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph> lub <ph id="ph4">&lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</ph> wywołaniu, które zdefiniowano właściwość zagrożona.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
          <source><ph id="ph1">`ownerType`</ph> is the type of object that owns the property, again as passed to <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`ownerType`</ph> Typ obiektu, który jest właścicielem właściwości ponownie jako przekazywane do <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph> lub <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
          <source><ph id="ph1">`targetType`</ph> is the type of object you want to set the property for.</source>
          <target state="translated"><ph id="ph1">`targetType`</ph> jest to typ obiektu, którego chcesz ustawić właściwość.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
          <source>For dependency properties, <ph id="ph1">`ownerType`</ph> and <ph id="ph2">`targetType`</ph> are the same type.</source>
          <target state="translated">Dla właściwości zależności <ph id="ph1">`ownerType`</ph> i <ph id="ph2">`targetType`</ph> są tego samego typu.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
          <source>For attached properties they usually differ.</source>
          <target state="translated">Dołączone właściwości, które zwykle różnią się.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.DependencyPropertyDescriptor">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> based either on a provided <ph id="ph2">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> or a provided type, depending on the signature used.</source>
          <target state="translated">Zwraca <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> opartą na podany <ph id="ph2">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> lub udostępnionego typu, w zależności od podpis używany.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> to check.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> Do sprawdzenia.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> for a provided <ph id="ph2">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>.</source>
          <target state="translated">Zwraca <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> dla podanego <ph id="ph2">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)">
          <source>If the property described by <ph id="ph1">&lt;paramref name="property" /&gt;</ph> is a dependency property, returns a valid <ph id="ph2">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph>.</source>
          <target state="translated">Jeśli właściwość opisanego przez <ph id="ph1">&lt;paramref name="property" /&gt;</ph> właściwości zależności, zwraca prawidłową <ph id="ph2">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)">
          <source>Otherwise, returns a <ph id="ph1">&lt;see langword="null" /&gt;</ph><ph id="ph2">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph>.</source>
          <target state="translated">W przeciwnym razie zwraca <ph id="ph1">&lt;see langword="null" /&gt;</ph> <ph id="ph2">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)">
          <source>This method is the primary method used by designer applications to obtain a <ph id="ph1">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> on basis of checking all properties for a <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Ta metoda jest podstawową metodę przez projektanta aplikacji można uzyskać <ph id="ph1">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> na podstawie sprawdzania wszystkie właściwości <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
          <source>The identifier for a dependency property.</source>
          <target state="translated">Identyfikator właściwości zależności.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
          <source>The type of the object where the property is set.</source>
          <target state="translated">Typ obiektu, gdy właściwość jest ustawiona.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> for a provided dependency property and target type.</source>
          <target state="translated">Zwraca <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> dla typu właściwości i docelowa podana zależności.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> for the provided dependency property.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> dla właściwości zależności podana.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
          <source>The <ph id="ph1">`dependencyProperty`</ph> may refer to a dependency property or an attached property.</source>
          <target state="translated"><ph id="ph1">`dependencyProperty`</ph> Może odwoływać się do właściwości zależności lub dołączona właściwość.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
          <source><ph id="ph1">`targetType`</ph> is the type of object you want to set the property for.</source>
          <target state="translated"><ph id="ph1">`targetType`</ph> jest to typ obiektu, którego chcesz ustawić właściwość.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
          <source>For dependency properties, that type is equivalent to the <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.OwnerType%2A&gt;</ph> for the <ph id="ph2">`dependencyProperty`</ph>.</source>
          <target state="translated">Dla właściwości zależności, które jest odpowiednikiem typu <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.OwnerType%2A&gt;</ph> dla <ph id="ph2">`dependencyProperty`</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
          <source>For attached properties the <ph id="ph1">`targetType`</ph> is typically some other <ph id="ph2">&lt;xref:System.Windows.DependencyObject&gt;</ph> type.</source>
          <target state="translated">Dla dołączone właściwości <ph id="ph1">`targetType`</ph> jest zazwyczaj innymi <ph id="ph2">&lt;xref:System.Windows.DependencyObject&gt;</ph> typu.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>A component to get the properties for.</source>
          <target state="translated">Składnik można pobrać właściwości.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> to use as a filter.</source>
          <target state="translated">Tablica typu <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> do użycia jako filtr.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>.</source>
          <target state="translated">Zwraca <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties that match the specified attributes for the specified component.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> z właściwościami, spełniających określone atrybuty dla określonego składnika.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>This method relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Ta metoda polega na podstawowych <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)">
          <source>The base type of editor, which is used to differentiate between multiple editors that a property supports.</source>
          <target state="translated">Typ podstawowy edytor, który jest używany w celu rozróżnienia wielu edytory, które obsługuje właściwości.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)">
          <source>Gets an editor of the specified type.</source>
          <target state="translated">Pobiera edytora określonego typu.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)">
          <source>An instance of the requested editor type, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if an editor cannot be found.</source>
          <target state="translated">Wystąpienie typu żądanego Edytor lub <ph id="ph1">&lt;see langword="null" /&gt;</ph> Jeśli nie można odnaleźć edytora.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)">
          <source>This method relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Ta metoda polega na podstawowych <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetHashCode">
          <source>Returns the hash code for this <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph>.</source>
          <target state="translated">Zwraca wartość skrótu dla tego <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Kod skrótu 32-bitowej liczby całkowitej ze znakiem.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetHashCode">
          <source>The hash code for <ph id="ph1">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> is based both on the identifier for a dependency property and on the type on which it is set.</source>
          <target state="translated">Wartość skrótu dla <ph id="ph1">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> opiera się zarówno na podstawie identyfikatora właściwości zależności, jak i na typ, na którym jest ustawiona.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetHashCode">
          <source>This implementation assures that a <ph id="ph1">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> does not improperly return the same hash code for properties that are inherited by the many possible derived classes, or for properties that are otherwise re-assigned through the property system.</source>
          <target state="translated">Ta implementacja gwarantuje, że <ph id="ph1">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> nieprawidłowo nie zwracać taki sam skrót dla właściwości, które są dziedziczone przez wiele klas pochodnych możliwe lub dla właściwości, przypisane w przeciwnym razie ponownie za pomocą właściwości systemu.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)">
          <source>The component instance.</source>
          <target state="translated">Wystąpienie składnika.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)">
          <source>Resturns the current value of the property on a component.</source>
          <target state="translated">Bieżąca wartość właściwości składnika Resturns.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)">
          <source>The requested value.</source>
          <target state="translated">Żądana wartość.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)">
          <source>This method relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Ta metoda polega na podstawowych <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsAttached">
          <source>Gets a value that indicates whether the property is registered as an attached property and is being used through an attached usage.</source>
          <target state="translated">Pobiera wartość wskazującą, czy właściwość jest zarejestrowany jako dołączona właściwość i jest on używany przez użycie dołączone.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsAttached">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property is an attached property; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli właściwość jest dołączona właściwość; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable">
          <source>Gets a value that indicates the value of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.BrowsableAttribute" /&gt;</ph> on the property.</source>
          <target state="translated">Pobiera wartość, która wskazuje wartość <ph id="ph1">&lt;see cref="T:System.ComponentModel.BrowsableAttribute" /&gt;</ph> we właściwości.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.ComponentModel.BrowsableAttribute" /&gt;</ph> was specified on the property; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;see cref="T:System.ComponentModel.BrowsableAttribute" /&gt;</ph> została określona we właściwości; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable">
          <source>This property relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Ta właściwość zależy od odpowiadającego <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable">
          <source>Gets a value indicating whether this property should be localized, as specified in the <ph id="ph1">&lt;see cref="T:System.ComponentModel.LocalizableAttribute" /&gt;</ph>.</source>
          <target state="translated">Pobiera wartość wskazującą, czy ta właściwość powinna być lokalizowany, jak określono w <ph id="ph1">&lt;see cref="T:System.ComponentModel.LocalizableAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the member is marked with the <ph id="ph2">&lt;see cref="T:System.ComponentModel.LocalizableAttribute" /&gt;</ph> constructor of the value true; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli element członkowski jest oznaczony atrybutem <ph id="ph2">&lt;see cref="T:System.ComponentModel.LocalizableAttribute" /&gt;</ph> Konstruktor wartość PRAWDA; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable">
          <source>This property relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Ta właściwość zależy od odpowiadającego <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly">
          <source>Gets a value indicating whether this property is read-only.</source>
          <target state="translated">Pobiera wartość wskazującą, czy ta właściwość jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property is read-only; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli właściwość jest tylko do odczytu. w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly">
          <source>This property relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Ta właściwość zależy od odpowiadającego <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly">
          <source>Dependency properties are registered as read-only using particular method calls, and by convention the <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> wrapper properties that are the properties viewed by reflection and the descriptors must also be read-only.</source>
          <target state="translated">Właściwości zależności są rejestrowane jako tylko do odczytu przy użyciu wywołania metody określonej i Konwencja <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> otoki właściwości, które są wyświetlane przez odbicie i deskryptorów właściwości również musi być tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly">
          <source>However, since this is a convention and not a requirement to compile, you might want to double check the dependency property identifier read-only state.</source>
          <target state="translated">Jednakże ponieważ jest to Konwencji i nie stanowi wymóg do kompilacji, można dokładnie sprawdzić zależności właściwość identyfikatora tylko do odczytu stanu.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly">
          <source>To do this, get the identifier (<ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph>) value for this <ph id="ph2">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> and then check the value of <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.ReadOnly%2A&gt;</ph>.</source>
          <target state="translated">Aby to zrobić, należy uzyskać identyfikator (<ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph>) to wartość <ph id="ph2">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> , a następnie sprawdź wartość <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.ReadOnly%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly">
          <source>Note that the <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.ReadOnly%2A&gt;</ph> is on the identifier itself, not metadata.</source>
          <target state="translated">Należy pamiętać, że <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.ReadOnly%2A&gt;</ph> jest na podstawie identyfikatora, nie metadanych.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Metadata">
          <source>Gets the metadata associated with the dependency property.</source>
          <target state="translated">Pobiera metadane skojarzone z właściwości zależności.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Metadata">
          <source>The dependency property metadata.</source>
          <target state="translated">Metadane właściwości zależności.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Metadata">
          <source>The value can be <ph id="ph1">`null`</ph> if there is  no metadata or if the property is not a dependency property.</source>
          <target state="translated">Wartość może być <ph id="ph1">`null`</ph> Jeśli brak metadanych nie lub właściwość nie jest właściwością zależności.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Metadata">
          <source>Metadata that has matching concepts in <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> attributes is re-exposed as attributes in the <ph id="ph2">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor.Attributes%2A&gt;</ph> collection.</source>
          <target state="translated">Metadane, który posiada odpowiadającego pojęcia związane z <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> atrybutów jest ponownie uwidocznione jako atrybuty w <ph id="ph2">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor.Attributes%2A&gt;</ph> kolekcji.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.PropertyType">
          <source>Gets the represented <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the dependency property.</source>
          <target state="translated">Pobiera reprezentowanego <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> właściwości zależności.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.PropertyType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the dependency property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> Właściwości zależności.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.PropertyType">
          <source>This property returns the <ph id="ph1">&lt;xref:System.Type&gt;</ph> that the dependency property was registered with.</source>
          <target state="translated">Ta właściwość zwraca <ph id="ph1">&lt;xref:System.Type&gt;</ph> , który został zarejestrowany właściwości zależności.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
          <source>The component to add the handler for.</source>
          <target state="translated">Element, aby dodać obsługę programu.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
          <source>The delegate to add as a listener.</source>
          <target state="translated">Delegat do dodania jako odbiornik.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
          <source>Enables other objects to be notified when this property changes.</source>
          <target state="translated">Umożliwia inne obiekty, aby otrzymać powiadomienie, gdy ta właściwość ulegnie zmianie.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
          <source>This method relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Ta metoda polega na podstawowych <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)">
          <source>The component with the property value that is to be reset to the default value.</source>
          <target state="translated">Składnik z wartością właściwości, która ma być zresetowane do wartości domyślnej.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)">
          <source>Resets the value for this property of the component to the default value.</source>
          <target state="translated">Resetuje wartości dla tej właściwości składnika do wartości domyślnej.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)">
          <source>This method relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Ta metoda polega na podstawowych <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The component with the property value that is to be set.</source>
          <target state="translated">Składnik, należy ustawić wartość właściwości.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The new value.</source>
          <target state="translated">Nowa wartość.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>Sets the value of the component to a different value.</source>
          <target state="translated">Ustawia wartość składnika innej wartości.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>This method relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Ta metoda polega na podstawowych <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>The component with the property to be examined for persistence.</source>
          <target state="translated">Składnik razem z właściwością badane trwałości.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>Indicates whether the value of this property needs to be persisted by serialization processes.</source>
          <target state="translated">Wskazuje, czy wartość tej właściwości musi zostać utrwalony przez procesy serializacji.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property should be persisted; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli właściwość powinna zostać utrwalony; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents">
          <source>Indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to <ph id="ph1">&lt;see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /&gt;</ph>.</source>
          <target state="translated">Wskazuje, czy powiadomienia o zmianie wartości dla tej właściwości mogą pochodzić od poza deskryptora właściwości, takie jak ze składnika, czy powiadomienia będą pochodzić wyłącznie od bezpośrednie wywołania wprowadzone <ph id="ph1">&lt;see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if notifications for this property may originate from outside the property descriptor, such as from the component itself.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli powiadomienia dla tej właściwości może pochodzą z poza deskryptora właściwości, takie jak sam składnik.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if notifications will only originate from direct calls made to <ph id="ph2">&lt;see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph> Jeśli powiadomienia będą pochodzić wyłącznie od bezpośrednie wywołania <ph id="ph2">&lt;see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents">
          <source>For example, for the <ph id="ph1">`true`</ph> case, the component may implement the <ph id="ph2">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> interface, or may have an explicit <ph id="ph3">`propertyName.Changed`</ph> event for this property.</source>
          <target state="translated">Na przykład w przypadku <ph id="ph1">`true`</ph> przypadku może wdrożyć składnik <ph id="ph2">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> interfejsu lub mogą mieć jawnego <ph id="ph3">`propertyName.Changed`</ph> zdarzeń dla tej właściwości.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents">
          <source>This property relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Ta właściwość zależy od odpowiadającego <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.ToString">
          <source>Converts the value of this instance to its equivalent string representation.</source>
          <target state="translated">Konwertuje wartość tego wystąpienia na jego równoważną reprezentację w postaci ciągu.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.ToString">
          <source>Returns the <ph id="ph1">&lt;see cref="P:System.ComponentModel.MemberDescriptor.Name" /&gt;</ph> value.</source>
          <target state="translated">Zwraca <ph id="ph1">&lt;see cref="P:System.ComponentModel.MemberDescriptor.Name" /&gt;</ph> wartość.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>