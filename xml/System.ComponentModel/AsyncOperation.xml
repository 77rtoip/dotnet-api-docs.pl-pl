<Type Name="AsyncOperation" FullName="System.ComponentModel.AsyncOperation">
  <TypeSignature Language="C#" Value="public sealed class AsyncOperation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AsyncOperation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AsyncOperation" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AsyncOperation" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsyncOperation sealed" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="40d23-101">Śledzi okres istnienia operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="40d23-101">Tracks the lifetime of an asynchronous operation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40d23-102">Podczas implementacji klasy zgodnie z [oparty na zdarzeniach asynchroniczny wzorzec — Przegląd](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), konieczne może być śledzić okres istnienia każdej operacji asynchronicznej wywoływane na wystąpienie klasy.</span><span class="sxs-lookup"><span data-stu-id="40d23-102">When you implement a class according to the [Event-based Asynchronous Pattern Overview](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), you may need to track the lifetime of each asynchronous operation invoked on an instance of your class.</span></span> <span data-ttu-id="40d23-103"><xref:System.ComponentModel.AsyncOperation> Klasa dostarcza metody do śledzenia i raportowania postępu zadania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="40d23-103">The <xref:System.ComponentModel.AsyncOperation> class provides ways to track and report the progress of an asynchronous task.</span></span>  
  
 <span data-ttu-id="40d23-104">Poniższa lista zawiera sposoby używania <xref:System.ComponentModel.AsyncOperation> obiektu:</span><span class="sxs-lookup"><span data-stu-id="40d23-104">The following list identifies ways to use an <xref:System.ComponentModel.AsyncOperation> object:</span></span>  
  
-   <span data-ttu-id="40d23-105">Aby zgłosić postęp i wyniki pośrednie do klienta, należy wywołać <xref:System.ComponentModel.AsyncOperation.Post%2A> w kodzie asynchroniczne procesu roboczego.</span><span class="sxs-lookup"><span data-stu-id="40d23-105">To report progress and interim results to the client, call <xref:System.ComponentModel.AsyncOperation.Post%2A> from your asynchronous worker code.</span></span>  
  
-   <span data-ttu-id="40d23-106">Aby wskazać, że Ukończono zadanie asynchroniczne lub aby anulować oczekujące zadania asynchronicznego wywołania <xref:System.ComponentModel.AsyncOperation.PostOperationCompleted%2A>.</span><span class="sxs-lookup"><span data-stu-id="40d23-106">To indicate that an asynchronous task has completed, or to cancel a pending asynchronous task, call <xref:System.ComponentModel.AsyncOperation.PostOperationCompleted%2A>.</span></span>  
  
 <span data-ttu-id="40d23-107">Należy uzyskać klasy <xref:System.ComponentModel.AsyncOperation> obiekt dla każdego zadania asynchroniczne, wywołując <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A?displayProperty=nameWithType> podczas uruchamiania każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="40d23-107">Your class should get an <xref:System.ComponentModel.AsyncOperation> object for each asynchronous task by calling <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A?displayProperty=nameWithType> when each task starts.</span></span> <span data-ttu-id="40d23-108">Aby umożliwić klientowi rozróżnienia oddzielne zadania asynchroniczne, <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A?displayProperty=nameWithType> przyjmuje parametr unikatowy token dostarczony do klienta, która staje się <xref:System.ComponentModel.AsyncOperation.UserSuppliedState%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="40d23-108">To allow the client to distinguish separate asynchronous tasks, <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A?displayProperty=nameWithType> takes a parameter for a unique client-provided token, which becomes the <xref:System.ComponentModel.AsyncOperation.UserSuppliedState%2A> property.</span></span> <span data-ttu-id="40d23-109">Następnie umożliwia przez kod klienta do identyfikowania określonego zadania asynchroniczne, które jest wywoływanie zdarzeń w toku lub zakończenia.</span><span class="sxs-lookup"><span data-stu-id="40d23-109">It can then be used by client code to identify the particular asynchronous task that is raising progress or completion events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40d23-110">Poniższy przykład kodu pokazuje, przy użyciu <xref:System.ComponentModel.AsyncOperation> obiekt, aby śledzić okres istnienia operacji asynchronicznych.</span><span class="sxs-lookup"><span data-stu-id="40d23-110">The following code example demonstrates using an <xref:System.ComponentModel.AsyncOperation> object to track the lifetime of asynchronous operations.</span></span> <span data-ttu-id="40d23-111">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> klasy.</span><span class="sxs-lookup"><span data-stu-id="40d23-111">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="40d23-112">Listy pełnego kodu, zobacz [porady: implementacja składnika obsługującego wzorzec asynchroniczny oparty na zdarzeniach](http://msdn.microsoft.com/library/3c1aa4d4-da87-4a03-b812-3d167b8c57cf).</span><span class="sxs-lookup"><span data-stu-id="40d23-112">For a full code listing, see [How to: Implement a Component That Supports the Event-based Asynchronous Pattern](http://msdn.microsoft.com/library/3c1aa4d4-da87-4a03-b812-3d167b8c57cf).</span></span> <span data-ttu-id="40d23-113">Listy pełnego kodu formularza klienta, zobacz [porady: implementacja klienta wzorca asynchronicznego opartego na zdarzeniach](~/docs/standard/asynchronous-programming-patterns/how-to-implement-a-client-of-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="40d23-113">For a full code listing of a client form, see [How to: Implement a Client of the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/how-to-implement-a-client-of-the-event-based-asynchronous-pattern.md).</span></span>  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#3)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#3)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="40d23-114">Implementacje musi zapewnić <see cref="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" /> i <see cref="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" /> wywołania są asynchroniczne, dzięki czemu nie trzeba dotyczą się z klasy dostawców biblioteki przepełnienie stosu potencjalnych, jeśli zakładają asynchroniczne zachowanie w określonej aplikacji Model stanie się odbywać się synchronicznie.</span><span class="sxs-lookup"><span data-stu-id="40d23-114">Implementers must ensure the <see cref="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" /> and <see cref="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" /> invocations are asynchronous, so that class library providers do not need to concern themselves with potential stack overflows if they assume asynchronous behavior in a particular application model that happens to be synchronous.</span></span>  
  
 <span data-ttu-id="40d23-115">Aby uzyskać więcej informacji o implementacji klasy asynchroniczne, zobacz [implementacji wzorca asynchronicznego opartego na zdarzeniach](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="40d23-115">For more information about implementing asynchronous classes, see [Implementing the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span></span></para>
    </block>
    <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
  </Docs>
  <Members>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~AsyncOperation ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncOperation.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!AsyncOperation ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="40d23-116">Kończenie znajdujących się w operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="40d23-116">Finalizes the asynchronous operation.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationCompleted">
      <MemberSignature Language="C#" Value="public void OperationCompleted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OperationCompleted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncOperation.OperationCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Sub OperationCompleted ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OperationCompleted();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="40d23-117">Kończy się okres istnienia operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="40d23-117">Ends the lifetime of an asynchronous operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40d23-118">Wywołanie <xref:System.ComponentModel.AsyncOperation.OperationCompleted%2A> metody do końca okresu istnienia operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="40d23-118">Call the <xref:System.ComponentModel.AsyncOperation.OperationCompleted%2A> method to end the lifetime of an asynchronous operation.</span></span> <span data-ttu-id="40d23-119">Po ta metoda jest wywoływana dla poszczególnych zadań, wywołań odpowiednie <xref:System.ComponentModel.AsyncOperation> zgłosi wyjątek.</span><span class="sxs-lookup"><span data-stu-id="40d23-119">After this method is called for a particular task, calls to its corresponding <xref:System.ComponentModel.AsyncOperation> will raise an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="40d23-120"><see cref="M:System.ComponentModel.AsyncOperation.OperationCompleted" /> Wywołano wcześniej dla tego zadania.</span><span class="sxs-lookup"><span data-stu-id="40d23-120"><see cref="M:System.ComponentModel.AsyncOperation.OperationCompleted" /> has been called previously for this task.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Post">
      <MemberSignature Language="C#" Value="public void Post (System.Threading.SendOrPostCallback d, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Post(class System.Threading.SendOrPostCallback d, object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Post (d As SendOrPostCallback, arg As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Post(System::Threading::SendOrPostCallback ^ d, System::Object ^ arg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Threading.SendOrPostCallback" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="40d23-121">A <see cref="T:System.Threading.SendOrPostCallback" /> obiekt, który opakowuje delegata, który ma być wywoływana po zakończeniu operacji.</span><span class="sxs-lookup"><span data-stu-id="40d23-121">A <see cref="T:System.Threading.SendOrPostCallback" /> object that wraps the delegate to be called when the operation ends.</span></span></param>
        <param name="arg"><span data-ttu-id="40d23-122">Argument dla obiekt delegowany zawarte w <c>d</c> parametru.</span><span class="sxs-lookup"><span data-stu-id="40d23-122">An argument for the delegate contained in the <c>d</c> parameter.</span></span></param>
        <summary><span data-ttu-id="40d23-123">Wywołuje delegata w kontekście odpowiednie dla modelu aplikacji lub wątku.</span><span class="sxs-lookup"><span data-stu-id="40d23-123">Invokes a delegate on the thread or context appropriate for the application model.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40d23-124"><xref:System.ComponentModel.AsyncOperation.Post%2A> Metoda wywołuje delegata określony przez `arg` parametru bez przerywania okres istnienia operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="40d23-124">The <xref:System.ComponentModel.AsyncOperation.Post%2A> method invokes the delegate specified by the `arg` parameter without ending the lifetime of the asynchronous operation.</span></span>  
  
 <span data-ttu-id="40d23-125">Możesz wywołać <xref:System.ComponentModel.AsyncOperation.Post%2A> tak często, jak podczas trwania operacji asynchronicznej nie został zakończony przez wywołanie do metody <xref:System.ComponentModel.AsyncOperation.PostOperationCompleted%2A>.</span><span class="sxs-lookup"><span data-stu-id="40d23-125">You can call the <xref:System.ComponentModel.AsyncOperation.Post%2A> method as often as you like while the lifetime of the asynchronous operation has not been ended by a call to <xref:System.ComponentModel.AsyncOperation.PostOperationCompleted%2A>.</span></span> <span data-ttu-id="40d23-126">Metoda umożliwia raportowanie postępu lub wyników pośrednich wstecz do klientów.</span><span class="sxs-lookup"><span data-stu-id="40d23-126">You can use the method to report progress or interim results back to clients.</span></span>  
  
 <span data-ttu-id="40d23-127">`d` Parametr opakowuje delegat ma być wywołane gdy aktualizacja o stanie zadania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="40d23-127">The `d` parameter wraps the delegate you want called when you want to post an update about the status of the asynchronous task.</span></span> <span data-ttu-id="40d23-128"><xref:System.ComponentModel.AsyncOperation> Obiektu zapewni, że pełnomocnika została wywołana w kontekście odpowiednie dla modelu aplikacji lub wątku.</span><span class="sxs-lookup"><span data-stu-id="40d23-128">The <xref:System.ComponentModel.AsyncOperation> object will ensure that your delegate is invoked on the thread or context appropriate for the application model.</span></span> <span data-ttu-id="40d23-129">Metodę można opcjonalnie podnieść zdarzenie powiadamia klientów o Zmień stan, postęp aktualizacji lub nowo dostępne wyniki przyrostowe.</span><span class="sxs-lookup"><span data-stu-id="40d23-129">Your method can optionally raise an event that notifies clients of a status change, progress update, or newly available incremental results.</span></span>  
  
 <span data-ttu-id="40d23-130">`arg` Parametr powinien być używany do przekazania stanu do delegata opakowane przez `d` parametru.</span><span class="sxs-lookup"><span data-stu-id="40d23-130">The `arg` parameter should be used to pass state to the delegate wrapped by the `d` parameter.</span></span> <span data-ttu-id="40d23-131">Może być odwołaniem do <xref:System.ComponentModel.AsyncOperation>, lub może być <xref:System.ComponentModel.ProgressChangedEventArgs?displayProperty=nameWithType> obiektu.</span><span class="sxs-lookup"><span data-stu-id="40d23-131">It might be a reference to an <xref:System.ComponentModel.AsyncOperation>, or it might be a <xref:System.ComponentModel.ProgressChangedEventArgs?displayProperty=nameWithType> object.</span></span> <span data-ttu-id="40d23-132">Może być pożądane wyprowadzenia klasy z <xref:System.ComponentModel.ProgressChangedEventArgs?displayProperty=nameWithType> magazynowanie dodatkowy stan.</span><span class="sxs-lookup"><span data-stu-id="40d23-132">It may be desirable to derive your own class from <xref:System.ComponentModel.ProgressChangedEventArgs?displayProperty=nameWithType> to provide additional state storage.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40d23-133">Poniższy przykład kodu pokazuje, przy użyciu <xref:System.ComponentModel.AsyncOperation.Post%2A> metodę raportowania postępu i przyrostowych wyniki operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="40d23-133">The following code example demonstrates using the <xref:System.ComponentModel.AsyncOperation.Post%2A> method for reporting progress and incremental results of an asynchronous operation.</span></span> <span data-ttu-id="40d23-134">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> klasy.</span><span class="sxs-lookup"><span data-stu-id="40d23-134">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> class.</span></span>  
  
  
[!code-csharp[System.ComponentModel.AsyncOperationManager#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#5)]
[!code-vb[System.ComponentModel.AsyncOperationManager#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="40d23-135"><see cref="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" /> Została wywołana metoda wcześniej dla tego zadania.</span><span class="sxs-lookup"><span data-stu-id="40d23-135">The <see cref="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" /> method has been called previously for this task.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="40d23-136"><paramref name="d" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="40d23-136"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="40d23-137">Należy wprowadzić dziedziczenia <see cref="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" /> wywołania asynchronicznego tak, aby dostawców biblioteki klasy nie trzeba zajmować się stosu potencjalne przepełnienie Jeśli zakładają asynchrony, ale modelu aplikacji stanie się odbywać się synchronicznie.</span><span class="sxs-lookup"><span data-stu-id="40d23-137">Inheritors must make the <see cref="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" /> invocation asynchronous, so that class library providers do not need to concern themselves with potential stack overflows if they assume asynchrony but a particular application model happens to be synchronous.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="40d23-138">Aplikacje konsoli nie Synchronizuj wykonywanie <see cref="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" /> wywołania.</span><span class="sxs-lookup"><span data-stu-id="40d23-138">Console applications do not synchronize the execution of <see cref="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" /> calls.</span></span> <span data-ttu-id="40d23-139">Może to spowodować <see langword="ProgressChanged" /> zdarzenia, które mają zostać wywołane poza kolejnością.</span><span class="sxs-lookup"><span data-stu-id="40d23-139">This can cause <see langword="ProgressChanged" /> events to be raised out of order.</span></span> <span data-ttu-id="40d23-140">Jeśli chcesz mieć serializacji wykonywanie <see cref="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" /> wywołań, wdrożenia i zainstalować <see cref="T:System.Threading.SynchronizationContext" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="40d23-140">If you wish to have serialized execution of <see cref="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" /> calls, implement and install a <see cref="T:System.Threading.SynchronizationContext" /> class.</span></span>  
  
</para></block>  
  
 <span data-ttu-id="40d23-141">Aby uzyskać więcej informacji o implementacji klasy asynchroniczne, zobacz [implementacji wzorca asynchronicznego opartego na zdarzeniach](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="40d23-141">For more information about implementing asynchronous classes, see [Implementing the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
      </Docs>
    </Member>
    <Member MemberName="PostOperationCompleted">
      <MemberSignature Language="C#" Value="public void PostOperationCompleted (System.Threading.SendOrPostCallback d, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PostOperationCompleted(class System.Threading.SendOrPostCallback d, object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostOperationCompleted (d As SendOrPostCallback, arg As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostOperationCompleted(System::Threading::SendOrPostCallback ^ d, System::Object ^ arg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Threading.SendOrPostCallback" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="40d23-142">A <see cref="T:System.Threading.SendOrPostCallback" /> obiekt, który opakowuje delegata, który ma być wywoływana po zakończeniu operacji.</span><span class="sxs-lookup"><span data-stu-id="40d23-142">A <see cref="T:System.Threading.SendOrPostCallback" /> object that wraps the delegate to be called when the operation ends.</span></span></param>
        <param name="arg"><span data-ttu-id="40d23-143">Argument dla obiekt delegowany zawarte w <c>d</c> parametru.</span><span class="sxs-lookup"><span data-stu-id="40d23-143">An argument for the delegate contained in the <c>d</c> parameter.</span></span></param>
        <summary><span data-ttu-id="40d23-144">Kończy się okres istnienia operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="40d23-144">Ends the lifetime of an asynchronous operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40d23-145">Wywołanie <xref:System.ComponentModel.AsyncOperation.PostOperationCompleted%2A> metody do końca okresu istnienia operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="40d23-145">Call the <xref:System.ComponentModel.AsyncOperation.PostOperationCompleted%2A> method to end the lifetime of an asynchronous operation.</span></span> <span data-ttu-id="40d23-146">Po ta metoda jest wywoływana dla poszczególnych zadań, wywołań odpowiednie <xref:System.ComponentModel.AsyncOperation> obiektu zgłosi wyjątek.</span><span class="sxs-lookup"><span data-stu-id="40d23-146">After this method is called for a particular task, calls to its corresponding <xref:System.ComponentModel.AsyncOperation> object will raise an exception.</span></span>  
  
 <span data-ttu-id="40d23-147">`d` Parametr opakowuje delegat ma klasy do wywołania po zakończeniu okresu istnienia zadania z powodu niepowodzenia zadania zakończenia lub anulowania.</span><span class="sxs-lookup"><span data-stu-id="40d23-147">The `d` parameter wraps the delegate you want your class to call when the task's lifetime ends due to completion, cancellation, or failure of the task.</span></span> <span data-ttu-id="40d23-148"><xref:System.ComponentModel.AsyncOperation> Obiektu zapewni, że pełnomocnika została wywołana w kontekście odpowiednie dla modelu aplikacji lub wątku.</span><span class="sxs-lookup"><span data-stu-id="40d23-148">The <xref:System.ComponentModel.AsyncOperation> object will ensure that your delegate is invoked on the thread or context appropriate for the application model.</span></span> <span data-ttu-id="40d23-149">Pełnomocnika można opcjonalnie wywołaj zdarzenie powiadomienia klientów, którzy zakończył się okres istnienia zadanie asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="40d23-149">Your delegate can optionally raise an event that notifies clients that the asynchronous task's lifetime has ended.</span></span>  
  
 <span data-ttu-id="40d23-150">`arg` Parametr jest używany do przekazywania informacji o stanie do delegata ukończenia `d`.</span><span class="sxs-lookup"><span data-stu-id="40d23-150">The `arg` parameter is used to pass state information to the completion delegate `d`.</span></span> <span data-ttu-id="40d23-151">Można użyć <xref:System.ComponentModel.AsyncOperation> obiekt, lub <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> obiekt jako wartość parametru.</span><span class="sxs-lookup"><span data-stu-id="40d23-151">You can use an <xref:System.ComponentModel.AsyncOperation> object, or an <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> object as the parameter value.</span></span> <span data-ttu-id="40d23-152">Jeśli chcesz podać dodatkowe stanu magazynu, możesz też użyć wystąpienia klasy pochodzi od <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> klasy.</span><span class="sxs-lookup"><span data-stu-id="40d23-152">Alternatively, if you want to provide additional state storage, you can use an instance of a class you derive from the <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40d23-153">Poniższy przykład kodu pokazuje, przy użyciu <xref:System.ComponentModel.AsyncOperation.PostOperationCompleted%2A> metody do końca okresu istnienia operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="40d23-153">The following code example demonstrates using the <xref:System.ComponentModel.AsyncOperation.PostOperationCompleted%2A> method to end the lifetime of an asynchronous operation.</span></span> <span data-ttu-id="40d23-154">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> klasy.</span><span class="sxs-lookup"><span data-stu-id="40d23-154">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> class.</span></span>  
  
  
[!code-csharp[System.ComponentModel.AsyncOperationManager#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#4)]
[!code-vb[System.ComponentModel.AsyncOperationManager#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="40d23-155"><see cref="M:System.ComponentModel.AsyncOperation.OperationCompleted" /> Wywołano wcześniej dla tego zadania.</span><span class="sxs-lookup"><span data-stu-id="40d23-155"><see cref="M:System.ComponentModel.AsyncOperation.OperationCompleted" /> has been called previously for this task.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="40d23-156"><paramref name="d" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="40d23-156"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="40d23-157">Należy wprowadzić dziedziczenia <see cref="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" /> wywołania asynchronicznego tak, aby dostawców biblioteki klasy nie trzeba zajmować się stosu potencjalne przepełnienie Jeśli zakładają asynchrony, ale modelu aplikacji stanie się odbywać się synchronicznie.</span><span class="sxs-lookup"><span data-stu-id="40d23-157">Inheritors must make the <see cref="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" /> invocation asynchronous, so that class library providers do not need to concern themselves with potential stack overflows if they assume asynchrony but a particular application model happens to be synchronous.</span></span> <span data-ttu-id="40d23-158">Metoda powinny być rozumiane jako wywołanie "zakończenia okresu istnienia", co oznacza, że implementacja musi wykonać, co to jest odpowiedni dla modelu aplikacji.</span><span class="sxs-lookup"><span data-stu-id="40d23-158">The method should be interpreted as an "ending the lifetime" call, meaning the implementation needs to do what is appropriate for the application model.</span></span> <span data-ttu-id="40d23-159">Na przykład ASP.NET będzie zmniejszyć jego liczbę oczekujących operacji asynchronicznych.</span><span class="sxs-lookup"><span data-stu-id="40d23-159">For instance, ASP.NET will decrement its count of outstanding asynchronous operations.</span></span> <span data-ttu-id="40d23-160">To również należy umieścić operacji do stanu tak, aby kolejnych wywołań do niego zakończy się niepowodzeniem, ponieważ zostało teraz zakończone.</span><span class="sxs-lookup"><span data-stu-id="40d23-160">This also should put the operation into a state such that any subsequent calls into it will fail, since it has now completed.</span></span>  
  
 <span data-ttu-id="40d23-161">Aby uzyskać więcej informacji o implementacji klasy asynchroniczne, zobacz [implementacji wzorca asynchronicznego opartego na zdarzeniach](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="40d23-161">For more information about implementing asynchronous classes, see [Implementing the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
      </Docs>
    </Member>
    <Member MemberName="SynchronizationContext">
      <MemberSignature Language="C#" Value="public System.Threading.SynchronizationContext SynchronizationContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.SynchronizationContext SynchronizationContext" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AsyncOperation.SynchronizationContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SynchronizationContext As SynchronizationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::SynchronizationContext ^ SynchronizationContext { System::Threading::SynchronizationContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.SynchronizationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40d23-162">Pobiera <see cref="T:System.Threading.SynchronizationContext" /> obiektu, który został przekazany do konstruktora.</span><span class="sxs-lookup"><span data-stu-id="40d23-162">Gets the <see cref="T:System.Threading.SynchronizationContext" /> object that was passed to the constructor.</span></span></summary>
        <value><span data-ttu-id="40d23-163"><see cref="T:System.Threading.SynchronizationContext" /> Obiektu, który został przekazany do konstruktora.</span><span class="sxs-lookup"><span data-stu-id="40d23-163">The <see cref="T:System.Threading.SynchronizationContext" /> object that was passed to the constructor.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserSuppliedState">
      <MemberSignature Language="C#" Value="public object UserSuppliedState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UserSuppliedState" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AsyncOperation.UserSuppliedState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserSuppliedState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UserSuppliedState { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40d23-164">Pobiera lub ustawia obiekt używany do jednoznacznego identyfikowania operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="40d23-164">Gets or sets an object used to uniquely identify an asynchronous operation.</span></span></summary>
        <value><span data-ttu-id="40d23-165">Obiekt stanu przekazywany do wywołania metody asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="40d23-165">The state object passed to the asynchronous method invocation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40d23-166">Jeśli klasa obsługuje wiele metod asynchronicznych lub wielu wywołań jednej metody asynchroniczne, klienci będą wymagać możliwość określenia, które zadanie asynchroniczne jest wywoływanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="40d23-166">If your class supports multiple asynchronous methods or multiple invocations of a single asynchronous method, clients will need a way to determine which asynchronous task is raising events.</span></span> <span data-ttu-id="40d23-167">Twoje `MethodNameAsync` metoda powinna przyjmować parametr typu <xref:System.Object> pełniący funkcję identyfikator zadania.</span><span class="sxs-lookup"><span data-stu-id="40d23-167">Your `MethodNameAsync` method should take a parameter of type <xref:System.Object> that will act as a task ID.</span></span> <span data-ttu-id="40d23-168">Podczas wywoływania użyje tego zadania o identyfikatorze <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A?displayProperty=nameWithType>, metody i to zostanie skojarzony identyfikator zadania klienta z określonym wywołaniem operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="40d23-168">You will use this task ID when you call the <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A?displayProperty=nameWithType>, method and this will associate the client's task ID with a particular invocation of your asynchronous operation.</span></span> <span data-ttu-id="40d23-169">To zadanie identyfikator ma zostać udostępnione za pośrednictwem implementacji <xref:System.ComponentModel.AsyncOperation.UserSuppliedState%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="40d23-169">This task ID is made available to your implementation through the <xref:System.ComponentModel.AsyncOperation.UserSuppliedState%2A> property.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="40d23-170">Kod klienta należy zachować ostrożność i Podaj unikatową wartość dla <xref:System.ComponentModel.AsyncOperation.UserSuppliedState%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="40d23-170">Client code must be careful to provide a unique value for the <xref:System.ComponentModel.AsyncOperation.UserSuppliedState%2A> property.</span></span> <span data-ttu-id="40d23-171">Nieunikatowy identyfikatorów zadań może spowodować implementacji nieprawidłowo raportuje postęp i inne zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="40d23-171">Non-unique task IDs may cause your implementation to report progress and other events incorrectly.</span></span> <span data-ttu-id="40d23-172">Sprawdź identyfikator zadania nie jest unikatowa i podnieść swój kod <xref:System.ArgumentException> po wykryciu jednego.</span><span class="sxs-lookup"><span data-stu-id="40d23-172">Your code should check for a non-unique task ID and raise an <xref:System.ArgumentException> if one is detected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40d23-173">Poniższy przykład kodu pokazuje, przy użyciu <xref:System.ComponentModel.AsyncOperation.UserSuppliedState%2A> śledzić okres istnienia operacji asynchronicznych.</span><span class="sxs-lookup"><span data-stu-id="40d23-173">The following code example demonstrates using <xref:System.ComponentModel.AsyncOperation.UserSuppliedState%2A> to track the lifetime of asynchronous operations.</span></span> <span data-ttu-id="40d23-174">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> klasy.</span><span class="sxs-lookup"><span data-stu-id="40d23-174">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> class.</span></span>  
  
  
[!code-csharp[System.ComponentModel.AsyncOperationManager#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#4)]
[!code-vb[System.ComponentModel.AsyncOperationManager#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
      </Docs>
    </Member>
  </Members>
</Type>