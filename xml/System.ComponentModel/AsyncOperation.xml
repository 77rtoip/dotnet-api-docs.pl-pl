<Type Name="AsyncOperation" FullName="System.ComponentModel.AsyncOperation">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d602d1b35d6f801e9200e323481a7b2254b07e24" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46653386" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AsyncOperation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AsyncOperation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AsyncOperation" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AsyncOperation" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsyncOperation sealed" />
  <TypeSignature Language="F#" Value="type AsyncOperation = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="292ac-101">Śledzi okres istnienia operacji asynchronicznej.</span>
      <span class="sxs-lookup">
        <span data-stu-id="292ac-101">Tracks the lifetime of an asynchronous operation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="292ac-102">Podczas implementacji klasy zgodnie z opisem w [oparte na zdarzeniach asynchronicznych omówienie wzorca](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), konieczne może być śledzić okres istnienia każdej operacji asynchronicznej, wywołana w wystąpieniu klasy.</span><span class="sxs-lookup"><span data-stu-id="292ac-102">When you implement a class according to the [Event-based Asynchronous Pattern Overview](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), you may need to track the lifetime of each asynchronous operation invoked on an instance of your class.</span></span> <span data-ttu-id="292ac-103"><xref:System.ComponentModel.AsyncOperation> Klasa udostępnia metody śledzenia i raportować postęp zadania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="292ac-103">The <xref:System.ComponentModel.AsyncOperation> class provides ways to track and report the progress of an asynchronous task.</span></span>  
  
 <span data-ttu-id="292ac-104">Poniższa lista zawiera sposoby na wykorzystanie <xref:System.ComponentModel.AsyncOperation> obiektu:</span><span class="sxs-lookup"><span data-stu-id="292ac-104">The following list identifies ways to use an <xref:System.ComponentModel.AsyncOperation> object:</span></span>  
  
-   <span data-ttu-id="292ac-105">Aby raporty postęp i wyniki pośrednie do klienta, należy wywołać <xref:System.ComponentModel.AsyncOperation.Post%2A> z kodu asynchronicznego procesu roboczego.</span><span class="sxs-lookup"><span data-stu-id="292ac-105">To report progress and interim results to the client, call <xref:System.ComponentModel.AsyncOperation.Post%2A> from your asynchronous worker code.</span></span>  
  
-   <span data-ttu-id="292ac-106">Aby wskazać, że Ukończono zadanie asynchroniczne lub Anuluj oczekujące zadanie asynchroniczne, wywołaj <xref:System.ComponentModel.AsyncOperation.PostOperationCompleted%2A>.</span><span class="sxs-lookup"><span data-stu-id="292ac-106">To indicate that an asynchronous task has completed, or to cancel a pending asynchronous task, call <xref:System.ComponentModel.AsyncOperation.PostOperationCompleted%2A>.</span></span>  
  
 <span data-ttu-id="292ac-107">Klasa powinna pojawić się <xref:System.ComponentModel.AsyncOperation> obiekt dla każdego zadania asynchroniczne, wywołując <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A?displayProperty=nameWithType> podczas uruchamiania każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="292ac-107">Your class should get an <xref:System.ComponentModel.AsyncOperation> object for each asynchronous task by calling <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A?displayProperty=nameWithType> when each task starts.</span></span> <span data-ttu-id="292ac-108">Aby umożliwić klientowi w celu odróżnienia poszczególnych zadań asynchronicznych, <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A?displayProperty=nameWithType> przyjmuje parametr unikatowy token dostarczonych przez klienta, która staje się <xref:System.ComponentModel.AsyncOperation.UserSuppliedState%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="292ac-108">To allow the client to distinguish separate asynchronous tasks, <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A?displayProperty=nameWithType> takes a parameter for a unique client-provided token, which becomes the <xref:System.ComponentModel.AsyncOperation.UserSuppliedState%2A> property.</span></span> <span data-ttu-id="292ac-109">Może następnie służyć przez kod klienta do identyfikowania konkretnej asynchroniczne zadanie, które jest wywoływanie zdarzeń o postępie lub zakończeniu.</span><span class="sxs-lookup"><span data-stu-id="292ac-109">It can then be used by client code to identify the particular asynchronous task that is raising progress or completion events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="292ac-110">Poniższy przykład kodu demonstruje sposób użycia <xref:System.ComponentModel.AsyncOperation> obiektów do śledzenia okresu istnienia operacji asynchronicznych.</span><span class="sxs-lookup"><span data-stu-id="292ac-110">The following code example demonstrates using an <xref:System.ComponentModel.AsyncOperation> object to track the lifetime of asynchronous operations.</span></span> <span data-ttu-id="292ac-111">Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> klasy.</span><span class="sxs-lookup"><span data-stu-id="292ac-111">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="292ac-112">Lista pełny kod znajduje się [porady: implementacja składnika obsługującego wzorzec asynchroniczny oparty na zdarzeniach](http://msdn.microsoft.com/library/3c1aa4d4-da87-4a03-b812-3d167b8c57cf).</span><span class="sxs-lookup"><span data-stu-id="292ac-112">For a full code listing, see [How to: Implement a Component That Supports the Event-based Asynchronous Pattern](http://msdn.microsoft.com/library/3c1aa4d4-da87-4a03-b812-3d167b8c57cf).</span></span> <span data-ttu-id="292ac-113">Listę pełnego kodu formularza klienta, zobacz [porady: implementacja klienta wzorca asynchronicznego opartego na zdarzeniach](~/docs/standard/asynchronous-programming-patterns/how-to-implement-a-client-of-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="292ac-113">For a full code listing of a client form, see [How to: Implement a Client of the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/how-to-implement-a-client-of-the-event-based-asynchronous-pattern.md).</span></span>  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#3)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#3)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="292ac-114">Należy upewnić się, implementacje <see cref="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" /> i <see cref="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" /> wywołania są asynchroniczne, tak aby dostawców biblioteki klasy nie powinny być zajmowania z przepełnienie stosu potencjalnych, jeśli zakładają też zachowanie asynchroniczne w konkretnej aplikacji model, który ma miejsce synchroniczne.</span>
        <span class="sxs-lookup">
          <span data-stu-id="292ac-114">Implementers must ensure the <see cref="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" /> and <see cref="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" /> invocations are asynchronous, so that class library providers do not need to concern themselves with potential stack overflows if they assume asynchronous behavior in a particular application model that happens to be synchronous.</span>
        </span>
        <span data-ttu-id="292ac-115">Aby uzyskać więcej informacji dotyczących implementowania klas asynchronicznych, zobacz [implementacja wzorca asynchronicznego opartego na zdarzeniach](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span>
        <span class="sxs-lookup">
          <span data-stu-id="292ac-115">For more information about implementing asynchronous classes, see [Implementing the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
    <related type="Article" href="http://msdn.microsoft.com/library/e51988e7-7f4b-4646-a06d-1416cee8d557">
      <span data-ttu-id="292ac-116">Zarządzana wątkowość — najlepsze rozwiązania</span>
      <span class="sxs-lookup">
        <span data-stu-id="292ac-116">Managed Threading Best Practices</span>
      </span>
    </related>
    <related type="Article" href="http://msdn.microsoft.com/library/3c1aa4d4-da87-4a03-b812-3d167b8c57cf">
      <span data-ttu-id="292ac-117">Porady: implementacja składnika obsługującego wzorzec asynchroniczny oparty na zdarzeniach</span>
      <span class="sxs-lookup">
        <span data-stu-id="292ac-117">How to: Implement a Component that Supports the Event-based Asynchronous Pattern</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~AsyncOperation ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncOperation.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!AsyncOperation ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="asyncOperation.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="292ac-118">Kończenie znajdujących się w operacji asynchronicznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="292ac-118">Finalizes the asynchronous operation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationCompleted">
      <MemberSignature Language="C#" Value="public void OperationCompleted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OperationCompleted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncOperation.OperationCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Sub OperationCompleted ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OperationCompleted();" />
      <MemberSignature Language="F#" Value="member this.OperationCompleted : unit -&gt; unit" Usage="asyncOperation.OperationCompleted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="292ac-119">Kończy się okres istnienia operacji asynchronicznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="292ac-119">Ends the lifetime of an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="292ac-120">Wywołaj <xref:System.ComponentModel.AsyncOperation.OperationCompleted%2A> metody do końca okresu istnienia operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="292ac-120">Call the <xref:System.ComponentModel.AsyncOperation.OperationCompleted%2A> method to end the lifetime of an asynchronous operation.</span></span> <span data-ttu-id="292ac-121">Po ta metoda jest wywoływana dla danego zadania, wywołania odpowiadającymi mu dostawcami <xref:System.ComponentModel.AsyncOperation> zgłosi wyjątek.</span><span class="sxs-lookup"><span data-stu-id="292ac-121">After this method is called for a particular task, calls to its corresponding <xref:System.ComponentModel.AsyncOperation> will raise an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="292ac-122">
            <see cref="M:System.ComponentModel.AsyncOperation.OperationCompleted" /> Wywołano wcześniej dla tego zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="292ac-122">
              <see cref="M:System.ComponentModel.AsyncOperation.OperationCompleted" /> has been called previously for this task.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Post">
      <MemberSignature Language="C#" Value="public void Post (System.Threading.SendOrPostCallback d, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Post(class System.Threading.SendOrPostCallback d, object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Post (d As SendOrPostCallback, arg As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Post(System::Threading::SendOrPostCallback ^ d, System::Object ^ arg);" />
      <MemberSignature Language="F#" Value="member this.Post : System.Threading.SendOrPostCallback * obj -&gt; unit" Usage="asyncOperation.Post (d, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Threading.SendOrPostCallback" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="292ac-123">A <see cref="T:System.Threading.SendOrPostCallback" /> obiekt, który opakowuje delegat wywoływany, gdy operacja kończy się.</span>
          <span class="sxs-lookup">
            <span data-stu-id="292ac-123">A <see cref="T:System.Threading.SendOrPostCallback" /> object that wraps the delegate to be called when the operation ends.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="292ac-124">Argument do delegata zawarte w <c>d</c> parametru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="292ac-124">An argument for the delegate contained in the <c>d</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="292ac-125">Wywołuje delegata w wątku lub kontekstu odpowiednie dla modelu aplikacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="292ac-125">Invokes a delegate on the thread or context appropriate for the application model.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="292ac-126"><xref:System.ComponentModel.AsyncOperation.Post%2A> Metoda wywołuje delegata, określony przez `arg` parametru bez przerywania okres istnienia operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="292ac-126">The <xref:System.ComponentModel.AsyncOperation.Post%2A> method invokes the delegate specified by the `arg` parameter without ending the lifetime of the asynchronous operation.</span></span>  
  
 <span data-ttu-id="292ac-127">Możesz wywołać <xref:System.ComponentModel.AsyncOperation.Post%2A> tak często, jak podczas okresu istnienia operacja asynchroniczna nie został zakończony przez wywołanie metody <xref:System.ComponentModel.AsyncOperation.PostOperationCompleted%2A>.</span><span class="sxs-lookup"><span data-stu-id="292ac-127">You can call the <xref:System.ComponentModel.AsyncOperation.Post%2A> method as often as you like while the lifetime of the asynchronous operation has not been ended by a call to <xref:System.ComponentModel.AsyncOperation.PostOperationCompleted%2A>.</span></span> <span data-ttu-id="292ac-128">Metoda umożliwia raportować postęp lub wyników pośrednich do klientów.</span><span class="sxs-lookup"><span data-stu-id="292ac-128">You can use the method to report progress or interim results back to clients.</span></span>  
  
 <span data-ttu-id="292ac-129">`d` Parametr opakowuje delegata, o których ma być wywoływana gdy aktualizacja o stanie zadania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="292ac-129">The `d` parameter wraps the delegate you want called when you want to post an update about the status of the asynchronous task.</span></span> <span data-ttu-id="292ac-130"><xref:System.ComponentModel.AsyncOperation> Obiektu zapewni, że Twoje obiekt delegowany jest wywoływany w wątku lub kontekstu odpowiednie dla modelu aplikacji.</span><span class="sxs-lookup"><span data-stu-id="292ac-130">The <xref:System.ComponentModel.AsyncOperation> object will ensure that your delegate is invoked on the thread or context appropriate for the application model.</span></span> <span data-ttu-id="292ac-131">Metoda Opcjonalnie można wywołać zdarzenie, które powiadamia klientów o zmianę stanu, postępu aktualizacji lub nowo dostępne wyniki przyrostowe.</span><span class="sxs-lookup"><span data-stu-id="292ac-131">Your method can optionally raise an event that notifies clients of a status change, progress update, or newly available incremental results.</span></span>  
  
 <span data-ttu-id="292ac-132">`arg` Parametru należy używać do przekazania stanu do delegata opakowane przez `d` parametru.</span><span class="sxs-lookup"><span data-stu-id="292ac-132">The `arg` parameter should be used to pass state to the delegate wrapped by the `d` parameter.</span></span> <span data-ttu-id="292ac-133">Może być odwołaniem do <xref:System.ComponentModel.AsyncOperation>, lub może być <xref:System.ComponentModel.ProgressChangedEventArgs?displayProperty=nameWithType> obiektu.</span><span class="sxs-lookup"><span data-stu-id="292ac-133">It might be a reference to an <xref:System.ComponentModel.AsyncOperation>, or it might be a <xref:System.ComponentModel.ProgressChangedEventArgs?displayProperty=nameWithType> object.</span></span> <span data-ttu-id="292ac-134">Może być pożądane do wyprowadzenia klasy z <xref:System.ComponentModel.ProgressChangedEventArgs?displayProperty=nameWithType> magazynowanie dodatkowy stan.</span><span class="sxs-lookup"><span data-stu-id="292ac-134">It may be desirable to derive your own class from <xref:System.ComponentModel.ProgressChangedEventArgs?displayProperty=nameWithType> to provide additional state storage.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="292ac-135">Poniższy przykład kodu demonstruje sposób użycia <xref:System.ComponentModel.AsyncOperation.Post%2A> metodę raportowania postęp i wyniki przyrostową operacją asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="292ac-135">The following code example demonstrates using the <xref:System.ComponentModel.AsyncOperation.Post%2A> method for reporting progress and incremental results of an asynchronous operation.</span></span> <span data-ttu-id="292ac-136">Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> klasy.</span><span class="sxs-lookup"><span data-stu-id="292ac-136">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> class.</span></span>  
  
  
[!code-csharp[System.ComponentModel.AsyncOperationManager#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#5)]
[!code-vb[System.ComponentModel.AsyncOperationManager#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="292ac-137">
            <see cref="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" /> Została wywołana metoda wcześniej dla tego zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="292ac-137">The <see cref="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" /> method has been called previously for this task.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="292ac-138">
            <paramref name="d" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="292ac-138">
              <paramref name="d" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="292ac-139">Należy wprowadzić obiektów dziedziczących <see cref="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" /> przepełnienia wywołania asynchronicznego, tak aby klasy biblioteki dostawcy nie trzeba zajmować się potencjalnymi stosu, jeśli zakładają też asynchroniczności, ale modelu określona aplikacja stanie się być synchroniczne.</span>
            <span class="sxs-lookup">
              <span data-stu-id="292ac-139">Inheritors must make the <see cref="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" /> invocation asynchronous, so that class library providers do not need to concern themselves with potential stack overflows if they assume asynchrony but a particular application model happens to be synchronous.</span>
            </span>
            <block subset="none" type="note">
              <para>
                <span data-ttu-id="292ac-140">Aplikacje konsoli nie są synchronizowane wykonywania <see cref="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" /> wywołania.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="292ac-140">Console applications do not synchronize the execution of <see cref="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" /> calls.</span>
                </span>
                <span data-ttu-id="292ac-141">Może to spowodować <see langword="ProgressChanged" /> zdarzenia wywoływane, poza kolejnością.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="292ac-141">This can cause <see langword="ProgressChanged" /> events to be raised out of order.</span>
                </span>
                <span data-ttu-id="292ac-142">Jeśli chcesz mieć serializacji wykonywania <see cref="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" /> wywołań, wdrożyć i zainstalować <see cref="T:System.Threading.SynchronizationContext" /> klasy.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="292ac-142">If you wish to have serialized execution of <see cref="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" /> calls, implement and install a <see cref="T:System.Threading.SynchronizationContext" /> class.</span>
                </span>
              </para>
            </block>
            <span data-ttu-id="292ac-143">Aby uzyskać więcej informacji dotyczących implementowania klas asynchronicznych, zobacz [implementacja wzorca asynchronicznego opartego na zdarzeniach](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="292ac-143">For more information about implementing asynchronous classes, see [Implementing the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
        <related type="Article" href="http://msdn.microsoft.com/library/e51988e7-7f4b-4646-a06d-1416cee8d557">
          <span data-ttu-id="292ac-144">Zarządzana wątkowość — najlepsze rozwiązania</span>
          <span class="sxs-lookup">
            <span data-stu-id="292ac-144">Managed Threading Best Practices</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/3c1aa4d4-da87-4a03-b812-3d167b8c57cf">
          <span data-ttu-id="292ac-145">Porady: implementacja składnika obsługującego wzorzec asynchroniczny oparty na zdarzeniach</span>
          <span class="sxs-lookup">
            <span data-stu-id="292ac-145">How to: Implement a Component that Supports the Event-based Asynchronous Pattern</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="PostOperationCompleted">
      <MemberSignature Language="C#" Value="public void PostOperationCompleted (System.Threading.SendOrPostCallback d, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PostOperationCompleted(class System.Threading.SendOrPostCallback d, object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostOperationCompleted (d As SendOrPostCallback, arg As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostOperationCompleted(System::Threading::SendOrPostCallback ^ d, System::Object ^ arg);" />
      <MemberSignature Language="F#" Value="member this.PostOperationCompleted : System.Threading.SendOrPostCallback * obj -&gt; unit" Usage="asyncOperation.PostOperationCompleted (d, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Threading.SendOrPostCallback" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="292ac-146">A <see cref="T:System.Threading.SendOrPostCallback" /> obiekt, który opakowuje delegat wywoływany, gdy operacja kończy się.</span>
          <span class="sxs-lookup">
            <span data-stu-id="292ac-146">A <see cref="T:System.Threading.SendOrPostCallback" /> object that wraps the delegate to be called when the operation ends.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="292ac-147">Argument do delegata zawarte w <c>d</c> parametru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="292ac-147">An argument for the delegate contained in the <c>d</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="292ac-148">Kończy się okres istnienia operacji asynchronicznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="292ac-148">Ends the lifetime of an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="292ac-149">Wywołaj <xref:System.ComponentModel.AsyncOperation.PostOperationCompleted%2A> metody do końca okresu istnienia operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="292ac-149">Call the <xref:System.ComponentModel.AsyncOperation.PostOperationCompleted%2A> method to end the lifetime of an asynchronous operation.</span></span> <span data-ttu-id="292ac-150">Po ta metoda jest wywoływana dla danego zadania, wywołania odpowiadającymi mu dostawcami <xref:System.ComponentModel.AsyncOperation> obiektu zgłosi wyjątek.</span><span class="sxs-lookup"><span data-stu-id="292ac-150">After this method is called for a particular task, calls to its corresponding <xref:System.ComponentModel.AsyncOperation> object will raise an exception.</span></span>  
  
 <span data-ttu-id="292ac-151">`d` Parametr opakowuje delegata, o których chcesz klasy do wywołania po zakończeniu okresu istnienia zadania podrzędnego, ze względu na ukończenie, anulowanie lub niepowodzenie zadania.</span><span class="sxs-lookup"><span data-stu-id="292ac-151">The `d` parameter wraps the delegate you want your class to call when the task's lifetime ends due to completion, cancellation, or failure of the task.</span></span> <span data-ttu-id="292ac-152"><xref:System.ComponentModel.AsyncOperation> Obiektu zapewni, że Twoje obiekt delegowany jest wywoływany w wątku lub kontekstu odpowiednie dla modelu aplikacji.</span><span class="sxs-lookup"><span data-stu-id="292ac-152">The <xref:System.ComponentModel.AsyncOperation> object will ensure that your delegate is invoked on the thread or context appropriate for the application model.</span></span> <span data-ttu-id="292ac-153">Pełnomocnik może opcjonalnie wywołać zdarzenie, które powiadamia klientów, których okres istnienia zadania asynchroniczne zostało zakończone.</span><span class="sxs-lookup"><span data-stu-id="292ac-153">Your delegate can optionally raise an event that notifies clients that the asynchronous task's lifetime has ended.</span></span>  
  
 <span data-ttu-id="292ac-154">`arg` Parametr jest używany do przekazania informacji o stanie do delegata uzupełniania `d`.</span><span class="sxs-lookup"><span data-stu-id="292ac-154">The `arg` parameter is used to pass state information to the completion delegate `d`.</span></span> <span data-ttu-id="292ac-155">Możesz użyć <xref:System.ComponentModel.AsyncOperation> obiektu lub <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> obiektu jako wartość tego parametru.</span><span class="sxs-lookup"><span data-stu-id="292ac-155">You can use an <xref:System.ComponentModel.AsyncOperation> object, or an <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> object as the parameter value.</span></span> <span data-ttu-id="292ac-156">Alternatywnie, jeśli chcesz udostępnić magazyn dodatkowy stan, można użyć wystąpienia klasy pochodzić od <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> klasy.</span><span class="sxs-lookup"><span data-stu-id="292ac-156">Alternatively, if you want to provide additional state storage, you can use an instance of a class you derive from the <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="292ac-157">Poniższy przykład kodu demonstruje sposób użycia <xref:System.ComponentModel.AsyncOperation.PostOperationCompleted%2A> metody do końca okresu istnienia operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="292ac-157">The following code example demonstrates using the <xref:System.ComponentModel.AsyncOperation.PostOperationCompleted%2A> method to end the lifetime of an asynchronous operation.</span></span> <span data-ttu-id="292ac-158">Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> klasy.</span><span class="sxs-lookup"><span data-stu-id="292ac-158">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> class.</span></span>  
  
  
[!code-csharp[System.ComponentModel.AsyncOperationManager#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#4)]
[!code-vb[System.ComponentModel.AsyncOperationManager#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="292ac-159">
            <see cref="M:System.ComponentModel.AsyncOperation.OperationCompleted" /> Wywołano wcześniej dla tego zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="292ac-159">
              <see cref="M:System.ComponentModel.AsyncOperation.OperationCompleted" /> has been called previously for this task.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="292ac-160">
            <paramref name="d" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="292ac-160">
              <paramref name="d" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="292ac-161">Należy wprowadzić obiektów dziedziczących <see cref="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" /> przepełnienia wywołania asynchronicznego, tak aby klasy biblioteki dostawcy nie trzeba zajmować się potencjalnymi stosu, jeśli zakładają też asynchroniczności, ale modelu określona aplikacja stanie się być synchroniczne.</span>
            <span class="sxs-lookup">
              <span data-stu-id="292ac-161">Inheritors must make the <see cref="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" /> invocation asynchronous, so that class library providers do not need to concern themselves with potential stack overflows if they assume asynchrony but a particular application model happens to be synchronous.</span>
            </span>
            <span data-ttu-id="292ac-162">Metoda powinny być interpretowane jako wywołanie "zakończenie okresu istnienia", co oznacza, że implementacja musi wykonać, co to jest odpowiednia dla modelu aplikacji.</span>
            <span class="sxs-lookup">
              <span data-stu-id="292ac-162">The method should be interpreted as an "ending the lifetime" call, meaning the implementation needs to do what is appropriate for the application model.</span>
            </span>
            <span data-ttu-id="292ac-163">Na przykład ASP.NET zmniejszy się jego liczbę oczekujących operacji asynchronicznych.</span>
            <span class="sxs-lookup">
              <span data-stu-id="292ac-163">For instance, ASP.NET will decrement its count of outstanding asynchronous operations.</span>
            </span>
            <span data-ttu-id="292ac-164">To również należy umieścić operacji w stan taki sposób, że kolejnych wywołań do niej zakończy się niepowodzeniem, ponieważ teraz zostało zakończone.</span>
            <span class="sxs-lookup">
              <span data-stu-id="292ac-164">This also should put the operation into a state such that any subsequent calls into it will fail, since it has now completed.</span>
            </span>
            <span data-ttu-id="292ac-165">Aby uzyskać więcej informacji dotyczących implementowania klas asynchronicznych, zobacz [implementacja wzorca asynchronicznego opartego na zdarzeniach](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="292ac-165">For more information about implementing asynchronous classes, see [Implementing the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
        <related type="Article" href="http://msdn.microsoft.com/library/e51988e7-7f4b-4646-a06d-1416cee8d557">
          <span data-ttu-id="292ac-166">Zarządzana wątkowość — najlepsze rozwiązania</span>
          <span class="sxs-lookup">
            <span data-stu-id="292ac-166">Managed Threading Best Practices</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/3c1aa4d4-da87-4a03-b812-3d167b8c57cf">
          <span data-ttu-id="292ac-167">Porady: implementacja składnika obsługującego wzorzec asynchroniczny oparty na zdarzeniach</span>
          <span class="sxs-lookup">
            <span data-stu-id="292ac-167">How to: Implement a Component that Supports the Event-based Asynchronous Pattern</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SynchronizationContext">
      <MemberSignature Language="C#" Value="public System.Threading.SynchronizationContext SynchronizationContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.SynchronizationContext SynchronizationContext" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AsyncOperation.SynchronizationContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SynchronizationContext As SynchronizationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::SynchronizationContext ^ SynchronizationContext { System::Threading::SynchronizationContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizationContext : System.Threading.SynchronizationContext" Usage="System.ComponentModel.AsyncOperation.SynchronizationContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.SynchronizationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="292ac-168">Pobiera <see cref="T:System.Threading.SynchronizationContext" /> obiektu, który został przekazany do konstruktora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="292ac-168">Gets the <see cref="T:System.Threading.SynchronizationContext" /> object that was passed to the constructor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="292ac-169">
            <see cref="T:System.Threading.SynchronizationContext" /> Obiektu, który został przekazany do konstruktora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="292ac-169">The <see cref="T:System.Threading.SynchronizationContext" /> object that was passed to the constructor.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserSuppliedState">
      <MemberSignature Language="C#" Value="public object UserSuppliedState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UserSuppliedState" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AsyncOperation.UserSuppliedState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserSuppliedState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UserSuppliedState { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserSuppliedState : obj" Usage="System.ComponentModel.AsyncOperation.UserSuppliedState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="292ac-170">Pobiera lub ustawia obiekt używany do jednoznacznego identyfikowania operacji asynchronicznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="292ac-170">Gets or sets an object used to uniquely identify an asynchronous operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="292ac-171">Obiekt stanu przekazywany do wywołania metody asynchronicznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="292ac-171">The state object passed to the asynchronous method invocation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="292ac-172">Jeśli klasa obsługuje wiele metod asynchronicznych lub wielu wywołań pojedynczej metody asynchronicznej, klienci będą wymagać określenie, które zadanie asynchroniczne jest wywoływanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="292ac-172">If your class supports multiple asynchronous methods or multiple invocations of a single asynchronous method, clients will need a way to determine which asynchronous task is raising events.</span></span> <span data-ttu-id="292ac-173">Twoje `MethodNameAsync` metoda powinny przyjmować parametr typu <xref:System.Object> pełniący identyfikator zadania.</span><span class="sxs-lookup"><span data-stu-id="292ac-173">Your `MethodNameAsync` method should take a parameter of type <xref:System.Object> that will act as a task ID.</span></span> <span data-ttu-id="292ac-174">Użyjesz tego Identyfikatora zadania po wywołaniu <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A?displayProperty=nameWithType>, metody i to zostanie skojarzony identyfikator zadania klienta za pomocą określonego wywołania operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="292ac-174">You will use this task ID when you call the <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A?displayProperty=nameWithType>, method and this will associate the client's task ID with a particular invocation of your asynchronous operation.</span></span> <span data-ttu-id="292ac-175">To zadanie, identyfikator jest udostępniany implementacji za pośrednictwem <xref:System.ComponentModel.AsyncOperation.UserSuppliedState%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="292ac-175">This task ID is made available to your implementation through the <xref:System.ComponentModel.AsyncOperation.UserSuppliedState%2A> property.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="292ac-176">Kod klienta należy uważać, aby podać unikatową wartość dla <xref:System.ComponentModel.AsyncOperation.UserSuppliedState%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="292ac-176">Client code must be careful to provide a unique value for the <xref:System.ComponentModel.AsyncOperation.UserSuppliedState%2A> property.</span></span> <span data-ttu-id="292ac-177">Nieunikatowy identyfikatorów zadań może spowodować implementacji do raportowania postępu i inne zdarzenia niepoprawnie.</span><span class="sxs-lookup"><span data-stu-id="292ac-177">Non-unique task IDs may cause your implementation to report progress and other events incorrectly.</span></span> <span data-ttu-id="292ac-178">Kodu należy wyszukać identyfikator zadania nie jest unikatowa i podnieść <xref:System.ArgumentException> po wykryciu jednego.</span><span class="sxs-lookup"><span data-stu-id="292ac-178">Your code should check for a non-unique task ID and raise an <xref:System.ArgumentException> if one is detected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="292ac-179">Poniższy przykład kodu demonstruje sposób użycia <xref:System.ComponentModel.AsyncOperation.UserSuppliedState%2A> śledzić okres istnienia operacji asynchronicznych.</span><span class="sxs-lookup"><span data-stu-id="292ac-179">The following code example demonstrates using <xref:System.ComponentModel.AsyncOperation.UserSuppliedState%2A> to track the lifetime of asynchronous operations.</span></span> <span data-ttu-id="292ac-180">Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> klasy.</span><span class="sxs-lookup"><span data-stu-id="292ac-180">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> class.</span></span>  
  
  
[!code-csharp[System.ComponentModel.AsyncOperationManager#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#4)]
[!code-vb[System.ComponentModel.AsyncOperationManager#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
        <related type="Article" href="http://msdn.microsoft.com/library/e51988e7-7f4b-4646-a06d-1416cee8d557">
          <span data-ttu-id="292ac-181">Zarządzana wątkowość — najlepsze rozwiązania</span>
          <span class="sxs-lookup">
            <span data-stu-id="292ac-181">Managed Threading Best Practices</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/792aa8da-918b-458e-b154-9836b97735f3">
          <span data-ttu-id="292ac-182">Asynchroniczny wzorzec oparty na zdarzeniach — przegląd</span>
          <span class="sxs-lookup">
            <span data-stu-id="292ac-182">Event-based Asynchronous Pattern Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>