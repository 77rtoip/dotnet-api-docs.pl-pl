<Type Name="AsyncOperation" FullName="System.ComponentModel.AsyncOperation">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8233507e60cc21eeaa9f70d12a2ac70cc9b2b5c4" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36705225" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AsyncOperation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AsyncOperation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AsyncOperation" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AsyncOperation" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsyncOperation sealed" />
  <TypeSignature Language="F#" Value="type AsyncOperation = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Śledzi okres istnienia operacji asynchronicznej.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas implementacji klasy zgodnie z [oparty na zdarzeniach asynchroniczny wzorzec — Przegląd](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), konieczne może być śledzić okres istnienia każdej operacji asynchronicznej wywoływane na wystąpienie klasy. <xref:System.ComponentModel.AsyncOperation> Klasa dostarcza metody do śledzenia i raportowania postępu zadania asynchronicznego.  
  
 Poniższa lista zawiera sposoby używania <xref:System.ComponentModel.AsyncOperation> obiektu:  
  
-   Aby zgłosić postęp i wyniki pośrednie do klienta, należy wywołać <xref:System.ComponentModel.AsyncOperation.Post%2A> w kodzie asynchroniczne procesu roboczego.  
  
-   Aby wskazać, że Ukończono zadanie asynchroniczne lub aby anulować oczekujące zadania asynchronicznego wywołania <xref:System.ComponentModel.AsyncOperation.PostOperationCompleted%2A>.  
  
 Należy uzyskać klasy <xref:System.ComponentModel.AsyncOperation> obiekt dla każdego zadania asynchroniczne, wywołując <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A?displayProperty=nameWithType> podczas uruchamiania każdego zadania. Aby umożliwić klientowi rozróżnienia oddzielne zadania asynchroniczne, <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A?displayProperty=nameWithType> przyjmuje parametr unikatowy token dostarczony do klienta, która staje się <xref:System.ComponentModel.AsyncOperation.UserSuppliedState%2A> właściwości. Następnie umożliwia przez kod klienta do identyfikowania określonego zadania asynchroniczne, które jest wywoływanie zdarzeń w toku lub zakończenia.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, przy użyciu <xref:System.ComponentModel.AsyncOperation> obiekt, aby śledzić okres istnienia operacji asynchronicznych. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> klasy.  
  
 Listy pełnego kodu, zobacz [porady: implementacja składnika obsługującego wzorzec asynchroniczny oparty na zdarzeniach](http://msdn.microsoft.com/library/3c1aa4d4-da87-4a03-b812-3d167b8c57cf). Listy pełnego kodu formularza klienta, zobacz [porady: implementacja klienta wzorca asynchronicznego opartego na zdarzeniach](~/docs/standard/asynchronous-programming-patterns/how-to-implement-a-client-of-the-event-based-asynchronous-pattern.md).  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#3)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#3)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Implementacje musi zapewnić <see cref="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" /> i <see cref="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" /> wywołania są asynchroniczne, dzięki czemu nie trzeba dotyczą się z klasy dostawców biblioteki przepełnienie stosu potencjalnych, jeśli zakładają asynchroniczne zachowanie w określonej aplikacji Model stanie się odbywać się synchronicznie.  Aby uzyskać więcej informacji o implementacji klasy asynchroniczne Zobacz [Implementacja Pattern](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md) asynchroniczny oparty na zdarzeniach.</para>
    </block>
    <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
  </Docs>
  <Members>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~AsyncOperation ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncOperation.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!AsyncOperation ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="asyncOperation.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Kończenie znajdujących się w operacji asynchronicznej.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationCompleted">
      <MemberSignature Language="C#" Value="public void OperationCompleted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OperationCompleted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncOperation.OperationCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Sub OperationCompleted ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OperationCompleted();" />
      <MemberSignature Language="F#" Value="member this.OperationCompleted : unit -&gt; unit" Usage="asyncOperation.OperationCompleted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Kończy się okres istnienia operacji asynchronicznej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie <xref:System.ComponentModel.AsyncOperation.OperationCompleted%2A> metody do końca okresu istnienia operacji asynchronicznej. Po ta metoda jest wywoływana dla poszczególnych zadań, wywołań odpowiednie <xref:System.ComponentModel.AsyncOperation> zgłosi wyjątek.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.ComponentModel.AsyncOperation.OperationCompleted" /> Wywołano wcześniej dla tego zadania.</exception>
      </Docs>
    </Member>
    <Member MemberName="Post">
      <MemberSignature Language="C#" Value="public void Post (System.Threading.SendOrPostCallback d, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Post(class System.Threading.SendOrPostCallback d, object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Post (d As SendOrPostCallback, arg As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Post(System::Threading::SendOrPostCallback ^ d, System::Object ^ arg);" />
      <MemberSignature Language="F#" Value="member this.Post : System.Threading.SendOrPostCallback * obj -&gt; unit" Usage="asyncOperation.Post (d, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Threading.SendOrPostCallback" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="d">A <see cref="T:System.Threading.SendOrPostCallback" /> obiekt, który opakowuje delegata, który ma być wywoływana po zakończeniu operacji.</param>
        <param name="arg">Argument dla obiekt delegowany zawarte w <c>d</c> parametru.</param>
        <summary>Wywołuje delegata w kontekście odpowiednie dla modelu aplikacji lub wątku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.AsyncOperation.Post%2A> Metoda wywołuje delegata określony przez `arg` parametru bez przerywania okres istnienia operację asynchroniczną.  
  
 Możesz wywołać <xref:System.ComponentModel.AsyncOperation.Post%2A> tak często, jak podczas trwania operacji asynchronicznej nie został zakończony przez wywołanie do metody <xref:System.ComponentModel.AsyncOperation.PostOperationCompleted%2A>. Metoda umożliwia raportowanie postępu lub wyników pośrednich wstecz do klientów.  
  
 `d` Parametr opakowuje delegat ma być wywołane gdy aktualizacja o stanie zadania asynchronicznego. <xref:System.ComponentModel.AsyncOperation> Obiektu zapewni, że pełnomocnika została wywołana w kontekście odpowiednie dla modelu aplikacji lub wątku. Metodę można opcjonalnie podnieść zdarzenie powiadamia klientów o Zmień stan, postęp aktualizacji lub nowo dostępne wyniki przyrostowe.  
  
 `arg` Parametr powinien być używany do przekazania stanu do delegata opakowane przez `d` parametru. Może być odwołaniem do <xref:System.ComponentModel.AsyncOperation>, lub może być <xref:System.ComponentModel.ProgressChangedEventArgs?displayProperty=nameWithType> obiektu. Może być pożądane wyprowadzenia klasy z <xref:System.ComponentModel.ProgressChangedEventArgs?displayProperty=nameWithType> magazynowanie dodatkowy stan.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, przy użyciu <xref:System.ComponentModel.AsyncOperation.Post%2A> metodę raportowania postępu i przyrostowych wyniki operacji asynchronicznej. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> klasy.  
  
  
[!code-csharp[System.ComponentModel.AsyncOperationManager#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#5)]
[!code-vb[System.ComponentModel.AsyncOperationManager#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" /> Została wywołana metoda wcześniej dla tego zadania.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="d" /> jest <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>Należy wprowadzić dziedziczenia <see cref="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" /> wywołania asynchronicznego tak, aby dostawców biblioteki klasy nie trzeba zajmować się stosu potencjalne przepełnienie Jeśli zakładają asynchrony, ale modelu aplikacji stanie się odbywać się synchronicznie.  <block subset="none" type="note"><para> Aplikacje konsoli nie Synchronizuj wykonywanie <see cref="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" /> wywołania. Może to spowodować <see langword="ProgressChanged" /> zdarzenia, które mają zostać wywołane poza kolejnością. Jeśli chcesz mieć serializacji wykonywanie <see cref="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" /> wywołań, wdrożenia i zainstalować <see cref="T:System.Threading.SynchronizationContext" /> klasy.  </para></block>  Aby uzyskać więcej informacji o implementacji klasy asynchroniczne Zobacz [Implementacja Pattern](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md) asynchroniczny oparty na zdarzeniach.</para>
        </block>
        <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
      </Docs>
    </Member>
    <Member MemberName="PostOperationCompleted">
      <MemberSignature Language="C#" Value="public void PostOperationCompleted (System.Threading.SendOrPostCallback d, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PostOperationCompleted(class System.Threading.SendOrPostCallback d, object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostOperationCompleted (d As SendOrPostCallback, arg As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostOperationCompleted(System::Threading::SendOrPostCallback ^ d, System::Object ^ arg);" />
      <MemberSignature Language="F#" Value="member this.PostOperationCompleted : System.Threading.SendOrPostCallback * obj -&gt; unit" Usage="asyncOperation.PostOperationCompleted (d, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Threading.SendOrPostCallback" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="d">A <see cref="T:System.Threading.SendOrPostCallback" /> obiekt, który opakowuje delegata, który ma być wywoływana po zakończeniu operacji.</param>
        <param name="arg">Argument dla obiekt delegowany zawarte w <c>d</c> parametru.</param>
        <summary>Kończy się okres istnienia operacji asynchronicznej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie <xref:System.ComponentModel.AsyncOperation.PostOperationCompleted%2A> metody do końca okresu istnienia operacji asynchronicznej. Po ta metoda jest wywoływana dla poszczególnych zadań, wywołań odpowiednie <xref:System.ComponentModel.AsyncOperation> obiektu zgłosi wyjątek.  
  
 `d` Parametr opakowuje delegat ma klasy do wywołania po zakończeniu okresu istnienia zadania z powodu niepowodzenia zadania zakończenia lub anulowania. <xref:System.ComponentModel.AsyncOperation> Obiektu zapewni, że pełnomocnika została wywołana w kontekście odpowiednie dla modelu aplikacji lub wątku. Pełnomocnika można opcjonalnie wywołaj zdarzenie powiadomienia klientów, którzy zakończył się okres istnienia zadanie asynchroniczne.  
  
 `arg` Parametr jest używany do przekazywania informacji o stanie do delegata ukończenia `d`. Można użyć <xref:System.ComponentModel.AsyncOperation> obiekt, lub <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> obiekt jako wartość parametru. Jeśli chcesz podać dodatkowe stanu magazynu, możesz też użyć wystąpienia klasy pochodzi od <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, przy użyciu <xref:System.ComponentModel.AsyncOperation.PostOperationCompleted%2A> metody do końca okresu istnienia operacji asynchronicznej. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> klasy.  
  
  
[!code-csharp[System.ComponentModel.AsyncOperationManager#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#4)]
[!code-vb[System.ComponentModel.AsyncOperationManager#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.ComponentModel.AsyncOperation.OperationCompleted" /> Wywołano wcześniej dla tego zadania.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="d" /> jest <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>Należy wprowadzić dziedziczenia <see cref="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" /> wywołania asynchronicznego tak, aby dostawców biblioteki klasy nie trzeba zajmować się stosu potencjalne przepełnienie Jeśli zakładają asynchrony, ale modelu aplikacji stanie się odbywać się synchronicznie. Metoda powinny być rozumiane jako wywołanie "zakończenia okresu istnienia", co oznacza, że implementacja musi wykonać, co to jest odpowiedni dla modelu aplikacji. Na przykład ASP.NET będzie zmniejszyć jego liczbę oczekujących operacji asynchronicznych. To również należy umieścić operacji do stanu tak, aby kolejnych wywołań do niego zakończy się niepowodzeniem, ponieważ zostało teraz zakończone.  Aby uzyskać więcej informacji o implementacji klasy asynchroniczne Zobacz [Implementacja Pattern](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md) asynchroniczny oparty na zdarzeniach.</para>
        </block>
        <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
      </Docs>
    </Member>
    <Member MemberName="SynchronizationContext">
      <MemberSignature Language="C#" Value="public System.Threading.SynchronizationContext SynchronizationContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.SynchronizationContext SynchronizationContext" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AsyncOperation.SynchronizationContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SynchronizationContext As SynchronizationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::SynchronizationContext ^ SynchronizationContext { System::Threading::SynchronizationContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizationContext : System.Threading.SynchronizationContext" Usage="System.ComponentModel.AsyncOperation.SynchronizationContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.SynchronizationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Threading.SynchronizationContext" /> obiektu, który został przekazany do konstruktora.</summary>
        <value>
          <see cref="T:System.Threading.SynchronizationContext" /> Obiektu, który został przekazany do konstruktora.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserSuppliedState">
      <MemberSignature Language="C#" Value="public object UserSuppliedState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UserSuppliedState" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AsyncOperation.UserSuppliedState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserSuppliedState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UserSuppliedState { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserSuppliedState : obj" Usage="System.ComponentModel.AsyncOperation.UserSuppliedState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt używany do jednoznacznego identyfikowania operacji asynchronicznej.</summary>
        <value>Obiekt stanu przekazywany do wywołania metody asynchronicznej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli klasa obsługuje wiele metod asynchronicznych lub wielu wywołań jednej metody asynchroniczne, klienci będą wymagać możliwość określenia, które zadanie asynchroniczne jest wywoływanie zdarzeń. Twoje `MethodNameAsync` metoda powinna przyjmować parametr typu <xref:System.Object> pełniący funkcję identyfikator zadania. Podczas wywoływania użyje tego zadania o identyfikatorze <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A?displayProperty=nameWithType>, metody i to zostanie skojarzony identyfikator zadania klienta z określonym wywołaniem operacji asynchronicznej. To zadanie identyfikator ma zostać udostępnione za pośrednictwem implementacji <xref:System.ComponentModel.AsyncOperation.UserSuppliedState%2A> właściwości.  
  
> [!CAUTION]
>  Kod klienta należy zachować ostrożność i Podaj unikatową wartość dla <xref:System.ComponentModel.AsyncOperation.UserSuppliedState%2A> właściwości. Nieunikatowy identyfikatorów zadań może spowodować implementacji nieprawidłowo raportuje postęp i inne zdarzenia. Sprawdź identyfikator zadania nie jest unikatowa i podnieść swój kod <xref:System.ArgumentException> po wykryciu jednego.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, przy użyciu <xref:System.ComponentModel.AsyncOperation.UserSuppliedState%2A> śledzić okres istnienia operacji asynchronicznych. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> klasy.  
  
  
[!code-csharp[System.ComponentModel.AsyncOperationManager#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#4)]
[!code-vb[System.ComponentModel.AsyncOperationManager#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
      </Docs>
    </Member>
  </Members>
</Type>