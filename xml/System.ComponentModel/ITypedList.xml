<Type Name="ITypedList" FullName="System.ComponentModel.ITypedList">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e7f4ffff29a30f45f48762c63ee0557955925ccc" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63866457" /></Metadata><TypeSignature Language="C#" Value="public interface ITypedList" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypedList" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ITypedList" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypedList" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypedList" />
  <TypeSignature Language="F#" Value="type ITypedList = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Oferuje funkcje, aby odnaleźć schematu dla listy może być powiązana, gdzie właściwości dostępnych dla powiązania różnią się od właściwości publiczne można powiązać obiektu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Używaj tego interfejsu, jeśli na przykład używasz <xref:System.Data.DataView> obiekt, który reprezentuje `customer` tabeli, którą chcesz powiązać właściwości `customer` obiekt <xref:System.Data.DataView> reprezentuje nie właściwości <xref:System.Data.DataView>.  
  
 Ten interfejs nie jest wymagane do obsługi w czasie projektowania lista może być powiązana.  
  
 Powiązanie danych może wystąpić w czasie wykonywania czy w projektancie, ale istnieją reguły dla obu. W czasie wykonywania można powiązać dane w jednym z następujących czynności:  
  
-   <xref:System.Array>  
  
-   Implementujący z <xref:System.Collections.IList>, o ile implementujący ma silnie typizowaną <xref:System.Collections.IList.Item%2A> właściwości (oznacza to, że <xref:System.Type> to wszystko, ale <xref:System.Object>). Można to zrobić, wprowadzając domyślna Implementacja klasy <xref:System.Collections.IList.Item%2A> prywatnych. Jeśli chcesz tworzyć <xref:System.Collections.IList> , regułom silnie typizowaną kolekcją, powinien pochodzić od <xref:System.Collections.CollectionBase>.  
  
-   Implementujący z <xref:System.ComponentModel.ITypedList>.  
  
 W projektancie, można inicjować powiązanie <xref:System.ComponentModel.Component> obiektów, wykonując te same reguły.  
  
 Aby uzyskać więcej informacji na temat powiązania ze źródłem danych, zobacz <xref:System.Windows.Forms.Binding?displayProperty=nameWithType> klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób implementacji <xref:System.ComponentModel.ITypedList> interfejsu. Typ ogólny, o nazwie `SortableBindingList` pochodzi od klasy <xref:System.ComponentModel.BindingList%601> klasy i implementuje <xref:System.ComponentModel.ITypedList> interfejsu. Lista pełny kod znajduje się [jak: Implementowanie interfejsu ITypedList](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md).  
  
 [!code-csharp[System.ComponentModel.ITypedList#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.ITypedList/CS/SortableBindingList.cs#1)]
 [!code-vb[System.ComponentModel.ITypedList#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.ITypedList/VB/SortableBindingList.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.BindingList`1" />
    <related type="Article" href="https://msdn.microsoft.com/library/834cc15c-50bc-4a8b-a610-313d6a217357">Instrukcje: Implementowanie interfejsu ITypedList</related>
    <related type="Article" href="https://msdn.microsoft.com/library/c3826d8e-ea25-4ad4-a669-45bfb19192aa">Powiązywanie danych formularzy systemu Windows</related>
  </Docs>
  <Members>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemProperties (listAccessors As PropertyDescriptor()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetItemProperties : System.ComponentModel.PropertyDescriptor[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="iTypedList.GetItemProperties listAccessors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors">Tablica <see cref="T:System.ComponentModel.PropertyDescriptor" /> obiektu do znalezienia w kolekcji jako możliwej do wiązania. Może to być <see langword="null" />.</param>
        <summary>Zwraca <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> reprezentująca właściwości dla każdego elementu, używanych do wiązania danych.</summary>
        <returns><see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> Reprezentująca właściwości dla każdego elementu, używanych do wiązania danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `listAccessors` parametr nie jest `null`, zwykle zawiera deskryptora właściwości, która określa listę kontenerów, aby pobrać obiekt, który implementuje <xref:System.ComponentModel.ITypedList>. Na przykład <xref:System.Data.DataSet> zawierający dwie tabele `myCustomers` i `myOrders`, przy użyciu relacji między nimi o nazwie `myCustOrders`. Jeśli tworzysz <xref:System.Data.DataView> obiekt, aby wyświetlić `myCustomers`, następnie wywoływania <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> metody z `null` zwraca deskryptorów właściwości dla kolumn w `myCustomers`. W rezultacie deskryptorów właściwości zwracanego on deskryptor właściwości `myCustOrders`, podobnie jak wywoływania <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> metody z tablicą metody dostępu listy zawierający deskryptorów właściwości dla `myCustOrders` zwróci deskryptorów właściwości Aby uzyskać `myOrders`.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób implementacji <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> metody. Lista pełny kod znajduje się [jak: Implementowanie interfejsu ITypedList](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md).  
  
 [!code-csharp[System.ComponentModel.ITypedList#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.ITypedList/CS/SortableBindingList.cs#3)]
 [!code-vb[System.ComponentModel.ITypedList#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.ITypedList/VB/SortableBindingList.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.BindingList`1" />
        <related type="Article" href="https://msdn.microsoft.com/library/834cc15c-50bc-4a8b-a610-313d6a217357">Instrukcje: Implementowanie interfejsu ITypedList</related>
        <related type="Article" href="https://msdn.microsoft.com/library/c3826d8e-ea25-4ad4-a669-45bfb19192aa">Powiązywanie danych formularzy systemu Windows</related>
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="public string GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetListName(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetListName (listAccessors As PropertyDescriptor()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetListName(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetListName : System.ComponentModel.PropertyDescriptor[] -&gt; string" Usage="iTypedList.GetListName listAccessors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors">Tablica <see cref="T:System.ComponentModel.PropertyDescriptor" /> obiektów, dla których nazwa listy jest zwracana. Może to być <see langword="null" />.</param>
        <summary>Zwraca nazwę listy.</summary>
        <returns>Nazwa listy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana tylko w ramach projektowania i przestarzałe <xref:System.Windows.Forms.DataGrid> kontroli.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób implementacji <xref:System.ComponentModel.ITypedList.GetListName%2A> metody. Lista pełny kod znajduje się [jak: Implementowanie interfejsu ITypedList](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md).  
  
 [!code-csharp[System.ComponentModel.ITypedList#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.ITypedList/CS/SortableBindingList.cs#4)]
 [!code-vb[System.ComponentModel.ITypedList#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.ITypedList/VB/SortableBindingList.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.BindingList`1" />
        <related type="Article" href="https://msdn.microsoft.com/library/834cc15c-50bc-4a8b-a610-313d6a217357">Instrukcje: Implementowanie interfejsu ITypedList</related>
        <related type="Article" href="https://msdn.microsoft.com/library/c3826d8e-ea25-4ad4-a669-45bfb19192aa">Powiązywanie danych formularzy systemu Windows</related>
      </Docs>
    </Member>
  </Members>
</Type>