<Type Name="ITypedList" FullName="System.ComponentModel.ITypedList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ae1b812b22292721f7b8e6e474b15516e5215709" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30442743" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ITypedList" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypedList" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ITypedList" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypedList" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypedList" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="5e90e-101">Udostępnia funkcje odnajdywania schematu można powiązać listę, której właściwości dostępne dla powiązania różnią się od publicznej właściwości do powiązania obiektu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5e90e-101">Provides functionality to discover the schema for a bindable list, where the properties available for binding differ from the public properties of the object to bind to.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e90e-102">Użyj tego interfejsu, jeśli na przykład używasz <xref:System.Data.DataView> obiekt, który reprezentuje `customer` tabeli, chcesz powiązać właściwości `customer` obiekt, który <xref:System.Data.DataView> reprezentuje nie właściwości <xref:System.Data.DataView>.</span><span class="sxs-lookup"><span data-stu-id="5e90e-102">Use this interface if, for instance, you are using a <xref:System.Data.DataView> object that represents a `customer` table, you want to bind to the properties on the `customer` object that the <xref:System.Data.DataView> represents, not the properties of the <xref:System.Data.DataView>.</span></span>  
  
 <span data-ttu-id="5e90e-103">Ten interfejs nie jest wymagana do obsługi czasu projektowania można powiązać listy.</span><span class="sxs-lookup"><span data-stu-id="5e90e-103">This interface is not required for design-time support of a bindable list.</span></span>  
  
 <span data-ttu-id="5e90e-104">Powiązanie danych może wystąpić w czasie wykonywania, lub za pomocą projektanta, ale istnieją reguły dla obu.</span><span class="sxs-lookup"><span data-stu-id="5e90e-104">Binding to data can occur either at run time or in a designer, but there are rules for both.</span></span> <span data-ttu-id="5e90e-105">W czasie wykonywania można powiązać z danymi w jedną z następujących czynności:</span><span class="sxs-lookup"><span data-stu-id="5e90e-105">At run time, you can bind to data in any of the following:</span></span>  
  
-   <xref:System.Array>  
  
-   <span data-ttu-id="5e90e-106">Realizator z <xref:System.Collections.IList>, o ile implementujący ma silnie typizowaną <xref:System.Collections.IList.Item%2A> właściwości (to znaczy <xref:System.Type> ma jakąkolwiek inną <xref:System.Object>).</span><span class="sxs-lookup"><span data-stu-id="5e90e-106">Implementer of <xref:System.Collections.IList>, provided the implementer has a strongly typed <xref:System.Collections.IList.Item%2A> property (that is, the <xref:System.Type> is anything but <xref:System.Object>).</span></span> <span data-ttu-id="5e90e-107">Można to zrobić przez domyślną implementację elementu <xref:System.Collections.IList.Item%2A> prywatnych.</span><span class="sxs-lookup"><span data-stu-id="5e90e-107">You can accomplish this by making the default implementation of <xref:System.Collections.IList.Item%2A> private.</span></span> <span data-ttu-id="5e90e-108">Jeśli chcesz utworzyć <xref:System.Collections.IList> następujący reguły silnie typizowaną kolekcją, powinien pochodzić od <xref:System.Collections.CollectionBase>.</span><span class="sxs-lookup"><span data-stu-id="5e90e-108">If you want to create an <xref:System.Collections.IList> that follows the rules of a strongly typed collection, you should derive from <xref:System.Collections.CollectionBase>.</span></span>  
  
-   <span data-ttu-id="5e90e-109">Realizator z <xref:System.ComponentModel.ITypedList>.</span><span class="sxs-lookup"><span data-stu-id="5e90e-109">Implementer of <xref:System.ComponentModel.ITypedList>.</span></span>  
  
 <span data-ttu-id="5e90e-110">W projektancie, można zainicjować powiązania <xref:System.ComponentModel.Component> obiektów, wykonując te same zasady stosowania.</span><span class="sxs-lookup"><span data-stu-id="5e90e-110">In a designer, you can initialize binding to <xref:System.ComponentModel.Component> objects by following the same rules.</span></span>  
  
 <span data-ttu-id="5e90e-111">Aby uzyskać więcej informacji dotyczących powiązania ze źródłem danych, zobacz <xref:System.Windows.Forms.Binding?displayProperty=nameWithType> klasy.</span><span class="sxs-lookup"><span data-stu-id="5e90e-111">For more information on binding to a data source, see the <xref:System.Windows.Forms.Binding?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e90e-112">Poniższy przykład kodu pokazuje, jak wdrożyć <xref:System.ComponentModel.ITypedList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="5e90e-112">The following code example demonstrates how to implement the <xref:System.ComponentModel.ITypedList> interface.</span></span> <span data-ttu-id="5e90e-113">Ogólny typ o nazwie `SortableBindingList` pochodną <xref:System.ComponentModel.BindingList%601> klasy i implementuje <xref:System.ComponentModel.ITypedList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="5e90e-113">A generic type named `SortableBindingList` derives from the <xref:System.ComponentModel.BindingList%601> class and implements the <xref:System.ComponentModel.ITypedList> interface.</span></span> <span data-ttu-id="5e90e-114">Listy pełnego kodu, zobacz [porady: Implementowanie interfejsu ITypedList](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md).</span><span class="sxs-lookup"><span data-stu-id="5e90e-114">For a full code listing, see [How to: Implement the ITypedList Interface](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md).</span></span>  
  
 [!code-csharp[System.ComponentModel.ITypedList#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.ITypedList/CS/SortableBindingList.cs#1)]
 [!code-vb[System.ComponentModel.ITypedList#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.ITypedList/VB/SortableBindingList.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.BindingList`1" />
  </Docs>
  <Members>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemProperties (listAccessors As PropertyDescriptor()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors">
          <span data-ttu-id="5e90e-115">Tablica <see cref="T:System.ComponentModel.PropertyDescriptor" /> obiektów można znaleźć w kolekcji jako możliwej do wiązania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e90e-115">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects to find in the collection as bindable.</span>
          </span>
          <span data-ttu-id="5e90e-116">Może to być <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e90e-116">This can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5e90e-117">Zwraca <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> reprezentujący właściwości na każdy element używanych do wiązania danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e90e-117">Returns the <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the properties on each item used to bind data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5e90e-118">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> Reprezentujący właściwości na każdy element używanych do wiązania danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e90e-118">The <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the properties on each item used to bind data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e90e-119">Jeśli `listAccessors` parametr nie jest `null`, zwykle zawiera deskryptora właściwości, która identyfikuje listy kontenerów do pobrania dla obiekt, który implementuje <xref:System.ComponentModel.ITypedList>.</span><span class="sxs-lookup"><span data-stu-id="5e90e-119">If the `listAccessors` parameter is not `null`, it typically contains a property descriptor that identifies a list of containers to retrieve for the object that implements <xref:System.ComponentModel.ITypedList>.</span></span> <span data-ttu-id="5e90e-120">Na przykład <xref:System.Data.DataSet> zawierających dwie tabele `myCustomers` i `myOrders`, przy użyciu relacji między nimi o nazwie `myCustOrders`.</span><span class="sxs-lookup"><span data-stu-id="5e90e-120">For example, a <xref:System.Data.DataSet> containing two tables, `myCustomers` and `myOrders`, with a relationship between them called `myCustOrders`.</span></span> <span data-ttu-id="5e90e-121">W przypadku utworzenia <xref:System.Data.DataView> obiekt, aby wyświetlić `myCustomers`, wywołując <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> metody z `null` zwraca deskryptorów właściwości dla kolumn w `myCustomers`.</span><span class="sxs-lookup"><span data-stu-id="5e90e-121">If you create a <xref:System.Data.DataView> object to view `myCustomers`, then calling the <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> method with `null` returns the property descriptors for the columns in `myCustomers`.</span></span> <span data-ttu-id="5e90e-122">W związku z tym jednym deskryptorów właściwości zwracane jest deskryptor właściwości `myCustOrders`, podobnie jak wywołanie <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> metody z tablicą akcesor listy zawierające deskryptorów właściwości dla `myCustOrders` zwróci deskryptorów właściwości Aby uzyskać `myOrders`.</span><span class="sxs-lookup"><span data-stu-id="5e90e-122">As a result, one of the returned property descriptors is a property descriptor for `myCustOrders`, just as calling the <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> method with a list accessor array containing the property descriptors for `myCustOrders` will return the property descriptors for `myOrders`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e90e-123">Poniższy przykład kodu pokazuje, jak wdrożyć <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="5e90e-123">The following code example demonstrates how to implement the <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> method.</span></span> <span data-ttu-id="5e90e-124">Listy pełnego kodu, zobacz [porady: Implementowanie interfejsu ITypedList](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md).</span><span class="sxs-lookup"><span data-stu-id="5e90e-124">For a full code listing, see [How to: Implement the ITypedList Interface](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md).</span></span>  
  
 [!code-csharp[System.ComponentModel.ITypedList#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.ITypedList/CS/SortableBindingList.cs#3)]
 [!code-vb[System.ComponentModel.ITypedList#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.ITypedList/VB/SortableBindingList.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.BindingList`1" />
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="public string GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetListName(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetListName (listAccessors As PropertyDescriptor()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetListName(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors">
          <span data-ttu-id="5e90e-125">Tablica <see cref="T:System.ComponentModel.PropertyDescriptor" /> obiektów, dla których zwracana jest nazwa listy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e90e-125">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects, for which the list name is returned.</span>
          </span>
          <span data-ttu-id="5e90e-126">Może to być <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e90e-126">This can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5e90e-127">Zwraca nazwę listy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e90e-127">Returns the name of the list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5e90e-128">Nazwa listy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e90e-128">The name of the list.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e90e-129">Ta metoda jest używana tylko w ramach projektowania i przestarzałe <xref:System.Windows.Forms.DataGrid> formantu.</span><span class="sxs-lookup"><span data-stu-id="5e90e-129">This method is used only in the design-time framework and by the obsolete <xref:System.Windows.Forms.DataGrid> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e90e-130">Poniższy przykład kodu pokazuje, jak wdrożyć <xref:System.ComponentModel.ITypedList.GetListName%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="5e90e-130">The following code example demonstrates how to implement the <xref:System.ComponentModel.ITypedList.GetListName%2A> method.</span></span> <span data-ttu-id="5e90e-131">Listy pełnego kodu, zobacz [porady: Implementowanie interfejsu ITypedList](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md).</span><span class="sxs-lookup"><span data-stu-id="5e90e-131">For a full code listing, see [How to: Implement the ITypedList Interface](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md).</span></span>  
  
 [!code-csharp[System.ComponentModel.ITypedList#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.ITypedList/CS/SortableBindingList.cs#4)]
 [!code-vb[System.ComponentModel.ITypedList#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.ITypedList/VB/SortableBindingList.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.BindingList`1" />
      </Docs>
    </Member>
  </Members>
</Type>