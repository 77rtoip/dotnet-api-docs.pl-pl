<Type Name="TypeDescriptionProvider" FullName="System.ComponentModel.TypeDescriptionProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="89efbe5222e2a61f9fcf3b7ab14c88aacd2502ee" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39817372" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TypeDescriptionProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TypeDescriptionProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeDescriptionProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TypeDescriptionProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeDescriptionProvider abstract" />
  <TypeSignature Language="F#" Value="type TypeDescriptionProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c9320-101">Udostępnia dodatkowe metadane na potrzeby <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c9320-101">Provides supplemental metadata to the <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9320-102"><xref:System.ComponentModel.TypeDescriptionProvider> Klasa rozszerza dynamicznie informacji o typie skojarzone z typem lub obiekt poprzez dodawanie, modyfikowanie lub ukrywanie cechy, takie jak atrybuty, właściwości i zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="c9320-102">The <xref:System.ComponentModel.TypeDescriptionProvider> class dynamically extends the type information associated with a type or object by adding, modifying, or hiding characteristics such as attributes, properties, and events.</span></span> <span data-ttu-id="c9320-103">Może istnieć wiele wpisz opis dostawcy klas, które oferują metadanych do pojedynczego <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="c9320-103">There can be multiple type description provider classes that offer metadata to a single <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="c9320-104">Istnieją dwa sposoby, aby skojarzyć <xref:System.ComponentModel.TypeDescriptionProvider> z <xref:System.ComponentModel.TypeDescriptor>:</span><span class="sxs-lookup"><span data-stu-id="c9320-104">There are two ways to associate a <xref:System.ComponentModel.TypeDescriptionProvider> with a <xref:System.ComponentModel.TypeDescriptor>:</span></span>  
  
-   <span data-ttu-id="c9320-105">W czasie projektowania, gdy Klasa docelowa można przypisać odpowiednie <xref:System.ComponentModel.TypeDescriptionProviderAttribute> tagu.</span><span class="sxs-lookup"><span data-stu-id="c9320-105">At design time, when the target class can be assigned the appropriate <xref:System.ComponentModel.TypeDescriptionProviderAttribute> tag.</span></span>  
  
-   <span data-ttu-id="c9320-106">W czasie wykonywania gdy dla jednego z <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> metody <xref:System.ComponentModel.TypeDescriptor> klasy może być wywoływany.</span><span class="sxs-lookup"><span data-stu-id="c9320-106">At run time, when one of the <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> methods of the <xref:System.ComponentModel.TypeDescriptor> class can be called.</span></span> <span data-ttu-id="c9320-107">Te przeciążone metody wymagają obiektu docelowego lub jego typ klasy.</span><span class="sxs-lookup"><span data-stu-id="c9320-107">These overloaded methods require either the target object or its class type.</span></span>  
  
 <span data-ttu-id="c9320-108"><xref:System.ComponentModel.TypeDescriptionProvider> Klasy opiera się na obiekt nadrzędny tego samego typu, podane podczas konstruowania.</span><span class="sxs-lookup"><span data-stu-id="c9320-108">The <xref:System.ComponentModel.TypeDescriptionProvider> class relies on a parent object of the same type, supplied during construction.</span></span> <span data-ttu-id="c9320-109">Dzięki temu klas, które wynikają z <xref:System.ComponentModel.CustomTypeDescriptor> celu selektywnego przesłaniania metody.</span><span class="sxs-lookup"><span data-stu-id="c9320-109">This allows classes that derive from <xref:System.ComponentModel.CustomTypeDescriptor> to selectively override methods.</span></span>  
  
 <span data-ttu-id="c9320-110">Wystąpienia elementu <xref:System.ComponentModel.TypeDescriptionProvider> tylko są tworzone na żądanie, minimalizując wpływ typu niestandardowego informacje na temat wydajności.</span><span class="sxs-lookup"><span data-stu-id="c9320-110">Instances of <xref:System.ComponentModel.TypeDescriptionProvider> are only built upon demand, minimizing the impact of custom type information on performance.</span></span>  
  
 <span data-ttu-id="c9320-111">Klasa ta nie może być dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="c9320-111">This class cannot be inherited.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="c9320-112">
        <para>Twoje Typ pochodny może być oznaczona jako <see langword="internal" /> lub <see langword="private" />, ale wystąpienie tego typu mogą być tworzone za pomocą <see cref="T:System.ComponentModel.TypeDescriptor" /> klasy. Nie zapisuj, że kod niezabezpieczone, zakładając, że obiekt wywołujący jest zaufany. Zamiast tego należy założyć, wywołań może utworzyć wystąpienia tego typu w częściowej relacji zaufania.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="c9320-112">
          <para>Your derived type might be marked as <see langword="internal" /> or <see langword="private" />, but an instance of your type can be created with the <see cref="T:System.ComponentModel.TypeDescriptor" /> class. Do not write insecure code by assuming the caller is trusted. Assume instead that callers might create instances of your type in partial trust.</para>
        </span>
      </span>
    </block>
    <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
    <altmember cref="T:System.ComponentModel.TypeDescriptionProviderAttribute" />
    <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c9320-113">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-113">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeDescriptionProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypeDescriptionProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c9320-114">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-114">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9320-115">Ten konstruktor jest odpowiednik wzywania drugiego <xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29> konstruktora z wartością parametru, który jest `null`.</span><span class="sxs-lookup"><span data-stu-id="c9320-115">This constructor is equivalent to calling the other <xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29> constructor with a parameter value that is `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeDescriptionProvider (System.ComponentModel.TypeDescriptionProvider parent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.TypeDescriptionProvider parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (parent As TypeDescriptionProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypeDescriptionProvider(System::ComponentModel::TypeDescriptionProvider ^ parent);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.TypeDescriptionProvider : System.ComponentModel.TypeDescriptionProvider -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="new System.ComponentModel.TypeDescriptionProvider parent" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parent" Type="System.ComponentModel.TypeDescriptionProvider" />
      </Parameters>
      <Docs>
        <param name="parent">
          <span data-ttu-id="c9320-116">Dostawcy opisu typu nadrzędnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-116">The parent type description provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9320-117">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> przy użyciu dostawcy opisu typu nadrzędnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-117">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> class using a parent type description provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9320-118">Jeśli `parent` parametr jest `null`, wszystkie <xref:System.ComponentModel.TypeDescriptionProvider> metody zwróci wartości domyślne.</span><span class="sxs-lookup"><span data-stu-id="c9320-118">If the `parent` parameter is `null`, all <xref:System.ComponentModel.TypeDescriptionProvider> methods will return default values.</span></span> <span data-ttu-id="c9320-119">W przeciwnym razie wszystkie <xref:System.ComponentModel.TypeDescriptionProvider> metod będzie delegowane do metod `parent`.</span><span class="sxs-lookup"><span data-stu-id="c9320-119">Otherwise, all <xref:System.ComponentModel.TypeDescriptionProvider> methods will delegate to the methods of `parent`.</span></span>  
  
 <span data-ttu-id="c9320-120">W poniższej tabeli przedstawiono domyślne wartości zwracane dla <xref:System.ComponentModel.TypeDescriptionProvider> metody.</span><span class="sxs-lookup"><span data-stu-id="c9320-120">The following table shows the default return values for <xref:System.ComponentModel.TypeDescriptionProvider> methods.</span></span>  
  
|<span data-ttu-id="c9320-121">Metoda</span><span class="sxs-lookup"><span data-stu-id="c9320-121">Method</span></span>|<span data-ttu-id="c9320-122">Zwracaną wartość domyślną</span><span class="sxs-lookup"><span data-stu-id="c9320-122">Default return value</span></span>|  
|------------|--------------------------|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A>|`null`|  
|<xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A>|<span data-ttu-id="c9320-123">Nowo utworzony obiekt za pomocą wywołania <xref:System.Activator.CreateInstance%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c9320-123">A newly created object through a call to the <xref:System.Activator.CreateInstance%2A> method.</span></span>|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A>|<span data-ttu-id="c9320-124">Domyślne wystąpienie <xref:System.ComponentModel.CustomTypeDescriptor> klasy.</span><span class="sxs-lookup"><span data-stu-id="c9320-124">A default instance of a <xref:System.ComponentModel.CustomTypeDescriptor> class.</span></span>|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>|<span data-ttu-id="c9320-125">Domyślne wystąpienie <xref:System.ComponentModel.CustomTypeDescriptor> klasy.</span><span class="sxs-lookup"><span data-stu-id="c9320-125">A default instance of a <xref:System.ComponentModel.CustomTypeDescriptor> class.</span></span>|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>|<span data-ttu-id="c9320-126">`objectType` Pierwszy parametr.</span><span class="sxs-lookup"><span data-stu-id="c9320-126">The `objectType` first parameter.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.CustomTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (IServiceProvider provider, Type objectType, Type[] argTypes, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(class System.IServiceProvider provider, class System.Type objectType, class System.Type[] argTypes, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (provider As IServiceProvider, objectType As Type, argTypes As Type(), args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(IServiceProvider ^ provider, Type ^ objectType, cli::array &lt;Type ^&gt; ^ argTypes, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : IServiceProvider * Type * Type[] * obj[] -&gt; obj&#xA;override this.CreateInstance : IServiceProvider * Type * Type[] * obj[] -&gt; obj" Usage="typeDescriptionProvider.CreateInstance (provider, objectType, argTypes, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="argTypes" Type="System.Type[]" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="c9320-127">Opcjonalne usługodawcy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-127">An optional service provider.</span>
          </span>
        </param>
        <param name="objectType">
          <span data-ttu-id="c9320-128">Typ obiektu do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-128">The type of object to create.</span>
          </span>
          <span data-ttu-id="c9320-129">Ten parametr nie jest nigdy <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-129">This parameter is never <see langword="null" />.</span>
          </span>
        </param>
        <param name="argTypes">
          <span data-ttu-id="c9320-130">Tablica opcjonalne typy, które reprezentują typy parametrów, który zostanie przekazany do konstruktora obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-130">An optional array of types that represent the parameter types to be passed to the object's constructor.</span>
          </span>
          <span data-ttu-id="c9320-131">Ta tablica może być <see langword="null" /> lub o zerowej długości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-131">This array can be <see langword="null" /> or of zero length.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="c9320-132">Opcjonalną tablicę wartości parametrów do przekazania do konstruktora obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-132">An optional array of parameter values to pass to the object's constructor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9320-133">Tworzy obiekt, który można zastąpić dla innego typu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-133">Creates an object that can substitute for another data type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9320-134">Poleceniu <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-134">The substitute <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9320-135"><xref:System.IServiceProvider> Określony przez `provider` parametru przekazanego <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=nameWithType> metody <xref:System.ComponentModel.TypeDescriptor> klasy.</span><span class="sxs-lookup"><span data-stu-id="c9320-135">The <xref:System.IServiceProvider> specified by the `provider` parameter is passed in by the <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=nameWithType> method of the <xref:System.ComponentModel.TypeDescriptor> class.</span></span> <span data-ttu-id="c9320-136">Jeśli `provider` nie `null`, usługodawca może służyć przez dostawcy opisu typu uzyskać dodatkowy kontekst dotyczący wywołania tworzenia.</span><span class="sxs-lookup"><span data-stu-id="c9320-136">If `provider` is not `null`, the service provider can be used by the type description provider to obtain additional context about the creation call.</span></span>  
  
 <span data-ttu-id="c9320-137"><xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> Metodą jest `virtual` i domyślnie zwraca wynik <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> metoda Jeśli `provider` jest `null`.</span><span class="sxs-lookup"><span data-stu-id="c9320-137">The <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> method is `virtual` and, by default, returns the result of the <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> method if `provider` is `null`.</span></span> <span data-ttu-id="c9320-138">Jeśli `provider` jest `null`, ta metoda wywoła <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> metoda nadrzędny dostawca.</span><span class="sxs-lookup"><span data-stu-id="c9320-138">If `provider` is `null`, this method will invoke the <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> method of the parent provider.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c9320-139">
            <para>Jeśli klasa pochodna nie interesuje zapewniając wystąpienie zastępuje, po prostu powinien wywoływać implementację podstawową.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-139">
              <para>If the derived class is not interested in providing a substitute instance, it should just call the base implementation.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="GetCache">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionary GetCache (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionary GetCache(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCache (instance As Object) As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionary ^ GetCache(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetCache : obj -&gt; System.Collections.IDictionary&#xA;override this.GetCache : obj -&gt; System.Collections.IDictionary" Usage="typeDescriptionProvider.GetCache instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="c9320-140">Obiekt, dla którego mają zostać pobrane z pamięci podręcznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-140">The object for which to get the cache.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9320-141">Pobiera pamięć podręczną dla obiektów, dostępne jako <see cref="T:System.Collections.IDictionary" /> par klucz/wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-141">Gets a per-object cache, accessed as an <see cref="T:System.Collections.IDictionary" /> of key/value pairs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9320-142">
            <see cref="T:System.Collections.IDictionary" /> Jeśli podany obiekt obsługuje buforowanie; w przeciwnym razie <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-142">An <see cref="T:System.Collections.IDictionary" /> if the provided object supports caching; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9320-143">Element <xref:System.ComponentModel.TypeDescriptor> może być konieczne wykonanie złożonych operacji w kolekcji metadanych.</span><span class="sxs-lookup"><span data-stu-id="c9320-143">A <xref:System.ComponentModel.TypeDescriptor> may need to perform complex operations on collections of metadata.</span></span> <span data-ttu-id="c9320-144">Ponieważ typy nie są usuwane z pamięci dla całej domeny, <xref:System.ComponentModel.TypeDescriptor> klasy automatycznie będzie buforować wyniki tych operacji na podstawie typu.</span><span class="sxs-lookup"><span data-stu-id="c9320-144">Because types are not unloaded for the life of a domain, the <xref:System.ComponentModel.TypeDescriptor> class will automatically cache the results of these operations based on type.</span></span> <span data-ttu-id="c9320-145">Jednak niektóre operacje użyć wystąpienia obiektów na żywo.</span><span class="sxs-lookup"><span data-stu-id="c9320-145">However, some operations use live object instances.</span></span> <span data-ttu-id="c9320-146">Nie można buforować tych operacji w ramach <xref:System.ComponentModel.TypeDescriptor> klasy, ponieważ buforowanie ich uniemożliwiłyby obiektu jako elementu bezużytecznego zbierane.</span><span class="sxs-lookup"><span data-stu-id="c9320-146">These operations cannot be cached within the <xref:System.ComponentModel.TypeDescriptor> class because caching them would prevent the object from being garbage collected.</span></span> <span data-ttu-id="c9320-147">Zamiast tego <xref:System.ComponentModel.TypeDescriptor> klasy umożliwia dla obiektów pamięć podręczna, dostępna jako <xref:System.Collections.IDictionary> par klucz/wartość istnieje w obiekcie.</span><span class="sxs-lookup"><span data-stu-id="c9320-147">Instead, the <xref:System.ComponentModel.TypeDescriptor> class allows for a per-object cache, accessed as an <xref:System.Collections.IDictionary> of key/value pairs, to exist on an object.</span></span> <span data-ttu-id="c9320-148"><xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> Metoda zwraca wystąpienie tej pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="c9320-148">The <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> method returns an instance of this cache.</span></span> <span data-ttu-id="c9320-149"><xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> Metoda zwróci `null` Jeśli brak pamięci podręcznej obsługiwanych dla obiektu.</span><span class="sxs-lookup"><span data-stu-id="c9320-149">The <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> method will return `null` if there is no supported cache for an object.</span></span>  
  
 <span data-ttu-id="c9320-150">Wartość domyślna <xref:System.ComponentModel.TypeDescriptionProvider> posługują się <xref:System.ComponentModel.TypeDescriptor> sprawdza, czy obiekt, aby sprawdzić, czy jest umieszczone składnik, który implementuje <xref:System.ComponentModel.Design.IDictionaryService> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c9320-150">The default <xref:System.ComponentModel.TypeDescriptionProvider> used by <xref:System.ComponentModel.TypeDescriptor> examines the object to see if it is a sited component that implements the <xref:System.ComponentModel.Design.IDictionaryService> interface.</span></span> <span data-ttu-id="c9320-151">Jeśli obiekt jest, używa usługi słownika do przechowywania obiektu w pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="c9320-151">If the object is, it uses the dictionary service to store the object's cache.</span></span> <span data-ttu-id="c9320-152">W przeciwnym razie obiekt zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="c9320-152">Otherwise, the object it returns `null`.</span></span> <span data-ttu-id="c9320-153">Innych dostawców opis typów może dostarczyć zapewniali własną implementację w tym miejscu.</span><span class="sxs-lookup"><span data-stu-id="c9320-153">Other type description providers may provide their own implementation here.</span></span> <span data-ttu-id="c9320-154">Na przykład obiekty zależności po prostu dołączyć właściwości typu <xref:System.Collections.IDictionary>.</span><span class="sxs-lookup"><span data-stu-id="c9320-154">For example, dependency objects can just attach a property of type <xref:System.Collections.IDictionary>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.ComponentModel.Design.IDictionaryService" />
      </Docs>
    </Member>
    <Member MemberName="GetExtendedTypeDescriptor">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ICustomTypeDescriptor GetExtendedTypeDescriptor (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.ICustomTypeDescriptor GetExtendedTypeDescriptor(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExtendedTypeDescriptor (instance As Object) As ICustomTypeDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::ICustomTypeDescriptor ^ GetExtendedTypeDescriptor(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetExtendedTypeDescriptor : obj -&gt; System.ComponentModel.ICustomTypeDescriptor&#xA;override this.GetExtendedTypeDescriptor : obj -&gt; System.ComponentModel.ICustomTypeDescriptor" Usage="typeDescriptionProvider.GetExtendedTypeDescriptor instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="c9320-155">Obiekt, dla którego należy pobrać deskryptor typu rozszerzonej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-155">The object for which to get the extended type descriptor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9320-156">Pobiera rozszerzone niestandardowego deskryptora typu dla danego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-156">Gets an extended custom type descriptor for the given object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9320-157">
            <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> , Które oferują rozszerzone metadane dla obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-157">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide extended metadata for the object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9320-158">Deskryptor typu rozszerzonej jest deskryptora typu niestandardowego, który oferty, które właściwości innych obiektów dodanych do tego obiektu, ale nie są faktycznie zdefiniowany w obiekcie.</span><span class="sxs-lookup"><span data-stu-id="c9320-158">An extended type descriptor is a custom type descriptor that offers properties that other objects have added to this object, but that are not actually defined on the object.</span></span> <span data-ttu-id="c9320-159">Na przykład w [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] składników modelu obiektów, które implementują <xref:System.ComponentModel.IExtenderProvider> interfejsu można dołączyć właściwości do innych obiektów, które znajdują się w ten sam kontener logiczny.</span><span class="sxs-lookup"><span data-stu-id="c9320-159">For example, in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] component model, objects that implement the <xref:System.ComponentModel.IExtenderProvider> interface can attach properties to other objects that reside in the same logical container.</span></span> <span data-ttu-id="c9320-160">Przeciążone <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> metody nie zwracają deskryptora typu, który zapewnia tych dodatkowych rozszerzonych właściwości.</span><span class="sxs-lookup"><span data-stu-id="c9320-160">The overloaded <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> methods do not return a type descriptor that provides these extra extended properties.</span></span> <span data-ttu-id="c9320-161"><xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> Metoda zwraca zbiór tych właściwości rozszerzone.</span><span class="sxs-lookup"><span data-stu-id="c9320-161">The <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> method returns the set of these extended properties.</span></span> <span data-ttu-id="c9320-162"><xref:System.ComponentModel.TypeDescriptor> Automatycznie scali wyniki tych dwóch właściwości kolekcji.</span><span class="sxs-lookup"><span data-stu-id="c9320-162">The <xref:System.ComponentModel.TypeDescriptor> will automatically merge the results of these two property collections.</span></span> <span data-ttu-id="c9320-163">Gdy [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] modelu składnik obsługuje tylko właściwości rozszerzonych <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> może służyć do atrybutów rozszerzonych, a także zdarzeń, jeśli dostawcy opisu typu obsługuje tę funkcję.</span><span class="sxs-lookup"><span data-stu-id="c9320-163">While the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] component model supports only extended properties, <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> can be used for extended attributes as well as events, if the type description provider supports it.</span></span>  
  
 <span data-ttu-id="c9320-164"><xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> jest `virtual` i domyślnie zwraca w deskryptora typu niestandardowego, który zwraca puste wyniki, jeśli nie przekazano żadnych nadrzędny dostawca.</span><span class="sxs-lookup"><span data-stu-id="c9320-164"><xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> is `virtual` and, by default, returns a custom type descriptor that returns empty results if no parent provider was passed.</span></span> <span data-ttu-id="c9320-165">Jeśli nadrzędny dostawca został przekazany, ta metoda wywoła nadrzędny dostawca <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c9320-165">If a parent provider was passed, this method will invoke the parent provider's <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetExtenderProviders">
      <MemberSignature Language="C#" Value="protected internal virtual System.ComponentModel.IExtenderProvider[] GetExtenderProviders (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ComponentModel.IExtenderProvider[] GetExtenderProviders(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetExtenderProviders (instance As Object) As IExtenderProvider()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::ComponentModel::IExtenderProvider ^&gt; ^ GetExtenderProviders(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetExtenderProviders : obj -&gt; System.ComponentModel.IExtenderProvider[]&#xA;override this.GetExtenderProviders : obj -&gt; System.ComponentModel.IExtenderProvider[]" Usage="typeDescriptionProvider.GetExtenderProviders instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IExtenderProvider[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="c9320-166">Obiekt, który można pobrać dostawców rozszerzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-166">The object to get extender providers for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9320-167">Pobiera dostawców rozszerzeń dla określonego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-167">Gets the extender providers for the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9320-168">Tablica dostawcy rozszerzeń dla <paramref name="instance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-168">An array of extender providers for <paramref name="instance" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c9320-169">
            <paramref name="instance" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-169">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFullComponentName">
      <MemberSignature Language="C#" Value="public virtual string GetFullComponentName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetFullComponentName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFullComponentName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetFullComponentName(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="abstract member GetFullComponentName : obj -&gt; string&#xA;override this.GetFullComponentName : obj -&gt; string" Usage="typeDescriptionProvider.GetFullComponentName component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="c9320-170">Określony składnik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-170">The specified component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9320-171">Pobiera nazwę określonego składnika lub <see langword="null" /> Jeśli składnik nie ma nazwy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-171">Gets the name of the specified component, or <see langword="null" /> if the component has no name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9320-172">Nazwa określonego składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-172">The name of the specified component.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c9320-173">
            <paramref name="component" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-173">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetReflectionType">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c9320-174">Wykonuje normalny odbicie wobec obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-174">Performs normal reflection against an object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public Type GetReflectionType (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetReflectionType(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReflectionType (instance As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetReflectionType(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="member this.GetReflectionType : obj -&gt; Type" Usage="typeDescriptionProvider.GetReflectionType instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="c9320-175">Wystąpienie tego typu (nie powinny być <see langword="null" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-175">An instance of the type (should not be <see langword="null" />).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9320-176">Wykonuje normalny odbicia w odniesieniu do danego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-176">Performs normal reflection against the given object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9320-177">Typ odbicia dla tego <paramref name="instance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-177">The type of reflection for this <paramref name="instance" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9320-178"><xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> Metoda jest nieco niższe <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c9320-178">The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="c9320-179">Jeśli Brak deskryptora typu niestandardowego może znajdować się w przypadku obiektu <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> jest wywoływana, aby wykonać normalnego odbicia w odniesieniu do obiektu.</span><span class="sxs-lookup"><span data-stu-id="c9320-179">If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.</span></span>  
  
 <span data-ttu-id="c9320-180">Użyj tego przeciążenia metody, jeśli wywołujesz element członkowski deskryptora typu, który używa wystąpienia zamiast typu.</span><span class="sxs-lookup"><span data-stu-id="c9320-180">Use this method overload if you have called a type descriptor member that uses an instance instead of a type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c9320-181">
            <paramref name="instance" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-181">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public Type GetReflectionType (Type objectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetReflectionType(class System.Type objectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReflectionType (objectType As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetReflectionType(Type ^ objectType);" />
      <MemberSignature Language="F#" Value="member this.GetReflectionType : Type -&gt; Type" Usage="typeDescriptionProvider.GetReflectionType objectType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">
          <span data-ttu-id="c9320-182">Typ obiektu, dla którego mają zostać pobrane <see cref="T:System.Reflection.IReflect" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-182">The type of object for which to retrieve the <see cref="T:System.Reflection.IReflect" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9320-183">Wykonuje normalny odbicia do typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-183">Performs normal reflection against a type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9320-184">Typ odbicia dla tego <paramref name="objectType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-184">The type of reflection for this <paramref name="objectType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9320-185"><xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> Metoda jest nieco niższe <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c9320-185">The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="c9320-186">Jeśli Brak deskryptora typu niestandardowego może znajdować się w przypadku obiektu <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> jest wywoływana, aby wykonać normalnego odbicia w odniesieniu do obiektu.</span><span class="sxs-lookup"><span data-stu-id="c9320-186">If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.</span></span>  
  
 <span data-ttu-id="c9320-187">Użyj tego przeciążenia metody, jeśli wywołujesz element członkowski deskryptora typu, który korzysta z typu zamiast wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="c9320-187">Use this method overload if you have called a type descriptor member that uses a type instead of an instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c9320-188">
            <paramref name="objectType" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-188">
              <paramref name="objectType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public virtual Type GetReflectionType (Type objectType, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetReflectionType(class System.Type objectType, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReflectionType (objectType As Type, instance As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetReflectionType(Type ^ objectType, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetReflectionType : Type * obj -&gt; Type&#xA;override this.GetReflectionType : Type * obj -&gt; Type" Usage="typeDescriptionProvider.GetReflectionType (objectType, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objectType">
          <span data-ttu-id="c9320-189">Typ obiektu, dla którego mają zostać pobrane <see cref="T:System.Reflection.IReflect" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-189">The type of object for which to retrieve the <see cref="T:System.Reflection.IReflect" />.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="c9320-190">Wystąpienie tego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-190">An instance of the type.</span>
          </span>
          <span data-ttu-id="c9320-191">Może być <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-191">Can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9320-192">Wykonuje normalny odbicia w odniesieniu do danego obiektu z danym typem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-192">Performs normal reflection against the given object with the given type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9320-193">Typ odbicia dla tego <paramref name="objectType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-193">The type of reflection for this <paramref name="objectType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9320-194"><xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> Metoda jest nieco niższe <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c9320-194">The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="c9320-195">Jeśli Brak deskryptora typu niestandardowego może znajdować się w przypadku obiektu <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> jest wywoływana, aby wykonać normalnego odbicia w odniesieniu do obiektu.</span><span class="sxs-lookup"><span data-stu-id="c9320-195">If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c9320-196">
            <para>Ta metoda jest prototypowane jako <see langword="virtual" />i domyślnie zwraca <paramref name="objectType" /> Jeśli przekazano żaden dostawca nadrzędnej. Jeśli nadrzędny dostawca został przekazany, ta metoda wywoła nadrzędny dostawca <see cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetReflectionType" /> metody.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-196">
              <para>This method is prototyped as <see langword="virtual" />, and by default returns <paramref name="objectType" /> if no parent provider was passed. If a parent provider was passed, this method will invoke the parent provider's <see cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetReflectionType" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeType">
      <MemberSignature Language="C#" Value="public virtual Type GetRuntimeType (Type reflectionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetRuntimeType(class System.Type reflectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRuntimeType (reflectionType As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetRuntimeType(Type ^ reflectionType);" />
      <MemberSignature Language="F#" Value="abstract member GetRuntimeType : Type -&gt; Type&#xA;override this.GetRuntimeType : Type -&gt; Type" Usage="typeDescriptionProvider.GetRuntimeType reflectionType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reflectionType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="reflectionType">
          <span data-ttu-id="c9320-197">Typ, który można przekonwertować na jego runtime, które są równoważne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-197">The type to convert to its runtime equivalent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9320-198">Konwertuje Typ odbicia typu środowiska uruchomieniowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-198">Converts a reflection type into a runtime type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9320-199">A <see cref="T:System.Type" /> reprezentujący środowiska uruchomieniowego wielokrotność <paramref name="reflectionType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-199">A <see cref="T:System.Type" /> that represents the runtime equivalent of <paramref name="reflectionType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9320-200"><xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> Odwraca metoda <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> metodę, aby przekonwertować typ odbicia z powrotem do typu środowiska uruchomieniowego.</span><span class="sxs-lookup"><span data-stu-id="c9320-200">The <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> method reverses the <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method to convert a reflection type back into a runtime type.</span></span> <span data-ttu-id="c9320-201">Za pomocą <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> metoda jest preferowana nad przy użyciu <xref:System.Type.UnderlyingSystemType%2A> właściwość, która była używana we wcześniejszych wersjach do zwrotu typu środowiska uruchomieniowego.</span><span class="sxs-lookup"><span data-stu-id="c9320-201">Using the <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> method is preferred over using the <xref:System.Type.UnderlyingSystemType%2A> property, which was used in earlier versions to return the runtime type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c9320-202">
            <paramref name="reflectionType" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-202">
              <paramref name="reflectionType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeDescriptor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c9320-203">Pobiera deskryptora typu niestandardowego dla danego typu lub obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-203">Gets a custom type descriptor for the given type or object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeDescriptor">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeDescriptor (instance As Object) As ICustomTypeDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::ICustomTypeDescriptor ^ GetTypeDescriptor(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="member this.GetTypeDescriptor : obj -&gt; System.ComponentModel.ICustomTypeDescriptor" Usage="typeDescriptionProvider.GetTypeDescriptor instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="c9320-204">Wystąpienie tego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-204">An instance of the type.</span>
          </span>
          <span data-ttu-id="c9320-205">Może być <see langword="null" /> Jeśli żadne wystąpienie został przekazany do <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-205">Can be <see langword="null" /> if no instance was passed to the <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9320-206">Pobiera deskryptora typu niestandardowego dla danego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-206">Gets a custom type descriptor for the given object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9320-207">
            <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> Dostarczające metadanych dla typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-207">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide metadata for the type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c9320-208">
            <paramref name="instance" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-208">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeDescriptor">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (Type objectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(class System.Type objectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeDescriptor (objectType As Type) As ICustomTypeDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::ICustomTypeDescriptor ^ GetTypeDescriptor(Type ^ objectType);" />
      <MemberSignature Language="F#" Value="member this.GetTypeDescriptor : Type -&gt; System.ComponentModel.ICustomTypeDescriptor" Usage="typeDescriptionProvider.GetTypeDescriptor objectType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">
          <span data-ttu-id="c9320-209">Typ obiektu, który można pobrać deskryptora typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-209">The type of object for which to retrieve the type descriptor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9320-210">Pobiera deskryptora typu niestandardowego dla danego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-210">Gets a custom type descriptor for the given type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9320-211">
            <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> Dostarczające metadanych dla typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-211">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide metadata for the type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeDescriptor">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (Type objectType, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(class System.Type objectType, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTypeDescriptor (objectType As Type, instance As Object) As ICustomTypeDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::ICustomTypeDescriptor ^ GetTypeDescriptor(Type ^ objectType, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeDescriptor : Type * obj -&gt; System.ComponentModel.ICustomTypeDescriptor&#xA;override this.GetTypeDescriptor : Type * obj -&gt; System.ComponentModel.ICustomTypeDescriptor" Usage="typeDescriptionProvider.GetTypeDescriptor (objectType, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objectType">
          <span data-ttu-id="c9320-212">Typ obiektu, który można pobrać deskryptora typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-212">The type of object for which to retrieve the type descriptor.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="c9320-213">Wystąpienie tego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-213">An instance of the type.</span>
          </span>
          <span data-ttu-id="c9320-214">Może być <see langword="null" /> Jeśli żadne wystąpienie został przekazany do <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-214">Can be <see langword="null" /> if no instance was passed to the <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9320-215">Pobiera deskryptor typu niestandardowego dla danego typu i obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-215">Gets a custom type descriptor for the given type and object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9320-216">
            <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> Dostarczające metadanych dla typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-216">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide metadata for the type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9320-217">Ta metoda jest prototypowane jako `virtual` i domyślnie zwraca pusty deskryptor, jeśli nie przekazano żadnych nadrzędny dostawca.</span><span class="sxs-lookup"><span data-stu-id="c9320-217">This method is prototyped as `virtual` and, by default, returns an empty descriptor if no parent provider was passed.</span></span> <span data-ttu-id="c9320-218">Jeśli nadrzędny dostawca został przekazany, ta metoda wywoła nadrzędny dostawca <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c9320-218">If a parent provider was passed, this method will invoke the parent provider's <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c9320-219">
            <para>
              <see cref="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" /> Metoda powinna zwrócić deskryptora typu niestandardowego dla obiektu. Jeśli metoda nie dostarcza informacji o typie dla obiektu, powinna zwrócić <see langword="null" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-219">
              <para>The <see cref="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" /> method should return a custom type descriptor for the object. If the method does not provide type information for the object, it should return <see langword="null" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsSupportedType">
      <MemberSignature Language="C#" Value="public virtual bool IsSupportedType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSupportedType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSupportedType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member IsSupportedType : Type -&gt; bool&#xA;override this.IsSupportedType : Type -&gt; bool" Usage="typeDescriptionProvider.IsSupportedType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="c9320-220">Typ do przetestowania zgodności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-220">The type to test for compatibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9320-221">Pobiera wartość wskazującą, czy określony typ jest zgodny z opis typu i jego łańcucha dostawców opis typów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-221">Gets a value that indicates whether the specified type is compatible with the type description and its chain of type description providers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9320-222">
            <see langword="true" /> Jeśli <paramref name="type" /> jest zgodny z opis typu i jego łańcucha dostawcy opisu typu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-222">
              <see langword="true" /> if <paramref name="type" /> is compatible with the type description and its chain of type description providers; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c9320-223">
            <paramref name="type" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9320-223">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>