<Type Name="EventDescriptor" FullName="System.ComponentModel.EventDescriptor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3cd1720b36ec53fa0f330cba02f0b464465fd299" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39774381" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class EventDescriptor : System.ComponentModel.MemberDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EventDescriptor extends System.ComponentModel.MemberDescriptor" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.EventDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EventDescriptor&#xA;Inherits MemberDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventDescriptor abstract : System::ComponentModel::MemberDescriptor" />
  <TypeSignature Language="F#" Value="type EventDescriptor = class&#xA;    inherit MemberDescriptor" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.MemberDescriptor</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f2b6b-101">Zawiera informacje o zdarzeniu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f2b6b-101">Provides information about an event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2b6b-102"><xref:System.ComponentModel.EventDescriptor> Składa się z nazwy, jego atrybuty, składnik, który zdarzenia jest powiązany z, delegat wydarzenia, typ delegata, oraz czy multiemisji jest delegat.</span><span class="sxs-lookup"><span data-stu-id="f2b6b-102">An <xref:System.ComponentModel.EventDescriptor> consists of a name, its attributes, the component that the event is bound to, the event delegate, the type of delegate, and whether the delegate is multicast.</span></span>  
  
 <span data-ttu-id="f2b6b-103"><xref:System.ComponentModel.EventDescriptor> udostępnia następujące `abstract` właściwości i metod:</span><span class="sxs-lookup"><span data-stu-id="f2b6b-103"><xref:System.ComponentModel.EventDescriptor> provides the following `abstract` properties and methods:</span></span>  
  
-   <span data-ttu-id="f2b6b-104"><xref:System.ComponentModel.EventDescriptor.ComponentType%2A> zawiera typ składnika, który to zdarzenie jest zadeklarowany na.</span><span class="sxs-lookup"><span data-stu-id="f2b6b-104"><xref:System.ComponentModel.EventDescriptor.ComponentType%2A> contains the type of the component this event is declared on.</span></span>  
  
-   <span data-ttu-id="f2b6b-105"><xref:System.ComponentModel.EventDescriptor.EventType%2A> zawiera typ delegata zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="f2b6b-105"><xref:System.ComponentModel.EventDescriptor.EventType%2A> contains the type of delegate for the event.</span></span>  
  
-   <span data-ttu-id="f2b6b-106"><xref:System.ComponentModel.EventDescriptor.IsMulticast%2A> zawiera wartość wskazującą, czy delegata zdarzenia jest delegat multiemisji.</span><span class="sxs-lookup"><span data-stu-id="f2b6b-106"><xref:System.ComponentModel.EventDescriptor.IsMulticast%2A> contains a value indicating whether the event delegate is a multicast delegate.</span></span>  
  
-   <span data-ttu-id="f2b6b-107"><xref:System.ComponentModel.EventDescriptor.AddEventHandler%2A> wiąże zdarzenia do składnika.</span><span class="sxs-lookup"><span data-stu-id="f2b6b-107"><xref:System.ComponentModel.EventDescriptor.AddEventHandler%2A> binds the event to a component.</span></span>  
  
-   <span data-ttu-id="f2b6b-108"><xref:System.ComponentModel.EventDescriptor.RemoveEventHandler%2A> Rozpina delegata ze składnika, więc, że delegat nie będzie już otrzymywać zdarzenia ze składnika.</span><span class="sxs-lookup"><span data-stu-id="f2b6b-108"><xref:System.ComponentModel.EventDescriptor.RemoveEventHandler%2A> unbinds the delegate from the component so that the delegate no longer receives events from the component.</span></span>  
  
 <span data-ttu-id="f2b6b-109">Aby uzyskać więcej informacji o zdarzeniach zobacz [Handling and Raising Events](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="f2b6b-109">For more information about events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span> <span data-ttu-id="f2b6b-110">Aby uzyskać więcej informacji dotyczących odbicia, zobacz Tematy w [odbicia](~/docs/framework/reflection-and-codedom/reflection.md).</span><span class="sxs-lookup"><span data-stu-id="f2b6b-110">For more information about reflection, see the topics in [Reflection](~/docs/framework/reflection-and-codedom/reflection.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f2b6b-111">Poniższy przykład kodu jest oparty na przykład w <xref:System.ComponentModel.EventDescriptorCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="f2b6b-111">The following code example is built upon the example in the <xref:System.ComponentModel.EventDescriptorCollection> class.</span></span> <span data-ttu-id="f2b6b-112">Informacje (kategoria, opis i nazwa wyświetlana) każde zdarzenie zostanie wydrukowany na przycisku w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="f2b6b-112">It prints the information (category, description, and display name) of each event on a button in a text box.</span></span> <span data-ttu-id="f2b6b-113">Wymaga, aby `button1` i `textbox1` zostały utworzone w formularzu.</span><span class="sxs-lookup"><span data-stu-id="f2b6b-113">It requires that `button1` and `textbox1` have been instantiated on a form.</span></span>  
  
 [!code-cpp[EventDescriptor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/EventDescriptor/CPP/eventdescriptor.cpp#1)]
 [!code-csharp[EventDescriptor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/EventDescriptor/CS/eventdescriptor.cs#1)]
 [!code-vb[EventDescriptor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/EventDescriptor/VB/eventdescriptor.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.MemberDescriptor" />
    <altmember cref="T:System.Attribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f2b6b-114">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.EventDescriptor" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b6b-114">Initializes a new instance of the <see cref="T:System.ComponentModel.EventDescriptor" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventDescriptor (System.ComponentModel.MemberDescriptor descr);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.MemberDescriptor descr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (descr As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventDescriptor(System::ComponentModel::MemberDescriptor ^ descr);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.EventDescriptor : System.ComponentModel.MemberDescriptor -&gt; System.ComponentModel.EventDescriptor" Usage="new System.ComponentModel.EventDescriptor descr" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="descr" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="descr">
          <span data-ttu-id="f2b6b-115">Element <see cref="T:System.ComponentModel.MemberDescriptor" /> zawierający nazwę zdarzenia i jego atrybuty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b6b-115">A <see cref="T:System.ComponentModel.MemberDescriptor" /> that contains the name of the event and its attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b6b-116">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.EventDescriptor" /> klasy o nazwie i atrybuty w określonym <see cref="T:System.ComponentModel.MemberDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b6b-116">Initializes a new instance of the <see cref="T:System.ComponentModel.EventDescriptor" /> class with the name and attributes in the specified <see cref="T:System.ComponentModel.MemberDescriptor" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventDescriptor (System.ComponentModel.MemberDescriptor descr, Attribute[] attrs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.MemberDescriptor descr, class System.Attribute[] attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (descr As MemberDescriptor, attrs As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventDescriptor(System::ComponentModel::MemberDescriptor ^ descr, cli::array &lt;Attribute ^&gt; ^ attrs);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.EventDescriptor : System.ComponentModel.MemberDescriptor * Attribute[] -&gt; System.ComponentModel.EventDescriptor" Usage="new System.ComponentModel.EventDescriptor (descr, attrs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="descr" Type="System.ComponentModel.MemberDescriptor" />
        <Parameter Name="attrs" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="descr">
          <span data-ttu-id="f2b6b-117">Element <see cref="T:System.ComponentModel.MemberDescriptor" /> zawierający nazwę elementu członkowskiego i jego atrybuty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b6b-117">A <see cref="T:System.ComponentModel.MemberDescriptor" /> that has the name of the member and its attributes.</span>
          </span>
        </param>
        <param name="attrs">
          <span data-ttu-id="f2b6b-118">
            <see cref="T:System.Attribute" /> Tablica z atrybutami, które chcesz dodać do tego opisu zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b6b-118">An <see cref="T:System.Attribute" /> array with the attributes you want to add to this event description.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b6b-119">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.EventDescriptor" /> klasy o nazwie w określonym <see cref="T:System.ComponentModel.MemberDescriptor" /> i atrybuty w obu <see cref="T:System.ComponentModel.MemberDescriptor" /> i <see cref="T:System.Attribute" /> tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b6b-119">Initializes a new instance of the <see cref="T:System.ComponentModel.EventDescriptor" /> class with the name in the specified <see cref="T:System.ComponentModel.MemberDescriptor" /> and the attributes in both the <see cref="T:System.ComponentModel.MemberDescriptor" /> and the <see cref="T:System.Attribute" /> array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2b6b-120">Ten konstruktor dołącza atrybuty w <xref:System.Attribute> tablicy do atrybutów w <xref:System.ComponentModel.MemberDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="f2b6b-120">This constructor appends the attributes in the <xref:System.Attribute> array to the attributes in the <xref:System.ComponentModel.MemberDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventDescriptor (string name, Attribute[] attrs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string name, class System.Attribute[] attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (name As String, attrs As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventDescriptor(System::String ^ name, cli::array &lt;Attribute ^&gt; ^ attrs);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.EventDescriptor : string * Attribute[] -&gt; System.ComponentModel.EventDescriptor" Usage="new System.ComponentModel.EventDescriptor (name, attrs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attrs" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f2b6b-121">Nazwa zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b6b-121">The name of the event.</span>
          </span>
        </param>
        <param name="attrs">
          <span data-ttu-id="f2b6b-122">Tablica typu <see cref="T:System.Attribute" /> zawierający atrybuty zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b6b-122">An array of type <see cref="T:System.Attribute" /> that contains the event attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b6b-123">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.EventDescriptor" /> klasy przy użyciu określonej nazwy i atrybut tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b6b-123">Initializes a new instance of the <see cref="T:System.ComponentModel.EventDescriptor" /> class with the specified name and attribute array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEventHandler">
      <MemberSignature Language="C#" Value="public abstract void AddEventHandler (object component, Delegate value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddEventHandler(object component, class System.Delegate value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AddEventHandler (component As Object, value As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddEventHandler(System::Object ^ component, Delegate ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddEventHandler : obj * Delegate -&gt; unit" Usage="eventDescriptor.AddEventHandler (component, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="value" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="f2b6b-124">Składnik, który zawiera zdarzenia delegata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b6b-124">A component that provides events to the delegate.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f2b6b-125">Delegat, który reprezentuje metodę, która obsługuje zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b6b-125">A delegate that represents the method that handles the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b6b-126">W przypadku przesłonięcia w klasie pochodnej, wiąże zdarzenia do składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b6b-126">When overridden in a derived class, binds the event to the component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2b6b-127">Zazwyczaj ta metoda jest implementowana przy użyciu odbicia.</span><span class="sxs-lookup"><span data-stu-id="f2b6b-127">Typically, this method is implemented through reflection.</span></span> <span data-ttu-id="f2b6b-128">Aby uzyskać więcej informacji dotyczących odbicia, zobacz Tematy w [odbicia](~/docs/framework/reflection-and-codedom/reflection.md).</span><span class="sxs-lookup"><span data-stu-id="f2b6b-128">For more information about reflection, see the topics in [Reflection](~/docs/framework/reflection-and-codedom/reflection.md).</span></span>  
  
 <span data-ttu-id="f2b6b-129">Aby uzyskać więcej informacji na temat obiektów delegowanych, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="f2b6b-129">For more information about delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="f2b6b-130">
            <para>Gdy zastąpienie tej metody jej należy dodać delegata do listy zdarzeń elementu przez wywołanie odpowiedniej <c>add_myHandler</c> metody.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b6b-130">
              <para>When you override this method, it should add the delegate to the component's event list by invoking the appropriate <c>add_myHandler</c> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="ComponentType">
      <MemberSignature Language="C#" Value="public abstract Type ComponentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ComponentType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.EventDescriptor.ComponentType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ComponentType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ComponentType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ComponentType : Type" Usage="System.ComponentModel.EventDescriptor.ComponentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b6b-131">W przypadku przesłonięcia w klasie pochodnej pobiera typ składnika, który to zdarzenie jest powiązany z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b6b-131">When overridden in a derived class, gets the type of component this event is bound to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2b6b-132">A <see cref="T:System.Type" /> reprezentujący typ zdarzenia jest powiązany z składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b6b-132">A <see cref="T:System.Type" /> that represents the type of component the event is bound to.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2b6b-133">Zazwyczaj ta właściwość jest implementowany przy użyciu odbicia.</span><span class="sxs-lookup"><span data-stu-id="f2b6b-133">Typically, this property is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.EventDescriptor.EventType" />
        <altmember cref="P:System.ComponentModel.EventDescriptor.IsMulticast" />
      </Docs>
    </Member>
    <Member MemberName="EventType">
      <MemberSignature Language="C#" Value="public abstract Type EventType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type EventType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.EventDescriptor.EventType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property EventType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ EventType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EventType : Type" Usage="System.ComponentModel.EventDescriptor.EventType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b6b-134">Po przesłonięciu w klasie pochodnej pobiera typ delegata zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b6b-134">When overridden in a derived class, gets the type of delegate for the event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2b6b-135">A <see cref="T:System.Type" /> reprezentujący typ delegata zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b6b-135">A <see cref="T:System.Type" /> that represents the type of delegate for the event.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2b6b-136">Zazwyczaj ta właściwość jest implementowany przy użyciu odbicia.</span><span class="sxs-lookup"><span data-stu-id="f2b6b-136">Typically, this property is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.EventDescriptor.ComponentType" />
        <altmember cref="P:System.ComponentModel.EventDescriptor.IsMulticast" />
      </Docs>
    </Member>
    <Member MemberName="IsMulticast">
      <MemberSignature Language="C#" Value="public abstract bool IsMulticast { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMulticast" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.EventDescriptor.IsMulticast" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsMulticast As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsMulticast { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMulticast : bool" Usage="System.ComponentModel.EventDescriptor.IsMulticast" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2b6b-137">W przypadku przesłonięcia w klasie pochodnej pobiera wartość wskazującą, czy delegata zdarzenia jest delegat multiemisji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b6b-137">When overridden in a derived class, gets a value indicating whether the event delegate is a multicast delegate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2b6b-138">
            <see langword="true" /> Jeśli delegat zdarzenia jest multiemisji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b6b-138">
              <see langword="true" /> if the event delegate is multicast; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2b6b-139">Zazwyczaj ta właściwość jest implementowany przy użyciu odbicia.</span><span class="sxs-lookup"><span data-stu-id="f2b6b-139">Typically, this property is implemented through reflection.</span></span>  
  
 <span data-ttu-id="f2b6b-140">Delegatów multiemisji różni się od regularnych delegata, w tym może zawierać odwołania do więcej niż tylko jednej metody.</span><span class="sxs-lookup"><span data-stu-id="f2b6b-140">A multicast delegate differs from a regular delegate in that it can contain references to more than just one method.</span></span> <span data-ttu-id="f2b6b-141">Metody multiemisji delegat są wykonywane synchronicznie, gdy obiekt delegowany jest wywoływany w kolejności, w jakiej są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="f2b6b-141">Methods in a multicast delegate are executed synchronously when the delegate is invoked, in the order in which they appear.</span></span> <span data-ttu-id="f2b6b-142">Jeśli jednej z metod o nazwie zgłasza wyjątek, delegat wygasa, a wyjątek jest propagowany do obiektu wywołującego delegata.</span><span class="sxs-lookup"><span data-stu-id="f2b6b-142">If one of the called methods raises an exception, then the delegate ceases and the exception is propagated to the delegate caller.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.EventDescriptor.EventType" />
        <altmember cref="P:System.ComponentModel.EventDescriptor.ComponentType" />
      </Docs>
    </Member>
    <Member MemberName="RemoveEventHandler">
      <MemberSignature Language="C#" Value="public abstract void RemoveEventHandler (object component, Delegate value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveEventHandler(object component, class System.Delegate value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveEventHandler (component As Object, value As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveEventHandler(System::Object ^ component, Delegate ^ value);" />
      <MemberSignature Language="F#" Value="abstract member RemoveEventHandler : obj * Delegate -&gt; unit" Usage="eventDescriptor.RemoveEventHandler (component, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="value" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="f2b6b-143">Składnik, który delegata jest powiązany z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b6b-143">The component that the delegate is bound to.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f2b6b-144">Delegat usunąć powiązanie ze składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b6b-144">The delegate to unbind from the component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2b6b-145">W przypadku przesłonięcia w klasie pochodnej, Rozpina delegata ze składnika, aby delegat nie będzie już otrzymywać zdarzenia ze składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b6b-145">When overridden in a derived class, unbinds the delegate from the component so that the delegate will no longer receive events from the component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2b6b-146">Zazwyczaj ta metoda jest implementowana przy użyciu odbicia.</span><span class="sxs-lookup"><span data-stu-id="f2b6b-146">Typically, this method is implemented through reflection.</span></span> <span data-ttu-id="f2b6b-147">Aby uzyskać więcej informacji, zobacz Tematy w [odbicia](~/docs/framework/reflection-and-codedom/reflection.md).</span><span class="sxs-lookup"><span data-stu-id="f2b6b-147">For more information, see the topics in [Reflection](~/docs/framework/reflection-and-codedom/reflection.md).</span></span>  
  
 <span data-ttu-id="f2b6b-148">Aby uzyskać więcej informacji na temat obiektów delegowanych, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="f2b6b-148">For more information about delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="f2b6b-149">
            <para>Gdy zastąpienie tej metody jej należy usunąć delegata z listy zdarzeń elementu przez wywołanie odpowiedniej <c>remove_myHandler</c> metody.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2b6b-149">
              <para>When you override this method, it should remove the delegate from the component's event list by invoking the appropriate <c>remove_myHandler</c> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)" />
      </Docs>
    </Member>
  </Members>
</Type>