<Type Name="AsyncCompletedEventHandler" FullName="System.ComponentModel.AsyncCompletedEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="344a8cdc3c68ead566ccc404bbd4a2419f8ead86" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void AsyncCompletedEventHandler(object sender, AsyncCompletedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed AsyncCompletedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AsyncCompletedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub AsyncCompletedEventHandler(sender As Object, e As AsyncCompletedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void AsyncCompletedEventHandler(System::Object ^ sender, AsyncCompletedEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="47957-101">Źródło zdarzenia.</span>
      <span class="sxs-lookup">
        <span data-stu-id="47957-101">The source of the event.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="47957-102">
        <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> Zawierający dane zdarzenia.</span>
      <span class="sxs-lookup">
        <span data-stu-id="47957-102">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> that contains the event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="47957-103">Reprezentuje metodę, która będzie obsługiwać *MethodName* <see langword="Completed" /> zdarzenia operacji asynchronicznej.</span>
      <span class="sxs-lookup">
        <span data-stu-id="47957-103">Represents the method that will handle the *MethodName*<see langword="Completed" /> event of an asynchronous operation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47957-104">Po utworzeniu <xref:System.ComponentModel.AsyncCompletedEventHandler> delegata, należy określić metodę, która obsłuży zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="47957-104">When you create an <xref:System.ComponentModel.AsyncCompletedEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="47957-105">Aby skojarzyć zdarzenie z obsługi zdarzenia, należy dodać wystąpienia delegata zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="47957-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="47957-106">Metoda obsługi zdarzeń jest wywoływana, gdy wystąpi zdarzenie, o ile nie usuniesz delegata.</span><span class="sxs-lookup"><span data-stu-id="47957-106">The event-handler method is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="47957-107">Aby uzyskać więcej informacji na temat delegatów obsługi zdarzeń, zobacz [NIB: zdarzenia i delegatów](http://msdn.microsoft.com/library/d98fd58b-fa4f-4598-8378-addf4355a115).</span><span class="sxs-lookup"><span data-stu-id="47957-107">For more information about event-handler delegates, see [NIB: Events and Delegates](http://msdn.microsoft.com/library/d98fd58b-fa4f-4598-8378-addf4355a115).</span></span>  
  
 <span data-ttu-id="47957-108">Dla metody asynchronicznej o nazwie *MethodName*, w składniku, będzie mieć odpowiednią *MethodName* `Completed` zdarzeń i opcjonalne *MethodName* `CompletedEventArgs` klasy.</span><span class="sxs-lookup"><span data-stu-id="47957-108">For an asynchronous method, called *MethodName*, in your component, you will have a corresponding *MethodName*`Completed` event, and an optional *MethodName*`CompletedEventArgs` class.</span></span>  
  
 <span data-ttu-id="47957-109">Składnika, który obsługuje wiele równoczesnych wywołań metod asynchronicznych klient może dostarczać unikatowy tokenu lub identyfikator zadania, aby odróżnić zadania asynchroniczne jest wywoływanie zdarzeń konkretnego.</span><span class="sxs-lookup"><span data-stu-id="47957-109">For a component that supports multiple concurrent invocations of its asynchronous methods, the client can supply a unique token, or task ID, to distinguish which asynchronous task is raising particular events.</span></span> <span data-ttu-id="47957-110">Klienta <xref:System.ComponentModel.AsyncCompletedEventHandler> może odczytywać <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A?displayProperty=nameWithType> właściwości w celu określenia, które zadanie to jest raportowanie ukończenia.</span><span class="sxs-lookup"><span data-stu-id="47957-110">The client's <xref:System.ComponentModel.AsyncCompletedEventHandler> can read the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A?displayProperty=nameWithType> property to determine which task is reporting completion.</span></span> <span data-ttu-id="47957-111">Należy użyć implementacji <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> utworzyć <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> który kojarzy klienta zadań identyfikatory z oczekujących zadań asynchronicznych.</span><span class="sxs-lookup"><span data-stu-id="47957-111">Your implementation should use the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> to create an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> that associates the client's task IDs with pending asynchronous tasks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47957-112">Przykład kodu <xref:System.ComponentModel.AsyncCompletedEventHandler> delegować, zapoznaj się z przykładem w <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> klasy.</span><span class="sxs-lookup"><span data-stu-id="47957-112">For a code example of the <xref:System.ComponentModel.AsyncCompletedEventHandler> delegate, see the example in the <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.AsyncCompletedEventArgs" />
    <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
    <altmember cref="T:System.ComponentModel.AsyncOperation" />
  </Docs>
</Type>