<Type Name="AsyncCompletedEventHandler" FullName="System.ComponentModel.AsyncCompletedEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4cbcf956b31b59ea60a4db449f2f1d6d9aec6137" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36705008" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void AsyncCompletedEventHandler(object sender, AsyncCompletedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed AsyncCompletedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AsyncCompletedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub AsyncCompletedEventHandler(sender As Object, e As AsyncCompletedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void AsyncCompletedEventHandler(System::Object ^ sender, AsyncCompletedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type AsyncCompletedEventHandler = delegate of obj * AsyncCompletedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Źródło zdarzenia.</param>
    <param name="e">
      <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> Zawierający dane zdarzenia.</param>
    <summary>Reprezentuje metodę, która będzie obsługiwać * MethodName *<see langword="Completed" /> zdarzenia operacji asynchronicznej.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po utworzeniu <xref:System.ComponentModel.AsyncCompletedEventHandler> delegata, należy określić metodę, która obsłuży zdarzenie. Aby skojarzyć zdarzenie z obsługi zdarzenia, należy dodać wystąpienia delegata zdarzenia. Metoda obsługi zdarzeń jest wywoływana, gdy wystąpi zdarzenie, o ile nie usuniesz delegata. Aby uzyskać więcej informacji na temat delegatów obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 Dla metody asynchronicznej o nazwie *MethodName*, w składniku, będzie mieć odpowiednią *MethodName* `Completed` zdarzeń i opcjonalne *MethodName* `CompletedEventArgs` klasy.  
  
 Składnika, który obsługuje wiele równoczesnych wywołań metod asynchronicznych klient może dostarczać unikatowy tokenu lub identyfikator zadania, aby odróżnić zadania asynchroniczne jest wywoływanie zdarzeń konkretnego. Klienta <xref:System.ComponentModel.AsyncCompletedEventHandler> może odczytywać <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A?displayProperty=nameWithType> właściwości w celu określenia, które zadanie to jest raportowanie ukończenia. Należy użyć implementacji <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> utworzyć <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> który kojarzy klienta zadań identyfikatory z oczekujących zadań asynchronicznych.  
  
   
  
## Examples  
 Przykład kodu <xref:System.ComponentModel.AsyncCompletedEventHandler> delegować, zapoznaj się z przykładem w <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> klasy.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.AsyncCompletedEventArgs" />
    <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
    <altmember cref="T:System.ComponentModel.AsyncOperation" />
  </Docs>
</Type>