<Type Name="AsyncCompletedEventHandler" FullName="System.ComponentModel.AsyncCompletedEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8926c25d5885e551c39cf48c15972786f744ea0e" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69348255" /></Metadata><TypeSignature Language="C#" Value="public delegate void AsyncCompletedEventHandler(object sender, AsyncCompletedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed AsyncCompletedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AsyncCompletedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub AsyncCompletedEventHandler(sender As Object, e As AsyncCompletedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void AsyncCompletedEventHandler(System::Object ^ sender, AsyncCompletedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type AsyncCompletedEventHandler = delegate of obj * AsyncCompletedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="3beb8-101">Źródło zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="3beb8-101">The source of the event.</span></span></param>
    <param name="e"><span data-ttu-id="3beb8-102"><see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="3beb8-102">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> that contains the event data.</span></span></param>
    <summary><span data-ttu-id="3beb8-103">Reprezentuje metodę, która będzie obsługiwać zdarzenie *MethodName* <see langword="Completed" /> operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="3beb8-103">Represents the method that will handle the *MethodName*<see langword="Completed" /> event of an asynchronous operation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3beb8-104">Podczas tworzenia <xref:System.ComponentModel.AsyncCompletedEventHandler> delegata należy określić metodę, która będzie obsługiwać zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="3beb8-104">When you create an <xref:System.ComponentModel.AsyncCompletedEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="3beb8-105">Aby skojarzyć zdarzenie z programem obsługi zdarzeń, Dodaj wystąpienie delegata do zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="3beb8-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="3beb8-106">Metoda obsługi zdarzeń jest wywoływana za każdym razem, gdy wystąpi zdarzenie, chyba że zostanie usunięty delegat.</span><span class="sxs-lookup"><span data-stu-id="3beb8-106">The event-handler method is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="3beb8-107">Aby uzyskać więcej informacji na temat delegatów obsługi zdarzeń, zobacz temat [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="3beb8-107">For more information about event-handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3beb8-108">Dla metody asynchronicznej o nazwie *MethodName*w składniku użytkownik będzie miał odpowiednie zdarzenie *MethodName* `Completed` i opcjonalną klasę *MethodName* `CompletedEventArgs` .</span><span class="sxs-lookup"><span data-stu-id="3beb8-108">For an asynchronous method, called *MethodName*, in your component, you will have a corresponding *MethodName*`Completed` event, and an optional *MethodName*`CompletedEventArgs` class.</span></span>  
  
 <span data-ttu-id="3beb8-109">W przypadku składnika, który obsługuje wiele współbieżnych wywołań metod asynchronicznych, klient może dostarczyć unikatowy token lub identyfikator zadania, aby odróżnić zadanie asynchroniczne do podniesienia określonych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="3beb8-109">For a component that supports multiple concurrent invocations of its asynchronous methods, the client can supply a unique token, or task ID, to distinguish which asynchronous task is raising particular events.</span></span> <span data-ttu-id="3beb8-110">Klient <xref:System.ComponentModel.AsyncCompletedEventHandler> może<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A?displayProperty=nameWithType> odczytać właściwość, aby określić, które zadanie jest ukończone.</span><span class="sxs-lookup"><span data-stu-id="3beb8-110">The client's <xref:System.ComponentModel.AsyncCompletedEventHandler> can read the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A?displayProperty=nameWithType> property to determine which task is reporting completion.</span></span> <span data-ttu-id="3beb8-111">Twoja implementacja powinna używać programu <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> , aby <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> utworzyć skojarzenie identyfikatorów zadań klienta z oczekującymi zadaniami asynchronicznymi.</span><span class="sxs-lookup"><span data-stu-id="3beb8-111">Your implementation should use the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> to create an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> that associates the client's task IDs with pending asynchronous tasks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3beb8-112">Przykładowy <xref:System.ComponentModel.AsyncCompletedEventHandler> kod delegata zawiera przykład <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> w klasie.</span><span class="sxs-lookup"><span data-stu-id="3beb8-112">For a code example of the <xref:System.ComponentModel.AsyncCompletedEventHandler> delegate, see the example in the <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.AsyncCompletedEventArgs" />
    <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
    <altmember cref="T:System.ComponentModel.AsyncOperation" />
    <related type="Article" href="https://msdn.microsoft.com/library/792aa8da-918b-458e-b154-9836b97735f3"><span data-ttu-id="3beb8-113">Wzorzec asynchroniczny dla składników</span><span class="sxs-lookup"><span data-stu-id="3beb8-113">Asynchronous Pattern for Components</span></span></related>
  </Docs>
</Type>
