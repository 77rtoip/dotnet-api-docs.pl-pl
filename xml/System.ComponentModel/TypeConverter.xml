<Type Name="TypeConverter" FullName="System.ComponentModel.TypeConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5f481b34feb6da5934d7304387e22b436d3287b0" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69381109" /></Metadata><TypeSignature Language="C#" Value="public class TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeConverter" />
  <TypeSignature Language="F#" Value="type TypeConverter = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5bcba-101">Zapewnia jednolity sposób konwersji typów wartości na inne typy, a także do uzyskiwania dostępu do standardowych wartości i podwłaściwości.</span><span class="sxs-lookup"><span data-stu-id="5bcba-101">Provides a unified way of converting types of values to other types, as well as for accessing standard values and subproperties.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bcba-102">Typowym typem konwertera jest jeden, który konwertuje do i z reprezentacji tekstowej.</span><span class="sxs-lookup"><span data-stu-id="5bcba-102">The most common type of converter is one that converts to and from a text representation.</span></span> <span data-ttu-id="5bcba-103">Konwerter typu dla klasy jest powiązany z klasą z <xref:System.ComponentModel.TypeConverterAttribute>.</span><span class="sxs-lookup"><span data-stu-id="5bcba-103">The type converter for a class is bound to the class with a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="5bcba-104">Jeśli ten atrybut nie zostanie przesłonięty, wszystkie klasy dziedziczące z tej klasy używają tego samego konwertera typów, który jest klasą bazową.</span><span class="sxs-lookup"><span data-stu-id="5bcba-104">Unless this attribute is overridden, all classes that inherit from this class use the same type converter as the base class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5bcba-105">W przypadku typów ogólnych nie należy bezpośrednio uzyskiwać dostępu do konwertera typów.</span><span class="sxs-lookup"><span data-stu-id="5bcba-105">For general type system purposes, do not access a type converter directly.</span></span> <span data-ttu-id="5bcba-106">Zamiast tego należy uzyskać dostęp do odpowiedniego konwertera przy użyciu polecenia <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="5bcba-106">Instead, access the appropriate converter by using <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="5bcba-107">Aby uzyskać więcej informacji, zobacz przykłady kodu podane poniżej.</span><span class="sxs-lookup"><span data-stu-id="5bcba-107">For more information, see the code examples provided.</span></span> 
>
> <span data-ttu-id="5bcba-108">Jednak podczas korzystania z języka XAML procesor XAML wyszukuje <xref:System.ComponentModel.TypeConverterAttribute> bezpośrednio, zamiast przechodzić przez. <xref:System.ComponentModel.TypeDescriptor></span><span class="sxs-lookup"><span data-stu-id="5bcba-108">However, when using XAML, a XAML processor searches for the <xref:System.ComponentModel.TypeConverterAttribute> directly, instead of going through <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="5bcba-109">W przypadkach, w których należy <xref:System.ComponentModel.TypeDescriptor> utworzyć wystąpienie z kodu lub w przypadku tworzenia wystąpienia udostępnionego w zasobach WPF, można je skonstruować bezpośrednio bez odwoływania <xref:System.ComponentModel.TypeDescriptor> się lub innej obsługi odbicia i typu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-109">For cases where you do want a <xref:System.ComponentModel.TypeDescriptor> instance from code, or where you create a shared instance in WPF resources, it is acceptable to construct it directly without referencing <xref:System.ComponentModel.TypeDescriptor> or other reflection and type system support.</span></span>  
  
 <span data-ttu-id="5bcba-110">Klasy pochodne <xref:System.ComponentModel.TypeConverter> są często przywoływane w sposób, w jaki procesor XAML konwertuje atrybut lub wartość tekstu inicjującego z znacznika (który jest z siebie ciągiem) i generuje obiekt dla reprezentacji w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="5bcba-110">Classes derived from <xref:System.ComponentModel.TypeConverter> are often referenced as part of how a XAML processor converts an attribute or initialization text value from markup (which is inherently a string) and generates an object for a run-time representation.</span></span> <span data-ttu-id="5bcba-111">Autorzy typów niestandardowych, którzy zamierzają obsługiwać zachowanie konwersji typu dla języka XAML zwykle <xref:System.ComponentModel.TypeConverter> implementują klasę, która obsługuje `ConvertFrom` własne zachowanie w ciągu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-111">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports their own unique `ConvertFrom` behavior from a string.</span></span> <span data-ttu-id="5bcba-112">Takie zachowanie umożliwia konwersję typu z ciągu podanego jako wartość atrybutu XAML i udostępnia procesor XAML z obsługą, która jest wymagana do utworzenia obiektu z ciągu, tak aby obiekt można było utworzyć w analizowanym grafie obiektów.</span><span class="sxs-lookup"><span data-stu-id="5bcba-112">This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.</span></span> <span data-ttu-id="5bcba-113">Typy niestandardowe lub składowe typów niestandardowych są wskazywane przez <xref:System.ComponentModel.TypeConverterAttribute> zastosowanie do definicji, z atrybutem odwołującym <xref:System.ComponentModel.TypeConverter> się do implementacji niestandardowej.</span><span class="sxs-lookup"><span data-stu-id="5bcba-113">Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.</span></span> <span data-ttu-id="5bcba-114">Aby uzyskać więcej informacji, zobacz [Typy konwerterów dla języka XAML — Omówienie](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5bcba-114">For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5bcba-115">Poniższy przykład kodu pokazuje, jak utworzyć wystąpienie konwertera typów i powiązać je z klasą.</span><span class="sxs-lookup"><span data-stu-id="5bcba-115">The following code example shows how to create an instance of a type converter and bind it to a class.</span></span> <span data-ttu-id="5bcba-116">Klasa implementująca konwerter, `MyClassConverter`musi dziedziczyć <xref:System.ComponentModel.TypeConverter> po klasie.</span><span class="sxs-lookup"><span data-stu-id="5bcba-116">The class implementing the converter, `MyClassConverter`, must inherit from the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TypeConverter Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#1)]
 [!code-vb[Classic TypeConverter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#1)]  
  
 <span data-ttu-id="5bcba-117">Jeśli masz właściwość, która ma Wyliczenie, sprawdź, czy wartość wyliczenia jest prawidłowa przed ustawieniem właściwości.</span><span class="sxs-lookup"><span data-stu-id="5bcba-117">When you have a property that has an enumeration, check to see whether an enumeration value is valid before setting the property.</span></span> <span data-ttu-id="5bcba-118">Następny przykład kodu wymaga zadeklarowania wyliczeniowego `MyPropertyEnum` .</span><span class="sxs-lookup"><span data-stu-id="5bcba-118">The next code example requires that an enumeration called `MyPropertyEnum` has been declared.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#2)]
 [!code-csharp[Classic TypeConverter Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#2)]
 [!code-vb[Classic TypeConverter Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#2)]  
  
 <span data-ttu-id="5bcba-119">Innym typowym użyciem konwertera typów jest konwertowanie obiektu na ciąg.</span><span class="sxs-lookup"><span data-stu-id="5bcba-119">Another common type converter usage is to convert an object to a string.</span></span> <span data-ttu-id="5bcba-120">Poniższy przykład kodu drukuje nazwę <xref:System.Drawing.Color> przechowywaną w zmiennej. `c`</span><span class="sxs-lookup"><span data-stu-id="5bcba-120">The following code example prints out the name of the <xref:System.Drawing.Color> stored in the variable `c`.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#3)]
 [!code-csharp[Classic TypeConverter Example#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#3)]
 [!code-vb[Classic TypeConverter Example#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#3)]  
  
 <span data-ttu-id="5bcba-121">Można również użyć konwertera typów, aby przekonwertować wartość z jej nazwy, jak pokazano w następnym przykładzie kodu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-121">You can also use a type converter to convert a value from its name, as shown in the next code example.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#4](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#4)]
 [!code-csharp[Classic TypeConverter Example#4](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#4)]
 [!code-vb[Classic TypeConverter Example#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#4)]  
  
 <span data-ttu-id="5bcba-122">W poniższym przykładzie kodu można użyć konwertera typów do drukowania zestawu wartości standardowych obsługiwanych przez obiekt.</span><span class="sxs-lookup"><span data-stu-id="5bcba-122">In the following code example, you can use a type converter to print out the set of standard values that the object supports.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#5](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#5)]
 [!code-csharp[Classic TypeConverter Example#5](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#5)]
 [!code-vb[Classic TypeConverter Example#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#5)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="5bcba-123">Dziedzicz po <see cref="T:System.ComponentModel.TypeConverter" /> , aby zaimplementować własne wymagania dotyczące konwersji.</span><span class="sxs-lookup"><span data-stu-id="5bcba-123">Inherit from <see cref="T:System.ComponentModel.TypeConverter" /> to implement your own conversion requirements.</span></span> <span data-ttu-id="5bcba-124">W przypadku dziedziczenia z tej klasy można przesłonić następujące metody:</span><span class="sxs-lookup"><span data-stu-id="5bcba-124">When you inherit from this class, you can override the following methods:</span></span> 
<span data-ttu-id="5bcba-125">-Aby obsługiwać konwersję typu niestandardowego <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />, Zastąp metody <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />, <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" /> i.</span><span class="sxs-lookup"><span data-stu-id="5bcba-125">-   To support custom type conversion, override the <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />, and <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" /> methods.</span></span>  
  
<span data-ttu-id="5bcba-126">— Aby przekonwertować typy, które muszą ponownie utworzyć obiekt, aby zmienić jego wartość, Zastąp <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> metody <see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" /> i.</span><span class="sxs-lookup"><span data-stu-id="5bcba-126">-   To convert types that must re-create the object to change its value, override the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> and <see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" /> methods.</span></span>  
  
<span data-ttu-id="5bcba-127">— Aby skonwertować typy, które obsługują właściwości, <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" /> Zastąp <see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" /> metody i.</span><span class="sxs-lookup"><span data-stu-id="5bcba-127">-   To convert types that support properties, override the <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" /> and <see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" /> methods.</span></span> <span data-ttu-id="5bcba-128">Jeśli konwertowana Klasa nie ma właściwości i musisz zaimplementować właściwości, można użyć <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> klasy jako podstawy do implementowania deskryptorów właściwości.</span><span class="sxs-lookup"><span data-stu-id="5bcba-128">If the class you are converting does not have properties, and you need to implement properties, you can use the <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> class as a base for implementing the property descriptors.</span></span> <span data-ttu-id="5bcba-129">W przypadku dziedziczenia <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />z, należy <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> zastąpić metody i <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> .</span><span class="sxs-lookup"><span data-stu-id="5bcba-129">When you inherit from <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />, you must override the <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> and <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> methods.</span></span>  
  
<span data-ttu-id="5bcba-130">— Aby skonwertować typy, które obsługują wartości standardowe <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />, Zastąp <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />metody <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" /> , <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> i.</span><span class="sxs-lookup"><span data-stu-id="5bcba-130">-   To convert types that support standard values, override the <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" /> and <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> methods.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="5bcba-131">Typ pochodny może być oznaczony jako <see langword="internal" /> lub <see langword="private" />, ale wystąpienie typu <see cref="T:System.ComponentModel.TypeDescriptor" /> można utworzyć za pomocą klasy.</span><span class="sxs-lookup"><span data-stu-id="5bcba-131">Your derived type might be marked as <see langword="internal" /> or <see langword="private" />, but an instance of your type can be created with the <see cref="T:System.ComponentModel.TypeDescriptor" /> class.</span></span> <span data-ttu-id="5bcba-132">Nie zapisuj niezabezpieczonego kodu przez założenie, że obiekt wywołujący jest zaufany.</span><span class="sxs-lookup"><span data-stu-id="5bcba-132">Do not write insecure code by assuming the caller is trusted.</span></span> <span data-ttu-id="5bcba-133">Załóżmy zamiast tego, że obiekty wywołujące mogą tworzyć wystąpienia typu w częściowej relacji zaufania.</span><span class="sxs-lookup"><span data-stu-id="5bcba-133">Assume instead that callers might create instances of your type in partial trust.</span></span>  
  
</para></block>  
  
 <span data-ttu-id="5bcba-134">Aby uzyskać więcej informacji na temat konwerterów typów ogólnych (innych niż XAML), [zobacz How to: Implementowanie konwertera](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)) typów lub [konwersji typów uogólnionych](https://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada).</span><span class="sxs-lookup"><span data-stu-id="5bcba-134">For more information about type converters for general (non-XAML) purposes, see [How to: Implement a Type Converter](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)) or [Generalized Type Conversion](https://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada).</span></span></para></block>
    <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
    <altmember cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />
    <altmember cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
    <related type="Article" href="https://msdn.microsoft.com/library/51a65860-efcb-4fe0-95a0-1c679cde66b7"><span data-ttu-id="5bcba-135">Typy konwerterów dla XAML — Omówienie</span><span class="sxs-lookup"><span data-stu-id="5bcba-135">Type Converters for XAML Overview</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/5dfb299a-b6e2-41b8-8694-e6ac987547f1"><span data-ttu-id="5bcba-136">Atrybuty CLR związane z językiem XAML dla niestandardowych typów i bibliotek</span><span class="sxs-lookup"><span data-stu-id="5bcba-136">XAML-Related CLR Attributes For Custom Types and Libraries</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/c2667cbd-2f46-4a7f-9dfc-53696e35e8e4"><span data-ttu-id="5bcba-137">Definiowanie typów niestandardowych do użytku z usługami .NET Framework XAML</span><span class="sxs-lookup"><span data-stu-id="5bcba-137">Defining Custom Types for Use with .NET Framework XAML Services</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/0e11f386-808c-4eae-9ba6-029ad7ba2211"><span data-ttu-id="5bcba-138">Dokumentacja dotycząca pojęć dotyczących usługi NET XAML</span><span class="sxs-lookup"><span data-stu-id="5bcba-138">NET XAML Services Conceptual Documentation</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5bcba-139">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.TypeConverter" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="5bcba-139">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvertFrom">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5bcba-140">Zwraca czy ten konwerter może skonwertować obiekt jednego typu na typ tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="5bcba-140">Returns whether this converter can convert an object of one type to the type of this converter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public bool CanConvertFrom (Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConvertFrom(class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConvertFrom (sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConvertFrom(Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="member this.CanConvertFrom : Type -&gt; bool" Usage="typeConverter.CanConvertFrom sourceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="sourceType"><span data-ttu-id="5bcba-141"><see cref="T:System.Type" /> Reprezentuje typ, z którego ma zostać przeprowadzona konwersja.</span><span class="sxs-lookup"><span data-stu-id="5bcba-141">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span></span></param>
        <summary><span data-ttu-id="5bcba-142">Zwraca czy ten konwerter może skonwertować obiekt danego typu na typ tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="5bcba-142">Returns whether this converter can convert an object of the given type to the type of this converter.</span></span></summary>
        <returns><span data-ttu-id="5bcba-143"><see langword="true" />Jeśli ten konwerter może wykonać konwersję; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="5bcba-143"><see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bcba-144">Zgodnie z zaimplementowaną w tej klasie Metoda ta `false`zawsze zwraca wartość.</span><span class="sxs-lookup"><span data-stu-id="5bcba-144">As implemented in this class, this method always returns `false`.</span></span> <span data-ttu-id="5bcba-145">Nigdy nie zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="5bcba-145">It never returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="typeConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="5bcba-146"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zawiera kontekst formatu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-146">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="sourceType"><span data-ttu-id="5bcba-147"><see cref="T:System.Type" /> Reprezentuje typ, z którego ma zostać przeprowadzona konwersja.</span><span class="sxs-lookup"><span data-stu-id="5bcba-147">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span></span></param>
        <summary><span data-ttu-id="5bcba-148">Zwraca czy ten konwerter może skonwertować obiekt danego typu na typ tego konwertera przy użyciu określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-148">Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="5bcba-149"><see langword="true" />Jeśli ten konwerter może wykonać konwersję; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="5bcba-149"><see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bcba-150">Zgodnie z zaimplementowaną w tej klasie Metoda `false`ta zwraca `sourceType` wartość, <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>chyba że jest to.</span><span class="sxs-lookup"><span data-stu-id="5bcba-150">As implemented in this class, this method returns `false`, unless `sourceType` is an <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="5bcba-151">Zastąp tę metodę, aby zapewnić własne wymagania dotyczące konwersji.</span><span class="sxs-lookup"><span data-stu-id="5bcba-151">Override this method to provide your own conversion requirements.</span></span>  
  
<span data-ttu-id="5bcba-152">Użyj parametru <paramref name="context" /> , aby wyodrębnić dodatkowe informacje o środowisku, z którego ten konwerter jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="5bcba-152">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="5bcba-153">Ten parametr może być <see langword="null" />, więc zawsze sprawdzaj.</span><span class="sxs-lookup"><span data-stu-id="5bcba-153">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="5bcba-154">Ponadto właściwości obiektu kontekstu mogą zwrócić <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5bcba-154">Also, properties on the context object can return <see langword="null" />.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvertTo">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5bcba-155">Zwraca czy ten konwerter może przekonwertować obiekt na określony typ.</span><span class="sxs-lookup"><span data-stu-id="5bcba-155">Returns whether this converter can convert the object to the specified type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public bool CanConvertTo (Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConvertTo(class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConvertTo (destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConvertTo(Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="member this.CanConvertTo : Type -&gt; bool" Usage="typeConverter.CanConvertTo destinationType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="destinationType"><span data-ttu-id="5bcba-156"><see cref="T:System.Type" /> Reprezentuje typ, do którego chcesz dokonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="5bcba-156">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span></span></param>
        <summary><span data-ttu-id="5bcba-157">Zwraca czy ten konwerter może przekonwertować obiekt na określony typ.</span><span class="sxs-lookup"><span data-stu-id="5bcba-157">Returns whether this converter can convert the object to the specified type.</span></span></summary>
        <returns><span data-ttu-id="5bcba-158"><see langword="true" />Jeśli ten konwerter może wykonać konwersję; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="5bcba-158"><see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bcba-159">Jeśli `destinationType` jest ciągiem, domyślna <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> implementacja zawsze zwraca wartość `true`.</span><span class="sxs-lookup"><span data-stu-id="5bcba-159">If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="typeConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="5bcba-160"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zawiera kontekst formatu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-160">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="destinationType"><span data-ttu-id="5bcba-161"><see cref="T:System.Type" /> Reprezentuje typ, do którego chcesz dokonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="5bcba-161">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span></span></param>
        <summary><span data-ttu-id="5bcba-162">Zwraca czy ten konwerter może przekonwertować obiekt na określony typ, przy użyciu określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-162">Returns whether this converter can convert the object to the specified type, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="5bcba-163"><see langword="true" />Jeśli ten konwerter może wykonać konwersję; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="5bcba-163"><see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bcba-164">Użyj parametru `context` , aby wyodrębnić dodatkowe informacje o środowisku, z którego ten konwerter jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="5bcba-164">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="5bcba-165">Ten parametr może być `null`, więc zawsze sprawdzaj.</span><span class="sxs-lookup"><span data-stu-id="5bcba-165">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="5bcba-166">Ponadto właściwości obiektu kontekstu mogą zwrócić `null`.</span><span class="sxs-lookup"><span data-stu-id="5bcba-166">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="5bcba-167">Jeśli `destinationType` jest ciągiem, domyślna <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> implementacja zawsze zwraca wartość `true`.</span><span class="sxs-lookup"><span data-stu-id="5bcba-167">If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="5bcba-168">Zastąp tę metodę, aby zapewnić własne wymagania dotyczące konwersji.</span><span class="sxs-lookup"><span data-stu-id="5bcba-168">Override this method to provide your own conversion requirements.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFrom">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5bcba-169">Konwertuje daną wartość na typ tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="5bcba-169">Converts the given value to the type of this converter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public object ConvertFrom (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFrom(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFrom (value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFrom(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertFrom : obj -&gt; obj" Usage="typeConverter.ConvertFrom value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5bcba-170"><see cref="T:System.Object" /> Do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="5bcba-170">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="5bcba-171">Konwertuje daną wartość na typ tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="5bcba-171">Converts the given value to the type of this converter.</span></span></summary>
        <returns><span data-ttu-id="5bcba-172"><see cref="T:System.Object" /> Reprezentuje przekonwertowaną wartość.</span><span class="sxs-lookup"><span data-stu-id="5bcba-172">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5bcba-173">Nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="5bcba-173">The conversion cannot be performed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public virtual object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="typeConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="5bcba-174"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zawiera kontekst formatu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-174">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="5bcba-175"><see cref="T:System.Globalization.CultureInfo" /> Do użycia jako bieżąca kultura.</span><span class="sxs-lookup"><span data-stu-id="5bcba-175">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</span></span></param>
        <param name="value"><span data-ttu-id="5bcba-176"><see cref="T:System.Object" /> Do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="5bcba-176">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="5bcba-177">Konwertuje dany obiekt na typ tego konwertera przy użyciu określonych informacji o kontekście i kulturze.</span><span class="sxs-lookup"><span data-stu-id="5bcba-177">Converts the given object to the type of this converter, using the specified context and culture information.</span></span></summary>
        <returns><span data-ttu-id="5bcba-178"><see cref="T:System.Object" /> Reprezentuje przekonwertowaną wartość.</span><span class="sxs-lookup"><span data-stu-id="5bcba-178">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bcba-179">Autorzy typów niestandardowych, którzy zamierzają obsługiwać zachowanie konwersji typu dla języka XAML zazwyczaj <xref:System.ComponentModel.TypeConverter> implementują klasę <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> , która obsługuje zachowanie z ciągu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-179">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string.</span></span> <span data-ttu-id="5bcba-180">Takie zachowanie umożliwia konwersję typu z ciągu podanego jako wartość atrybutu XAML i udostępnia procesor XAML z obsługą, która jest wymagana do utworzenia obiektu z ciągu, tak aby obiekt można było utworzyć w analizowanym grafie obiektów.</span><span class="sxs-lookup"><span data-stu-id="5bcba-180">This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.</span></span> <span data-ttu-id="5bcba-181">Typy niestandardowe lub składowe typów niestandardowych są wskazywane przez <xref:System.ComponentModel.TypeConverterAttribute> zastosowanie do definicji, z atrybutem odwołującym <xref:System.ComponentModel.TypeConverter> się do implementacji niestandardowej.</span><span class="sxs-lookup"><span data-stu-id="5bcba-181">Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.</span></span>  
  
 <span data-ttu-id="5bcba-182">Na potrzeby języka XAML zazwyczaj nie są stosowane implementacje rozgałęzienia oparte `culture`na systemie.</span><span class="sxs-lookup"><span data-stu-id="5bcba-182">For XAML purposes, you do not typically provide branching implementations based on `culture`.</span></span> <span data-ttu-id="5bcba-183">Dzieje się tak, ponieważ XAML jest wstępnie skompilowany w kontekście środowiska programistycznego i informacje specyficzne dla kultury dla języka XAML środowiska uruchomieniowego nie są istotne dla konwersji typu XAML.</span><span class="sxs-lookup"><span data-stu-id="5bcba-183">This is because XAML is precompiled in a development environment context, and culture-specific information for runtime XAML is not relevant for XAML type conversion.</span></span> <span data-ttu-id="5bcba-184">Aby uzyskać więcej informacji, zobacz [Typy konwerterów dla języka XAML — Omówienie](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5bcba-184">For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5bcba-185">Nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="5bcba-185">The conversion cannot be performed.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="5bcba-186">Zastąp tę metodę, aby zapewnić własne wymagania dotyczące konwersji.</span><span class="sxs-lookup"><span data-stu-id="5bcba-186">Override this method to provide your own conversion requirements.</span></span>  
  
<span data-ttu-id="5bcba-187">Użyj parametru <paramref name="context" /> , aby wyodrębnić dodatkowe informacje o środowisku, z którego ten konwerter jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="5bcba-187">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="5bcba-188">Ten parametr może być <see langword="null" />, więc zawsze sprawdzaj.</span><span class="sxs-lookup"><span data-stu-id="5bcba-188">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="5bcba-189">Ponadto właściwości obiektu kontekstu mogą zwrócić <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5bcba-189">Also, properties on the context object can return <see langword="null" />.</span></span>  
  
<span data-ttu-id="5bcba-190">Dla wzorców implementacji dla konwerterów typów, które są używane do obsługi języka XAML i typów niestandardowych, zobacz [konwertery typów dla języka XAML — Omówienie](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5bcba-190">For implementation patterns for type converters that are used to support XAML and custom types, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <related type="Article" href="https://msdn.microsoft.com/library/51a65860-efcb-4fe0-95a0-1c679cde66b7"><span data-ttu-id="5bcba-191">Typy konwerterów dla XAML — Omówienie</span><span class="sxs-lookup"><span data-stu-id="5bcba-191">Type Converters for XAML Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFromInvariantString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5bcba-192">Konwertuje wartość na typ tego konwertera przy użyciu niezmiennej kultury.</span><span class="sxs-lookup"><span data-stu-id="5bcba-192">Converts the value to a type of this converter, using the invariant culture.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFromInvariantString">
      <MemberSignature Language="C#" Value="public object ConvertFromInvariantString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromInvariantString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromInvariantString (text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromInvariantString(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromInvariantString : string -&gt; obj" Usage="typeConverter.ConvertFromInvariantString text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="5bcba-193"><see cref="T:System.String" /> Do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="5bcba-193">The <see cref="T:System.String" /> to convert.</span></span></param>
        <summary><span data-ttu-id="5bcba-194">Konwertuje dany ciąg na typ tego konwertera przy użyciu niezmiennej kultury.</span><span class="sxs-lookup"><span data-stu-id="5bcba-194">Converts the given string to the type of this converter, using the invariant culture.</span></span></summary>
        <returns><span data-ttu-id="5bcba-195"><see cref="T:System.Object" /> Reprezentuje przekonwertowany tekst.</span><span class="sxs-lookup"><span data-stu-id="5bcba-195">An <see cref="T:System.Object" /> that represents the converted text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bcba-196">Domyślna implementacja zawsze zwraca wartość `null`.</span><span class="sxs-lookup"><span data-stu-id="5bcba-196">The default implementation always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5bcba-197">Nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="5bcba-197">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromInvariantString">
      <MemberSignature Language="C#" Value="public object ConvertFromInvariantString (System.ComponentModel.ITypeDescriptorContext context, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromInvariantString(class System.ComponentModel.ITypeDescriptorContext context, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromInvariantString (context As ITypeDescriptorContext, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromInvariantString(System::ComponentModel::ITypeDescriptorContext ^ context, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromInvariantString : System.ComponentModel.ITypeDescriptorContext * string -&gt; obj" Usage="typeConverter.ConvertFromInvariantString (context, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="5bcba-198"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zawiera kontekst formatu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-198">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="text"><span data-ttu-id="5bcba-199"><see cref="T:System.String" /> Do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="5bcba-199">The <see cref="T:System.String" /> to convert.</span></span></param>
        <summary><span data-ttu-id="5bcba-200">Konwertuje dany ciąg na typ tego konwertera przy użyciu niezmiennej kultury i określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-200">Converts the given string to the type of this converter, using the invariant culture and the specified context.</span></span></summary>
        <returns><span data-ttu-id="5bcba-201"><see cref="T:System.Object" /> Reprezentuje przekonwertowany tekst.</span><span class="sxs-lookup"><span data-stu-id="5bcba-201">An <see cref="T:System.Object" /> that represents the converted text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bcba-202">Wyjątek jest zgłaszany, jeśli nie można przekonwertować ciągu na odpowiedni obiekt.</span><span class="sxs-lookup"><span data-stu-id="5bcba-202">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="5bcba-203">Domyślna implementacja zawsze zwraca wartość `null`.</span><span class="sxs-lookup"><span data-stu-id="5bcba-203">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="5bcba-204">Użyj parametru `context` , aby wyodrębnić dodatkowe informacje o środowisku, z którego ten konwerter jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="5bcba-204">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="5bcba-205">Ten parametr może być `null`, więc zawsze sprawdzaj.</span><span class="sxs-lookup"><span data-stu-id="5bcba-205">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="5bcba-206">Ponadto właściwości obiektu kontekstu mogą zwrócić `null`.</span><span class="sxs-lookup"><span data-stu-id="5bcba-206">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5bcba-207">Nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="5bcba-207">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFromString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5bcba-208">Konwertuje określony tekst na obiekt.</span><span class="sxs-lookup"><span data-stu-id="5bcba-208">Converts the specified text to an object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromString : string -&gt; obj" Usage="typeConverter.ConvertFromString text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="5bcba-209">Tekstowa reprezentacja obiektu do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="5bcba-209">The text representation of the object to convert.</span></span></param>
        <summary><span data-ttu-id="5bcba-210">Konwertuje określony tekst na obiekt.</span><span class="sxs-lookup"><span data-stu-id="5bcba-210">Converts the specified text to an object.</span></span></summary>
        <returns><span data-ttu-id="5bcba-211"><see cref="T:System.Object" /> Reprezentuje przekonwertowany tekst.</span><span class="sxs-lookup"><span data-stu-id="5bcba-211">An <see cref="T:System.Object" /> that represents the converted text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bcba-212">Domyślna implementacja zawsze zwraca wartość `null`.</span><span class="sxs-lookup"><span data-stu-id="5bcba-212">The default implementation always returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5bcba-213">Aby zapoznać się z przykładem tej funkcji, <xref:System.ComponentModel.TypeConverter> zobacz Klasa.</span><span class="sxs-lookup"><span data-stu-id="5bcba-213">For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5bcba-214">Nie można przekonwertować ciągu na odpowiedni obiekt.</span><span class="sxs-lookup"><span data-stu-id="5bcba-214">The string cannot be converted into the appropriate object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(class System.ComponentModel.ITypeDescriptorContext context, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (context As ITypeDescriptorContext, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::ComponentModel::ITypeDescriptorContext ^ context, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromString : System.ComponentModel.ITypeDescriptorContext * string -&gt; obj" Usage="typeConverter.ConvertFromString (context, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="5bcba-215"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zawiera kontekst formatu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-215">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="text"><span data-ttu-id="5bcba-216"><see cref="T:System.String" /> Do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="5bcba-216">The <see cref="T:System.String" /> to convert.</span></span></param>
        <summary><span data-ttu-id="5bcba-217">Konwertuje dany tekst do obiektu, przy użyciu określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-217">Converts the given text to an object, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="5bcba-218"><see cref="T:System.Object" /> Reprezentuje przekonwertowany tekst.</span><span class="sxs-lookup"><span data-stu-id="5bcba-218">An <see cref="T:System.Object" /> that represents the converted text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bcba-219">Wyjątek jest zgłaszany, jeśli nie można przekonwertować ciągu na odpowiedni obiekt.</span><span class="sxs-lookup"><span data-stu-id="5bcba-219">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="5bcba-220">Domyślna implementacja zawsze zwraca wartość `null`.</span><span class="sxs-lookup"><span data-stu-id="5bcba-220">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="5bcba-221">Użyj parametru `context` , aby wyodrębnić dodatkowe informacje o środowisku, z którego ten konwerter jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="5bcba-221">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="5bcba-222">Ten parametr może być `null`, więc zawsze sprawdzaj.</span><span class="sxs-lookup"><span data-stu-id="5bcba-222">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="5bcba-223">Ponadto właściwości obiektu kontekstu mogą zwrócić `null`.</span><span class="sxs-lookup"><span data-stu-id="5bcba-223">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5bcba-224">Nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="5bcba-224">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (context As ITypeDescriptorContext, culture As CultureInfo, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromString : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * string -&gt; obj" Usage="typeConverter.ConvertFromString (context, culture, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="5bcba-225"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zawiera kontekst formatu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-225">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="5bcba-226">A <see cref="T:System.Globalization.CultureInfo" />.</span><span class="sxs-lookup"><span data-stu-id="5bcba-226">A <see cref="T:System.Globalization.CultureInfo" />.</span></span> <span data-ttu-id="5bcba-227">Jeśli <see langword="null" /> jest zakończony, założono bieżącą kulturę.</span><span class="sxs-lookup"><span data-stu-id="5bcba-227">If <see langword="null" /> is passed, the current culture is assumed.</span></span></param>
        <param name="text"><span data-ttu-id="5bcba-228"><see cref="T:System.String" /> Do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="5bcba-228">The <see cref="T:System.String" /> to convert.</span></span></param>
        <summary><span data-ttu-id="5bcba-229">Konwertuje dany tekst do obiektu, przy użyciu określonych informacji o kontekście i kulturze.</span><span class="sxs-lookup"><span data-stu-id="5bcba-229">Converts the given text to an object, using the specified context and culture information.</span></span></summary>
        <returns><span data-ttu-id="5bcba-230"><see cref="T:System.Object" /> Reprezentuje przekonwertowany tekst.</span><span class="sxs-lookup"><span data-stu-id="5bcba-230">An <see cref="T:System.Object" /> that represents the converted text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bcba-231">Wyjątek jest zgłaszany, jeśli nie można przekonwertować ciągu na odpowiedni obiekt.</span><span class="sxs-lookup"><span data-stu-id="5bcba-231">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="5bcba-232">Domyślna implementacja zawsze zwraca wartość `null`.</span><span class="sxs-lookup"><span data-stu-id="5bcba-232">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="5bcba-233">Użyj parametru `context` , aby wyodrębnić dodatkowe informacje o środowisku, z którego ten konwerter jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="5bcba-233">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="5bcba-234">Ten parametr może być `null`, więc zawsze sprawdzaj.</span><span class="sxs-lookup"><span data-stu-id="5bcba-234">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="5bcba-235">Ponadto właściwości obiektu kontekstu mogą zwrócić `null`.</span><span class="sxs-lookup"><span data-stu-id="5bcba-235">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5bcba-236">Nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="5bcba-236">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTo">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5bcba-237">Konwertuje dany obiekt wartości na określony typ.</span><span class="sxs-lookup"><span data-stu-id="5bcba-237">Converts the given value object to the specified type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public object ConvertTo (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertTo(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertTo (value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertTo(System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="member this.ConvertTo : obj * Type -&gt; obj" Usage="typeConverter.ConvertTo (value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5bcba-238"><see cref="T:System.Object" /> Do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="5bcba-238">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="5bcba-239"><see cref="T:System.Type" /> Do<paramref name="value" /> konwersji parametru na.</span><span class="sxs-lookup"><span data-stu-id="5bcba-239">The <see cref="T:System.Type" /> to convert the <paramref name="value" /> parameter to.</span></span></param>
        <summary><span data-ttu-id="5bcba-240">Konwertuje dany obiekt wartości na określony typ, używając argumentów.</span><span class="sxs-lookup"><span data-stu-id="5bcba-240">Converts the given value object to the specified type, using the arguments.</span></span></summary>
        <returns><span data-ttu-id="5bcba-241"><see cref="T:System.Object" /> Reprezentuje przekonwertowaną wartość.</span><span class="sxs-lookup"><span data-stu-id="5bcba-241">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bcba-242">Najbardziej typowym typem konwersji do i z jest obiekt ciągu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-242">The most common type to convert to and from is a string object.</span></span> <span data-ttu-id="5bcba-243">Ta implementacja wywołuje <xref:System.Object.ToString%2A> obiekt, jeśli obiekt jest prawidłowy i jeśli typ docelowy jest ciągiem.</span><span class="sxs-lookup"><span data-stu-id="5bcba-243">This implementation calls <xref:System.Object.ToString%2A> on the object, if the object is valid and if the destination type is a string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5bcba-244">Parametr ma wartość <see langword="null" />. <paramref name="destinationType" /></span><span class="sxs-lookup"><span data-stu-id="5bcba-244">The <paramref name="destinationType" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5bcba-245">Nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="5bcba-245">The conversion cannot be performed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public virtual object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="typeConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="5bcba-246"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zawiera kontekst formatu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-246">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="5bcba-247">A <see cref="T:System.Globalization.CultureInfo" />.</span><span class="sxs-lookup"><span data-stu-id="5bcba-247">A <see cref="T:System.Globalization.CultureInfo" />.</span></span> <span data-ttu-id="5bcba-248">Jeśli <see langword="null" /> jest zakończony, założono bieżącą kulturę.</span><span class="sxs-lookup"><span data-stu-id="5bcba-248">If <see langword="null" /> is passed, the current culture is assumed.</span></span></param>
        <param name="value"><span data-ttu-id="5bcba-249"><see cref="T:System.Object" /> Do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="5bcba-249">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="5bcba-250"><see cref="T:System.Type" /> Do<paramref name="value" /> konwersji parametru na.</span><span class="sxs-lookup"><span data-stu-id="5bcba-250">The <see cref="T:System.Type" /> to convert the <paramref name="value" /> parameter to.</span></span></param>
        <summary><span data-ttu-id="5bcba-251">Konwertuje dany obiekt wartości na określony typ, przy użyciu określonych informacji o kontekście i kulturze.</span><span class="sxs-lookup"><span data-stu-id="5bcba-251">Converts the given value object to the specified type, using the specified context and culture information.</span></span></summary>
        <returns><span data-ttu-id="5bcba-252"><see cref="T:System.Object" /> Reprezentuje przekonwertowaną wartość.</span><span class="sxs-lookup"><span data-stu-id="5bcba-252">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bcba-253">Najczęściej używane typy do przekonwertowania to i z obiektu String.</span><span class="sxs-lookup"><span data-stu-id="5bcba-253">The most common types to convert are to and from a string object.</span></span> <span data-ttu-id="5bcba-254">Ta implementacja wywołuje <xref:System.Object.ToString%2A> obiekt, jeśli obiekt jest prawidłowy i jeśli typ docelowy jest ciągiem.</span><span class="sxs-lookup"><span data-stu-id="5bcba-254">This implementation calls <xref:System.Object.ToString%2A> on the object if the object is valid and if the destination type is a string.</span></span>  
  
 <span data-ttu-id="5bcba-255">Użyj parametru `context` , aby wyodrębnić dodatkowe informacje o środowisku, z którego ten konwerter jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="5bcba-255">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="5bcba-256">Ten parametr może być `null`, więc zawsze sprawdzaj.</span><span class="sxs-lookup"><span data-stu-id="5bcba-256">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="5bcba-257">Ponadto właściwości obiektu kontekstu mogą zwrócić `null`.</span><span class="sxs-lookup"><span data-stu-id="5bcba-257">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="5bcba-258">Autorzy typów niestandardowych, którzy zamierzają obsługiwać zachowanie konwersji typu dla języka XAML zazwyczaj <xref:System.ComponentModel.TypeConverter> implementują klasę <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> , która obsługuje zachowanie z ciągu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-258">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string.</span></span> <span data-ttu-id="5bcba-259">Te konwertery typów mogą również <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> implementować obsługę serializacji z powrotem do języka XAML.</span><span class="sxs-lookup"><span data-stu-id="5bcba-259">These type converters might also implement <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> to support serialization back to XAML.</span></span>  
  
 <span data-ttu-id="5bcba-260">Niektóre scenariusze serializacji XAML nie mogą być odpowiednio rozkierowane <xref:System.ComponentModel.TypeConverter> .</span><span class="sxs-lookup"><span data-stu-id="5bcba-260">Some XAML serialization scenarios cannot be adequately addressed with <xref:System.ComponentModel.TypeConverter> alone.</span></span> <span data-ttu-id="5bcba-261">W takich przypadkach może być konieczne zdefiniowanie <xref:System.Windows.Markup.ValueSerializer> , który obsługuje przypadki serializacji, które w przeciwnym razie byłyby obsługiwane przez. <xref:System.ComponentModel.TypeConverter.ConvertTo%2A></span><span class="sxs-lookup"><span data-stu-id="5bcba-261">In these cases, it may be necessary to also define a <xref:System.Windows.Markup.ValueSerializer> that handles the serialization cases that would otherwise be handled by <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>.</span></span> <span data-ttu-id="5bcba-262">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Markup.ValueSerializer>.</span><span class="sxs-lookup"><span data-stu-id="5bcba-262">For more information, see <xref:System.Windows.Markup.ValueSerializer>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5bcba-263">Parametr ma wartość <see langword="null" />. <paramref name="destinationType" /></span><span class="sxs-lookup"><span data-stu-id="5bcba-263">The <paramref name="destinationType" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5bcba-264">Nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="5bcba-264">The conversion cannot be performed.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="5bcba-265">Zastąp tę metodę, aby zapewnić własne wymagania dotyczące konwersji.</span><span class="sxs-lookup"><span data-stu-id="5bcba-265">Override this method to provide your own conversion requirements.</span></span>  
  
<span data-ttu-id="5bcba-266">Dla wzorców implementacji dla konwerterów typów, które są używane do obsługi języka XAML i typów niestandardowych, zobacz [konwertery typów dla języka XAML — Omówienie](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5bcba-266">For implementation patterns for type converters that are used to support XAML and custom types, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <related type="Article" href="https://msdn.microsoft.com/library/51a65860-efcb-4fe0-95a0-1c679cde66b7"><span data-ttu-id="5bcba-267">Typy konwerterów dla XAML — Omówienie</span><span class="sxs-lookup"><span data-stu-id="5bcba-267">Type Converters for XAML Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToInvariantString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5bcba-268">Konwertuje określoną wartość na reprezentację niezmienną typu Culture.</span><span class="sxs-lookup"><span data-stu-id="5bcba-268">Converts the specified value to a culture-invariant string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToInvariantString">
      <MemberSignature Language="C#" Value="public string ConvertToInvariantString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToInvariantString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToInvariantString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToInvariantString(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToInvariantString : obj -&gt; string" Usage="typeConverter.ConvertToInvariantString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5bcba-269"><see cref="T:System.Object" /> Do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="5bcba-269">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="5bcba-270">Konwertuje określoną wartość na reprezentację niezmienną typu Culture.</span><span class="sxs-lookup"><span data-stu-id="5bcba-270">Converts the specified value to a culture-invariant string representation.</span></span></summary>
        <returns><span data-ttu-id="5bcba-271"><see cref="T:System.String" /> Reprezentujący przekonwertowane wartości.</span><span class="sxs-lookup"><span data-stu-id="5bcba-271">A <see cref="T:System.String" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bcba-272">Ten `context` parametr może służyć do wyodrębnienia dodatkowych informacji o środowisku, z którego ten konwerter jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="5bcba-272">The `context` parameter can be used to extract additional information about the environment from which this converter is being invoked.</span></span> <span data-ttu-id="5bcba-273">Może to być `null`, więc zawsze sprawdzaj.</span><span class="sxs-lookup"><span data-stu-id="5bcba-273">This can be `null`, so always check.</span></span> <span data-ttu-id="5bcba-274">Ponadto właściwości obiektu kontekstu mogą zwrócić `null`.</span><span class="sxs-lookup"><span data-stu-id="5bcba-274">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="5bcba-275">W zależności od implementacji programu formatującego wartości może być możliwe przekazanie zwróconego ciągu z powrotem do programu formatującego wartości, aby ponownie utworzyć wystąpienie obiektu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-275">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5bcba-276">Nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="5bcba-276">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToInvariantString">
      <MemberSignature Language="C#" Value="public string ConvertToInvariantString (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToInvariantString(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToInvariantString (context As ITypeDescriptorContext, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToInvariantString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToInvariantString : System.ComponentModel.ITypeDescriptorContext * obj -&gt; string" Usage="typeConverter.ConvertToInvariantString (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="5bcba-277"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zawiera kontekst formatu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-277">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="value"><span data-ttu-id="5bcba-278"><see cref="T:System.Object" /> Do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="5bcba-278">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="5bcba-279">Konwertuje określoną wartość na reprezentację w postaci ciągu niezmiennej, przy użyciu określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-279">Converts the specified value to a culture-invariant string representation, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="5bcba-280"><see cref="T:System.String" /> Reprezentujący przekonwertowane wartości.</span><span class="sxs-lookup"><span data-stu-id="5bcba-280">A <see cref="T:System.String" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bcba-281">Użyj parametru `context` , aby wyodrębnić dodatkowe informacje o środowisku, z którego ten konwerter jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="5bcba-281">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="5bcba-282">Ten parametr może być `null`, więc zawsze sprawdzaj.</span><span class="sxs-lookup"><span data-stu-id="5bcba-282">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="5bcba-283">Ponadto właściwości obiektu kontekstu mogą zwrócić `null`.</span><span class="sxs-lookup"><span data-stu-id="5bcba-283">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="5bcba-284">W zależności od implementacji programu formatującego wartości może być możliwe przekazanie zwróconego ciągu z powrotem do programu formatującego wartości, aby ponownie utworzyć wystąpienie obiektu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-284">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5bcba-285">Nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="5bcba-285">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5bcba-286">Konwertuje określoną wartość na reprezentację ciągu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-286">Converts the specified value to a string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToString : obj -&gt; string" Usage="typeConverter.ConvertToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5bcba-287"><see cref="T:System.Object" /> Do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="5bcba-287">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="5bcba-288">Konwertuje określoną wartość na reprezentację ciągu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-288">Converts the specified value to a string representation.</span></span></summary>
        <returns><span data-ttu-id="5bcba-289"><see cref="T:System.Object" /> Reprezentuje przekonwertowaną wartość.</span><span class="sxs-lookup"><span data-stu-id="5bcba-289">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bcba-290">W zależności od implementacji programu formatującego wartości może być możliwe przekazanie zwróconego ciągu z powrotem do programu formatującego wartości, aby ponownie utworzyć wystąpienie obiektu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-290">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5bcba-291">Aby zapoznać się z przykładem na tej funkcji <xref:System.ComponentModel.TypeConverter> , zobacz Klasa.</span><span class="sxs-lookup"><span data-stu-id="5bcba-291">For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5bcba-292">Nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="5bcba-292">The conversion cannot be performed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (context As ITypeDescriptorContext, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToString : System.ComponentModel.ITypeDescriptorContext * obj -&gt; string" Usage="typeConverter.ConvertToString (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="5bcba-293"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zawiera kontekst formatu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-293">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="value"><span data-ttu-id="5bcba-294"><see cref="T:System.Object" /> Do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="5bcba-294">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="5bcba-295">Konwertuje daną wartość na reprezentację ciągu przy użyciu danego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-295">Converts the given value to a string representation, using the given context.</span></span></summary>
        <returns><span data-ttu-id="5bcba-296"><see cref="T:System.Object" /> Reprezentuje przekonwertowaną wartość.</span><span class="sxs-lookup"><span data-stu-id="5bcba-296">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bcba-297">Użyj parametru `context` , aby wyodrębnić dodatkowe informacje o środowisku, z którego ten konwerter jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="5bcba-297">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="5bcba-298">Ten parametr może być `null`, więc zawsze sprawdzaj.</span><span class="sxs-lookup"><span data-stu-id="5bcba-298">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="5bcba-299">Ponadto właściwości obiektu kontekstu mogą zwrócić `null`.</span><span class="sxs-lookup"><span data-stu-id="5bcba-299">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="5bcba-300">W zależności od implementacji programu formatującego wartości może być możliwe przekazanie zwróconego ciągu z powrotem do programu formatującego wartości, aby ponownie utworzyć wystąpienie obiektu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-300">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5bcba-301">Nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="5bcba-301">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToString : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; string" Usage="typeConverter.ConvertToString (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="5bcba-302"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zawiera kontekst formatu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-302">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="5bcba-303">A <see cref="T:System.Globalization.CultureInfo" />.</span><span class="sxs-lookup"><span data-stu-id="5bcba-303">A <see cref="T:System.Globalization.CultureInfo" />.</span></span> <span data-ttu-id="5bcba-304">Jeśli <see langword="null" /> jest zakończony, założono bieżącą kulturę.</span><span class="sxs-lookup"><span data-stu-id="5bcba-304">If <see langword="null" /> is passed, the current culture is assumed.</span></span></param>
        <param name="value"><span data-ttu-id="5bcba-305"><see cref="T:System.Object" /> Do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="5bcba-305">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="5bcba-306">Konwertuje daną wartość na reprezentację ciągu, przy użyciu określonych informacji o kontekście i kulturze.</span><span class="sxs-lookup"><span data-stu-id="5bcba-306">Converts the given value to a string representation, using the specified context and culture information.</span></span></summary>
        <returns><span data-ttu-id="5bcba-307"><see cref="T:System.Object" /> Reprezentuje przekonwertowaną wartość.</span><span class="sxs-lookup"><span data-stu-id="5bcba-307">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bcba-308">Użyj parametru `context` , aby wyodrębnić dodatkowe informacje o środowisku, z którego ten konwerter jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="5bcba-308">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="5bcba-309">Ten parametr może być `null`, więc zawsze sprawdzaj.</span><span class="sxs-lookup"><span data-stu-id="5bcba-309">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="5bcba-310">Ponadto właściwości obiektu kontekstu mogą zwrócić `null`.</span><span class="sxs-lookup"><span data-stu-id="5bcba-310">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="5bcba-311">W zależności od implementacji programu formatującego wartości może być możliwe przekazanie zwróconego ciągu z powrotem do programu formatującego wartości, aby ponownie utworzyć wystąpienie obiektu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-311">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5bcba-312">Nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="5bcba-312">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5bcba-313">Powoduje ponowne utworzenie <see cref="T:System.Object" /> podanego zestawu wartości właściwości dla obiektu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-313">Re-creates an <see cref="T:System.Object" /> given a set of property values for the object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateInstance(class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstance(System::Collections::IDictionary ^ propertyValues);" />
      <MemberSignature Language="F#" Value="member this.CreateInstance : System.Collections.IDictionary -&gt; obj" Usage="typeConverter.CreateInstance propertyValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="propertyValues"><span data-ttu-id="5bcba-314"><see cref="T:System.Collections.IDictionary" /> Reprezentuje słownik nowych wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="5bcba-314">An <see cref="T:System.Collections.IDictionary" /> that represents a dictionary of new property values.</span></span></param>
        <summary><span data-ttu-id="5bcba-315">Powoduje ponowne utworzenie <see cref="T:System.Object" /> podanego zestawu wartości właściwości dla obiektu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-315">Re-creates an <see cref="T:System.Object" /> given a set of property values for the object.</span></span></summary>
        <returns><span data-ttu-id="5bcba-316">Reprezentujący podaną <see cref="T:System.Collections.IDictionary" />lub <see langword="null" /> Jeśli nie można utworzyć obiektu. <see cref="T:System.Object" /></span><span class="sxs-lookup"><span data-stu-id="5bcba-316">An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <see langword="null" /> if the object cannot be created.</span></span> <span data-ttu-id="5bcba-317">Ta metoda zawsze zwraca <see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="5bcba-317">This method always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bcba-318">Tej metody należy użyć w przypadku obiektów, które są niezmienne, ale dla których chcesz podać właściwości możliwe do zmiany.</span><span class="sxs-lookup"><span data-stu-id="5bcba-318">Use this method for objects that are immutable, but for which you want to provide changeable properties.</span></span>  
  
 <span data-ttu-id="5bcba-319">Słownik dostarczony przez `propertyValues` parametr ma serię par nazwa/wartość, po <xref:System.ComponentModel.TypeConverter.GetProperties%2A>jednej dla każdej właściwości zwróconej przez.</span><span class="sxs-lookup"><span data-stu-id="5bcba-319">The dictionary provided by the `propertyValues` parameter has a series of name/value pairs, one for each property returned from <xref:System.ComponentModel.TypeConverter.GetProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(class System.ComponentModel.ITypeDescriptorContext context, class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (context As ITypeDescriptorContext, propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(System::ComponentModel::ITypeDescriptorContext ^ context, System::Collections::IDictionary ^ propertyValues);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : System.ComponentModel.ITypeDescriptorContext * System.Collections.IDictionary -&gt; obj&#xA;override this.CreateInstance : System.ComponentModel.ITypeDescriptorContext * System.Collections.IDictionary -&gt; obj" Usage="typeConverter.CreateInstance (context, propertyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="5bcba-320"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zawiera kontekst formatu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-320">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="propertyValues"><span data-ttu-id="5bcba-321"><see cref="T:System.Collections.IDictionary" /> Nowe wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="5bcba-321">An <see cref="T:System.Collections.IDictionary" /> of new property values.</span></span></param>
        <summary><span data-ttu-id="5bcba-322">Tworzy wystąpienie typu, z którym <see cref="T:System.ComponentModel.TypeConverter" /> jest skojarzone, przy użyciu określonego kontekstu, z uwzględnieniem zestawu wartości właściwości dla tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-322">Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.</span></span></summary>
        <returns><span data-ttu-id="5bcba-323">Reprezentujący podaną <see cref="T:System.Collections.IDictionary" />lub <see langword="null" /> Jeśli nie można utworzyć obiektu. <see cref="T:System.Object" /></span><span class="sxs-lookup"><span data-stu-id="5bcba-323">An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <see langword="null" /> if the object cannot be created.</span></span> <span data-ttu-id="5bcba-324">Ta metoda zawsze zwraca <see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="5bcba-324">This method always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bcba-325">Tej metody należy użyć w przypadku obiektów, które są niezmienne, ale dla których chcesz podać właściwości możliwe do zmiany.</span><span class="sxs-lookup"><span data-stu-id="5bcba-325">Use this method for objects that are immutable, but for which you want to provide changeable properties.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="5bcba-326">Zastąp tę metodę, jeśli typ, który ma zostać przekonwertowany, musi ponownie utworzyć obiekt, aby zmienić jego wartość.</span><span class="sxs-lookup"><span data-stu-id="5bcba-326">Override this method if the type you want to convert must re-create the object to change its value.</span></span>  
  
<span data-ttu-id="5bcba-327">Użyj parametru <paramref name="context" /> , aby wyodrębnić dodatkowe informacje o środowisku, z którego ten konwerter jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="5bcba-327">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="5bcba-328">Ten parametr może być <see langword="null" />, więc zawsze sprawdzaj.</span><span class="sxs-lookup"><span data-stu-id="5bcba-328">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="5bcba-329">Ponadto właściwości obiektu kontekstu mogą zwrócić <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5bcba-329">Also, properties on the context object can return <see langword="null" />.</span></span>  
  
<span data-ttu-id="5bcba-330">Słownik dostarczony przez <paramref name="propertyValues" /> parametr ma serię par nazwa/wartość, po <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />jednej dla każdej właściwości zwróconej przez.</span><span class="sxs-lookup"><span data-stu-id="5bcba-330">The dictionary provided by the <paramref name="propertyValues" /> parameter has a series of name/value pairs, one for each property returned from <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="GetConvertFromException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertFromException (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertFromException(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertFromException (value As Object) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertFromException(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetConvertFromException : obj -&gt; Exception" Usage="typeConverter.GetConvertFromException value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5bcba-331">Do konwersji lub <see langword="null" /> Jeśli obiekt jest niedostępny. <see cref="T:System.Object" /></span><span class="sxs-lookup"><span data-stu-id="5bcba-331">The <see cref="T:System.Object" /> to convert, or <see langword="null" /> if the object is not available.</span></span></param>
        <summary><span data-ttu-id="5bcba-332">Zwraca wyjątek, który ma zostać zgłoszony, gdy nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="5bcba-332">Returns an exception to throw when a conversion cannot be performed.</span></span></summary>
        <returns><span data-ttu-id="5bcba-333"><see cref="T:System.Exception" /> Reprezentuje wyjątek, który ma zostać zgłoszony, gdy nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="5bcba-333">An <see cref="T:System.Exception" /> that represents the exception to throw when a conversion cannot be performed.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5bcba-334">Automatycznie generowane przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="5bcba-334">Automatically thrown by this method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetConvertToException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertToException (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertToException(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertToException (value As Object, destinationType As Type) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertToException(System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="member this.GetConvertToException : obj * Type -&gt; Exception" Usage="typeConverter.GetConvertToException (value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5bcba-335">Do konwersji lub <see langword="null" /> Jeśli obiekt jest niedostępny. <see cref="T:System.Object" /></span><span class="sxs-lookup"><span data-stu-id="5bcba-335">The <see cref="T:System.Object" /> to convert, or <see langword="null" /> if the object is not available.</span></span></param>
        <param name="destinationType"><span data-ttu-id="5bcba-336"><see cref="T:System.Type" /> Reprezentuje typ, do którego przekonwertowano próbę konwersji.</span><span class="sxs-lookup"><span data-stu-id="5bcba-336">A <see cref="T:System.Type" /> that represents the type the conversion was trying to convert to.</span></span></param>
        <summary><span data-ttu-id="5bcba-337">Zwraca wyjątek, który ma zostać zgłoszony, gdy nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="5bcba-337">Returns an exception to throw when a conversion cannot be performed.</span></span></summary>
        <returns><span data-ttu-id="5bcba-338"><see cref="T:System.Exception" /> Reprezentuje wyjątek, który ma zostać zgłoszony, gdy nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="5bcba-338">An <see cref="T:System.Exception" /> that represents the exception to throw when a conversion cannot be performed.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5bcba-339">Automatycznie generowane przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="5bcba-339">Automatically thrown by this method.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCreateInstanceSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5bcba-340">Zwraca czy zmiana wartości w tym obiekcie wymaga wywołania <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> metody w celu utworzenia nowej wartości.</span><span class="sxs-lookup"><span data-stu-id="5bcba-340">Returns whether changing a value on this object requires a call to the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> method to create a new value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public bool GetCreateInstanceSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetCreateInstanceSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCreateInstanceSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetCreateInstanceSupported();" />
      <MemberSignature Language="F#" Value="member this.GetCreateInstanceSupported : unit -&gt; bool" Usage="typeConverter.GetCreateInstanceSupported " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5bcba-341">Zwraca czy zmiana wartości w tym obiekcie wymaga wywołania <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> metody w celu utworzenia nowej wartości.</span><span class="sxs-lookup"><span data-stu-id="5bcba-341">Returns whether changing a value on this object requires a call to the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> method to create a new value.</span></span></summary>
        <returns><span data-ttu-id="5bcba-342"><see langword="true" />Jeśli zmiana właściwości w tym obiekcie wymaga wywołania <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> do utworzenia nowej wartości; <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="5bcba-342"><see langword="true" /> if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetCreateInstanceSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCreateInstanceSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetCreateInstanceSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetCreateInstanceSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetCreateInstanceSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeConverter.GetCreateInstanceSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="5bcba-343"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zawiera kontekst formatu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-343">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="5bcba-344">Zwraca czy zmiana wartości w tym obiekcie wymaga wywołania <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> do utworzenia nowej wartości przy użyciu określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-344">Returns whether changing a value on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="5bcba-345"><see langword="true" />Jeśli zmiana właściwości w tym obiekcie wymaga wywołania <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> do utworzenia nowej wartości; <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="5bcba-345"><see langword="true" /> if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bcba-346">Zgodnie z zaimplementowaną w tej klasie Metoda ta `false`zawsze zwraca wartość.</span><span class="sxs-lookup"><span data-stu-id="5bcba-346">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="5bcba-347">Zastąp tę metodę, jeśli typ, który ma zostać przekonwertowany, musi ponownie utworzyć obiekt, aby zmienić jego wartość.</span><span class="sxs-lookup"><span data-stu-id="5bcba-347">Override this method if the type you want to convert must re-create the object to change its value.</span></span>  
  
<span data-ttu-id="5bcba-348">Użyj parametru <paramref name="context" /> , aby wyodrębnić dodatkowe informacje o środowisku, z którego ten konwerter jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="5bcba-348">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="5bcba-349">Ten parametr może być <see langword="null" />, więc zawsze sprawdzaj.</span><span class="sxs-lookup"><span data-stu-id="5bcba-349">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="5bcba-350">Ponadto właściwości obiektu kontekstu mogą zwrócić <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5bcba-350">Also, properties on the context object can return <see langword="null" />.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5bcba-351">Zwraca kolekcję właściwości typu tablicy określonej przez parametr value.</span><span class="sxs-lookup"><span data-stu-id="5bcba-351">Returns a collection of properties for the type of array specified by the value parameter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (value As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetProperties : obj -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="typeConverter.GetProperties value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5bcba-352">Określa typ tablicy, dla której mają zostać pobrane właściwości. <see cref="T:System.Object" /></span><span class="sxs-lookup"><span data-stu-id="5bcba-352">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span></span></param>
        <summary><span data-ttu-id="5bcba-353">Zwraca kolekcję właściwości typu tablicy określonej przez parametr value.</span><span class="sxs-lookup"><span data-stu-id="5bcba-353">Returns a collection of properties for the type of array specified by the value parameter.</span></span></summary>
        <returns><span data-ttu-id="5bcba-354">Z właściwościami, które są dostępne dla tego typu danych, lub <see langword="null" /> Jeśli nie ma żadnych właściwości. <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /></span><span class="sxs-lookup"><span data-stu-id="5bcba-354">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bcba-355">Zgodnie z zaimplementowaną w tej klasie Metoda ta `null`zawsze zwraca wartość.</span><span class="sxs-lookup"><span data-stu-id="5bcba-355">As implemented in this class, this method always returns `null`.</span></span>  
  
 <span data-ttu-id="5bcba-356">Domyślnie typ nie zwraca właściwości.</span><span class="sxs-lookup"><span data-stu-id="5bcba-356">By default, a type does not return properties.</span></span> <span data-ttu-id="5bcba-357">Łatwa implementacja tej metody może wywołać <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> prawidłowy typ danych.</span><span class="sxs-lookup"><span data-stu-id="5bcba-357">An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (context As ITypeDescriptorContext, value As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetProperties : System.ComponentModel.ITypeDescriptorContext * obj -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="typeConverter.GetProperties (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="5bcba-358"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zawiera kontekst formatu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-358">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="value"><span data-ttu-id="5bcba-359">Określa typ tablicy, dla której mają zostać pobrane właściwości. <see cref="T:System.Object" /></span><span class="sxs-lookup"><span data-stu-id="5bcba-359">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span></span></param>
        <summary><span data-ttu-id="5bcba-360">Zwraca kolekcję właściwości typu tablicy określonej przez parametr value przy użyciu określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-360">Returns a collection of properties for the type of array specified by the value parameter, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="5bcba-361">Z właściwościami, które są dostępne dla tego typu danych, lub <see langword="null" /> Jeśli nie ma żadnych właściwości. <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /></span><span class="sxs-lookup"><span data-stu-id="5bcba-361">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bcba-362">Użyj parametru `context` , aby wyodrębnić dodatkowe informacje o środowisku, z którego ten konwerter jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="5bcba-362">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="5bcba-363">Ten parametr może być `null`, więc zawsze sprawdzaj.</span><span class="sxs-lookup"><span data-stu-id="5bcba-363">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="5bcba-364">Ponadto właściwości obiektu kontekstu mogą zwrócić `null`.</span><span class="sxs-lookup"><span data-stu-id="5bcba-364">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="5bcba-365">Zgodnie z zaimplementowaną w tej klasie Metoda ta `null`zawsze zwraca wartość.</span><span class="sxs-lookup"><span data-stu-id="5bcba-365">As implemented in this class, this method always returns `null`.</span></span>  
  
 <span data-ttu-id="5bcba-366">Domyślnie typ nie zwraca właściwości.</span><span class="sxs-lookup"><span data-stu-id="5bcba-366">By default, a type does not return properties.</span></span> <span data-ttu-id="5bcba-367">Łatwa implementacja tej metody może wywołać <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> prawidłowy typ danych.</span><span class="sxs-lookup"><span data-stu-id="5bcba-367">An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="typeConverter.GetProperties (context, value, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="5bcba-368"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zawiera kontekst formatu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-368">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="value"><span data-ttu-id="5bcba-369">Określa typ tablicy, dla której mają zostać pobrane właściwości. <see cref="T:System.Object" /></span><span class="sxs-lookup"><span data-stu-id="5bcba-369">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span></span></param>
        <param name="attributes"><span data-ttu-id="5bcba-370">Tablica typu <see cref="T:System.Attribute" /> , która jest używana jako filtr.</span><span class="sxs-lookup"><span data-stu-id="5bcba-370">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</span></span></param>
        <summary><span data-ttu-id="5bcba-371">Zwraca kolekcję właściwości typu tablicy określonej przez parametr value, przy użyciu określonego kontekstu i atrybutów.</span><span class="sxs-lookup"><span data-stu-id="5bcba-371">Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.</span></span></summary>
        <returns><span data-ttu-id="5bcba-372">Z właściwościami, które są dostępne dla tego typu danych, lub <see langword="null" /> Jeśli nie ma żadnych właściwości. <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /></span><span class="sxs-lookup"><span data-stu-id="5bcba-372">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bcba-373">Zgodnie z zaimplementowaną w tej klasie Metoda ta `null`zawsze zwraca wartość.</span><span class="sxs-lookup"><span data-stu-id="5bcba-373">As implemented in this class, this method always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="5bcba-374">Zastąp tę metodę, jeśli typ, który ma zostać przekonwertowany, obsługuje właściwości.</span><span class="sxs-lookup"><span data-stu-id="5bcba-374">Override this method if the type you want to convert supports properties.</span></span>  
  
<span data-ttu-id="5bcba-375">Użyj parametru <paramref name="context" /> , aby wyodrębnić dodatkowe informacje o środowisku, z którego ten konwerter jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="5bcba-375">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="5bcba-376">Ten parametr może być <see langword="null" />, więc zawsze sprawdzaj.</span><span class="sxs-lookup"><span data-stu-id="5bcba-376">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="5bcba-377">Ponadto właściwości obiektu kontekstu mogą zwrócić <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5bcba-377">Also, properties on the context object can return <see langword="null" />.</span></span>  
  
<span data-ttu-id="5bcba-378">Tablica atrybutów służy do filtrowania tablicy.</span><span class="sxs-lookup"><span data-stu-id="5bcba-378">The attributes array is used to filter the array.</span></span> <span data-ttu-id="5bcba-379">Atrybuty mogą zawierać kombinację <see cref="T:System.Type" /> obiektów i. <see cref="T:System.Attribute" /></span><span class="sxs-lookup"><span data-stu-id="5bcba-379">The attributes can have a mix of <see cref="T:System.Type" /> and <see cref="T:System.Attribute" /> objects.</span></span> <span data-ttu-id="5bcba-380">Filtrowanie jest zdefiniowane przy użyciu następujących reguł:</span><span class="sxs-lookup"><span data-stu-id="5bcba-380">Filtering is defined by the following rules:</span></span> 
<span data-ttu-id="5bcba-381">-A <see cref="T:System.Type" /> jest traktowany jako symbol wieloznaczny; pasuje do właściwości, <see cref="T:System.Type" /> która ma w jej zestawie atrybutów.</span><span class="sxs-lookup"><span data-stu-id="5bcba-381">-   A <see cref="T:System.Type" /> is treated as a wildcard; it matches a property that has the <see cref="T:System.Type" /> in its set of attributes.</span></span>  
  
<span data-ttu-id="5bcba-382">-Jeśli właściwość nie ma <see cref="T:System.Attribute" /> tej samej klasy, właściwość nie jest uwzględniona w zwracanej tablicy.</span><span class="sxs-lookup"><span data-stu-id="5bcba-382">-   If a property does not have an <see cref="T:System.Attribute" /> of the same class, the property is not included in the returned array.</span></span>  
  
<span data-ttu-id="5bcba-383">-Jeśli atrybut jest wystąpieniem <see cref="T:System.Attribute" />, właściwość musi być dokładnym dopasowaniem lub nie jest uwzględniona w zwracanej tablicy.</span><span class="sxs-lookup"><span data-stu-id="5bcba-383">-   If the attribute is an instance of <see cref="T:System.Attribute" />, the property must be an exact match or it is not included in the returned array.</span></span>  
  
<span data-ttu-id="5bcba-384">— Jeśli <see cref="T:System.Attribute" /> wystąpienie jest określone i jest właściwością domyślną, jest zawarte w zwracanej tablicy, nawet jeśli nie ma żadnego wystąpienia <see cref="T:System.Attribute" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="5bcba-384">-   If an <see cref="T:System.Attribute" /> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <see cref="T:System.Attribute" /> in the property.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPropertiesSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5bcba-385">Zwraca czy ten obiekt obsługuje właściwości.</span><span class="sxs-lookup"><span data-stu-id="5bcba-385">Returns whether this object supports properties.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public bool GetPropertiesSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetPropertiesSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertiesSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetPropertiesSupported();" />
      <MemberSignature Language="F#" Value="member this.GetPropertiesSupported : unit -&gt; bool" Usage="typeConverter.GetPropertiesSupported " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5bcba-386">Zwraca czy ten obiekt obsługuje właściwości.</span><span class="sxs-lookup"><span data-stu-id="5bcba-386">Returns whether this object supports properties.</span></span></summary>
        <returns><span data-ttu-id="5bcba-387"><see langword="true" />Jeśli <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> należy wywołać, <see langword="false" />aby znaleźć właściwości tego obiektu; w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="5bcba-387"><see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bcba-388">Zgodnie z zaimplementowaną w tej klasie Metoda ta `false`zawsze zwraca wartość.</span><span class="sxs-lookup"><span data-stu-id="5bcba-388">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPropertiesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetPropertiesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertiesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetPropertiesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeConverter.GetPropertiesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="5bcba-389"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zawiera kontekst formatu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-389">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="5bcba-390">Zwraca czy ten obiekt obsługuje właściwości, używając określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-390">Returns whether this object supports properties, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="5bcba-391"><see langword="true" />Jeśli <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> należy wywołać, <see langword="false" />aby znaleźć właściwości tego obiektu; w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="5bcba-391"><see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bcba-392">Zgodnie z zaimplementowaną w tej klasie Metoda ta `false`zawsze zwraca wartość.</span><span class="sxs-lookup"><span data-stu-id="5bcba-392">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="5bcba-393">Zastąp tę metodę, jeśli typ, który ma zostać przekonwertowany, obsługuje właściwości.</span><span class="sxs-lookup"><span data-stu-id="5bcba-393">Override this method if the type you want to convert supports properties.</span></span>  
  
<span data-ttu-id="5bcba-394">Użyj parametru <paramref name="context" /> , aby wyodrębnić dodatkowe informacje o środowisku, z którego ten konwerter jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="5bcba-394">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="5bcba-395">Ten parametr może być <see langword="null" />, więc zawsze sprawdzaj.</span><span class="sxs-lookup"><span data-stu-id="5bcba-395">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="5bcba-396">Ponadto właściwości obiektu kontekstu mogą zwrócić <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5bcba-396">Also, properties on the context object can return <see langword="null" />.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValues">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5bcba-397">Zwraca kolekcję wartości standardowych dla typu danych, dla których zaprojektowano ten konwerter typów.</span><span class="sxs-lookup"><span data-stu-id="5bcba-397">Returns a collection of standard values for the data type this type converter is designed for.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetStandardValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ICollection GetStandardValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValues" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValues () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetStandardValues();" />
      <MemberSignature Language="F#" Value="member this.GetStandardValues : unit -&gt; System.Collections.ICollection" Usage="typeConverter.GetStandardValues " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5bcba-398">Zwraca kolekcję wartości standardowych z domyślnego kontekstu dla typu danych, dla którego zaprojektowano ten konwerter typów.</span><span class="sxs-lookup"><span data-stu-id="5bcba-398">Returns a collection of standard values from the default context for the data type this type converter is designed for.</span></span></summary>
        <returns><span data-ttu-id="5bcba-399">Zawiera standardowy zestaw prawidłowych wartości lub <see langword="null" /> Jeśli typ danych nie obsługuje standardowego zestawu wartości. <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /></span><span class="sxs-lookup"><span data-stu-id="5bcba-399">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> containing a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bcba-400">Zgodnie z zaimplementowaną w tej klasie Metoda ta `null`zawsze zwraca wartość.</span><span class="sxs-lookup"><span data-stu-id="5bcba-400">As implemented in this class, this method always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection&#xA;override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="typeConverter.GetStandardValues context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="5bcba-401"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zawiera kontekst formatu, którego można użyć do wyodrębnienia dodatkowych informacji o środowisku, z którego ten konwerter jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="5bcba-401">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="5bcba-402">Ten parametr lub właściwości tego parametru mogą być <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5bcba-402">This parameter or properties of this parameter can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="5bcba-403">Zwraca kolekcję wartości standardowych dla typu danych, który jest przeznaczony dla tego konwertera typów w przypadku podanego kontekstu formatu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-403">Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.</span></span></summary>
        <returns><span data-ttu-id="5bcba-404">, Który zawiera standardowy zestaw prawidłowych wartości lub <see langword="null" /> Jeśli typ danych nie obsługuje standardowego zestawu wartości. <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /></span><span class="sxs-lookup"><span data-stu-id="5bcba-404">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bcba-405">Zgodnie z implementacją w programie <xref:System.ComponentModel.TypeConverter>ta metoda zawsze zwraca wartość. `null`</span><span class="sxs-lookup"><span data-stu-id="5bcba-405">As implemented in <xref:System.ComponentModel.TypeConverter>, this method always returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5bcba-406">Aby zapoznać się z przykładem na tej funkcji <xref:System.ComponentModel.TypeConverter> , zobacz Klasa.</span><span class="sxs-lookup"><span data-stu-id="5bcba-406">For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="5bcba-407">Zastąp tę metodę, jeśli typ, który ma zostać przekonwertowany, obsługuje wartości standardowe.</span><span class="sxs-lookup"><span data-stu-id="5bcba-407">Override this method if the type you want to convert supports standard values.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValuesExclusive">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5bcba-408">Zwraca czy kolekcja wartości standardowych zwracana z <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> jest listą wyłączną.</span><span class="sxs-lookup"><span data-stu-id="5bcba-408">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public bool GetStandardValuesExclusive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetStandardValuesExclusive() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValuesExclusive () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetStandardValuesExclusive();" />
      <MemberSignature Language="F#" Value="member this.GetStandardValuesExclusive : unit -&gt; bool" Usage="typeConverter.GetStandardValuesExclusive " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5bcba-409">Zwraca czy kolekcja wartości standardowych zwracana z <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> jest listą wyłączną.</span><span class="sxs-lookup"><span data-stu-id="5bcba-409">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</span></span></summary>
        <returns><span data-ttu-id="5bcba-410"><see langword="true" />Jeśli zwracana z <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> jest wyczerpującą listą możliwych wartości; <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> <see langword="false" /> jeśli są możliwe inne wartości.</span><span class="sxs-lookup"><span data-stu-id="5bcba-410"><see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exhaustive list of possible values; <see langword="false" /> if other values are possible.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bcba-411">Zgodnie z zaimplementowaną w tej klasie Metoda ta `false`zawsze zwraca wartość.</span><span class="sxs-lookup"><span data-stu-id="5bcba-411">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="5bcba-412">Jeśli lista ma charakter wyłączny, na przykład w typie danych wyliczenia, żadne inne wartości nie są prawidłowe.</span><span class="sxs-lookup"><span data-stu-id="5bcba-412">If the list is exclusive, such as in an enumeration data type, then no other values are valid.</span></span> <span data-ttu-id="5bcba-413">Jeśli lista nie jest wyłączna, wówczas inne prawidłowe wartości mogą istnieć oprócz listy standardowych wartości, które <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> zapewnia metoda.</span><span class="sxs-lookup"><span data-stu-id="5bcba-413">If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides.</span></span> <span data-ttu-id="5bcba-414">Jeśli wartości są wyłączne, na liście zwracanej <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> przez nie należy zezwalać na edytowanie tych wartości.</span><span class="sxs-lookup"><span data-stu-id="5bcba-414">If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public virtual bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeConverter.GetStandardValuesExclusive context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="5bcba-415"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zawiera kontekst formatu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-415">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="5bcba-416">Zwraca czy kolekcja wartości standardowych zwracana z <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> jest listą wykluczającą możliwych wartości przy użyciu określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-416">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list of possible values, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="5bcba-417"><see langword="true" />Jeśli zwracana z <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> jest wyczerpującą listą możliwych wartości; <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> <see langword="false" /> jeśli są możliwe inne wartości.</span><span class="sxs-lookup"><span data-stu-id="5bcba-417"><see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exhaustive list of possible values; <see langword="false" /> if other values are possible.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bcba-418">Zgodnie z zaimplementowaną w tej klasie Metoda ta `false`zawsze zwraca wartość.</span><span class="sxs-lookup"><span data-stu-id="5bcba-418">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="5bcba-419">Jeśli lista ma charakter wyłączny, na przykład w typie danych wyliczenia, żadne inne wartości nie są prawidłowe.</span><span class="sxs-lookup"><span data-stu-id="5bcba-419">If the list is exclusive, such as in an enumeration data type, then no other values are valid.</span></span> <span data-ttu-id="5bcba-420">Jeśli lista nie jest wyłączna, wówczas inne prawidłowe wartości mogą istnieć oprócz listy standardowych wartości, które <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> zapewnia metoda.</span><span class="sxs-lookup"><span data-stu-id="5bcba-420">If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides.</span></span> <span data-ttu-id="5bcba-421">Jeśli wartości są wyłączne, na liście zwracanej <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> przez nie należy zezwalać na edytowanie tych wartości.</span><span class="sxs-lookup"><span data-stu-id="5bcba-421">If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="5bcba-422">Zastąp tę metodę, jeśli typ, który ma zostać przekonwertowany, obsługuje wartości standardowe.</span><span class="sxs-lookup"><span data-stu-id="5bcba-422">Override this method if the type you want to convert supports standard values.</span></span>  
  
<span data-ttu-id="5bcba-423">Użyj parametru <paramref name="context" /> , aby wyodrębnić dodatkowe informacje o środowisku, z którego ten konwerter jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="5bcba-423">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="5bcba-424">Ten parametr może być <see langword="null" />, więc zawsze sprawdzaj.</span><span class="sxs-lookup"><span data-stu-id="5bcba-424">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="5bcba-425">Ponadto właściwości obiektu kontekstu mogą zwrócić <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5bcba-425">Also, properties on the context object can return <see langword="null" />.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValuesSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5bcba-426">Zwraca czy ten obiekt obsługuje standardowy zestaw wartości, które można pobrać z listy.</span><span class="sxs-lookup"><span data-stu-id="5bcba-426">Returns whether this object supports a standard set of values that can be picked from a list.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public bool GetStandardValuesSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetStandardValuesSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValuesSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetStandardValuesSupported();" />
      <MemberSignature Language="F#" Value="member this.GetStandardValuesSupported : unit -&gt; bool" Usage="typeConverter.GetStandardValuesSupported " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5bcba-427">Zwraca czy ten obiekt obsługuje standardowy zestaw wartości, które można pobrać z listy.</span><span class="sxs-lookup"><span data-stu-id="5bcba-427">Returns whether this object supports a standard set of values that can be picked from a list.</span></span></summary>
        <returns><span data-ttu-id="5bcba-428"><see langword="true" />Jeśli <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> należy wywołać, <see langword="false" />aby znaleźć wspólny zestaw wartości obsługiwany przez obiekt; w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="5bcba-428"><see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeConverter.GetStandardValuesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="5bcba-429"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zawiera kontekst formatu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-429">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="5bcba-430">Zwraca czy ten obiekt obsługuje standardowy zestaw wartości, które można pobrać z listy przy użyciu określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-430">Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="5bcba-431"><see langword="true" />Jeśli <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> należy wywołać, <see langword="false" />aby znaleźć wspólny zestaw wartości obsługiwany przez obiekt; w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="5bcba-431"><see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bcba-432">Zgodnie z zaimplementowaną w tej klasie Metoda ta `false`zawsze zwraca wartość.</span><span class="sxs-lookup"><span data-stu-id="5bcba-432">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="5bcba-433">Użyj parametru `context` , aby wyodrębnić dodatkowe informacje o środowisku, z którego ten konwerter jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="5bcba-433">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="5bcba-434">Ten parametr może być `null`, więc zawsze sprawdzaj.</span><span class="sxs-lookup"><span data-stu-id="5bcba-434">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="5bcba-435">Ponadto właściwości obiektu kontekstu mogą zwrócić `null`.</span><span class="sxs-lookup"><span data-stu-id="5bcba-435">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="5bcba-436">Zastąp tę metodę, jeśli typ, który ma zostać przekonwertowany, obsługuje wartości standardowe.</span><span class="sxs-lookup"><span data-stu-id="5bcba-436">Override this method if the type you want to convert supports standard values.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsValid">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5bcba-437">Zwraca czy dany obiekt wartości jest prawidłowy dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-437">Returns whether the given value object is valid for this type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsValid(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValid (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsValid(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.IsValid : obj -&gt; bool" Usage="typeConverter.IsValid value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5bcba-438">Obiekt do przetestowania pod kątem ważności.</span><span class="sxs-lookup"><span data-stu-id="5bcba-438">The object to test for validity.</span></span></param>
        <summary><span data-ttu-id="5bcba-439">Zwraca czy dany obiekt wartości jest prawidłowy dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-439">Returns whether the given value object is valid for this type.</span></span></summary>
        <returns><span data-ttu-id="5bcba-440"><see langword="true" />Jeśli określona wartość jest prawidłowa dla tego obiektu; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="5bcba-440"><see langword="true" /> if the specified value is valid for this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bcba-441"><xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> Począwszy od [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] <xref:System.ComponentModel.TypeConverter.IsValid%2A> , Metoda<xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> przechwytuje wyjątki z metod i.</span><span class="sxs-lookup"><span data-stu-id="5bcba-441">Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods.</span></span> <span data-ttu-id="5bcba-442">Jeśli typ wartości wejściowej powoduje <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> zwrócenie `false`lub jeśli wartość wejściowa powoduje <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> wygenerowanie wyjątku, <xref:System.ComponentModel.TypeConverter.IsValid%2A> Metoda zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="5bcba-442">If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="5bcba-443">Aby włączyć starsze zachowanie, Wstaw następujące wiersze do pliku konfiguracji aplikacji, na przykład Application1. exe. config.</span><span class="sxs-lookup"><span data-stu-id="5bcba-443">To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.</span></span>  
  
```xml  
<configuration>  
  <appSettings>  
    <add key="UseCompatibleTypeConverterBehavior" value="true" />  
  </appSettings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="5bcba-444">Zastąp tę metodę, jeśli typ, który ma zostać przekonwertowany, obsługuje wartości standardowe, które można zweryfikować.</span><span class="sxs-lookup"><span data-stu-id="5bcba-444">Override this method if the type you want to convert supports standard values that can be validated.</span></span>  
  
<span data-ttu-id="5bcba-445">Metoda jest używana do walidacji wartości w typie, a nie do określenia, czy <paramref name="value" /> można ją przekonwertować na dany typ. <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /></span><span class="sxs-lookup"><span data-stu-id="5bcba-445">The <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> method is used to validate a value within the type rather than to determine if <paramref name="value" /> can be converted to the given type.</span></span> <span data-ttu-id="5bcba-446">Na przykład może <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> służyć do określenia, czy dana wartość jest prawidłowa dla typu wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="5bcba-446">For example, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> can be used to determine if a given value is valid for an enumeration type.</span></span> <span data-ttu-id="5bcba-447">Aby zapoznać się z przykładem, zobacz <see cref="T:System.ComponentModel.EnumConverter" />.</span><span class="sxs-lookup"><span data-stu-id="5bcba-447">For an example, see <see cref="T:System.ComponentModel.EnumConverter" />.</span></span>  
  
<span data-ttu-id="5bcba-448">Można napisać własną metodę <c>WillConvertSucceed</c> , zawijając <see cref="Overload:System.ComponentModel.TypeConverter.ConvertTo" /> metody i <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> w blokach wyjątków.</span><span class="sxs-lookup"><span data-stu-id="5bcba-448">You can write your own <c>WillConvertSucceed</c> method by wrapping the <see cref="Overload:System.ComponentModel.TypeConverter.ConvertTo" /> and <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> methods in exception blocks.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.EnumConverter" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValid(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValid (context As ITypeDescriptorContext, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValid(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IsValid : System.ComponentModel.ITypeDescriptorContext * obj -&gt; bool&#xA;override this.IsValid : System.ComponentModel.ITypeDescriptorContext * obj -&gt; bool" Usage="typeConverter.IsValid (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="5bcba-449"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zawiera kontekst formatu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-449">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="value"><span data-ttu-id="5bcba-450"><see cref="T:System.Object" /> Aby sprawdzić poprawność.</span><span class="sxs-lookup"><span data-stu-id="5bcba-450">The <see cref="T:System.Object" /> to test for validity.</span></span></param>
        <summary><span data-ttu-id="5bcba-451">Zwraca czy dany obiekt wartości jest prawidłowy dla tego typu i dla określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="5bcba-451">Returns whether the given value object is valid for this type and for the specified context.</span></span></summary>
        <returns><span data-ttu-id="5bcba-452"><see langword="true" />Jeśli określona wartość jest prawidłowa dla tego obiektu; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="5bcba-452"><see langword="true" /> if the specified value is valid for this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bcba-453">Użyj parametru `context` , aby wyodrębnić dodatkowe informacje o środowisku, z którego ten konwerter jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="5bcba-453">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="5bcba-454">Ten parametr może być `null`, więc zawsze sprawdzaj.</span><span class="sxs-lookup"><span data-stu-id="5bcba-454">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="5bcba-455">Ponadto właściwości obiektu kontekstu mogą zwrócić `null`.</span><span class="sxs-lookup"><span data-stu-id="5bcba-455">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="5bcba-456"><xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> Począwszy od [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] <xref:System.ComponentModel.TypeConverter.IsValid%2A> , Metoda<xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> przechwytuje wyjątki z metod i.</span><span class="sxs-lookup"><span data-stu-id="5bcba-456">Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods.</span></span> <span data-ttu-id="5bcba-457">Jeśli typ wartości wejściowej powoduje <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> zwrócenie `false`lub jeśli wartość wejściowa powoduje <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> wygenerowanie wyjątku, <xref:System.ComponentModel.TypeConverter.IsValid%2A> Metoda zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="5bcba-457">If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="5bcba-458">Aby włączyć starsze zachowanie, Wstaw następujące wiersze do pliku konfiguracji aplikacji, na przykład Application1. exe. config.</span><span class="sxs-lookup"><span data-stu-id="5bcba-458">To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.</span></span>  
  
```xml  
<configuration>  
  <appSettings>  
    <add key="UseCompatibleTypeConverterBehavior" value="true" />  
  </appSettings>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="5bcba-459">Aby zapoznać się z przykładem tej funkcji, <xref:System.ComponentModel.TypeConverter> zobacz Klasa.</span><span class="sxs-lookup"><span data-stu-id="5bcba-459">For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="5bcba-460">Zastąp tę metodę, jeśli typ, który ma zostać przekonwertowany, obsługuje wartości standardowe, które można zweryfikować.</span><span class="sxs-lookup"><span data-stu-id="5bcba-460">Override this method if the type you want to convert supports standard values that can be validated.</span></span>  
  
<span data-ttu-id="5bcba-461">Metoda jest używana do walidacji wartości w typie, a nie do określenia, czy <paramref name="value" /> można ją przekonwertować na dany typ. <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /></span><span class="sxs-lookup"><span data-stu-id="5bcba-461">The <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> method is used to validate a value within the type rather than to determine if <paramref name="value" /> can be converted to the given type.</span></span> <span data-ttu-id="5bcba-462">Na przykład może <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> służyć do określenia, czy dana wartość jest prawidłowa dla typu wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="5bcba-462">For example, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> can be used to determine if a given value is valid for an enumeration type.</span></span> <span data-ttu-id="5bcba-463">Aby zapoznać się z przykładem, zobacz <see cref="T:System.ComponentModel.EnumConverter" />.</span><span class="sxs-lookup"><span data-stu-id="5bcba-463">For an example, see <see cref="T:System.ComponentModel.EnumConverter" />.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.ComponentModel.EnumConverter" />
      </Docs>
    </Member>
    <Member MemberName="SortProperties">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.PropertyDescriptorCollection SortProperties (System.ComponentModel.PropertyDescriptorCollection props, string[] names);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.PropertyDescriptorCollection SortProperties(class System.ComponentModel.PropertyDescriptorCollection props, string[] names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Function SortProperties (props As PropertyDescriptorCollection, names As String()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ SortProperties(System::ComponentModel::PropertyDescriptorCollection ^ props, cli::array &lt;System::String ^&gt; ^ names);" />
      <MemberSignature Language="F#" Value="member this.SortProperties : System.ComponentModel.PropertyDescriptorCollection * string[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="typeConverter.SortProperties (props, names)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="props" Type="System.ComponentModel.PropertyDescriptorCollection" />
        <Parameter Name="names" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="props"><span data-ttu-id="5bcba-464">Obiekt <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> , który ma właściwości do sortowania.</span><span class="sxs-lookup"><span data-stu-id="5bcba-464">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that has the properties to sort.</span></span></param>
        <param name="names"><span data-ttu-id="5bcba-465">Tablica nazw w kolejności, w której właściwości mają być wyświetlane w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="5bcba-465">An array of names in the order you want the properties to appear in the collection.</span></span></param>
        <summary><span data-ttu-id="5bcba-466">Sortuje kolekcję właściwości.</span><span class="sxs-lookup"><span data-stu-id="5bcba-466">Sorts a collection of properties.</span></span></summary>
        <returns><span data-ttu-id="5bcba-467">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> , który zawiera posortowane właściwości.</span><span class="sxs-lookup"><span data-stu-id="5bcba-467">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the sorted properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bcba-468">Wszystkie właściwości w kolekcji, które nie znajdują się jeszcze w tablicy nazw, są dodawane alfabetycznie do końca.</span><span class="sxs-lookup"><span data-stu-id="5bcba-468">All properties in the collection that are not already in the array of names are added alphabetically to the end.</span></span> <span data-ttu-id="5bcba-469">Jeśli parametr jest pustą tablicą lub `null`, wszystkie właściwości w kolekcji są sortowane alfabetycznie. `names`</span><span class="sxs-lookup"><span data-stu-id="5bcba-469">If the `names` parameter is an empty array or `null`, all the properties in the collection are sorted alphabetically.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
  </Members>
</Type>
