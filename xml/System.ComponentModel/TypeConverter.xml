<Type Name="TypeConverter" FullName="System.ComponentModel.TypeConverter">
  <TypeSignature Language="C#" Value="public class TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7249c-101">Umożliwia ujednoliconego konwersji typów wartości do innych typów, a także do uzyskiwania dostępu do wartości domyślnych i podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="7249c-101">Provides a unified way of converting types of values to other types, as well as for accessing standard values and subproperties.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7249c-102">Najczęściej spotykanym typem konwertera jest taki, który konwertuje do i z reprezentacji tekstowej.</span><span class="sxs-lookup"><span data-stu-id="7249c-102">The most common type of converter is one that converts to and from a text representation.</span></span> <span data-ttu-id="7249c-103">Konwerter typu klasy jest powiązany z klasy z <xref:System.ComponentModel.TypeConverterAttribute>.</span><span class="sxs-lookup"><span data-stu-id="7249c-103">The type converter for a class is bound to the class with a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="7249c-104">Jeśli ten atrybut nie zostanie zastąpiona, wszystkie klasy, które dziedziczą z tej klasy używania tego samego typu jako klasy podstawowej.</span><span class="sxs-lookup"><span data-stu-id="7249c-104">Unless this attribute is overridden, all classes that inherit from this class use the same type converter as the base class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7249c-105">Do celów system typu ogólnego nie konwertera typów bezpośredni dostęp.</span><span class="sxs-lookup"><span data-stu-id="7249c-105">For general type system purposes, do not access a type converter directly.</span></span> <span data-ttu-id="7249c-106">Zamiast tego dostępu przy użyciu odpowiedniego konwertera <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="7249c-106">Instead, access the appropriate converter by using <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="7249c-107">Aby uzyskać więcej informacji zobacz przykładowy kod podany.</span><span class="sxs-lookup"><span data-stu-id="7249c-107">For more information, see the code examples provided.</span></span>  
  
 <span data-ttu-id="7249c-108">**Uwaga** do celów XAML procesora XAML wyszukuje <xref:System.ComponentModel.TypeConverterAttribute> bezpośrednio, zamiast pośrednictwa <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="7249c-108">**Note** For XAML purposes, a XAML processor searches for the <xref:System.ComponentModel.TypeConverterAttribute> directly, instead of going through <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="7249c-109">W przypadkach, w którym ma <xref:System.ComponentModel.TypeDescriptor> wystąpienia z kodu lub której utworzono wystąpienie udostępnione na platformie WPF zasobów, jest możliwość utworzenia go bezpośrednio, bez odwołania do <xref:System.ComponentModel.TypeDescriptor> lub inny system odbicie i typ obsługi.</span><span class="sxs-lookup"><span data-stu-id="7249c-109">For cases where you do want a <xref:System.ComponentModel.TypeDescriptor> instance from code, or where you create a shared instance in WPF resources, it is acceptable to construct it directly without referencing <xref:System.ComponentModel.TypeDescriptor> or other reflection and type system support.</span></span>  
  
 <span data-ttu-id="7249c-110">Klasy wyprowadzone z <xref:System.ComponentModel.TypeConverter> są często określany jako część jak procesor XAML konwertuje wartość atrybutu lub inicjowania znaczników (która jest z założenia ciągu) i generuje obiekt do reprezentacji czasu wykonywania.</span><span class="sxs-lookup"><span data-stu-id="7249c-110">Classes derived from <xref:System.ComponentModel.TypeConverter> are often referenced as part of how a XAML processor converts an attribute or initialization text value from markup (which is inherently a string) and generates an object for a run-time representation.</span></span> <span data-ttu-id="7249c-111">Implementowanie autorów typu niestandardowego, które mają być zwykle obsługuje zachowanie konwersji typu dla XAML <xref:System.ComponentModel.TypeConverter> klasy, która obsługuje własny unikatowy `ConvertFrom` zachowanie z ciągu.</span><span class="sxs-lookup"><span data-stu-id="7249c-111">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports their own unique `ConvertFrom` behavior from a string.</span></span> <span data-ttu-id="7249c-112">To zachowanie umożliwia konwersji typu z podanego ciągu jako wartość atrybutu XAML i udostępnia procesora XAML z obsługą potrzebne do utworzenia obiektu z ciągu, tak, aby obiekt można wyprodukować na wykresie obiektu przeanalizowany.</span><span class="sxs-lookup"><span data-stu-id="7249c-112">This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.</span></span> <span data-ttu-id="7249c-113">Niestandardowe typy lub elementy członkowskie typów niestandardowych są wskazywane przez stosowanie <xref:System.ComponentModel.TypeConverterAttribute> do definicji z atrybutem odwołuje się do niestandardowego <xref:System.ComponentModel.TypeConverter> implementacji.</span><span class="sxs-lookup"><span data-stu-id="7249c-113">Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.</span></span> <span data-ttu-id="7249c-114">Aby uzyskać więcej informacji, zobacz [typy konwerterów dla przeglądu XAML](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7249c-114">For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7249c-115">Poniższy przykład kodu pokazuje, jak utworzyć wystąpienia typu konwertera i powiązać go z klasy.</span><span class="sxs-lookup"><span data-stu-id="7249c-115">The following code example shows how to create an instance of a type converter and bind it to a class.</span></span> <span data-ttu-id="7249c-116">Klasa implementacji konwertera `MyClassConverter`, musi dziedziczyć z <xref:System.ComponentModel.TypeConverter> klasy.</span><span class="sxs-lookup"><span data-stu-id="7249c-116">The class implementing the converter, `MyClassConverter`, must inherit from the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TypeConverter Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#1)]
 [!code-vb[Classic TypeConverter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#1)]  
  
 <span data-ttu-id="7249c-117">Gdy właściwość, która ma wyliczenie, sprawdź, czy przed ustawieniem właściwości jest prawidłową wartością wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="7249c-117">When you have a property that has an enumeration, check to see whether an enumeration value is valid before setting the property.</span></span> <span data-ttu-id="7249c-118">W następnym przykładzie kodu wymaga, aby wyliczenie o nazwie `MyPropertyEnum` został zadeklarowany.</span><span class="sxs-lookup"><span data-stu-id="7249c-118">The next code example requires that an enumeration called `MyPropertyEnum` has been declared.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#2)]
 [!code-csharp[Classic TypeConverter Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#2)]
 [!code-vb[Classic TypeConverter Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#2)]  
  
 <span data-ttu-id="7249c-119">Inny wspólnej użycia konwertera typu jest aby przekonwertować obiekt na ciąg.</span><span class="sxs-lookup"><span data-stu-id="7249c-119">Another common type converter usage is to convert an object to a string.</span></span> <span data-ttu-id="7249c-120">Poniższy przykład kodu do drukowania nazwę <xref:System.Drawing.Color> przechowywana w zmiennej `c`.</span><span class="sxs-lookup"><span data-stu-id="7249c-120">The following code example prints out the name of the <xref:System.Drawing.Color> stored in the variable `c`.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#3)]
 [!code-csharp[Classic TypeConverter Example#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#3)]
 [!code-vb[Classic TypeConverter Example#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#3)]  
  
 <span data-ttu-id="7249c-121">Umożliwia także konwertera typów można przekonwertować wartości na podstawie jego nazwy, jak pokazano w następnym przykładzie kodu.</span><span class="sxs-lookup"><span data-stu-id="7249c-121">You can also use a type converter to convert a value from its name, as shown in the next code example.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#4](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#4)]
 [!code-csharp[Classic TypeConverter Example#4](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#4)]
 [!code-vb[Classic TypeConverter Example#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#4)]  
  
 <span data-ttu-id="7249c-122">W poniższym przykładzie kodu można użyć konwertera typów wydrukować zestaw standardowych wartości, które obsługuje obiektu.</span><span class="sxs-lookup"><span data-stu-id="7249c-122">In the following code example, you can use a type converter to print out the set of standard values that the object supports.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#5](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#5)]
 [!code-csharp[Classic TypeConverter Example#5](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#5)]
 [!code-vb[Classic TypeConverter Example#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#5)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="7249c-123">Dziedzicz <see cref="T:System.ComponentModel.TypeConverter" /> do zaimplementowania wymagań konwersji.</span><span class="sxs-lookup"><span data-stu-id="7249c-123">Inherit from <see cref="T:System.ComponentModel.TypeConverter" /> to implement your own conversion requirements.</span></span> <span data-ttu-id="7249c-124">Przy dziedziczeniu z tej klasy można zastąpić następujących metod:</span><span class="sxs-lookup"><span data-stu-id="7249c-124">When you inherit from this class, you can override the following methods:</span></span>  
  
-   <span data-ttu-id="7249c-125">Aby obsługiwać konwersji typu niestandardowego, należy zastąpić <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />, i <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="7249c-125">To support custom type conversion, override the <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />, and <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" /> methods.</span></span>  
  
-   <span data-ttu-id="7249c-126">Aby dokonać konwersji typów, które należy ponownie utworzyć obiekt, aby zmienić wartość, należy zastąpić <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> i <see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" /> metody.</span><span class="sxs-lookup"><span data-stu-id="7249c-126">To convert types that must re-create the object to change its value, override the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> and <see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" /> methods.</span></span>  
  
-   <span data-ttu-id="7249c-127">Aby dokonać konwersji typów, które obsługują właściwości, należy zastąpić <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> i <see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" /> metody.</span><span class="sxs-lookup"><span data-stu-id="7249c-127">To convert types that support properties, override the <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> and <see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" /> methods.</span></span> <span data-ttu-id="7249c-128">Jeśli klasa konwertowania nie ma właściwości oraz należy wdrożyć właściwości, można użyć <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> klasy jako podstawa Implementowanie deskryptorów właściwości.</span><span class="sxs-lookup"><span data-stu-id="7249c-128">If the class you are converting does not have properties, and you need to implement properties, you can use the <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> class as a base for implementing the property descriptors.</span></span> <span data-ttu-id="7249c-129">Przy dziedziczeniu z <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />, konieczne jest przesłonięcie <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> i <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="7249c-129">When you inherit from <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />, you must override the <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> and <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> methods.</span></span>  
  
-   <span data-ttu-id="7249c-130">Aby dokonać konwersji typów, które obsługują standard wartości, należy zastąpić <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" /> i <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="7249c-130">To convert types that support standard values, override the <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" /> and <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> methods.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="7249c-131">Z typu pochodnego może być oznaczona jako <see langword="internal" /> lub <see langword="private" />, ale wystąpienie tego typu mogą być tworzone za pomocą <see cref="T:System.ComponentModel.TypeDescriptor" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="7249c-131">Your derived type might be marked as <see langword="internal" /> or <see langword="private" />, but an instance of your type can be created with the <see cref="T:System.ComponentModel.TypeDescriptor" /> class.</span></span> <span data-ttu-id="7249c-132">Nie zapisuj niezabezpieczonego kodu przejmując wywołującego jest zaufany.</span><span class="sxs-lookup"><span data-stu-id="7249c-132">Do not write insecure code by assuming the caller is trusted.</span></span> <span data-ttu-id="7249c-133">Załóżmy zamiast wywołań może utworzyć wystąpienia danego typu w częściowej relacji zaufania.</span><span class="sxs-lookup"><span data-stu-id="7249c-133">Assume instead that callers might create instances of your type in partial trust.</span></span>  
  
</para></block>  
  
 <span data-ttu-id="7249c-134">Aby uzyskać więcej informacji na temat typy konwerterów dla celów ogólne (z systemem innym niż XAML), zobacz [porady: implementacji konwertera typów](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56) lub [uogólniony konwersji typu](http://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada).</span><span class="sxs-lookup"><span data-stu-id="7249c-134">For more information about type converters for general (non-XAML) purposes, see [How to: Implement a Type Converter](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56) or [Generalized Type Conversion](http://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada).</span></span></para>
    </block>
    <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
    <altmember cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />
    <altmember cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7249c-135">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.TypeConverter" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="7249c-135">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvertFrom">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7249c-136">Zwraca czy ten konwerter można przekonwertować jednego typu obiektu na typ tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="7249c-136">Returns whether this converter can convert an object of one type to the type of this converter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public bool CanConvertFrom (Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConvertFrom(class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConvertFrom (sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConvertFrom(Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="sourceType"><span data-ttu-id="7249c-137">A <see cref="T:System.Type" /> reprezentujący chcesz konwertować z typu.</span><span class="sxs-lookup"><span data-stu-id="7249c-137">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span></span></param>
        <summary><span data-ttu-id="7249c-138">Zwraca czy ten konwerter można konwertować obiekt danego typu na typ tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="7249c-138">Returns whether this converter can convert an object of the given type to the type of this converter.</span></span></summary>
        <returns>
          <span data-ttu-id="7249c-139"><see langword="true" /> Jeśli ten konwerter można dokonać konwersji; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7249c-139"><see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7249c-140">Zgodnie z implementacją tej klasy, ta metoda zawsze zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="7249c-140">As implemented in this class, this method always returns `false`.</span></span> <span data-ttu-id="7249c-141">Nigdy nie zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="7249c-141">It never returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="7249c-142"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</span><span class="sxs-lookup"><span data-stu-id="7249c-142">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="sourceType"><span data-ttu-id="7249c-143">A <see cref="T:System.Type" /> reprezentujący chcesz konwertować z typu.</span><span class="sxs-lookup"><span data-stu-id="7249c-143">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span></span></param>
        <summary><span data-ttu-id="7249c-144">Zwraca czy ten konwerter można konwertować obiekt danego typu na typ tego konwertera, używając określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="7249c-144">Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.</span></span></summary>
        <returns>
          <span data-ttu-id="7249c-145"><see langword="true" /> Jeśli ten konwerter można dokonać konwersji; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7249c-145"><see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7249c-146">Zgodnie z implementacją tej klasy, ta metoda zwraca `false`, chyba że `sourceType` jest <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="7249c-146">As implemented in this class, this method returns `false`, unless `sourceType` is an <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="7249c-147">Przesłonić tę metodę w celu zapewnienia wymagań konwersji.</span><span class="sxs-lookup"><span data-stu-id="7249c-147">Override this method to provide your own conversion requirements.</span></span>  
  
 <span data-ttu-id="7249c-148">Użyj <paramref name="context" /> parametr, aby wyodrębnić dodatkowe informacje o środowisku, z którego jest wywoływany tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="7249c-148">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="7249c-149">Ten parametr może być <see langword="null" />, więc zawsze sprawdź go.</span><span class="sxs-lookup"><span data-stu-id="7249c-149">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="7249c-150">Ponadto może zwrócić właściwości obiektu context <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7249c-150">Also, properties on the context object can return <see langword="null" />.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvertTo">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7249c-151">Zwraca czy ten konwerter można przekonwertować obiektu określonego typu.</span><span class="sxs-lookup"><span data-stu-id="7249c-151">Returns whether this converter can convert the object to the specified type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public bool CanConvertTo (Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConvertTo(class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConvertTo (destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConvertTo(Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="destinationType"><span data-ttu-id="7249c-152">A <see cref="T:System.Type" /> reprezentujący typ, który ma zostać przekonwertowany na.</span><span class="sxs-lookup"><span data-stu-id="7249c-152">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span></span></param>
        <summary><span data-ttu-id="7249c-153">Zwraca czy ten konwerter można przekonwertować obiektu określonego typu.</span><span class="sxs-lookup"><span data-stu-id="7249c-153">Returns whether this converter can convert the object to the specified type.</span></span></summary>
        <returns>
          <span data-ttu-id="7249c-154"><see langword="true" /> Jeśli ten konwerter można dokonać konwersji; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7249c-154"><see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7249c-155">Jeśli `destinationType` jest ciągiem Domyślna implementacja <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> zawsze zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="7249c-155">If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="7249c-156"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</span><span class="sxs-lookup"><span data-stu-id="7249c-156">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="destinationType"><span data-ttu-id="7249c-157">A <see cref="T:System.Type" /> reprezentujący typ, który ma zostać przekonwertowany na.</span><span class="sxs-lookup"><span data-stu-id="7249c-157">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span></span></param>
        <summary><span data-ttu-id="7249c-158">Zwraca czy ten konwerter przekonwertować obiekt na określony typ, używając określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="7249c-158">Returns whether this converter can convert the object to the specified type, using the specified context.</span></span></summary>
        <returns>
          <span data-ttu-id="7249c-159"><see langword="true" /> Jeśli ten konwerter można dokonać konwersji; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7249c-159"><see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7249c-160">Użyj `context` parametr, aby wyodrębnić dodatkowe informacje o środowisku, z którego jest wywoływany tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="7249c-160">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="7249c-161">Ten parametr może być `null`, więc zawsze sprawdź go.</span><span class="sxs-lookup"><span data-stu-id="7249c-161">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="7249c-162">Ponadto może zwrócić właściwości obiektu context `null`.</span><span class="sxs-lookup"><span data-stu-id="7249c-162">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="7249c-163">Jeśli `destinationType` jest ciągiem Domyślna implementacja <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> zawsze zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="7249c-163">If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="7249c-164">Przesłonić tę metodę w celu zapewnienia wymagań konwersji.</span><span class="sxs-lookup"><span data-stu-id="7249c-164">Override this method to provide your own conversion requirements.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFrom">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7249c-165">Konwertuje podaną wartość do typu tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="7249c-165">Converts the given value to the type of this converter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public object ConvertFrom (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFrom(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFrom (value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFrom(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7249c-166"><see cref="T:System.Object" /> Do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="7249c-166">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="7249c-167">Konwertuje podaną wartość do typu tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="7249c-167">Converts the given value to the type of this converter.</span></span></summary>
        <returns><span data-ttu-id="7249c-168"><see cref="T:System.Object" /> Reprezentujący wartość przekonwertowana.</span><span class="sxs-lookup"><span data-stu-id="7249c-168">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7249c-169">Nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="7249c-169">The conversion cannot be performed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public virtual object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="7249c-170"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</span><span class="sxs-lookup"><span data-stu-id="7249c-170">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="7249c-171"><see cref="T:System.Globalization.CultureInfo" /> Do użycia jako bieżącej kultury.</span><span class="sxs-lookup"><span data-stu-id="7249c-171">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</span></span></param>
        <param name="value"><span data-ttu-id="7249c-172"><see cref="T:System.Object" /> Do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="7249c-172">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="7249c-173">Konwertuje dany obiekt typu tego konwertera, przy użyciu określonego kontekstu i kultury informacji.</span><span class="sxs-lookup"><span data-stu-id="7249c-173">Converts the given object to the type of this converter, using the specified context and culture information.</span></span></summary>
        <returns><span data-ttu-id="7249c-174"><see cref="T:System.Object" /> Reprezentujący wartość przekonwertowana.</span><span class="sxs-lookup"><span data-stu-id="7249c-174">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7249c-175">Implementowanie autorów typu niestandardowego, które mają być zwykle obsługuje zachowanie konwersji typu dla XAML <xref:System.ComponentModel.TypeConverter> klasy, która obsługuje <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> zachowanie z ciągu.</span><span class="sxs-lookup"><span data-stu-id="7249c-175">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string.</span></span> <span data-ttu-id="7249c-176">To zachowanie umożliwia konwersji typu z podanego ciągu jako wartość atrybutu XAML i udostępnia procesora XAML z obsługą potrzebne do utworzenia obiektu z ciągu, tak, aby obiekt można wyprodukować na wykresie obiektu przeanalizowany.</span><span class="sxs-lookup"><span data-stu-id="7249c-176">This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.</span></span> <span data-ttu-id="7249c-177">Niestandardowe typy lub elementy członkowskie typów niestandardowych są wskazywane przez stosowanie <xref:System.ComponentModel.TypeConverterAttribute> do definicji z atrybutem odwołuje się do niestandardowego <xref:System.ComponentModel.TypeConverter> implementacji.</span><span class="sxs-lookup"><span data-stu-id="7249c-177">Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.</span></span>  
  
 <span data-ttu-id="7249c-178">Do celów XAML, zwykle niepodania rozgałęziania implementacje na podstawie `culture`.</span><span class="sxs-lookup"><span data-stu-id="7249c-178">For XAML purposes, you do not typically provide branching implementations based on `culture`.</span></span> <span data-ttu-id="7249c-179">To dlatego XAML została wstępnie skompilowana w kontekście środowisko rozwoju i informacje specyficzne dla kultury dla środowiska uruchomieniowego języka XAML nie jest odpowiednia do konwersji typu XAML.</span><span class="sxs-lookup"><span data-stu-id="7249c-179">This is because XAML is precompiled in a development environment context, and culture-specific information for runtime XAML is not relevant for XAML type conversion.</span></span> <span data-ttu-id="7249c-180">Aby uzyskać więcej informacji, zobacz [typy konwerterów dla przeglądu XAML](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7249c-180">For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7249c-181">Nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="7249c-181">The conversion cannot be performed.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="7249c-182">Przesłonić tę metodę w celu zapewnienia wymagań konwersji.</span><span class="sxs-lookup"><span data-stu-id="7249c-182">Override this method to provide your own conversion requirements.</span></span>  
  
 <span data-ttu-id="7249c-183">Użyj <paramref name="context" /> parametr, aby wyodrębnić dodatkowe informacje o środowisku, z którego jest wywoływany tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="7249c-183">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="7249c-184">Ten parametr może być <see langword="null" />, więc zawsze sprawdź go.</span><span class="sxs-lookup"><span data-stu-id="7249c-184">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="7249c-185">Ponadto może zwrócić właściwości obiektu context <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7249c-185">Also, properties on the context object can return <see langword="null" />.</span></span>  
  
 <span data-ttu-id="7249c-186">Implementacja wzorców konwertery typu, które są używane do obsługi języka XAML i niestandardowe typy, zobacz [typy konwerterów dla przeglądu XAML](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7249c-186">For implementation patterns for type converters that are used to support XAML and custom types, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFromInvariantString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7249c-187">Konwertuje wartość na typ tego konwertera, użyta Niezmienna kultura.</span><span class="sxs-lookup"><span data-stu-id="7249c-187">Converts the value to a type of this converter, using the invariant culture.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFromInvariantString">
      <MemberSignature Language="C#" Value="public object ConvertFromInvariantString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromInvariantString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromInvariantString (text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromInvariantString(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="7249c-188"><see cref="T:System.String" /> Do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="7249c-188">The <see cref="T:System.String" /> to convert.</span></span></param>
        <summary><span data-ttu-id="7249c-189">Konwertuje dany ciąg znaków na typ tego konwertera, użyta Niezmienna kultura.</span><span class="sxs-lookup"><span data-stu-id="7249c-189">Converts the given string to the type of this converter, using the invariant culture.</span></span></summary>
        <returns><span data-ttu-id="7249c-190"><see cref="T:System.Object" /> Reprezentujący skonwertowany tekstu.</span><span class="sxs-lookup"><span data-stu-id="7249c-190">An <see cref="T:System.Object" /> that represents the converted text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7249c-191">Domyślna implementacja zawsze zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="7249c-191">The default implementation always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7249c-192">Nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="7249c-192">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromInvariantString">
      <MemberSignature Language="C#" Value="public object ConvertFromInvariantString (System.ComponentModel.ITypeDescriptorContext context, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromInvariantString(class System.ComponentModel.ITypeDescriptorContext context, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromInvariantString (context As ITypeDescriptorContext, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromInvariantString(System::ComponentModel::ITypeDescriptorContext ^ context, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="7249c-193"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</span><span class="sxs-lookup"><span data-stu-id="7249c-193">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="text"><span data-ttu-id="7249c-194"><see cref="T:System.String" /> Do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="7249c-194">The <see cref="T:System.String" /> to convert.</span></span></param>
        <summary><span data-ttu-id="7249c-195">Konwertuje dany ciąg znaków na typ tego konwertera, przy użyciu Niezmienna kultura i określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="7249c-195">Converts the given string to the type of this converter, using the invariant culture and the specified context.</span></span></summary>
        <returns><span data-ttu-id="7249c-196"><see cref="T:System.Object" /> Reprezentujący skonwertowany tekstu.</span><span class="sxs-lookup"><span data-stu-id="7249c-196">An <see cref="T:System.Object" /> that represents the converted text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7249c-197">Zgłoszony wyjątek, jeśli nie można przekonwertować ciągu odpowiedni obiekt.</span><span class="sxs-lookup"><span data-stu-id="7249c-197">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="7249c-198">Domyślna implementacja zawsze zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="7249c-198">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="7249c-199">Użyj `context` parametr, aby wyodrębnić dodatkowe informacje o środowisku, z którego jest wywoływany tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="7249c-199">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="7249c-200">Ten parametr może być `null`, więc zawsze sprawdź go.</span><span class="sxs-lookup"><span data-stu-id="7249c-200">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="7249c-201">Ponadto może zwrócić właściwości obiektu context `null`.</span><span class="sxs-lookup"><span data-stu-id="7249c-201">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7249c-202">Nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="7249c-202">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFromString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7249c-203">Konwertuje określony tekst do obiektu.</span><span class="sxs-lookup"><span data-stu-id="7249c-203">Converts the specified text to an object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="7249c-204">Reprezentacja tekstowa typu obiektu do skonwertowania.</span><span class="sxs-lookup"><span data-stu-id="7249c-204">The text representation of the object to convert.</span></span></param>
        <summary><span data-ttu-id="7249c-205">Konwertuje określony tekst do obiektu.</span><span class="sxs-lookup"><span data-stu-id="7249c-205">Converts the specified text to an object.</span></span></summary>
        <returns><span data-ttu-id="7249c-206"><see cref="T:System.Object" /> Reprezentujący skonwertowany tekstu.</span><span class="sxs-lookup"><span data-stu-id="7249c-206">An <see cref="T:System.Object" /> that represents the converted text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7249c-207">Domyślna implementacja zawsze zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="7249c-207">The default implementation always returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7249c-208">Na przykład tej funkcji, zobacz <xref:System.ComponentModel.TypeConverter> klasy.</span><span class="sxs-lookup"><span data-stu-id="7249c-208">For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7249c-209">Nie można przekonwertować ciągu na odpowiedni obiekt.</span><span class="sxs-lookup"><span data-stu-id="7249c-209">The string cannot be converted into the appropriate object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(class System.ComponentModel.ITypeDescriptorContext context, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (context As ITypeDescriptorContext, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::ComponentModel::ITypeDescriptorContext ^ context, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="7249c-210"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</span><span class="sxs-lookup"><span data-stu-id="7249c-210">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="text"><span data-ttu-id="7249c-211"><see cref="T:System.String" /> Do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="7249c-211">The <see cref="T:System.String" /> to convert.</span></span></param>
        <summary><span data-ttu-id="7249c-212">Konwertuje tekst danego obiektu, przy użyciu określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="7249c-212">Converts the given text to an object, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="7249c-213"><see cref="T:System.Object" /> Reprezentujący skonwertowany tekstu.</span><span class="sxs-lookup"><span data-stu-id="7249c-213">An <see cref="T:System.Object" /> that represents the converted text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7249c-214">Zgłoszony wyjątek, jeśli nie można przekonwertować ciągu odpowiedni obiekt.</span><span class="sxs-lookup"><span data-stu-id="7249c-214">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="7249c-215">Domyślna implementacja zawsze zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="7249c-215">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="7249c-216">Użyj `context` parametr, aby wyodrębnić dodatkowe informacje o środowisku, z którego jest wywoływany tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="7249c-216">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="7249c-217">Ten parametr może być `null`, więc zawsze sprawdź go.</span><span class="sxs-lookup"><span data-stu-id="7249c-217">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="7249c-218">Ponadto może zwrócić właściwości obiektu context `null`.</span><span class="sxs-lookup"><span data-stu-id="7249c-218">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7249c-219">Nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="7249c-219">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (context As ITypeDescriptorContext, culture As CultureInfo, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="7249c-220"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</span><span class="sxs-lookup"><span data-stu-id="7249c-220">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="7249c-221">A <see cref="T:System.Globalization.CultureInfo" />.</span><span class="sxs-lookup"><span data-stu-id="7249c-221">A <see cref="T:System.Globalization.CultureInfo" />.</span></span> <span data-ttu-id="7249c-222">Jeśli <see langword="null" /> jest przekazywany bieżącego zakłada, że kultury.</span><span class="sxs-lookup"><span data-stu-id="7249c-222">If <see langword="null" /> is passed, the current culture is assumed.</span></span></param>
        <param name="text"><span data-ttu-id="7249c-223"><see cref="T:System.String" /> Do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="7249c-223">The <see cref="T:System.String" /> to convert.</span></span></param>
        <summary><span data-ttu-id="7249c-224">Konwertuje tekst danego obiektu, przy użyciu określonego kontekstu i kultury informacji.</span><span class="sxs-lookup"><span data-stu-id="7249c-224">Converts the given text to an object, using the specified context and culture information.</span></span></summary>
        <returns><span data-ttu-id="7249c-225"><see cref="T:System.Object" /> Reprezentujący skonwertowany tekstu.</span><span class="sxs-lookup"><span data-stu-id="7249c-225">An <see cref="T:System.Object" /> that represents the converted text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7249c-226">Zgłoszony wyjątek, jeśli nie można przekonwertować ciągu odpowiedni obiekt.</span><span class="sxs-lookup"><span data-stu-id="7249c-226">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="7249c-227">Domyślna implementacja zawsze zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="7249c-227">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="7249c-228">Użyj `context` parametr, aby wyodrębnić dodatkowe informacje o środowisku, z którego jest wywoływany tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="7249c-228">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="7249c-229">Ten parametr może być `null`, więc zawsze sprawdź go.</span><span class="sxs-lookup"><span data-stu-id="7249c-229">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="7249c-230">Ponadto może zwrócić właściwości obiektu context `null`.</span><span class="sxs-lookup"><span data-stu-id="7249c-230">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7249c-231">Nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="7249c-231">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTo">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7249c-232">Konwertuje obiekt podanej wartości do określonego typu.</span><span class="sxs-lookup"><span data-stu-id="7249c-232">Converts the given value object to the specified type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public object ConvertTo (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertTo(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertTo (value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertTo(System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7249c-233"><see cref="T:System.Object" /> Do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="7249c-233">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="7249c-234"><see cref="T:System.Type" /> Przekonwertować <c>wartość</c> parametru.</span><span class="sxs-lookup"><span data-stu-id="7249c-234">The <see cref="T:System.Type" /> to convert the <c>value</c> parameter to.</span></span></param>
        <summary><span data-ttu-id="7249c-235">Konwertuje obiekt podanej wartości na określony typ, na podstawie podanych argumentów.</span><span class="sxs-lookup"><span data-stu-id="7249c-235">Converts the given value object to the specified type, using the arguments.</span></span></summary>
        <returns><span data-ttu-id="7249c-236"><see cref="T:System.Object" /> Reprezentujący wartość przekonwertowana.</span><span class="sxs-lookup"><span data-stu-id="7249c-236">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7249c-237">Najczęściej spotykanym typem do przekonwertowania do i z jest obiektem ciągu.</span><span class="sxs-lookup"><span data-stu-id="7249c-237">The most common type to convert to and from is a string object.</span></span> <span data-ttu-id="7249c-238">Ta implementacja wywołuje <xref:System.Object.ToString%2A> dla obiektu, jeśli obiekt jest prawidłowy, a jeśli typ docelowy jest ciągiem.</span><span class="sxs-lookup"><span data-stu-id="7249c-238">This implementation calls <xref:System.Object.ToString%2A> on the object, if the object is valid and if the destination type is a string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7249c-239"><paramref name="destinationType" /> Parametr jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7249c-239">The <paramref name="destinationType" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7249c-240">Nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="7249c-240">The conversion cannot be performed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public virtual object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="7249c-241"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</span><span class="sxs-lookup"><span data-stu-id="7249c-241">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="7249c-242">A <see cref="T:System.Globalization.CultureInfo" />.</span><span class="sxs-lookup"><span data-stu-id="7249c-242">A <see cref="T:System.Globalization.CultureInfo" />.</span></span> <span data-ttu-id="7249c-243">Jeśli <see langword="null" /> jest przekazywany bieżącego zakłada, że kultury.</span><span class="sxs-lookup"><span data-stu-id="7249c-243">If <see langword="null" /> is passed, the current culture is assumed.</span></span></param>
        <param name="value"><span data-ttu-id="7249c-244"><see cref="T:System.Object" /> Do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="7249c-244">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="7249c-245"><see cref="T:System.Type" /> Przekonwertować <c>wartość</c> parametru.</span><span class="sxs-lookup"><span data-stu-id="7249c-245">The <see cref="T:System.Type" /> to convert the <c>value</c> parameter to.</span></span></param>
        <summary><span data-ttu-id="7249c-246">Konwertuje obiekt podanej wartości na określony typ przy użyciu określonego kontekstu i kultury informacji.</span><span class="sxs-lookup"><span data-stu-id="7249c-246">Converts the given value object to the specified type, using the specified context and culture information.</span></span></summary>
        <returns><span data-ttu-id="7249c-247"><see cref="T:System.Object" /> Reprezentujący wartość przekonwertowana.</span><span class="sxs-lookup"><span data-stu-id="7249c-247">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7249c-248">Najbardziej typowych przekonwertować są do i z obiektem ciągu.</span><span class="sxs-lookup"><span data-stu-id="7249c-248">The most common types to convert are to and from a string object.</span></span> <span data-ttu-id="7249c-249">Ta implementacja wywołuje <xref:System.Object.ToString%2A> obiektu, jeśli obiekt jest prawidłowy, a jeśli typ docelowy jest ciągiem.</span><span class="sxs-lookup"><span data-stu-id="7249c-249">This implementation calls <xref:System.Object.ToString%2A> on the object if the object is valid and if the destination type is a string.</span></span>  
  
 <span data-ttu-id="7249c-250">Użyj `context` parametr, aby wyodrębnić dodatkowe informacje o środowisku, z którego jest wywoływany tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="7249c-250">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="7249c-251">Ten parametr może być `null`, więc zawsze sprawdź go.</span><span class="sxs-lookup"><span data-stu-id="7249c-251">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="7249c-252">Ponadto może zwrócić właściwości obiektu context `null`.</span><span class="sxs-lookup"><span data-stu-id="7249c-252">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="7249c-253">Implementowanie autorów typu niestandardowego, które mają być zwykle obsługuje zachowanie konwersji typu dla XAML <xref:System.ComponentModel.TypeConverter> klasy, która obsługuje <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> zachowanie z ciągu.</span><span class="sxs-lookup"><span data-stu-id="7249c-253">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string.</span></span> <span data-ttu-id="7249c-254">Te typy konwerterów może także implementować <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> do obsługi serializacji do języka XAML.</span><span class="sxs-lookup"><span data-stu-id="7249c-254">These type converters might also implement <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> to support serialization back to XAML.</span></span>  
  
 <span data-ttu-id="7249c-255">Niektóre scenariusze serializacji XAML nie może być zaadresowana odpowiednio z <xref:System.ComponentModel.TypeConverter> samodzielnie.</span><span class="sxs-lookup"><span data-stu-id="7249c-255">Some XAML serialization scenarios cannot be adequately addressed with <xref:System.ComponentModel.TypeConverter> alone.</span></span> <span data-ttu-id="7249c-256">W takich przypadkach może być konieczne również definiować <xref:System.Windows.Markup.ValueSerializer> obsługująca przypadków serializacji, które mogłyby w przeciwnym razie będą obsługiwane przez <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>.</span><span class="sxs-lookup"><span data-stu-id="7249c-256">In these cases, it may be necessary to also define a <xref:System.Windows.Markup.ValueSerializer> that handles the serialization cases that would otherwise be handled by <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>.</span></span> <span data-ttu-id="7249c-257">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Markup.ValueSerializer>.</span><span class="sxs-lookup"><span data-stu-id="7249c-257">For more information, see <xref:System.Windows.Markup.ValueSerializer>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7249c-258"><paramref name="destinationType" /> Parametr jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7249c-258">The <paramref name="destinationType" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7249c-259">Nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="7249c-259">The conversion cannot be performed.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="7249c-260">Przesłonić tę metodę w celu zapewnienia wymagań konwersji.</span><span class="sxs-lookup"><span data-stu-id="7249c-260">Override this method to provide your own conversion requirements.</span></span>  
  
 <span data-ttu-id="7249c-261">Implementacja wzorców konwertery typu, które są używane do obsługi języka XAML i niestandardowe typy, zobacz [typy konwerterów dla przeglądu XAML](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7249c-261">For implementation patterns for type converters that are used to support XAML and custom types, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToInvariantString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7249c-262">Konwertuje określoną wartość do reprezentacji w postaci ciągu niezmiennej kultury.</span><span class="sxs-lookup"><span data-stu-id="7249c-262">Converts the specified value to a culture-invariant string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToInvariantString">
      <MemberSignature Language="C#" Value="public string ConvertToInvariantString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToInvariantString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToInvariantString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToInvariantString(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7249c-263"><see cref="T:System.Object" /> Do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="7249c-263">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="7249c-264">Konwertuje określoną wartość do reprezentacji w postaci ciągu niezmiennej kultury.</span><span class="sxs-lookup"><span data-stu-id="7249c-264">Converts the specified value to a culture-invariant string representation.</span></span></summary>
        <returns><span data-ttu-id="7249c-265">A <see cref="T:System.String" /> reprezentujący wartość przekonwertowana.</span><span class="sxs-lookup"><span data-stu-id="7249c-265">A <see cref="T:System.String" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7249c-266">`context` Parametru można wyodrębnić dodatkowe informacje o środowisku, z którego jest wywoływany tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="7249c-266">The `context` parameter can be used to extract additional information about the environment from which this converter is being invoked.</span></span> <span data-ttu-id="7249c-267">Może to być `null`, dlatego należy zawsze sprawdzić.</span><span class="sxs-lookup"><span data-stu-id="7249c-267">This can be `null`, so always check.</span></span> <span data-ttu-id="7249c-268">Ponadto może zwrócić właściwości obiektu context `null`.</span><span class="sxs-lookup"><span data-stu-id="7249c-268">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="7249c-269">W zależności od implementacji programu formatującego wartości może być możliwe do przekazania do programu formatującego wartości do ponownego utworzenia wystąpienia obiektu zwracany ciąg.</span><span class="sxs-lookup"><span data-stu-id="7249c-269">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7249c-270">Nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="7249c-270">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToInvariantString">
      <MemberSignature Language="C#" Value="public string ConvertToInvariantString (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToInvariantString(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToInvariantString (context As ITypeDescriptorContext, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToInvariantString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="7249c-271"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</span><span class="sxs-lookup"><span data-stu-id="7249c-271">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="value"><span data-ttu-id="7249c-272"><see cref="T:System.Object" /> Do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="7249c-272">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="7249c-273">Konwertuje określoną wartość do reprezentacji w postaci ciągu niezmiennej kultury, używając określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="7249c-273">Converts the specified value to a culture-invariant string representation, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="7249c-274">A <see cref="T:System.String" /> reprezentujący wartość przekonwertowana.</span><span class="sxs-lookup"><span data-stu-id="7249c-274">A <see cref="T:System.String" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7249c-275">Użyj `context` parametr, aby wyodrębnić dodatkowe informacje o środowisku, z którego jest wywoływany tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="7249c-275">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="7249c-276">Ten parametr może być `null`, więc zawsze sprawdź go.</span><span class="sxs-lookup"><span data-stu-id="7249c-276">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="7249c-277">Ponadto może zwrócić właściwości obiektu context `null`.</span><span class="sxs-lookup"><span data-stu-id="7249c-277">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="7249c-278">W zależności od implementacji programu formatującego wartości może być możliwe do przekazania do programu formatującego wartości do ponownego utworzenia wystąpienia obiektu zwracany ciąg.</span><span class="sxs-lookup"><span data-stu-id="7249c-278">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7249c-279">Nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="7249c-279">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7249c-280">Konwertuje określoną wartość do reprezentacji w postaci ciągu.</span><span class="sxs-lookup"><span data-stu-id="7249c-280">Converts the specified value to a string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7249c-281"><see cref="T:System.Object" /> Do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="7249c-281">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="7249c-282">Konwertuje określoną wartość do reprezentacji w postaci ciągu.</span><span class="sxs-lookup"><span data-stu-id="7249c-282">Converts the specified value to a string representation.</span></span></summary>
        <returns><span data-ttu-id="7249c-283"><see cref="T:System.Object" /> Reprezentujący wartość przekonwertowana.</span><span class="sxs-lookup"><span data-stu-id="7249c-283">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7249c-284">W zależności od implementacji programu formatującego wartości może być możliwe do przekazania do programu formatującego wartości do ponownego utworzenia wystąpienia obiektu zwracany ciąg.</span><span class="sxs-lookup"><span data-stu-id="7249c-284">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7249c-285">Na przykład dla tej funkcji, zobacz <xref:System.ComponentModel.TypeConverter> klasy.</span><span class="sxs-lookup"><span data-stu-id="7249c-285">For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7249c-286">Nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="7249c-286">The conversion cannot be performed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (context As ITypeDescriptorContext, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="7249c-287"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</span><span class="sxs-lookup"><span data-stu-id="7249c-287">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="value"><span data-ttu-id="7249c-288"><see cref="T:System.Object" /> Do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="7249c-288">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="7249c-289">Konwertuje podaną wartość do reprezentacji ciągu w danym kontekście.</span><span class="sxs-lookup"><span data-stu-id="7249c-289">Converts the given value to a string representation, using the given context.</span></span></summary>
        <returns><span data-ttu-id="7249c-290"><see cref="T:System.Object" /> Reprezentujący wartość przekonwertowana.</span><span class="sxs-lookup"><span data-stu-id="7249c-290">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7249c-291">Użyj `context` parametr, aby wyodrębnić dodatkowe informacje o środowisku, z którego jest wywoływany tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="7249c-291">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="7249c-292">Ten parametr może być `null`, więc zawsze sprawdź go.</span><span class="sxs-lookup"><span data-stu-id="7249c-292">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="7249c-293">Ponadto może zwrócić właściwości obiektu context `null`.</span><span class="sxs-lookup"><span data-stu-id="7249c-293">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="7249c-294">W zależności od implementacji programu formatującego wartości może być możliwe do przekazania do programu formatującego wartości do ponownego utworzenia wystąpienia obiektu zwracany ciąg.</span><span class="sxs-lookup"><span data-stu-id="7249c-294">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7249c-295">Nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="7249c-295">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="7249c-296"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</span><span class="sxs-lookup"><span data-stu-id="7249c-296">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="7249c-297">A <see cref="T:System.Globalization.CultureInfo" />.</span><span class="sxs-lookup"><span data-stu-id="7249c-297">A <see cref="T:System.Globalization.CultureInfo" />.</span></span> <span data-ttu-id="7249c-298">Jeśli <see langword="null" /> jest przekazywany bieżącego zakłada, że kultury.</span><span class="sxs-lookup"><span data-stu-id="7249c-298">If <see langword="null" /> is passed, the current culture is assumed.</span></span></param>
        <param name="value"><span data-ttu-id="7249c-299"><see cref="T:System.Object" /> Do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="7249c-299">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="7249c-300">Konwertuje podaną wartość do reprezentacji w postaci ciągu, przy użyciu określonego kontekstu i kultury informacji.</span><span class="sxs-lookup"><span data-stu-id="7249c-300">Converts the given value to a string representation, using the specified context and culture information.</span></span></summary>
        <returns><span data-ttu-id="7249c-301"><see cref="T:System.Object" /> Reprezentujący wartość przekonwertowana.</span><span class="sxs-lookup"><span data-stu-id="7249c-301">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7249c-302">Użyj `context` parametr, aby wyodrębnić dodatkowe informacje o środowisku, z którego jest wywoływany tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="7249c-302">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="7249c-303">Ten parametr może być `null`, więc zawsze sprawdź go.</span><span class="sxs-lookup"><span data-stu-id="7249c-303">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="7249c-304">Ponadto może zwrócić właściwości obiektu context `null`.</span><span class="sxs-lookup"><span data-stu-id="7249c-304">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="7249c-305">W zależności od implementacji programu formatującego wartości może być możliwe do przekazania do programu formatującego wartości do ponownego utworzenia wystąpienia obiektu zwracany ciąg.</span><span class="sxs-lookup"><span data-stu-id="7249c-305">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7249c-306">Nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="7249c-306">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7249c-307">Ponownie tworzy <see cref="T:System.Object" /> mając do dyspozycji zestaw wartości właściwości dla obiektu.</span><span class="sxs-lookup"><span data-stu-id="7249c-307">Re-creates an <see cref="T:System.Object" /> given a set of property values for the object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateInstance(class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstance(System::Collections::IDictionary ^ propertyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="propertyValues"><span data-ttu-id="7249c-308"><see cref="T:System.Collections.IDictionary" /> Reprezentujący słownika nowej wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="7249c-308">An <see cref="T:System.Collections.IDictionary" /> that represents a dictionary of new property values.</span></span></param>
        <summary><span data-ttu-id="7249c-309">Ponownie tworzy <see cref="T:System.Object" /> mając do dyspozycji zestaw wartości właściwości dla obiektu.</span><span class="sxs-lookup"><span data-stu-id="7249c-309">Re-creates an <see cref="T:System.Object" /> given a set of property values for the object.</span></span></summary>
        <returns><span data-ttu-id="7249c-310"><see cref="T:System.Object" /> Reprezentujący danego <see cref="T:System.Collections.IDictionary" />, lub <see langword="null" /> Jeśli nie można utworzyć obiektu.</span><span class="sxs-lookup"><span data-stu-id="7249c-310">An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <see langword="null" /> if the object cannot be created.</span></span> <span data-ttu-id="7249c-311">Ta metoda zawsze zwraca <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7249c-311">This method always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7249c-312">Użyj tej metody dla obiektów, które są niezmienne, ale dla których chcesz podać modyfikowalne właściwości.</span><span class="sxs-lookup"><span data-stu-id="7249c-312">Use this method for objects that are immutable, but for which you want to provide changeable properties.</span></span>  
  
 <span data-ttu-id="7249c-313">Słownik dostarczonych przez `propertyValues` parametru serii par nazwa/wartość, po jednej dla każdej właściwości zwrócił z <xref:System.ComponentModel.TypeConverter.GetProperties%2A>.</span><span class="sxs-lookup"><span data-stu-id="7249c-313">The dictionary provided by the `propertyValues` parameter has a series of name/value pairs, one for each property returned from <xref:System.ComponentModel.TypeConverter.GetProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(class System.ComponentModel.ITypeDescriptorContext context, class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (context As ITypeDescriptorContext, propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(System::ComponentModel::ITypeDescriptorContext ^ context, System::Collections::IDictionary ^ propertyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="7249c-314"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</span><span class="sxs-lookup"><span data-stu-id="7249c-314">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="propertyValues"><span data-ttu-id="7249c-315"><see cref="T:System.Collections.IDictionary" /> Nowej wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="7249c-315">An <see cref="T:System.Collections.IDictionary" /> of new property values.</span></span></param>
        <summary><span data-ttu-id="7249c-316">Tworzy wystąpienie tego typu, który to <see cref="T:System.ComponentModel.TypeConverter" /> jest skojarzony, używając określonego kontekstu, mając do dyspozycji zestaw wartości właściwości dla obiektu.</span><span class="sxs-lookup"><span data-stu-id="7249c-316">Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.</span></span></summary>
        <returns><span data-ttu-id="7249c-317"><see cref="T:System.Object" /> Reprezentujący danego <see cref="T:System.Collections.IDictionary" />, lub <see langword="null" /> Jeśli nie można utworzyć obiektu.</span><span class="sxs-lookup"><span data-stu-id="7249c-317">An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <see langword="null" /> if the object cannot be created.</span></span> <span data-ttu-id="7249c-318">Ta metoda zawsze zwraca <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7249c-318">This method always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7249c-319">Użyj tej metody dla obiektów, które są niezmienne, ale dla których chcesz podać modyfikowalne właściwości.</span><span class="sxs-lookup"><span data-stu-id="7249c-319">Use this method for objects that are immutable, but for which you want to provide changeable properties.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="7249c-320">Przesłania tę metodę, jeśli typ, który ma zostać przekonwertowany, należy ponownie utworzyć obiekt, aby zmienić jego wartość.</span><span class="sxs-lookup"><span data-stu-id="7249c-320">Override this method if the type you want to convert must re-create the object to change its value.</span></span>  
  
 <span data-ttu-id="7249c-321">Użyj <paramref name="context" /> parametr, aby wyodrębnić dodatkowe informacje o środowisku, z którego jest wywoływany tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="7249c-321">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="7249c-322">Ten parametr może być <see langword="null" />, więc zawsze sprawdź go.</span><span class="sxs-lookup"><span data-stu-id="7249c-322">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="7249c-323">Ponadto może zwrócić właściwości obiektu context <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7249c-323">Also, properties on the context object can return <see langword="null" />.</span></span>  
  
 <span data-ttu-id="7249c-324">Słownik dostarczonych przez <paramref name="propertyValues" /> parametru serii par nazwa/wartość, po jednej dla każdej właściwości zwrócił z <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="7249c-324">The dictionary provided by the <paramref name="propertyValues" /> parameter has a series of name/value pairs, one for each property returned from <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="GetConvertFromException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertFromException (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertFromException(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertFromException (value As Object) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertFromException(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7249c-325"><see cref="T:System.Object" /> Aby dokonać konwersji, lub <see langword="null" /> Jeśli obiekt nie jest dostępna.</span><span class="sxs-lookup"><span data-stu-id="7249c-325">The <see cref="T:System.Object" /> to convert, or <see langword="null" /> if the object is not available.</span></span></param>
        <summary><span data-ttu-id="7249c-326">Zwraca wyjątek, aby zgłosić, gdy nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="7249c-326">Returns an exception to throw when a conversion cannot be performed.</span></span></summary>
        <returns><span data-ttu-id="7249c-327"><see cref="T:System.Exception" /> Reprezentujący wyjątek, który ma zostać zgłoszony, gdy nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="7249c-327">An <see cref="T:System.Exception" /> that represents the exception to throw when a conversion cannot be performed.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7249c-328">Automatycznie generowane przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="7249c-328">Automatically thrown by this method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetConvertToException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertToException (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertToException(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertToException (value As Object, destinationType As Type) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertToException(System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7249c-329"><see cref="T:System.Object" /> Aby dokonać konwersji, lub <see langword="null" /> Jeśli obiekt nie jest dostępna.</span><span class="sxs-lookup"><span data-stu-id="7249c-329">The <see cref="T:System.Object" /> to convert, or <see langword="null" /> if the object is not available.</span></span></param>
        <param name="destinationType"><span data-ttu-id="7249c-330">A <see cref="T:System.Type" /> reprezentujący typ konwersji próbował przekonwertować.</span><span class="sxs-lookup"><span data-stu-id="7249c-330">A <see cref="T:System.Type" /> that represents the type the conversion was trying to convert to.</span></span></param>
        <summary><span data-ttu-id="7249c-331">Zwraca wyjątek, aby zgłosić, gdy nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="7249c-331">Returns an exception to throw when a conversion cannot be performed.</span></span></summary>
        <returns><span data-ttu-id="7249c-332"><see cref="T:System.Exception" /> Reprezentujący wyjątek, który ma zostać zgłoszony, gdy nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="7249c-332">An <see cref="T:System.Exception" /> that represents the exception to throw when a conversion cannot be performed.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7249c-333">Automatycznie generowane przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="7249c-333">Automatically thrown by this method.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCreateInstanceSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7249c-334">Zwraca czy zmiana wartości dla tego obiektu wymaga wywołania <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> metodę w celu utworzenia nowej wartości.</span><span class="sxs-lookup"><span data-stu-id="7249c-334">Returns whether changing a value on this object requires a call to the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> method to create a new value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public bool GetCreateInstanceSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetCreateInstanceSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCreateInstanceSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetCreateInstanceSupported();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7249c-335">Zwraca czy zmiana wartości dla tego obiektu wymaga wywołania <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> metodę w celu utworzenia nowej wartości.</span><span class="sxs-lookup"><span data-stu-id="7249c-335">Returns whether changing a value on this object requires a call to the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> method to create a new value.</span></span></summary>
        <returns>
          <span data-ttu-id="7249c-336"><see langword="true" /> Jeśli zmiana właściwości tego obiektu wymaga wywołania <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> do utworzenia nowej wartości; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7249c-336"><see langword="true" /> if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetCreateInstanceSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCreateInstanceSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetCreateInstanceSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="7249c-337"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</span><span class="sxs-lookup"><span data-stu-id="7249c-337">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="7249c-338">Zwraca czy zmiana wartości dla tego obiektu wymaga wywołania <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> do utworzenia nowej wartości, używając określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="7249c-338">Returns whether changing a value on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value, using the specified context.</span></span></summary>
        <returns>
          <span data-ttu-id="7249c-339"><see langword="true" /> Jeśli zmiana właściwości tego obiektu wymaga wywołania <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> do utworzenia nowej wartości; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7249c-339"><see langword="true" /> if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7249c-340">Zgodnie z implementacją tej klasy, ta metoda zawsze zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="7249c-340">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="7249c-341">Przesłania tę metodę, jeśli typ, który ma zostać przekonwertowany, należy ponownie utworzyć obiekt, aby zmienić jego wartość.</span><span class="sxs-lookup"><span data-stu-id="7249c-341">Override this method if the type you want to convert must re-create the object to change its value.</span></span>  
  
 <span data-ttu-id="7249c-342">Użyj <paramref name="context" /> parametr, aby wyodrębnić dodatkowe informacje o środowisku, z którego jest wywoływany tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="7249c-342">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="7249c-343">Ten parametr może być <see langword="null" />, więc zawsze sprawdź go.</span><span class="sxs-lookup"><span data-stu-id="7249c-343">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="7249c-344">Ponadto może zwrócić właściwości obiektu context <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7249c-344">Also, properties on the context object can return <see langword="null" />.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7249c-345">Zwraca kolekcję właściwości dla typu tablicy określona przez parametr wartości.</span><span class="sxs-lookup"><span data-stu-id="7249c-345">Returns a collection of properties for the type of array specified by the value parameter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (value As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7249c-346"><see cref="T:System.Object" /> Określająca typ tablicy, dla którego można pobrać właściwości.</span><span class="sxs-lookup"><span data-stu-id="7249c-346">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span></span></param>
        <summary><span data-ttu-id="7249c-347">Zwraca kolekcję właściwości dla typu tablicy określona przez parametr wartości.</span><span class="sxs-lookup"><span data-stu-id="7249c-347">Returns a collection of properties for the type of array specified by the value parameter.</span></span></summary>
        <returns><span data-ttu-id="7249c-348">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> z właściwościami, które są dostępne dla tego typu danych lub <see langword="null" /> , jeśli nie ma żadnych właściwości.</span><span class="sxs-lookup"><span data-stu-id="7249c-348">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7249c-349">Zgodnie z implementacją tej klasy, ta metoda zawsze zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="7249c-349">As implemented in this class, this method always returns `null`.</span></span>  
  
 <span data-ttu-id="7249c-350">Domyślnie typu nie zwraca właściwości.</span><span class="sxs-lookup"><span data-stu-id="7249c-350">By default, a type does not return properties.</span></span> <span data-ttu-id="7249c-351">Łatwe implementacja tej metody można wywołać <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> dla typu danych.</span><span class="sxs-lookup"><span data-stu-id="7249c-351">An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (context As ITypeDescriptorContext, value As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="7249c-352"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</span><span class="sxs-lookup"><span data-stu-id="7249c-352">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="value"><span data-ttu-id="7249c-353"><see cref="T:System.Object" /> Określająca typ tablicy, dla którego można pobrać właściwości.</span><span class="sxs-lookup"><span data-stu-id="7249c-353">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span></span></param>
        <summary><span data-ttu-id="7249c-354">Zwraca kolekcję właściwości dla typu tablicy określonej przez parametr wartość, przy użyciu określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="7249c-354">Returns a collection of properties for the type of array specified by the value parameter, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="7249c-355">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> z właściwościami, które są dostępne dla tego typu danych lub <see langword="null" /> , jeśli nie ma żadnych właściwości.</span><span class="sxs-lookup"><span data-stu-id="7249c-355">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7249c-356">Użyj `context` parametr, aby wyodrębnić dodatkowe informacje o środowisku, z którego jest wywoływany tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="7249c-356">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="7249c-357">Ten parametr może być `null`, więc zawsze sprawdź go.</span><span class="sxs-lookup"><span data-stu-id="7249c-357">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="7249c-358">Ponadto może zwrócić właściwości obiektu context `null`.</span><span class="sxs-lookup"><span data-stu-id="7249c-358">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="7249c-359">Zgodnie z implementacją tej klasy, ta metoda zawsze zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="7249c-359">As implemented in this class, this method always returns `null`.</span></span>  
  
 <span data-ttu-id="7249c-360">Domyślnie typu nie zwraca właściwości.</span><span class="sxs-lookup"><span data-stu-id="7249c-360">By default, a type does not return properties.</span></span> <span data-ttu-id="7249c-361">Łatwe implementacja tej metody można wywołać <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> dla typu danych.</span><span class="sxs-lookup"><span data-stu-id="7249c-361">An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="7249c-362"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</span><span class="sxs-lookup"><span data-stu-id="7249c-362">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="value"><span data-ttu-id="7249c-363"><see cref="T:System.Object" /> Określająca typ tablicy, dla którego można pobrać właściwości.</span><span class="sxs-lookup"><span data-stu-id="7249c-363">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span></span></param>
        <param name="attributes"><span data-ttu-id="7249c-364">Tablica typu <see cref="T:System.Attribute" /> używany jako filtr.</span><span class="sxs-lookup"><span data-stu-id="7249c-364">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</span></span></param>
        <summary><span data-ttu-id="7249c-365">Zwraca kolekcję właściwości dla typu tablicy określonej przez parametr wartość, przy użyciu określonego kontekstu i atrybutów.</span><span class="sxs-lookup"><span data-stu-id="7249c-365">Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.</span></span></summary>
        <returns><span data-ttu-id="7249c-366">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> z właściwościami, które są dostępne dla tego typu danych lub <see langword="null" /> , jeśli nie ma żadnych właściwości.</span><span class="sxs-lookup"><span data-stu-id="7249c-366">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7249c-367">Zgodnie z implementacją tej klasy, ta metoda zawsze zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="7249c-367">As implemented in this class, this method always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="7249c-368">Należy przesłonić tę metodę, jeśli typ, który ma zostać przekonwertowany obsługuje właściwości.</span><span class="sxs-lookup"><span data-stu-id="7249c-368">Override this method if the type you want to convert supports properties.</span></span>  
  
 <span data-ttu-id="7249c-369">Użyj <paramref name="context" /> parametr, aby wyodrębnić dodatkowe informacje o środowisku, z którego jest wywoływany tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="7249c-369">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="7249c-370">Ten parametr może być <see langword="null" />, więc zawsze sprawdź go.</span><span class="sxs-lookup"><span data-stu-id="7249c-370">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="7249c-371">Ponadto może zwrócić właściwości obiektu context <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7249c-371">Also, properties on the context object can return <see langword="null" />.</span></span>  
  
 <span data-ttu-id="7249c-372">Tablica atrybutów jest używane do filtrowania tablicy.</span><span class="sxs-lookup"><span data-stu-id="7249c-372">The attributes array is used to filter the array.</span></span> <span data-ttu-id="7249c-373">Atrybuty mogą mieć różnych <see cref="T:System.Type" /> i <see cref="T:System.Attribute" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="7249c-373">The attributes can have a mix of <see cref="T:System.Type" /> and <see cref="T:System.Attribute" /> objects.</span></span> <span data-ttu-id="7249c-374">Filtrowanie jest definiowana za pomocą następujących reguł:</span><span class="sxs-lookup"><span data-stu-id="7249c-374">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="7249c-375">A <see cref="T:System.Type" /> jest traktowana jako symbol wieloznaczny; odpowiada właściwości, która ma <see cref="T:System.Type" /> w jego zestaw atrybutów.</span><span class="sxs-lookup"><span data-stu-id="7249c-375">A <see cref="T:System.Type" /> is treated as a wildcard; it matches a property that has the <see cref="T:System.Type" /> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="7249c-376">Jeśli nie ma właściwości <see cref="T:System.Attribute" /> do tej samej klasy właściwość nie jest objęta zwróconej tablicy.</span><span class="sxs-lookup"><span data-stu-id="7249c-376">If a property does not have an <see cref="T:System.Attribute" /> of the same class, the property is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="7249c-377">Jeśli ten atrybut jest wystąpieniem <see cref="T:System.Attribute" />, właściwość musi być w pełni zgodne lub nie znajduje się w zwracanych tablicy.</span><span class="sxs-lookup"><span data-stu-id="7249c-377">If the attribute is an instance of <see cref="T:System.Attribute" />, the property must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="7249c-378">Jeśli <see cref="T:System.Attribute" /> zostało określone wystąpienie i jest właściwością domyślną, nawet jeśli dostępny jest wystąpienie nie zostało uwzględnione w zwracana tablica <see cref="T:System.Attribute" /> we właściwości.</span><span class="sxs-lookup"><span data-stu-id="7249c-378">If an <see cref="T:System.Attribute" /> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <see cref="T:System.Attribute" /> in the property.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPropertiesSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7249c-379">Zwraca czy ten obiekt obsługuje właściwości.</span><span class="sxs-lookup"><span data-stu-id="7249c-379">Returns whether this object supports properties.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public bool GetPropertiesSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetPropertiesSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertiesSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetPropertiesSupported();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7249c-380">Zwraca czy ten obiekt obsługuje właściwości.</span><span class="sxs-lookup"><span data-stu-id="7249c-380">Returns whether this object supports properties.</span></span></summary>
        <returns>
          <span data-ttu-id="7249c-381"><see langword="true" /> Jeśli <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> powinien być wywołany, aby znaleźć właściwości tego obiektu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7249c-381"><see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7249c-382">Zgodnie z implementacją tej klasy, ta metoda zawsze zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="7249c-382">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPropertiesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetPropertiesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="7249c-383"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</span><span class="sxs-lookup"><span data-stu-id="7249c-383">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="7249c-384">Zwraca czy ten obiekt obsługuje właściwości, używając określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="7249c-384">Returns whether this object supports properties, using the specified context.</span></span></summary>
        <returns>
          <span data-ttu-id="7249c-385"><see langword="true" /> Jeśli <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> powinien być wywołany, aby znaleźć właściwości tego obiektu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7249c-385"><see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7249c-386">Zgodnie z implementacją tej klasy, ta metoda zawsze zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="7249c-386">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="7249c-387">Należy przesłonić tę metodę, jeśli typ, który ma zostać przekonwertowany obsługuje właściwości.</span><span class="sxs-lookup"><span data-stu-id="7249c-387">Override this method if the type you want to convert supports properties.</span></span>  
  
 <span data-ttu-id="7249c-388">Użyj <paramref name="context" /> parametr, aby wyodrębnić dodatkowe informacje o środowisku, z którego jest wywoływany tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="7249c-388">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="7249c-389">Ten parametr może być <see langword="null" />, więc zawsze sprawdź go.</span><span class="sxs-lookup"><span data-stu-id="7249c-389">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="7249c-390">Ponadto może zwrócić właściwości obiektu context <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7249c-390">Also, properties on the context object can return <see langword="null" />.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValues">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7249c-391">Zwraca kolekcję wartości domyślnych dla tego konwertera typu jest przeznaczona dla typu danych.</span><span class="sxs-lookup"><span data-stu-id="7249c-391">Returns a collection of standard values for the data type this type converter is designed for.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetStandardValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ICollection GetStandardValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValues" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValues () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetStandardValues();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7249c-392">Zwraca kolekcję standardowego wartości z kontekstu domyślnego dla tego konwertera typu jest przeznaczona dla typu danych.</span><span class="sxs-lookup"><span data-stu-id="7249c-392">Returns a collection of standard values from the default context for the data type this type converter is designed for.</span></span></summary>
        <returns><span data-ttu-id="7249c-393">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> zawierający zestaw standardowych prawidłowych wartości lub <see langword="null" /> Jeśli typem danych nie obsługuje standardowy zestaw wartości.</span><span class="sxs-lookup"><span data-stu-id="7249c-393">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> containing a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7249c-394">Zgodnie z implementacją tej klasy, ta metoda zawsze zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="7249c-394">As implemented in this class, this method always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="7249c-395"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu, który może służyć do wyodrębnienia dodatkowe informacje o środowisku, w którym ten konwerter jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="7249c-395">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="7249c-396">Tego parametru lub właściwości tego parametru może być <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7249c-396">This parameter or properties of this parameter can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="7249c-397">Zwraca kolekcję wartości domyślnych dla tego konwertera typu zaprojektowano pod kątem udostępniane z kontekstem formatu typu danych.</span><span class="sxs-lookup"><span data-stu-id="7249c-397">Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.</span></span></summary>
        <returns><span data-ttu-id="7249c-398">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> który zawiera standardowy zestaw prawidłowych wartości lub <see langword="null" /> Jeśli typem danych nie obsługuje standardowy zestaw wartości.</span><span class="sxs-lookup"><span data-stu-id="7249c-398">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7249c-399">Zgodnie z implementacją w <xref:System.ComponentModel.TypeConverter>, ta metoda zawsze zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="7249c-399">As implemented in <xref:System.ComponentModel.TypeConverter>, this method always returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7249c-400">Na przykład dla tej funkcji, zobacz <xref:System.ComponentModel.TypeConverter> klasy.</span><span class="sxs-lookup"><span data-stu-id="7249c-400">For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="7249c-401">Należy przesłonić tę metodę, jeśli typ, który ma zostać przekonwertowany obsługuje standardowe wartości.</span><span class="sxs-lookup"><span data-stu-id="7249c-401">Override this method if the type you want to convert supports standard values.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValuesExclusive">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7249c-402">Zwraca czy zbiór standardowych wartości zwracanych z <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> jest wyłączną listę.</span><span class="sxs-lookup"><span data-stu-id="7249c-402">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public bool GetStandardValuesExclusive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetStandardValuesExclusive() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValuesExclusive () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetStandardValuesExclusive();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7249c-403">Zwraca czy zbiór standardowych wartości zwracanych z <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> jest wyłączną listę.</span><span class="sxs-lookup"><span data-stu-id="7249c-403">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</span></span></summary>
        <returns>
          <span data-ttu-id="7249c-404"><see langword="true" /> Jeśli <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> zwrócony z <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> jest to pełna lista możliwych wartości. <see langword="false" /> Jeśli inne wartości są możliwe.</span><span class="sxs-lookup"><span data-stu-id="7249c-404"><see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exhaustive list of possible values; <see langword="false" /> if other values are possible.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7249c-405">Zgodnie z implementacją tej klasy, ta metoda zawsze zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="7249c-405">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="7249c-406">Jeśli lista jest wyłączne, takie jak typ danych wyliczenia, nie inne wartości są prawidłowe.</span><span class="sxs-lookup"><span data-stu-id="7249c-406">If the list is exclusive, such as in an enumeration data type, then no other values are valid.</span></span> <span data-ttu-id="7249c-407">Jeśli lista nie jest wyłączne, inne prawidłowe wartości może istnieć oprócz listy standard wartości <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> udostępnia metody.</span><span class="sxs-lookup"><span data-stu-id="7249c-407">If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides.</span></span> <span data-ttu-id="7249c-408">Jeśli wartości są wyłączne, listy zwrócony przez <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> nie należy zezwalać te wartości można edytowane.</span><span class="sxs-lookup"><span data-stu-id="7249c-408">If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public virtual bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="7249c-409"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</span><span class="sxs-lookup"><span data-stu-id="7249c-409">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="7249c-410">Zwraca czy zbiór standardowych wartości zwracanych z <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> jest wyłączną listę możliwych wartości, używając określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="7249c-410">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list of possible values, using the specified context.</span></span></summary>
        <returns>
          <span data-ttu-id="7249c-411"><see langword="true" /> Jeśli <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> zwrócony z <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> jest to pełna lista możliwych wartości. <see langword="false" /> Jeśli inne wartości są możliwe.</span><span class="sxs-lookup"><span data-stu-id="7249c-411"><see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exhaustive list of possible values; <see langword="false" /> if other values are possible.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7249c-412">Zgodnie z implementacją tej klasy, ta metoda zawsze zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="7249c-412">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="7249c-413">Jeśli lista jest wyłączne, takie jak typ danych wyliczenia, nie inne wartości są prawidłowe.</span><span class="sxs-lookup"><span data-stu-id="7249c-413">If the list is exclusive, such as in an enumeration data type, then no other values are valid.</span></span> <span data-ttu-id="7249c-414">Jeśli lista nie jest wyłączne, inne prawidłowe wartości może istnieć oprócz listy standard wartości <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> udostępnia metody.</span><span class="sxs-lookup"><span data-stu-id="7249c-414">If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides.</span></span> <span data-ttu-id="7249c-415">Jeśli wartości są wyłączne, listy zwrócony przez <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> nie należy zezwalać te wartości można edytowane.</span><span class="sxs-lookup"><span data-stu-id="7249c-415">If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="7249c-416">Należy przesłonić tę metodę, jeśli typ, który ma zostać przekonwertowany obsługuje standardowe wartości.</span><span class="sxs-lookup"><span data-stu-id="7249c-416">Override this method if the type you want to convert supports standard values.</span></span>  
  
 <span data-ttu-id="7249c-417">Użyj <paramref name="context" /> parametr, aby wyodrębnić dodatkowe informacje o środowisku, z którego jest wywoływany tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="7249c-417">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="7249c-418">Ten parametr może być <see langword="null" />, więc zawsze sprawdź go.</span><span class="sxs-lookup"><span data-stu-id="7249c-418">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="7249c-419">Ponadto może zwrócić właściwości obiektu context <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7249c-419">Also, properties on the context object can return <see langword="null" />.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValuesSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7249c-420">Zwraca czy ten obiekt obsługuje standardowy zestaw wartości, które mogą być pobierane z listy.</span><span class="sxs-lookup"><span data-stu-id="7249c-420">Returns whether this object supports a standard set of values that can be picked from a list.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public bool GetStandardValuesSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetStandardValuesSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValuesSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetStandardValuesSupported();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7249c-421">Zwraca czy ten obiekt obsługuje standardowy zestaw wartości, które mogą być pobierane z listy.</span><span class="sxs-lookup"><span data-stu-id="7249c-421">Returns whether this object supports a standard set of values that can be picked from a list.</span></span></summary>
        <returns>
          <span data-ttu-id="7249c-422"><see langword="true" /> Jeśli <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> powinien być wywołany, aby znaleźć wspólny zbiór wartości, które obsługuje obiektu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7249c-422"><see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="7249c-423"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</span><span class="sxs-lookup"><span data-stu-id="7249c-423">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="7249c-424">Zwraca czy ten obiekt obsługuje standardowy zestaw wartości, które mogą być pobierane z listy, używając określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="7249c-424">Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.</span></span></summary>
        <returns>
          <span data-ttu-id="7249c-425"><see langword="true" /> Jeśli <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> powinien być wywołany, aby znaleźć wspólny zbiór wartości, które obsługuje obiektu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7249c-425"><see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7249c-426">Zgodnie z implementacją tej klasy, ta metoda zawsze zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="7249c-426">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="7249c-427">Użyj `context` parametr, aby wyodrębnić dodatkowe informacje o środowisku, z którego jest wywoływany tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="7249c-427">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="7249c-428">Ten parametr może być `null`, więc zawsze sprawdź go.</span><span class="sxs-lookup"><span data-stu-id="7249c-428">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="7249c-429">Ponadto może zwrócić właściwości obiektu context `null`.</span><span class="sxs-lookup"><span data-stu-id="7249c-429">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="7249c-430">Należy przesłonić tę metodę, jeśli typ, który ma zostać przekonwertowany obsługuje standardowe wartości.</span><span class="sxs-lookup"><span data-stu-id="7249c-430">Override this method if the type you want to convert supports standard values.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsValid">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7249c-431">Zwraca czy obiekt dana wartość jest nieprawidłowa dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="7249c-431">Returns whether the given value object is valid for this type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsValid(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValid (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsValid(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7249c-432">Obiekt, aby sprawdzić poprawność.</span><span class="sxs-lookup"><span data-stu-id="7249c-432">The object to test for validity.</span></span></param>
        <summary><span data-ttu-id="7249c-433">Zwraca czy obiekt dana wartość jest nieprawidłowa dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="7249c-433">Returns whether the given value object is valid for this type.</span></span></summary>
        <returns>
          <span data-ttu-id="7249c-434"><see langword="true" /> Jeśli określona wartość jest nieprawidłowa dla tego obiektu. w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7249c-434"><see langword="true" /> if the specified value is valid for this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7249c-435">Począwszy od [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.ComponentModel.TypeConverter.IsValid%2A> metody przechwytuje wyjątki od <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> i <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="7249c-435">Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods.</span></span> <span data-ttu-id="7249c-436">Jeśli powoduje, że typ wartości wejściowej <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> do zwrócenia `false`, lub jeśli powoduje, że wartość wejściowa <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> Aby zgłosić wyjątek, <xref:System.ComponentModel.TypeConverter.IsValid%2A> metoda zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="7249c-436">If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="7249c-437">Aby włączyć starsze zachowanie, Wstaw następujące wiersze do pliku konfiguracji aplikacji, na przykład application1.exe.config.</span><span class="sxs-lookup"><span data-stu-id="7249c-437">To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.</span></span>  
  
```xml  
<configuration>  
  <appSettings>  
    <add key="UseCompatibleTypeConverterBehavior" value="true" />  
  </appSettings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="7249c-438">Należy przesłonić tę metodę, jeśli typ, który ma zostać przekonwertowany obsługuje standardowe wartości, które mogą być sprawdzone.</span><span class="sxs-lookup"><span data-stu-id="7249c-438">Override this method if the type you want to convert supports standard values that can be validated.</span></span>  
  
 <span data-ttu-id="7249c-439"><see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> Metoda służy do sprawdzania poprawności wartości w ramach typu, a nie można określić, czy <paramref name="value" /> można przekonwertować danego typu.</span><span class="sxs-lookup"><span data-stu-id="7249c-439">The <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> method is used to validate a value within the type rather than to determine if <paramref name="value" /> can be converted to the given type.</span></span> <span data-ttu-id="7249c-440">Na przykład <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> może służyć do określenia, czy dana wartość jest nieprawidłowa dla typu wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="7249c-440">For example, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> can be used to determine if a given value is valid for an enumeration type.</span></span> <span data-ttu-id="7249c-441">Na przykład zobacz <see cref="T:System.ComponentModel.EnumConverter" />.</span><span class="sxs-lookup"><span data-stu-id="7249c-441">For an example, see <see cref="T:System.ComponentModel.EnumConverter" />.</span></span>  
  
 <span data-ttu-id="7249c-442">Można napisać własny <c>WillConvertSucceed</c> metody zawijania <see cref="Overload:System.ComponentModel.TypeConverter.ConvertTo" /> i <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> metody w blokach wyjątku.</span><span class="sxs-lookup"><span data-stu-id="7249c-442">You can write your own <c>WillConvertSucceed</c> method by wrapping the <see cref="Overload:System.ComponentModel.TypeConverter.ConvertTo" /> and <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> methods in exception blocks.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.EnumConverter" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValid(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValid (context As ITypeDescriptorContext, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValid(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="7249c-443"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</span><span class="sxs-lookup"><span data-stu-id="7249c-443">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="value"><span data-ttu-id="7249c-444"><see cref="T:System.Object" /> Do sprawdzenia poprawności.</span><span class="sxs-lookup"><span data-stu-id="7249c-444">The <see cref="T:System.Object" /> to test for validity.</span></span></param>
        <summary><span data-ttu-id="7249c-445">Zwraca czy obiekt dana wartość jest nieprawidłowa dla tego typu, jak i dla określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="7249c-445">Returns whether the given value object is valid for this type and for the specified context.</span></span></summary>
        <returns>
          <span data-ttu-id="7249c-446"><see langword="true" /> Jeśli określona wartość jest nieprawidłowa dla tego obiektu. w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7249c-446"><see langword="true" /> if the specified value is valid for this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7249c-447">Użyj `context` parametr, aby wyodrębnić dodatkowe informacje o środowisku, z którego jest wywoływany tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="7249c-447">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="7249c-448">Ten parametr może być `null`, więc zawsze sprawdź go.</span><span class="sxs-lookup"><span data-stu-id="7249c-448">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="7249c-449">Ponadto może zwrócić właściwości obiektu context `null`.</span><span class="sxs-lookup"><span data-stu-id="7249c-449">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="7249c-450">Począwszy od [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.ComponentModel.TypeConverter.IsValid%2A> metody przechwytuje wyjątki od <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> i <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="7249c-450">Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods.</span></span> <span data-ttu-id="7249c-451">Jeśli powoduje, że typ wartości wejściowej <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> do zwrócenia `false`, lub jeśli powoduje, że wartość wejściowa <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> Aby zgłosić wyjątek, <xref:System.ComponentModel.TypeConverter.IsValid%2A> metoda zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="7249c-451">If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="7249c-452">Aby włączyć starsze zachowanie, Wstaw następujące wiersze do pliku konfiguracji aplikacji, na przykład application1.exe.config.</span><span class="sxs-lookup"><span data-stu-id="7249c-452">To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.</span></span>  
  
```xml  
<configuration>  
  <appSettings>  
    <add key="UseCompatibleTypeConverterBehavior" value="true" />  
  </appSettings>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="7249c-453">Na przykład tej funkcji, zobacz <xref:System.ComponentModel.TypeConverter> klasy.</span><span class="sxs-lookup"><span data-stu-id="7249c-453">For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="7249c-454">Należy przesłonić tę metodę, jeśli typ, który ma zostać przekonwertowany obsługuje standardowe wartości, które mogą być sprawdzone.</span><span class="sxs-lookup"><span data-stu-id="7249c-454">Override this method if the type you want to convert supports standard values that can be validated.</span></span>  
  
 <span data-ttu-id="7249c-455"><see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> Metoda służy do sprawdzania poprawności wartości w ramach typu, a nie można określić, czy <paramref name="value" /> można przekonwertować danego typu.</span><span class="sxs-lookup"><span data-stu-id="7249c-455">The <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> method is used to validate a value within the type rather than to determine if <paramref name="value" /> can be converted to the given type.</span></span> <span data-ttu-id="7249c-456">Na przykład <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> może służyć do określenia, czy dana wartość jest nieprawidłowa dla typu wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="7249c-456">For example, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> can be used to determine if a given value is valid for an enumeration type.</span></span> <span data-ttu-id="7249c-457">Na przykład zobacz <see cref="T:System.ComponentModel.EnumConverter" />.</span><span class="sxs-lookup"><span data-stu-id="7249c-457">For an example, see <see cref="T:System.ComponentModel.EnumConverter" />.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.ComponentModel.EnumConverter" />
      </Docs>
    </Member>
    <Member MemberName="SortProperties">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.PropertyDescriptorCollection SortProperties (System.ComponentModel.PropertyDescriptorCollection props, string[] names);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.PropertyDescriptorCollection SortProperties(class System.ComponentModel.PropertyDescriptorCollection props, string[] names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Function SortProperties (props As PropertyDescriptorCollection, names As String()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ SortProperties(System::ComponentModel::PropertyDescriptorCollection ^ props, cli::array &lt;System::String ^&gt; ^ names);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="props" Type="System.ComponentModel.PropertyDescriptorCollection" />
        <Parameter Name="names" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="props"><span data-ttu-id="7249c-458">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> mający właściwości do sortowania.</span><span class="sxs-lookup"><span data-stu-id="7249c-458">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that has the properties to sort.</span></span></param>
        <param name="names"><span data-ttu-id="7249c-459">Tablicę nazw w kolejności, które mają właściwości, które mają być widoczne w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7249c-459">An array of names in the order you want the properties to appear in the collection.</span></span></param>
        <summary><span data-ttu-id="7249c-460">Sortuje zbiór właściwości.</span><span class="sxs-lookup"><span data-stu-id="7249c-460">Sorts a collection of properties.</span></span></summary>
        <returns><span data-ttu-id="7249c-461">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> zawierający właściwości posortowane.</span><span class="sxs-lookup"><span data-stu-id="7249c-461">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the sorted properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7249c-462">Wszystkie właściwości w kolekcji, które nie znajdują się już w tablicy nazw są dodawane alfabetycznie na końcu.</span><span class="sxs-lookup"><span data-stu-id="7249c-462">All properties in the collection that are not already in the array of names are added alphabetically to the end.</span></span> <span data-ttu-id="7249c-463">Jeśli `names` parametr ma pustą tablicę lub `null`, wszystkie właściwości w kolekcji są sortowane w kolejności alfabetycznej.</span><span class="sxs-lookup"><span data-stu-id="7249c-463">If the `names` parameter is an empty array or `null`, all the properties in the collection are sorted alphabetically.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
  </Members>
</Type>