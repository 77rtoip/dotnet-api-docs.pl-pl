<Type Name="TypeConverter" FullName="System.ComponentModel.TypeConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="018548c7b8364981c4e9bde2e07bbc73f2b3c7f3" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48775017" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeConverter" />
  <TypeSignature Language="F#" Value="type TypeConverter = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b7db1-101">Oferuje ujednolicone konwersji typów wartości do innych typów, a także do uzyskiwania dostępu do wartości domyślnych i właściwości podrzędnych.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b7db1-101">Provides a unified way of converting types of values to other types, as well as for accessing standard values and subproperties.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7db1-102">Najczęściej spotykanym typem konwertera jest taki, który konwertuje do i z reprezentację tekstową.</span><span class="sxs-lookup"><span data-stu-id="b7db1-102">The most common type of converter is one that converts to and from a text representation.</span></span> <span data-ttu-id="b7db1-103">Konwerter typu dla klasy jest powiązany z klasy za pomocą <xref:System.ComponentModel.TypeConverterAttribute>.</span><span class="sxs-lookup"><span data-stu-id="b7db1-103">The type converter for a class is bound to the class with a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="b7db1-104">Jeśli ten atrybut nie zostanie zastąpiona, wszystkie klasy dziedziczące po tej klasie używania tego samego typu jako klasa bazowa.</span><span class="sxs-lookup"><span data-stu-id="b7db1-104">Unless this attribute is overridden, all classes that inherit from this class use the same type converter as the base class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b7db1-105">Ze względów system typ ogólny nie konwertera typów bezpośredni dostęp.</span><span class="sxs-lookup"><span data-stu-id="b7db1-105">For general type system purposes, do not access a type converter directly.</span></span> <span data-ttu-id="b7db1-106">Zamiast tego, dostęp do odpowiedniego konwertera przy użyciu <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="b7db1-106">Instead, access the appropriate converter by using <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="b7db1-107">Aby uzyskać więcej informacji zobacz przykładowy kod podany.</span><span class="sxs-lookup"><span data-stu-id="b7db1-107">For more information, see the code examples provided.</span></span>  
  
 <span data-ttu-id="b7db1-108">**Uwaga** do celów XAML procesora XAML wyszukuje <xref:System.ComponentModel.TypeConverterAttribute> bezpośrednio, zamiast przejść przez <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="b7db1-108">**Note** For XAML purposes, a XAML processor searches for the <xref:System.ComponentModel.TypeConverterAttribute> directly, instead of going through <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="b7db1-109">W przypadkach, w którym <xref:System.ComponentModel.TypeDescriptor> wystąpienia z kodu lub gdzie możesz utworzyć wystąpienie udostępnione w WPF zasobów, jest zgodna z jego konstruowania bezpośrednio, bez odwołania do <xref:System.ComponentModel.TypeDescriptor> lub innym systemem odbicia i typ pomocy technicznej.</span><span class="sxs-lookup"><span data-stu-id="b7db1-109">For cases where you do want a <xref:System.ComponentModel.TypeDescriptor> instance from code, or where you create a shared instance in WPF resources, it is acceptable to construct it directly without referencing <xref:System.ComponentModel.TypeDescriptor> or other reflection and type system support.</span></span>  
  
 <span data-ttu-id="b7db1-110">Klasy pochodne <xref:System.ComponentModel.TypeConverter> są często wywoływane jako część jak procesor XAML konwertuje wartość atrybutu lub inicjowania z znaczników (czyli natury ciągu) i generuje obiekt dla reprezentacji czasu wykonywania.</span><span class="sxs-lookup"><span data-stu-id="b7db1-110">Classes derived from <xref:System.ComponentModel.TypeConverter> are often referenced as part of how a XAML processor converts an attribute or initialization text value from markup (which is inherently a string) and generates an object for a run-time representation.</span></span> <span data-ttu-id="b7db1-111">Implementowanie autorzy typu niestandardowego, które mają być zazwyczaj obsługuje zachowanie konwersji typu dla XAML <xref:System.ComponentModel.TypeConverter> klasę, która obsługuje własne unikatowe `ConvertFrom` zachowanie z ciągu.</span><span class="sxs-lookup"><span data-stu-id="b7db1-111">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports their own unique `ConvertFrom` behavior from a string.</span></span> <span data-ttu-id="b7db1-112">To zachowanie umożliwia konwersji typu z podanego ciągu jako wartość atrybutu XAML i udostępniają procesora XAML pomocy technicznej potrzebnych do utworzenia obiektu ciągu, tak, aby obiekt można tworzyć w grafie obiektu przeanalizowany.</span><span class="sxs-lookup"><span data-stu-id="b7db1-112">This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.</span></span> <span data-ttu-id="b7db1-113">Niestandardowe typy i członkowie typów niestandardowych, które są wskazywane przez zastosowanie <xref:System.ComponentModel.TypeConverterAttribute> z definicjami z atrybutem odwołuje się do niestandardowego <xref:System.ComponentModel.TypeConverter> implementacji.</span><span class="sxs-lookup"><span data-stu-id="b7db1-113">Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.</span></span> <span data-ttu-id="b7db1-114">Aby uzyskać więcej informacji, zobacz [typy konwerterów dla XAML — omówienie](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="b7db1-114">For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7db1-115">Poniższy przykład kodu pokazuje sposób tworzenia wystąpienia konwertera typów i powiązać go do klasy.</span><span class="sxs-lookup"><span data-stu-id="b7db1-115">The following code example shows how to create an instance of a type converter and bind it to a class.</span></span> <span data-ttu-id="b7db1-116">Klasa implementacji konwertera `MyClassConverter`, musi dziedziczyć <xref:System.ComponentModel.TypeConverter> klasy.</span><span class="sxs-lookup"><span data-stu-id="b7db1-116">The class implementing the converter, `MyClassConverter`, must inherit from the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TypeConverter Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#1)]
 [!code-vb[Classic TypeConverter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#1)]  
  
 <span data-ttu-id="b7db1-117">Gdy właściwość, która zawiera wyliczenie, sprawdź, czy wartość wyliczenia jest prawidłowa, przed ustawieniem właściwości.</span><span class="sxs-lookup"><span data-stu-id="b7db1-117">When you have a property that has an enumeration, check to see whether an enumeration value is valid before setting the property.</span></span> <span data-ttu-id="b7db1-118">Następny przykład kodu wymaga, że wyliczenie o nazwie `MyPropertyEnum` został zadeklarowany.</span><span class="sxs-lookup"><span data-stu-id="b7db1-118">The next code example requires that an enumeration called `MyPropertyEnum` has been declared.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#2)]
 [!code-csharp[Classic TypeConverter Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#2)]
 [!code-vb[Classic TypeConverter Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#2)]  
  
 <span data-ttu-id="b7db1-119">Jest innego typu konwertera powszechnie przekonwertować obiekt na ciąg.</span><span class="sxs-lookup"><span data-stu-id="b7db1-119">Another common type converter usage is to convert an object to a string.</span></span> <span data-ttu-id="b7db1-120">Poniższy przykład kodu drukuje nazwiska <xref:System.Drawing.Color> przechowywana w zmiennej `c`.</span><span class="sxs-lookup"><span data-stu-id="b7db1-120">The following code example prints out the name of the <xref:System.Drawing.Color> stored in the variable `c`.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#3)]
 [!code-csharp[Classic TypeConverter Example#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#3)]
 [!code-vb[Classic TypeConverter Example#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#3)]  
  
 <span data-ttu-id="b7db1-121">Można również użyć konwertera typów można przekonwertować wartości na podstawie jego nazwy, jak pokazano w następnym przykładzie kodu.</span><span class="sxs-lookup"><span data-stu-id="b7db1-121">You can also use a type converter to convert a value from its name, as shown in the next code example.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#4](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#4)]
 [!code-csharp[Classic TypeConverter Example#4](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#4)]
 [!code-vb[Classic TypeConverter Example#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#4)]  
  
 <span data-ttu-id="b7db1-122">W poniższym przykładzie kodu można użyć konwertera typów, aby wydrukować zestaw standardowych wartości, które obsługuje obiektu.</span><span class="sxs-lookup"><span data-stu-id="b7db1-122">In the following code example, you can use a type converter to print out the set of standard values that the object supports.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#5](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#5)]
 [!code-csharp[Classic TypeConverter Example#5](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#5)]
 [!code-vb[Classic TypeConverter Example#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#5)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="b7db1-123">Dziedzicz <see cref="T:System.ComponentModel.TypeConverter" /> do implementowania wymagań konwersji.</span>
        <span class="sxs-lookup">
          <span data-stu-id="b7db1-123">Inherit from <see cref="T:System.ComponentModel.TypeConverter" /> to implement your own conversion requirements.</span>
        </span>
        <span data-ttu-id="b7db1-124">Przy dziedziczeniu z tej klasy można zastąpić następujące metody:</span>
        <span class="sxs-lookup">
          <span data-stu-id="b7db1-124">When you inherit from this class, you can override the following methods:</span>
        </span>
        <span data-ttu-id="b7db1-125">— W celu obsługi konwersji typu niestandardowego, należy zastąpić <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />, i <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" /> metody.</span>
        <span class="sxs-lookup">
          <span data-stu-id="b7db1-125">-   To support custom type conversion, override the <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />, and <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" /> methods.</span>
        </span>
        <span data-ttu-id="b7db1-126">-Aby dokonać konwersji typów, które należy ponownie utworzyć obiekt, aby zmienić jego wartość, Zastąp <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> i <see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" /> metody.</span>
        <span class="sxs-lookup">
          <span data-stu-id="b7db1-126">-   To convert types that must re-create the object to change its value, override the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> and <see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" /> methods.</span>
        </span>
        <span data-ttu-id="b7db1-127">-Aby dokonać konwersji typów, które obsługują właściwości, należy zastąpić <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> i <see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" /> metody.</span>
        <span class="sxs-lookup">
          <span data-stu-id="b7db1-127">-   To convert types that support properties, override the <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> and <see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" /> methods.</span>
        </span>
        <span data-ttu-id="b7db1-128">Jeśli klasa jest konwertowana na format nie ma właściwości i należy zaimplementować właściwości, można użyć <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> klasy jako podstawa do implementowania deskryptorów właściwości.</span>
        <span class="sxs-lookup">
          <span data-stu-id="b7db1-128">If the class you are converting does not have properties, and you need to implement properties, you can use the <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> class as a base for implementing the property descriptors.</span>
        </span>
        <span data-ttu-id="b7db1-129">Przy dziedziczeniu z <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />, konieczne jest przesłonięcie <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> i <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> metody.</span>
        <span class="sxs-lookup">
          <span data-stu-id="b7db1-129">When you inherit from <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />, you must override the <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> and <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> methods.</span>
        </span>
        <span data-ttu-id="b7db1-130">-Aby dokonać konwersji typów, które obsługują standardowe wartości, należy zastąpić <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" /> i <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> metody.</span>
        <span class="sxs-lookup">
          <span data-stu-id="b7db1-130">-   To convert types that support standard values, override the <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" /> and <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> methods.</span>
        </span>
        <block subset="none" type="note">
          <para>
            <span data-ttu-id="b7db1-131">Twoje Typ pochodny może być oznaczona jako <see langword="internal" /> lub <see langword="private" />, ale wystąpienie tego typu mogą być tworzone za pomocą <see cref="T:System.ComponentModel.TypeDescriptor" /> klasy.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-131">Your derived type might be marked as <see langword="internal" /> or <see langword="private" />, but an instance of your type can be created with the <see cref="T:System.ComponentModel.TypeDescriptor" /> class.</span>
            </span>
            <span data-ttu-id="b7db1-132">Nie zapisuj, że kod niezabezpieczone, zakładając, że obiekt wywołujący jest zaufany.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-132">Do not write insecure code by assuming the caller is trusted.</span>
            </span>
            <span data-ttu-id="b7db1-133">Zamiast tego należy założyć, wywołań może utworzyć wystąpienia tego typu w częściowej relacji zaufania.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-133">Assume instead that callers might create instances of your type in partial trust.</span>
            </span>
          </para>
        </block>
        <span data-ttu-id="b7db1-134">Aby uzyskać więcej informacji na temat typy konwerterów dla celów ogólnych (bez XAML), zobacz [porady: Implementowanie konwertera typów](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)) lub [konwersja uogólnionych typów](http://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada).</span>
        <span class="sxs-lookup">
          <span data-stu-id="b7db1-134">For more information about type converters for general (non-XAML) purposes, see [How to: Implement a Type Converter](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)) or [Generalized Type Conversion](http://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada).</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
    <altmember cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />
    <altmember cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
    <related type="Article" href="http://msdn.microsoft.com/library/51a65860-efcb-4fe0-95a0-1c679cde66b7">
      <span data-ttu-id="b7db1-135">Typy konwerterów dla XAML — Omówienie</span>
      <span class="sxs-lookup">
        <span data-stu-id="b7db1-135">Type Converters for XAML Overview</span>
      </span>
    </related>
    <related type="Article" href="http://msdn.microsoft.com/library/5dfb299a-b6e2-41b8-8694-e6ac987547f1">
      <span data-ttu-id="b7db1-136">Atrybuty CLR związane z XAML dla niestandardowych typów i bibliotek</span>
      <span class="sxs-lookup">
        <span data-stu-id="b7db1-136">XAML-Related CLR Attributes For Custom Types and Libraries</span>
      </span>
    </related>
    <related type="Article" href="http://msdn.microsoft.com/library/c2667cbd-2f46-4a7f-9dfc-53696e35e8e4">
      <span data-ttu-id="b7db1-137">Definiowanie typów niestandardowych do użytku z usługami .NET Framework XAML</span>
      <span class="sxs-lookup">
        <span data-stu-id="b7db1-137">Defining Custom Types for Use with .NET Framework XAML Services</span>
      </span>
    </related>
    <related type="Article" href="http://msdn.microsoft.com/library/0e11f386-808c-4eae-9ba6-029ad7ba2211">
      <span data-ttu-id="b7db1-138">NET XAML Services dokumentacja koncepcyjna</span>
      <span class="sxs-lookup">
        <span data-stu-id="b7db1-138">NET XAML Services Conceptual Documentation</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b7db1-139">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.TypeConverter" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-139">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvertFrom">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b7db1-140">Zwraca czy ten konwerter można przekonwertować obiekt danego typu na typ tego konwertera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-140">Returns whether this converter can convert an object of one type to the type of this converter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public bool CanConvertFrom (Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConvertFrom(class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConvertFrom (sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConvertFrom(Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="member this.CanConvertFrom : Type -&gt; bool" Usage="typeConverter.CanConvertFrom sourceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="sourceType">
          <span data-ttu-id="b7db1-141">A <see cref="T:System.Type" /> reprezentujący typ, który chcesz przekonwertować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-141">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7db1-142">Zwraca czy ten konwerter można przekonwertować obiekt danego typu na typ tego konwertera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-142">Returns whether this converter can convert an object of the given type to the type of this converter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-143">
            <see langword="true" /> w przypadku tego konwertera można wykonać konwersji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-143">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7db1-144">Zaimplementowanego w tej klasie, ta metoda zawsze zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="b7db1-144">As implemented in this class, this method always returns `false`.</span></span> <span data-ttu-id="b7db1-145">Nigdy nie zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="b7db1-145">It never returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="typeConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b7db1-146">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewniający kontekstu formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-146">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="sourceType">
          <span data-ttu-id="b7db1-147">A <see cref="T:System.Type" /> reprezentujący typ, który chcesz przekonwertować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-147">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7db1-148">Zwraca czy ten konwerter można przekonwertować obiekt danego typu na typ tego konwertera przy użyciu określonego kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-148">Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-149">
            <see langword="true" /> w przypadku tego konwertera można wykonać konwersji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-149">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7db1-150">Zaimplementowanego w tej klasie, Metoda ta zwraca `false`, chyba że `sourceType` jest <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="b7db1-150">As implemented in this class, this method returns `false`, unless `sourceType` is an <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b7db1-151">Zastępuje tę metodę, aby zapewnić wymagań konwersji.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-151">Override this method to provide your own conversion requirements.</span>
            </span>
            <span data-ttu-id="b7db1-152">Użyj <paramref name="context" /> parametru, aby wyodrębnić dodatkowe informacje o środowisku, w którym jest wywoływana tego konwertera.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-152">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="b7db1-153">Ten parametr może być <see langword="null" />, dlatego należy zawsze sprawdzić jej.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-153">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="b7db1-154">Ponadto we właściwościach obiektu context może zwrócić <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-154">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvertTo">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b7db1-155">Zwraca czy ten konwerter można przekonwertować obiekt określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-155">Returns whether this converter can convert the object to the specified type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public bool CanConvertTo (Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConvertTo(class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConvertTo (destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConvertTo(Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="member this.CanConvertTo : Type -&gt; bool" Usage="typeConverter.CanConvertTo destinationType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="destinationType">
          <span data-ttu-id="b7db1-156">A <see cref="T:System.Type" /> reprezentujący typ, który chcesz przekonwertować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-156">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7db1-157">Zwraca czy ten konwerter można przekonwertować obiekt określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-157">Returns whether this converter can convert the object to the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-158">
            <see langword="true" /> w przypadku tego konwertera można wykonać konwersji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-158">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7db1-159">Jeśli `destinationType` jest ciągiem, domyślna Implementacja klasy <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> zawsze zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="b7db1-159">If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="typeConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b7db1-160">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewniający kontekstu formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-160">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="b7db1-161">A <see cref="T:System.Type" /> reprezentujący typ, który chcesz przekonwertować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-161">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7db1-162">Zwraca czy ten konwerter przekonwertować obiekt na określony typ, używając określonego kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-162">Returns whether this converter can convert the object to the specified type, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-163">
            <see langword="true" /> w przypadku tego konwertera można wykonać konwersji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-163">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7db1-164">Użyj `context` parametru, aby wyodrębnić dodatkowe informacje o środowisku, w którym jest wywoływana tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="b7db1-164">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="b7db1-165">Ten parametr może być `null`, dlatego należy zawsze sprawdzić jej.</span><span class="sxs-lookup"><span data-stu-id="b7db1-165">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="b7db1-166">Ponadto we właściwościach obiektu context może zwrócić `null`.</span><span class="sxs-lookup"><span data-stu-id="b7db1-166">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="b7db1-167">Jeśli `destinationType` jest ciągiem, domyślna Implementacja klasy <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> zawsze zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="b7db1-167">If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b7db1-168">Zastępuje tę metodę, aby zapewnić wymagań konwersji.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-168">Override this method to provide your own conversion requirements.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFrom">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b7db1-169">Konwertuje podaną wartość do typu tego konwertera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-169">Converts the given value to the type of this converter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public object ConvertFrom (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFrom(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFrom (value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFrom(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertFrom : obj -&gt; obj" Usage="typeConverter.ConvertFrom value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b7db1-170">
            <see cref="T:System.Object" /> Do przekonwertowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-170">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7db1-171">Konwertuje podaną wartość do typu tego konwertera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-171">Converts the given value to the type of this converter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-172">
            <see cref="T:System.Object" /> Reprezentująca wartość przekonwertowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-172">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b7db1-173">Nie można wykonać konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-173">The conversion cannot be performed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public virtual object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="typeConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b7db1-174">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewniający kontekstu formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-174">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="b7db1-175">
            <see cref="T:System.Globalization.CultureInfo" /> Do użycia jako bieżącej kultury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-175">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b7db1-176">
            <see cref="T:System.Object" /> Do przekonwertowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-176">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7db1-177">Konwertuje dany obiekt na typ tego konwertera przy użyciu określonego kontekstu i informacjami o kulturze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-177">Converts the given object to the type of this converter, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-178">
            <see cref="T:System.Object" /> Reprezentująca wartość przekonwertowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-178">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7db1-179">Implementowanie autorzy typu niestandardowego, które mają być zazwyczaj obsługuje zachowanie konwersji typu dla XAML <xref:System.ComponentModel.TypeConverter> klasę, która obsługuje <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> zachowanie z ciągu.</span><span class="sxs-lookup"><span data-stu-id="b7db1-179">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string.</span></span> <span data-ttu-id="b7db1-180">To zachowanie umożliwia konwersji typu z podanego ciągu jako wartość atrybutu XAML i udostępniają procesora XAML pomocy technicznej potrzebnych do utworzenia obiektu ciągu, tak, aby obiekt można tworzyć w grafie obiektu przeanalizowany.</span><span class="sxs-lookup"><span data-stu-id="b7db1-180">This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.</span></span> <span data-ttu-id="b7db1-181">Niestandardowe typy i członkowie typów niestandardowych, które są wskazywane przez zastosowanie <xref:System.ComponentModel.TypeConverterAttribute> z definicjami z atrybutem odwołuje się do niestandardowego <xref:System.ComponentModel.TypeConverter> implementacji.</span><span class="sxs-lookup"><span data-stu-id="b7db1-181">Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.</span></span>  
  
 <span data-ttu-id="b7db1-182">Do celów XAML, zwykle niepodania rozgałęziania implementacji na podstawie `culture`.</span><span class="sxs-lookup"><span data-stu-id="b7db1-182">For XAML purposes, you do not typically provide branching implementations based on `culture`.</span></span> <span data-ttu-id="b7db1-183">Jest to spowodowane XAML jest wstępnie skompilowany w kontekście środowiska programowania, a informacje specyficzne dla kultury dla środowiska uruchomieniowego XAML nie jest odpowiednia do konwersji typu XAML.</span><span class="sxs-lookup"><span data-stu-id="b7db1-183">This is because XAML is precompiled in a development environment context, and culture-specific information for runtime XAML is not relevant for XAML type conversion.</span></span> <span data-ttu-id="b7db1-184">Aby uzyskać więcej informacji, zobacz [typy konwerterów dla XAML — omówienie](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="b7db1-184">For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b7db1-185">Nie można wykonać konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-185">The conversion cannot be performed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b7db1-186">Zastępuje tę metodę, aby zapewnić wymagań konwersji.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-186">Override this method to provide your own conversion requirements.</span>
            </span>
            <span data-ttu-id="b7db1-187">Użyj <paramref name="context" /> parametru, aby wyodrębnić dodatkowe informacje o środowisku, w którym jest wywoływana tego konwertera.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-187">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="b7db1-188">Ten parametr może być <see langword="null" />, dlatego należy zawsze sprawdzić jej.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-188">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="b7db1-189">Ponadto we właściwościach obiektu context może zwrócić <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-189">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
            <span data-ttu-id="b7db1-190">Wzorce konwerterów typów, które są używane do obsługi XAML i niestandardowe typy wdrożenia, można zobaczyć [typy konwerterów dla XAML — omówienie](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-190">For implementation patterns for type converters that are used to support XAML and custom types, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <related type="Article" href="http://msdn.microsoft.com/library/51a65860-efcb-4fe0-95a0-1c679cde66b7">
          <span data-ttu-id="b7db1-191">Typy konwerterów dla XAML — Omówienie</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-191">Type Converters for XAML Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFromInvariantString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b7db1-192">Konwertuje wartość na typ tego konwertera przy użyciu niezmiennej kultury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-192">Converts the value to a type of this converter, using the invariant culture.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFromInvariantString">
      <MemberSignature Language="C#" Value="public object ConvertFromInvariantString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromInvariantString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromInvariantString (text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromInvariantString(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromInvariantString : string -&gt; obj" Usage="typeConverter.ConvertFromInvariantString text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="b7db1-193">
            <see cref="T:System.String" /> Do przekonwertowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-193">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7db1-194">Konwertuje dany ciąg do typu tego konwertera przy użyciu niezmiennej kultury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-194">Converts the given string to the type of this converter, using the invariant culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-195">
            <see cref="T:System.Object" /> Reprezentujący przekonwertowany tekst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-195">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7db1-196">Zwraca zawsze wartość domyślną implementację `null`.</span><span class="sxs-lookup"><span data-stu-id="b7db1-196">The default implementation always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b7db1-197">Nie można wykonać konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-197">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromInvariantString">
      <MemberSignature Language="C#" Value="public object ConvertFromInvariantString (System.ComponentModel.ITypeDescriptorContext context, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromInvariantString(class System.ComponentModel.ITypeDescriptorContext context, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromInvariantString (context As ITypeDescriptorContext, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromInvariantString(System::ComponentModel::ITypeDescriptorContext ^ context, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromInvariantString : System.ComponentModel.ITypeDescriptorContext * string -&gt; obj" Usage="typeConverter.ConvertFromInvariantString (context, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b7db1-198">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewniający kontekstu formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-198">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="b7db1-199">
            <see cref="T:System.String" /> Do przekonwertowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-199">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7db1-200">Konwertuje dany ciąg do typu tego konwertera przy użyciu niezmiennej kultury i określonego kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-200">Converts the given string to the type of this converter, using the invariant culture and the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-201">
            <see cref="T:System.Object" /> Reprezentujący przekonwertowany tekst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-201">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7db1-202">Wyjątek jest zgłaszany, jeśli nie można przekonwertować ciągu do odpowiedniego obiektu.</span><span class="sxs-lookup"><span data-stu-id="b7db1-202">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="b7db1-203">Zwraca zawsze wartość domyślną implementację `null`.</span><span class="sxs-lookup"><span data-stu-id="b7db1-203">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="b7db1-204">Użyj `context` parametru, aby wyodrębnić dodatkowe informacje o środowisku, w którym jest wywoływana tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="b7db1-204">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="b7db1-205">Ten parametr może być `null`, dlatego należy zawsze sprawdzić jej.</span><span class="sxs-lookup"><span data-stu-id="b7db1-205">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="b7db1-206">Ponadto we właściwościach obiektu context może zwrócić `null`.</span><span class="sxs-lookup"><span data-stu-id="b7db1-206">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b7db1-207">Nie można wykonać konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-207">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFromString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b7db1-208">Konwertuje określony tekst do obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-208">Converts the specified text to an object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromString : string -&gt; obj" Usage="typeConverter.ConvertFromString text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="b7db1-209">Tekst reprezentujący obiekt do przekonwertowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-209">The text representation of the object to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7db1-210">Konwertuje określony tekst do obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-210">Converts the specified text to an object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-211">
            <see cref="T:System.Object" /> Reprezentujący przekonwertowany tekst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-211">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7db1-212">Zwraca zawsze wartość domyślną implementację `null`.</span><span class="sxs-lookup"><span data-stu-id="b7db1-212">The default implementation always returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7db1-213">Na przykład tę funkcję, zobacz <xref:System.ComponentModel.TypeConverter> klasy.</span><span class="sxs-lookup"><span data-stu-id="b7db1-213">For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b7db1-214">Nie można przekonwertować ciągu do odpowiedniego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-214">The string cannot be converted into the appropriate object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(class System.ComponentModel.ITypeDescriptorContext context, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (context As ITypeDescriptorContext, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::ComponentModel::ITypeDescriptorContext ^ context, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromString : System.ComponentModel.ITypeDescriptorContext * string -&gt; obj" Usage="typeConverter.ConvertFromString (context, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b7db1-215">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewniający kontekstu formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-215">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="b7db1-216">
            <see cref="T:System.String" /> Do przekonwertowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-216">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7db1-217">Konwertuje dany tekst na obiekt, przy użyciu określonego kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-217">Converts the given text to an object, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-218">
            <see cref="T:System.Object" /> Reprezentujący przekonwertowany tekst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-218">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7db1-219">Wyjątek jest zgłaszany, jeśli nie można przekonwertować ciągu do odpowiedniego obiektu.</span><span class="sxs-lookup"><span data-stu-id="b7db1-219">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="b7db1-220">Zwraca zawsze wartość domyślną implementację `null`.</span><span class="sxs-lookup"><span data-stu-id="b7db1-220">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="b7db1-221">Użyj `context` parametru, aby wyodrębnić dodatkowe informacje o środowisku, w którym jest wywoływana tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="b7db1-221">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="b7db1-222">Ten parametr może być `null`, dlatego należy zawsze sprawdzić jej.</span><span class="sxs-lookup"><span data-stu-id="b7db1-222">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="b7db1-223">Ponadto we właściwościach obiektu context może zwrócić `null`.</span><span class="sxs-lookup"><span data-stu-id="b7db1-223">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b7db1-224">Nie można wykonać konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-224">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (context As ITypeDescriptorContext, culture As CultureInfo, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromString : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * string -&gt; obj" Usage="typeConverter.ConvertFromString (context, culture, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b7db1-225">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewniający kontekstu formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-225">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="b7db1-226">A <see cref="T:System.Globalization.CultureInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-226">A <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="b7db1-227">Jeśli <see langword="null" /> jest przekazywany bieżącego zakłada, że kultury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-227">If <see langword="null" /> is passed, the current culture is assumed.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="b7db1-228">
            <see cref="T:System.String" /> Do przekonwertowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-228">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7db1-229">Konwertuje dany tekst na obiekt, przy użyciu określonego kontekstu i informacjami o kulturze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-229">Converts the given text to an object, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-230">
            <see cref="T:System.Object" /> Reprezentujący przekonwertowany tekst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-230">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7db1-231">Wyjątek jest zgłaszany, jeśli nie można przekonwertować ciągu do odpowiedniego obiektu.</span><span class="sxs-lookup"><span data-stu-id="b7db1-231">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="b7db1-232">Zwraca zawsze wartość domyślną implementację `null`.</span><span class="sxs-lookup"><span data-stu-id="b7db1-232">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="b7db1-233">Użyj `context` parametru, aby wyodrębnić dodatkowe informacje o środowisku, w którym jest wywoływana tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="b7db1-233">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="b7db1-234">Ten parametr może być `null`, dlatego należy zawsze sprawdzić jej.</span><span class="sxs-lookup"><span data-stu-id="b7db1-234">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="b7db1-235">Ponadto we właściwościach obiektu context może zwrócić `null`.</span><span class="sxs-lookup"><span data-stu-id="b7db1-235">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b7db1-236">Nie można wykonać konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-236">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTo">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b7db1-237">Konwertuje obiekt danej wartości określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-237">Converts the given value object to the specified type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public object ConvertTo (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertTo(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertTo (value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertTo(System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="member this.ConvertTo : obj * Type -&gt; obj" Usage="typeConverter.ConvertTo (value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b7db1-238">
            <see cref="T:System.Object" /> Do przekonwertowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-238">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="b7db1-239">
            <see cref="T:System.Type" /> Przekonwertować <c>wartość</c> parametr.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-239">The <see cref="T:System.Type" /> to convert the <c>value</c> parameter to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7db1-240">Konwertuje obiekt danej wartości na określony typ przy użyciu argumentów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-240">Converts the given value object to the specified type, using the arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-241">
            <see cref="T:System.Object" /> Reprezentująca wartość przekonwertowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-241">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7db1-242">Najczęściej spotykanym typem do konwersji do i z jest obiektem ciągu.</span><span class="sxs-lookup"><span data-stu-id="b7db1-242">The most common type to convert to and from is a string object.</span></span> <span data-ttu-id="b7db1-243">Ta implementacja wywołuje <xref:System.Object.ToString%2A> dla obiektu, jeśli obiekt jest prawidłowy i typu miejsca docelowego ciągu.</span><span class="sxs-lookup"><span data-stu-id="b7db1-243">This implementation calls <xref:System.Object.ToString%2A> on the object, if the object is valid and if the destination type is a string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b7db1-244">
            <paramref name="destinationType" /> Parametr <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-244">The <paramref name="destinationType" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b7db1-245">Nie można wykonać konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-245">The conversion cannot be performed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public virtual object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="typeConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b7db1-246">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewniający kontekstu formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-246">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="b7db1-247">A <see cref="T:System.Globalization.CultureInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-247">A <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="b7db1-248">Jeśli <see langword="null" /> jest przekazywany bieżącego zakłada, że kultury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-248">If <see langword="null" /> is passed, the current culture is assumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b7db1-249">
            <see cref="T:System.Object" /> Do przekonwertowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-249">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="b7db1-250">
            <see cref="T:System.Type" /> Przekonwertować <c>wartość</c> parametr.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-250">The <see cref="T:System.Type" /> to convert the <c>value</c> parameter to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7db1-251">Konwertuje obiekt danej wartości na określony typ przy użyciu określonego kontekstu i informacjami o kulturze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-251">Converts the given value object to the specified type, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-252">
            <see cref="T:System.Object" /> Reprezentująca wartość przekonwertowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-252">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7db1-253">Najczęściej używane typy, aby przekonwertować są do i z obiektem ciągu.</span><span class="sxs-lookup"><span data-stu-id="b7db1-253">The most common types to convert are to and from a string object.</span></span> <span data-ttu-id="b7db1-254">Ta implementacja wywołuje <xref:System.Object.ToString%2A> obiektu Jeśli obiekt jest prawidłowy i typu miejsca docelowego ciągu.</span><span class="sxs-lookup"><span data-stu-id="b7db1-254">This implementation calls <xref:System.Object.ToString%2A> on the object if the object is valid and if the destination type is a string.</span></span>  
  
 <span data-ttu-id="b7db1-255">Użyj `context` parametru, aby wyodrębnić dodatkowe informacje o środowisku, w którym jest wywoływana tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="b7db1-255">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="b7db1-256">Ten parametr może być `null`, dlatego należy zawsze sprawdzić jej.</span><span class="sxs-lookup"><span data-stu-id="b7db1-256">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="b7db1-257">Ponadto we właściwościach obiektu context może zwrócić `null`.</span><span class="sxs-lookup"><span data-stu-id="b7db1-257">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="b7db1-258">Implementowanie autorzy typu niestandardowego, które mają być zazwyczaj obsługuje zachowanie konwersji typu dla XAML <xref:System.ComponentModel.TypeConverter> klasę, która obsługuje <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> zachowanie z ciągu.</span><span class="sxs-lookup"><span data-stu-id="b7db1-258">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string.</span></span> <span data-ttu-id="b7db1-259">Te typy konwerterów mogą także implementować <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> do obsługi serializacji do XAML.</span><span class="sxs-lookup"><span data-stu-id="b7db1-259">These type converters might also implement <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> to support serialization back to XAML.</span></span>  
  
 <span data-ttu-id="b7db1-260">Niektóre scenariusze serializacji XAML nie można odpowiednio spełniane z <xref:System.ComponentModel.TypeConverter> samodzielnie.</span><span class="sxs-lookup"><span data-stu-id="b7db1-260">Some XAML serialization scenarios cannot be adequately addressed with <xref:System.ComponentModel.TypeConverter> alone.</span></span> <span data-ttu-id="b7db1-261">W takich przypadkach może być konieczne także definiować <xref:System.Windows.Markup.ValueSerializer> obsługująca przypadków serializacji, które w przeciwnym razie mogłyby zostać obsłużony przez <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>.</span><span class="sxs-lookup"><span data-stu-id="b7db1-261">In these cases, it may be necessary to also define a <xref:System.Windows.Markup.ValueSerializer> that handles the serialization cases that would otherwise be handled by <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>.</span></span> <span data-ttu-id="b7db1-262">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Markup.ValueSerializer>.</span><span class="sxs-lookup"><span data-stu-id="b7db1-262">For more information, see <xref:System.Windows.Markup.ValueSerializer>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b7db1-263">
            <paramref name="destinationType" /> Parametr <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-263">The <paramref name="destinationType" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b7db1-264">Nie można wykonać konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-264">The conversion cannot be performed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b7db1-265">Zastępuje tę metodę, aby zapewnić wymagań konwersji.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-265">Override this method to provide your own conversion requirements.</span>
            </span>
            <span data-ttu-id="b7db1-266">Wzorce konwerterów typów, które są używane do obsługi XAML i niestandardowe typy wdrożenia, można zobaczyć [typy konwerterów dla XAML — omówienie](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-266">For implementation patterns for type converters that are used to support XAML and custom types, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <related type="Article" href="http://msdn.microsoft.com/library/51a65860-efcb-4fe0-95a0-1c679cde66b7">
          <span data-ttu-id="b7db1-267">Typy konwerterów dla XAML — Omówienie</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-267">Type Converters for XAML Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToInvariantString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b7db1-268">Konwertuje określoną wartość do reprezentacji ciągu niezmiennej kultury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-268">Converts the specified value to a culture-invariant string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToInvariantString">
      <MemberSignature Language="C#" Value="public string ConvertToInvariantString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToInvariantString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToInvariantString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToInvariantString(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToInvariantString : obj -&gt; string" Usage="typeConverter.ConvertToInvariantString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b7db1-269">
            <see cref="T:System.Object" /> Do przekonwertowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-269">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7db1-270">Konwertuje określoną wartość do reprezentacji ciągu niezmiennej kultury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-270">Converts the specified value to a culture-invariant string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-271">A <see cref="T:System.String" /> reprezentująca wartość przekonwertowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-271">A <see cref="T:System.String" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7db1-272">`context` Parametru może służyć do wyodrębnienia dodatkowe informacje o środowisku, w którym jest wywoływana tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="b7db1-272">The `context` parameter can be used to extract additional information about the environment from which this converter is being invoked.</span></span> <span data-ttu-id="b7db1-273">Może to być `null`, dlatego należy zawsze sprawdzić.</span><span class="sxs-lookup"><span data-stu-id="b7db1-273">This can be `null`, so always check.</span></span> <span data-ttu-id="b7db1-274">Ponadto we właściwościach obiektu context może zwrócić `null`.</span><span class="sxs-lookup"><span data-stu-id="b7db1-274">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="b7db1-275">W zależności od implementacji programu formatującego wartości może istnieć możliwość przekazania zwracanego ciągu powrót do programu formatującego wartości, aby ponownie utworzyć wystąpienie obiektu.</span><span class="sxs-lookup"><span data-stu-id="b7db1-275">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b7db1-276">Nie można wykonać konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-276">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToInvariantString">
      <MemberSignature Language="C#" Value="public string ConvertToInvariantString (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToInvariantString(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToInvariantString (context As ITypeDescriptorContext, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToInvariantString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToInvariantString : System.ComponentModel.ITypeDescriptorContext * obj -&gt; string" Usage="typeConverter.ConvertToInvariantString (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b7db1-277">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewniający kontekstu formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-277">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b7db1-278">
            <see cref="T:System.Object" /> Do przekonwertowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-278">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7db1-279">Konwertuje określoną wartość kultury niezmiennej reprezentację w postaci ciągu przy użyciu określonego kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-279">Converts the specified value to a culture-invariant string representation, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-280">A <see cref="T:System.String" /> reprezentująca wartość przekonwertowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-280">A <see cref="T:System.String" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7db1-281">Użyj `context` parametru, aby wyodrębnić dodatkowe informacje o środowisku, w którym jest wywoływana tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="b7db1-281">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="b7db1-282">Ten parametr może być `null`, dlatego należy zawsze sprawdzić jej.</span><span class="sxs-lookup"><span data-stu-id="b7db1-282">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="b7db1-283">Ponadto we właściwościach obiektu context może zwrócić `null`.</span><span class="sxs-lookup"><span data-stu-id="b7db1-283">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="b7db1-284">W zależności od implementacji programu formatującego wartości może istnieć możliwość przekazania zwracanego ciągu powrót do programu formatującego wartości, aby ponownie utworzyć wystąpienie obiektu.</span><span class="sxs-lookup"><span data-stu-id="b7db1-284">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b7db1-285">Nie można wykonać konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-285">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b7db1-286">Konwertuje określoną wartość na reprezentację ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-286">Converts the specified value to a string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToString : obj -&gt; string" Usage="typeConverter.ConvertToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b7db1-287">
            <see cref="T:System.Object" /> Do przekonwertowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-287">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7db1-288">Konwertuje określoną wartość na reprezentację ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-288">Converts the specified value to a string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-289">
            <see cref="T:System.Object" /> Reprezentująca wartość przekonwertowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-289">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7db1-290">W zależności od implementacji programu formatującego wartości może istnieć możliwość przekazania zwracanego ciągu powrót do programu formatującego wartości, aby ponownie utworzyć wystąpienie obiektu.</span><span class="sxs-lookup"><span data-stu-id="b7db1-290">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7db1-291">Na przykład w tej funkcji, zobacz <xref:System.ComponentModel.TypeConverter> klasy.</span><span class="sxs-lookup"><span data-stu-id="b7db1-291">For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b7db1-292">Nie można wykonać konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-292">The conversion cannot be performed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (context As ITypeDescriptorContext, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToString : System.ComponentModel.ITypeDescriptorContext * obj -&gt; string" Usage="typeConverter.ConvertToString (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b7db1-293">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewniający kontekstu formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-293">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b7db1-294">
            <see cref="T:System.Object" /> Do przekonwertowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-294">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7db1-295">Konwertuje ciąg reprezentujący w danym kontekście danej wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-295">Converts the given value to a string representation, using the given context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-296">
            <see cref="T:System.Object" /> Reprezentująca wartość przekonwertowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-296">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7db1-297">Użyj `context` parametru, aby wyodrębnić dodatkowe informacje o środowisku, w którym jest wywoływana tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="b7db1-297">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="b7db1-298">Ten parametr może być `null`, dlatego należy zawsze sprawdzić jej.</span><span class="sxs-lookup"><span data-stu-id="b7db1-298">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="b7db1-299">Ponadto we właściwościach obiektu context może zwrócić `null`.</span><span class="sxs-lookup"><span data-stu-id="b7db1-299">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="b7db1-300">W zależności od implementacji programu formatującego wartości może istnieć możliwość przekazania zwracanego ciągu powrót do programu formatującego wartości, aby ponownie utworzyć wystąpienie obiektu.</span><span class="sxs-lookup"><span data-stu-id="b7db1-300">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b7db1-301">Nie można wykonać konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-301">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToString : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; string" Usage="typeConverter.ConvertToString (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b7db1-302">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewniający kontekstu formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-302">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="b7db1-303">A <see cref="T:System.Globalization.CultureInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-303">A <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="b7db1-304">Jeśli <see langword="null" /> jest przekazywany bieżącego zakłada, że kultury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-304">If <see langword="null" /> is passed, the current culture is assumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b7db1-305">
            <see cref="T:System.Object" /> Do przekonwertowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-305">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7db1-306">Konwertuje ciąg reprezentujący przy użyciu określonego kontekstu i informacjami o kulturze danej wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-306">Converts the given value to a string representation, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-307">
            <see cref="T:System.Object" /> Reprezentująca wartość przekonwertowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-307">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7db1-308">Użyj `context` parametru, aby wyodrębnić dodatkowe informacje o środowisku, w którym jest wywoływana tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="b7db1-308">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="b7db1-309">Ten parametr może być `null`, dlatego należy zawsze sprawdzić jej.</span><span class="sxs-lookup"><span data-stu-id="b7db1-309">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="b7db1-310">Ponadto we właściwościach obiektu context może zwrócić `null`.</span><span class="sxs-lookup"><span data-stu-id="b7db1-310">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="b7db1-311">W zależności od implementacji programu formatującego wartości może istnieć możliwość przekazania zwracanego ciągu powrót do programu formatującego wartości, aby ponownie utworzyć wystąpienie obiektu.</span><span class="sxs-lookup"><span data-stu-id="b7db1-311">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b7db1-312">Nie można wykonać konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-312">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b7db1-313">Ponownie tworzy <see cref="T:System.Object" /> przyznany zestaw wartości właściwości dla obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-313">Re-creates an <see cref="T:System.Object" /> given a set of property values for the object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateInstance(class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstance(System::Collections::IDictionary ^ propertyValues);" />
      <MemberSignature Language="F#" Value="member this.CreateInstance : System.Collections.IDictionary -&gt; obj" Usage="typeConverter.CreateInstance propertyValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="propertyValues">
          <span data-ttu-id="b7db1-314">
            <see cref="T:System.Collections.IDictionary" /> Reprezentujący słownika zawierającego nowe wartości właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-314">An <see cref="T:System.Collections.IDictionary" /> that represents a dictionary of new property values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7db1-315">Ponownie tworzy <see cref="T:System.Object" /> przyznany zestaw wartości właściwości dla obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-315">Re-creates an <see cref="T:System.Object" /> given a set of property values for the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-316">
            <see cref="T:System.Object" /> Reprezentujący danego <see cref="T:System.Collections.IDictionary" />, lub <see langword="null" /> Jeśli nie można utworzyć obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-316">An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <see langword="null" /> if the object cannot be created.</span>
          </span>
          <span data-ttu-id="b7db1-317">Ta metoda zawsze zwraca <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-317">This method always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7db1-318">Użyj tej metody dla obiektów, które są niezmienne, ale dla których chcesz udostępnić właściwości mogły być zmieniane.</span><span class="sxs-lookup"><span data-stu-id="b7db1-318">Use this method for objects that are immutable, but for which you want to provide changeable properties.</span></span>  
  
 <span data-ttu-id="b7db1-319">Słownik dostarczone przez `propertyValues` parametr ma szereg pary nazwa/wartość, jedną dla każdej właściwości zwróciło <xref:System.ComponentModel.TypeConverter.GetProperties%2A>.</span><span class="sxs-lookup"><span data-stu-id="b7db1-319">The dictionary provided by the `propertyValues` parameter has a series of name/value pairs, one for each property returned from <xref:System.ComponentModel.TypeConverter.GetProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(class System.ComponentModel.ITypeDescriptorContext context, class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (context As ITypeDescriptorContext, propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(System::ComponentModel::ITypeDescriptorContext ^ context, System::Collections::IDictionary ^ propertyValues);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : System.ComponentModel.ITypeDescriptorContext * System.Collections.IDictionary -&gt; obj&#xA;override this.CreateInstance : System.ComponentModel.ITypeDescriptorContext * System.Collections.IDictionary -&gt; obj" Usage="typeConverter.CreateInstance (context, propertyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b7db1-320">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewniający kontekstu formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-320">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="propertyValues">
          <span data-ttu-id="b7db1-321">
            <see cref="T:System.Collections.IDictionary" /> Nowe wartości właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-321">An <see cref="T:System.Collections.IDictionary" /> of new property values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7db1-322">Tworzy wystąpienie tego typu, który to <see cref="T:System.ComponentModel.TypeConverter" /> jest skojarzony, przy użyciu określonego kontekstu, w danym zestawie wartości właściwości dla obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-322">Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-323">
            <see cref="T:System.Object" /> Reprezentujący danego <see cref="T:System.Collections.IDictionary" />, lub <see langword="null" /> Jeśli nie można utworzyć obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-323">An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <see langword="null" /> if the object cannot be created.</span>
          </span>
          <span data-ttu-id="b7db1-324">Ta metoda zawsze zwraca <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-324">This method always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7db1-325">Użyj tej metody dla obiektów, które są niezmienne, ale dla których chcesz udostępnić właściwości mogły być zmieniane.</span><span class="sxs-lookup"><span data-stu-id="b7db1-325">Use this method for objects that are immutable, but for which you want to provide changeable properties.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b7db1-326">Przesłania tę metodę, jeśli typ, który ma zostać przekonwertowany, należy ponownie utworzyć obiekt, aby zmienić jego wartość.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-326">Override this method if the type you want to convert must re-create the object to change its value.</span>
            </span>
            <span data-ttu-id="b7db1-327">Użyj <paramref name="context" /> parametru, aby wyodrębnić dodatkowe informacje o środowisku, w którym jest wywoływana tego konwertera.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-327">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="b7db1-328">Ten parametr może być <see langword="null" />, dlatego należy zawsze sprawdzić jej.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-328">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="b7db1-329">Ponadto we właściwościach obiektu context może zwrócić <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-329">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
            <span data-ttu-id="b7db1-330">Słownik dostarczone przez <paramref name="propertyValues" /> parametr ma szereg pary nazwa/wartość, jedną dla każdej właściwości zwróciło <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-330">The dictionary provided by the <paramref name="propertyValues" /> parameter has a series of name/value pairs, one for each property returned from <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="GetConvertFromException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertFromException (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertFromException(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertFromException (value As Object) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertFromException(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetConvertFromException : obj -&gt; Exception" Usage="typeConverter.GetConvertFromException value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b7db1-331">
            <see cref="T:System.Object" /> Do konwersji, lub <see langword="null" /> Jeśli obiekt nie jest dostępna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-331">The <see cref="T:System.Object" /> to convert, or <see langword="null" /> if the object is not available.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7db1-332">Zwraca wyjątek, aby zgłosić, gdy nie można wykonać konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-332">Returns an exception to throw when a conversion cannot be performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-333">
            <see cref="T:System.Exception" /> Reprezentujący wyjątek do zgłaszania, gdy nie można wykonać konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-333">An <see cref="T:System.Exception" /> that represents the exception to throw when a conversion cannot be performed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b7db1-334">Automatycznie generowane przez tę metodę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-334">Automatically thrown by this method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetConvertToException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertToException (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertToException(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertToException (value As Object, destinationType As Type) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertToException(System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="member this.GetConvertToException : obj * Type -&gt; Exception" Usage="typeConverter.GetConvertToException (value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b7db1-335">
            <see cref="T:System.Object" /> Do konwersji, lub <see langword="null" /> Jeśli obiekt nie jest dostępna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-335">The <see cref="T:System.Object" /> to convert, or <see langword="null" /> if the object is not available.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="b7db1-336">A <see cref="T:System.Type" /> reprezentujący typ konwersji próbował przekonwertować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-336">A <see cref="T:System.Type" /> that represents the type the conversion was trying to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7db1-337">Zwraca wyjątek, aby zgłosić, gdy nie można wykonać konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-337">Returns an exception to throw when a conversion cannot be performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-338">
            <see cref="T:System.Exception" /> Reprezentujący wyjątek do zgłaszania, gdy nie można wykonać konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-338">An <see cref="T:System.Exception" /> that represents the exception to throw when a conversion cannot be performed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b7db1-339">Automatycznie generowane przez tę metodę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-339">Automatically thrown by this method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCreateInstanceSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b7db1-340">Zwraca, czy zmiana wartości dla tego obiektu wymaga wywołania <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> metodę, aby utworzyć nową wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-340">Returns whether changing a value on this object requires a call to the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> method to create a new value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public bool GetCreateInstanceSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetCreateInstanceSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCreateInstanceSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetCreateInstanceSupported();" />
      <MemberSignature Language="F#" Value="member this.GetCreateInstanceSupported : unit -&gt; bool" Usage="typeConverter.GetCreateInstanceSupported " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b7db1-341">Zwraca, czy zmiana wartości dla tego obiektu wymaga wywołania <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> metodę, aby utworzyć nową wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-341">Returns whether changing a value on this object requires a call to the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> method to create a new value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-342">
            <see langword="true" /> Jeśli zmiana właściwości dla tego obiektu wymaga wywołania <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> do utworzenia nowej wartości; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-342">
              <see langword="true" /> if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetCreateInstanceSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCreateInstanceSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetCreateInstanceSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetCreateInstanceSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetCreateInstanceSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeConverter.GetCreateInstanceSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b7db1-343">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewniający kontekstu formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-343">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7db1-344">Zwraca, czy zmiana wartości dla tego obiektu wymaga wywołania <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> do utworzenia nowej wartości, używając określonego kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-344">Returns whether changing a value on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-345">
            <see langword="true" /> Jeśli zmiana właściwości dla tego obiektu wymaga wywołania <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> do utworzenia nowej wartości; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-345">
              <see langword="true" /> if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7db1-346">Zaimplementowanego w tej klasie, ta metoda zawsze zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="b7db1-346">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b7db1-347">Przesłania tę metodę, jeśli typ, który ma zostać przekonwertowany, należy ponownie utworzyć obiekt, aby zmienić jego wartość.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-347">Override this method if the type you want to convert must re-create the object to change its value.</span>
            </span>
            <span data-ttu-id="b7db1-348">Użyj <paramref name="context" /> parametru, aby wyodrębnić dodatkowe informacje o środowisku, w którym jest wywoływana tego konwertera.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-348">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="b7db1-349">Ten parametr może być <see langword="null" />, dlatego należy zawsze sprawdzić jej.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-349">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="b7db1-350">Ponadto we właściwościach obiektu context może zwrócić <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-350">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b7db1-351">Zwraca kolekcję właściwości dla typu określonego przez parametr wartości tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-351">Returns a collection of properties for the type of array specified by the value parameter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (value As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetProperties : obj -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="typeConverter.GetProperties value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b7db1-352">
            <see cref="T:System.Object" /> Określająca typ tablicy, dla którego można pobrać właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-352">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7db1-353">Zwraca kolekcję właściwości dla typu określonego przez parametr wartości tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-353">Returns a collection of properties for the type of array specified by the value parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-354">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> z właściwościami, które są dostępne dla tego typu danych lub <see langword="null" /> Jeśli nie ma żadnych właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-354">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7db1-355">Zaimplementowanego w tej klasie, ta metoda zawsze zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="b7db1-355">As implemented in this class, this method always returns `null`.</span></span>  
  
 <span data-ttu-id="b7db1-356">Domyślnie typ nie zwraca właściwości.</span><span class="sxs-lookup"><span data-stu-id="b7db1-356">By default, a type does not return properties.</span></span> <span data-ttu-id="b7db1-357">Łatwa implementacja tej metody można wywołać <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> na prawidłowy typ danych.</span><span class="sxs-lookup"><span data-stu-id="b7db1-357">An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (context As ITypeDescriptorContext, value As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetProperties : System.ComponentModel.ITypeDescriptorContext * obj -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="typeConverter.GetProperties (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b7db1-358">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewniający kontekstu formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-358">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b7db1-359">
            <see cref="T:System.Object" /> Określająca typ tablicy, dla którego można pobrać właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-359">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7db1-360">Zwraca kolekcję właściwości typu tablica określona przez parametr wartość, przy użyciu określonego kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-360">Returns a collection of properties for the type of array specified by the value parameter, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-361">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> z właściwościami, które są dostępne dla tego typu danych lub <see langword="null" /> Jeśli nie ma żadnych właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-361">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7db1-362">Użyj `context` parametru, aby wyodrębnić dodatkowe informacje o środowisku, w którym jest wywoływana tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="b7db1-362">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="b7db1-363">Ten parametr może być `null`, dlatego należy zawsze sprawdzić jej.</span><span class="sxs-lookup"><span data-stu-id="b7db1-363">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="b7db1-364">Ponadto we właściwościach obiektu context może zwrócić `null`.</span><span class="sxs-lookup"><span data-stu-id="b7db1-364">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="b7db1-365">Zaimplementowanego w tej klasie, ta metoda zawsze zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="b7db1-365">As implemented in this class, this method always returns `null`.</span></span>  
  
 <span data-ttu-id="b7db1-366">Domyślnie typ nie zwraca właściwości.</span><span class="sxs-lookup"><span data-stu-id="b7db1-366">By default, a type does not return properties.</span></span> <span data-ttu-id="b7db1-367">Łatwa implementacja tej metody można wywołać <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> na prawidłowy typ danych.</span><span class="sxs-lookup"><span data-stu-id="b7db1-367">An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="typeConverter.GetProperties (context, value, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b7db1-368">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewniający kontekstu formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-368">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b7db1-369">
            <see cref="T:System.Object" /> Określająca typ tablicy, dla którego można pobrać właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-369">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="b7db1-370">Tablica typu <see cref="T:System.Attribute" /> używany jako filtr.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-370">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7db1-371">Zwraca kolekcję właściwości typu tablica określona przez parametr wartość, przy użyciu określonego kontekstu i atrybutów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-371">Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-372">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> z właściwościami, które są dostępne dla tego typu danych lub <see langword="null" /> Jeśli nie ma żadnych właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-372">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7db1-373">Zaimplementowanego w tej klasie, ta metoda zawsze zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="b7db1-373">As implemented in this class, this method always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b7db1-374">Należy przesłonić tę metodę, jeśli typ, który chcesz przekonwertować obsługuje właściwości.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-374">Override this method if the type you want to convert supports properties.</span>
            </span>
            <span data-ttu-id="b7db1-375">Użyj <paramref name="context" /> parametru, aby wyodrębnić dodatkowe informacje o środowisku, w którym jest wywoływana tego konwertera.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-375">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="b7db1-376">Ten parametr może być <see langword="null" />, dlatego należy zawsze sprawdzić jej.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-376">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="b7db1-377">Ponadto we właściwościach obiektu context może zwrócić <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-377">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
            <span data-ttu-id="b7db1-378">Tablica atrybutów jest używana do filtrowania tablicy.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-378">The attributes array is used to filter the array.</span>
            </span>
            <span data-ttu-id="b7db1-379">Atrybuty mogą mieć różne <see cref="T:System.Type" /> i <see cref="T:System.Attribute" /> obiektów.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-379">The attributes can have a mix of <see cref="T:System.Type" /> and <see cref="T:System.Attribute" /> objects.</span>
            </span>
            <span data-ttu-id="b7db1-380">Filtrowanie jest definiowany przez następujące reguły:</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-380">Filtering is defined by the following rules:</span>
            </span>
            <span data-ttu-id="b7db1-381">-A <see cref="T:System.Type" /> jest traktowana jako symbol wieloznaczny; właściwość, do której jest on zgodny <see cref="T:System.Type" /> w jej zestaw atrybutów.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-381">-   A <see cref="T:System.Type" /> is treated as a wildcard; it matches a property that has the <see cref="T:System.Type" /> in its set of attributes.</span>
            </span>
            <span data-ttu-id="b7db1-382">— Jeśli nie ma właściwości <see cref="T:System.Attribute" /> tej samej klasy właściwości nie są objęte zwracana tablica.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-382">-   If a property does not have an <see cref="T:System.Attribute" /> of the same class, the property is not included in the returned array.</span>
            </span>
            <span data-ttu-id="b7db1-383">-Jeśli ten atrybut jest wystąpieniem <see cref="T:System.Attribute" />, właściwość musi być dokładnym dopasowaniem lub nie są objęte zwracana tablica.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-383">-   If the attribute is an instance of <see cref="T:System.Attribute" />, the property must be an exact match or it is not included in the returned array.</span>
            </span>
            <span data-ttu-id="b7db1-384">-Jeśli <see cref="T:System.Attribute" /> określone wystąpienie i jest właściwością domyślną, jest on zawarty w zwróconej tablicy, nawet jeśli żadne wystąpienie elementu <see cref="T:System.Attribute" /> we właściwości.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-384">-   If an <see cref="T:System.Attribute" /> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <see cref="T:System.Attribute" /> in the property.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPropertiesSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b7db1-385">Zwraca czy ten obiekt obsługuje właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-385">Returns whether this object supports properties.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public bool GetPropertiesSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetPropertiesSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertiesSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetPropertiesSupported();" />
      <MemberSignature Language="F#" Value="member this.GetPropertiesSupported : unit -&gt; bool" Usage="typeConverter.GetPropertiesSupported " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b7db1-386">Zwraca czy ten obiekt obsługuje właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-386">Returns whether this object supports properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-387">
            <see langword="true" /> Jeśli <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> powinna być wywoływana, aby znaleźć właściwości tego obiektu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-387">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7db1-388">Zaimplementowanego w tej klasie, ta metoda zawsze zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="b7db1-388">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPropertiesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetPropertiesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertiesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetPropertiesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeConverter.GetPropertiesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b7db1-389">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewniający kontekstu formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-389">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7db1-390">Zwraca czy ten obiekt obsługuje właściwości, używając określonego kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-390">Returns whether this object supports properties, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-391">
            <see langword="true" /> Jeśli <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> powinna być wywoływana, aby znaleźć właściwości tego obiektu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-391">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7db1-392">Zaimplementowanego w tej klasie, ta metoda zawsze zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="b7db1-392">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b7db1-393">Należy przesłonić tę metodę, jeśli typ, który chcesz przekonwertować obsługuje właściwości.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-393">Override this method if the type you want to convert supports properties.</span>
            </span>
            <span data-ttu-id="b7db1-394">Użyj <paramref name="context" /> parametru, aby wyodrębnić dodatkowe informacje o środowisku, w którym jest wywoływana tego konwertera.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-394">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="b7db1-395">Ten parametr może być <see langword="null" />, dlatego należy zawsze sprawdzić jej.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-395">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="b7db1-396">Ponadto we właściwościach obiektu context może zwrócić <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-396">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValues">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b7db1-397">Zwraca kolekcję wartości domyślnych dla tego konwertera typu jest przeznaczona dla typu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-397">Returns a collection of standard values for the data type this type converter is designed for.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetStandardValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ICollection GetStandardValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValues" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValues () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetStandardValues();" />
      <MemberSignature Language="F#" Value="member this.GetStandardValues : unit -&gt; System.Collections.ICollection" Usage="typeConverter.GetStandardValues " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b7db1-398">Zwraca kolekcję standardowe wartości z domyślnego kontekstu dla tego konwertera typu jest przeznaczona dla typu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-398">Returns a collection of standard values from the default context for the data type this type converter is designed for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-399">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> zawierającą standardowy zestaw prawidłowych wartości lub <see langword="null" /> Jeśli typ danych nie obsługuje standardowy zestaw wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-399">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> containing a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7db1-400">Zaimplementowanego w tej klasie, ta metoda zawsze zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="b7db1-400">As implemented in this class, this method always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection&#xA;override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="typeConverter.GetStandardValues context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b7db1-401">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewniający kontekstu formatu, który może służyć do wyodrębnienia dodatkowe informacje o środowisku, w którym jest wywoływana tego konwertera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-401">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked.</span>
          </span>
          <span data-ttu-id="b7db1-402">Tego parametru lub właściwości tego parametru może być <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-402">This parameter or properties of this parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7db1-403">Zwraca kolekcję wartości domyślnych dla tego konwertera typu jest przeznaczona dla udostępniane z kontekstem format typu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-403">Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-404">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> przechowuje standardowy zestaw prawidłowych wartości lub <see langword="null" /> Jeśli typ danych nie obsługuje standardowy zestaw wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-404">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7db1-405">Zaimplementowanego w <xref:System.ComponentModel.TypeConverter>, ta metoda zawsze zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="b7db1-405">As implemented in <xref:System.ComponentModel.TypeConverter>, this method always returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7db1-406">Na przykład w tej funkcji, zobacz <xref:System.ComponentModel.TypeConverter> klasy.</span><span class="sxs-lookup"><span data-stu-id="b7db1-406">For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b7db1-407">Należy przesłonić tę metodę, jeśli typ, który chcesz przekonwertować obsługuje standardowe wartości.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-407">Override this method if the type you want to convert supports standard values.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValuesExclusive">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b7db1-408">Zwraca czy kolekcja standardowe wartości zwracane z <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> jest wyłączną listę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-408">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public bool GetStandardValuesExclusive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetStandardValuesExclusive() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValuesExclusive () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetStandardValuesExclusive();" />
      <MemberSignature Language="F#" Value="member this.GetStandardValuesExclusive : unit -&gt; bool" Usage="typeConverter.GetStandardValuesExclusive " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b7db1-409">Zwraca czy kolekcja standardowe wartości zwracane z <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> jest wyłączną listę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-409">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-410">
            <see langword="true" /> Jeśli <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> zwróciło <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> jest to pełna lista możliwych wartości. <see langword="false" /> przypadku możliwe są inne wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-410">
              <see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exhaustive list of possible values; <see langword="false" /> if other values are possible.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7db1-411">Zaimplementowanego w tej klasie, ta metoda zawsze zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="b7db1-411">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="b7db1-412">Jeśli lista jest wzajemnie, takie jak typ danych wyliczeniowych, żadne inne wartości są prawidłowe.</span><span class="sxs-lookup"><span data-stu-id="b7db1-412">If the list is exclusive, such as in an enumeration data type, then no other values are valid.</span></span> <span data-ttu-id="b7db1-413">Jeśli lista nie jest wzajemnie, innymi prawidłowymi wartościami może istnieć oprócz listy standardowe wartości <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> zapewnia metody.</span><span class="sxs-lookup"><span data-stu-id="b7db1-413">If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides.</span></span> <span data-ttu-id="b7db1-414">Jeśli wartości są wyłączne, lista zwrócona przez <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> nie powinien zezwalać na tych wartości, aby go edytować.</span><span class="sxs-lookup"><span data-stu-id="b7db1-414">If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public virtual bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeConverter.GetStandardValuesExclusive context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b7db1-415">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewniający kontekstu formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-415">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7db1-416">Zwraca czy kolekcja standardowe wartości zwracane z <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> jest wyłączną listę możliwych wartości, używając określonego kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-416">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list of possible values, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-417">
            <see langword="true" /> Jeśli <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> zwróciło <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> jest to pełna lista możliwych wartości. <see langword="false" /> przypadku możliwe są inne wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-417">
              <see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exhaustive list of possible values; <see langword="false" /> if other values are possible.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7db1-418">Zaimplementowanego w tej klasie, ta metoda zawsze zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="b7db1-418">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="b7db1-419">Jeśli lista jest wzajemnie, takie jak typ danych wyliczeniowych, żadne inne wartości są prawidłowe.</span><span class="sxs-lookup"><span data-stu-id="b7db1-419">If the list is exclusive, such as in an enumeration data type, then no other values are valid.</span></span> <span data-ttu-id="b7db1-420">Jeśli lista nie jest wzajemnie, innymi prawidłowymi wartościami może istnieć oprócz listy standardowe wartości <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> zapewnia metody.</span><span class="sxs-lookup"><span data-stu-id="b7db1-420">If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides.</span></span> <span data-ttu-id="b7db1-421">Jeśli wartości są wyłączne, lista zwrócona przez <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> nie powinien zezwalać na tych wartości, aby go edytować.</span><span class="sxs-lookup"><span data-stu-id="b7db1-421">If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b7db1-422">Należy przesłonić tę metodę, jeśli typ, który chcesz przekonwertować obsługuje standardowe wartości.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-422">Override this method if the type you want to convert supports standard values.</span>
            </span>
            <span data-ttu-id="b7db1-423">Użyj <paramref name="context" /> parametru, aby wyodrębnić dodatkowe informacje o środowisku, w którym jest wywoływana tego konwertera.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-423">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="b7db1-424">Ten parametr może być <see langword="null" />, dlatego należy zawsze sprawdzić jej.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-424">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="b7db1-425">Ponadto we właściwościach obiektu context może zwrócić <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-425">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValuesSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b7db1-426">Zwraca czy ten obiekt obsługuje standardowy zestaw wartości, które mogą zostać pobrane z listy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-426">Returns whether this object supports a standard set of values that can be picked from a list.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public bool GetStandardValuesSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetStandardValuesSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValuesSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetStandardValuesSupported();" />
      <MemberSignature Language="F#" Value="member this.GetStandardValuesSupported : unit -&gt; bool" Usage="typeConverter.GetStandardValuesSupported " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b7db1-427">Zwraca czy ten obiekt obsługuje standardowy zestaw wartości, które mogą zostać pobrane z listy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-427">Returns whether this object supports a standard set of values that can be picked from a list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-428">
            <see langword="true" /> Jeśli <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> powinna być wywołana można znaleźć wspólny zbiór wartości, które obsługuje obiektu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-428">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeConverter.GetStandardValuesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b7db1-429">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewniający kontekstu formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-429">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7db1-430">Zwraca czy ten obiekt obsługuje standardowy zestaw wartości, które mogą zostać pobrane z listy, używając określonego kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-430">Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-431">
            <see langword="true" /> Jeśli <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> powinna być wywołana można znaleźć wspólny zbiór wartości, które obsługuje obiektu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-431">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7db1-432">Zaimplementowanego w tej klasie, ta metoda zawsze zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="b7db1-432">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="b7db1-433">Użyj `context` parametru, aby wyodrębnić dodatkowe informacje o środowisku, w którym jest wywoływana tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="b7db1-433">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="b7db1-434">Ten parametr może być `null`, dlatego należy zawsze sprawdzić jej.</span><span class="sxs-lookup"><span data-stu-id="b7db1-434">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="b7db1-435">Ponadto we właściwościach obiektu context może zwrócić `null`.</span><span class="sxs-lookup"><span data-stu-id="b7db1-435">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b7db1-436">Należy przesłonić tę metodę, jeśli typ, który chcesz przekonwertować obsługuje standardowe wartości.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-436">Override this method if the type you want to convert supports standard values.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsValid">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b7db1-437">Zwraca czy obiekt dana wartość jest nieprawidłowa dla tego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-437">Returns whether the given value object is valid for this type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsValid(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValid (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsValid(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.IsValid : obj -&gt; bool" Usage="typeConverter.IsValid value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b7db1-438">Obiekt, aby sprawdzić poprawność.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-438">The object to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7db1-439">Zwraca czy obiekt dana wartość jest nieprawidłowa dla tego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-439">Returns whether the given value object is valid for this type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-440">
            <see langword="true" /> Jeśli określona wartość jest prawidłowa dla tego obiektu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-440">
              <see langword="true" /> if the specified value is valid for this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7db1-441">Począwszy od [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.ComponentModel.TypeConverter.IsValid%2A> metoda przechwytuje wyjątki od <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> i <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="b7db1-441">Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods.</span></span> <span data-ttu-id="b7db1-442">Jeśli typ wartości wejściowej powoduje, że <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> do zwrócenia `false`, lub jeśli powoduje, że wartość wejściowa <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> Aby zgłosić wyjątek, <xref:System.ComponentModel.TypeConverter.IsValid%2A> metoda zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="b7db1-442">If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="b7db1-443">Aby włączyć starsze zachowanie, Wstaw następujące wiersze do pliku konfiguracyjnego aplikacji, na przykład application1.exe.config.</span><span class="sxs-lookup"><span data-stu-id="b7db1-443">To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.</span></span>  
  
```xml  
<configuration>  
  <appSettings>  
    <add key="UseCompatibleTypeConverterBehavior" value="true" />  
  </appSettings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b7db1-444">Należy przesłonić tę metodę, jeśli typ, który chcesz przekonwertować obsługuje standardowe wartości, które mogą być sprawdzone.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-444">Override this method if the type you want to convert supports standard values that can be validated.</span>
            </span>
            <span data-ttu-id="b7db1-445">
              <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> Metoda służy do sprawdzania poprawności wartości w typie, a nie do określenia, czy <paramref name="value" /> można przekonwertować na danego typu.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-445">The <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> method is used to validate a value within the type rather than to determine if <paramref name="value" /> can be converted to the given type.</span>
            </span>
            <span data-ttu-id="b7db1-446">Na przykład <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> może służyć do określenia, czy podaną wartość jest nieprawidłowa dla typu wyliczenia.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-446">For example, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> can be used to determine if a given value is valid for an enumeration type.</span>
            </span>
            <span data-ttu-id="b7db1-447">Aby uzyskać przykład, zobacz <see cref="T:System.ComponentModel.EnumConverter" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-447">For an example, see <see cref="T:System.ComponentModel.EnumConverter" />.</span>
            </span>
            <span data-ttu-id="b7db1-448">Można napisać własny <c>WillConvertSucceed</c> metoda opakowując <see cref="Overload:System.ComponentModel.TypeConverter.ConvertTo" /> i <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> metod w blokach o wyjątku.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-448">You can write your own <c>WillConvertSucceed</c> method by wrapping the <see cref="Overload:System.ComponentModel.TypeConverter.ConvertTo" /> and <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> methods in exception blocks.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.EnumConverter" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValid(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValid (context As ITypeDescriptorContext, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValid(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IsValid : System.ComponentModel.ITypeDescriptorContext * obj -&gt; bool&#xA;override this.IsValid : System.ComponentModel.ITypeDescriptorContext * obj -&gt; bool" Usage="typeConverter.IsValid (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b7db1-449">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewniający kontekstu formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-449">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b7db1-450">
            <see cref="T:System.Object" /> Do testowania ważności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-450">The <see cref="T:System.Object" /> to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7db1-451">Zwraca czy obiekt dana wartość jest nieprawidłowa w przypadku tego typu, jak i dla określonego kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-451">Returns whether the given value object is valid for this type and for the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-452">
            <see langword="true" /> Jeśli określona wartość jest prawidłowa dla tego obiektu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-452">
              <see langword="true" /> if the specified value is valid for this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7db1-453">Użyj `context` parametru, aby wyodrębnić dodatkowe informacje o środowisku, w którym jest wywoływana tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="b7db1-453">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="b7db1-454">Ten parametr może być `null`, dlatego należy zawsze sprawdzić jej.</span><span class="sxs-lookup"><span data-stu-id="b7db1-454">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="b7db1-455">Ponadto we właściwościach obiektu context może zwrócić `null`.</span><span class="sxs-lookup"><span data-stu-id="b7db1-455">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="b7db1-456">Począwszy od [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.ComponentModel.TypeConverter.IsValid%2A> metoda przechwytuje wyjątki od <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> i <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="b7db1-456">Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods.</span></span> <span data-ttu-id="b7db1-457">Jeśli typ wartości wejściowej powoduje, że <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> do zwrócenia `false`, lub jeśli powoduje, że wartość wejściowa <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> Aby zgłosić wyjątek, <xref:System.ComponentModel.TypeConverter.IsValid%2A> metoda zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="b7db1-457">If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="b7db1-458">Aby włączyć starsze zachowanie, Wstaw następujące wiersze do pliku konfiguracyjnego aplikacji, na przykład application1.exe.config.</span><span class="sxs-lookup"><span data-stu-id="b7db1-458">To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.</span></span>  
  
```xml  
<configuration>  
  <appSettings>  
    <add key="UseCompatibleTypeConverterBehavior" value="true" />  
  </appSettings>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b7db1-459">Na przykład tę funkcję, zobacz <xref:System.ComponentModel.TypeConverter> klasy.</span><span class="sxs-lookup"><span data-stu-id="b7db1-459">For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b7db1-460">Należy przesłonić tę metodę, jeśli typ, który chcesz przekonwertować obsługuje standardowe wartości, które mogą być sprawdzone.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-460">Override this method if the type you want to convert supports standard values that can be validated.</span>
            </span>
            <span data-ttu-id="b7db1-461">
              <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> Metoda służy do sprawdzania poprawności wartości w typie, a nie do określenia, czy <paramref name="value" /> można przekonwertować na danego typu.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-461">The <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> method is used to validate a value within the type rather than to determine if <paramref name="value" /> can be converted to the given type.</span>
            </span>
            <span data-ttu-id="b7db1-462">Na przykład <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> może służyć do określenia, czy podaną wartość jest nieprawidłowa dla typu wyliczenia.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-462">For example, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> can be used to determine if a given value is valid for an enumeration type.</span>
            </span>
            <span data-ttu-id="b7db1-463">Aby uzyskać przykład, zobacz <see cref="T:System.ComponentModel.EnumConverter" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b7db1-463">For an example, see <see cref="T:System.ComponentModel.EnumConverter" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.ComponentModel.EnumConverter" />
      </Docs>
    </Member>
    <Member MemberName="SortProperties">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.PropertyDescriptorCollection SortProperties (System.ComponentModel.PropertyDescriptorCollection props, string[] names);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.PropertyDescriptorCollection SortProperties(class System.ComponentModel.PropertyDescriptorCollection props, string[] names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Function SortProperties (props As PropertyDescriptorCollection, names As String()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ SortProperties(System::ComponentModel::PropertyDescriptorCollection ^ props, cli::array &lt;System::String ^&gt; ^ names);" />
      <MemberSignature Language="F#" Value="member this.SortProperties : System.ComponentModel.PropertyDescriptorCollection * string[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="typeConverter.SortProperties (props, names)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="props" Type="System.ComponentModel.PropertyDescriptorCollection" />
        <Parameter Name="names" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="props">
          <span data-ttu-id="b7db1-464">Element <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> zawierający właściwości sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-464">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that has the properties to sort.</span>
          </span>
        </param>
        <param name="names">
          <span data-ttu-id="b7db1-465">Tablica nazwy w kolejności ma właściwości, które mają być widoczne w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-465">An array of names in the order you want the properties to appear in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7db1-466">Sortuje zbiór właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-466">Sorts a collection of properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7db1-467">Element <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> zawierający właściwości posortowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7db1-467">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the sorted properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7db1-468">Wszystkie właściwości w kolekcji, które nie są już tablica nazw są dodawane w kolejności alfabetycznej na końcu.</span><span class="sxs-lookup"><span data-stu-id="b7db1-468">All properties in the collection that are not already in the array of names are added alphabetically to the end.</span></span> <span data-ttu-id="b7db1-469">Jeśli `names` parametr jest pusta tablica lub `null`, wszystkie właściwości w kolekcji są sortowane alfabetycznie.</span><span class="sxs-lookup"><span data-stu-id="b7db1-469">If the `names` parameter is an empty array or `null`, all the properties in the collection are sorted alphabetically.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
  </Members>
</Type>