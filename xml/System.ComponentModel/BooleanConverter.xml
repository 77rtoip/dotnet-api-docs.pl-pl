<Type Name="BooleanConverter" FullName="System.ComponentModel.BooleanConverter">
  <TypeSignature Language="C#" Value="public class BooleanConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BooleanConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.BooleanConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class BooleanConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class BooleanConverter : System::ComponentModel::TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5a3d7-101">Udostępnia konwertera typów, aby przekonwertować <see cref="T:System.Boolean" /> do i z różnych innych reprezentacje obiektów.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-101">Provides a type converter to convert <see cref="T:System.Boolean" /> objects to and from various other representations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a3d7-102">Konwertować można jedynie konwerter <xref:System.Boolean> obiektu do i z ciągu.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-102">This converter can only convert a <xref:System.Boolean> object to and from a string.</span></span>  
  
 <span data-ttu-id="5a3d7-103">Aby uzyskać więcej informacji na temat konwertery typu, zobacz <xref:System.ComponentModel.TypeConverter> klasa podstawowa i [porady: implementacji konwertera typów](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).</span><span class="sxs-lookup"><span data-stu-id="5a3d7-103">For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5a3d7-104">Nigdy nie należy tworzyć wystąpienia <xref:System.ComponentModel.BooleanConverter>.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-104">You should never create an instance of a <xref:System.ComponentModel.BooleanConverter>.</span></span> <span data-ttu-id="5a3d7-105">Zamiast tego wywołać <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> metody <xref:System.ComponentModel.TypeDescriptor> klasy.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-105">Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of the <xref:System.ComponentModel.TypeDescriptor> class.</span></span> <span data-ttu-id="5a3d7-106">Aby uzyskać więcej informacji, zobacz przykłady w <xref:System.ComponentModel.TypeConverter> klasy podstawowej.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-106">For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a3d7-107">Poniższy przykład kodu konwertuje zmiennej typu <xref:System.Boolean> do i z ciągu.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-107">The following code example converts a variable of type <xref:System.Boolean> to and from a string.</span></span>  
  
 [!code-cpp[Converters#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Converters/CPP/converters.cpp#3)]
 [!code-csharp[Converters#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Converters/CS/converters.cs#3)]
 [!code-vb[Converters#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Converters/VB/converters.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BooleanConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BooleanConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BooleanConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5a3d7-108">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.BooleanConverter" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-108">Initializes a new instance of the <see cref="T:System.ComponentModel.BooleanConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BooleanConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="5a3d7-109"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-109">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="sourceType"><span data-ttu-id="5a3d7-110">A <see cref="T:System.Type" /> reprezentujący chcesz konwertować z typu.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-110">A <see cref="T:System.Type" /> that represents the type you wish to convert from.</span></span></param>
        <summary><span data-ttu-id="5a3d7-111">Pobiera wartość wskazującą, czy ten konwerter można przekonwertować obiektu dla typu źródłowego danego obiektowi logiczną przy użyciu określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-111">Gets a value indicating whether this converter can convert an object in the given source type to a Boolean object using the specified context.</span></span></summary>
        <returns>
          <span data-ttu-id="5a3d7-112"><see langword="true" /> Jeśli ten obiekt może dokonać konwersji; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-112"><see langword="true" /> if this object can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a3d7-113">Ten konwerter konwertować można jedynie logiczna obiektu do i z ciągu.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-113">This converter can only convert a Boolean object to and from a string.</span></span>  
  
 <span data-ttu-id="5a3d7-114">`context` Parametru można wyodrębnić dodatkowe informacje o środowisku konwerter jest wywoływany z.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-114">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="5a3d7-115">Może to być `null`, dlatego należy zawsze sprawdzić.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-115">This can be `null`, so always check.</span></span> <span data-ttu-id="5a3d7-116">Ponadto może zwrócić właściwości obiektu context `null`.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-116">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BooleanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="5a3d7-117"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-117">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="5a3d7-118">A <see cref="T:System.Globalization.CultureInfo" /> , który określa kulturę, do którego można przekonwertować.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-118">A <see cref="T:System.Globalization.CultureInfo" /> that specifies the culture to which to convert.</span></span></param>
        <param name="value"><span data-ttu-id="5a3d7-119"><see cref="T:System.Object" /> Do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-119">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="5a3d7-120">Konwertuje obiekt podanej wartości do obiektu Boolean.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-120">Converts the given value object to a Boolean object.</span></span></summary>
        <returns><span data-ttu-id="5a3d7-121"><see cref="T:System.Object" /> Reprezentujący skonwertowany <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-121">An <see cref="T:System.Object" /> that represents the converted <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a3d7-122">Ten konwerter konwertować można jedynie logiczna obiektu do i z ciągu.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-122">This converter can only convert a Boolean object to and from a string.</span></span>  
  
 <span data-ttu-id="5a3d7-123">`context` Parametru można wyodrębnić dodatkowe informacje o środowisku konwerter jest wywoływany z.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-123">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="5a3d7-124">Może to być `null`, dlatego należy zawsze sprawdzić.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-124">This can be `null`, so always check.</span></span> <span data-ttu-id="5a3d7-125">Ponadto może zwrócić właściwości obiektu context `null`.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-125">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="5a3d7-126"><paramref name="value" /> nie jest prawidłową wartością dla typu docelowego.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-126"><paramref name="value" /> is not a valid value for the target type.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5a3d7-127">Nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-127">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="5a3d7-128"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-128">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="5a3d7-129">Pobiera kolekcję standardowych wartości dla typu Boolean.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-129">Gets a collection of standard values for the Boolean data type.</span></span></summary>
        <returns><span data-ttu-id="5a3d7-130">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> który zawiera standardowy zestaw prawidłowych wartości.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-130">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a3d7-131">Boolean — typ danych ma dwie standardowe wartości, `true` i `false`.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-131">The Boolean data type has two standard values, `true` and `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BooleanConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="5a3d7-132"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-132">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="5a3d7-133">Pobiera wartość wskazującą, czy lista standardowe wartości zwracane z <see cref="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> metoda jest wyłączną listę.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-133">Gets a value indicating whether the list of standard values returned from the <see cref="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> method is an exclusive list.</span></span></summary>
        <returns>
          <span data-ttu-id="5a3d7-134"><see langword="true" /> Ponieważ <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> zwrócony z <see cref="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> jest to pełna lista możliwych wartości.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-134"><see langword="true" /> because the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> is an exhaustive list of possible values.</span></span> <span data-ttu-id="5a3d7-135">Ta metoda nie zwraca <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-135">This method never returns <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a3d7-136">Boolean — typ danych ma tylko dwie wartości standardowe, `true` i `false`.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-136">The Boolean data type has only two standard values, `true` and `false`.</span></span> <span data-ttu-id="5a3d7-137"><xref:System.ComponentModel.TypeConverter.StandardValuesCollection> Zwracane z tej metody zawiera wszystkie możliwe wartości.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-137">The <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> returned from this method has all possible values.</span></span> <span data-ttu-id="5a3d7-138">W związku z tym ta metoda zawsze zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-138">Therefore, this method always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BooleanConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="5a3d7-139"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-139">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="5a3d7-140">Pobiera wartość wskazującą, czy ten obiekt obsługuje standardowy zestaw wartości, które mogą być pobierane z listy.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-140">Gets a value indicating whether this object supports a standard set of values that can be picked from a list.</span></span></summary>
        <returns>
          <span data-ttu-id="5a3d7-141"><see langword="true" /> Ponieważ <see cref="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> można wywołać, aby znaleźć wspólny zbiór wartości obiekt obsługuje.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-141"><see langword="true" /> because <see cref="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> can be called to find a common set of values the object supports.</span></span> <span data-ttu-id="5a3d7-142">Ta metoda nie zwraca <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-142">This method never returns <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a3d7-143">Boolean — typ danych obsługuje standardowe wartości, ponieważ wartość logiczna może być tylko `true` lub `false`.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-143">The Boolean data type supports standard values, because a Boolean can only be `true` or `false`.</span></span> <span data-ttu-id="5a3d7-144">W związku z tym ta metoda zawsze zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="5a3d7-144">Therefore, this method always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>