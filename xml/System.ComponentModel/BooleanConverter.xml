<Type Name="BooleanConverter" FullName="System.ComponentModel.BooleanConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fcca3273b7b2ad0ca577915b5d13a8bc3929516e" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69348071" /></Metadata><TypeSignature Language="C#" Value="public class BooleanConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BooleanConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.BooleanConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class BooleanConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class BooleanConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type BooleanConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e90cc-101">Oferuje konwerter typów służący do <see cref="T:System.Boolean" /> konwertowania obiektów na i z różnych innych reprezentacji.</span><span class="sxs-lookup"><span data-stu-id="e90cc-101">Provides a type converter to convert <see cref="T:System.Boolean" /> objects to and from various other representations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e90cc-102">Ten konwerter może konwertować <xref:System.Boolean> tylko obiekt na i z ciągu.</span><span class="sxs-lookup"><span data-stu-id="e90cc-102">This converter can only convert a <xref:System.Boolean> object to and from a string.</span></span>  
  
 <span data-ttu-id="e90cc-103">Aby uzyskać więcej informacji na temat konwerterów typów <xref:System.ComponentModel.TypeConverter> , zobacz klasę [bazową i instrukcje: Implementowanie konwertera](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120))typów.</span><span class="sxs-lookup"><span data-stu-id="e90cc-103">For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e90cc-104">Nie należy nigdy tworzyć wystąpienia <xref:System.ComponentModel.BooleanConverter>obiektu.</span><span class="sxs-lookup"><span data-stu-id="e90cc-104">You should never create an instance of a <xref:System.ComponentModel.BooleanConverter>.</span></span> <span data-ttu-id="e90cc-105">Zamiast tego należy wywołać <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> metodę <xref:System.ComponentModel.TypeDescriptor> klasy.</span><span class="sxs-lookup"><span data-stu-id="e90cc-105">Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of the <xref:System.ComponentModel.TypeDescriptor> class.</span></span> <span data-ttu-id="e90cc-106">Aby uzyskać więcej informacji, zobacz przykłady w <xref:System.ComponentModel.TypeConverter> klasie bazowej.</span><span class="sxs-lookup"><span data-stu-id="e90cc-106">For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e90cc-107">Poniższy przykład kodu konwertuje zmienną typu <xref:System.Boolean> do i z ciągu.</span><span class="sxs-lookup"><span data-stu-id="e90cc-107">The following code example converts a variable of type <xref:System.Boolean> to and from a string.</span></span>  
  
 [!code-cpp[Converters#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Converters/CPP/converters.cpp#3)]
 [!code-csharp[Converters#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Converters/CS/converters.cs#3)]
 [!code-vb[Converters#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Converters/VB/converters.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BooleanConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BooleanConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BooleanConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e90cc-108">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.BooleanConverter" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="e90cc-108">Initializes a new instance of the <see cref="T:System.ComponentModel.BooleanConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BooleanConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="booleanConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="e90cc-109"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zawiera kontekst formatu.</span><span class="sxs-lookup"><span data-stu-id="e90cc-109">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="sourceType"><span data-ttu-id="e90cc-110"><see cref="T:System.Type" /> Reprezentuje typ, z którego ma zostać przeprowadzona konwersja.</span><span class="sxs-lookup"><span data-stu-id="e90cc-110">A <see cref="T:System.Type" /> that represents the type you wish to convert from.</span></span></param>
        <summary><span data-ttu-id="e90cc-111">Pobiera wartość wskazującą, czy ten konwerter może skonwertować obiekt w danym typie źródła do obiektu logicznego przy użyciu określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="e90cc-111">Gets a value indicating whether this converter can convert an object in the given source type to a Boolean object using the specified context.</span></span></summary>
        <returns><span data-ttu-id="e90cc-112"><see langword="true" />Jeśli ten obiekt może wykonać konwersję; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="e90cc-112"><see langword="true" /> if this object can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e90cc-113">Ten konwerter może konwertować tylko obiekt logiczny na i z ciągu.</span><span class="sxs-lookup"><span data-stu-id="e90cc-113">This converter can only convert a Boolean object to and from a string.</span></span>  
  
 <span data-ttu-id="e90cc-114">Ten `context` parametr może służyć do wyodrębnienia dodatkowych informacji o środowisku, z którego ten konwerter jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="e90cc-114">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="e90cc-115">Może to być `null`, więc zawsze sprawdzaj.</span><span class="sxs-lookup"><span data-stu-id="e90cc-115">This can be `null`, so always check.</span></span> <span data-ttu-id="e90cc-116">Ponadto właściwości obiektu kontekstu mogą zwrócić `null`.</span><span class="sxs-lookup"><span data-stu-id="e90cc-116">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BooleanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="booleanConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="e90cc-117"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zawiera kontekst formatu.</span><span class="sxs-lookup"><span data-stu-id="e90cc-117">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="e90cc-118">A <see cref="T:System.Globalization.CultureInfo" /> określa kulturę, do której ma zostać przekonwertowane.</span><span class="sxs-lookup"><span data-stu-id="e90cc-118">A <see cref="T:System.Globalization.CultureInfo" /> that specifies the culture to which to convert.</span></span></param>
        <param name="value"><span data-ttu-id="e90cc-119"><see cref="T:System.Object" /> Do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="e90cc-119">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="e90cc-120">Konwertuje dany obiekt wartości na obiekt Boolean.</span><span class="sxs-lookup"><span data-stu-id="e90cc-120">Converts the given value object to a Boolean object.</span></span></summary>
        <returns><span data-ttu-id="e90cc-121"><see cref="T:System.Object" /> Reprezentuje przekonwertowane. <paramref name="value" /></span><span class="sxs-lookup"><span data-stu-id="e90cc-121">An <see cref="T:System.Object" /> that represents the converted <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e90cc-122">Ten konwerter może konwertować tylko obiekt logiczny na i z ciągu.</span><span class="sxs-lookup"><span data-stu-id="e90cc-122">This converter can only convert a Boolean object to and from a string.</span></span>  
  
 <span data-ttu-id="e90cc-123">Ten `context` parametr może służyć do wyodrębnienia dodatkowych informacji o środowisku, z którego ten konwerter jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="e90cc-123">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="e90cc-124">Może to być `null`, więc zawsze sprawdzaj.</span><span class="sxs-lookup"><span data-stu-id="e90cc-124">This can be `null`, so always check.</span></span> <span data-ttu-id="e90cc-125">Ponadto właściwości obiektu kontekstu mogą zwrócić `null`.</span><span class="sxs-lookup"><span data-stu-id="e90cc-125">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="e90cc-126"><paramref name="value" />nie jest prawidłową wartością typu docelowego.</span><span class="sxs-lookup"><span data-stu-id="e90cc-126"><paramref name="value" /> is not a valid value for the target type.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e90cc-127">Nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="e90cc-127">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="booleanConverter.GetStandardValues context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="e90cc-128"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zawiera kontekst formatu.</span><span class="sxs-lookup"><span data-stu-id="e90cc-128">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="e90cc-129">Pobiera kolekcję wartości standardowych dla typu danych Boolean.</span><span class="sxs-lookup"><span data-stu-id="e90cc-129">Gets a collection of standard values for the Boolean data type.</span></span></summary>
        <returns><span data-ttu-id="e90cc-130">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> , który zawiera standardowy zestaw prawidłowych wartości.</span><span class="sxs-lookup"><span data-stu-id="e90cc-130">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e90cc-131">Typ danych Boolean ma dwie wartości `true` standardowe i. `false`</span><span class="sxs-lookup"><span data-stu-id="e90cc-131">The Boolean data type has two standard values, `true` and `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BooleanConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="booleanConverter.GetStandardValuesExclusive context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="e90cc-132"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zawiera kontekst formatu.</span><span class="sxs-lookup"><span data-stu-id="e90cc-132">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="e90cc-133">Pobiera wartość wskazującą, czy lista wartości standardowych zwracanych z <see cref="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> metody jest listą wykluczającą.</span><span class="sxs-lookup"><span data-stu-id="e90cc-133">Gets a value indicating whether the list of standard values returned from the <see cref="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> method is an exclusive list.</span></span></summary>
        <returns><span data-ttu-id="e90cc-134"><see langword="true" />ponieważ zwracana z <see cref="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> jest wyczerpującą listą możliwych wartości. <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /></span><span class="sxs-lookup"><span data-stu-id="e90cc-134"><see langword="true" /> because the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> is an exhaustive list of possible values.</span></span> <span data-ttu-id="e90cc-135">Ta metoda nigdy nie <see langword="false" />zwraca.</span><span class="sxs-lookup"><span data-stu-id="e90cc-135">This method never returns <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e90cc-136">Typ danych Boolean ma tylko dwie wartości `true` standardowe i. `false`</span><span class="sxs-lookup"><span data-stu-id="e90cc-136">The Boolean data type has only two standard values, `true` and `false`.</span></span> <span data-ttu-id="e90cc-137">Wartość <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> zwracana z tej metody ma wszystkie możliwe wartości.</span><span class="sxs-lookup"><span data-stu-id="e90cc-137">The <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> returned from this method has all possible values.</span></span> <span data-ttu-id="e90cc-138">W związku z tym ta metoda `true`zawsze zwraca wartość.</span><span class="sxs-lookup"><span data-stu-id="e90cc-138">Therefore, this method always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BooleanConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="booleanConverter.GetStandardValuesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="e90cc-139"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zawiera kontekst formatu.</span><span class="sxs-lookup"><span data-stu-id="e90cc-139">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="e90cc-140">Pobiera wartość wskazującą, czy ten obiekt obsługuje standardowy zestaw wartości, które można pobrać z listy.</span><span class="sxs-lookup"><span data-stu-id="e90cc-140">Gets a value indicating whether this object supports a standard set of values that can be picked from a list.</span></span></summary>
        <returns><span data-ttu-id="e90cc-141"><see langword="true" />Ponieważ <see cref="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> może być wywoływana w celu znalezienia wspólnego zestawu wartości obsługiwanych przez obiekt.</span><span class="sxs-lookup"><span data-stu-id="e90cc-141"><see langword="true" /> because <see cref="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> can be called to find a common set of values the object supports.</span></span> <span data-ttu-id="e90cc-142">Ta metoda nigdy nie <see langword="false" />zwraca.</span><span class="sxs-lookup"><span data-stu-id="e90cc-142">This method never returns <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e90cc-143">Typ danych Boolean obsługuje wartości standardowe, ponieważ wartość logiczna może być `true` tylko lub. `false`</span><span class="sxs-lookup"><span data-stu-id="e90cc-143">The Boolean data type supports standard values, because a Boolean can only be `true` or `false`.</span></span> <span data-ttu-id="e90cc-144">W związku z tym ta metoda `true`zawsze zwraca wartość.</span><span class="sxs-lookup"><span data-stu-id="e90cc-144">Therefore, this method always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
