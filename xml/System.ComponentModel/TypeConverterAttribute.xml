<Type Name="TypeConverterAttribute" FullName="System.ComponentModel.TypeConverterAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0125c82bd414c0e8545acc02526901cdbbacc49a" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39817466" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TypeConverterAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TypeConverterAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeConverterAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TypeConverterAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeConverterAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type TypeConverterAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.All)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5e49b-101">Określa, jakiego typu jako konwertera dla obiektu, ten atrybut jest powiązany z.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5e49b-101">Specifies what type to use as a converter for the object this attribute is bound to.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e49b-102">Klasa użyty do konwersji musi dziedziczyć <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="5e49b-102">The class you use for conversion must inherit from <xref:System.ComponentModel.TypeConverter>.</span></span> <span data-ttu-id="5e49b-103">Użyj <xref:System.ComponentModel.TypeConverterAttribute.ConverterTypeName%2A> właściwości można odczytać nazwy klasy, która zapewnia Konwersja danych dla obiektu, ten atrybut jest powiązany z.</span><span class="sxs-lookup"><span data-stu-id="5e49b-103">Use the <xref:System.ComponentModel.TypeConverterAttribute.ConverterTypeName%2A> property to get the name of the class that provides the data conversion for the object this attribute is bound to.</span></span>  
  
 <span data-ttu-id="5e49b-104">Aby uzyskać więcej informacji na temat atrybutów, zobacz [atrybuty](~/docs/standard/attributes/index.md).</span><span class="sxs-lookup"><span data-stu-id="5e49b-104">For more information about attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span> <span data-ttu-id="5e49b-105">Aby uzyskać więcej informacji na temat konwerterów typów zobacz <xref:System.ComponentModel.TypeConverter> klasy bazowej i [porady: Implementowanie konwertera typów](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).</span><span class="sxs-lookup"><span data-stu-id="5e49b-105">For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).</span></span>  
  
 <span data-ttu-id="5e49b-106">Aby możliwe było nawiązanie konwertera typów na klasę niestandardową, która zapewnia zachowanie konwersji typu dla XAML, należy zastosować <xref:System.ComponentModel.TypeConverterAttribute> atrybutu do danego typu.</span><span class="sxs-lookup"><span data-stu-id="5e49b-106">In order to establish a type converter on a custom class that provides type conversion behavior for XAML, you apply the <xref:System.ComponentModel.TypeConverterAttribute> attribute to your type.</span></span> <span data-ttu-id="5e49b-107">Argument atrybutu odwołuje się do implementacji konwertera typu.</span><span class="sxs-lookup"><span data-stu-id="5e49b-107">The argument of the attribute references your type converter implementation.</span></span> <span data-ttu-id="5e49b-108">Usługi konwertera typów powinny być akceptuje wartości z ciąg, który jest używany dla atrybutów lub tekstu inicjowania w znaczniku XAML i przekonwertować ciąg do danego typu miejsca docelowego.</span><span class="sxs-lookup"><span data-stu-id="5e49b-108">Your type converter should be able to accept values from a string that is used for attributes or initialization text in XAML markup, and convert that string into your intended destination type.</span></span> <span data-ttu-id="5e49b-109">Aby uzyskać więcej informacji, zobacz [TypeConverters i XAML](~/docs/framework/wpf/advanced/typeconverters-and-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="5e49b-109">For more information, see [TypeConverters and XAML](~/docs/framework/wpf/advanced/typeconverters-and-xaml.md).</span></span>  
  
 <span data-ttu-id="5e49b-110">Zamiast stosowania się do wszystkich wartości na typ, zachowanie konwerter typu dla XAML może zostać nawiązana na określoną właściwość.</span><span class="sxs-lookup"><span data-stu-id="5e49b-110">Rather than applying to all values of a type, a type converter behavior for XAML can also be established on a specific property.</span></span> <span data-ttu-id="5e49b-111">W takim przypadku należy zastosować <xref:System.ComponentModel.TypeConverterAttribute> do definicji właściwości (definicja zewnętrzne, nie konkretne `get` i `set` definicji).</span><span class="sxs-lookup"><span data-stu-id="5e49b-111">In this case, you apply <xref:System.ComponentModel.TypeConverterAttribute> to the property definition (the outer definition, not the specific `get` and `set` definitions).</span></span>  
  
 <span data-ttu-id="5e49b-112">Można przypisać zachowanie konwertera typu użycia XAML niestandardowe można dołączyć elementu członkowskiego, stosując <xref:System.ComponentModel.TypeConverterAttribute> do `get` metodę dostępu metody, która obsługuje użycia XAML.</span><span class="sxs-lookup"><span data-stu-id="5e49b-112">A type converter behavior for XAML usage of a custom attachable member can be assigned by applying <xref:System.ComponentModel.TypeConverterAttribute> to the `get` method accessor that supports the XAML usage.</span></span> <span data-ttu-id="5e49b-113">Aby uzyskać więcej informacji, zobacz [Przegląd właściwości dołączonych](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e49b-113">For more information, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 <span data-ttu-id="5e49b-114">Dla złożonych XAML serializacji przypadków, które wymagają dodatkowego stanu ze środowiska wykonawczego obiektów należy rozważyć Definiowanie serializator wartości, oprócz konwertera typów i atrybut obu klas pomocy technicznej na niestandardowe typy lub członków niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="5e49b-114">For complex XAML serialization cases that require additional state from the object runtime, consider defining a value serializer in addition to a type converter, and attribute both support classes on your custom types or custom members.</span></span> <span data-ttu-id="5e49b-115">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Markup.ValueSerializer>.</span><span class="sxs-lookup"><span data-stu-id="5e49b-115">For more information, see <xref:System.Windows.Markup.ValueSerializer>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e49b-116">Poniższy przykład deklaruje `MyClass` używać konwertera typów o nazwie `MyClassConverter`.</span><span class="sxs-lookup"><span data-stu-id="5e49b-116">The following example declares `MyClass` to use the type converter called `MyClassConverter`.</span></span> <span data-ttu-id="5e49b-117">W tym przykładzie założono, że `MyClassConverter` została zaimplementowana w innym miejscu.</span><span class="sxs-lookup"><span data-stu-id="5e49b-117">This example assumes that `MyClassConverter` has been implemented elsewhere.</span></span> <span data-ttu-id="5e49b-118">Klasa implementacji konwertera (`MyClassConverter`) musi dziedziczyć <xref:System.ComponentModel.TypeConverter> klasy.</span><span class="sxs-lookup"><span data-stu-id="5e49b-118">The class implementing the converter (`MyClassConverter`) must inherit from the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 [!code-cpp[Classic TypeConverterAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverterAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TypeConverterAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverterAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic TypeConverterAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverterAttribute Example/VB/source.vb#1)]  
  
 <span data-ttu-id="5e49b-119">Następny przykład tworzy wystąpienie `MyClass`.</span><span class="sxs-lookup"><span data-stu-id="5e49b-119">The next example creates an instance of `MyClass`.</span></span> <span data-ttu-id="5e49b-120">Pobiera atrybuty dla klasy i drukuje Nazwa konwertera typów, używany przez `MyClass`.</span><span class="sxs-lookup"><span data-stu-id="5e49b-120">Then it gets the attributes for the class, and prints the name of the type converter used by `MyClass`.</span></span>  
  
 [!code-cpp[Classic TypeConverterAttribute Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverterAttribute Example/CPP/source.cpp#2)]
 [!code-csharp[Classic TypeConverterAttribute Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverterAttribute Example/CS/source.cs#2)]
 [!code-vb[Classic TypeConverterAttribute Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverterAttribute Example/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.TypeConverter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5e49b-121">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.TypeConverterAttribute" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e49b-121">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeConverterAttribute" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeConverterAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverterAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeConverterAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5e49b-122">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.TypeConverterAttribute" /> klasy za pomocą konwertera typu domyślna to ciąg pusty ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e49b-122">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeConverterAttribute" /> class with the default type converter, which is an empty string ("").</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e49b-123">Klasa, która zapewnia konwersji danych musi dziedziczyć <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="5e49b-123">The class that provides the data conversion must inherit from <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeConverterAttribute (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeConverterAttribute(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.TypeConverterAttribute : string -&gt; System.ComponentModel.TypeConverterAttribute" Usage="new System.ComponentModel.TypeConverterAttribute typeName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="5e49b-124">W pełni kwalifikowana nazwa klasy służące do konwersji danych dla obiektu, ten atrybut jest powiązany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e49b-124">The fully qualified name of the class to use for data conversion for the object this attribute is bound to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5e49b-125">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.TypeConverterAttribute" /> klasy przy użyciu nazwy określonego typu konwertera danych dla obiektu, ten atrybut jest powiązany z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e49b-125">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeConverterAttribute" /> class, using the specified type name as the data converter for the object this attribute is bound to.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e49b-126">Klasa, która zapewnia konwersji danych musi dziedziczyć <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="5e49b-126">The class that provides the data conversion must inherit from <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeConverterAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeConverterAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.TypeConverterAttribute : Type -&gt; System.ComponentModel.TypeConverterAttribute" Usage="new System.ComponentModel.TypeConverterAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="5e49b-127">A <see cref="T:System.Type" /> reprezentujący typ klasy konwerter służące do konwersji danych dla obiektu, ten atrybut jest powiązany z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e49b-127">A <see cref="T:System.Type" /> that represents the type of the converter class to use for data conversion for the object this attribute is bound to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5e49b-128">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.TypeConverterAttribute" /> klasy przy użyciu określonego typu jako konwertera danych dla obiektu, ten atrybut jest powiązany z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e49b-128">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeConverterAttribute" /> class, using the specified type as the data converter for the object this attribute is bound to.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e49b-129">Klasa, która zapewnia konwersji danych musi dziedziczyć <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="5e49b-129">The class that provides the data conversion must inherit from <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="ConverterTypeName">
      <MemberSignature Language="C#" Value="public string ConverterTypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConverterTypeName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.TypeConverterAttribute.ConverterTypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConverterTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConverterTypeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConverterTypeName : string" Usage="System.ComponentModel.TypeConverterAttribute.ConverterTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5e49b-130">Pobiera w pełni kwalifikowana nazwa typu z <see cref="T:System.Type" /> do użycia jako konwertera dla obiektu, ten atrybut jest powiązany z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e49b-130">Gets the fully qualified type name of the <see cref="T:System.Type" /> to use as a converter for the object this attribute is bound to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5e49b-131">W pełni kwalifikowana nazwa typu z <see cref="T:System.Type" /> do użycia jako konwertera dla obiektu, ten atrybut jest powiązany z ani być pustym ciągiem ("") Jeśli żaden nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e49b-131">The fully qualified type name of the <see cref="T:System.Type" /> to use as a converter for the object this attribute is bound to, or an empty string ("") if none exists.</span>
          </span>
          <span data-ttu-id="5e49b-132">Wartością domyślną jest ciąg pusty ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e49b-132">The default value is an empty string ("").</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.TypeConverterAttribute Default;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.TypeConverterAttribute Default" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.TypeConverterAttribute.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Default As TypeConverterAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::ComponentModel::TypeConverterAttribute ^ Default;" />
      <MemberSignature Language="F#" Value=" staticval mutable Default : System.ComponentModel.TypeConverterAttribute" Usage="System.ComponentModel.TypeConverterAttribute.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverterAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5e49b-133">Określa typ do użycia jako konwertera dla obiektu, który jest powiązany ten atrybut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e49b-133">Specifies the type to use as a converter for the object this attribute is bound to.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverterAttribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="typeConverterAttribute.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="5e49b-134">Obiekt do przetestowania równość wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e49b-134">The object to test the value equality of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5e49b-135">Zwraca, czy wartość dany obiekt jest taki sam, do bieżącego <see cref="T:System.ComponentModel.TypeConverterAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e49b-135">Returns whether the value of the given object is equal to the current <see cref="T:System.ComponentModel.TypeConverterAttribute" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5e49b-136">
            <see langword="true" /> Jeśli wartość dany obiekt jest równa bieżącego <see cref="T:System.ComponentModel.TypeConverterAttribute" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e49b-136">
              <see langword="true" /> if the value of the given object is equal to that of the current <see cref="T:System.ComponentModel.TypeConverterAttribute" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverterAttribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="typeConverterAttribute.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5e49b-137">Zwraca kod skrótu dla tego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e49b-137">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5e49b-138">Wartość skrótu dla bieżącego <see cref="T:System.ComponentModel.TypeConverterAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e49b-138">A hash code for the current <see cref="T:System.ComponentModel.TypeConverterAttribute" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>