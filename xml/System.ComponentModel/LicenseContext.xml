<Type Name="LicenseContext" FullName="System.ComponentModel.LicenseContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d4baaa46987c71081ff51407c71fd3685b737f24" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30442656" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LicenseContext : IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LicenseContext extends System.Object implements class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.LicenseContext" />
  <TypeSignature Language="VB.NET" Value="Public Class LicenseContext&#xA;Implements IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class LicenseContext : IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="1f6e0-101">Określa, po licencjonowane obiektu można używać i zapewnia możliwość uzyskania dodatkowych usług wymaganych do obsługi licencji działających w jego domenie.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1f6e0-101">Specifies when you can use a licensed object and provides a way of obtaining additional services needed to support licenses running within its domain.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f6e0-102">Ta klasa udostępnia domyślny <xref:System.ComponentModel.LicenseContext>.</span><span class="sxs-lookup"><span data-stu-id="1f6e0-102">This class provides the default <xref:System.ComponentModel.LicenseContext>.</span></span> <span data-ttu-id="1f6e0-103">Implementuje tylko obsługi, a jest klucze licencji nie zapisano pomocy technicznej.</span><span class="sxs-lookup"><span data-stu-id="1f6e0-103">It implements only run-time support and does not support saved license keys.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="1f6e0-104">Jeśli chcesz wdrożyć techniczną licencji czasu projektowania musi dziedziczyć po tej klasie, a przesłonięcie następujących elementów: <see cref="P:System.ComponentModel.LicenseContext.UsageMode" />, <see cref="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" />, <see cref="M:System.ComponentModel.LicenseContext.GetService(System.Type)" />, i <see cref="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="1f6e0-104">If you want to implement design-time license support, you must inherit from this class, and override the following members: <see cref="P:System.ComponentModel.LicenseContext.UsageMode" />, <see cref="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" />, <see cref="M:System.ComponentModel.LicenseContext.GetService(System.Type)" />, and <see cref="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" />.</span>
        </span>
        <span data-ttu-id="1f6e0-105">Jeśli chcesz klucze licencji wdrożenie zapisane zastępują <see cref="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" /> i <see cref="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" /> metody.</span>
        <span class="sxs-lookup">
          <span data-stu-id="1f6e0-105">If you want to implement saved license keys, override the <see cref="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" /> and <see cref="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" /> methods.</span>
        </span>
        <span data-ttu-id="1f6e0-106">Aby uzyskać więcej informacji na temat licencjonowania, zobacz [porady: składniki licencji i formanty](http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57).</span>
        <span class="sxs-lookup">
          <span data-stu-id="1f6e0-106">For more information about licensing, see [How to: License Components and Controls](http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57).</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.ComponentModel.License" />
    <altmember cref="T:System.ComponentModel.LicenseException" />
    <altmember cref="T:System.ComponentModel.LicenseManager" />
    <altmember cref="T:System.ComponentModel.LicenseProvider" />
    <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
    <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
    <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LicenseContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LicenseContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1f6e0-107">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.LicenseContext" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f6e0-107">Initializes a new instance of the <see cref="T:System.ComponentModel.LicenseContext" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSavedLicenseKey">
      <MemberSignature Language="C#" Value="public virtual string GetSavedLicenseKey (Type type, System.Reflection.Assembly resourceAssembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetSavedLicenseKey(class System.Type type, class System.Reflection.Assembly resourceAssembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetSavedLicenseKey(Type ^ type, System::Reflection::Assembly ^ resourceAssembly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceAssembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="1f6e0-108">A <see cref="T:System.Type" /> reprezentujący typ składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f6e0-108">A <see cref="T:System.Type" /> that represents the type of component.</span>
          </span>
        </param>
        <param name="resourceAssembly">
          <span data-ttu-id="1f6e0-109">
            <see cref="T:System.Reflection.Assembly" /> Przy użyciu klucza licencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f6e0-109">An <see cref="T:System.Reflection.Assembly" /> with the license key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f6e0-110">W przypadku przesłonięcia w klasie pochodnej zwraca klucz licencji zapisane dla określonego typu z zestawu określonego zasobu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f6e0-110">When overridden in a derived class, returns a saved license key for the specified type, from the specified resource assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f6e0-111">
            <see cref="P:System.ComponentModel.License.LicenseKey" /> Dla określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f6e0-111">The <see cref="P:System.ComponentModel.License.LicenseKey" /> for the specified type.</span>
          </span>
          <span data-ttu-id="1f6e0-112">Ta metoda zwraca <see langword="null" /> chyba, że jej zastąpienie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f6e0-112">This method returns <see langword="null" /> unless you override it.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="1f6e0-113">Należy przesłonić tę metodę i <see cref="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" /> metody do zaimplementowania klucz licencji zapisane.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1f6e0-113">Override this method and the <see cref="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" /> method to implement a saved license key.</span>
            </span>
            <span data-ttu-id="1f6e0-114">Jeśli <paramref name="resourceAssembly" /> parametr jest <see langword="null" />, można pobrać zasobu podstawowego wykonywanie <see cref="T:System.Reflection.Assembly" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1f6e0-114">If the <paramref name="resourceAssembly" /> parameter is <see langword="null" />, then you can retrieve the resource from the primary executing <see cref="T:System.Reflection.Assembly" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public virtual object GetService (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseContext.GetService(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="1f6e0-115">Typ usługi do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f6e0-115">The type of service to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f6e0-116">Pobiera żądanej usługi, jeśli jest dostępna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f6e0-116">Gets the requested service, if it is available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f6e0-117">Wystąpienie usługi lub <see langword="null" /> Jeśli nie można odnaleźć usługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f6e0-117">An instance of the service, or <see langword="null" /> if the service cannot be found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSavedLicenseKey">
      <MemberSignature Language="C#" Value="public virtual void SetSavedLicenseKey (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSavedLicenseKey(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetSavedLicenseKey(Type ^ type, System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="1f6e0-118">A <see cref="T:System.Type" /> reprezentujący składnik skojarzony z kluczem licencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f6e0-118">A <see cref="T:System.Type" /> that represents the component associated with the license key.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="1f6e0-119">
            <see cref="P:System.ComponentModel.License.LicenseKey" /> Do zapisania dla typu składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f6e0-119">The <see cref="P:System.ComponentModel.License.LicenseKey" /> to save for the type of component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f6e0-120">W przypadku przesłonięcia w klasie pochodnej, ustawia klucz licencji dla określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f6e0-120">When overridden in a derived class, sets a license key for the specified type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f6e0-121">Zwykle ta metoda jest wywoływana po ustawieniu <xref:System.ComponentModel.LicenseUsageMode> w czasie projektowania.</span><span class="sxs-lookup"><span data-stu-id="1f6e0-121">Typically, call this method when you set <xref:System.ComponentModel.LicenseUsageMode> at design time.</span></span> <span data-ttu-id="1f6e0-122">Konieczne jest przesłonięcie <xref:System.ComponentModel.LicenseContext.UsageMode%2A> właściwości Obsługa licencji czasu projektowania.</span><span class="sxs-lookup"><span data-stu-id="1f6e0-122">You must override the <xref:System.ComponentModel.LicenseContext.UsageMode%2A> property to implement design-time license support.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="1f6e0-123">Ta metoda nie zapewniają obsługę klucz licencji zapisane.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1f6e0-123">This method does not provide support for a saved license key.</span>
            </span>
            <span data-ttu-id="1f6e0-124">Należy przesłonić tę metodę i <see cref="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" /> metody do implementowania klucza.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1f6e0-124">Override this method and the <see cref="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" /> method to implement a key.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <Member MemberName="UsageMode">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.LicenseUsageMode UsageMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.LicenseUsageMode UsageMode" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.LicenseContext.UsageMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UsageMode As LicenseUsageMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::LicenseUsageMode UsageMode { System::ComponentModel::LicenseUsageMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.LicenseUsageMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f6e0-125">W przypadku przesłonięcia w klasie pochodnej pobiera wartość określającą, jeśli używasz licencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f6e0-125">When overridden in a derived class, gets a value that specifies when you can use a license.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f6e0-126">Jeden z <see cref="T:System.ComponentModel.LicenseUsageMode" /> wartości, które określają, jeśli używasz licencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f6e0-126">One of the <see cref="T:System.ComponentModel.LicenseUsageMode" /> values that specifies when you can use a license.</span>
          </span>
          <span data-ttu-id="1f6e0-127">Wartość domyślna to <see cref="F:System.ComponentModel.LicenseUsageMode.Runtime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f6e0-127">The default is <see cref="F:System.ComponentModel.LicenseUsageMode.Runtime" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="1f6e0-128">Aby zaimplementować obsługi w czasie projektowania, należy zastąpić tę właściwość w klasie, która dziedziczy.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1f6e0-128">To implement design-time support, override this property in a class that inherits.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
  </Members>
</Type>