<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ITypeDescriptorContext.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b7cf0378933040b6c83234de6d7b313fe7b26bd9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b7cf0378933040b6c83234de6d7b313fe7b26bd9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.ITypeDescriptorContext">
          <source>Provides contextual information about a component, such as its container and property descriptor.</source>
          <target state="translated">Zapewnia informacje kontekstowe dotyczące składnika, takie jak jego kontenera i deskryptora właściwości.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ITypeDescriptorContext">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.ITypeDescriptorContext&gt;</ph> interface provides contextual information about a component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.ITypeDescriptorContext&gt;</ph> Interfejs zapewnia informacje kontekstowe dotyczące składnika.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ITypeDescriptorContext">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.ITypeDescriptorContext&gt;</ph> is typically used at design time to provide information about a design-time container.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.ITypeDescriptorContext&gt;</ph> Aby podać informacje o kontenerze czasu projektowania zwykle jest używana w czasie projektowania.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ITypeDescriptorContext">
          <source>This interface is commonly used in type conversion.</source>
          <target state="translated">Ten interfejs jest powszechnie używany podczas konwersji typu.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ITypeDescriptorContext">
          <source>For details, see <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ITypeDescriptorContext">
          <source>Do not rely on the presence of this interface when you design a type converter.</source>
          <target state="translated">Nie należy polegać na obecność ten interfejs, podczas projektowania konwertera typów.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ITypeDescriptorContext">
          <source>If a particular interface, property, or service is necessary but not available, the type converter should return <ph id="ph1">`null`</ph> rather than throw an exception.</source>
          <target state="translated">Jeśli określony interfejs, właściwości lub usługi jest konieczne, ale nie jest dostępna, konwerter typów powinien zwrócić <ph id="ph1">`null`</ph> zamiast zgłoszenia wyjątku.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ITypeDescriptorContext">
          <source>This interface's properties can return <ph id="ph1">`null`</ph> at any time, and you should plan for this.</source>
          <target state="translated">Właściwości ten interfejs może zwracać <ph id="ph1">`null`</ph> w dowolnym momencie i należy zaplanować tego.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ITypeDescriptorContext">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.ComponentModel.ITypeDescriptorContext&gt;</ph> interface to support type conversion.</source>
          <target state="translated">Poniższy przykład kodu pokazuje sposób użycia <ph id="ph1">&lt;xref:System.ComponentModel.ITypeDescriptorContext&gt;</ph> interfejs do obsługi konwersji typu.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.ITypeDescriptorContext.Container">
          <source>Gets the container representing this <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph> request.</source>
          <target state="translated">Pobiera kontener reprezentujący to <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph> żądania.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.ITypeDescriptorContext.Container">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> with the set of objects for this <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="null" /&gt;</ph> if there is no container or if the <ph id="ph4">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph> does not use outside objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> z zestawu obiektów w tym <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>; w przeciwnym razie <ph id="ph3">&lt;see langword="null" /&gt;</ph> Jeśli nie ma żadnych kontenera lub jeśli <ph id="ph4">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph> nie korzysta z obiektów zewnętrznych.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.ITypeDescriptorContext.Container">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.ITypeDescriptorContext.Container%2A&gt;</ph> property gets the logical container of the component associated with the type descriptor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.ITypeDescriptorContext.Container%2A&gt;</ph> Właściwość pobiera kontenerem logicznym powiązane z deskryptorem typu składnika.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.ITypeDescriptorContext.Instance">
          <source>Gets the object that is connected with this type descriptor request.</source>
          <target state="translated">Pobiera obiekt, który jest połączony z tym żądaniem deskryptor typu.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.ITypeDescriptorContext.Instance">
          <source>The object that invokes the method on the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there is no object responsible for the call.</source>
          <target state="translated">Obiekt, który wywołuje metodę na <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>; w przeciwnym razie <ph id="ph2">&lt;see langword="null" /&gt;</ph> Jeśli nie ma żadnego obiektu odpowiada za wywołanie.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.ITypeDescriptorContext.Instance">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A&gt;</ph> property gets the object that is invoking the <ph id="ph2">&lt;xref:System.ComponentModel.ITypeDescriptorContext&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A&gt;</ph> Właściwości pobiera obiekt, który wywołuje <ph id="ph2">&lt;xref:System.ComponentModel.ITypeDescriptorContext&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.ITypeDescriptorContext.Instance">
          <source>For example, if a type converter is given a <ph id="ph1">&lt;xref:System.Drawing.Color&gt;</ph> to convert, <ph id="ph2">&lt;xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A&gt;</ph> returns the actual instance of the control that is using the <ph id="ph3">&lt;xref:System.Drawing.Color&gt;</ph>.</source>
          <target state="translated">Na przykład, jeśli podano konwertera typów <ph id="ph1">&lt;xref:System.Drawing.Color&gt;</ph> Aby dokonać konwersji, <ph id="ph2">&lt;xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A&gt;</ph> zwraca rzeczywiste wystąpienie formantu, który używa <ph id="ph3">&lt;xref:System.Drawing.Color&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.ITypeDescriptorContext.Instance">
          <source>You can subsequently query the control for further information about its services and its <ph id="ph1">&lt;xref:System.ComponentModel.ITypeDescriptorContext.Container%2A&gt;</ph>.</source>
          <target state="translated">Następnie można zbadać formantu, aby uzyskać więcej informacji o usługach i jego <ph id="ph1">&lt;xref:System.ComponentModel.ITypeDescriptorContext.Container%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /&gt;</ph> event.</source>
          <target state="translated">Zgłasza <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /&gt;</ph> zdarzeń.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged%2A&gt;</ph> method to send notification that an instance of an object has changed.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged%2A&gt;</ph> metodę wysyłania powiadomień, zmienił się wystąpienia obiektu.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>Obsługa i wywoływanie zdarzeń<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged%2A&gt;</ph> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">W przypadku przesłaniania <ph id="ph1">&lt;see cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged" /&gt;</ph> w klasie pochodnej, należy wywołać klasy podstawowej <ph id="ph2">&lt;see cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged" /&gt;</ph> metody, które zarejestrowane delegatów odbierać zdarzenia.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /&gt;</ph> event.</source>
          <target state="translated">Zgłasza <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /&gt;</ph> zdarzeń.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this object can be changed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli ten obiekt może być zmieniany; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging%2A&gt;</ph> method to send notification that an instance of an object is about to be changed.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging%2A&gt;</ph> do wysyłania powiadomień, który ma zostać zmieniony wystąpienia obiektu.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging">
          <source>This method also returns a value indicating whether this object can be changed.</source>
          <target state="translated">Ta metoda zwraca również wartość wskazującą, czy ten obiekt może zostać zmieniony.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging">
          <source>When <ph id="ph1">`false`</ph> is returned, do not change the object.</source>
          <target state="translated">Gdy <ph id="ph1">`false`</ph> jest zwracany, nie należy zmieniać obiektu.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>Obsługa i wywoływanie zdarzeń<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging%2A&gt;</ph> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">W przypadku przesłaniania <ph id="ph1">&lt;see cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging" /&gt;</ph> w klasie pochodnej, należy wywołać klasy podstawowej <ph id="ph2">&lt;see cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging" /&gt;</ph> metody, które zarejestrowane delegatów odbierać zdarzenia.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> that is associated with the given context item.</source>
          <target state="translated">Pobiera <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> skojarzonego z elementem danego kontekstu.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> that describes the given context item; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there is no <ph id="ph3">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> responsible for the call.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> Opisujący podanym kontekście elementu; w przeciwnym razie <ph id="ph2">&lt;see langword="null" /&gt;</ph> w przypadku nie <ph id="ph3">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> odpowiada za wywołanie.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>