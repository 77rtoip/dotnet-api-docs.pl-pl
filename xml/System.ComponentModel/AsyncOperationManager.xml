<Type Name="AsyncOperationManager" FullName="System.ComponentModel.AsyncOperationManager">
  <TypeSignature Language="C#" Value="public static class AsyncOperationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AsyncOperationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AsyncOperationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class AsyncOperationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsyncOperationManager abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="72e05-101">Umożliwia zarządzanie współbieżności dla klas, które obsługują wywołań metod asynchronicznych.</span><span class="sxs-lookup"><span data-stu-id="72e05-101">Provides concurrency management for classes that support asynchronous method calls.</span></span> <span data-ttu-id="72e05-102">Klasa ta nie może być dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="72e05-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e05-103">Jeśli klasa należy podać asynchroniczne zachowanie zgodnie z [oparty na zdarzeniach asynchroniczny wzorzec — Przegląd](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), wystąpi szereg problemów z zarządzaniem współbieżności.</span><span class="sxs-lookup"><span data-stu-id="72e05-103">If your class needs to provide asynchronous behavior according to the [Event-based Asynchronous Pattern Overview](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), you will encounter a number of concurrency management issues.</span></span> <span data-ttu-id="72e05-104">Wśród nich jest wymaganie, aby upewnić się, że w wątku lub kontekstu, który jest odpowiedni dla modelu aplikacji są wywoływane programy obsługi zdarzeń (na przykład aplikacji formularzy systemu Windows, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] aplikacji, aplikacje konsoli i tak dalej).</span><span class="sxs-lookup"><span data-stu-id="72e05-104">Among these is the requirement to ensure that event handlers are called on a thread or context that is appropriate for the application model (for example, Windows Forms applications, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] applications, console applications, and so on).</span></span> <span data-ttu-id="72e05-105"><xref:System.ComponentModel.AsyncOperationManager> Oferują wygodny sposób, aby utworzyć klasę, która jest uruchamiana prawidłowo wszystkich modeli aplikacji obsługiwanych przez [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span><span class="sxs-lookup"><span data-stu-id="72e05-105">The <xref:System.ComponentModel.AsyncOperationManager> provides a convenient way to create a class that runs properly under all application models supported by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span>  
  
 <span data-ttu-id="72e05-106"><xref:System.ComponentModel.AsyncOperationManager> Klasa ma jedną metodę <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A>, która zwraca <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> można śledzić czas trwania konkretne zadanie asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="72e05-106">The <xref:System.ComponentModel.AsyncOperationManager> class has one method, <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A>, which returns an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> that can be used to track the duration of a particular asynchronous task.</span></span> <span data-ttu-id="72e05-107"><xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> Dla zadania może służyć do alertu klientów po zakończeniu zadania.</span><span class="sxs-lookup"><span data-stu-id="72e05-107">The <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> for a task can be used to alert clients when a task completes.</span></span> <span data-ttu-id="72e05-108">Można go również używane publikowania aktualizacji postęp i wyniki przyrostowe bez przerywania operacji.</span><span class="sxs-lookup"><span data-stu-id="72e05-108">It can also be used to post progress updates and incremental results without terminating the operation.</span></span>  
  
 <span data-ttu-id="72e05-109">Aby uzyskać więcej informacji o implementacji klasy asynchroniczne, zobacz [implementacji wzorca asynchronicznego opartego na zdarzeniach](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="72e05-109">For more information about implementing asynchronous classes, see [Implementing the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e05-110">Poniższy przykład kodu pokazuje, przy użyciu <xref:System.ComponentModel.AsyncOperationManager> klasy w celu utworzenia klasy, która obsługuje asynchroniczne operacje dla dowolnego modelu aplikacji.</span><span class="sxs-lookup"><span data-stu-id="72e05-110">The following code example demonstrates using the <xref:System.ComponentModel.AsyncOperationManager> class to create a class that supports asynchronous operations for any application model.</span></span> <span data-ttu-id="72e05-111">Widoczny jest sposób Implementowanie klasy, który umożliwia sprawdzenie, liczbę, aby określić, czy jest ono zapisują.</span><span class="sxs-lookup"><span data-stu-id="72e05-111">It shows how to implement a class that tests a number to determine whether it is prime.</span></span> <span data-ttu-id="72e05-112">Obliczona w ten sposób może być czasochłonne, więc odbywa się w oddzielnym wątku.</span><span class="sxs-lookup"><span data-stu-id="72e05-112">This calculation can be time consuming, so it is done on a separate thread.</span></span> <span data-ttu-id="72e05-113">Raporty z postępów, wyniki przyrostowych i uzupełniania powiadomienia są obsługiwane przez <xref:System.ComponentModel.AsyncOperation> klasy, która zapewnia, że obsługi zdarzeń klienckich są nazywane na właściwy thread lub context.</span><span class="sxs-lookup"><span data-stu-id="72e05-113">Progress reports, incremental results, and completion notifications are handled by the <xref:System.ComponentModel.AsyncOperation> class, which ensures that the client's event handlers are called on the proper thread or context.</span></span>  
  
 <span data-ttu-id="72e05-114">Listy pełnego kodu, zobacz [porady: implementacja składnika obsługującego wzorzec asynchroniczny oparty na zdarzeniach](http://msdn.microsoft.com/library/3c1aa4d4-da87-4a03-b812-3d167b8c57cf).</span><span class="sxs-lookup"><span data-stu-id="72e05-114">For a full code listing, see [How to: Implement a Component That Supports the Event-based Asynchronous Pattern](http://msdn.microsoft.com/library/3c1aa4d4-da87-4a03-b812-3d167b8c57cf).</span></span> <span data-ttu-id="72e05-115">Listy pełnego kodu formularza klienta, zobacz [porady: implementacja klienta wzorca asynchronicznego opartego na zdarzeniach](~/docs/standard/asynchronous-programming-patterns/how-to-implement-a-client-of-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="72e05-115">For a full code listing of a client form, see [How to: Implement a Client of the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/how-to-implement-a-client-of-the-event-based-asynchronous-pattern.md).</span></span>  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#3)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.AsyncOperation" />
  </Docs>
  <Members>
    <Member MemberName="CreateOperation">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AsyncOperation CreateOperation (object userSuppliedState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AsyncOperation CreateOperation(object userSuppliedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncOperationManager.CreateOperation(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateOperation (userSuppliedState As Object) As AsyncOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AsyncOperation ^ CreateOperation(System::Object ^ userSuppliedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userSuppliedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userSuppliedState"><span data-ttu-id="72e05-116">Obiekt używany do skojarzenia fragment stanu klienta, np. Identyfikator zadania z określonej operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="72e05-116">An object used to associate a piece of client state, such as a task ID, with a particular asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="72e05-117">Zwraca <see cref="T:System.ComponentModel.AsyncOperation" /> śledzenia w czasie trwania określonej operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="72e05-117">Returns an <see cref="T:System.ComponentModel.AsyncOperation" /> for tracking the duration of a particular asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="72e05-118"><see cref="T:System.ComponentModel.AsyncOperation" /> Czy służy do śledzenia w czasie trwania wywołanie metody asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="72e05-118">An <see cref="T:System.ComponentModel.AsyncOperation" /> that you can use to track the duration of an asynchronous method invocation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e05-119"><xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> Metoda zwraca <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> służącego do śledzenia w czasie trwania określonej operacji asynchronicznych i alertów modelu aplikacji, po zakończeniu operacji.</span><span class="sxs-lookup"><span data-stu-id="72e05-119">The <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> method returns an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> that you can use to track the duration of a particular asynchronous operation and to alert the application model when the operation completes.</span></span> <span data-ttu-id="72e05-120">Można również użyć można opublikować aktualizacje postęp i wyniki przyrostowe bez przerywania wykonać operację.</span><span class="sxs-lookup"><span data-stu-id="72e05-120">You can also use it to post progress updates and incremental results without terminating the operation.</span></span> <span data-ttu-id="72e05-121"><xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> Zostanie poprawnie organizowania tych wywołań do odpowiedniego wątku lub kontekst dla modelu aplikacji.</span><span class="sxs-lookup"><span data-stu-id="72e05-121">The <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> will correctly marshal these calls to the appropriate thread or context for the application model.</span></span>  
  
 <span data-ttu-id="72e05-122">W przypadku zastosowania klasy obsługującego wzorzec asynchroniczny oparty na zdarzeniach, powinny wywoływać klasy <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> zawsze Twojej *MethodName* `Async` metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="72e05-122">If you implement a class that supports the Event-based Asynchronous Pattern, your class should call <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> each time your *MethodName*`Async` method is called.</span></span> <span data-ttu-id="72e05-123">Można użyć aplikacji klienckiej, która sprawia, że wywołania metody `userSuppliedState` parametr, aby jednoznacznie zidentyfikować każde wywołanie, aby rozróżnić zdarzenia wywoływane podczas wykonywania operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="72e05-123">The client application that makes calls to the method can use the `userSuppliedState` parameter to uniquely identify each invocation, so as to distinguish events raised during the execution of the asynchronous operation.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="72e05-124">Kod klienta Podaj unikatową wartość `userSuppliedState` parametru.</span><span class="sxs-lookup"><span data-stu-id="72e05-124">Client code must provide a unique value for the `userSuppliedState` parameter.</span></span> <span data-ttu-id="72e05-125">Nieunikatowy identyfikatorów zadań może spowodować implementacji nieprawidłowo raportuje postęp i inne zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="72e05-125">Non-unique task IDs may cause your implementation to report progress and other events incorrectly.</span></span> <span data-ttu-id="72e05-126">Kod należy wyszukać identyfikator zadania nie jest unikatowa i zgłosić <xref:System.ArgumentException?displayProperty=nameWithType> po wykryciu jednego.</span><span class="sxs-lookup"><span data-stu-id="72e05-126">Your code should check for a non-unique task ID and throw an <xref:System.ArgumentException?displayProperty=nameWithType> if one is detected.</span></span>  
  
 <span data-ttu-id="72e05-127">Należy śledzić kodu co <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> zwrócony przez <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> i używać obiektu w odpowiednich podstawowej operację asynchroniczną do publikowania aktualizacji i zakończyć operację.</span><span class="sxs-lookup"><span data-stu-id="72e05-127">Your code should track every <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> returned by <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> and use the object in the corresponding underlying asynchronous operation to post updates and terminate the operation.</span></span> <span data-ttu-id="72e05-128">Ta śledzenia może być prosty jak przekazywanie <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> jako parametr między delegatów.</span><span class="sxs-lookup"><span data-stu-id="72e05-128">This tracking can be as simple as passing the <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> as a parameter among delegates.</span></span> <span data-ttu-id="72e05-129">W bardziej złożonych wzorów klasy może przechowywać Kolekcja <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> obiektów, dodawanie obiektów rozpoczęcie zadania i usunięcie ich, gdy zadania zostały ukończone lub anulowane.</span><span class="sxs-lookup"><span data-stu-id="72e05-129">In more sophisticated designs, your class can maintain a collection of <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> objects, adding objects when tasks are started and removing them when tasks are completed or canceled.</span></span> <span data-ttu-id="72e05-130">Takie podejście umożliwia Sprawdź, czy unikatowy `userSuppliedState` parametru wartości, a jest to metoda, należy użyć podczas pracy z klasami, które obsługują wiele współbieżnych wywołań.</span><span class="sxs-lookup"><span data-stu-id="72e05-130">This approach allows you to check for unique `userSuppliedState` parameter values, and is the method you should use when working with classes that support multiple concurrent invocations.</span></span>  
  
 <span data-ttu-id="72e05-131">Aby uzyskać więcej informacji o implementacji klasy asynchroniczne, zobacz [implementacji wzorca asynchronicznego opartego na zdarzeniach](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="72e05-131">For more information about implementing asynchronous classes, see [Implementing the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e05-132">Poniższy przykład kodu pokazuje, za pomocą <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> metodę w celu utworzenia <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> śledzenia w czasie trwania operacji asynchronicznych.</span><span class="sxs-lookup"><span data-stu-id="72e05-132">The following code example demonstrates using the <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> method to create an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> for tracking the duration of asynchronous operations.</span></span> <span data-ttu-id="72e05-133">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.ComponentModel.AsyncOperationManager> klasy.</span><span class="sxs-lookup"><span data-stu-id="72e05-133">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager> class.</span></span>  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#3)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.AsyncOperation" />
      </Docs>
    </Member>
    <Member MemberName="SynchronizationContext">
      <MemberSignature Language="C#" Value="public static System.Threading.SynchronizationContext SynchronizationContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Threading.SynchronizationContext SynchronizationContext" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AsyncOperationManager.SynchronizationContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property SynchronizationContext As SynchronizationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Threading::SynchronizationContext ^ SynchronizationContext { System::Threading::SynchronizationContext ^ get(); void set(System::Threading::SynchronizationContext ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.SynchronizationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72e05-134">Pobiera lub ustawia kontekst synchronizacji dla operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="72e05-134">Gets or sets the synchronization context for the asynchronous operation.</span></span></summary>
        <value><span data-ttu-id="72e05-135">Kontekst synchronizacji dla operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="72e05-135">The synchronization context for the asynchronous operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e05-136">Domyślna implementacja jest implementacją bezwątkowy.</span><span class="sxs-lookup"><span data-stu-id="72e05-136">The default implementation is the free-threaded implementation.</span></span>  
  
 <span data-ttu-id="72e05-137">Wątek należy ustawić <xref:System.ComponentModel.AsyncOperationManager.SynchronizationContext%2A> właściwości `null` zwolnienia fabryki bezwątkowe po zakończeniu, w przeciwnym razie jego fabryki nigdy nie zostanie usunięte.</span><span class="sxs-lookup"><span data-stu-id="72e05-137">A thread should set the <xref:System.ComponentModel.AsyncOperationManager.SynchronizationContext%2A> property to `null` to release the free-threaded factory when it is done, or else its factory will never be disposed.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="72e05-138">do ustawiania kontekstu synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="72e05-138">for setting the synchronization context.</span></span> <span data-ttu-id="72e05-139">Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="72e05-139">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="72e05-140">Skojarzony stan:</span><span class="sxs-lookup"><span data-stu-id="72e05-140">Associated state:</span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>