<Type Name="IEditableCollectionView" FullName="System.ComponentModel.IEditableCollectionView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="340e44383ae5d205029c5bc5915a7907bfde5869" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69327911" /></Metadata><TypeSignature Language="C#" Value="public interface IEditableCollectionView" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEditableCollectionView" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.IEditableCollectionView" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEditableCollectionView" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEditableCollectionView" />
  <TypeSignature Language="F#" Value="type IEditableCollectionView = interface" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d41a7-101">Definiuje metody i właściwości, które <see cref="T:System.Windows.Data.CollectionView" /> implementuje, aby zapewnić możliwości edycji dla kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d41a7-101">Defines methods and properties that a <see cref="T:System.Windows.Data.CollectionView" /> implements to provide editing capabilities to a collection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d41a7-102">Gdy widok kolekcji implementuje <xref:System.ComponentModel.IEditableCollectionView> interfejs, można bezpośrednio zmienić kolekcję źródłową, jeśli pozwala ona na wprowadzanie zmian, przy użyciu metod i właściwości, które <xref:System.ComponentModel.IEditableCollectionView> ujawniają, niezależnie od typu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d41a7-102">When a collection view implements the <xref:System.ComponentModel.IEditableCollectionView> interface, you can directly change the underlying collection, if it allows changes to be made, by using the methods and properties that <xref:System.ComponentModel.IEditableCollectionView> exposes, regardless of the collection's type.</span></span>  
  
 <span data-ttu-id="d41a7-103">Typy <xref:System.Windows.Controls.ItemCollection>, <xref:System.Windows.Data.BindingListCollectionView>, i [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] <xref:System.Windows.Data.CollectionView>są typami, które są dostarczane z tą, która dziedziczy z. <xref:System.Windows.Data.ListCollectionView></span><span class="sxs-lookup"><span data-stu-id="d41a7-103">The types <xref:System.Windows.Controls.ItemCollection>, <xref:System.Windows.Data.BindingListCollectionView>, and <xref:System.Windows.Data.ListCollectionView> are the types that ship with [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] that inherit from <xref:System.Windows.Data.CollectionView>.</span></span>  <span data-ttu-id="d41a7-104">Te typy również implementują <xref:System.ComponentModel.IEditableCollectionView>, więc można edytować kolekcję, która używa jednego z tych typów.</span><span class="sxs-lookup"><span data-stu-id="d41a7-104">These types also implement the <xref:System.ComponentModel.IEditableCollectionView>, so you can edit a collection that uses one of those types.</span></span>  <span data-ttu-id="d41a7-105"><xref:System.Windows.Controls.ItemCollection>w szczególności, jest często używany, ponieważ <xref:System.Windows.Controls.ItemsControl.Items%2A?displayProperty=nameWithType> Właściwość <xref:System.Windows.Controls.ItemCollection>jest.</span><span class="sxs-lookup"><span data-stu-id="d41a7-105"><xref:System.Windows.Controls.ItemCollection>, in particular, is often used because the <xref:System.Windows.Controls.ItemsControl.Items%2A?displayProperty=nameWithType> property is an <xref:System.Windows.Controls.ItemCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d41a7-106">Poniższy przykład pokazuje, jak dodać element do kolekcji przy użyciu metod, które są zdefiniowane przez <xref:System.ComponentModel.IEditableCollectionView>.</span><span class="sxs-lookup"><span data-stu-id="d41a7-106">The following example shows how to add an item to a collection by using methods that are defined by <xref:System.ComponentModel.IEditableCollectionView>.</span></span>  <span data-ttu-id="d41a7-107">Ta aplikacja wyświetla listę elementów do sprzedaży i daje użytkownikowi możliwość dodawania, edytowania lub usuwania elementu.</span><span class="sxs-lookup"><span data-stu-id="d41a7-107">This application displays a list of items for sale and gives the user the option of adding, editing, or removing an item.</span></span>  <span data-ttu-id="d41a7-108">Gdy użytkownik doda lub edytuje element, formularz poprosi użytkownika o wprowadzenie nowego elementu.</span><span class="sxs-lookup"><span data-stu-id="d41a7-108">When the user adds or edits an item, a form prompts the user to enter a new item.</span></span>  <span data-ttu-id="d41a7-109">Jeśli użytkownik prześle formularz, element zostanie przekazany do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d41a7-109">If the user submits the form, the item is committed to the collection.</span></span>  <span data-ttu-id="d41a7-110">Jeśli użytkownik anuluje formularz, element zostanie odrzucony.</span><span class="sxs-lookup"><span data-stu-id="d41a7-110">If the user cancels the form, the item is discarded.</span></span> <span data-ttu-id="d41a7-111">W przypadku całego przykładu zobacz [Zmiana kolekcji przy użyciu przykładu IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="d41a7-111">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddNew">
      <MemberSignature Language="C#" Value="public object AddNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.AddNew" />
      <MemberSignature Language="VB.NET" Value="Public Function AddNew () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ AddNew();" />
      <MemberSignature Language="F#" Value="abstract member AddNew : unit -&gt; obj" Usage="iEditableCollectionView.AddNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d41a7-112">Dodaje nowy element do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d41a7-112">Adds a new item to the collection.</span></span></summary>
        <returns><span data-ttu-id="d41a7-113">Nowy element, który jest dodawany do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d41a7-113">The new item that is added to the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d41a7-114">Wywołanie <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> rozpoczyna się od dodania transakcji.</span><span class="sxs-lookup"><span data-stu-id="d41a7-114">Calling <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> begins an add transaction.</span></span>  <span data-ttu-id="d41a7-115">Należy wywołać <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> lub <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> zakończyć dodawanie transakcji.</span><span class="sxs-lookup"><span data-stu-id="d41a7-115">You should call <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> or <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> to end the add transaction.</span></span> <span data-ttu-id="d41a7-116">Nowy element jest zawsze wyświetlany w widoku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d41a7-116">A new item always appears in the collection view.</span></span> <span data-ttu-id="d41a7-117">Wszelkie filtrowanie, sortowanie lub grupowanie stosowane do widoku jest stosowane do nowego elementu, gdy <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="d41a7-117">Any filtering, sorting, or grouping that is applied to the view is applied to the new item when <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d41a7-118">W poniższym przykładzie zostanie utworzony <xref:System.Windows.Window> komunikat z prośbą o dodanie nowego elementu.</span><span class="sxs-lookup"><span data-stu-id="d41a7-118">The following example creates a <xref:System.Windows.Window> that prompts the user to add a new item.</span></span>  <span data-ttu-id="d41a7-119">Następnie wywołuje <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> , aby utworzyć nowy obiekt i <xref:System.Windows.FrameworkElement.DataContext%2A> ustawić <xref:System.Windows.Window> dla niego obiekt.</span><span class="sxs-lookup"><span data-stu-id="d41a7-119">Then it calls <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> to create a new object and sets the <xref:System.Windows.FrameworkElement.DataContext%2A> of the <xref:System.Windows.Window> to that object.</span></span> <span data-ttu-id="d41a7-120">W przypadku całego przykładu zobacz [Zmiana kolekcji przy użyciu przykładu IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="d41a7-120">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAddNew">
      <MemberSignature Language="C#" Value="public bool CanAddNew { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanAddNew" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CanAddNew" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanAddNew As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanAddNew { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanAddNew : bool" Usage="System.ComponentModel.IEditableCollectionView.CanAddNew" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d41a7-121">Pobiera wartość wskazującą, czy do kolekcji można dodać nowy element.</span><span class="sxs-lookup"><span data-stu-id="d41a7-121">Gets a value that indicates whether a new item can be added to the collection.</span></span></summary>
        <value><span data-ttu-id="d41a7-122"><see langword="true" />Jeśli do kolekcji można dodać nowy element, w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="d41a7-122"><see langword="true" /> if a new item can be added to the collection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d41a7-123"><xref:System.ComponentModel.IEditableCollectionView> Można dodać nowy element, jeśli są spełnione następujące warunki:</span><span class="sxs-lookup"><span data-stu-id="d41a7-123">An <xref:System.ComponentModel.IEditableCollectionView> can add a new item if the following are true:</span></span>  
  
-   <span data-ttu-id="d41a7-124">Element można dodać do źródłowej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d41a7-124">An item can be added to the underlying collection.</span></span>  <span data-ttu-id="d41a7-125">Na przykład, jeśli kolekcja jest tylko do odczytu, <xref:System.ComponentModel.IEditableCollectionView.CanAddNew%2A> to. `false`</span><span class="sxs-lookup"><span data-stu-id="d41a7-125">For example, if the collection is read-only, <xref:System.ComponentModel.IEditableCollectionView.CanAddNew%2A> is `false`.</span></span>  
  
-   <span data-ttu-id="d41a7-126"><xref:System.ComponentModel.IEditableCollectionView> Można utworzyć obiekt typu, który znajduje się w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d41a7-126">The <xref:System.ComponentModel.IEditableCollectionView> can create an object of the type that is in the collection.</span></span>  <span data-ttu-id="d41a7-127">Na przykład jeśli kolekcja jest typu <xref:System.Collections.ObjectModel.ObservableCollection%601> <xref:System.ComponentModel.IEditableCollectionView> , musi istnieć możliwość utworzenia obiektu typu `T`.</span><span class="sxs-lookup"><span data-stu-id="d41a7-127">For example, if the collection is of type <xref:System.Collections.ObjectModel.ObservableCollection%601>, the <xref:System.ComponentModel.IEditableCollectionView> must be able to create an object of type `T`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d41a7-128">Poniższy przykład sprawdza, czy element można dodać do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d41a7-128">The following example checks whether an item can be added to the collection.</span></span>  <span data-ttu-id="d41a7-129">Jeśli <xref:System.ComponentModel.IEditableCollectionView.CanAddNew%2A> jest`false`, przykład informuje użytkownika, że nie można dodać elementu.</span><span class="sxs-lookup"><span data-stu-id="d41a7-129">If <xref:System.ComponentModel.IEditableCollectionView.CanAddNew%2A> is `false`, the example tells the user that an item cannot be added.</span></span>  <span data-ttu-id="d41a7-130">W przeciwnym razie pokazuje formularz, który będzie monitował użytkownika o dodanie nowego elementu.</span><span class="sxs-lookup"><span data-stu-id="d41a7-130">Otherwise, it shows a form that prompts the user to add a new item.</span></span> <span data-ttu-id="d41a7-131">W przypadku całego przykładu zobacz [Zmiana kolekcji przy użyciu przykładu IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections) .</span><span class="sxs-lookup"><span data-stu-id="d41a7-131">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections) .</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCancelEdit">
      <MemberSignature Language="C#" Value="public bool CanCancelEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanCancelEdit" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanCancelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanCancelEdit { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanCancelEdit : bool" Usage="System.ComponentModel.IEditableCollectionView.CanCancelEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d41a7-132">Pobiera wartość wskazującą, czy widok kolekcji może odrzucać oczekujące zmiany i przywracać oryginalne wartości edytowanego obiektu.</span><span class="sxs-lookup"><span data-stu-id="d41a7-132">Gets a value that indicates whether the collection view can discard pending changes and restore the original values of an edited object.</span></span></summary>
        <value><span data-ttu-id="d41a7-133"><see langword="true" />Jeśli widok kolekcji może odrzucić oczekujące zmiany i przywrócić oryginalne wartości edytowanego obiektu; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="d41a7-133"><see langword="true" /> if the collection view can discard pending changes and restore the original values of an edited object; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d41a7-134"><xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A>`true` czy widok obsługuje pojęcie "oczekujące zmiany" aktualnie edytowanego elementu.</span><span class="sxs-lookup"><span data-stu-id="d41a7-134"><xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> is `true` if the view supports the notion of "pending changes" on the currently edited item.</span></span>   <span data-ttu-id="d41a7-135">Na przykład widok kolekcji może zwrócić `true` w przypadku zaimplementowania <xref:System.ComponentModel.IEditableObject>edytowanego elementu lub jeśli widok zawiera informacje o stanie elementu, którego może użyć do wycofania zmian.</span><span class="sxs-lookup"><span data-stu-id="d41a7-135">For example, a collection view might return `true` if the edited item implements <xref:System.ComponentModel.IEditableObject>, or if the view has information about the item's state that it can use to roll back changes.</span></span> <span data-ttu-id="d41a7-136"><xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A>`false` czy widok nie może cofnąć zmian w obiekcie.</span><span class="sxs-lookup"><span data-stu-id="d41a7-136"><xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> is `false` if the view cannot revert changes on an object.</span></span>  <span data-ttu-id="d41a7-137">W takim przypadku należy wywołać <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> , aby spowodować, że widok zakończył edytowanie stanu i zapewnić logikę, aby przywrócić zmiany w edytowanym obiekcie.</span><span class="sxs-lookup"><span data-stu-id="d41a7-137">In that case, call <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> to cause the view to exit the edit state and provide logic to revert the changes on the object that was edited.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d41a7-138">Poniższy przykład pobiera <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> , aby sprawdzić, czy oryginalne wartości edytowanego elementu mogą zostać przywrócone przed wywołaniem <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span><span class="sxs-lookup"><span data-stu-id="d41a7-138">The following example gets <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> to check whether the original values of the edited item can be restored before it calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span></span>  <span data-ttu-id="d41a7-139">Jeśli wartości nie mogą zostać przywrócone, musisz podać dodatkową logikę, aby to zrobić.</span><span class="sxs-lookup"><span data-stu-id="d41a7-139">If the values cannot be restored, you must supply additional logic to do so.</span></span>  <span data-ttu-id="d41a7-140">Jeśli tak, wartości są przywracane podczas przykładowego wywołania <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span><span class="sxs-lookup"><span data-stu-id="d41a7-140">If they can be, the values are restored when the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span></span>   <span data-ttu-id="d41a7-141">W przypadku całego przykładu zobacz [Zmiana kolekcji przy użyciu przykładu IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="d41a7-141">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#canceledit)]
 [!code-vb[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#canceledit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberSignature Language="F#" Value="abstract member CancelEdit : unit -&gt; unit" Usage="iEditableCollectionView.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d41a7-142">Zamyka edytowanie transakcji i, jeśli to możliwe, przywraca oryginalną wartość do elementu.</span><span class="sxs-lookup"><span data-stu-id="d41a7-142">Ends the edit transaction and, if possible, restores the original value to the item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d41a7-143"><xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>ustawia <xref:System.ComponentModel.IEditableCollectionView.CurrentEditItem%2A> na`null` i powoduje, że widok kolekcji zakończy edytowanie stanu.</span><span class="sxs-lookup"><span data-stu-id="d41a7-143"><xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> sets <xref:System.ComponentModel.IEditableCollectionView.CurrentEditItem%2A> to `null` and causes the collection view to exit the edit state.</span></span>  <span data-ttu-id="d41a7-144">Jeśli <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> jest `true` ,<xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> przywraca również oryginalne wartości edytowanego obiektu.</span><span class="sxs-lookup"><span data-stu-id="d41a7-144">If <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> is `true`, <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> also restores the original values of the edited object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d41a7-145">Poniższy przykład pobiera <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> , aby sprawdzić, czy oryginalne wartości edytowanego elementu mogą zostać przywrócone przed wywołaniem <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span><span class="sxs-lookup"><span data-stu-id="d41a7-145">The following example gets <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> to check whether the original values of the edited item can be restored before it calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span></span>  <span data-ttu-id="d41a7-146">Jeśli wartości nie mogą zostać przywrócone, musisz podać dodatkową logikę, aby to zrobić.</span><span class="sxs-lookup"><span data-stu-id="d41a7-146">If the values cannot be restored, you must supply additional logic to do so.</span></span>  <span data-ttu-id="d41a7-147">Jeśli tak, wartości są przywracane podczas przykładowego wywołania <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span><span class="sxs-lookup"><span data-stu-id="d41a7-147">If they can be, the values are restored when the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span></span> <span data-ttu-id="d41a7-148">W przypadku całego przykładu zobacz [Zmiana kolekcji przy użyciu przykładu IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="d41a7-148">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#canceledit)]
 [!code-vb[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#canceledit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelNew">
      <MemberSignature Language="C#" Value="public void CancelNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CancelNew" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelNew();" />
      <MemberSignature Language="F#" Value="abstract member CancelNew : unit -&gt; unit" Usage="iEditableCollectionView.CancelNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d41a7-149">Zamyka Dodawanie transakcji i odrzuca oczekujące nowe elementy.</span><span class="sxs-lookup"><span data-stu-id="d41a7-149">Ends the add transaction and discards the pending new item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d41a7-150">Poniższy przykład wyświetla formularz monitujący użytkownika o dodanie nowego elementu.</span><span class="sxs-lookup"><span data-stu-id="d41a7-150">The following example displays a form that prompts the user to add a new item.</span></span>  <span data-ttu-id="d41a7-151">Jeśli użytkownik prześle formularz, przykład wywołuje <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> , aby dodać element do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d41a7-151">If the user submits the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> to add the item to the collection.</span></span>  <span data-ttu-id="d41a7-152">Jeśli użytkownik anuluje formularz, przykład wywołuje <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> do odrzucenia elementu.</span><span class="sxs-lookup"><span data-stu-id="d41a7-152">If the user cancels the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> to discard the item.</span></span> <span data-ttu-id="d41a7-153">W przypadku całego przykładu zobacz [Zmiana kolekcji przy użyciu przykładu IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="d41a7-153">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRemove">
      <MemberSignature Language="C#" Value="public bool CanRemove { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRemove" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CanRemove" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRemove As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRemove { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRemove : bool" Usage="System.ComponentModel.IEditableCollectionView.CanRemove" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d41a7-154">Pobiera wartość wskazującą, czy element można usunąć z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d41a7-154">Gets a value that indicates whether an item can be removed from the collection.</span></span></summary>
        <value><span data-ttu-id="d41a7-155"><see langword="true" />Jeśli element można usunąć z kolekcji; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="d41a7-155"><see langword="true" /> if an item can be removed from the collection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d41a7-156"><xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A>jest `false` Jeśli źródłowa kolekcja jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="d41a7-156"><xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> is `false` if the underlying collection is read-only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d41a7-157">Poniższy przykład wywołuje <xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> , aby sprawdzić, czy element można usunąć z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d41a7-157">The following example calls <xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> to check whether an item can be removed from the collection.</span></span>  <span data-ttu-id="d41a7-158">Jeśli element może zostać usunięty, przykład monituje użytkownika o potwierdzenie akcji i wywołań <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> , jeśli użytkownik kliknie **przycisk tak**.</span><span class="sxs-lookup"><span data-stu-id="d41a7-158">If an item can be removed, the example prompts the user to confirm the action and calls <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> if the user clicks **Yes**.</span></span> <span data-ttu-id="d41a7-159">W przypadku całego przykładu zobacz [Zmiana kolekcji przy użyciu przykładu IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="d41a7-159">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#removeitem)]
 [!code-vb[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#removeitem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitEdit">
      <MemberSignature Language="C#" Value="public void CommitEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommitEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CommitEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommitEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CommitEdit();" />
      <MemberSignature Language="F#" Value="abstract member CommitEdit : unit -&gt; unit" Usage="iEditableCollectionView.CommitEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d41a7-160">Zamyka edytowanie transakcji i zapisuje oczekujące zmiany.</span><span class="sxs-lookup"><span data-stu-id="d41a7-160">Ends the edit transaction and saves the pending changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d41a7-161">Poniższy przykład tworzy formularz, który będzie monitował użytkownika o Edytowanie istniejącego elementu.</span><span class="sxs-lookup"><span data-stu-id="d41a7-161">The following example creates a form that prompts the user to edit an existing item.</span></span>  <span data-ttu-id="d41a7-162">Jeśli użytkownik prześle formularz, przykład wywoła <xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A> żądanie zapisania zmian w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d41a7-162">If the user submits the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A> to save the changes to the collection.</span></span>  <span data-ttu-id="d41a7-163">Jeśli użytkownik anuluje formularz, przykład wywołuje <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> , aby odrzucić zmiany.</span><span class="sxs-lookup"><span data-stu-id="d41a7-163">If the user cancels the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> to discard the changes.</span></span> <span data-ttu-id="d41a7-164">W przypadku całego przykładu zobacz [Zmiana kolekcji przy użyciu przykładu IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="d41a7-164">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#EditItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#edititem)]
 [!code-vb[EditingCollectionsSnippets#EditItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#edititem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitNew">
      <MemberSignature Language="C#" Value="public void CommitNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommitNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CommitNew" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommitNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CommitNew();" />
      <MemberSignature Language="F#" Value="abstract member CommitNew : unit -&gt; unit" Usage="iEditableCollectionView.CommitNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d41a7-165">Zamyka Dodawanie transakcji i zapisuje oczekujący nowy element.</span><span class="sxs-lookup"><span data-stu-id="d41a7-165">Ends the add transaction and saves the pending new item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d41a7-166">Wszelkie filtrowanie, sortowanie lub grupowanie, które są stosowane do <xref:System.Windows.Data.CollectionView> elementu, jest stosowane do nowej pozycji, gdy <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="d41a7-166">Any filtering, sorting, or grouping that is applied to the <xref:System.Windows.Data.CollectionView> is applied to the new item when <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d41a7-167">Poniższy przykład wyświetla formularz monitujący użytkownika o dodanie nowego elementu.</span><span class="sxs-lookup"><span data-stu-id="d41a7-167">The following example displays a form that prompts the user to add a new item.</span></span>  <span data-ttu-id="d41a7-168">Jeśli użytkownik prześle formularz, przykład wywołuje <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> , aby dodać element do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d41a7-168">If the user submits the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> to add the item to the collection.</span></span>  <span data-ttu-id="d41a7-169">Jeśli użytkownik anuluje formularz, przykład wywołuje <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> do odrzucenia elementu.</span><span class="sxs-lookup"><span data-stu-id="d41a7-169">If the user cancels the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> to discard the item.</span></span> <span data-ttu-id="d41a7-170">W przypadku całego przykładu zobacz [Zmiana kolekcji przy użyciu przykładu IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="d41a7-170">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentAddItem">
      <MemberSignature Language="C#" Value="public object CurrentAddItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentAddItem" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentAddItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CurrentAddItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentAddItem : obj" Usage="System.ComponentModel.IEditableCollectionView.CurrentAddItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d41a7-171">Pobiera element, który jest dodawany podczas bieżącego dodawania transakcji.</span><span class="sxs-lookup"><span data-stu-id="d41a7-171">Gets the item that is being added during the current add transaction.</span></span></summary>
        <value><span data-ttu-id="d41a7-172">Element, który jest dodawany, jeśli <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" /> jest <see langword="true" />; w przeciwnym <see langword="null" />razie.</span><span class="sxs-lookup"><span data-stu-id="d41a7-172">The item that is being added if <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" /> is <see langword="true" />; otherwise, <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentEditItem">
      <MemberSignature Language="C#" Value="public object CurrentEditItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentEditItem" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentEditItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CurrentEditItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentEditItem : obj" Usage="System.ComponentModel.IEditableCollectionView.CurrentEditItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d41a7-173">Pobiera element z edytowanej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d41a7-173">Gets the item in the collection that is being edited.</span></span></summary>
        <value><span data-ttu-id="d41a7-174">Element w kolekcji, który jest edytowany, <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" /> <see langword="null" />jeśli jest <see langword="true" />; w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="d41a7-174">The item in the collection that is being edited if <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" /> is <see langword="true" />; otherwise, <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditItem">
      <MemberSignature Language="C#" Value="public void EditItem (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EditItem(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EditItem (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EditItem(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member EditItem : obj -&gt; unit" Usage="iEditableCollectionView.EditItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="d41a7-175">Element do edycji.</span><span class="sxs-lookup"><span data-stu-id="d41a7-175">The item to edit.</span></span></param>
        <summary><span data-ttu-id="d41a7-176">Rozpoczyna edytowanie transakcji określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="d41a7-176">Begins an edit transaction of the specified item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d41a7-177">Poniższy przykład tworzy formularz, który będzie monitował użytkownika o Edytowanie istniejącego elementu.</span><span class="sxs-lookup"><span data-stu-id="d41a7-177">The following example creates a form that prompts the user to edit an existing item.</span></span>  <span data-ttu-id="d41a7-178">Jeśli użytkownik prześle formularz, zmiany zostaną zatwierdzone do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d41a7-178">If the user submits the form, the changes are committed to the collection.</span></span>  <span data-ttu-id="d41a7-179">Jeśli użytkownik anuluje formularz, zmiany zostaną odrzucone.</span><span class="sxs-lookup"><span data-stu-id="d41a7-179">If the user cancels the form, the changes are discarded.</span></span> <span data-ttu-id="d41a7-180">W przypadku całego przykładu zobacz [Zmiana kolekcji przy użyciu przykładu IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections) .</span><span class="sxs-lookup"><span data-stu-id="d41a7-180">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections) .</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#EditItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#edititem)]
 [!code-vb[EditingCollectionsSnippets#EditItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#edititem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAddingNew">
      <MemberSignature Language="C#" Value="public bool IsAddingNew { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAddingNew" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAddingNew As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAddingNew { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAddingNew : bool" Usage="System.ComponentModel.IEditableCollectionView.IsAddingNew" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d41a7-181">Pobiera wartość wskazującą, czy Dodawanie transakcji jest w toku.</span><span class="sxs-lookup"><span data-stu-id="d41a7-181">Gets a value that indicates whether an add transaction is in progress.</span></span></summary>
        <value><span data-ttu-id="d41a7-182"><see langword="true" />Jeśli trwa Dodawanie transakcji, w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="d41a7-182"><see langword="true" /> if an add transaction is in progress; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d41a7-183">Aby rozpocząć dodawanie transakcji, należy wywołać <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> i zakończyć dodawanie transakcji przez wywołanie <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> lub <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A>.</span><span class="sxs-lookup"><span data-stu-id="d41a7-183">You begin an add transaction by calling <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> and end the add transaction by calling <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> or <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditingItem">
      <MemberSignature Language="C#" Value="public bool IsEditingItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEditingItem" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEditingItem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEditingItem { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEditingItem : bool" Usage="System.ComponentModel.IEditableCollectionView.IsEditingItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d41a7-184">Pobiera wartość wskazującą, czy edytowanie transakcji jest w toku.</span><span class="sxs-lookup"><span data-stu-id="d41a7-184">Gets a value that indicates whether an edit transaction is in progress.</span></span></summary>
        <value><span data-ttu-id="d41a7-185"><see langword="true" />Jeśli edytowanie transakcji jest w toku; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="d41a7-185"><see langword="true" /> if an edit transaction is in progress; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d41a7-186">Aby rozpocząć edycję transakcji, należy <xref:System.ComponentModel.IEditableCollectionView.EditItem%2A> wywołać i zakończyć transakcję, <xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A> wywołując <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>lub.</span><span class="sxs-lookup"><span data-stu-id="d41a7-186">You begin an edit transaction by calling <xref:System.ComponentModel.IEditableCollectionView.EditItem%2A> and end the transaction by calling <xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A> or <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewItemPlaceholderPosition">
      <MemberSignature Language="C#" Value="public System.ComponentModel.NewItemPlaceholderPosition NewItemPlaceholderPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.NewItemPlaceholderPosition NewItemPlaceholderPosition" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition" />
      <MemberSignature Language="VB.NET" Value="Public Property NewItemPlaceholderPosition As NewItemPlaceholderPosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::NewItemPlaceholderPosition NewItemPlaceholderPosition { System::ComponentModel::NewItemPlaceholderPosition get(); void set(System::ComponentModel::NewItemPlaceholderPosition value); };" />
      <MemberSignature Language="F#" Value="member this.NewItemPlaceholderPosition : System.ComponentModel.NewItemPlaceholderPosition with get, set" Usage="System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.NewItemPlaceholderPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d41a7-187">Pobiera lub ustawia położenie symbolu zastępczego nowego elementu w widoku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d41a7-187">Gets or sets the position of the new item placeholder in the collection view.</span></span></summary>
        <value><span data-ttu-id="d41a7-188">Jedna z wartości wyliczenia, która określa położenie symbolu zastępczego nowego elementu w widoku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d41a7-188">One of the enumeration values that specifies the position of the new item placeholder in the collection view.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit" Usage="iEditableCollectionView.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="d41a7-189">Element do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="d41a7-189">The item to remove.</span></span></param>
        <summary><span data-ttu-id="d41a7-190">Usuwa określony element z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d41a7-190">Removes the specified item from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d41a7-191">Jeśli `item` nie znajduje się w kolekcji, <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> nic nie robi.</span><span class="sxs-lookup"><span data-stu-id="d41a7-191">If `item` is not in the collection, <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> does nothing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d41a7-192">Poniższy przykład wywołuje <xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> , aby sprawdzić, czy element można usunąć z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d41a7-192">The following example calls <xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> to check whether an item can be removed from the collection.</span></span>  <span data-ttu-id="d41a7-193">Jeśli element może zostać usunięty, przykład monituje użytkownika o potwierdzenie akcji i wywołań <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> , jeśli użytkownik kliknie **przycisk tak**.</span><span class="sxs-lookup"><span data-stu-id="d41a7-193">If an item can be removed, the example prompts the user to confirm the action and calls <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> if the user clicks **Yes**.</span></span> <span data-ttu-id="d41a7-194">W przypadku całego przykładu zobacz [Zmiana kolekcji przy użyciu przykładu IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="d41a7-194">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#removeitem)]
 [!code-vb[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#removeitem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit" Usage="iEditableCollectionView.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="d41a7-195">Pozycja elementu do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="d41a7-195">The position of the item to remove.</span></span></param>
        <summary><span data-ttu-id="d41a7-196">Usuwa element z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d41a7-196">Removes the item at the specified position from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d41a7-197">`index`jest względem widoku kolekcji, a nie kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d41a7-197">`index` is relative to the collection view, not the collection.</span></span>  <span data-ttu-id="d41a7-198">Na przykład jeśli kolekcja zawiera 10 elementów, a widok ma wartość <xref:System.ComponentModel.ICollectionView.Filter%2A> , tak aby liczba `index` elementów była wyświetlana, prawidłowe wartości to od 0 do 6.</span><span class="sxs-lookup"><span data-stu-id="d41a7-198">For example, if the collection has 10 items and the view has a <xref:System.ComponentModel.ICollectionView.Filter%2A> so that 7 items appear, the valid values of `index` are 0 through 6.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d41a7-199"><paramref name="index" />jest mniejsza niż 0 lub większa niż liczba elementów w widoku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d41a7-199"><paramref name="index" /> is less than 0 or greater than the number of items in the collection view.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
