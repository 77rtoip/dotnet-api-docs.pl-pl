<Type Name="BackgroundWorker" FullName="System.ComponentModel.BackgroundWorker">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5276c36b9c54cf2d9d6aa12b2187170d6956ce38" /><Meta Name="ms.sourcegitcommit" Value="8544f14c8194a55eb22d46721b0bbe46f345c063" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/21/2019" /><Meta Name="ms.locfileid" Value="69668033" /></Metadata><TypeSignature Language="C#" Value="public class BackgroundWorker : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BackgroundWorker extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.BackgroundWorker" />
  <TypeSignature Language="VB.NET" Value="Public Class BackgroundWorker&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class BackgroundWorker : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type BackgroundWorker = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
      <AttributeName>System.ComponentModel.DefaultEvent("DoWork")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2e0c2-101">Wykonuje operację w oddzielnym wątku.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-101">Executes an operation on a separate thread.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0c2-102"><xref:System.ComponentModel.BackgroundWorker> Klasa umożliwia uruchamianie operacji w osobnym, dedykowanym wątku.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-102">The <xref:System.ComponentModel.BackgroundWorker> class allows you to run an operation on a separate, dedicated thread.</span></span> <span data-ttu-id="2e0c2-103">Czasochłonne operacje, takie jak pliki do pobrania i transakcje bazy danych, mogą spowodować, że interfejs użytkownika (UI) wygląda tak, jakby przestał odpowiadać podczas uruchamiania.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-103">Time-consuming operations like downloads and database transactions can cause your user interface (UI) to seem as though it has stopped responding while they are running.</span></span> <span data-ttu-id="2e0c2-104">Jeśli potrzebujesz interfejsu użytkownika, który ma duże opóźnienia związane z takimi operacjami, <xref:System.ComponentModel.BackgroundWorker> Klasa oferuje wygodne rozwiązanie.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-104">When you want a responsive UI and you are faced with long delays associated with such operations, the <xref:System.ComponentModel.BackgroundWorker> class provides a convenient solution.</span></span>  
  
 <span data-ttu-id="2e0c2-105">Aby wykonać czasochłonną operację w tle, Utwórz <xref:System.ComponentModel.BackgroundWorker> i nasłuchiwanie zdarzeń, które zgłaszają postęp operacji i sygnał po zakończeniu operacji.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-105">To execute a time-consuming operation in the background, create a <xref:System.ComponentModel.BackgroundWorker> and listen for events that report the progress of your operation and signal when your operation is finished.</span></span> <span data-ttu-id="2e0c2-106">Można utworzyć <xref:System.ComponentModel.BackgroundWorker> program programowo lub przeciągnąć go do formularza z poziomu karty **składniki** w **przyborniku**.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-106">You can create the <xref:System.ComponentModel.BackgroundWorker> programmatically or you can drag it onto your form from the **Components** tab of the **Toolbox**.</span></span> <span data-ttu-id="2e0c2-107">Jeśli utworzysz <xref:System.ComponentModel.BackgroundWorker> w Projektant formularzy systemu Windows, pojawi się on na pasku składnika, a jego właściwości zostaną wyświetlone w okno właściwości.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-107">If you create the <xref:System.ComponentModel.BackgroundWorker> in the Windows Forms Designer, it will appear in the Component Tray, and its properties will be displayed in the Properties window.</span></span>  
  
 <span data-ttu-id="2e0c2-108">Aby skonfigurować dla operacji w tle, Dodaj program obsługi zdarzeń dla <xref:System.ComponentModel.BackgroundWorker.DoWork> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-108">To set up for a background operation, add an event handler for the <xref:System.ComponentModel.BackgroundWorker.DoWork> event.</span></span> <span data-ttu-id="2e0c2-109">Wywołaj czasochłonną operację w tym obsłudze zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-109">Call your time-consuming operation in this event handler.</span></span> <span data-ttu-id="2e0c2-110">Aby rozpocząć operację, wywołaj <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A>polecenie.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-110">To start the operation, call <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A>.</span></span> <span data-ttu-id="2e0c2-111">Aby otrzymywać powiadomienia o aktualizacjach postępu, obsłużyć <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-111">To receive notifications of progress updates, handle the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event.</span></span> <span data-ttu-id="2e0c2-112">Aby odebrać powiadomienie po zakończeniu operacji, obsłuż <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-112">To receive a notification when the operation is completed, handle the <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2e0c2-113">Należy zachować ostrożność, aby nie manipulować obiektami interfejsu użytkownika w programie <xref:System.ComponentModel.BackgroundWorker.DoWork> obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-113">You must be careful not to manipulate any user-interface objects in your <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler.</span></span> <span data-ttu-id="2e0c2-114">Zamiast tego należy komunikować się z interfejsem użytkownika <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> za <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> pomocą zdarzeń i.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-114">Instead, communicate to the user interface through the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> and <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> events.</span></span>  
>   
>  <span data-ttu-id="2e0c2-115"><xref:System.ComponentModel.BackgroundWorker>zdarzenia nie są organizowane między <xref:System.AppDomain> granicami.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-115"><xref:System.ComponentModel.BackgroundWorker> events are not marshaled across <xref:System.AppDomain> boundaries.</span></span> <span data-ttu-id="2e0c2-116">Nie należy używać <xref:System.ComponentModel.BackgroundWorker> składnika do wykonywania operacji wielowątkowych w więcej niż jednym <xref:System.AppDomain>.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-116">Do not use a <xref:System.ComponentModel.BackgroundWorker> component to perform multithreaded operations in more than one <xref:System.AppDomain>.</span></span>  
  
 <span data-ttu-id="2e0c2-117">Jeśli operacja w tle wymaga parametru, Połącz <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> się z parametrem.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-117">If your background operation requires a parameter, call <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> with your parameter.</span></span> <span data-ttu-id="2e0c2-118">Wewnątrz procedury obsługi <xref:System.ComponentModel.DoWorkEventArgs.Argument%2A?displayProperty=nameWithType> <xref:System.ComponentModel.BackgroundWorker.DoWork> zdarzeń można wyodrębnić parametr z właściwości.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-118">Inside the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler, you can extract the parameter from the <xref:System.ComponentModel.DoWorkEventArgs.Argument%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="2e0c2-119">Aby uzyskać więcej informacji <xref:System.ComponentModel.BackgroundWorker>na temat [, zobacz How to: Uruchom operację w tle](~/docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md).</span><span class="sxs-lookup"><span data-stu-id="2e0c2-119">For more information about <xref:System.ComponentModel.BackgroundWorker>, see [How to: Run an Operation in the Background](~/docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e0c2-120">Poniższy przykład kodu demonstruje podstawy <xref:System.ComponentModel.BackgroundWorker> klasy do wykonywania czasochłonnej operacji asynchronicznie.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-120">The following code example demonstrates the basics of the <xref:System.ComponentModel.BackgroundWorker> class for executing a time-consuming operation asynchronously.</span></span> <span data-ttu-id="2e0c2-121">Na poniższej ilustracji przedstawiono przykład danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-121">The following illustration shows an example of the output.</span></span>  
  
 <span data-ttu-id="2e0c2-122">![BackgroundWorker — prosty przykład] (~/add/media/backgroundworker-simple.png "BackgroundWorker — prosty przykład")</span><span class="sxs-lookup"><span data-stu-id="2e0c2-122">![BackgroundWorker simple example](~/add/media/backgroundworker-simple.png "BackgroundWorker simple example")</span></span>  
  
 <span data-ttu-id="2e0c2-123">Aby wypróbować ten kod, Utwórz aplikację Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-123">To try this code, create a Windows Forms application.</span></span> <span data-ttu-id="2e0c2-124"><xref:System.Windows.Forms.Button> `startAsyncButton` `cancelAsyncButton`Dodaj kontrolkę o `resultLabel` nazwie i Dodaj dwa kontrolki o nazwie i. <xref:System.Windows.Forms.Label></span><span class="sxs-lookup"><span data-stu-id="2e0c2-124">Add a <xref:System.Windows.Forms.Label> control named `resultLabel` and add two <xref:System.Windows.Forms.Button> controls named `startAsyncButton` and `cancelAsyncButton`.</span></span> <span data-ttu-id="2e0c2-125">Utwórz <xref:System.Windows.Forms.Control.Click> programy obsługi zdarzeń dla obu przycisków.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-125">Create <xref:System.Windows.Forms.Control.Click> event handlers for both buttons.</span></span> <span data-ttu-id="2e0c2-126">Na karcie **składniki** przybornika Dodaj <xref:System.ComponentModel.BackgroundWorker> składnik o nazwie `backgroundWorker1`.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-126">From the **Components** tab of the Toolbox, add a <xref:System.ComponentModel.BackgroundWorker> component named `backgroundWorker1`.</span></span> <span data-ttu-id="2e0c2-127">Tworzenie <xref:System.ComponentModel.BackgroundWorker.DoWork>i Obsługazdarzeńdla<xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> .<xref:System.ComponentModel.BackgroundWorker> <xref:System.ComponentModel.BackgroundWorker.ProgressChanged></span><span class="sxs-lookup"><span data-stu-id="2e0c2-127">Create <xref:System.ComponentModel.BackgroundWorker.DoWork>, <xref:System.ComponentModel.BackgroundWorker.ProgressChanged>, and <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handlers for the <xref:System.ComponentModel.BackgroundWorker>.</span></span> <span data-ttu-id="2e0c2-128">W kodzie formularza Zastąp istniejący kod następującym kodem.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-128">In the code for the form, replace the existing code with the following code.</span></span>  
  
 [!code-csharp[System.ComponentModel.BackgroundWorkerSimple#1](~/samples/snippets/csharp/VS_Snippets_Winforms/system.componentmodel.backgroundworkersimple/cs/form1.cs#1)]
 [!code-vb[System.ComponentModel.BackgroundWorkerSimple#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.componentmodel.backgroundworkersimple/vb/form1.vb#1)]  
  
 <span data-ttu-id="2e0c2-129">Poniższy przykład kodu demonstruje użycie <xref:System.ComponentModel.BackgroundWorker> klasy do wykonywania operacji czasochłonnych asynchronicznie.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-129">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker> class for executing a time-consuming operation asynchronously.</span></span> <span data-ttu-id="2e0c2-130">Na poniższej ilustracji przedstawiono przykład danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-130">The following illustration shows an example of the output.</span></span>  
  
 <span data-ttu-id="2e0c2-131">![Przykład BackgroundWorker Fibonacci] (~/add/media/backgroundworker-fibonacci.png "Przykład BackgroundWorker Fibonacci")</span><span class="sxs-lookup"><span data-stu-id="2e0c2-131">![BackgroundWorker Fibonacci example](~/add/media/backgroundworker-fibonacci.png "BackgroundWorker Fibonacci example")</span></span>  
  
 <span data-ttu-id="2e0c2-132">Operacja oblicza wybrany numer Fibonacci, raportuje aktualizacje postępu w miarę kontynuowania obliczeń i umożliwia anulowanie oczekujących obliczeń.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-132">The operation computes the selected Fibonacci number, reports progress updates as the calculation proceeds, and permits a pending calculation to be canceled.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#1)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#1)]
 [!code-vb[System.ComponentModel.BackgroundWorker#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b"><span data-ttu-id="2e0c2-133">Instrukcje: uruchamianie operacji w tle</span><span class="sxs-lookup"><span data-stu-id="2e0c2-133">How to: Run an Operation in the Background</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/e51988e7-7f4b-4646-a06d-1416cee8d557"><span data-ttu-id="2e0c2-134">Zarządzana wątkowość — najlepsze rozwiązania</span><span class="sxs-lookup"><span data-stu-id="2e0c2-134">Managed Threading Best Practices</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd"><span data-ttu-id="2e0c2-135">Instrukcje: pobieranie pliku w tle</span><span class="sxs-lookup"><span data-stu-id="2e0c2-135">How to: Download a File in the Background</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BackgroundWorker ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BackgroundWorker();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2e0c2-136">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.BackgroundWorker" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-136">Initializes a new instance of the <see cref="T:System.ComponentModel.BackgroundWorker" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0c2-137">Ten konstruktor inicjuje obiekt <xref:System.ComponentModel.BackgroundWorker>.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-137">This constructor initializes a <xref:System.ComponentModel.BackgroundWorker>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b"><span data-ttu-id="2e0c2-138">Instrukcje: uruchamianie operacji w tle</span><span class="sxs-lookup"><span data-stu-id="2e0c2-138">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd"><span data-ttu-id="2e0c2-139">Instrukcje: pobieranie pliku w tle</span><span class="sxs-lookup"><span data-stu-id="2e0c2-139">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.CancelAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelAsync();" />
      <MemberSignature Language="F#" Value="member this.CancelAsync : unit -&gt; unit" Usage="backgroundWorker.CancelAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2e0c2-140">Żąda anulowania oczekującej operacji w tle.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-140">Requests cancellation of a pending background operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0c2-141"><xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A>przesyła żądanie zakończenia oczekującej operacji w tle i ustawia <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> właściwość na. `true`</span><span class="sxs-lookup"><span data-stu-id="2e0c2-141"><xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> submits a request to terminate the pending background operation and sets the <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="2e0c2-142">Po wywołaniu <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A>, Metoda procesu roboczego ma szansę na zatrzymanie wykonywania i zakończenie działania.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-142">When you call <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A>, your worker method has an opportunity to stop its execution and exit.</span></span> <span data-ttu-id="2e0c2-143">Kod procesu roboczego powinien okresowo sprawdzać właściwość, aby sprawdzić, <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> czy została ona ustawiona na. `true`</span><span class="sxs-lookup"><span data-stu-id="2e0c2-143">The worker code should periodically check the <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> property to see if it has been set to `true`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2e0c2-144">Należy pamiętać, że kod w programie <xref:System.ComponentModel.BackgroundWorker.DoWork> obsługi zdarzeń może zakończyć swoją pracę, ponieważ jest wykonywane żądanie anulowania, a pętla sondowania może pominąć <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> ustawienie `true`.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-144">Be aware that your code in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler may finish its work as a cancellation request is being made, and your polling loop may miss <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> being set to `true`.</span></span> <span data-ttu-id="2e0c2-145">W <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> takim przypadku <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> flaga w programie <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> obsługi zdarzeń nie zostanie ustawiona na `true`, nawet jeśli zostało wykonane żądanie anulowania.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-145">In this case, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> in your <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler will not be set to `true`, even though a cancellation request was made.</span></span> <span data-ttu-id="2e0c2-146">Ta sytuacja jest nazywana *sytuacją wyścigu* i jest typowym problemem w programowaniu wielowątkowym.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-146">This situation is called a *race condition* and is a common concern in multithreaded programming.</span></span> <span data-ttu-id="2e0c2-147">Aby uzyskać więcej informacji o problemach z projektowaniem wielowątkowości, zobacz temat [zarządzane wątki](~/docs/standard/threading/managed-threading-best-practices.md)z najlepszymi rozwiązaniami.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-147">For more information about multithreading design issues, see [Managed Threading Best Practices](~/docs/standard/threading/managed-threading-best-practices.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e0c2-148">Poniższy przykład kodu demonstruje użycie <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> metody do anulowania operacji asynchronicznej ("background").</span><span class="sxs-lookup"><span data-stu-id="2e0c2-148">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> method to cancel an asynchronous ("background") operation.</span></span> <span data-ttu-id="2e0c2-149">Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.ComponentModel.BackgroundWorker> klasy.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-149">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#4)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#4)]
 [!code-vb[System.ComponentModel.BackgroundWorker#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2e0c2-150"><see cref="P:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation" />jest <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-150"><see cref="P:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation" /> is <see langword="false" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b"><span data-ttu-id="2e0c2-151">Instrukcje: uruchamianie operacji w tle</span><span class="sxs-lookup"><span data-stu-id="2e0c2-151">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd"><span data-ttu-id="2e0c2-152">Instrukcje: pobieranie pliku w tle</span><span class="sxs-lookup"><span data-stu-id="2e0c2-152">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CancellationPending">
      <MemberSignature Language="C#" Value="public bool CancellationPending { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancellationPending" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BackgroundWorker.CancellationPending" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CancellationPending As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CancellationPending { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CancellationPending : bool" Usage="System.ComponentModel.BackgroundWorker.CancellationPending" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e0c2-153">Pobiera wartość wskazującą, czy aplikacja zażądała anulowania operacji w tle.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-153">Gets a value indicating whether the application has requested cancellation of a background operation.</span></span></summary>
        <value><span data-ttu-id="2e0c2-154"><see langword="true" />Jeśli aplikacja zażądała anulowania operacji w tle; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2e0c2-154"><see langword="true" /> if the application has requested cancellation of a background operation; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2e0c2-155">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-155">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0c2-156">Jeśli <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> jest `true` <xref:System.ComponentModel.BackgroundWorker>, Metodazostaławywołanana<xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> .</span><span class="sxs-lookup"><span data-stu-id="2e0c2-156">If <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> is `true`, then the <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> method has been called on the <xref:System.ComponentModel.BackgroundWorker>.</span></span>  
  
 <span data-ttu-id="2e0c2-157">Ta właściwość jest przeznaczona do użytku przez wątek roboczy, który powinien okresowo sprawdzać <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> i przerywać operację w tle, gdy jest ustawiona na. `true`</span><span class="sxs-lookup"><span data-stu-id="2e0c2-157">This property is meant for use by the worker thread, which should periodically check <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> and abort the background operation when it is set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e0c2-158">Poniższy przykład kodu demonstruje użycie <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> właściwości, aby <xref:System.ComponentModel.BackgroundWorker> wykonać zapytanie o stan anulowania.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-158">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> property to query a <xref:System.ComponentModel.BackgroundWorker> about its cancellation state.</span></span> <span data-ttu-id="2e0c2-159">Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.ComponentModel.BackgroundWorker> klasy.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-159">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#8)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#8)]
 [!code-vb[System.ComponentModel.BackgroundWorker#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#8)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b"><span data-ttu-id="2e0c2-160">Instrukcje: uruchamianie operacji w tle</span><span class="sxs-lookup"><span data-stu-id="2e0c2-160">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd"><span data-ttu-id="2e0c2-161">Instrukcje: pobieranie pliku w tle</span><span class="sxs-lookup"><span data-stu-id="2e0c2-161">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="backgroundWorker.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="backgroundWorker.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoWork">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.DoWorkEventHandler DoWork;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.DoWorkEventHandler DoWork" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.BackgroundWorker.DoWork" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DoWork As DoWorkEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::DoWorkEventHandler ^ DoWork;" />
      <MemberSignature Language="F#" Value="member this.DoWork : System.ComponentModel.DoWorkEventHandler " Usage="member this.DoWork : System.ComponentModel.DoWorkEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DoWorkEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e0c2-162">Występuje, <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync" /> gdy jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-162">Occurs when <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync" /> is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0c2-163">To zdarzenie jest zgłaszane po wywołaniu <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-163">This event is raised when you call the <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> method.</span></span> <span data-ttu-id="2e0c2-164">Jest to miejsce, w którym należy rozpocząć operację, która wykonuje potencjalnie czasochłonną pracę.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-164">This is where you start the operation that performs the potentially time-consuming work.</span></span>  
  
 <span data-ttu-id="2e0c2-165">Kod w programie <xref:System.ComponentModel.BackgroundWorker.DoWork> obsługi zdarzeń powinien okresowo <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> sprawdzać wartość właściwości i przerywać operację, jeśli jest `true`.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-165">Your code in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler should periodically check the <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> property value and abort the operation if it is `true`.</span></span> <span data-ttu-id="2e0c2-166"><xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> W takim przypadku można ustawić `true` <xref:System.ComponentModel.DoWorkEventArgs?displayProperty=nameWithType> <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> flagę na, a <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flaga w programie <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> obsługi zdarzeń zostanie ustawiona na `true`wartość.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-166">When this occurs, you can set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> flag of <xref:System.ComponentModel.DoWorkEventArgs?displayProperty=nameWithType> to `true`, and the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> in your <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler will be set to `true`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2e0c2-167">Należy pamiętać, że kod w programie <xref:System.ComponentModel.BackgroundWorker.DoWork> obsługi zdarzeń może zakończyć swoją pracę, ponieważ jest wykonywane żądanie anulowania, a pętla sondowania może pominąć <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> ustawienie `true`.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-167">Be aware that your code in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler may finish its work as a cancellation request is being made, and your polling loop may miss <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> being set to `true`.</span></span> <span data-ttu-id="2e0c2-168">W <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> takim przypadku <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> flaga w programie <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> obsługi zdarzeń nie zostanie ustawiona na `true`, nawet jeśli zostało wykonane żądanie anulowania.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-168">In this case, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> in your <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler will not be set to `true`, even though a cancellation request was made.</span></span> <span data-ttu-id="2e0c2-169">Ta sytuacja jest nazywana *sytuacją wyścigu* i jest typowym problemem w programowaniu wielowątkowym.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-169">This situation is called a *race condition* and is a common concern in multithreaded programming.</span></span> <span data-ttu-id="2e0c2-170">Aby uzyskać więcej informacji o problemach z projektowaniem wielowątkowości, zobacz temat [zarządzane wątki](~/docs/standard/threading/managed-threading-best-practices.md)z najlepszymi rozwiązaniami.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-170">For more information about multithreading design issues, see [Managed Threading Best Practices](~/docs/standard/threading/managed-threading-best-practices.md).</span></span>  
  
 <span data-ttu-id="2e0c2-171">Jeśli operacja generuje wynik, można przypisać wynik do <xref:System.ComponentModel.DoWorkEventArgs.Result%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-171">If your operation produces a result, you can assign the result to the <xref:System.ComponentModel.DoWorkEventArgs.Result%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="2e0c2-172">Ta wartość będzie dostępna dla <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> programu obsługi zdarzeń <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> we właściwości.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-172">This will be available to the <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler in the <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="2e0c2-173">Jeśli operacja zgłasza wyjątek, który nie jest obsługiwany <xref:System.ComponentModel.BackgroundWorker> przez kod, przechwytuje wyjątek i przekazuje go <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> do procedury obsługi zdarzeń, gdzie jest <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType>narażony jako <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> właściwość.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-173">If the operation raises an exception that your code does not handle, the <xref:System.ComponentModel.BackgroundWorker> catches the exception and passes it into the <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler, where it is exposed as the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2e0c2-174">Jeśli używasz programu Visual Studio debugger, debuger zostanie przerwany w punkcie programu obsługi <xref:System.ComponentModel.BackgroundWorker.DoWork> zdarzeń, w którym zgłoszono nieobsługiwany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-174">If you are running under the Visual Studio debugger, the debugger will break at the point in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler where the unhandled exception was raised.</span></span> <span data-ttu-id="2e0c2-175">Jeśli masz więcej niż jeden <xref:System.ComponentModel.BackgroundWorker>z nich, nie należy odwoływać się do żadnego z nich bezpośrednio, ponieważ spowodowałoby <xref:System.ComponentModel.BackgroundWorker.DoWork> to przełączenie programu obsługi zdarzeń <xref:System.ComponentModel.BackgroundWorker>do określonego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-175">If you have more than one <xref:System.ComponentModel.BackgroundWorker>, you should not reference any of them directly, as this would couple your <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler to a specific instance of <xref:System.ComponentModel.BackgroundWorker>.</span></span> <span data-ttu-id="2e0c2-176">Zamiast tego należy uzyskać do niego <xref:System.ComponentModel.BackgroundWorker> dostęp poprzez `sender` rzutowanie parametru w <xref:System.ComponentModel.BackgroundWorker.DoWork> programie obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-176">Instead, you should access your <xref:System.ComponentModel.BackgroundWorker> by casting the `sender` parameter in your <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler.</span></span>  
  
 <span data-ttu-id="2e0c2-177">Należy zachować ostrożność, aby nie manipulować obiektami interfejsu użytkownika w programie <xref:System.ComponentModel.BackgroundWorker.DoWork> obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-177">You must be careful not to manipulate any user-interface objects in your <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler.</span></span> <span data-ttu-id="2e0c2-178">Zamiast tego należy komunikować się z interfejsem użytkownika <xref:System.ComponentModel.BackgroundWorker> przez zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-178">Instead, communicate to the user interface through the <xref:System.ComponentModel.BackgroundWorker> events.</span></span>  
  
 <span data-ttu-id="2e0c2-179">Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-179">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e0c2-180">Poniższy przykład kodu demonstruje użycie <xref:System.ComponentModel.BackgroundWorker.DoWork> zdarzenia do uruchomienia operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-180">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.DoWork> event to start an asynchronous operation.</span></span> <span data-ttu-id="2e0c2-181">Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.ComponentModel.BackgroundWorker> klasy.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-181">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#5)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#5)]
 [!code-vb[System.ComponentModel.BackgroundWorker#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b"><span data-ttu-id="2e0c2-182">Instrukcje: uruchamianie operacji w tle</span><span class="sxs-lookup"><span data-stu-id="2e0c2-182">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e51988e7-7f4b-4646-a06d-1416cee8d557"><span data-ttu-id="2e0c2-183">Zarządzana wątkowość — najlepsze rozwiązania</span><span class="sxs-lookup"><span data-stu-id="2e0c2-183">Managed Threading Best Practices</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd"><span data-ttu-id="2e0c2-184">Instrukcje: pobieranie pliku w tle</span><span class="sxs-lookup"><span data-stu-id="2e0c2-184">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsBusy">
      <MemberSignature Language="C#" Value="public bool IsBusy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBusy" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BackgroundWorker.IsBusy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBusy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBusy { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBusy : bool" Usage="System.ComponentModel.BackgroundWorker.IsBusy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e0c2-185">Pobiera wartość wskazującą, <see cref="T:System.ComponentModel.BackgroundWorker" /> czy jest uruchomiona operacja asynchroniczna.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-185">Gets a value indicating whether the <see cref="T:System.ComponentModel.BackgroundWorker" /> is running an asynchronous operation.</span></span></summary>
        <value><span data-ttu-id="2e0c2-186"><see langword="true" />, jeśli <see cref="T:System.ComponentModel.BackgroundWorker" /> jest uruchomiona operacja asynchroniczna; <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-186"><see langword="true" />, if the <see cref="T:System.ComponentModel.BackgroundWorker" /> is running an asynchronous operation; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0c2-187">Uruchamia operację asynchroniczną podczas wywoływania <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A>. <xref:System.ComponentModel.BackgroundWorker></span><span class="sxs-lookup"><span data-stu-id="2e0c2-187">The <xref:System.ComponentModel.BackgroundWorker> starts an asynchronous operation when you call <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e0c2-188">Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.ComponentModel.BackgroundWorker.IsBusy%2A> aby oczekiwać na ukończenie <xref:System.ComponentModel.BackgroundWorker> operacji.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-188">The following code example demonstrates how to use the <xref:System.ComponentModel.BackgroundWorker.IsBusy%2A> property to wait for completion of a <xref:System.ComponentModel.BackgroundWorker> operation.</span></span> <span data-ttu-id="2e0c2-189">Ten przykład kodu jest częścią większego przykładu opisanego w [temacie How to: Pobierz plik w tle](~/docs/framework/winforms/controls/how-to-download-a-file-in-the-background.md).</span><span class="sxs-lookup"><span data-stu-id="2e0c2-189">This code example is part of a larger example described in [How to: Download a File in the Background](~/docs/framework/winforms/controls/how-to-download-a-file-in-the-background.md).</span></span>  
  
 [!code-csharp[System.ComponentModel.BackgroundWorker.IsBusy#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.IsBusy/CS/Form1.cs#2)]
 [!code-vb[System.ComponentModel.BackgroundWorker.IsBusy#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.IsBusy/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="Overload:System.ComponentModel.BackgroundWorker.RunWorkerAsync" />
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b"><span data-ttu-id="2e0c2-190">Instrukcje: uruchamianie operacji w tle</span><span class="sxs-lookup"><span data-stu-id="2e0c2-190">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd"><span data-ttu-id="2e0c2-191">Instrukcje: pobieranie pliku w tle</span><span class="sxs-lookup"><span data-stu-id="2e0c2-191">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnDoWork">
      <MemberSignature Language="C#" Value="protected virtual void OnDoWork (System.ComponentModel.DoWorkEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDoWork(class System.ComponentModel.DoWorkEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.OnDoWork(System.ComponentModel.DoWorkEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDoWork (e As DoWorkEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDoWork(System::ComponentModel::DoWorkEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDoWork : System.ComponentModel.DoWorkEventArgs -&gt; unit&#xA;override this.OnDoWork : System.ComponentModel.DoWorkEventArgs -&gt; unit" Usage="backgroundWorker.OnDoWork e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.DoWorkEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="2e0c2-192"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-192">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="2e0c2-193"><see cref="E:System.ComponentModel.BackgroundWorker.DoWork" /> Podnosi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-193">Raises the <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnProgressChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnProgressChanged (System.ComponentModel.ProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnProgressChanged(class System.ComponentModel.ProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnProgressChanged (e As ProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnProgressChanged(System::ComponentModel::ProgressChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnProgressChanged : System.ComponentModel.ProgressChangedEventArgs -&gt; unit&#xA;override this.OnProgressChanged : System.ComponentModel.ProgressChangedEventArgs -&gt; unit" Usage="backgroundWorker.OnProgressChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.ProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="2e0c2-194"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-194">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="2e0c2-195"><see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> Podnosi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-195">Raises the <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0c2-196">Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-196">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="2e0c2-197">Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-197">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="2e0c2-198"><xref:System.ComponentModel.BackgroundWorker.OnProgressChanged%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-198">The <xref:System.ComponentModel.BackgroundWorker.OnProgressChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="2e0c2-199">Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-199">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e0c2-200">Poniższy przykład kodu demonstruje użycie <xref:System.ComponentModel.BackgroundWorker.OnProgressChanged%2A> metody do raportowania postępu operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-200">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.OnProgressChanged%2A> method to report the progress of an asynchronous operation.</span></span> <span data-ttu-id="2e0c2-201">Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.ComponentModel.AsyncOperationManager> klasy.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-201">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager> class.</span></span>  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#24](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#24)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#24](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#24)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="2e0c2-202">Podczas zastępowania <see cref="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-202">When overriding <see cref="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b"><span data-ttu-id="2e0c2-203">Instrukcje: uruchamianie operacji w tle</span><span class="sxs-lookup"><span data-stu-id="2e0c2-203">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd"><span data-ttu-id="2e0c2-204">Instrukcje: pobieranie pliku w tle</span><span class="sxs-lookup"><span data-stu-id="2e0c2-204">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnRunWorkerCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnRunWorkerCompleted (System.ComponentModel.RunWorkerCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRunWorkerCompleted(class System.ComponentModel.RunWorkerCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRunWorkerCompleted (e As RunWorkerCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRunWorkerCompleted(System::ComponentModel::RunWorkerCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRunWorkerCompleted : System.ComponentModel.RunWorkerCompletedEventArgs -&gt; unit&#xA;override this.OnRunWorkerCompleted : System.ComponentModel.RunWorkerCompletedEventArgs -&gt; unit" Usage="backgroundWorker.OnRunWorkerCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.RunWorkerCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="2e0c2-205"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-205">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="2e0c2-206"><see cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" /> Podnosi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-206">Raises the <see cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0c2-207">Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-207">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="2e0c2-208">Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-208">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="2e0c2-209"><xref:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-209">The <xref:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="2e0c2-210">Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-210">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="2e0c2-211">Podczas zastępowania <see cref="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-211">When overriding <see cref="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" />
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b"><span data-ttu-id="2e0c2-212">Instrukcje: uruchamianie operacji w tle</span><span class="sxs-lookup"><span data-stu-id="2e0c2-212">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd"><span data-ttu-id="2e0c2-213">Instrukcje: pobieranie pliku w tle</span><span class="sxs-lookup"><span data-stu-id="2e0c2-213">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ProgressChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.ProgressChangedEventHandler ProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.ProgressChangedEventHandler ProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ProgressChanged As ProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::ProgressChangedEventHandler ^ ProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.ProgressChanged : System.ComponentModel.ProgressChangedEventHandler " Usage="member this.ProgressChanged : System.ComponentModel.ProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e0c2-214">Występuje, <see cref="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)" /> gdy jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-214">Occurs when <see cref="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)" /> is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0c2-215">To zdarzenie jest zgłaszane po wywołaniu <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-215">This event is raised when you call the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method.</span></span>  
  
 <span data-ttu-id="2e0c2-216">Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-216">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e0c2-217">Poniższy przykład kodu demonstruje użycie <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> zdarzenia do raportowania postępu operacji asynchronicznej dla użytkownika.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-217">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event to report the progress of an asynchronous operation to the user.</span></span> <span data-ttu-id="2e0c2-218">Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.ComponentModel.BackgroundWorker> klasy.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-218">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#7)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#7)]
 [!code-vb[System.ComponentModel.BackgroundWorker#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b"><span data-ttu-id="2e0c2-219">Instrukcje: uruchamianie operacji w tle</span><span class="sxs-lookup"><span data-stu-id="2e0c2-219">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd"><span data-ttu-id="2e0c2-220">Instrukcje: pobieranie pliku w tle</span><span class="sxs-lookup"><span data-stu-id="2e0c2-220">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReportProgress">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2e0c2-221"><see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> Podnosi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-221">Raises the <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> event.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReportProgress">
      <MemberSignature Language="C#" Value="public void ReportProgress (int percentProgress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReportProgress(int32 percentProgress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReportProgress (percentProgress As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReportProgress(int percentProgress);" />
      <MemberSignature Language="F#" Value="member this.ReportProgress : int -&gt; unit" Usage="backgroundWorker.ReportProgress percentProgress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="percentProgress" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="percentProgress"><span data-ttu-id="2e0c2-222">Wartość procentowa z przenoszącą od 0 do 100 operacji w tle, która została ukończona.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-222">The percentage, from 0 to 100, of the background operation that is complete.</span></span></param>
        <summary><span data-ttu-id="2e0c2-223"><see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> Podnosi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-223">Raises the <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0c2-224">Jeśli potrzebujesz operacji w tle, aby zgłosić postęp, możesz wywołać <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> metodę w celu <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> podniesienia zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-224">If you need the background operation to report on its progress, you can call the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method to raise the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event.</span></span> <span data-ttu-id="2e0c2-225">Wartość właściwości musi być `true`lub <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> zostanie wyrzucana <xref:System.InvalidOperationException>. <xref:System.ComponentModel.BackgroundWorker.WorkerReportsProgress%2A></span><span class="sxs-lookup"><span data-stu-id="2e0c2-225">The <xref:System.ComponentModel.BackgroundWorker.WorkerReportsProgress%2A> property value must be `true`, or <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> will throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="2e0c2-226">Jest to konieczne w celu zaimplementowania znaczącego sposobu mierzenia postępu operacji w tle jako procentu całkowitej liczby ukończonych zadań.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-226">It is up to you to implement a meaningful way of measuring your background operation's progress as a percentage of the total task completed.</span></span>  
  
 <span data-ttu-id="2e0c2-227">Wywołanie <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> metody jest asynchroniczne i zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-227">The call to the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method is asynchronous and returns immediately.</span></span> <span data-ttu-id="2e0c2-228">Procedura obsługi <xref:System.ComponentModel.BackgroundWorker>zdarzeń jest wykonywana w wątku, który utworzył. <xref:System.ComponentModel.BackgroundWorker.ProgressChanged></span><span class="sxs-lookup"><span data-stu-id="2e0c2-228">The <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event handler executes on the thread that created the <xref:System.ComponentModel.BackgroundWorker>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e0c2-229">Poniższy przykład kodu demonstruje użycie <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> metody do raportowania postępu operacji asynchronicznej dla użytkownika.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-229">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method to report the progress of an asynchronous operation to the user.</span></span> <span data-ttu-id="2e0c2-230">Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.ComponentModel.BackgroundWorker> klasy.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-230">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#8)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#8)]
 [!code-vb[System.ComponentModel.BackgroundWorker#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2e0c2-231">Właściwość jest ustawiona na <see langword="false" />. <see cref="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" /></span><span class="sxs-lookup"><span data-stu-id="2e0c2-231">The <see cref="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" /> property is set to <see langword="false" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b"><span data-ttu-id="2e0c2-232">Instrukcje: uruchamianie operacji w tle</span><span class="sxs-lookup"><span data-stu-id="2e0c2-232">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd"><span data-ttu-id="2e0c2-233">Instrukcje: pobieranie pliku w tle</span><span class="sxs-lookup"><span data-stu-id="2e0c2-233">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReportProgress">
      <MemberSignature Language="C#" Value="public void ReportProgress (int percentProgress, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReportProgress(int32 percentProgress, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReportProgress (percentProgress As Integer, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReportProgress(int percentProgress, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ReportProgress : int * obj -&gt; unit" Usage="backgroundWorker.ReportProgress (percentProgress, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="percentProgress" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="percentProgress"><span data-ttu-id="2e0c2-234">Wartość procentowa z przenoszącą od 0 do 100 operacji w tle, która została ukończona.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-234">The percentage, from 0 to 100, of the background operation that is complete.</span></span></param>
        <param name="userState"><span data-ttu-id="2e0c2-235">Obiekt stanu przeszedł do <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-235">The state object passed to <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="2e0c2-236"><see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> Podnosi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-236">Raises the <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0c2-237">Jeśli potrzebujesz operacji w tle, aby zgłosić postęp, możesz wywołać <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> metodę w celu <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> podniesienia zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-237">If you need the background operation to report on its progress, you can call the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method to raise the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event.</span></span> <span data-ttu-id="2e0c2-238">Wartość właściwości musi być `true`lub <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> zostanie wyrzucana <xref:System.InvalidOperationException>. <xref:System.ComponentModel.BackgroundWorker.WorkerReportsProgress%2A></span><span class="sxs-lookup"><span data-stu-id="2e0c2-238">The <xref:System.ComponentModel.BackgroundWorker.WorkerReportsProgress%2A> property value must `true`, or <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> will throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="2e0c2-239">Jest to konieczne w celu zaimplementowania znaczącego sposobu mierzenia postępu operacji w tle jako procentu całkowitej liczby ukończonych zadań.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-239">It is up to you to implement a meaningful way of measuring your background operation's progress as a percentage of the total task completed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e0c2-240">Poniższy przykład kodu demonstruje użycie <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> metody do raportowania postępu operacji asynchronicznej dla użytkownika.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-240">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method to report the progress of an asynchronous operation to the user.</span></span> <span data-ttu-id="2e0c2-241">Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Windows.Forms.ToolStripProgressBar> klasy.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-241">This code example is part of a larger example provided for the <xref:System.Windows.Forms.ToolStripProgressBar> class.</span></span>  
  
 [!code-csharp[System.Windows.Forms.ToolStripProgressBar#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripProgressBar/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.ToolStripProgressBar#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripProgressBar/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2e0c2-242">Właściwość jest ustawiona na <see langword="false" />. <see cref="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" /></span><span class="sxs-lookup"><span data-stu-id="2e0c2-242">The <see cref="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" /> property is set to <see langword="false" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b"><span data-ttu-id="2e0c2-243">Instrukcje: uruchamianie operacji w tle</span><span class="sxs-lookup"><span data-stu-id="2e0c2-243">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd"><span data-ttu-id="2e0c2-244">Instrukcje: pobieranie pliku w tle</span><span class="sxs-lookup"><span data-stu-id="2e0c2-244">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="RunWorkerAsync">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2e0c2-245">Uruchamia wykonywanie operacji w tle.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-245">Starts execution of a background operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RunWorkerAsync">
      <MemberSignature Language="C#" Value="public void RunWorkerAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RunWorkerAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub RunWorkerAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RunWorkerAsync();" />
      <MemberSignature Language="F#" Value="member this.RunWorkerAsync : unit -&gt; unit" Usage="backgroundWorker.RunWorkerAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2e0c2-246">Uruchamia wykonywanie operacji w tle.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-246">Starts execution of a background operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0c2-247"><xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> Metoda przesyła żądanie uruchomienia operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-247">The <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> method submits a request to start the operation running asynchronously.</span></span> <span data-ttu-id="2e0c2-248">Gdy żądanie jest serwisowane, <xref:System.ComponentModel.BackgroundWorker.DoWork> zdarzenie jest zgłaszane, co z kolei uruchamia wykonywanie operacji w tle.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-248">When the request is serviced, the <xref:System.ComponentModel.BackgroundWorker.DoWork> event is raised, which in turn starts execution of your background operation.</span></span>  
  
 <span data-ttu-id="2e0c2-249">Jeśli operacja w tle jest już uruchomiona, nastąpi <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> <xref:System.InvalidOperationException>ponowne wywołanie.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-249">If the background operation is already running, calling <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> again will raise an <xref:System.InvalidOperationException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e0c2-250">Poniższy przykład kodu demonstruje użycie <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> metody do uruchomienia operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-250">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> method to start an asynchronous operation.</span></span> <span data-ttu-id="2e0c2-251">Jest częścią większego przykładu opisanego w [temacie How to: Pobierz plik w tle](~/docs/framework/winforms/controls/how-to-download-a-file-in-the-background.md).</span><span class="sxs-lookup"><span data-stu-id="2e0c2-251">It is part of a larger example described in [How to: Download a File in the Background](~/docs/framework/winforms/controls/how-to-download-a-file-in-the-background.md).</span></span>  
  
 [!code-csharp[System.ComponentModel.BackgroundWorker.IsBusy#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.IsBusy/CS/Form1.cs#2)]
 [!code-vb[System.ComponentModel.BackgroundWorker.IsBusy#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.IsBusy/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2e0c2-252"><see cref="P:System.ComponentModel.BackgroundWorker.IsBusy" />jest <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-252"><see cref="P:System.ComponentModel.BackgroundWorker.IsBusy" /> is <see langword="true" />.</span></span></exception>
        <altmember cref="E:System.ComponentModel.BackgroundWorker.DoWork" />
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b"><span data-ttu-id="2e0c2-253">Instrukcje: uruchamianie operacji w tle</span><span class="sxs-lookup"><span data-stu-id="2e0c2-253">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e51988e7-7f4b-4646-a06d-1416cee8d557"><span data-ttu-id="2e0c2-254">Zarządzana wątkowość — najlepsze rozwiązania</span><span class="sxs-lookup"><span data-stu-id="2e0c2-254">Managed Threading Best Practices</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd"><span data-ttu-id="2e0c2-255">Instrukcje: pobieranie pliku w tle</span><span class="sxs-lookup"><span data-stu-id="2e0c2-255">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RunWorkerAsync">
      <MemberSignature Language="C#" Value="public void RunWorkerAsync (object argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RunWorkerAsync(object argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RunWorkerAsync (argument As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RunWorkerAsync(System::Object ^ argument);" />
      <MemberSignature Language="F#" Value="member this.RunWorkerAsync : obj -&gt; unit" Usage="backgroundWorker.RunWorkerAsync argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="2e0c2-256">Parametr używany przez operację w tle do wykonania w programie <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" /> obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-256">A parameter for use by the background operation to be executed in the <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" /> event handler.</span></span></param>
        <summary><span data-ttu-id="2e0c2-257">Uruchamia wykonywanie operacji w tle.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-257">Starts execution of a background operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0c2-258"><xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> Metoda przesyła żądanie uruchomienia operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-258">The <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> method submits a request to start the operation running asynchronously.</span></span> <span data-ttu-id="2e0c2-259">Gdy żądanie jest serwisowane, <xref:System.ComponentModel.BackgroundWorker.DoWork> zdarzenie jest zgłaszane, co z kolei uruchamia wykonywanie operacji w tle.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-259">When the request is serviced, the <xref:System.ComponentModel.BackgroundWorker.DoWork> event is raised, which in turn starts execution of your background operation.</span></span>  
  
 <span data-ttu-id="2e0c2-260">Jeśli operacja wymaga parametru, można podać go jako `argument` parametr do. <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A></span><span class="sxs-lookup"><span data-stu-id="2e0c2-260">If your operation requires a parameter, you can provide it as the `argument` parameter to <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A>.</span></span>  
  
 <span data-ttu-id="2e0c2-261">Jeśli operacja w tle jest już uruchomiona, nastąpi <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> <xref:System.InvalidOperationException>ponowne wywołanie.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-261">If the background operation is already running, calling <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> again will raise an <xref:System.InvalidOperationException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e0c2-262">Poniższy przykład kodu demonstruje użycie <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> metody do uruchomienia operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-262">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> method to start an asynchronous operation.</span></span> <span data-ttu-id="2e0c2-263">Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.ComponentModel.BackgroundWorker> klasy.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-263">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#3)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#3)]
 [!code-vb[System.ComponentModel.BackgroundWorker#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2e0c2-264"><see cref="P:System.ComponentModel.BackgroundWorker.IsBusy" />jest <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-264"><see cref="P:System.ComponentModel.BackgroundWorker.IsBusy" /> is <see langword="true" />.</span></span></exception>
        <altmember cref="E:System.ComponentModel.BackgroundWorker.DoWork" />
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b"><span data-ttu-id="2e0c2-265">Instrukcje: uruchamianie operacji w tle</span><span class="sxs-lookup"><span data-stu-id="2e0c2-265">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd"><span data-ttu-id="2e0c2-266">Instrukcje: pobieranie pliku w tle</span><span class="sxs-lookup"><span data-stu-id="2e0c2-266">How to: Download a File in the Background</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e51988e7-7f4b-4646-a06d-1416cee8d557"><span data-ttu-id="2e0c2-267">Zarządzana wątkowość — najlepsze rozwiązania</span><span class="sxs-lookup"><span data-stu-id="2e0c2-267">Managed Threading Best Practices</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RunWorkerCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.RunWorkerCompletedEventHandler RunWorkerCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.RunWorkerCompletedEventHandler RunWorkerCompleted" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RunWorkerCompleted As RunWorkerCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::RunWorkerCompletedEventHandler ^ RunWorkerCompleted;" />
      <MemberSignature Language="F#" Value="member this.RunWorkerCompleted : System.ComponentModel.RunWorkerCompletedEventHandler " Usage="member this.RunWorkerCompleted : System.ComponentModel.RunWorkerCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.RunWorkerCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e0c2-268">Występuje, gdy operacja w tle została ukończona, została anulowana lub zgłosiła wyjątek.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-268">Occurs when the background operation has completed, has been canceled, or has raised an exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0c2-269">To zdarzenie jest zgłaszane, <xref:System.ComponentModel.BackgroundWorker.DoWork> gdy program obsługi zdarzeń zwróci wartość.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-269">This event is raised when the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler returns.</span></span>  
  
 <span data-ttu-id="2e0c2-270">Jeśli operacja zakończy się pomyślnie, a jej wynik zostanie przypisany <xref:System.ComponentModel.BackgroundWorker.DoWork> do programu obsługi zdarzeń, można uzyskać dostęp do wyniku <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> za pomocą właściwości.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-270">If the operation completes successfully and its result is assigned in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler, you can access the result through the <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="2e0c2-271"><xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> Właściwośćwskazuje,żewyjątek<xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> został zgłoszony przez operację.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-271">The <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> indicates that an exception was thrown by the operation.</span></span>  
  
 <span data-ttu-id="2e0c2-272">Właściwość wskazuje, <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A>czyżądanie anulowaniazostałoprzetworzoneprzezoperacjęwtle.<xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="2e0c2-272">The <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> property of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> indicates whether a cancellation request was processed by the background operation.</span></span> <span data-ttu-id="2e0c2-273">Jeśli kod w programie <xref:System.ComponentModel.BackgroundWorker.DoWork> obsługi zdarzeń wykryje żądanie anulowania, <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> sprawdzając flagę <xref:System.ComponentModel.DoWorkEventArgs?displayProperty=nameWithType> i ustawiając <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> flagę do `true`, <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flaga z <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> również zostanie ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-273">If your code in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler detects a cancellation request by checking the <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> flag and setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> flag of <xref:System.ComponentModel.DoWorkEventArgs?displayProperty=nameWithType> to `true`, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> also will be set to `true`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2e0c2-274">Należy pamiętać, że kod w programie <xref:System.ComponentModel.BackgroundWorker.DoWork> obsługi zdarzeń może zakończyć swoją pracę, ponieważ jest wykonywane żądanie anulowania, a pętla sondowania może pominąć <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> ustawienie `true`.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-274">Be aware that your code in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler may finish its work as a cancellation request is being made, and your polling loop may miss <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> being set to `true`.</span></span> <span data-ttu-id="2e0c2-275">W <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> takim przypadku <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> flaga w programie <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> obsługi zdarzeń nie zostanie ustawiona na `true`, nawet jeśli zostało wykonane żądanie anulowania.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-275">In this case, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> in your <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler will not be set to `true`, even though a cancellation request was made.</span></span> <span data-ttu-id="2e0c2-276">Ta sytuacja jest nazywana *sytuacją wyścigu* i jest typowym problemem w programowaniu wielowątkowym.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-276">This situation is called a *race condition* and is a common concern in multithreaded programming.</span></span> <span data-ttu-id="2e0c2-277">Aby uzyskać więcej informacji o problemach z projektowaniem wielowątkowości, zobacz temat [zarządzane wątki](~/docs/standard/threading/managed-threading-best-practices.md)z najlepszymi rozwiązaniami.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-277">For more information about multithreading design issues, see [Managed Threading Best Practices](~/docs/standard/threading/managed-threading-best-practices.md).</span></span>  
  
 <span data-ttu-id="2e0c2-278">Program obsługi <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A?displayProperty=nameWithType> <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A?displayProperty=nameWithType> <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> zdarzeń powinien zawsze sprawdzać właściwości i przed uzyskaniem dostępu do właściwości. <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted></span><span class="sxs-lookup"><span data-stu-id="2e0c2-278">Your <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler should always check the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A?displayProperty=nameWithType> and <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A?displayProperty=nameWithType> properties before accessing the <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="2e0c2-279">Jeśli wyjątek został zgłoszony lub operacja została anulowana, uzyskanie dostępu do <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> właściwości zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-279">If an exception was raised or if the operation was canceled, accessing the <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> property raises an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e0c2-280">Poniższy przykład kodu demonstruje użycie <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> zdarzenia do obsługi wyniku operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-280">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event to handle the result of an asynchronous operation.</span></span> <span data-ttu-id="2e0c2-281">Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.ComponentModel.BackgroundWorker> klasy.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-281">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#6)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#6)]
 [!code-vb[System.ComponentModel.BackgroundWorker#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b"><span data-ttu-id="2e0c2-282">Instrukcje: uruchamianie operacji w tle</span><span class="sxs-lookup"><span data-stu-id="2e0c2-282">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd"><span data-ttu-id="2e0c2-283">Instrukcje: pobieranie pliku w tle</span><span class="sxs-lookup"><span data-stu-id="2e0c2-283">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WorkerReportsProgress">
      <MemberSignature Language="C#" Value="public bool WorkerReportsProgress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WorkerReportsProgress" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" />
      <MemberSignature Language="VB.NET" Value="Public Property WorkerReportsProgress As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WorkerReportsProgress { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WorkerReportsProgress : bool with get, set" Usage="System.ComponentModel.BackgroundWorker.WorkerReportsProgress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e0c2-284">Pobiera lub ustawia wartość wskazującą, <see cref="T:System.ComponentModel.BackgroundWorker" /> czy można raportować aktualizacje postępu.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-284">Gets or sets a value indicating whether the <see cref="T:System.ComponentModel.BackgroundWorker" /> can report progress updates.</span></span></summary>
        <value><span data-ttu-id="2e0c2-285"><see langword="true" />Jeśli obsługuje aktualizacje postępu; w przeciwnym <see langword="false" />razie. <see cref="T:System.ComponentModel.BackgroundWorker" /></span><span class="sxs-lookup"><span data-stu-id="2e0c2-285"><see langword="true" /> if the <see cref="T:System.ComponentModel.BackgroundWorker" /> supports progress updates; otherwise <see langword="false" />.</span></span> <span data-ttu-id="2e0c2-286">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-286">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0c2-287">Ustaw właściwość na `true` , jeśli chcesz, <xref:System.ComponentModel.BackgroundWorker> aby obsługiwały aktualizacje postępu. <xref:System.ComponentModel.BackgroundWorker.WorkerReportsProgress%2A></span><span class="sxs-lookup"><span data-stu-id="2e0c2-287">Set the <xref:System.ComponentModel.BackgroundWorker.WorkerReportsProgress%2A> property to `true` if you want the <xref:System.ComponentModel.BackgroundWorker> to support progress updates.</span></span> <span data-ttu-id="2e0c2-288">Gdy ta właściwość ma `true`wartość, kod użytkownika może <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> wywołać metodę w celu podniesienia <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-288">When this property is `true`, user code can call the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method to raise the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)" />
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b"><span data-ttu-id="2e0c2-289">Instrukcje: uruchamianie operacji w tle</span><span class="sxs-lookup"><span data-stu-id="2e0c2-289">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd"><span data-ttu-id="2e0c2-290">Instrukcje: pobieranie pliku w tle</span><span class="sxs-lookup"><span data-stu-id="2e0c2-290">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WorkerSupportsCancellation">
      <MemberSignature Language="C#" Value="public bool WorkerSupportsCancellation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WorkerSupportsCancellation" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation" />
      <MemberSignature Language="VB.NET" Value="Public Property WorkerSupportsCancellation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WorkerSupportsCancellation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WorkerSupportsCancellation : bool with get, set" Usage="System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e0c2-291">Pobiera lub ustawia wartość wskazującą, <see cref="T:System.ComponentModel.BackgroundWorker" /> czy obsługuje asynchroniczne anulowanie.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-291">Gets or sets a value indicating whether the <see cref="T:System.ComponentModel.BackgroundWorker" /> supports asynchronous cancellation.</span></span></summary>
        <value><span data-ttu-id="2e0c2-292"><see langword="true" />Jeśli obsługuje anulowanie; w przeciwnym <see langword="false" />razie. <see cref="T:System.ComponentModel.BackgroundWorker" /></span><span class="sxs-lookup"><span data-stu-id="2e0c2-292"><see langword="true" /> if the <see cref="T:System.ComponentModel.BackgroundWorker" /> supports cancellation; otherwise <see langword="false" />.</span></span> <span data-ttu-id="2e0c2-293">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-293">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0c2-294">Ustaw właściwość na `true` , jeśli chcesz, <xref:System.ComponentModel.BackgroundWorker> aby obsługiwała anulowanie. <xref:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation%2A></span><span class="sxs-lookup"><span data-stu-id="2e0c2-294">Set the <xref:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation%2A> property to `true` if you want the <xref:System.ComponentModel.BackgroundWorker> to support cancellation.</span></span> <span data-ttu-id="2e0c2-295">Gdy ta właściwość ma `true`wartość, można <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> wywołać metodę w celu przerwania operacji w tle.</span><span class="sxs-lookup"><span data-stu-id="2e0c2-295">When this property is `true`, you can call the <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> method to interrupt a background operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.BackgroundWorker.CancelAsync" />
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b"><span data-ttu-id="2e0c2-296">Instrukcje: uruchamianie operacji w tle</span><span class="sxs-lookup"><span data-stu-id="2e0c2-296">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd"><span data-ttu-id="2e0c2-297">Instrukcje: pobieranie pliku w tle</span><span class="sxs-lookup"><span data-stu-id="2e0c2-297">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
