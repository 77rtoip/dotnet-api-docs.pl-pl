<Type Name="ISynchronizeInvoke" FullName="System.ComponentModel.ISynchronizeInvoke">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3d9353df08936074d8502e7b3eb158fc1c8184df" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37692247" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ISynchronizeInvoke" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISynchronizeInvoke" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ISynchronizeInvoke" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISynchronizeInvoke" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISynchronizeInvoke" />
  <TypeSignature Language="F#" Value="type ISynchronizeInvoke = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Zapewnia sposób synchronicznie lub asynchronicznie wykonywanie delegata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.ISynchronizeInvoke> Interfejsu zapewnia synchroniczną i asynchroniczną komunikację między obiektami o wystąpienie zdarzenia. Obiekty, które implementują ten interfejs może odbierać powiadomienia o zdarzeniu i odpowiadają na kwerendy o zdarzeniu. W ten sposób klienci upewnij się, że ten jedno żądanie zostało przetworzone przed przesłaniem kolejne żądanie, która zależy od ukończenia pierwszego.  
  
 <xref:System.ComponentModel.ISynchronizeInvoke> Klasa udostępnia wywołania procesu na dwa sposoby:  
  
1.  Asynchronicznie, za pomocą <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> metody. <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> Uruchamia proces, a następnie zwraca natychmiast. Użyj <xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A> czekać aż proces uruchomiony przez <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> kończy.  
  
2.  Synchronicznie, za pomocą <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> metody. <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> Uruchamia proces, czeka, aż zostanie zakończona, a następnie zwraca. Użyj <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> gdy formant użytkownika w głównym wątku różni się od wątku wywołującego do organizowania wywołanie do właściwego wątku.  
  
> [!NOTE]
>  <xref:System.Security.Permissions.HostProtectionAttribute> Zastosowany do tej klasy ma <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> wartość właściwości: <xref:System.Security.Permissions.HostProtectionResource.Synchronization> &#124; <xref:System.Security.Permissions.HostProtectionResource.ExternalThreading>. Atrybut <xref:System.Security.Permissions.HostProtectionAttribute> nie ma wpływu na aplikacje pulpitu (które typowo są uruchamiane przez dwukrotne kliknięcie ikony, wpisanie polecenia albo wprowadzenie adresu URL w przeglądarce). Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.HostProtectionAttribute> klasy lub [programowania programu SQL Server i atrybuty ochrony hosta](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />
    <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)" />
    <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />
  </Docs>
  <Members>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginInvoke (Delegate method, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginInvoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (method As Delegate, args As Object()) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginInvoke(Delegate ^ method, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member BeginInvoke : Delegate * obj[] -&gt; IAsyncResult" Usage="iSynchronizeInvoke.BeginInvoke (method, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="method">A <see cref="T:System.Delegate" /> do metody, która pobiera parametry tej samej liczby i typu zawarte w <c>args</c>.</param>
        <param name="args">Tablica typu <see cref="T:System.Object" /> przekazywane jako argumenty do danej metody. Może to być <see langword="null" /> razie bez argumentów.</param>
        <summary>Asynchronicznie wykonuje delegata w wątku, który utworzył ten obiekt.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> Interfejs, który reprezentuje operację asynchroniczną, uruchomione przez wywołanie tej metody.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `method` Delegata jest wykonywane w wątku, który utworzył obiekt, zamiast wątku, na którym <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> została wywołana.  
  
 Delegat nosi nazwę asynchronicznej, a ta metoda zwraca natychmiast. Tę metodę można wywołać z żadnym z wątków. Wartość zwrócona przez proces uruchomiony przy użyciu tej metody, należy wywołać <xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A> można uzyskać wartość.  
  
 Jeśli zachodzi potrzeba synchroniczne wywołanie delegata, użyj <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> metody zamiast tego.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)" />
      </Docs>
    </Member>
    <Member MemberName="EndInvoke">
      <MemberSignature Language="C#" Value="public object EndInvoke (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EndInvoke(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndInvoke (result As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ EndInvoke(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndInvoke : IAsyncResult -&gt; obj" Usage="iSynchronizeInvoke.EndInvoke result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <see cref="T:System.IAsyncResult" /> Interfejs, który reprezentuje operację asynchroniczną, uruchomione przez wywołanie <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />.</param>
        <summary>Czeka, dopóki proces uruchomiony przez wywołanie <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" /> zakończeniu, a następnie zwraca wartość, generowane przez proces.</summary>
        <returns>
          <see cref="T:System.Object" /> Reprezentujący wartość zwracaną generowane przez operację asynchroniczną.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda pobiera wartość zwracaną przez operację asynchroniczną, reprezentowane przez <xref:System.IAsyncResult> przekazywane według tego interfejsu. Jeśli operacja asynchroniczna nie zostało ukończone, ta metoda czeka na zakończenie wynik jest dostępna.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Invoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member Invoke : Delegate * obj[] -&gt; obj" Usage="iSynchronizeInvoke.Invoke (method, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="method">Element <see cref="T:System.Delegate" /> zawierający metodę do wywołania w kontekście wątku dla formantu.</param>
        <param name="args">Tablica typu <see cref="T:System.Object" /> reprezentujący argumenty do przekazania do danej metody. Może to być <see langword="null" /> razie bez argumentów.</param>
        <summary>Delegata jest wykonywana synchronicznie w wątku, który utworzył ten obiekt i kieruje wywołania wątku tworzącego.</summary>
        <returns>
          <see cref="T:System.Object" /> Reprezentujący wartość zwracaną z delegat wywoływany, lub <see langword="null" /> Jeśli delegat nie zwraca żadnej wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W odróżnieniu od <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A>, ta metoda działa synchronicznie, oznacza to, że jej czeka, aż proces zostanie zakończony przed zwróceniem. Wyjątki zgłoszone w trakcie połączenia uwierzytelniającego jest propagowany z powrotem do obiektu wywołującego.  
  
 Ta metoda podczas wywoływania metody z innego wątku do organizowania wywołanie do właściwego wątku.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeRequired">
      <MemberSignature Language="C#" Value="public bool InvokeRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InvokeRequired" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ISynchronizeInvoke.InvokeRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InvokeRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InvokeRequired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.InvokeRequired : bool" Usage="System.ComponentModel.ISynchronizeInvoke.InvokeRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy obiekt wywołujący musi wywołać <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" /> podczas wywoływania obiektu, który implementuje ten interfejs.</summary>
        <value>
          <see langword="true" /> Jeśli obiekt wywołujący musi wywołać <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość określa, czy obiekt wywołujący musi wywołać <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> podczas wykonywania wywołań metody do obiektu, który implementuje ten interfejs. Takie obiekty są powiązane z określonym wątku i nie są wątkowo. W przypadku wywołania metody z innego wątku, należy użyć <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> metodę, aby kierować wywołanie do właściwego wątku.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>