<Type Name="ISynchronizeInvoke" FullName="System.ComponentModel.ISynchronizeInvoke">
  <TypeSignature Language="C#" Value="public interface ISynchronizeInvoke" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISynchronizeInvoke" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ISynchronizeInvoke" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISynchronizeInvoke" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISynchronizeInvoke" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="aea17-101">Zapewnia sposób synchronicznie lub asynchronicznie wykonania delegata.</span><span class="sxs-lookup"><span data-stu-id="aea17-101">Provides a way to synchronously or asynchronously execute a delegate.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea17-102"><xref:System.ComponentModel.ISynchronizeInvoke> Interfejsu zapewnia synchroniczne i asynchroniczne komunikację między obiektami o wystąpieniu zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="aea17-102">The <xref:System.ComponentModel.ISynchronizeInvoke> interface provides synchronous and asynchronous communication between objects about the occurrence of an event.</span></span> <span data-ttu-id="aea17-103">Obiekty, które implementują ten interfejs może odbierać powiadomienia o zdarzeniu, którą można odpowiedzieć zapytania o zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="aea17-103">Objects that implement this interface can receive notification that an event has occurred, and they can respond to queries about the event.</span></span> <span data-ttu-id="aea17-104">W ten sposób klienci upewnij się, że ten jedno żądanie zostały przetworzone przed przesłaniem kolejnego żądania, która zależy od zakończenia pierwszego.</span><span class="sxs-lookup"><span data-stu-id="aea17-104">In this way, clients can ensure that one request has been processed before they submit a subsequent request that depends on completion of the first.</span></span>  
  
 <span data-ttu-id="aea17-105"><xref:System.ComponentModel.ISynchronizeInvoke> Klasa udostępnia dwa sposoby wywołaj proces:</span><span class="sxs-lookup"><span data-stu-id="aea17-105">The <xref:System.ComponentModel.ISynchronizeInvoke> class provides two ways to invoke a process:</span></span>  
  
1.  <span data-ttu-id="aea17-106">Asynchronicznie, używając <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="aea17-106">Asynchronously, by using the <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> method.</span></span> <span data-ttu-id="aea17-107"><xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> Uruchamia proces, a następnie zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="aea17-107"><xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> starts a process and then returns immediately.</span></span> <span data-ttu-id="aea17-108">Użyj <xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A> po upływie proces rozpoczęty według <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> zakończeniu.</span><span class="sxs-lookup"><span data-stu-id="aea17-108">Use <xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A> to wait until the process started by <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> completes.</span></span>  
  
2.  <span data-ttu-id="aea17-109">Synchronicznie, za pomocą <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="aea17-109">Synchronously, by using the <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> method.</span></span> <span data-ttu-id="aea17-110"><xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> Uruchamia proces, czeka, dopóki nie ukończy i zwraca.</span><span class="sxs-lookup"><span data-stu-id="aea17-110"><xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> starts a process, waits until it completes, and then returns.</span></span> <span data-ttu-id="aea17-111">Użyj <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> gdy formant użytkownika głównego wątku różni się od wywołania wątku w celu zorganizowania wywołania wątku właściwe.</span><span class="sxs-lookup"><span data-stu-id="aea17-111">Use <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> when the control's main thread is different from the calling thread to marshal the call to the proper thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aea17-112"><xref:System.Security.Permissions.HostProtectionAttribute> Atrybut zastosowany do ta klasa zawiera następujące <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> wartość właściwości: <xref:System.Security.Permissions.HostProtectionResource.Synchronization> &#124; <xref:System.Security.Permissions.HostProtectionResource.ExternalThreading>.</span><span class="sxs-lookup"><span data-stu-id="aea17-112">The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource.Synchronization> &#124; <xref:System.Security.Permissions.HostProtectionResource.ExternalThreading>.</span></span> <span data-ttu-id="aea17-113">Atrybut <xref:System.Security.Permissions.HostProtectionAttribute> nie ma wpływu na aplikacje pulpitu (które typowo są uruchamiane przez dwukrotne kliknięcie ikony, wpisanie polecenia albo wprowadzenie adresu URL w przeglądarce).</span><span class="sxs-lookup"><span data-stu-id="aea17-113">The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser).</span></span> <span data-ttu-id="aea17-114">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.HostProtectionAttribute> klasy lub [atrybuty ochrony hosta i programowanie programu SQL Server](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md).</span><span class="sxs-lookup"><span data-stu-id="aea17-114">For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />
    <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)" />
    <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />
  </Docs>
  <Members>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginInvoke (Delegate method, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginInvoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (method As Delegate, args As Object()) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginInvoke(Delegate ^ method, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="aea17-115">A <see cref="T:System.Delegate" /> do metody, która przyjmuje parametry o takiej samej liczby i typów, które są zawarte w <c>argumentów</c>.</span><span class="sxs-lookup"><span data-stu-id="aea17-115">A <see cref="T:System.Delegate" /> to a method that takes parameters of the same number and type that are contained in <c>args</c>.</span></span></param>
        <param name="args"><span data-ttu-id="aea17-116">Tablica typu <see cref="T:System.Object" /> przekazywane jako argumenty do podanej metody.</span><span class="sxs-lookup"><span data-stu-id="aea17-116">An array of type <see cref="T:System.Object" /> to pass as arguments to the given method.</span></span> <span data-ttu-id="aea17-117">Może to być <see langword="null" /> jeśli niezbędne są bez argumentów.</span><span class="sxs-lookup"><span data-stu-id="aea17-117">This can be <see langword="null" /> if no arguments are needed.</span></span></param>
        <summary><span data-ttu-id="aea17-118">Asynchronicznie wykonuje delegata w wątku, który utworzył ten obiekt.</span><span class="sxs-lookup"><span data-stu-id="aea17-118">Asynchronously executes the delegate on the thread that created this object.</span></span></summary>
        <returns><span data-ttu-id="aea17-119"><see cref="T:System.IAsyncResult" /> Interfejs reprezentujący operację asynchroniczną uruchomiony przez wywołanie tej metody.</span><span class="sxs-lookup"><span data-stu-id="aea17-119">An <see cref="T:System.IAsyncResult" /> interface that represents the asynchronous operation started by calling this method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea17-120">`method` Delegata jest wykonywana w wątku, który utworzył obiekt, zamiast wątku, w którym <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> została wywołana.</span><span class="sxs-lookup"><span data-stu-id="aea17-120">The `method` delegate is executed on the thread that created the object, instead of the thread on which <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> was called.</span></span>  
  
 <span data-ttu-id="aea17-121">Delegat jest wywoływana asynchronicznie, a ta metoda zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="aea17-121">The delegate is called asynchronously, and this method returns immediately.</span></span> <span data-ttu-id="aea17-122">Ta metoda jest wywoływana z dowolnego wątku.</span><span class="sxs-lookup"><span data-stu-id="aea17-122">You can call this method from any thread.</span></span> <span data-ttu-id="aea17-123">Wartość zwrócona przez proces uruchomiony przy użyciu tej metody należy wywołać <xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A> można uzyskać wartość.</span><span class="sxs-lookup"><span data-stu-id="aea17-123">If you need the return value from a process started with this method, call <xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A> to get the value.</span></span>  
  
 <span data-ttu-id="aea17-124">Jeśli należy wywołać synchronicznie delegata, użyj <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> metody zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="aea17-124">If you need to call the delegate synchronously, use the <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)" />
      </Docs>
    </Member>
    <Member MemberName="EndInvoke">
      <MemberSignature Language="C#" Value="public object EndInvoke (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EndInvoke(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndInvoke (result As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ EndInvoke(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="aea17-125"><see cref="T:System.IAsyncResult" /> Interfejs reprezentujący operację asynchroniczną uruchomiony przez wywołanie <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />.</span><span class="sxs-lookup"><span data-stu-id="aea17-125">An <see cref="T:System.IAsyncResult" /> interface that represents the asynchronous operation started by calling <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />.</span></span></param>
        <summary><span data-ttu-id="aea17-126">Czeka dopóki proces uruchomiony przez wywołanie <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" /> zakończeniu, a następnie zwraca wartość wygenerowanych przez proces.</span><span class="sxs-lookup"><span data-stu-id="aea17-126">Waits until the process started by calling <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" /> completes, and then returns the value generated by the process.</span></span></summary>
        <returns><span data-ttu-id="aea17-127"><see cref="T:System.Object" /> Reprezentujący wartość zwracaną wygenerowanych przez operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="aea17-127">An <see cref="T:System.Object" /> that represents the return value generated by the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea17-128">Ta metoda pobiera wartość zwracaną przez operację asynchroniczną reprezentowany przez <xref:System.IAsyncResult> przekazany przez ten interfejs.</span><span class="sxs-lookup"><span data-stu-id="aea17-128">This method gets the return value of the asynchronous operation represented by the <xref:System.IAsyncResult> passed by this interface.</span></span> <span data-ttu-id="aea17-129">Jeśli operacja asynchroniczna nie zostało ukończone, ta metoda będzie czekał wynik jest dostępna.</span><span class="sxs-lookup"><span data-stu-id="aea17-129">If the asynchronous operation has not completed, this method will wait until the result is available.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Invoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="aea17-130">A <see cref="T:System.Delegate" /> zawiera metody do wywołania w kontekście wątku dla formantu.</span><span class="sxs-lookup"><span data-stu-id="aea17-130">A <see cref="T:System.Delegate" /> that contains a method to call, in the context of the thread for the control.</span></span></param>
        <param name="args"><span data-ttu-id="aea17-131">Tablica typu <see cref="T:System.Object" /> reprezentujący argumenty do przekazania do podanej metody.</span><span class="sxs-lookup"><span data-stu-id="aea17-131">An array of type <see cref="T:System.Object" /> that represents the arguments to pass to the given method.</span></span> <span data-ttu-id="aea17-132">Może to być <see langword="null" /> jeśli niezbędne są bez argumentów.</span><span class="sxs-lookup"><span data-stu-id="aea17-132">This can be <see langword="null" /> if no arguments are needed.</span></span></param>
        <summary><span data-ttu-id="aea17-133">Synchronicznie wykonuje delegata w wątku, który utworzył ten obiekt i marshals wywołania do tworzenia wątku.</span><span class="sxs-lookup"><span data-stu-id="aea17-133">Synchronously executes the delegate on the thread that created this object and marshals the call to the creating thread.</span></span></summary>
        <returns><span data-ttu-id="aea17-134"><see cref="T:System.Object" /> Reprezentujący wartość zwracaną z delegat wywoływany, lub <see langword="null" /> Jeśli delegat nie ma wartości zwracanych.</span><span class="sxs-lookup"><span data-stu-id="aea17-134">An <see cref="T:System.Object" /> that represents the return value from the delegate being invoked, or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea17-135">W odróżnieniu od <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A>, ta metoda działa synchronicznie, czyli czeka dopóki proces zostanie zakończony przed zwróceniem.</span><span class="sxs-lookup"><span data-stu-id="aea17-135">Unlike <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A>, this method operates synchronously, that is, it waits until the process completes before returning.</span></span> <span data-ttu-id="aea17-136">Wyjątki zgłoszone podczas wywołania są propagowane do obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="aea17-136">Exceptions raised during the call are propagated back to the caller.</span></span>  
  
 <span data-ttu-id="aea17-137">Użyj tej metody w wywołaniu metody z innego wątku do zorganizowania wywołania wątku właściwe.</span><span class="sxs-lookup"><span data-stu-id="aea17-137">Use this method when calling a method from a different thread to marshal the call to the proper thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeRequired">
      <MemberSignature Language="C#" Value="public bool InvokeRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InvokeRequired" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ISynchronizeInvoke.InvokeRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InvokeRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InvokeRequired { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aea17-138">Pobiera wartość wskazującą, czy należy wywołać element wywołujący <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" /> podczas wywoływania obiektu, który implementuje ten interfejs.</span><span class="sxs-lookup"><span data-stu-id="aea17-138">Gets a value indicating whether the caller must call <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" /> when calling an object that implements this interface.</span></span></summary>
        <value>
          <span data-ttu-id="aea17-139"><see langword="true" /> Jeśli element wywołujący musi wywołać <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="aea17-139"><see langword="true" /> if the caller must call <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea17-140">Ta właściwość określa, czy należy wywołać element wywołujący <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> podczas wykonywania wywołań metody do obiektu, który implementuje ten interfejs.</span><span class="sxs-lookup"><span data-stu-id="aea17-140">This property determines whether the caller must call <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> when making method calls to an object that implements this interface.</span></span> <span data-ttu-id="aea17-141">Takie obiekty są powiązane z konkretnym wątkiem i nie są wątkowo.</span><span class="sxs-lookup"><span data-stu-id="aea17-141">Such objects are bound to a specific thread and are not thread-safe.</span></span> <span data-ttu-id="aea17-142">Jeśli są wywołanie metody z innego wątku, należy użyć <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> metody do zorganizowania wywołania wątku właściwe.</span><span class="sxs-lookup"><span data-stu-id="aea17-142">If you are calling a method from a different thread, you must use the <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> method to marshal the call to the proper thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>