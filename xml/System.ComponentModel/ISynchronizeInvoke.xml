<Type Name="ISynchronizeInvoke" FullName="System.ComponentModel.ISynchronizeInvoke">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ac5648d586e03aebeb7db72bd148861e02bc6f37" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30443244" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ISynchronizeInvoke" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISynchronizeInvoke" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ISynchronizeInvoke" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISynchronizeInvoke" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISynchronizeInvoke" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Zapewnia sposób synchronicznie lub asynchronicznie wykonania delegata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.ISynchronizeInvoke> Interfejsu zapewnia synchroniczne i asynchroniczne komunikację między obiektami o wystąpieniu zdarzenia. Obiekty, które implementują ten interfejs może odbierać powiadomienia o zdarzeniu, którą można odpowiedzieć zapytania o zdarzeniu. W ten sposób klienci upewnij się, że ten jedno żądanie zostały przetworzone przed przesłaniem kolejnego żądania, która zależy od zakończenia pierwszego.  
  
 <xref:System.ComponentModel.ISynchronizeInvoke> Klasa udostępnia dwa sposoby wywołaj proces:  
  
1.  Asynchronicznie, używając <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> metody. <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> Uruchamia proces, a następnie zwraca natychmiast. Użyj <xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A> po upływie proces rozpoczęty według <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> zakończeniu.  
  
2.  Synchronicznie, za pomocą <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> metody. <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> Uruchamia proces, czeka, dopóki nie ukończy i zwraca. Użyj <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> gdy formant użytkownika głównego wątku różni się od wywołania wątku w celu zorganizowania wywołania wątku właściwe.  
  
> [!NOTE]
>  <xref:System.Security.Permissions.HostProtectionAttribute> Atrybut zastosowany do ta klasa zawiera następujące <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> wartość właściwości: <xref:System.Security.Permissions.HostProtectionResource.Synchronization> &#124; <xref:System.Security.Permissions.HostProtectionResource.ExternalThreading>. Atrybut <xref:System.Security.Permissions.HostProtectionAttribute> nie ma wpływu na aplikacje pulpitu (które typowo są uruchamiane przez dwukrotne kliknięcie ikony, wpisanie polecenia albo wprowadzenie adresu URL w przeglądarce). Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.HostProtectionAttribute> klasy lub [atrybuty ochrony hosta i programowanie programu SQL Server](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />
    <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)" />
    <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />
  </Docs>
  <Members>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginInvoke (Delegate method, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginInvoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (method As Delegate, args As Object()) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginInvoke(Delegate ^ method, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="method">A <see cref="T:System.Delegate" /> do metody, która przyjmuje parametry o takiej samej liczby i typów, które są zawarte w <c>argumentów</c>.</param>
        <param name="args">Tablica typu <see cref="T:System.Object" /> przekazywane jako argumenty do podanej metody. Może to być <see langword="null" /> jeśli niezbędne są bez argumentów.</param>
        <summary>Asynchronicznie wykonuje delegata w wątku, który utworzył ten obiekt.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> Interfejs reprezentujący operację asynchroniczną uruchomiony przez wywołanie tej metody.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `method` Delegata jest wykonywana w wątku, który utworzył obiekt, zamiast wątku, w którym <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> została wywołana.  
  
 Delegat jest wywoływana asynchronicznie, a ta metoda zwraca natychmiast. Ta metoda jest wywoływana z dowolnego wątku. Wartość zwrócona przez proces uruchomiony przy użyciu tej metody należy wywołać <xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A> można uzyskać wartość.  
  
 Jeśli należy wywołać synchronicznie delegata, użyj <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> metody zamiast tego.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)" />
      </Docs>
    </Member>
    <Member MemberName="EndInvoke">
      <MemberSignature Language="C#" Value="public object EndInvoke (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EndInvoke(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndInvoke (result As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ EndInvoke(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <see cref="T:System.IAsyncResult" /> Interfejs reprezentujący operację asynchroniczną uruchomiony przez wywołanie <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />.</param>
        <summary>Czeka dopóki proces uruchomiony przez wywołanie <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" /> zakończeniu, a następnie zwraca wartość wygenerowanych przez proces.</summary>
        <returns>
          <see cref="T:System.Object" /> Reprezentujący wartość zwracaną wygenerowanych przez operację asynchroniczną.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda pobiera wartość zwracaną przez operację asynchroniczną reprezentowany przez <xref:System.IAsyncResult> przekazany przez ten interfejs. Jeśli operacja asynchroniczna nie zostało ukończone, ta metoda będzie czekał wynik jest dostępna.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Invoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="method">A <see cref="T:System.Delegate" /> zawiera metody do wywołania w kontekście wątku dla formantu.</param>
        <param name="args">Tablica typu <see cref="T:System.Object" /> reprezentujący argumenty do przekazania do podanej metody. Może to być <see langword="null" /> jeśli niezbędne są bez argumentów.</param>
        <summary>Synchronicznie wykonuje delegata w wątku, który utworzył ten obiekt i marshals wywołania do tworzenia wątku.</summary>
        <returns>
          <see cref="T:System.Object" /> Reprezentujący wartość zwracaną z delegat wywoływany, lub <see langword="null" /> Jeśli delegat nie ma wartości zwracanych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W odróżnieniu od <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A>, ta metoda działa synchronicznie, czyli czeka dopóki proces zostanie zakończony przed zwróceniem. Wyjątki zgłoszone podczas wywołania są propagowane do obiektu wywołującego.  
  
 Użyj tej metody w wywołaniu metody z innego wątku do zorganizowania wywołania wątku właściwe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeRequired">
      <MemberSignature Language="C#" Value="public bool InvokeRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InvokeRequired" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ISynchronizeInvoke.InvokeRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InvokeRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InvokeRequired { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy należy wywołać element wywołujący <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" /> podczas wywoływania obiektu, który implementuje ten interfejs.</summary>
        <value>
          <see langword="true" /> Jeśli element wywołujący musi wywołać <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość określa, czy należy wywołać element wywołujący <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> podczas wykonywania wywołań metody do obiektu, który implementuje ten interfejs. Takie obiekty są powiązane z konkretnym wątkiem i nie są wątkowo. Jeśli są wywołanie metody z innego wątku, należy użyć <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> metody do zorganizowania wywołania wątku właściwe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>