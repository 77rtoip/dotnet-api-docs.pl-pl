<Type Name="MaskedTextProvider" FullName="System.ComponentModel.MaskedTextProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c91a7e765b6cea93b50142a455c00d22426706eb" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36702277" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MaskedTextProvider : ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MaskedTextProvider extends System.Object implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.MaskedTextProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class MaskedTextProvider&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MaskedTextProvider : ICloneable" />
  <TypeSignature Language="F#" Value="type MaskedTextProvider = class&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="80402-101">Reprezentuje usługę analizowania maski, które mogą być używane przez dowolną liczbę formantów, które obsługują maskowania, takich jak <see cref="T:System.Windows.Forms.MaskedTextBox" /> formantu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="80402-101">Represents a mask-parsing service that can be used by any number of controls that support masking, such as the <see cref="T:System.Windows.Forms.MaskedTextBox" /> control.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-102"><xref:System.Windows.Forms.MaskedTextBox> Formant zawiera maskę znaki literału i formatowanie elementów, które sprawdza on wszystkie dane wejściowe użytkownika przed.</span><span class="sxs-lookup"><span data-stu-id="80402-102">The <xref:System.Windows.Forms.MaskedTextBox> control contains a mask, composed of literal characters and formatting elements, that it tests all user input against.</span></span> <span data-ttu-id="80402-103">Zamiast trwale skojarzenie określonego aparatu analizy maski z <xref:System.Windows.Forms.MaskedTextBox>, formularze systemu Windows udostępnia go jako oddzielna usługa reprezentowany przez <xref:System.ComponentModel.MaskedTextProvider> klasy, która definiuje składnię języka maskowania omówione w dokumentacji <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="80402-103">Instead of permanently associating a specific mask-parsing engine with <xref:System.Windows.Forms.MaskedTextBox>, Windows Forms provides it as a separate service, represented by the <xref:System.ComponentModel.MaskedTextProvider> class, which defines the syntax of the masking language discussed in the documentation for the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property.</span></span>  
  
 <span data-ttu-id="80402-104">Duża liczba członków <xref:System.Windows.Forms.MaskedTextBox> ich realizacji członkom o podobnej nazwie skojarzonego można znaleźć klasy <xref:System.ComponentModel.MaskedTextProvider>.</span><span class="sxs-lookup"><span data-stu-id="80402-104">Many of the members of the <xref:System.Windows.Forms.MaskedTextBox> class refer their implementation to similarly named members of the associated <xref:System.ComponentModel.MaskedTextProvider>.</span></span> <span data-ttu-id="80402-105">Na przykład <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A?displayProperty=nameWithType> właściwość <xref:System.Windows.Forms.MaskedTextBox> klasy odwołuje się dostęp do <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> z <xref:System.ComponentModel.MaskedTextProvider> klasy.</span><span class="sxs-lookup"><span data-stu-id="80402-105">For example, the <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A?displayProperty=nameWithType> property of the <xref:System.Windows.Forms.MaskedTextBox> class refers all access to the <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> of the <xref:System.ComponentModel.MaskedTextProvider> class.</span></span>  
  
 <span data-ttu-id="80402-106">Używane przez aparat analizy maski <xref:System.ComponentModel.MaskedTextProvider> jest modelowane maskowana kontrolka edycji zawarte w Microsoft Visual Basic 6 version.</span><span class="sxs-lookup"><span data-stu-id="80402-106">The mask-parsing engine used by <xref:System.ComponentModel.MaskedTextProvider> is modeled after the Masked Edit control included in Microsoft Visual Basic version 6.</span></span> <span data-ttu-id="80402-107">Język maskowania jest opisany w dokumentacji dotyczącej <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="80402-107">Its masking language is described in the documentation for the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property.</span></span>  
  
 <span data-ttu-id="80402-108">Następujące trzy różne ciągi są związane z <xref:System.ComponentModel.MaskedTextProvider> klasy.</span><span class="sxs-lookup"><span data-stu-id="80402-108">The following three distinct strings are involved with the <xref:System.ComponentModel.MaskedTextProvider> class.</span></span>  
  
|<span data-ttu-id="80402-109">Nazwa ciągu</span><span class="sxs-lookup"><span data-stu-id="80402-109">String name</span></span>|<span data-ttu-id="80402-110">Opis</span><span class="sxs-lookup"><span data-stu-id="80402-110">Description</span></span>|  
|-----------------|-----------------|  
|<span data-ttu-id="80402-111">Znak wejściowy lub ciąg</span><span class="sxs-lookup"><span data-stu-id="80402-111">Input character or string</span></span>|<span data-ttu-id="80402-112">Reprezentuje znaki używane jako dane wejściowe, która jest stosowana wobec.</span><span class="sxs-lookup"><span data-stu-id="80402-112">Represents the characters used as input that the mask is applied against.</span></span> <span data-ttu-id="80402-113">W rzeczywistości ciąg wejściowy może się składać z wielu operacji wejściowych, w tym <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, i <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="80402-113">In actuality, the input string may be composed of multiple input operations, including <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, and <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>.</span></span> <span data-ttu-id="80402-114">W związku z tym ciąg wejściowy nie jest bezpośrednio dostępny.</span><span class="sxs-lookup"><span data-stu-id="80402-114">Therefore, the input string cannot be accessed directly.</span></span> <span data-ttu-id="80402-115">Aspekty Obsługa ciągu wejściowego są jednak dostępne jednak <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> i <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>, i <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="80402-115">However, aspects of the input string handling are available though the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> and <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>, and <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> properties.</span></span>|  
|<span data-ttu-id="80402-116">Maska</span><span class="sxs-lookup"><span data-stu-id="80402-116">Mask</span></span>|<span data-ttu-id="80402-117">Reprezentuje dane wejściowe, formatowanie maska służący do przekształcania ciąg wejściowy ciąg sformatowany.</span><span class="sxs-lookup"><span data-stu-id="80402-117">Represents the input formatting mask used to transform the input string into the formatted string.</span></span> <span data-ttu-id="80402-118">Ten ciąg jest ustawiany w <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> i dostępne głównie jednak <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="80402-118">This string is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> and accessed primarily though the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property.</span></span> <span data-ttu-id="80402-119">Właściwości maski są również dostępne za pośrednictwem innych elementach członkowskich, takich jak <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>, i <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="80402-119">Characteristics of the mask are also available through other members, such as the <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>, and <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> properties.</span></span>|  
|<span data-ttu-id="80402-120">Ciąg sformatowany</span><span class="sxs-lookup"><span data-stu-id="80402-120">Formatted string</span></span>|<span data-ttu-id="80402-121">Określa ciąg, który daje podczas pełnego jest stosowana do ciągu wejściowego.</span><span class="sxs-lookup"><span data-stu-id="80402-121">Represents the string that results when the full mask is applied to the input string.</span></span> <span data-ttu-id="80402-122">Ciąg sformatowany można tworzyć zapytania o wiele elementów członkowskich klasy, w tym <xref:System.ComponentModel.MaskedTextProvider.Item%2A>, <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskFull%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A>, <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="80402-122">The formatted string can be queried with many members of the class, including <xref:System.ComponentModel.MaskedTextProvider.Item%2A>, <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskFull%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A>, <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>, and so on.</span></span> <span data-ttu-id="80402-123">Pełna wartość ciągu sformatowaną jest dostępna z <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> i <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="80402-123">The full value of the formatted string is available from the <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> methods.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="80402-124">Ciąg wejściowy może reprezentować bezpośrednia interwencja użytkownika, tak jak w przypadku <xref:System.Windows.Forms.MaskedTextBox>, lub mogą być generowane przez inne procesy, które nie są bezpośrednio związane z operacjami wejścia/wyjścia użytkownika.</span><span class="sxs-lookup"><span data-stu-id="80402-124">The input string may represent direct user input, as in the case of the <xref:System.Windows.Forms.MaskedTextBox>, or may be generated by other processes not directly associated with user input/output operations.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.MaskedTextBox" />
    <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskedTextProvider" />
    <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="80402-125">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.MaskedTextProvider" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-125">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider mask" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mask">
          <span data-ttu-id="80402-126">A <see cref="T:System.String" /> reprezentujący maska wprowadzania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-126">A <see cref="T:System.String" /> that represents the input mask.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-127">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.MaskedTextProvider" /> przy użyciu określonej maski.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-127">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-128">Użyj tego konstruktora jest dokładnym odpowiednikiem następujące wywołanie do <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> konstruktora:</span><span class="sxs-lookup"><span data-stu-id="80402-128">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , null, true, '_', '\0', false)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, bool restrictToAscii);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, bool restrictToAscii) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, restrictToAscii As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, bool restrictToAscii);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * bool -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, restrictToAscii)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="restrictToAscii" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask">
          <span data-ttu-id="80402-129">A <see cref="T:System.String" /> reprezentujący maska wprowadzania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-129">A <see cref="T:System.String" /> that represents the input mask.</span>
          </span>
        </param>
        <param name="restrictToAscii">
          <span data-ttu-id="80402-130">
            <see langword="true" /> Aby ograniczyć dane wejściowe do znaków ASCII zgodnego; w przeciwnym razie <see langword="false" /> umożliwia całego zestawu Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-130">
              <see langword="true" /> to restrict input to ASCII-compatible characters; otherwise <see langword="false" /> to allow the entire Unicode set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-131">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.MaskedTextProvider" /> przy użyciu określona maska i wartość ograniczenia ASCII.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-131">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask and ASCII restriction value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-132">Użyj tego konstruktora jest dokładnym odpowiednikiem następujące wywołanie do <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> konstruktora:</span><span class="sxs-lookup"><span data-stu-id="80402-132">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , null, true, '_', '\0', restrictToASCII)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * System.Globalization.CultureInfo -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, culture)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="mask">
          <span data-ttu-id="80402-133">A <see cref="T:System.String" /> reprezentujący maska wprowadzania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-133">A <see cref="T:System.String" /> that represents the input mask.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="80402-134">A <see cref="T:System.Globalization.CultureInfo" /> która jest używana do ustawiania znaków separatora zależne od regionu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-134">A <see cref="T:System.Globalization.CultureInfo" /> that is used to set region-sensitive separator characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-135">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.MaskedTextProvider" /> przy użyciu określona maska i kultury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-135">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask and culture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-136">Użyj tego konstruktora jest dokładnym odpowiednikiem następujące wywołanie do <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> konstruktora:</span><span class="sxs-lookup"><span data-stu-id="80402-136">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , culture, true, '_', '\0', false)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Culture" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, char passwordChar, bool allowPromptAsInput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, char passwordChar, bool allowPromptAsInput) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Char,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, passwordChar As Char, allowPromptAsInput As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, char passwordChar, bool allowPromptAsInput);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * char * bool -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, passwordChar, allowPromptAsInput)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="passwordChar" Type="System.Char" />
        <Parameter Name="allowPromptAsInput" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask">
          <span data-ttu-id="80402-137">A <see cref="T:System.String" /> reprezentujący maska wprowadzania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-137">A <see cref="T:System.String" /> that represents the input mask.</span>
          </span>
        </param>
        <param name="passwordChar">
          <span data-ttu-id="80402-138">A <see cref="T:System.Char" /> który będzie wyświetlany dla znaków wprowadzonych w ciągu hasła.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-138">A <see cref="T:System.Char" /> that will be displayed for characters entered into a password string.</span>
          </span>
        </param>
        <param name="allowPromptAsInput">
          <span data-ttu-id="80402-139">
            <see langword="true" /> Aby umożliwić znaku zgłoszenia jako dane wejściowe; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-139">
              <see langword="true" /> to allow the prompt character as input; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-140">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.MaskedTextProvider" /> przy użyciu określona maska znak hasła, a wartość prompt użycia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-140">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask, password character, and prompt usage value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-141">Użyj tego konstruktora jest dokładnym odpowiednikiem następujące wywołanie do <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> konstruktora:</span><span class="sxs-lookup"><span data-stu-id="80402-141">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , null, allowPromptAsInput, '_', passwordChar, false)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, bool restrictToAscii);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, class System.Globalization.CultureInfo culture, bool restrictToAscii) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, culture As CultureInfo, restrictToAscii As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, System::Globalization::CultureInfo ^ culture, bool restrictToAscii);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * System.Globalization.CultureInfo * bool -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, culture, restrictToAscii)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="restrictToAscii" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask">
          <span data-ttu-id="80402-142">A <see cref="T:System.String" /> reprezentujący maska wprowadzania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-142">A <see cref="T:System.String" /> that represents the input mask.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="80402-143">A <see cref="T:System.Globalization.CultureInfo" /> która jest używana do ustawiania znaków separatora zależne od regionu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-143">A <see cref="T:System.Globalization.CultureInfo" /> that is used to set region-sensitive separator characters.</span>
          </span>
        </param>
        <param name="restrictToAscii">
          <span data-ttu-id="80402-144">
            <see langword="true" /> Aby ograniczyć dane wejściowe do znaków ASCII zgodnego; w przeciwnym razie <see langword="false" /> umożliwia całego zestawu Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-144">
              <see langword="true" /> to restrict input to ASCII-compatible characters; otherwise <see langword="false" /> to allow the entire Unicode set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-145">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.MaskedTextProvider" /> przy użyciu określonego maski, kultury i wartość ograniczenia ASCII.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-145">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask, culture, and ASCII restriction value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-146">Użyj tego konstruktora jest dokładnym odpowiednikiem następujące wywołanie do <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> konstruktora:</span><span class="sxs-lookup"><span data-stu-id="80402-146">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , culture, true, '_', '\0', restrictToAscii)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Culture" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, char passwordChar, bool allowPromptAsInput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, class System.Globalization.CultureInfo culture, char passwordChar, bool allowPromptAsInput) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, culture As CultureInfo, passwordChar As Char, allowPromptAsInput As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, System::Globalization::CultureInfo ^ culture, char passwordChar, bool allowPromptAsInput);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * System.Globalization.CultureInfo * char * bool -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, culture, passwordChar, allowPromptAsInput)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="passwordChar" Type="System.Char" />
        <Parameter Name="allowPromptAsInput" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask">
          <span data-ttu-id="80402-147">A <see cref="T:System.String" /> reprezentujący maska wprowadzania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-147">A <see cref="T:System.String" /> that represents the input mask.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="80402-148">A <see cref="T:System.Globalization.CultureInfo" /> która jest używana do ustawiania znaków separatora zależne od regionu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-148">A <see cref="T:System.Globalization.CultureInfo" /> that is used to set region-sensitive separator characters.</span>
          </span>
        </param>
        <param name="passwordChar">
          <span data-ttu-id="80402-149">A <see cref="T:System.Char" /> który będzie wyświetlany dla znaków wprowadzonych w ciągu hasła.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-149">A <see cref="T:System.Char" /> that will be displayed for characters entered into a password string.</span>
          </span>
        </param>
        <param name="allowPromptAsInput">
          <span data-ttu-id="80402-150">
            <see langword="true" /> Aby umożliwić znaku zgłoszenia jako dane wejściowe; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-150">
              <see langword="true" /> to allow the prompt character as input; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-151">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.MaskedTextProvider" /> przy użyciu określona maska, kultury, znak hasła i wartość prompt użycia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-151">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask, culture, password character, and prompt usage value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-152">Użyj tego konstruktora jest dokładnym odpowiednikiem następujące wywołanie do <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> konstruktora:</span><span class="sxs-lookup"><span data-stu-id="80402-152">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , culture, allowPromptAsInput, '_', passwordChar, false)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Culture" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, bool allowPromptAsInput, char promptChar, char passwordChar, bool restrictToAscii);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, class System.Globalization.CultureInfo culture, bool allowPromptAsInput, char promptChar, char passwordChar, bool restrictToAscii) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, culture As CultureInfo, allowPromptAsInput As Boolean, promptChar As Char, passwordChar As Char, restrictToAscii As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, System::Globalization::CultureInfo ^ culture, bool allowPromptAsInput, char promptChar, char passwordChar, bool restrictToAscii);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * System.Globalization.CultureInfo * bool * char * char * bool -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, culture, allowPromptAsInput, promptChar, passwordChar, restrictToAscii)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="allowPromptAsInput" Type="System.Boolean" />
        <Parameter Name="promptChar" Type="System.Char" />
        <Parameter Name="passwordChar" Type="System.Char" />
        <Parameter Name="restrictToAscii" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask">
          <span data-ttu-id="80402-153">A <see cref="T:System.String" /> reprezentujący maska wprowadzania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-153">A <see cref="T:System.String" /> that represents the input mask.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="80402-154">A <see cref="T:System.Globalization.CultureInfo" /> która jest używana do ustawiania znaków separatora zależne od regionu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-154">A <see cref="T:System.Globalization.CultureInfo" /> that is used to set region-sensitive separator characters.</span>
          </span>
        </param>
        <param name="allowPromptAsInput">
          <span data-ttu-id="80402-155">A <see cref="T:System.Boolean" /> wartość, która określa, czy znak monitu, powinno być dozwolone jako prawidłowy znak wejściowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-155">A <see cref="T:System.Boolean" /> value that specifies whether the prompt character should be allowed as a valid input character.</span>
          </span>
        </param>
        <param name="promptChar">
          <span data-ttu-id="80402-156">A <see cref="T:System.Char" /> , które będą wyświetlane jako symbol zastępczy dla danych wejściowych użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-156">A <see cref="T:System.Char" /> that will be displayed as a placeholder for user input.</span>
          </span>
        </param>
        <param name="passwordChar">
          <span data-ttu-id="80402-157">A <see cref="T:System.Char" /> który będzie wyświetlany dla znaków wprowadzonych w ciągu hasła.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-157">A <see cref="T:System.Char" /> that will be displayed for characters entered into a password string.</span>
          </span>
        </param>
        <param name="restrictToAscii">
          <span data-ttu-id="80402-158">
            <see langword="true" /> Aby ograniczyć dane wejściowe do znaków ASCII zgodnego; w przeciwnym razie <see langword="false" /> umożliwia całego zestawu Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-158">
              <see langword="true" /> to restrict input to ASCII-compatible characters; otherwise <see langword="false" /> to allow the entire Unicode set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-159">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.MaskedTextProvider" /> przy użyciu określona maska, kultury, wartość prompt użycia znaku, znak hasła i wartość ograniczenia ASCII.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-159">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask, culture, prompt usage value, prompt character, password character, and ASCII restriction value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-160">Ten konstruktor reprezentuje najbardziej ogólnym przeciążone formularza.</span><span class="sxs-lookup"><span data-stu-id="80402-160">This constructor represents the most general overloaded form.</span></span> <span data-ttu-id="80402-161">`mask` Parametru musi być zgodna z języka maskowania zdefiniowane przez <xref:System.ComponentModel.MaskedTextProvider> klasy, która została szczegółowo opisana w <xref:System.Windows.Forms.MaskedTextBox.Mask%2A?displayProperty=nameWithType> właściwość <xref:System.Windows.Forms.MaskedTextBox> klasy.</span><span class="sxs-lookup"><span data-stu-id="80402-161">The `mask` parameter must conform to the masking language defined by the <xref:System.ComponentModel.MaskedTextProvider> class, which is detailed in the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A?displayProperty=nameWithType> property of the <xref:System.Windows.Forms.MaskedTextBox> class.</span></span>  
  
 <span data-ttu-id="80402-162">Ponieważ neutralne kultury nie można wykonać zapytania o informacje specyficzne dla kultury <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> użyje konstruktora <xref:System.Globalization.CultureInfo.GetCultures%2A> metodę wyszukiwania dla pierwszego nieneutralnej kultury służące do określenia znaków separatora właściwe.</span><span class="sxs-lookup"><span data-stu-id="80402-162">Because neutral cultures cannot be queried for culture-specific information, the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor will use the <xref:System.Globalization.CultureInfo.GetCultures%2A> method to search for the first non-neutral culture to use to determine the proper separator characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="80402-163">Parametr maska jest <see langword="null" /> lub <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-163">The mask parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span>
          </span>
          <span data-ttu-id="80402-164">- lub - maska zawiera co najmniej jeden niedrukowalne znaki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-164">-or-  The mask contains one or more non-printable characters.</span>
          </span>
        </exception>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.Clone" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Culture" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="80402-165">Dodaje znak wejściowy lub ciąg wejściowy ciąg sformatowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-165">Adds an input character or input string to the formatted string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (char input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Add(char input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Add(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Add(char input);" />
      <MemberSignature Language="F#" Value="member this.Add : char -&gt; bool" Usage="maskedTextProvider.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="80402-166">A <see cref="T:System.Char" /> wartości, które mają być dołączane do sformatowanego ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-166">A <see cref="T:System.Char" /> value to be appended to the formatted string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-167">Dodaje określony znak wejściowy do końca ciągu sformatowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-167">Adds the specified input character to the end of the formatted string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-168">
            <see langword="true" /> gdy znak wejściowy został dodany pomyślnie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-168">
              <see langword="true" /> if the input character was added successfully; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-169"><xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29> Dodaje metody `input` znak po pozycji, która została ostatnio przypisana, i jest reprezentowany przez wartość pierwsze dostępne miejsce ciągu w formacie <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="80402-169">The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29> method adds the `input` character value to the first available position in the formatted string after the position that was last assigned, which is represented by the <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> property.</span></span> <span data-ttu-id="80402-170">Ta metoda zakończy się niepowodzeniem dla żadnego z następujących powodów:</span><span class="sxs-lookup"><span data-stu-id="80402-170">This method will fail for any of the following reasons:</span></span>  
  
-   <span data-ttu-id="80402-171">Wartość wejściowa `input`, nie jest drukowania, lub nie odpowiada jego odpowiadającego mu elementu maski.</span><span class="sxs-lookup"><span data-stu-id="80402-171">The input value, `input`, is not printable, or it does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="80402-172">Nie ma pozycji zero dostępne edycji ciągu w formacie lub istnieją nie pozycje edycji dostępne po ostatniej pozycji.</span><span class="sxs-lookup"><span data-stu-id="80402-172">There are zero available edit positions in the formatted string, or there are no available edit positions after the last assigned position.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Add(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Add(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Add : string -&gt; bool" Usage="maskedTextProvider.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="80402-173">A <see cref="T:System.String" /> zawierające wartości znaków, które mają być dołączane do sformatowanego ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-173">A <see cref="T:System.String" /> containing character values to be appended to the formatted string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-174">Dodaje określony ciąg wejściowy znaki na końcu ciągu sformatowaną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-174">Adds the characters in the specified input string to the end of the formatted string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-175">
            <see langword="true" /> Jeśli wszystkie znaki w ciągu wejściowym zostały dodane pomyślnie; w przeciwnym razie <see langword="false" /> aby wskazać, że nie zostały dodane żadne znaki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-175">
              <see langword="true" /> if all the characters from the input string were added successfully; otherwise <see langword="false" /> to indicate that no characters were added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-176"><xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29> Metoda dodaje znaków z `input` ciąg sformatowany ciąg znaków, zaczynając od pierwszej pozycji dostępne po <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>.</span><span class="sxs-lookup"><span data-stu-id="80402-176">The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29> method adds the characters from the `input` string to the formatted string, starting with the first available position after <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>.</span></span> <span data-ttu-id="80402-177">Ta metoda zakończy się niepowodzeniem dla żadnego z następujących powodów:</span><span class="sxs-lookup"><span data-stu-id="80402-177">This method will fail for any of the following reasons:</span></span>  
  
-   <span data-ttu-id="80402-178">Znaków w wartości wejściowej, `input`, są nie do drukowania lub wartość wejściowa nie odpowiada jego odpowiadającego mu elementu maski.</span><span class="sxs-lookup"><span data-stu-id="80402-178">Any of the characters in the input value, `input`, are not printable, or the input value does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="80402-179">Nie ma wystarczającej liczby pozycji dostępnych edycji ciągu w formacie po ostatniej pozycji.</span><span class="sxs-lookup"><span data-stu-id="80402-179">There are not enough available edit positions in the formatted string after the last assigned position.</span></span>  
  
 <span data-ttu-id="80402-180">Jeśli ta metoda zawiedzie, są wprowadzane nie dodatki i metoda zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="80402-180">If this method fails, no additions are made and the method returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="80402-181">
            <paramref name="input" /> Parametr jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-181">The <paramref name="input" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (char input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Add(char input, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As Char, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Add(char input, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Add : char *  *  -&gt; bool" Usage="maskedTextProvider.Add (input, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="80402-182">A <see cref="T:System.Char" /> wartości, które mają być dołączane do sformatowanego ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-182">A <see cref="T:System.Char" /> value to be appended to the formatted string.</span>
          </span>
        </param>
        <param name="testPosition">
          <span data-ttu-id="80402-183">Liczona od zera pozycja ciągu w formacie, gdzie została podjęta próba dodania znak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-183">The zero-based position in the formatted string where the attempt was made to add the character.</span>
          </span>
          <span data-ttu-id="80402-184">Parametr wyjściowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-184">An output parameter.</span>
          </span>
        </param>
        <param name="resultHint">
          <span data-ttu-id="80402-185">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> opisujący krótkiej formie wyniku operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-185">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span>
          </span>
          <span data-ttu-id="80402-186">Parametr wyjściowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-186">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-187">Dodaje określony znak wejściowy na końcu sformatowanego ciągu, a następnie generuje pozycji i informacje opisowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-187">Adds the specified input character to the end of the formatted string, and then outputs position and descriptive information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-188">
            <see langword="true" /> gdy znak wejściowy został dodany pomyślnie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-188">
              <see langword="true" /> if the input character was added successfully; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-189"><xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> Metoda próbuje dodać `input` znak po pozycji, która została ostatnio przypisana, i jest reprezentowany przez wartość pierwsze dostępne miejsce ciągu w formacie <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="80402-189">The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method attempts to add the `input` character value to the first available position in the formatted string after the position that was last assigned, which is represented by the <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> property.</span></span> <span data-ttu-id="80402-190">Ta metoda zakończy się niepowodzeniem, jeśli wszystkie pozycje dostępne są przed ostatniej pozycji przypisane.</span><span class="sxs-lookup"><span data-stu-id="80402-190">This method will fail if all available positions are before the last assigned position.</span></span> <span data-ttu-id="80402-191">Ta metoda zakończy się niepowodzeniem dla żadnego z następujących powodów:</span><span class="sxs-lookup"><span data-stu-id="80402-191">This method will fail for any of the following reasons:</span></span>  
  
-   <span data-ttu-id="80402-192">Wartość wejściowa `input`, nie jest drukowania, lub nie odpowiada jego odpowiadającego mu elementu maski.</span><span class="sxs-lookup"><span data-stu-id="80402-192">The input value, `input`, is not printable, or it does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="80402-193">Nie ma pozycji zero dostępne edycji ciągu w formacie lub istnieją nie pozycje edycji dostępne po ostatniej pozycji.</span><span class="sxs-lookup"><span data-stu-id="80402-193">There are zero available edit positions in the formatted string, or there are no available edit positions after the last assigned position.</span></span>  
  
 <span data-ttu-id="80402-194">Ta metoda działa tak samo, jako wersja przesłoniętych biorąc pojedynczy <xref:System.Char> parametru <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29>, ale on Wyświetla dodatkowe informacje.</span><span class="sxs-lookup"><span data-stu-id="80402-194">This method functions the same as the overridden version taking a single <xref:System.Char> parameter, <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29>, except that it outputs additional information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Add(string input, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As String, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Add(System::String ^ input, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Add : string *  *  -&gt; bool" Usage="maskedTextProvider.Add (input, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="80402-195">A <see cref="T:System.String" /> zawierające wartości znaków, które mają być dołączane do sformatowanego ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-195">A <see cref="T:System.String" /> containing character values to be appended to the formatted string.</span>
          </span>
        </param>
        <param name="testPosition">
          <span data-ttu-id="80402-196">Liczona od zera pozycja ciągu w formacie, gdzie została podjęta próba dodania znak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-196">The zero-based position in the formatted string where the attempt was made to add the character.</span>
          </span>
          <span data-ttu-id="80402-197">Parametr wyjściowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-197">An output parameter.</span>
          </span>
        </param>
        <param name="resultHint">
          <span data-ttu-id="80402-198">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> opisujący krótkiej formie wyniku operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-198">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span>
          </span>
          <span data-ttu-id="80402-199">Parametr wyjściowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-199">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-200">Dodaje znaki w określonym ciągu wejściowego na końcu ciągu sformatowaną, a następnie generuje pozycji i informacje opisowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-200">Adds the characters in the specified input string to the end of the formatted string, and then outputs position and descriptive information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-201">
            <see langword="true" /> Jeśli wszystkie znaki w ciągu wejściowym zostały dodane pomyślnie; w przeciwnym razie <see langword="false" /> aby wskazać, że nie zostały dodane żadne znaki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-201">
              <see langword="true" /> if all the characters from the input string were added successfully; otherwise <see langword="false" /> to indicate that no characters were added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-202"><xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> Metoda dodaje znaków z `input` ciąg sformatowany ciąg znaków, zaczynając od pierwszej pozycji dostępne po <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>.</span><span class="sxs-lookup"><span data-stu-id="80402-202">The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method adds the characters from the `input` string to the formatted string, starting with the first available position after <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>.</span></span> <span data-ttu-id="80402-203">Ta metoda zakończy się niepowodzeniem dla żadnego z następujących powodów:</span><span class="sxs-lookup"><span data-stu-id="80402-203">This method will fail for any of the following reasons:</span></span>  
  
-   <span data-ttu-id="80402-204">Znaków w wartości wejściowej, `input`, są nie do drukowania lub wartość wejściowa nie odpowiada jego odpowiadającego mu elementu maski.</span><span class="sxs-lookup"><span data-stu-id="80402-204">Any of the characters in the input value, `input`, are not printable, or the input value does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="80402-205">Nie ma wystarczającej liczby pozycji dostępnych edycji ciągu w formacie po ostatniej pozycji.</span><span class="sxs-lookup"><span data-stu-id="80402-205">There are not enough available edit positions in the formatted string after the last assigned position.</span></span>  
  
 <span data-ttu-id="80402-206">Jeśli ta metoda zawiedzie, są wprowadzane nie dodatki i metoda zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="80402-206">If this method fails, no additions are made and the method returns `false`.</span></span>  
  
 <span data-ttu-id="80402-207">Ta metoda działa tak samo, jako wersja przesłoniętych biorąc pojedynczy <xref:System.String> parametru <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29>, ale on Wyświetla dodatkowe informacje.</span><span class="sxs-lookup"><span data-stu-id="80402-207">This method functions the same as the overridden version taking a single <xref:System.String> parameter, <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29>, except that it outputs additional information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="AllowPromptAsInput">
      <MemberSignature Language="C#" Value="public bool AllowPromptAsInput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPromptAsInput" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowPromptAsInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowPromptAsInput { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowPromptAsInput : bool" Usage="System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80402-208">Pobiera wartość wskazującą, czy znak monitu powinny być traktowane jako prawidłowy znak wejściowy lub nie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-208">Gets a value indicating whether the prompt character should be treated as a valid input character or not.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80402-209">
            <see langword="true" /> Jeśli użytkownik może wprowadzić <see cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" /> w formancie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-209">
              <see langword="true" /> if the user can enter <see cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" /> into the control; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="80402-210">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-210">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-211"><xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> Wartość właściwości jest ustawiana w <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="80402-211">The <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> property's value is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="80402-212">Nawet wtedy, gdy <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> jest `true`, znaku zgłoszenia musi być prawidłowy dla bieżącej lokalizacji maski, aby akceptowane.</span><span class="sxs-lookup"><span data-stu-id="80402-212">Even when <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> is `true`, the prompt character must be valid for the current location in the mask in order to be accepted.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName="AsciiOnly">
      <MemberSignature Language="C#" Value="public bool AsciiOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AsciiOnly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsciiOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AsciiOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AsciiOnly : bool" Usage="System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80402-213">Pobiera wartość wskazującą, czy maska akceptuje znaki spoza zestawu znaków ASCII.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-213">Gets a value indicating whether the mask accepts characters outside of the ASCII character set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80402-214">
            <see langword="true" /> Jeśli tylko ASCII są akceptowane; <see langword="false" /> Jeśli <see cref="T:System.ComponentModel.MaskedTextProvider" /> może akceptować dowolnych znaków Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-214">
              <see langword="true" /> if only ASCII is accepted; <see langword="false" /> if <see cref="T:System.ComponentModel.MaskedTextProvider" /> can accept any arbitrary Unicode character.</span>
          </span>
          <span data-ttu-id="80402-215">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-215">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-216"><xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> Wartość właściwości jest ustawiana w <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="80402-216">The <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> property's value is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="80402-217">Jeśli `true`, <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> ogranicza danych wejściowych użytkownika do zestawu znaków ASCII.</span><span class="sxs-lookup"><span data-stu-id="80402-217">If `true`, <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> restricts user input to the ASCII character set.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AsciiOnly" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName="AssignedEditPositionCount">
      <MemberSignature Language="C#" Value="public int AssignedEditPositionCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AssignedEditPositionCount" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssignedEditPositionCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AssignedEditPositionCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AssignedEditPositionCount : int" Usage="System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80402-218">Pobiera liczbę pozycji znaku można edytować, które już zostały pomyślnie przypisane wartości wejściowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-218">Gets the number of editable character positions that have already been successfully assigned an input value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80402-219">
            <see cref="T:System.Int32" /> Zawierające liczby pozycji znaku można edytować maski wprowadzania już zostanie przypisana wartość znaku w ciągu sformatowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-219">An <see cref="T:System.Int32" /> containing the number of editable character positions in the input mask that have already been assigned a character value in the formatted string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-220">Całkowita liczba pozycji znaku można edytować, reprezentowany przez <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> właściwość powinna być równa sumie <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> i <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="80402-220">The total number of editable character positions, represented by the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> property, should equal the sum of the <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> and the <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="AvailableEditPositionCount">
      <MemberSignature Language="C#" Value="public int AvailableEditPositionCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AvailableEditPositionCount" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailableEditPositionCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AvailableEditPositionCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AvailableEditPositionCount : int" Usage="System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80402-221">Pobiera liczbę pozycji znaku można edytować w maska wprowadzania, których nie masz jeszcze przypisanej wartości wejściowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-221">Gets the number of editable character positions in the input mask that have not yet been assigned an input value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80402-222">
            <see cref="T:System.Int32" /> Umieszcza zawierające liczbę znaków można edytować, który jeszcze nie zostały przypisane wartości znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-222">An <see cref="T:System.Int32" /> containing the number of editable character positions that not yet been assigned a character value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-223">Całkowita liczba pozycji znaku można edytować, reprezentowany przez <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> właściwość powinna być równa sumie <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> i <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="80402-223">The total number of editable character positions, represented by the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> property, should equal the sum of the <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> and the <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Clear">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="80402-224">Czyści wprowadzanie znaków z ciągu sformatowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-224">Clears all the input characters from the formatted string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="maskedTextProvider.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="80402-225">Czyści wszystkie znaki wejściowych można edytować sformatowany ciągu, zastępując je znaki monitu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-225">Clears all the editable input characters from the formatted string, replacing them with prompt characters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-226"><xref:System.ComponentModel.MaskedTextProvider.Clear> Metody ponownie inicjuje ciąg sformatowany Wstawianie znaku zgłoszenia do wszystkich pozycji można edytować.</span><span class="sxs-lookup"><span data-stu-id="80402-226">The <xref:System.ComponentModel.MaskedTextProvider.Clear> method reinitializes the formatted string, inserting the prompt character into all editable positions.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear (out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear([out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Clear(System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear (ByRef resultHint As MaskedTextResultHint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear([Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Clear :  -&gt; unit" Usage="maskedTextProvider.Clear resultHint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="resultHint">
          <span data-ttu-id="80402-227">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> opisujący krótkiej formie wyniku operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-227">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span>
          </span>
          <span data-ttu-id="80402-228">Parametr wyjściowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-228">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-229">Czyści wszystkie znaki wejściowych można edytować sformatowanego ciągu, zastępowanie znaki monitu i danych wyjściowych informacje opisowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-229">Clears all the editable input characters from the formatted string, replacing them with prompt characters, and then outputs descriptive information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-230"><xref:System.ComponentModel.MaskedTextProvider.Clear%28System.ComponentModel.MaskedTextResultHint%40%29> Metody ponownie inicjuje ciąg sformatowany Wstawianie znaku zgłoszenia do wszystkich pozycji można edytować.</span><span class="sxs-lookup"><span data-stu-id="80402-230">The <xref:System.ComponentModel.MaskedTextProvider.Clear%28System.ComponentModel.MaskedTextResultHint%40%29> method reinitializes the formatted string, inserting the prompt character into all editable positions.</span></span> <span data-ttu-id="80402-231">Działa ona ekwiwalentnie do przesłoniętych wersji, która nie przyjmuje żadnych parametrów <xref:System.ComponentModel.MaskedTextProvider.Clear>, z wyjątkiem on Wyświetla dodatkowe informacje.</span><span class="sxs-lookup"><span data-stu-id="80402-231">It functions equivalently to the overridden version that takes no parameters, <xref:System.ComponentModel.MaskedTextProvider.Clear>, except it outputs additional information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="maskedTextProvider.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="80402-232">Tworzy kopię bieżącego <see cref="T:System.ComponentModel.MaskedTextProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-232">Creates a copy of the current <see cref="T:System.ComponentModel.MaskedTextProvider" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-233">
            <see cref="T:System.ComponentModel.MaskedTextProvider" /> Obiektu ta metoda tworzy, rzutowany jako obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-233">The <see cref="T:System.ComponentModel.MaskedTextProvider" /> object this method creates, cast as an object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-234"><xref:System.ComponentModel.MaskedTextProvider.Clone%2A> Metoda zwraca nową kopię bieżącego <xref:System.ComponentModel.MaskedTextProvider>.</span><span class="sxs-lookup"><span data-stu-id="80402-234">The <xref:System.ComponentModel.MaskedTextProvider.Clone%2A> method returns a new copy of the current <xref:System.ComponentModel.MaskedTextProvider>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.#ctor" />
        <altmember cref="T:System.ICloneable" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.Culture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo" Usage="System.ComponentModel.MaskedTextProvider.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80402-235">Pobiera kultura, która określa wartość Lokalizowalny separatorów i symboli zastępczych w maska wprowadzania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-235">Gets the culture that determines the value of the localizable separators and placeholders in the input mask.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80402-236">A <see cref="T:System.Globalization.CultureInfo" /> zawierający informacje o ustawieniach kulturowych skojarzone z maska wprowadzania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-236">A <see cref="T:System.Globalization.CultureInfo" /> containing the culture information associated with the input mask.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-237"><xref:System.ComponentModel.MaskedTextProvider.Culture%2A> Właściwość jest ustawiona <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="80402-237">The <xref:System.ComponentModel.MaskedTextProvider.Culture%2A> property is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Culture" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName="DefaultPasswordChar">
      <MemberSignature Language="C#" Value="public static char DefaultPasswordChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property char DefaultPasswordChar" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultPasswordChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property char DefaultPasswordChar { char get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultPasswordChar : char" Usage="System.ComponentModel.MaskedTextProvider.DefaultPasswordChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80402-238">Pobiera domyślne hasło znak używany zasłoniętej wejściowa użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-238">Gets the default password character used obscure user input.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80402-239">A <see cref="T:System.Char" /> reprezentujący domyślny znak hasła.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-239">A <see cref="T:System.Char" /> that represents the default password character.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-240"><xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> Właściwość jest zdefiniowana w <xref:System.ComponentModel.MaskedTextProvider> klasy jako znak gwiazdki (\*).</span><span class="sxs-lookup"><span data-stu-id="80402-240">The <xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> property is defined in the <xref:System.ComponentModel.MaskedTextProvider> class to be the asterisk character (\*).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IsPassword" />
      </Docs>
    </Member>
    <Member MemberName="EditPositionCount">
      <MemberSignature Language="C#" Value="public int EditPositionCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditPositionCount" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditPositionCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EditPositionCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.EditPositionCount : int" Usage="System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80402-241">Pobiera liczbę pozycji można edytować ciągu w formacie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-241">Gets the number of editable positions in the formatted string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80402-242">
            <see cref="T:System.Int32" /> Zawierające liczbę pozycji można edytować ciągu w formacie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-242">An <see cref="T:System.Int32" /> containing the number of editable positions in the formatted string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-243">Całkowita liczba pozycji znaku można edytować, reprezentowany przez <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> właściwości, musi być równa sumie <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> i <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="80402-243">The total number of editable character positions, represented by the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> property, must equal the sum of the <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> and the <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> properties.</span></span> <span data-ttu-id="80402-244">Ta wartość obejmuje wymaganych i opcjonalnych można edytować znaków.</span><span class="sxs-lookup"><span data-stu-id="80402-244">This value includes both the required and the optional editable characters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="EditPositions">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator EditPositions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator EditPositions" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditPositions As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IEnumerator ^ EditPositions { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditPositions : System.Collections.IEnumerator" Usage="System.ComponentModel.MaskedTextProvider.EditPositions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80402-245">Pobiera nowo utworzony moduł wyliczający dla edytowalnego pozycji w ciągu sformatowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-245">Gets a newly created enumerator for the editable positions in the formatted string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80402-246">
            <see cref="T:System.Collections.IEnumerator" /> Obsługującej wyliczenie za pośrednictwem można edytować pozycje ciągu w formacie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-246">An <see cref="T:System.Collections.IEnumerator" /> that supports enumeration over the editable positions in the formatted string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-247">Na dostęp każdy <xref:System.ComponentModel.MaskedTextProvider.EditPositions%2A> właściwość kolekcji tymczasowej można edytować pozycji zostanie utworzony pobranej <xref:System.Collections.IEnumerator> działa na.</span><span class="sxs-lookup"><span data-stu-id="80402-247">On every access of the <xref:System.ComponentModel.MaskedTextProvider.EditPositions%2A> property, a temporary collection of editable positions is created that the retrieved <xref:System.Collections.IEnumerator> operates on.</span></span>  
  
 <span data-ttu-id="80402-248">Ta kolekcja jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="80402-248">This collection is read-only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindAssignedEditPositionFrom">
      <MemberSignature Language="C#" Value="public int FindAssignedEditPositionFrom (int position, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindAssignedEditPositionFrom(int32 position, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAssignedEditPositionFrom (position As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindAssignedEditPositionFrom(int position, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindAssignedEditPositionFrom : int * bool -&gt; int" Usage="maskedTextProvider.FindAssignedEditPositionFrom (position, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="80402-249">Liczony od zera pozycja w sformatowany ciąg ma się rozpocząć wyszukiwanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-249">The zero-based position in the formatted string to start the search.</span>
          </span>
        </param>
        <param name="direction">
          <span data-ttu-id="80402-250">A <see cref="T:System.Boolean" /> wskazujący wyszukiwania kierunek; albo <see langword="true" /> wyszukiwania do przodu lub <see langword="false" /> wyszukiwania do tyłu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-250">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-251">Zwraca pozycję pierwszego przypisane pozycji można edytować po określonej pozycji za pomocą kierunek określony wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-251">Returns the position of the first assigned editable position after the specified position using the specified search direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-252">W przypadku powodzenia <see cref="T:System.Int32" /> reprezentujący liczona od zera pozycja pierwszego przypisane można edytować pozycji napotkano; w przeciwnym razie <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-252">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first assigned editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-253">Ciąg sformatowany składa się z można edytować znaków i literały skopiowanych z maską.</span><span class="sxs-lookup"><span data-stu-id="80402-253">The formatted string is composed of editable characters and literals copied from the mask.</span></span> <span data-ttu-id="80402-254">Położenie znaku można edytować albo zostanie jest zajmowany przez znaku zgłoszenia skopiowane z maski, jeśli są one nieprzypisane lub nieprawidłowy znak wejściowy ma przypisanym danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="80402-254">The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.</span></span>  
  
 <span data-ttu-id="80402-255"><xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> Metoda jest używana do wyszukiwania pierwszego znaku przypisanej po określonym kierunku pozycji i wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="80402-255">The <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> method is used to search for the first assigned character after a specified position and search direction.</span></span> <span data-ttu-id="80402-256">Wynik później mogą być przekazywane jako parametr <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indeksatora w celu uzyskania przypisanej wartości w tym miejscu.</span><span class="sxs-lookup"><span data-stu-id="80402-256">The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the assigned value at this position.</span></span>  
  
 <span data-ttu-id="80402-257"><xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> i <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> metody są uzupełnia tej metody.</span><span class="sxs-lookup"><span data-stu-id="80402-257">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> methods are complements of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindAssignedEditPositionInRange">
      <MemberSignature Language="C#" Value="public int FindAssignedEditPositionInRange (int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindAssignedEditPositionInRange(int32 startPosition, int32 endPosition, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAssignedEditPositionInRange (startPosition As Integer, endPosition As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindAssignedEditPositionInRange(int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindAssignedEditPositionInRange : int * int * bool -&gt; int" Usage="maskedTextProvider.FindAssignedEditPositionInRange (startPosition, endPosition, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPosition">
          <span data-ttu-id="80402-258">Liczony od zera pozycja w ciąg sformatowany miejsce rozpoczęcia wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-258">The zero-based position in the formatted string where the search starts.</span>
          </span>
        </param>
        <param name="endPosition">
          <span data-ttu-id="80402-259">Liczona od zera pozycja ciągu w formacie, gdy kończy się wyszukiwanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-259">The zero-based position in the formatted string where the search ends.</span>
          </span>
        </param>
        <param name="direction">
          <span data-ttu-id="80402-260">A <see cref="T:System.Boolean" /> wskazujący wyszukiwania kierunek; albo <see langword="true" /> wyszukiwania do przodu lub <see langword="false" /> wyszukiwania do tyłu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-260">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-261">Zwraca pozycję pierwszego przypisane można edytować pozycji między określonych pozycji za pomocą kierunek określony wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-261">Returns the position of the first assigned editable position between the specified positions using the specified search direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-262">W przypadku powodzenia <see cref="T:System.Int32" /> reprezentujący liczona od zera pozycja pierwszego przypisane można edytować pozycji napotkano; w przeciwnym razie <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-262">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first assigned editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-263">Ciąg sformatowany składa się z można edytować znaków i literały skopiowanych z maską.</span><span class="sxs-lookup"><span data-stu-id="80402-263">The formatted string is composed of editable characters and literals copied from the mask.</span></span> <span data-ttu-id="80402-264">Położenie znaku można edytować albo zostanie jest zajmowany przez znaku zgłoszenia skopiowane z maski, jeśli są one nieprzypisane lub nieprawidłowy znak wejściowy ma przypisanym danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="80402-264">The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.</span></span>  
  
 <span data-ttu-id="80402-265"><xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> Metoda jest używana do wyszukiwania pierwszego znaku przypisanej między dwóch określonych pozycji, włącznie, za pomocą kierunek określony wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="80402-265">The <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> method is used to search for the first assigned character between two specified positions, inclusive, using the specified search direction.</span></span> <span data-ttu-id="80402-266">Wynik później mogą być przekazywane jako parametr <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indeksatora w celu uzyskania przypisanej wartości w tym miejscu.</span><span class="sxs-lookup"><span data-stu-id="80402-266">The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the assigned value at this position.</span></span>  
  
 <span data-ttu-id="80402-267"><xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> i <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> metody są uzupełnia tej metody.</span><span class="sxs-lookup"><span data-stu-id="80402-267">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> methods are complements of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindEditPositionFrom">
      <MemberSignature Language="C#" Value="public int FindEditPositionFrom (int position, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindEditPositionFrom(int32 position, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindEditPositionFrom (position As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindEditPositionFrom(int position, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindEditPositionFrom : int * bool -&gt; int" Usage="maskedTextProvider.FindEditPositionFrom (position, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="80402-268">Liczony od zera pozycja w sformatowany ciąg ma się rozpocząć wyszukiwanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-268">The zero-based position in the formatted string to start the search.</span>
          </span>
        </param>
        <param name="direction">
          <span data-ttu-id="80402-269">A <see cref="T:System.Boolean" /> wskazujący wyszukiwania kierunek; albo <see langword="true" /> wyszukiwania do przodu lub <see langword="false" /> wyszukiwania do tyłu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-269">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-270">Zwraca pierwszą pozycję można edytować po określonej pozycji za pomocą kierunek określony wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-270">Returns the position of the first editable position after the specified position using the specified search direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-271">W przypadku powodzenia <see cref="T:System.Int32" /> reprezentujący liczony od zera pozycja pierwszą pozycję można edytować napotkano; w przeciwnym razie <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-271">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-272"><xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> Metoda jest używana do wyszukiwania następnej przypisane lub nieprzypisane można edytować pozycji w ciągu sformatowaną po określonej pozycji.</span><span class="sxs-lookup"><span data-stu-id="80402-272">The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> method is used to search for the next assigned or unassigned editable position in the formatted string after the specified position.</span></span>  
  
 <span data-ttu-id="80402-273"><xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> Metody jest uzupełnienia tej metody.</span><span class="sxs-lookup"><span data-stu-id="80402-273">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> method is the complement of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindEditPositionInRange">
      <MemberSignature Language="C#" Value="public int FindEditPositionInRange (int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindEditPositionInRange(int32 startPosition, int32 endPosition, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindEditPositionInRange (startPosition As Integer, endPosition As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindEditPositionInRange(int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindEditPositionInRange : int * int * bool -&gt; int" Usage="maskedTextProvider.FindEditPositionInRange (startPosition, endPosition, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPosition">
          <span data-ttu-id="80402-274">Liczony od zera pozycja w ciąg sformatowany miejsce rozpoczęcia wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-274">The zero-based position in the formatted string where the search starts.</span>
          </span>
        </param>
        <param name="endPosition">
          <span data-ttu-id="80402-275">Liczona od zera pozycja ciągu w formacie, gdy kończy się wyszukiwanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-275">The zero-based position in the formatted string where the search ends.</span>
          </span>
        </param>
        <param name="direction">
          <span data-ttu-id="80402-276">A <see cref="T:System.Boolean" /> wskazujący wyszukiwania kierunek; albo <see langword="true" /> wyszukiwania do przodu lub <see langword="false" /> wyszukiwania do tyłu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-276">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-277">Zwraca pierwszą pozycję można edytować między określonych pozycji za pomocą kierunek określony wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-277">Returns the position of the first editable position between the specified positions using the specified search direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-278">W przypadku powodzenia <see cref="T:System.Int32" /> reprezentujący liczony od zera pozycja pierwszą pozycję można edytować napotkano; w przeciwnym razie <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-278">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-279"><xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A> Metoda jest używana do wyszukiwania pierwszego znaku można edytować między dwóch określonych pozycji, włącznie, za pomocą kierunek określony wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="80402-279">The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A> method is used to search for the first editable character between two specified positions, inclusive, using the specified search direction.</span></span> <span data-ttu-id="80402-280">Wynik później mogą być przekazywane jako parametr <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indeksatora w celu uzyskania przypisanej wartości w tym miejscu.</span><span class="sxs-lookup"><span data-stu-id="80402-280">The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the assigned value at this position.</span></span>  
  
 <span data-ttu-id="80402-281"><xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> Metody jest uzupełnienia tej metody.</span><span class="sxs-lookup"><span data-stu-id="80402-281">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> method is the complement of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindNonEditPositionFrom">
      <MemberSignature Language="C#" Value="public int FindNonEditPositionFrom (int position, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindNonEditPositionFrom(int32 position, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNonEditPositionFrom (position As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindNonEditPositionFrom(int position, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindNonEditPositionFrom : int * bool -&gt; int" Usage="maskedTextProvider.FindNonEditPositionFrom (position, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="80402-282">Liczony od zera pozycja w sformatowany ciąg ma się rozpocząć wyszukiwanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-282">The zero-based position in the formatted string to start the search.</span>
          </span>
        </param>
        <param name="direction">
          <span data-ttu-id="80402-283">A <see cref="T:System.Boolean" /> wskazujący wyszukiwania kierunek; albo <see langword="true" /> wyszukiwania do przodu lub <see langword="false" /> wyszukiwania do tyłu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-283">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-284">Zwraca pierwszą pozycję nieedytowalnego po określonej pozycji za pomocą kierunek określony wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-284">Returns the position of the first non-editable position after the specified position using the specified search direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-285">W przypadku powodzenia <see cref="T:System.Int32" /> reprezentujący liczony od zera pozycja pierwszą pozycję literału napotkano; w przeciwnym razie <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-285">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first literal position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-286"><xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> Metoda jest używana do wyszukiwania następnej znak w ciągu sformatowaną po określonej pozycji.</span><span class="sxs-lookup"><span data-stu-id="80402-286">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> method is used to search for the next literal character in the formatted string after the specified position.</span></span> <span data-ttu-id="80402-287">Wynik później mogą być przekazywane jako parametr <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indeksatora, aby uzyskać wartość literału w tym miejscu.</span><span class="sxs-lookup"><span data-stu-id="80402-287">The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the literal value at this position.</span></span>  
  
 <span data-ttu-id="80402-288"><xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> Metody jest uzupełnienia tej metody.</span><span class="sxs-lookup"><span data-stu-id="80402-288">The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> method is the complement of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindNonEditPositionInRange">
      <MemberSignature Language="C#" Value="public int FindNonEditPositionInRange (int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindNonEditPositionInRange(int32 startPosition, int32 endPosition, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNonEditPositionInRange (startPosition As Integer, endPosition As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindNonEditPositionInRange(int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindNonEditPositionInRange : int * int * bool -&gt; int" Usage="maskedTextProvider.FindNonEditPositionInRange (startPosition, endPosition, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPosition">
          <span data-ttu-id="80402-289">Liczony od zera pozycja w ciąg sformatowany miejsce rozpoczęcia wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-289">The zero-based position in the formatted string where the search starts.</span>
          </span>
        </param>
        <param name="endPosition">
          <span data-ttu-id="80402-290">Liczona od zera pozycja ciągu w formacie, gdy kończy się wyszukiwanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-290">The zero-based position in the formatted string where the search ends.</span>
          </span>
        </param>
        <param name="direction">
          <span data-ttu-id="80402-291">A <see cref="T:System.Boolean" /> wskazujący wyszukiwania kierunek; albo <see langword="true" /> wyszukiwania do przodu lub <see langword="false" /> wyszukiwania do tyłu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-291">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-292">Zwraca pierwszą pozycję nieedytowalnego między określonych pozycji za pomocą kierunek określony wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-292">Returns the position of the first non-editable position between the specified positions using the specified search direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-293">W przypadku powodzenia <see cref="T:System.Int32" /> reprezentujący liczony od zera pozycja pierwszą pozycję literału napotkano; w przeciwnym razie <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-293">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first literal position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-294"><xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> Metoda jest używana do wyszukiwania pierwszy znak między dwóch określonych pozycji, włącznie, za pomocą kierunek określony wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="80402-294">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> method is used to search for the first literal character between two specified positions, inclusive, using the specified search direction.</span></span> <span data-ttu-id="80402-295">Wynik później mogą być przekazywane jako parametr <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indeksatora, aby uzyskać wartość literału w tym miejscu.</span><span class="sxs-lookup"><span data-stu-id="80402-295">The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the literal value at this position.</span></span>  
  
 <span data-ttu-id="80402-296"><xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A> Metody jest uzupełnienia tej metody.</span><span class="sxs-lookup"><span data-stu-id="80402-296">The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A> method is the complement of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindUnassignedEditPositionFrom">
      <MemberSignature Language="C#" Value="public int FindUnassignedEditPositionFrom (int position, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindUnassignedEditPositionFrom(int32 position, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindUnassignedEditPositionFrom (position As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindUnassignedEditPositionFrom(int position, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindUnassignedEditPositionFrom : int * bool -&gt; int" Usage="maskedTextProvider.FindUnassignedEditPositionFrom (position, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="80402-297">Liczony od zera pozycja w sformatowany ciąg ma się rozpocząć wyszukiwanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-297">The zero-based position in the formatted string to start the search.</span>
          </span>
        </param>
        <param name="direction">
          <span data-ttu-id="80402-298">A <see cref="T:System.Boolean" /> wskazujący wyszukiwania kierunek; albo <see langword="true" /> wyszukiwania do przodu lub <see langword="false" /> wyszukiwania do tyłu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-298">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-299">Zwraca pierwszą pozycję można edytować nieprzypisany po określonej pozycji za pomocą kierunek określony wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-299">Returns the position of the first unassigned editable position after the specified position using the specified search direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-300">W przypadku powodzenia <see cref="T:System.Int32" /> reprezentujący liczony od zera pozycja pierwszą pozycję można edytować nieprzypisany napotkano; w przeciwnym razie <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-300">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first unassigned editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-301">Ciąg sformatowany składa się z można edytować znaków i literały skopiowanych z maską.</span><span class="sxs-lookup"><span data-stu-id="80402-301">The formatted string is composed of editable characters and literals copied from the mask.</span></span> <span data-ttu-id="80402-302">Położenie znaku można edytować albo zostanie jest zajmowany przez znaku zgłoszenia skopiowane z maski, jeśli są one nieprzypisane lub nieprawidłowy znak wejściowy ma przypisanym danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="80402-302">The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.</span></span>  
  
 <span data-ttu-id="80402-303"><xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> Metoda jest używana do wyszukiwania dla pierwszego znaku nieprzypisane po określonym kierunku pozycji i wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="80402-303">The <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> method is used to search for the first unassigned character after a specified position and search direction.</span></span> <span data-ttu-id="80402-304">Znak monitu powinny zajmować tej pozycji.</span><span class="sxs-lookup"><span data-stu-id="80402-304">The prompt character should occupy this position.</span></span>  
  
 <span data-ttu-id="80402-305"><xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> i <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> metody są uzupełnia tej metody.</span><span class="sxs-lookup"><span data-stu-id="80402-305">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> methods are complements of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindUnassignedEditPositionInRange">
      <MemberSignature Language="C#" Value="public int FindUnassignedEditPositionInRange (int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindUnassignedEditPositionInRange(int32 startPosition, int32 endPosition, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindUnassignedEditPositionInRange (startPosition As Integer, endPosition As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindUnassignedEditPositionInRange(int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindUnassignedEditPositionInRange : int * int * bool -&gt; int" Usage="maskedTextProvider.FindUnassignedEditPositionInRange (startPosition, endPosition, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPosition">
          <span data-ttu-id="80402-306">Liczony od zera pozycja w ciąg sformatowany miejsce rozpoczęcia wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-306">The zero-based position in the formatted string where the search starts.</span>
          </span>
        </param>
        <param name="endPosition">
          <span data-ttu-id="80402-307">Liczona od zera pozycja ciągu w formacie, gdy kończy się wyszukiwanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-307">The zero-based position in the formatted string where the search ends.</span>
          </span>
        </param>
        <param name="direction">
          <span data-ttu-id="80402-308">A <see cref="T:System.Boolean" /> wskazujący wyszukiwania kierunek; albo <see langword="true" /> wyszukiwania do przodu lub <see langword="false" /> wyszukiwania do tyłu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-308">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-309">Zwraca pierwszą pozycję można edytować nieprzypisany między określonych pozycji za pomocą kierunek określony wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-309">Returns the position of the first unassigned editable position between the specified positions using the specified search direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-310">W przypadku powodzenia <see cref="T:System.Int32" /> reprezentujący liczony od zera pozycja pierwszą pozycję można edytować nieprzypisany napotkano; w przeciwnym razie <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-310">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first unassigned editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-311">Ciąg sformatowany składa się z można edytować znaków i literały skopiowanych z maską.</span><span class="sxs-lookup"><span data-stu-id="80402-311">The formatted string is composed of editable characters and literals copied from the mask.</span></span> <span data-ttu-id="80402-312">Położenie znaku można edytować albo zostanie jest zajmowany przez znaku zgłoszenia skopiowane z maski, jeśli są one nieprzypisane lub nieprawidłowy znak wejściowy ma przypisanym danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="80402-312">The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.</span></span>  
  
 <span data-ttu-id="80402-313"><xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> Metoda jest używana do wyszukiwania dla pierwszego znaku nieprzypisane między dwóch określonych pozycji, włącznie, za pomocą kierunek określony wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="80402-313">The <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> method is used to search for the first unassigned character between two specified positions, inclusive, using the specified search direction.</span></span> <span data-ttu-id="80402-314">Znak monitu powinny zajmować tej pozycji.</span><span class="sxs-lookup"><span data-stu-id="80402-314">The prompt character should occupy this position.</span></span>  
  
 <span data-ttu-id="80402-315"><xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> i <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> metody są uzupełnia tej metody.</span><span class="sxs-lookup"><span data-stu-id="80402-315">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> methods are complements of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetOperationResultFromHint">
      <MemberSignature Language="C#" Value="public static bool GetOperationResultFromHint (System.ComponentModel.MaskedTextResultHint hint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetOperationResultFromHint(valuetype System.ComponentModel.MaskedTextResultHint hint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetOperationResultFromHint (hint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetOperationResultFromHint(System::ComponentModel::MaskedTextResultHint hint);" />
      <MemberSignature Language="F#" Value="static member GetOperationResultFromHint : System.ComponentModel.MaskedTextResultHint -&gt; bool" Usage="System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint hint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hint" Type="System.ComponentModel.MaskedTextResultHint" />
      </Parameters>
      <Docs>
        <param name="hint">
          <span data-ttu-id="80402-316">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> wartość zazwyczaj uzyskiwane jako parametr wyjściowy z poprzedniej operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-316">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> value typically obtained as an output parameter from a previous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-317">Określa, czy określony <see cref="T:System.ComponentModel.MaskedTextResultHint" /> oznacza powodzenie lub niepowodzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-317">Determines whether the specified <see cref="T:System.ComponentModel.MaskedTextResultHint" /> denotes success or failure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-318">
            <see langword="true" /> Jeśli określony <see cref="T:System.ComponentModel.MaskedTextResultHint" /> wartość reprezentuje pomyślnie; w przeciwnym razie <see langword="false" /> Jeśli termin reprezentuje awarii.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-318">
              <see langword="true" /> if the specified <see cref="T:System.ComponentModel.MaskedTextResultHint" /> value represents a success; otherwise, <see langword="false" /> if it represents failure.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-319">Następujące metody <xref:System.ComponentModel.MaskedTextProvider> klasa zawiera parametr typu <xref:System.ComponentModel.MaskedTextResultHint> używany do wypełniania wyjściowego informacje na temat operacji metody: <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Clear%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>, <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> , <xref:System.ComponentModel.MaskedTextProvider.Set%2A>, <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A>, i <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>.</span><span class="sxs-lookup"><span data-stu-id="80402-319">The following methods of the <xref:System.ComponentModel.MaskedTextProvider> class contain a parameter of type <xref:System.ComponentModel.MaskedTextResultHint> that is used to output information about the operation of the method: <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Clear%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>, <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>, <xref:System.ComponentModel.MaskedTextProvider.Set%2A>, <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A>, and <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>.</span></span> <span data-ttu-id="80402-320"><xref:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint%2A> Metoda interpretuje tę wartość i zwraca wartość logiczną wskazującą, czy <xref:System.ComponentModel.MaskedTextResultHint> zasygnalizują, że operacja zakończyła się powodzenie lub niepowodzenie.</span><span class="sxs-lookup"><span data-stu-id="80402-320">The <xref:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint%2A> method interprets this value and returns a Boolean value that indicates whether the <xref:System.ComponentModel.MaskedTextResultHint> has signaled that the operation was a success or failure.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.MaskedTextResultHint" />
      </Docs>
    </Member>
    <Member MemberName="IncludeLiterals">
      <MemberSignature Language="C#" Value="public bool IncludeLiterals { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeLiterals" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeLiterals As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeLiterals { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeLiterals : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80402-321">Pobiera lub ustawia wartość wskazującą, czy mają być uwzględniane znaki maski wprowadzania ciągu w formacie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-321">Gets or sets a value that indicates whether literal characters in the input mask should be included in the formatted string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80402-322">
            <see langword="true" /> Jeśli literały są uwzględniane; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-322">
              <see langword="true" /> if literals are included; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="80402-323">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-323">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-324"><xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> i <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> właściwości określi, czy znaki monitu i literału są wyświetlane podczas wywoływania metody <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="80402-324">The <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties will determine whether prompt and literal characters appear when calling the <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method.</span></span> <span data-ttu-id="80402-325">Przez ustawienie obu tych właściwości na `false`, analizowany ciąg będzie reprezentować tylko znaków wprowadzonych przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="80402-325">By setting both of these properties to `false`, the parsed string will represent only the characters entered by the user.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <Member MemberName="IncludePrompt">
      <MemberSignature Language="C#" Value="public bool IncludePrompt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludePrompt" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludePrompt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludePrompt { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludePrompt : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.IncludePrompt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80402-326">Pobiera lub ustawia wartość wskazującą czy <see cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" /> jest używana do reprezentowania braku danych wejściowych podczas wyświetlania sformatowanego ciągu użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-326">Gets or sets a value indicating whether <see cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" /> is used to represent the absence of user input when displaying the formatted string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80402-327">
            <see langword="true" /> Jeśli znak monitu jest używana do reprezentowania pozycji, których nie ma danych wprowadzonych przez użytkownika został podany; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-327">
              <see langword="true" /> if the prompt character is used to represent the positions where no user input was provided; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="80402-328">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-328">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-329"><xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> i <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> właściwości określi, czy znaki monitu i literału są wyświetlane podczas wywoływania metody <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="80402-329">The <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties will determine whether prompt and literal characters appear when calling the <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method.</span></span> <span data-ttu-id="80402-330">Przez ustawienie obu tych właściwości na `false`, analizowany ciąg będzie reprezentować tylko znaków wprowadzonych przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="80402-330">By setting both of these properties to `false`, the parsed string will represent only the characters entered by the user.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InsertAt">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="80402-331">Wstawia znak lub ciągu na określonej pozycji w ciągu sformatowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-331">Inserts a character or string at a specific position within the formatted string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public bool InsertAt (char input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InsertAt(char input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAt (input As Char, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InsertAt(char input, int position);" />
      <MemberSignature Language="F#" Value="member this.InsertAt : char * int -&gt; bool" Usage="maskedTextProvider.InsertAt (input, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="80402-332">
            <see cref="T:System.Char" /> Do wstawienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-332">The <see cref="T:System.Char" /> to be inserted.</span>
          </span>
        </param>
        <param name="position">
          <span data-ttu-id="80402-333">Liczony od zera pozycja w ciągu sformatowaną Wstaw znak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-333">The zero-based position in the formatted string to insert the character.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-334">Wstawia określony znak na określonej pozycji w ciągu sformatowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-334">Inserts the specified character at the specified position within the formatted string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-335">
            <see langword="true" /> Jeśli wstawienie powiodło się; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-335">
              <see langword="true" /> if the insertion was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-336"><xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> Metody Wstawia znak na pierwszą pozycję Edytuj w tym miejscu lub ponad określona przez `pos` parametru.</span><span class="sxs-lookup"><span data-stu-id="80402-336">The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts a character into the first edit position at or beyond that specified by the `pos` parameter.</span></span> <span data-ttu-id="80402-337">Ta metoda zostanie przesunięte wszystkie istniejące znaki po punktu wstawiania przez jedną pozycję, aby zwolnić miejsce dla wstawionego `input` znaków.</span><span class="sxs-lookup"><span data-stu-id="80402-337">This method will shift all existing characters after the insertion point over by one position to make room for the inserted `input` character.</span></span> <span data-ttu-id="80402-338">Jeśli wystąpi jedno z następujących błędów, wstawiania nie jest wykonywane, i metoda zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="80402-338">If one of the following errors occurs, the insertion is not performed, and the method returns `false`.</span></span>  
  
-   <span data-ttu-id="80402-339">`pos` Parametrów jest mniejsza niż zero lub większa niż <xref:System.ComponentModel.MaskedTextProvider.Length%2A> sformatowanego ciągu.</span><span class="sxs-lookup"><span data-stu-id="80402-339">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="80402-340">Nie można odnaleźć znaku można edytować ciągu w formacie na lub po określonej pozycji `pos`.</span><span class="sxs-lookup"><span data-stu-id="80402-340">An editable character was not found in the formatted string at or beyond the specified position, `pos`.</span></span>  
  
-   <span data-ttu-id="80402-341">Znak wstawiania `input`, nie jest prawidłowy znak wejściowy, ponieważ nie jest drukowania lub jest niezgodny z jej odpowiadającego mu elementu maski.</span><span class="sxs-lookup"><span data-stu-id="80402-341">The insertion character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="80402-342">Brak nie dostępnych pozycji z prawej strony punktu wstawiania, aby nie można przesunąć istniejące znaki.</span><span class="sxs-lookup"><span data-stu-id="80402-342">There are no available positions to the right of the insertion point, so that existing characters cannot be shifted.</span></span>  
  
-   <span data-ttu-id="80402-343">Przesunięcie istniejące znaki dałby w efekcie naruszenie maski.</span><span class="sxs-lookup"><span data-stu-id="80402-343">Shifting the existing characters would produce a violation of the mask.</span></span>  
  
 <span data-ttu-id="80402-344">Pusta `input` ciągu nie spowoduje zmiany w sformatowany ciąg, ale zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="80402-344">An empty `input` string will cause no change in the formatted string, but will return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public bool InsertAt (string input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InsertAt(string input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAt (input As String, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InsertAt(System::String ^ input, int position);" />
      <MemberSignature Language="F#" Value="member this.InsertAt : string * int -&gt; bool" Usage="maskedTextProvider.InsertAt (input, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="80402-345">
            <see cref="T:System.String" /> Do wstawienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-345">The <see cref="T:System.String" /> to be inserted.</span>
          </span>
        </param>
        <param name="position">
          <span data-ttu-id="80402-346">Liczony od zera pozycja w sformatowany ciąg, aby wstawić ciąg wejściowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-346">The zero-based position in the formatted string to insert the input string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-347">Wstawia określony ciąg na określonej pozycji w ciągu sformatowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-347">Inserts the specified string at a specified position within the formatted string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-348">
            <see langword="true" /> Jeśli wstawienie powiodło się; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-348">
              <see langword="true" /> if the insertion was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-349"><xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> Metody wstawia każdego znaku z `input` ciąg na pozycje edycji znajdujący się w pozycji `pos` i nowszych.</span><span class="sxs-lookup"><span data-stu-id="80402-349">The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts each character from the `input` string into the edit positions located at position `pos` and beyond.</span></span> <span data-ttu-id="80402-350">Ta metoda zostanie przesunięte wszystkie istniejące znaki po znaku wstawione przez jedną pozycję dla każdego punktu wstawiania.</span><span class="sxs-lookup"><span data-stu-id="80402-350">This method will shift all existing characters after the insertion point over by one position for each inserted character.</span></span> <span data-ttu-id="80402-351">Jeśli wystąpi jedno z następujących błędów, wstawiania nie jest wykonywane, i metoda zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="80402-351">If one of the following errors occurs, no insertion is performed, and the method returns `false`.</span></span>  
  
-   <span data-ttu-id="80402-352">`pos` Parametrów jest mniejsza niż zero lub większa niż <xref:System.ComponentModel.MaskedTextProvider.Length%2A> sformatowanego ciągu.</span><span class="sxs-lookup"><span data-stu-id="80402-352">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="80402-353">Istnieje nieedytowalny wystarczająco znaków ciągu w formacie na lub po określonej pozycji `pos`, aby wstawić wszystkie znaki od `input` ciągu.</span><span class="sxs-lookup"><span data-stu-id="80402-353">Not enough editable characters exist in the formatted string at or beyond the specified position, `pos`, to insert all of the characters from the `input` string.</span></span>  
  
-   <span data-ttu-id="80402-354">Co najmniej jeden znak wstawiania nie są prawidłowy znak wejściowy ponieważ nie są drukowania lub ich odpowiadającego mu elementu maska nie są zgodne.</span><span class="sxs-lookup"><span data-stu-id="80402-354">One or more of the insertion characters are not a valid input character because they are not printable or do not match their corresponding mask element.</span></span>  
  
-   <span data-ttu-id="80402-355">Nie ma wystarczająco dużo pozycji z prawej strony punktu wstawiania, aby nie można przesunąć istniejące znaki.</span><span class="sxs-lookup"><span data-stu-id="80402-355">There are not enough available positions to the right of the insertion point, so that existing characters cannot be shifted.</span></span>  
  
-   <span data-ttu-id="80402-356">Przesunięcie istniejące znaki dałby w efekcie naruszenie maski.</span><span class="sxs-lookup"><span data-stu-id="80402-356">Shifting the existing characters would produce a violation of the mask.</span></span> <span data-ttu-id="80402-357">Należy pamiętać, że ta zmieni występuje podczas wstawiania każdy znak oddzielnie.</span><span class="sxs-lookup"><span data-stu-id="80402-357">Note that this shifting occurs during the insertion of each individual character.</span></span>  
  
 <span data-ttu-id="80402-358">Pusta `input` ciągu nie spowoduje zmiany w sformatowany ciąg, ale zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="80402-358">An empty `input` string will cause no change in the formatted string, but will return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="80402-359">
            <paramref name="input" /> Parametr jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-359">The <paramref name="input" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public bool InsertAt (char input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InsertAt(char input, int32 position, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAt (input As Char, position As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InsertAt(char input, int position, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.InsertAt : char * int *  *  -&gt; bool" Usage="maskedTextProvider.InsertAt (input, position, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="80402-360">
            <see cref="T:System.Char" /> Do wstawienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-360">The <see cref="T:System.Char" /> to be inserted.</span>
          </span>
        </param>
        <param name="position">
          <span data-ttu-id="80402-361">Liczony od zera pozycja w ciągu sformatowaną Wstaw znak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-361">The zero-based position in the formatted string to insert the character.</span>
          </span>
        </param>
        <param name="testPosition">
          <span data-ttu-id="80402-362">Jeśli metoda zakończy się pomyślnie, ostatni umieść gdzie wstawione znaku; w przeciwnym razie pierwszy pozycji, których wstawienie nie powiodło się.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-362">If the method is successful, the last position where a character was inserted; otherwise, the first position where the insertion failed.</span>
          </span>
          <span data-ttu-id="80402-363">Parametr wyjściowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-363">An output parameter.</span>
          </span>
        </param>
        <param name="resultHint">
          <span data-ttu-id="80402-364">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> krótkiej formie opisujący wynik operacji wstawiania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-364">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the insertion operation.</span>
          </span>
          <span data-ttu-id="80402-365">Parametr wyjściowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-365">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-366">Wstawia określony znak na określonej pozycji w ciągu sformatowaną, zwracanie ostatniej pozycji wstawiania i stan operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-366">Inserts the specified character at the specified position within the formatted string, returning the last insertion position and the status of the operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-367">
            <see langword="true" /> Jeśli wstawienie powiodło się; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-367">
              <see langword="true" /> if the insertion was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-368"><xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> Metody Wstawia znak na pierwszą pozycję Edytuj w tym miejscu lub ponad określona przez `pos` parametru.</span><span class="sxs-lookup"><span data-stu-id="80402-368">The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts a character into the first edit position at or beyond that specified by the `pos` parameter.</span></span> <span data-ttu-id="80402-369">Ta metoda zostanie przesunięte wszystkie istniejące znaki po punktu wstawiania przez jedną pozycję, aby zwolnić miejsce dla wstawionego `input` znaków.</span><span class="sxs-lookup"><span data-stu-id="80402-369">This method will shift all existing characters after the insertion point over by one position to make room for the inserted `input` character.</span></span> <span data-ttu-id="80402-370">Jeśli wystąpi jedno z następujących błędów, wstawiania nie jest wykonywane, i metoda zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="80402-370">If one of the following errors occurs, the insertion is not performed, and the method returns `false`.</span></span>  
  
-   <span data-ttu-id="80402-371">`pos` Parametrów jest mniejsza niż zero lub większa niż <xref:System.ComponentModel.MaskedTextProvider.Length%2A> sformatowanego ciągu.</span><span class="sxs-lookup"><span data-stu-id="80402-371">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="80402-372">Nie można odnaleźć znaku można edytować ciągu w formacie na lub po określonej pozycji `pos`.</span><span class="sxs-lookup"><span data-stu-id="80402-372">An editable character was not found in the formatted string at or beyond the specified position, `pos`.</span></span>  
  
-   <span data-ttu-id="80402-373">Znak wstawiania `input`, nie jest prawidłowy znak wejściowy, ponieważ nie jest drukowania lub jest niezgodny z jej odpowiadającego mu elementu maski.</span><span class="sxs-lookup"><span data-stu-id="80402-373">The insertion character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="80402-374">Brak nie dostępnych pozycji z prawej strony punktu wstawiania, aby nie można przesunąć istniejące znaki.</span><span class="sxs-lookup"><span data-stu-id="80402-374">There are no available positions to the right of the insertion point, so that existing characters cannot be shifted.</span></span>  
  
-   <span data-ttu-id="80402-375">Przesunięcie istniejące znaki dałby w efekcie naruszenie maski.</span><span class="sxs-lookup"><span data-stu-id="80402-375">Shifting the existing characters would produce a violation of the mask.</span></span>  
  
 <span data-ttu-id="80402-376">Pusta `input` ciągu nie spowoduje zmiany w sformatowany ciąg, ale zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="80402-376">An empty `input` string will cause no change in the formatted string, but will return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public bool InsertAt (string input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InsertAt(string input, int32 position, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAt (input As String, position As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InsertAt(System::String ^ input, int position, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.InsertAt : string * int *  *  -&gt; bool" Usage="maskedTextProvider.InsertAt (input, position, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="80402-377">
            <see cref="T:System.String" /> Do wstawienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-377">The <see cref="T:System.String" /> to be inserted.</span>
          </span>
        </param>
        <param name="position">
          <span data-ttu-id="80402-378">Liczony od zera pozycja w sformatowany ciąg, aby wstawić ciąg wejściowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-378">The zero-based position in the formatted string to insert the input string.</span>
          </span>
        </param>
        <param name="testPosition">
          <span data-ttu-id="80402-379">Jeśli metoda zakończy się pomyślnie, ostatni umieść gdzie wstawione znaku; w przeciwnym razie pierwszy pozycji, których wstawienie nie powiodło się.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-379">If the method is successful, the last position where a character was inserted; otherwise, the first position where the insertion failed.</span>
          </span>
          <span data-ttu-id="80402-380">Parametr wyjściowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-380">An output parameter.</span>
          </span>
        </param>
        <param name="resultHint">
          <span data-ttu-id="80402-381">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> krótkiej formie opisujący wynik operacji wstawiania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-381">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the insertion operation.</span>
          </span>
          <span data-ttu-id="80402-382">Parametr wyjściowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-382">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-383">Wstawia określony ciąg na określonej pozycji w ciągu sformatowaną, zwracanie ostatniej pozycji wstawiania i stan operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-383">Inserts the specified string at a specified position within the formatted string, returning the last insertion position and the status of the operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-384">
            <see langword="true" /> Jeśli wstawienie powiodło się; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-384">
              <see langword="true" /> if the insertion was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-385"><xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> Metody wstawia każdego znaku z `input` ciąg na pozycje edycji znajdujący się w pozycji `pos` i nowszych.</span><span class="sxs-lookup"><span data-stu-id="80402-385">The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts each character from the `input` string into the edit positions located at position `pos` and beyond.</span></span> <span data-ttu-id="80402-386">Ta metoda zostanie przesunięte wszystkie istniejące znaki po znaku wstawione przez jedną pozycję dla każdego punktu wstawiania.</span><span class="sxs-lookup"><span data-stu-id="80402-386">This method will shift all existing characters after the insertion point over by one position for each inserted character.</span></span> <span data-ttu-id="80402-387">Jeśli wystąpi jedno z następujących błędów, wstawiania nie jest wykonywane, i metoda zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="80402-387">If one of the following errors occurs, no insertion is performed, and the method returns `false`.</span></span>  
  
-   <span data-ttu-id="80402-388">`pos` Parametrów jest mniejsza niż zero lub większa niż <xref:System.ComponentModel.MaskedTextProvider.Length%2A> sformatowanego ciągu.</span><span class="sxs-lookup"><span data-stu-id="80402-388">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="80402-389">Istnieje nieedytowalny wystarczająco znaków ciągu w formacie na lub po określonej pozycji `pos`, aby wstawić wszystkie znaki od `input` ciągu.</span><span class="sxs-lookup"><span data-stu-id="80402-389">Not enough editable characters exist in the formatted string at or beyond the specified position, `pos`, to insert all of the characters from the `input` string.</span></span>  
  
-   <span data-ttu-id="80402-390">Co najmniej jeden znak wstawiania nie są prawidłowy znak wejściowy ponieważ nie są drukowania lub ich odpowiadającego mu elementu maska nie są zgodne.</span><span class="sxs-lookup"><span data-stu-id="80402-390">One or more of the insertion characters are not a valid input character because they are not printable or do not match their corresponding mask element.</span></span>  
  
-   <span data-ttu-id="80402-391">Nie ma wystarczająco dużo pozycji z prawej strony punktu wstawiania, aby nie można przesunąć istniejące znaki.</span><span class="sxs-lookup"><span data-stu-id="80402-391">There are not enough available positions to the right of the insertion point, so that existing characters cannot be shifted.</span></span>  
  
-   <span data-ttu-id="80402-392">Przesunięcie istniejące znaki dałby w efekcie naruszenie maski.</span><span class="sxs-lookup"><span data-stu-id="80402-392">Shifting the existing characters would produce a violation of the mask.</span></span> <span data-ttu-id="80402-393">Należy pamiętać, że ta zmieni występuje podczas wstawiania każdy znak oddzielnie.</span><span class="sxs-lookup"><span data-stu-id="80402-393">Note that this shifting occurs during the insertion of each individual character.</span></span>  
  
 <span data-ttu-id="80402-394">Pusta `input` ciągu nie spowoduje zmiany w sformatowany ciąg, ale zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="80402-394">An empty `input` string will cause no change in the formatted string, but will return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="80402-395">
            <paramref name="input" /> Parametr jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-395">The <paramref name="input" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="InvalidIndex">
      <MemberSignature Language="C#" Value="public static int InvalidIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 InvalidIndex" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvalidIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int InvalidIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.InvalidIndex : int" Usage="System.ComponentModel.MaskedTextProvider.InvalidIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80402-396">Pobiera górna granica zakresu nieprawidłowy indeksów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-396">Gets the upper bound of the range of invalid indexes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80402-397">Wartość reprezentująca największy nieprawidłowy indeks, zgodnie z ustaleniami implementacja dostawcy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-397">A value representing the largest invalid index, as determined by the provider implementation.</span>
          </span>
          <span data-ttu-id="80402-398">Na przykład jeśli najniższy prawidłowy indeks ma wartość 0, ta właściwość Zwróć -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-398">For example, if the lowest valid index is 0, this property will return -1.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-399"><xref:System.ComponentModel.MaskedTextProvider.InvalidIndex%2A> Właściwość jest używana do reprezentowania wynik, który jest nieprawidłowy dla operacji indeksowania, takich jak <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="80402-399">The <xref:System.ComponentModel.MaskedTextProvider.InvalidIndex%2A> property is used to represent a result that is not valid for indexing operations, such as the <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> method.</span></span>  
  
 <span data-ttu-id="80402-400">Gdy korzystają z dostawcy lub implementować własnych, należy używać tej właściwości decyzji o tym, jeśli indeks jest nieprawidłowy, zamiast kodować wiedzy z nieprawidłowymi wartościami.</span><span class="sxs-lookup"><span data-stu-id="80402-400">When you use the provider or implement your own, you should use this property to decide if an index is invalid, rather than hard-coding knowledge of invalid values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsAvailablePosition">
      <MemberSignature Language="C#" Value="public bool IsAvailablePosition (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAvailablePosition(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAvailablePosition (position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAvailablePosition(int position);" />
      <MemberSignature Language="F#" Value="member this.IsAvailablePosition : int -&gt; bool" Usage="maskedTextProvider.IsAvailablePosition position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="80402-401">Liczony od zera pozycja w masce do testowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-401">The zero-based position in the mask to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-402">Określa, czy określona pozycja jest dostępne do przypisania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-402">Determines whether the specified position is available for assignment.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-403">
            <see langword="true" /> Jeśli określonej pozycji w ciągu sformatowaną można edytować, a nie został przypisany do jeszcze; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-403">
              <see langword="true" /> if the specified position in the formatted string is editable and has not been assigned to yet; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-404"><xref:System.ComponentModel.MaskedTextProvider.IsAvailablePosition%2A> Metoda zwraca `true` tylko wtedy, gdy spełnione są wszystkie poniższe warunki:</span><span class="sxs-lookup"><span data-stu-id="80402-404">The <xref:System.ComponentModel.MaskedTextProvider.IsAvailablePosition%2A> method returns `true` only if all of the following conditions are true:</span></span>  
  
-   <span data-ttu-id="80402-405">`pos` Parametru znajduje się w granicach ciąg sformatowany; jego wartość jest większa niż lub równa zero i mniejsza niż <xref:System.ComponentModel.MaskedTextProvider.Length%2A> sformatowanego ciągu.</span><span class="sxs-lookup"><span data-stu-id="80402-405">The `pos` parameter is within the bounds of the formatted string; that is, its value is greater than or equal to zero and less than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="80402-406">Określona pozycja jest znakiem można edytować.</span><span class="sxs-lookup"><span data-stu-id="80402-406">The specified position is an editable character.</span></span>  
  
-   <span data-ttu-id="80402-407">Znak nie ma już przypisane do tej pozycji.</span><span class="sxs-lookup"><span data-stu-id="80402-407">A character has not already been assigned to this position.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsEditPosition">
      <MemberSignature Language="C#" Value="public bool IsEditPosition (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEditPosition(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEditPosition (position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEditPosition(int position);" />
      <MemberSignature Language="F#" Value="member this.IsEditPosition : int -&gt; bool" Usage="maskedTextProvider.IsEditPosition position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="80402-408">Liczony od zera pozycja w masce do testowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-408">The zero-based position in the mask to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-409">Określa, czy można edytować określonej pozycji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-409">Determines whether the specified position is editable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-410">
            <see langword="true" /> w przypadku określonej pozycji w ciągu sformatowaną można edytować; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-410">
              <see langword="true" /> if the specified position in the formatted string is editable; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-411"><xref:System.ComponentModel.MaskedTextProvider.IsEditPosition%2A> Metoda zwraca `true` tylko wtedy, gdy są spełnione oba poniższe warunki:</span><span class="sxs-lookup"><span data-stu-id="80402-411">The <xref:System.ComponentModel.MaskedTextProvider.IsEditPosition%2A> method returns `true` only if both of the following conditions are true:</span></span>  
  
-   <span data-ttu-id="80402-412">`pos` Parametru znajduje się w granicach ciąg sformatowany; jego wartość jest większa niż lub równa zero i mniejsza niż <xref:System.ComponentModel.MaskedTextProvider.Length%2A> sformatowanego ciągu.</span><span class="sxs-lookup"><span data-stu-id="80402-412">The `pos` parameter is within the bounds of the formatted string; that is, its value is greater than or equal to zero and less than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="80402-413">Określona pozycja jest znakiem można edytować.</span><span class="sxs-lookup"><span data-stu-id="80402-413">The specified position is an editable character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsPassword">
      <MemberSignature Language="C#" Value="public bool IsPassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPassword" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.IsPassword" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPassword As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPassword { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsPassword : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.IsPassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80402-414">Pobiera lub ustawia wartość określającą, czy ochrona za pomocą hasła powinny być stosowane do sformatowanego ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-414">Gets or sets a value that determines whether password protection should be applied to the formatted string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80402-415">
            <see langword="true" /> Jeśli ciąg wejściowy jest traktowane jako ciąg hasła. w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-415">
              <see langword="true" /> if the input string is to be treated as a password string; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="80402-416">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-416">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-417">Ochrona za pomocą hasła może być inicjowana przy użyciu jednej z następujących sposobów:</span><span class="sxs-lookup"><span data-stu-id="80402-417">Password protection can be initiated using one of the following two ways:</span></span>  
  
-   <span data-ttu-id="80402-418">Ustawienie <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> właściwości niż`null` wartości.</span><span class="sxs-lookup"><span data-stu-id="80402-418">Setting the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property to a non-`null` value.</span></span>  
  
-   <span data-ttu-id="80402-419">Ustawienie <xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A> właściwości `true`., który określa również <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> właściwości <xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> wartość.</span><span class="sxs-lookup"><span data-stu-id="80402-419">Setting the <xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A> property to `true`., which also sets the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property to the <xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> value.</span></span>  
  
 <span data-ttu-id="80402-420"><xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A> jest używany przez <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> i <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> metod w celu ustalenia, czy Wyświetl znakom wejściowy lub przesłaniać je za pomocą <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>.</span><span class="sxs-lookup"><span data-stu-id="80402-420"><xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A> is used by the <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> methods to determine whether to reveal the actual input characters or obscure them with <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <Member MemberName="IsValidInputChar">
      <MemberSignature Language="C#" Value="public static bool IsValidInputChar (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidInputChar(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidInputChar (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidInputChar(char c);" />
      <MemberSignature Language="F#" Value="static member IsValidInputChar : char -&gt; bool" Usage="System.ComponentModel.MaskedTextProvider.IsValidInputChar c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="80402-421">
            <see cref="T:System.Char" /> Wartość do sprawdzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-421">The <see cref="T:System.Char" /> value to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-422">Określa, czy określony znak jest nieprawidłowy znak wejściowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-422">Determines whether the specified character is a valid input character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-423">
            <see langword="true" /> Jeśli określony znak zawiera prawidłową wartość wejściowa; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-423">
              <see langword="true" /> if the specified character contains a valid input value; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-424">Prawidłowe znaki wejściowych obejmują wszystkie drukowalne znaki, które zawierają litery, cyfry, znaki interpunkcyjne, symbole i znaku spacji.</span><span class="sxs-lookup"><span data-stu-id="80402-424">Valid input characters include all printable characters, which include letters, digits, punctuation, symbols and the space character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
      </Docs>
    </Member>
    <Member MemberName="IsValidMaskChar">
      <MemberSignature Language="C#" Value="public static bool IsValidMaskChar (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidMaskChar(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidMaskChar (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidMaskChar(char c);" />
      <MemberSignature Language="F#" Value="static member IsValidMaskChar : char -&gt; bool" Usage="System.ComponentModel.MaskedTextProvider.IsValidMaskChar c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="80402-425">
            <see cref="T:System.Char" /> Wartość do sprawdzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-425">The <see cref="T:System.Char" /> value to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-426">Określa, czy określony znak jest znak prawidłową maskę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-426">Determines whether the specified character is a valid mask character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-427">
            <see langword="true" /> Jeśli określony znak zawiera wartość prawidłową maskę; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-427">
              <see langword="true" /> if the specified character contains a valid mask value; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-428">Prawidłowa maska znaki to wszystkich znaków drukowalnych, które obejmują litery, cyfry, znaki interpunkcyjne, symbole i znaku spacji.</span><span class="sxs-lookup"><span data-stu-id="80402-428">Valid mask characters include all printable characters, which include letters, digits, punctuation, symbols and the space character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName="IsValidPasswordChar">
      <MemberSignature Language="C#" Value="public static bool IsValidPasswordChar (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidPasswordChar(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidPasswordChar (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidPasswordChar(char c);" />
      <MemberSignature Language="F#" Value="static member IsValidPasswordChar : char -&gt; bool" Usage="System.ComponentModel.MaskedTextProvider.IsValidPasswordChar c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="80402-429">
            <see cref="T:System.Char" /> Wartość do sprawdzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-429">The <see cref="T:System.Char" /> value to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-430">Określa, czy określony znak jest znak prawidłowe hasło.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-430">Determines whether the specified character is a valid password character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-431">
            <see langword="true" /> Jeśli określony znak zawiera wartość prawidłowego hasła; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-431">
              <see langword="true" /> if the specified character contains a valid password value; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-432">Znaki prawidłowe hasło to wszystkich znaków drukowalnych i znak null, która jest używana do wyłączenia funkcji hasła.</span><span class="sxs-lookup"><span data-stu-id="80402-432">Valid password characters include all printable characters and the null character, which is used to disable password functionality.</span></span> <span data-ttu-id="80402-433">Drukowalne znaki to litery, cyfry, znaki interpunkcyjne, symbole i znaku spacji.</span><span class="sxs-lookup"><span data-stu-id="80402-433">Printable characters include letters, digits, punctuation, symbols and the space character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IsPassword" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public char this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char default[int] { char get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : char" Usage="System.ComponentModel.MaskedTextProvider.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="80402-434">Liczony od zera indeks elementu do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-434">A zero-based index of the element to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-435">Pobiera element w określonej pozycji w ciągu sformatowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-435">Gets the element at the specified position in the formatted string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80402-436">
            <see cref="T:System.Char" /> w określonej pozycji w ciągu sformatowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-436">The <see cref="T:System.Char" /> at the specified position in the formatted string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-437"><xref:System.ComponentModel.MaskedTextProvider.Item%2A> Właściwość jest standardowe indeksatora dla <xref:System.ComponentModel.MaskedTextProvider> klasy.</span><span class="sxs-lookup"><span data-stu-id="80402-437">The <xref:System.ComponentModel.MaskedTextProvider.Item%2A> property is the standard indexer for the <xref:System.ComponentModel.MaskedTextProvider> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="80402-438">
            <paramref name="index" /> jest większa niż zero lub większa niż <see cref="P:System.ComponentModel.MaskedTextProvider.Length" /> maski.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-438">
              <paramref name="index" /> is less than zero or greater than or equal to the <see cref="P:System.ComponentModel.MaskedTextProvider.Length" /> of the mask.</span>
          </span>
        </exception>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
      </Docs>
    </Member>
    <Member MemberName="LastAssignedPosition">
      <MemberSignature Language="C#" Value="public int LastAssignedPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LastAssignedPosition" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastAssignedPosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LastAssignedPosition { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LastAssignedPosition : int" Usage="System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80402-439">Pobiera indeks maski po prawej stronie znak wejściowy przypisany do maski.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-439">Gets the index in the mask of the rightmost input character that has been assigned to the mask.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80402-440">Jeśli co najmniej jeden znak wejściowy został przypisany do maski, <see cref="T:System.Int32" /> zawierających indeks po prawej stronie przypisane pozycji; w przeciwnym razie, jeśli przypisano pozycji, <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-440">If at least one input character has been assigned to the mask, an <see cref="T:System.Int32" /> containing the index of rightmost assigned position; otherwise, if no position has been assigned, <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-441"><xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> Właściwość reprezentuje najdalszych pozycji edycji do maski pokrewny ze źródłem, przypisany znak wejściowy.</span><span class="sxs-lookup"><span data-stu-id="80402-441">The <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> property represents the farthest edit position in the mask, relative to the origin, that has been assigned an input character.</span></span> <span data-ttu-id="80402-442">Dla języków odczytu od lewej do prawej (od lewej do prawej), takich jak angielski to po prawej stronie przypisane pozycji; dla języków odczytać od prawej do lewej (od prawej do lewej) to pozycja po lewej stronie.</span><span class="sxs-lookup"><span data-stu-id="80402-442">For languages read left-to-right (LTR), such as English, this is the rightmost assigned position; for languages read right-to-left (RTL), this would be the leftmost position.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.ComponentModel.MaskedTextProvider.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80402-443">Pobiera długość maski, go nie ma żadnych maska modyfikator znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-443">Gets the length of the mask, absent any mask modifier characters.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80402-444">
            <see cref="T:System.Int32" /> Zawierające liczbę pozycji maski, z wyjątkiem znaków, które modyfikują maska wprowadzania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-444">An <see cref="T:System.Int32" /> containing the number of positions in the mask, excluding characters that modify mask input.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-445"><xref:System.ComponentModel.MaskedTextProvider.Length%2A> Właściwość reprezentuje całkowita liczba znaków w masce literału i edytować znaków.</span><span class="sxs-lookup"><span data-stu-id="80402-445">The <xref:System.ComponentModel.MaskedTextProvider.Length%2A> property represents the total number of characters in the mask, including both the literal and editable characters.</span></span> <span data-ttu-id="80402-446">Liczba znaków w literale można ustalić przez odjęcie wartości <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> z <xref:System.ComponentModel.MaskedTextProvider.Length%2A>.</span><span class="sxs-lookup"><span data-stu-id="80402-446">The number of literal characters can be determined by subtracting the value of the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> from the <xref:System.ComponentModel.MaskedTextProvider.Length%2A>.</span></span>  
  
 <span data-ttu-id="80402-447"><xref:System.ComponentModel.MaskedTextProvider.Length%2A> opisano również długość ciągu sformatowaną, w tym wprowadzanie znaków, literały i znaki monitu.</span><span class="sxs-lookup"><span data-stu-id="80402-447"><xref:System.ComponentModel.MaskedTextProvider.Length%2A> also describes the length of the formatted string, including input characters, literals, and prompt characters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      </Docs>
    </Member>
    <Member MemberName="Mask">
      <MemberSignature Language="C#" Value="public string Mask { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Mask" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.Mask" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mask As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Mask { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Mask : string" Usage="System.ComponentModel.MaskedTextProvider.Mask" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80402-448">Pobiera maska wprowadzania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-448">Gets the input mask.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80402-449">A <see cref="T:System.String" /> maską pełna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-449">A <see cref="T:System.String" /> containing the full mask.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-450"><xref:System.ComponentModel.MaskedTextProvider.Mask%2A> Właściwość jest ustawiona <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="80402-450">The <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.</span></span> <span data-ttu-id="80402-451">Ta maska musi zawierać tylko prawidłowe znaki, zgodnie z definicją w języku maskowania.</span><span class="sxs-lookup"><span data-stu-id="80402-451">This mask must contain only valid characters as defined by the masking language.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.#ctor" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.MaskFull" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.MaskCompleted" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.Clone" />
      </Docs>
    </Member>
    <Member MemberName="MaskCompleted">
      <MemberSignature Language="C#" Value="public bool MaskCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaskCompleted" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.MaskCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaskCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MaskCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.MaskCompleted : bool" Usage="System.ComponentModel.MaskedTextProvider.MaskCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80402-452">Pobiera wartość wskazującą, czy wprowadzono wszystkie wymagane dane wejściowe do sformatowanego ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-452">Gets a value indicating whether all required inputs have been entered into the formatted string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80402-453">
            <see langword="true" /> Jeżeli wprowadzono wszystkie wymagane dane wejściowe do maski; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-453">
              <see langword="true" /> if all required input has been entered into the mask; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-454"><xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> Właściwość sprawdza tylko wymagane elementy wejściowe.</span><span class="sxs-lookup"><span data-stu-id="80402-454">The <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> property checks only required input elements.</span></span> <span data-ttu-id="80402-455">Aby określić, czy wprowadzono wszystkich wymaganych i opcjonalnych elementów wejściowych, użyj <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A?displayProperty=nameWithType> właściwości <xref:System.Windows.Forms.MaskedTextBox> zamiast klasy.</span><span class="sxs-lookup"><span data-stu-id="80402-455">To determine whether all required and optional input elements have been entered, use the <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A?displayProperty=nameWithType> property of the <xref:System.Windows.Forms.MaskedTextBox> class instead.</span></span>  
  
 <span data-ttu-id="80402-456">Bieżąca wartość <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> właściwość określa, które formatowania elementy są uważane za wymaganych i opcjonalnych.</span><span class="sxs-lookup"><span data-stu-id="80402-456">The current value of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property determines which formatting elements are considered required and which are optional.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskCompleted" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.MaskFull" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      </Docs>
    </Member>
    <Member MemberName="MaskFull">
      <MemberSignature Language="C#" Value="public bool MaskFull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaskFull" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.MaskFull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaskFull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MaskFull { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.MaskFull : bool" Usage="System.ComponentModel.MaskedTextProvider.MaskFull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80402-457">Pobiera wartość wskazującą, czy wprowadzono wszystkich danych wejściowych wymaganych i opcjonalnych w ciąg sformatowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-457">Gets a value indicating whether all required and optional inputs have been entered into the formatted string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80402-458">
            <see langword="true" /> Jeśli zostały wprowadzone wszystkich danych wejściowych wymaganych i opcjonalnych; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-458">
              <see langword="true" /> if all required and optional inputs have been entered; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-459">Aby sprawdzić, jeśli tylko wymaganych elementów wejściowych zostały wprowadzone, należy użyć <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> właściwości zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="80402-459">To verify if only required input elements have been entered, use the <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> property instead.</span></span> <span data-ttu-id="80402-460">Bieżąca wartość <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> właściwość określa, które formatowania elementy są uważane za wymaganych i opcjonalnych.</span><span class="sxs-lookup"><span data-stu-id="80402-460">The current value of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property determines which formatting elements are considered required and which are optional.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskFull" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.MaskCompleted" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      </Docs>
    </Member>
    <Member MemberName="PasswordChar">
      <MemberSignature Language="C#" Value="public char PasswordChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PasswordChar" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      <MemberSignature Language="VB.NET" Value="Public Property PasswordChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PasswordChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.PasswordChar : char with get, set" Usage="System.ComponentModel.MaskedTextProvider.PasswordChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80402-461">Pobiera lub ustawia znak można podstawić rzeczywiste znaki wejściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-461">Gets or sets the character to be substituted for the actual input characters.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80402-462">
            <see cref="T:System.Char" /> Wartość używana jako znak hasła.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-462">The <see cref="T:System.Char" /> value used as the password character.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-463">Dane wejściowe użytkownika poufnych jest powszechną praktyką było Ukryj rzeczywiste wprowadzonej przez użytkownika podczas operacji wyjścia.</span><span class="sxs-lookup"><span data-stu-id="80402-463">For sensitive user input, it is common practice to conceal the actual information entered by the user during output operations.</span></span> <span data-ttu-id="80402-464">Jeśli <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> właściwość jest ustawiona na innej`null` znaków, takich jak dane wyjściowe metody <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> i <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> będzie przesłaniać wprowadzanie znaków znakiem określonego hasła.</span><span class="sxs-lookup"><span data-stu-id="80402-464">If the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a non-`null` character, output methods such as <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> will obscure the input characters with the specified password character.</span></span> <span data-ttu-id="80402-465">Ustawienie tej właściwości na `null` spowoduje wyłączenie funkcji ochrony hasła.</span><span class="sxs-lookup"><span data-stu-id="80402-465">Setting this property to `null` will disable password protection functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="80402-466">Określony znak hasła, gdy ustawienie dla tej właściwości jest taka sama jak bieżący znak monitu, <see cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-466">The password character specified when setting this property is the same as the current prompt character, <see cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />.</span>
          </span>
          <span data-ttu-id="80402-467">Dwa muszą się różnić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-467">The two are required to be different.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="80402-468">Znak określony, gdy ustawienie dla tej właściwości nie jest prawidłowe hasło znakiem, zgodnie z ustaleniami <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-468">The character specified when setting this property is not a valid password character, as determined by the <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IsPassword" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <Member MemberName="PromptChar">
      <MemberSignature Language="C#" Value="public char PromptChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PromptChar" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
      <MemberSignature Language="VB.NET" Value="Public Property PromptChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PromptChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.PromptChar : char with get, set" Usage="System.ComponentModel.MaskedTextProvider.PromptChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80402-469">Pobiera lub ustawia znak używany do reprezentowania braku danych wejściowych użytkownika dla wszystkich pozycji dostępnych edycji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-469">Gets or sets the character used to represent the absence of user input for all available edit positions.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80402-470">Znak używany do monit o podanie danych wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-470">The character used to prompt the user for input.</span>
          </span>
          <span data-ttu-id="80402-471">Wartość domyślna to znaku podkreślenia (_).</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-471">The default is an underscore (_).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-472"><xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> Właściwość reprezentuje znak monitu, który jest używany przez <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> i <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> metody do reprezentowania bieżący stan sformatowany ciąg wejściowy.</span><span class="sxs-lookup"><span data-stu-id="80402-472">The <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> property represents the prompt character that is used by the <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> methods to represent the current state of the formatted input string.</span></span> <span data-ttu-id="80402-473">Znak monitu jest umieszczany w edycji miejsca, w których nie masz jeszcze przypisanej wartości wejściowej.</span><span class="sxs-lookup"><span data-stu-id="80402-473">A prompt character is placed in editable positions that have not yet been assigned an input value.</span></span> <span data-ttu-id="80402-474">Niektóre wersje <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> metoda zależy także wartość <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="80402-474">Some versions of the <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method also depend on the value of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="80402-475">Znak monitu określone, gdy ustawienie dla tej właściwości jest taka sama jak bieżący znak hasła <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-475">The prompt character specified when setting this property is the same as the current password character, <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />.</span>
          </span>
          <span data-ttu-id="80402-476">Dwa muszą się różnić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-476">The two are required to be different.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="80402-477">Znak określony, gdy ustawienie dla tej właściwości nie jest prawidłowe hasło znakiem, zgodnie z ustaleniami <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-477">The character specified when setting this property is not a valid password character, as determined by the <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="80402-478">Usuwa ostatni znak przypisanej z sformatowanego ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-478">Removes the last assigned character from the formatted string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove();" />
      <MemberSignature Language="F#" Value="member this.Remove : unit -&gt; bool" Usage="maskedTextProvider.Remove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="80402-479">Usuwa ostatni znak przypisanej z sformatowanego ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-479">Removes the last assigned character from the formatted string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-480">
            <see langword="true" /> Jeśli znak został pomyślnie usunięty; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-480">
              <see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-481"><xref:System.ComponentModel.MaskedTextProvider.Remove%2A> — Metoda nie ma efektu Jeśli nie są znaki jeszcze przypisany do maski.</span><span class="sxs-lookup"><span data-stu-id="80402-481">The <xref:System.ComponentModel.MaskedTextProvider.Remove%2A> method has no effect if there are no characters assigned to the mask yet.</span></span>  
  
 <span data-ttu-id="80402-482">Ostatni znak przypisanej zostanie usunięty z sformatowany ciąg znaków, znaków maski można edytować jest zresetowanie dla tej pozycji, umożliwiając kolejnych danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="80402-482">When the last assigned character is removed from the formatted string, the editable mask character is reset for that position, allowing subsequent input.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove([out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove([Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Remove :  *  -&gt; bool" Usage="maskedTextProvider.Remove (testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="testPosition">
          <span data-ttu-id="80402-483">Liczony od zera pozycja ciągu w formacie, gdy znak rzeczywiście zostały usunięte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-483">The zero-based position in the formatted string where the character was actually removed.</span>
          </span>
          <span data-ttu-id="80402-484">Parametr wyjściowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-484">An output parameter.</span>
          </span>
        </param>
        <param name="resultHint">
          <span data-ttu-id="80402-485">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> opisujący krótkiej formie wyniku operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-485">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span>
          </span>
          <span data-ttu-id="80402-486">Parametr wyjściowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-486">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-487">Usuwa ostatni znak przypisanej sformatowanego ciągu, a następnie wyprowadza usuwania pozycji i informacje opisowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-487">Removes the last assigned character from the formatted string, and then outputs the removal position and descriptive information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-488">
            <see langword="true" /> Jeśli znak został pomyślnie usunięty; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-488">
              <see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-489"><xref:System.ComponentModel.MaskedTextProvider.Remove%2A> — Metoda nie ma efektu Jeśli nie są znaki jeszcze przypisany do maski.</span><span class="sxs-lookup"><span data-stu-id="80402-489">The <xref:System.ComponentModel.MaskedTextProvider.Remove%2A> method has no effect if there are no characters assigned to the mask yet.</span></span>  
  
 <span data-ttu-id="80402-490">Ostatni znak przypisanej zostanie usunięty z sformatowany ciąg znaków, znaków maski można edytować jest zresetowanie dla tej pozycji, umożliwiając kolejnych danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="80402-490">When the last assigned character is removed from the formatted string, the editable mask character is reset for that position, allowing subsequent input.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveAt">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="80402-491">Usuwa co najmniej jeden znak przypisanej z sformatowanego ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-491">Removes one or more assigned characters from the formatted string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public bool RemoveAt (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAt(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAt (position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAt(int position);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; bool" Usage="maskedTextProvider.RemoveAt position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="80402-492">Liczony od zera pozycja znaku przypisanej do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-492">The zero-based position of the assigned character to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-493">Usuwa z sformatowanego ciągu przypisanej znak na określonej pozycji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-493">Removes the assigned character at the specified position from the formatted string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-494">
            <see langword="true" /> Jeśli znak został pomyślnie usunięty; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-494">
              <see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-495"><xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> — Metoda nie ma efektu Jeśli nie są przypisane znaki na określonej pozycji usuwania.</span><span class="sxs-lookup"><span data-stu-id="80402-495">The <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> method has no effect if there are no assigned characters at the removal position specified.</span></span> <span data-ttu-id="80402-496">Ta metoda nie dotyczy literał znaków.</span><span class="sxs-lookup"><span data-stu-id="80402-496">Literal characters are not affected by this method.</span></span>  
  
 <span data-ttu-id="80402-497">Znak zostanie usunięty, pozostałe znaki wyższej znajduje się w masce przesunie się w lewo, aby wypełnić przerwy utworzone przez operację usunięcia.</span><span class="sxs-lookup"><span data-stu-id="80402-497">When a character is removed, the remaining higher-positioned characters in the mask will shift to the left to fill in the gap created by the removal.</span></span> <span data-ttu-id="80402-498">Vacated pozycje są resetowane dla danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="80402-498">Vacated positions are reset for input.</span></span> <span data-ttu-id="80402-499">Jeśli przepływ znaków nie może zgodnie z definicją maski, bez usuwania występuje, i <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="80402-499">If movement of the characters is prevented by the mask definition, no removal occurs, and <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="80402-500">Wywołanie tej metody jest dokładnym odpowiednikiem następujące wywołanie przeciążonej <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%28System.Int32%2CSystem.Int32%29> wersji:</span><span class="sxs-lookup"><span data-stu-id="80402-500">This method call is exactly equivalent to the following call to the overloaded <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%28System.Int32%2CSystem.Int32%29> version:</span></span>  
  
 `RemoveAt(pos, pos);`  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public bool RemoveAt (int startPosition, int endPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAt(int32 startPosition, int32 endPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAt (startPosition As Integer, endPosition As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAt(int startPosition, int endPosition);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int * int -&gt; bool" Usage="maskedTextProvider.RemoveAt (startPosition, endPosition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startPosition">
          <span data-ttu-id="80402-501">Liczony od zera indeks pierwszego znaku przypisanej do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-501">The zero-based index of the first assigned character to remove.</span>
          </span>
        </param>
        <param name="endPosition">
          <span data-ttu-id="80402-502">Liczony od zera indeks ostatni znak przypisanej do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-502">The zero-based index of the last assigned character to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-503">Usuwa przypisanej znaki od określonej pozycji z sformatowanego ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-503">Removes the assigned characters between the specified positions from the formatted string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-504">
            <see langword="true" /> Jeśli znak został pomyślnie usunięty; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-504">
              <see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-505"><xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> — Metoda nie ma efektu Jeśli nie są przypisane znaki w miejscach usuwania.</span><span class="sxs-lookup"><span data-stu-id="80402-505">The <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> method has no effect if there are no assigned characters at the removal positions specified.</span></span>  
  
 <span data-ttu-id="80402-506">Znak zostanie usunięty, pozostałe znaki wyższej znajduje się w masce przesunie się w lewo, aby wypełnić przerwy utworzone przez operację usunięcia.</span><span class="sxs-lookup"><span data-stu-id="80402-506">When a character is removed, the remaining higher-positioned characters in the mask will shift to the left to fill in the gap created by the removal.</span></span> <span data-ttu-id="80402-507">Vacated pozycje są resetowane dla danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="80402-507">Vacated positions are reset for input.</span></span> <span data-ttu-id="80402-508">Jeśli przepływ znaków nie może zgodnie z definicją maski, bez usuwania występuje, i <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="80402-508">If movement of the characters is prevented by the mask definition, no removal occurs, and <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public bool RemoveAt (int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAt(int32 startPosition, int32 endPosition, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAt (startPosition As Integer, endPosition As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAt(int startPosition, int endPosition, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int * int *  *  -&gt; bool" Usage="maskedTextProvider.RemoveAt (startPosition, endPosition, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="startPosition">
          <span data-ttu-id="80402-509">Liczony od zera indeks pierwszego znaku przypisanej do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-509">The zero-based index of the first assigned character to remove.</span>
          </span>
        </param>
        <param name="endPosition">
          <span data-ttu-id="80402-510">Liczony od zera indeks ostatni znak przypisanej do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-510">The zero-based index of the last assigned character to remove.</span>
          </span>
        </param>
        <param name="testPosition">
          <span data-ttu-id="80402-511">W przypadku powodzenia liczony od zera pozycja w sformatowany ciąg gdzie znaki rzeczywiście zostały usunięte; w przeciwnym razie pierwszy pozycji, których działanie nie powiodło się.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-511">If successful, the zero-based position in the formatted string of where the characters were actually removed; otherwise, the first position where the operation failed.</span>
          </span>
          <span data-ttu-id="80402-512">Parametr wyjściowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-512">An output parameter.</span>
          </span>
        </param>
        <param name="resultHint">
          <span data-ttu-id="80402-513">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> opisujący krótkiej formie wyniku operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-513">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span>
          </span>
          <span data-ttu-id="80402-514">Parametr wyjściowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-514">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-515">Usuwa przypisanej znaki od określonej pozycji z sformatowanego ciągu, a następnie generuje usuwania pozycji i informacje opisowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-515">Removes the assigned characters between the specified positions from the formatted string, and then outputs the removal position and descriptive information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-516">
            <see langword="true" /> Jeśli znak został pomyślnie usunięty; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-516">
              <see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-517"><xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> — Metoda nie ma efektu Jeśli nie są przypisane znaki w miejscach usuwania.</span><span class="sxs-lookup"><span data-stu-id="80402-517">The <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> method has no effect if there are no assigned characters at the removal positions specified.</span></span>  
  
 <span data-ttu-id="80402-518">Znak zostanie usunięty, pozostałe znaki wyższej znajduje się w masce przesunie się w lewo, aby wypełnić przerwy utworzone przez operację usunięcia.</span><span class="sxs-lookup"><span data-stu-id="80402-518">When a character is removed, the remaining higher-positioned characters in the mask will shift to the left to fill in the gap created by the removal.</span></span> <span data-ttu-id="80402-519">Vacated pozycje są resetowane dla danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="80402-519">Vacated positions are reset for input.</span></span> <span data-ttu-id="80402-520">Jeśli przepływ znaków nie może zgodnie z definicją maski, bez usuwania występuje, i <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="80402-520">If movement of the characters is prevented by the mask definition, no removal occurs, and <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="80402-521">Ta wersja <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> zawiera dwa parametry dodatkowe dane wyjściowe, aby przekazać więcej informacji na temat operacji metody.</span><span class="sxs-lookup"><span data-stu-id="80402-521">This version of <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> provides two additional output parameters to convey more information about the operation of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Replace">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="80402-522">Zamienia co najmniej jeden znak można edytować ciągu w formacie określonych znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-522">Replaces one or more editable characters in the formatted string with the specified characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (char input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(char input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As Char, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(char input, int position);" />
      <MemberSignature Language="F#" Value="member this.Replace : char * int -&gt; bool" Usage="maskedTextProvider.Replace (input, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="80402-523">
            <see cref="T:System.Char" /> Wartość, która zastępuje istniejącą wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-523">The <see cref="T:System.Char" /> value that replaces the existing value.</span>
          </span>
        </param>
        <param name="position">
          <span data-ttu-id="80402-524">Liczony od zera pozycja wyszukiwania dla pierwszego znaku można edytować w celu zastąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-524">The zero-based position to search for the first editable character to replace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-525">Określona wartość znaku zastępuje pojedynczy znak w tym miejscu lub poza określonej pozycji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-525">Replaces a single character at or beyond the specified position with the specified character value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-526">
            <see langword="true" /> Jeśli znak został pomyślnie zastąpił; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-526">
              <see langword="true" /> if the character was successfully replaced; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-527"><xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%29> Metody wyszukuje pierwszą pozycję można edytować ciągu w formacie na lub po określonej pozycji `pos`.</span><span class="sxs-lookup"><span data-stu-id="80402-527">The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%29> method searches for the first editable position in the formatted string at or beyond the specified position, `pos`.</span></span> <span data-ttu-id="80402-528">Jeśli został znaleziony, wartość można edytować pozycji zostanie zmieniona na określony znak `input`.</span><span class="sxs-lookup"><span data-stu-id="80402-528">If one is found, the value of the editable position is changed to the specified character, `input`.</span></span> <span data-ttu-id="80402-529">Dowolny z następujących warunków spowoduje błąd, który powoduje, że nie można zastąpić do wykonania i wartości `false` zwracaną:</span><span class="sxs-lookup"><span data-stu-id="80402-529">Any of the following conditions will result in an error that causes no replacement to be performed and a value of `false` to be returned:</span></span>  
  
-   <span data-ttu-id="80402-530">`pos` Parametrów jest mniejsza niż zero lub większa niż <xref:System.ComponentModel.MaskedTextProvider.Length%2A> sformatowanego ciągu.</span><span class="sxs-lookup"><span data-stu-id="80402-530">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="80402-531">Nie można odnaleźć znaku można edytować ciągu w formacie na lub po określonej pozycji `pos`.</span><span class="sxs-lookup"><span data-stu-id="80402-531">An editable character was not found in the formatted string at or beyond the specified position, `pos`.</span></span>  
  
-   <span data-ttu-id="80402-532">Znak zastępczy `input`, nie jest prawidłowy znak wejściowy, ponieważ nie jest drukowania lub jest niezgodny z jej odpowiadającego mu elementu maski.</span><span class="sxs-lookup"><span data-stu-id="80402-532">The replacement character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (string input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(string input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(System::String ^ input, int position);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * int -&gt; bool" Usage="maskedTextProvider.Replace (input, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="80402-533">
            <see cref="T:System.String" /> Używany do zastępowania istniejącego znaków można edytować wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-533">The <see cref="T:System.String" /> value used to replace the existing editable characters.</span>
          </span>
        </param>
        <param name="position">
          <span data-ttu-id="80402-534">Liczony od zera pozycja wyszukiwania dla pierwszego znaku można edytować w celu zastąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-534">The zero-based position to search for the first editable character to replace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-535">Zastępuje można edytować znaków, zaczynając od określonej pozycji z określonego ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-535">Replaces a range of editable characters starting at the specified position with the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-536">
            <see langword="true" /> Jeśli wszystkie znaki pomyślnie zostały zastąpione. w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-536">
              <see langword="true" /> if all the characters were successfully replaced; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-537"><xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29> Metody wyszukuje pierwszą pozycję można edytować w tym miejscu lub poza określonej pozycji `pos`.</span><span class="sxs-lookup"><span data-stu-id="80402-537">The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29> method searches for the first editable position at or beyond the specified position, `pos`.</span></span> <span data-ttu-id="80402-538">Działają przy założeniu, że ma wystarczającej liczby pozycji można edytować po tym punkcie, istniejące wartości znakowych są zastąpionego kolei zawartość parametru ciąg zastępczy, `input`.</span><span class="sxs-lookup"><span data-stu-id="80402-538">Operating under the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, `input`.</span></span>  
  
 <span data-ttu-id="80402-539">Poniższe warunki są traktowane jako błędy.</span><span class="sxs-lookup"><span data-stu-id="80402-539">The following conditions are considered errors.</span></span> <span data-ttu-id="80402-540">Jeśli wystąpi błąd, nie jest zastępowana i <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="80402-540">When an error occurs, no replacement occurs and <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29> returns `false`.</span></span>  
  
-   <span data-ttu-id="80402-541">`pos` Parametrów jest mniejsza niż zero lub większa niż <xref:System.ComponentModel.MaskedTextProvider.Length%2A> sformatowanego ciągu.</span><span class="sxs-lookup"><span data-stu-id="80402-541">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="80402-542">Nie ma wystarczającej liczby pozycji można edytować w sformatowanego ciągu do przechowywania zawartości ciąg zastępczy.</span><span class="sxs-lookup"><span data-stu-id="80402-542">There are not enough editable positions in the formatted string to hold the contents of the replacement string.</span></span>  
  
-   <span data-ttu-id="80402-543">Jedna z wartości znak zastępczy, jest nieprawidłowy, ponieważ nie jest drukowania, lub jest niezgodny z jej odpowiadającego mu elementu maski.</span><span class="sxs-lookup"><span data-stu-id="80402-543">One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="80402-544">
            <paramref name="input" /> Parametr jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-544">The <paramref name="input" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (char input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(char input, int32 position, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As Char, position As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(char input, int position, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Replace : char * int *  *  -&gt; bool" Usage="maskedTextProvider.Replace (input, position, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="80402-545">
            <see cref="T:System.Char" /> Wartość, która zastępuje istniejącą wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-545">The <see cref="T:System.Char" /> value that replaces the existing value.</span>
          </span>
        </param>
        <param name="position">
          <span data-ttu-id="80402-546">Liczony od zera pozycja wyszukiwania dla pierwszego znaku można edytować w celu zastąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-546">The zero-based position to search for the first editable character to replace.</span>
          </span>
        </param>
        <param name="testPosition">
          <span data-ttu-id="80402-547">W przypadku powodzenia liczona od zera pozycja ciągu w formacie, na którym ostatni znak faktycznie został zastąpiony; w przeciwnym razie pierwszy pozycji, których działanie nie powiodło się.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-547">If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</span>
          </span>
          <span data-ttu-id="80402-548">Parametr wyjściowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-548">An output parameter.</span>
          </span>
        </param>
        <param name="resultHint">
          <span data-ttu-id="80402-549">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> krótkiej formie opisujący wynik operacji wymiany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-549">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the replacement operation.</span>
          </span>
          <span data-ttu-id="80402-550">Parametr wyjściowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-550">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-551">Zastępuje pojedynczy znak w tym miejscu lub ponad określona pozycja określona wartość znaku, a następnie generuje usuwania pozycji i informacje opisowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-551">Replaces a single character at or beyond the specified position with the specified character value, and then outputs the removal position and descriptive information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-552">
            <see langword="true" /> Jeśli znak został pomyślnie zastąpił; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-552">
              <see langword="true" /> if the character was successfully replaced; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-553"><xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> Metody wyszukuje pierwszą pozycję można edytować ciągu w formacie na lub po określonej pozycji `pos`.</span><span class="sxs-lookup"><span data-stu-id="80402-553">The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method searches for the first editable position in the formatted string at or beyond the specified position, `pos`.</span></span> <span data-ttu-id="80402-554">Jeśli został znaleziony, wartość można edytować pozycji zostanie zmieniona na określony znak `input`.</span><span class="sxs-lookup"><span data-stu-id="80402-554">If one is found, the value of the editable position is changed to the specified character, `input`.</span></span> <span data-ttu-id="80402-555">Dowolny z następujących warunków spowoduje błąd, co powoduje, że nie można zastąpić do wykonania i wartości `false` zwracaną:</span><span class="sxs-lookup"><span data-stu-id="80402-555">Any of the following conditions will result in an error condition that causes no replacement to be performed and a value of `false` to be returned:</span></span>  
  
-   <span data-ttu-id="80402-556">`pos` Parametrów jest mniejsza niż zero lub większa niż <xref:System.ComponentModel.MaskedTextProvider.Length%2A> sformatowanego ciągu.</span><span class="sxs-lookup"><span data-stu-id="80402-556">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="80402-557">Nie można odnaleźć znaku można edytować ciągu w formacie na lub po określonej pozycji `pos`.</span><span class="sxs-lookup"><span data-stu-id="80402-557">An editable character was not found in the formatted string at or beyond the specified position, `pos`.</span></span>  
  
-   <span data-ttu-id="80402-558">Znak zastępczy `input`, nie jest prawidłowy znak wejściowy, ponieważ nie jest drukowania lub jest niezgodny z jej odpowiadającego mu elementu maski.</span><span class="sxs-lookup"><span data-stu-id="80402-558">The replacement character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.</span></span>  
  
 <span data-ttu-id="80402-559">Oprócz zwracanej wartości ta metoda ma dwa parametry wyjściowe o podanie dodatkowych informacji na temat operacji wymiany.</span><span class="sxs-lookup"><span data-stu-id="80402-559">In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (string input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(string input, int32 position, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, position As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(System::String ^ input, int position, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * int *  *  -&gt; bool" Usage="maskedTextProvider.Replace (input, position, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="80402-560">
            <see cref="T:System.String" /> Używany do zastępowania istniejącego znaków można edytować wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-560">The <see cref="T:System.String" /> value used to replace the existing editable characters.</span>
          </span>
        </param>
        <param name="position">
          <span data-ttu-id="80402-561">Liczony od zera pozycja wyszukiwania dla pierwszego znaku można edytować w celu zastąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-561">The zero-based position to search for the first editable character to replace.</span>
          </span>
        </param>
        <param name="testPosition">
          <span data-ttu-id="80402-562">W przypadku powodzenia liczona od zera pozycja ciągu w formacie, na którym ostatni znak faktycznie został zastąpiony; w przeciwnym razie pierwszy pozycji, których działanie nie powiodło się.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-562">If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</span>
          </span>
          <span data-ttu-id="80402-563">Parametr wyjściowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-563">An output parameter.</span>
          </span>
        </param>
        <param name="resultHint">
          <span data-ttu-id="80402-564">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> krótkiej formie opisujący wynik operacji wymiany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-564">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the replacement operation.</span>
          </span>
          <span data-ttu-id="80402-565">Parametr wyjściowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-565">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-566">Zastępuje zakres znaków można edytować, zaczynając od określonej pozycji z określonego ciągu, a następnie generuje usuwania pozycji i informacje opisowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-566">Replaces a range of editable characters starting at the specified position with the specified string, and then outputs the removal position and descriptive information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-567">
            <see langword="true" /> Jeśli wszystkie znaki pomyślnie zostały zastąpione. w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-567">
              <see langword="true" /> if all the characters were successfully replaced; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-568"><xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> Metody wyszukuje pierwszą pozycję można edytować w tym miejscu lub poza określonej pozycji `pos`.</span><span class="sxs-lookup"><span data-stu-id="80402-568">The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method searches for the first editable position at or beyond the specified position, `pos`.</span></span> <span data-ttu-id="80402-569">Działają na założeniu, że ma wystarczającej liczby pozycji można edytować po tym punkcie, istniejące wartości znakowych są zastąpionego kolei zawartość parametru ciąg zastępczy, `input`.</span><span class="sxs-lookup"><span data-stu-id="80402-569">Operating on the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, `input`.</span></span>  
  
 <span data-ttu-id="80402-570">Poniższe warunki są traktowane jako błędy.</span><span class="sxs-lookup"><span data-stu-id="80402-570">The following conditions are considered errors.</span></span> <span data-ttu-id="80402-571">Jeśli wystąpi błąd, nie jest zastępowana i <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="80402-571">When an error occurs, no replacement occurs and <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> returns `false`.</span></span>  
  
-   <span data-ttu-id="80402-572">`pos` Parametrów jest mniejsza niż zero lub większa niż <xref:System.ComponentModel.MaskedTextProvider.Length%2A> sformatowanego ciągu.</span><span class="sxs-lookup"><span data-stu-id="80402-572">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="80402-573">Nie ma wystarczającej liczby pozycji można edytować w sformatowanego ciągu do przechowywania zawartości ciąg zastępczy.</span><span class="sxs-lookup"><span data-stu-id="80402-573">There are not enough editable positions in the formatted string to hold the contents of the replacement string.</span></span>  
  
-   <span data-ttu-id="80402-574">Jedna z wartości znak zastępczy, jest nieprawidłowy, ponieważ nie jest drukowania, lub jest niezgodny z jej odpowiadającego mu elementu maski.</span><span class="sxs-lookup"><span data-stu-id="80402-574">One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</span></span>  
  
 <span data-ttu-id="80402-575">Oprócz zwracanej wartości ta metoda ma dwa parametry wyjściowe o podanie dodatkowych informacji na temat operacji wymiany.</span><span class="sxs-lookup"><span data-stu-id="80402-575">In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (char input, int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(char input, int32 startPosition, int32 endPosition, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As Char, startPosition As Integer, endPosition As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(char input, int startPosition, int endPosition, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Replace : char * int * int *  *  -&gt; bool" Usage="maskedTextProvider.Replace (input, startPosition, endPosition, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="80402-576">
            <see cref="T:System.Char" /> Wartość, która zastępuje istniejącą wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-576">The <see cref="T:System.Char" /> value that replaces the existing value.</span>
          </span>
        </param>
        <param name="startPosition">
          <span data-ttu-id="80402-577">Liczona od zera pozycja ciągu w formacie, gdy rozpoczyna się zastąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-577">The zero-based position in the formatted string where the replacement starts.</span>
          </span>
        </param>
        <param name="endPosition">
          <span data-ttu-id="80402-578">Liczona od zera pozycja ciągu w formacie, gdy kończy się zastąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-578">The zero-based position in the formatted string where the replacement ends.</span>
          </span>
        </param>
        <param name="testPosition">
          <span data-ttu-id="80402-579">W przypadku powodzenia liczona od zera pozycja ciągu w formacie, na którym ostatni znak faktycznie został zastąpiony; w przeciwnym razie pierwszy pozycji, których działanie nie powiodło się.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-579">If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</span>
          </span>
          <span data-ttu-id="80402-580">Parametr wyjściowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-580">An output parameter.</span>
          </span>
        </param>
        <param name="resultHint">
          <span data-ttu-id="80402-581">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> krótkiej formie opisujący wynik operacji wymiany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-581">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the replacement operation.</span>
          </span>
          <span data-ttu-id="80402-582">Parametr wyjściowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-582">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-583">Zastępuje pojedynczy znak między określonym rozpoczęcia i zakończenia pozycji z określona wartość znaku, a następnie generuje usuwania pozycji i informacje opisowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-583">Replaces a single character between the specified starting and ending positions with the specified character value, and then outputs the removal position and descriptive information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-584">
            <see langword="true" /> Jeśli znak został pomyślnie zastąpił; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-584">
              <see langword="true" /> if the character was successfully replaced; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-585"><xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> Metoda szuka pierwszą pozycję można edytować ciągu w formacie między określonym początkowa i końcowa pozycji.</span><span class="sxs-lookup"><span data-stu-id="80402-585">The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method searches for the first editable position in the formatted string between the specified starting and ending positions.</span></span> <span data-ttu-id="80402-586">Jeśli został znaleziony, wartość można edytować pozycji zostanie zmieniona na określony znak `input`.</span><span class="sxs-lookup"><span data-stu-id="80402-586">If one is found, the value of the editable position is changed to the specified character, `input`.</span></span> <span data-ttu-id="80402-587">Dowolny z następujących warunków spowoduje błąd, co powoduje, że nie można zastąpić do wykonania i wartości `false` zwracaną:</span><span class="sxs-lookup"><span data-stu-id="80402-587">Any of the following conditions will result in an error condition that causes no replacement to be performed and a value of `false` to be returned:</span></span>  
  
-   <span data-ttu-id="80402-588">`startPos` Lub `endPos` parametrów punktu przed rozpoczęciem ciąg sformatowany lub poza jego końcem.</span><span class="sxs-lookup"><span data-stu-id="80402-588">The `startPos` or `endPos` parameters point before the start of the formatted string or beyond its end.</span></span>  
  
-   <span data-ttu-id="80402-589">Nie można odnaleźć znaku można edytować w określonym interwale.</span><span class="sxs-lookup"><span data-stu-id="80402-589">An editable character was not found in the specified interval.</span></span>  
  
-   <span data-ttu-id="80402-590">Znak zastępczy `input`, nie jest prawidłowy znak wejściowy, ponieważ nie jest drukowania lub jest niezgodny z jej odpowiadającego mu elementu maski.</span><span class="sxs-lookup"><span data-stu-id="80402-590">The replacement character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.</span></span>  
  
 <span data-ttu-id="80402-591">Oprócz zwracanej wartości ta metoda ma dwa parametry wyjściowe o podanie dodatkowych informacji na temat operacji wymiany.</span><span class="sxs-lookup"><span data-stu-id="80402-591">In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (string input, int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(string input, int32 startPosition, int32 endPosition, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, startPosition As Integer, endPosition As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(System::String ^ input, int startPosition, int endPosition, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * int * int *  *  -&gt; bool" Usage="maskedTextProvider.Replace (input, startPosition, endPosition, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="80402-592">
            <see cref="T:System.String" /> Używany do zastępowania istniejącego znaków można edytować wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-592">The <see cref="T:System.String" /> value used to replace the existing editable characters.</span>
          </span>
        </param>
        <param name="startPosition">
          <span data-ttu-id="80402-593">Liczona od zera pozycja ciągu w formacie, gdy rozpoczyna się zastąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-593">The zero-based position in the formatted string where the replacement starts.</span>
          </span>
        </param>
        <param name="endPosition">
          <span data-ttu-id="80402-594">Liczona od zera pozycja ciągu w formacie, gdy kończy się zastąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-594">The zero-based position in the formatted string where the replacement ends.</span>
          </span>
        </param>
        <param name="testPosition">
          <span data-ttu-id="80402-595">W przypadku powodzenia liczona od zera pozycja ciągu w formacie, na którym ostatni znak faktycznie został zastąpiony; w przeciwnym razie pierwszy pozycji, których działanie nie powiodło się.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-595">If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</span>
          </span>
          <span data-ttu-id="80402-596">Parametr wyjściowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-596">An output parameter.</span>
          </span>
        </param>
        <param name="resultHint">
          <span data-ttu-id="80402-597">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> krótkiej formie opisujący wynik operacji wymiany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-597">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the replacement operation.</span>
          </span>
          <span data-ttu-id="80402-598">Parametr wyjściowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-598">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-599">Zastępuje zakres znaków można edytować między określonym rozpoczęcia i zakończenia pozycji z określonego ciągu, a następnie generuje usuwania pozycji i informacje opisowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-599">Replaces a range of editable characters between the specified starting and ending positions with the specified string, and then outputs the removal position and descriptive information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-600">
            <see langword="true" /> Jeśli wszystkie znaki pomyślnie zostały zastąpione. w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-600">
              <see langword="true" /> if all the characters were successfully replaced; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-601"><xref:System.ComponentModel.MaskedTextProvider.Replace%2A> Metoda szuka pierwszą pozycję można edytować ciągu w formacie między określonym początkowa i końcowa pozycji.</span><span class="sxs-lookup"><span data-stu-id="80402-601">The <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> method searches for the first editable position in the formatted string between the specified starting and ending positions.</span></span> <span data-ttu-id="80402-602">Działają na założeniu, że ma wystarczającej liczby pozycji można edytować po tym punkcie, istniejące wartości znakowych są zastąpionego kolei zawartość parametru ciąg zastępczy, `input`.</span><span class="sxs-lookup"><span data-stu-id="80402-602">Operating on the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, `input`.</span></span>  
  
 <span data-ttu-id="80402-603">Poniższe warunki są traktowane jako błędy.</span><span class="sxs-lookup"><span data-stu-id="80402-603">The following conditions are considered errors.</span></span> <span data-ttu-id="80402-604">Jeśli wystąpi błąd, nie jest zastępowana i <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="80402-604">When an error occurs, no replacement occurs and <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> returns `false`.</span></span>  
  
-   <span data-ttu-id="80402-605">`startPos` Lub `endPos` parametrów punktu przed rozpoczęciem ciąg sformatowany lub poza jego końcem.</span><span class="sxs-lookup"><span data-stu-id="80402-605">The `startPos` or `endPos` parameters point before the start of the formatted string or beyond its end.</span></span>  
  
-   <span data-ttu-id="80402-606">Nie ma wystarczającej liczby pozycji można edytować w sformatowanego ciągu do przechowywania zawartości ciąg zastępczy.</span><span class="sxs-lookup"><span data-stu-id="80402-606">There are not enough editable positions in the formatted string to hold the contents of the replacement string.</span></span>  
  
-   <span data-ttu-id="80402-607">Jedna z wartości znak zastępczy, jest nieprawidłowy, ponieważ nie jest drukowania, lub jest niezgodny z jej odpowiadającego mu elementu maski.</span><span class="sxs-lookup"><span data-stu-id="80402-607">One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</span></span>  
  
 <span data-ttu-id="80402-608">Oprócz zwracanej wartości ta metoda ma dwa parametry wyjściowe o podanie dodatkowych informacji na temat operacji wymiany.</span><span class="sxs-lookup"><span data-stu-id="80402-608">In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="ResetOnPrompt">
      <MemberSignature Language="C#" Value="public bool ResetOnPrompt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResetOnPrompt" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
      <MemberSignature Language="VB.NET" Value="Public Property ResetOnPrompt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ResetOnPrompt { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ResetOnPrompt : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80402-609">Pobiera lub ustawia wartość określającą sposób obsługi znak wejściowy odpowiadającego znaku zgłoszenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-609">Gets or sets a value that determines how an input character that matches the prompt character should be handled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80402-610">
            <see langword="true" /> Jeżeli znaku zgłoszenia jako dane wejściowe powoduje, że bieżące położenie można edytować w masce zresetować; w przeciwnym razie <see langword="false" /> wskazująca, czy znak monitu jest do przetworzenia jako normalne znak wejściowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-610">
              <see langword="true" /> if the prompt character entered as input causes the current editable position in the mask to be reset; otherwise, <see langword="false" /> to indicate that the prompt character is to be processed as a normal input character.</span>
          </span>
          <span data-ttu-id="80402-611">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-611">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-612"><xref:System.ComponentModel.MaskedTextProvider> można traktować dwie kategorie znaków, nadać tempo lub znaki monitu w specjalny sposób.</span><span class="sxs-lookup"><span data-stu-id="80402-612"><xref:System.ComponentModel.MaskedTextProvider> can treat two categories of characters, paces and prompt characters, in a special manner.</span></span> <span data-ttu-id="80402-613">Zazwyczaj każdy znak wejściowy zostaną przetestowane przed maski i albo zaakceptowane lub odrzucone.</span><span class="sxs-lookup"><span data-stu-id="80402-613">Normally, each input character will be tested against the mask and either accepted or rejected.</span></span> <span data-ttu-id="80402-614">Działających na założeniu, że <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> wartość właściwości jest równa wartości innych niż `null`, następnie ustawienie <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> właściwości `true` spowoduje specjalnego przetwarzania dla znaku zgłoszenia.</span><span class="sxs-lookup"><span data-stu-id="80402-614">Operating on the assumption that the <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> property is set to a value other than `null`, then setting the <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> property to `true` will result in special processing for the prompt character.</span></span> <span data-ttu-id="80402-615">Po dodaniu znaku zgłoszenia powoduje bieżące położenie znaku maski do wyczyszczenia i bieżącą pozycję Zaawansowane na następny znak można edytować.</span><span class="sxs-lookup"><span data-stu-id="80402-615">When a prompt character is added, it causes the current mask character position to be cleared and the current position to be advanced to the next editable character.</span></span>  
  
 <span data-ttu-id="80402-616"><xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> pierwszeństwo <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> właściwości zgodnie z opisem w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="80402-616"><xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> takes precedence over the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> property as described in the following table.</span></span>  
  
|<xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>|<xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>|<span data-ttu-id="80402-617">Efekty</span><span class="sxs-lookup"><span data-stu-id="80402-617">Resulting behavior</span></span>|  
|---------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------|  
|`true`|`true`|<span data-ttu-id="80402-618">Można dodać znaku zgłoszenia i powoduje bieżące położenie maski zostaną zresetowane.</span><span class="sxs-lookup"><span data-stu-id="80402-618">The prompt character can be added and it causes the current mask position to be reset.</span></span> <span data-ttu-id="80402-619">Domyślnie.</span><span class="sxs-lookup"><span data-stu-id="80402-619">The default.</span></span>|  
|`true`|`false`|<span data-ttu-id="80402-620">Można dodać znaku zgłoszenia i powoduje bieżące położenie maski zostaną zresetowane.</span><span class="sxs-lookup"><span data-stu-id="80402-620">The prompt character can be added and it causes the current mask position to be reset.</span></span>|  
|`false`|`true`|<span data-ttu-id="80402-621">Znak monitu jest przetwarzany jako normalne znak wejściowy.</span><span class="sxs-lookup"><span data-stu-id="80402-621">The prompt character is processed as a normal input character.</span></span>|  
|`false`|`false`|<span data-ttu-id="80402-622">Znak monitu jest nieprawidłowy i metody próby dodania znak zakończy się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="80402-622">The prompt character is not valid and methods attempting to add the character will fail.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ResetOnPrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.Clear" />
      </Docs>
    </Member>
    <Member MemberName="ResetOnSpace">
      <MemberSignature Language="C#" Value="public bool ResetOnSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResetOnSpace" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
      <MemberSignature Language="VB.NET" Value="Public Property ResetOnSpace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ResetOnSpace { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ResetOnSpace : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80402-623">Pobiera lub ustawia wartość, która określa obsługi wejściowych spacją.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-623">Gets or sets a value that determines how a space input character should be handled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80402-624">
            <see langword="true" /> Jeśli znak wejściowy miejsce powoduje, że bieżące położenie można edytować w masce zresetować; w przeciwnym razie <see langword="false" /> aby wskazać, że do przetworzenia jako normalne znak wejściowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-624">
              <see langword="true" /> if the space input character causes the current editable position in the mask to be reset; otherwise, <see langword="false" /> to indicate that it is to be processed as a normal input character.</span>
          </span>
          <span data-ttu-id="80402-625">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-625">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-626"><xref:System.ComponentModel.MaskedTextProvider> można traktować dwie kategorie znaków, spacje i znaki monitu w specjalny sposób.</span><span class="sxs-lookup"><span data-stu-id="80402-626"><xref:System.ComponentModel.MaskedTextProvider> can treat two categories of characters, spaces and prompt characters, in a special manner.</span></span> <span data-ttu-id="80402-627">Zazwyczaj każdy znak wejściowy zostaną przetestowane przed maski i albo zaakceptowane lub odrzucone.</span><span class="sxs-lookup"><span data-stu-id="80402-627">Normally, each input character will be tested against the mask and either accepted or rejected.</span></span> <span data-ttu-id="80402-628">Ustawienie <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> właściwości `true` spowoduje bieżącego położenia znaku maski czyszczona oraz bieżące położenie jest Zaawansowane na następny znak można edytować.</span><span class="sxs-lookup"><span data-stu-id="80402-628">Setting the <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> property to `true` will result in the current mask character position being cleared and the current position being advanced to the next editable character.</span></span>  
  
 <span data-ttu-id="80402-629"><xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> jest przydatne w przypadku przypisywania tekst, który został zapisany z wyłączeniem wiersza, gdy monit jest zastępowany spacją.</span><span class="sxs-lookup"><span data-stu-id="80402-629"><xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> is useful when assigning text that was saved excluding the prompt, where the prompt is replaced with a space.</span></span> <span data-ttu-id="80402-630">Przed przywróceniem taki ciąg, ustawienie <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> do `true` spowoduje zresetowanie znaki monitu w miejscach zajmowane przez spacje w ciągu wejściowym.</span><span class="sxs-lookup"><span data-stu-id="80402-630">Before restoring such a string, setting <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> to `true` will reset the prompt characters at the positions occupied by spaces in the input string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ResetOnSpace" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.Clear" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Set">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="80402-631">Ustawia ciąg sformatowany określonego ciągu wejściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-631">Sets the formatted string to the specified input string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public bool Set (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Set(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Set(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Set (input As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Set(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Set : string -&gt; bool" Usage="maskedTextProvider.Set input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="80402-632">
            <see cref="T:System.String" /> Wartość używana do ustawiania sformatowanego ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-632">The <see cref="T:System.String" /> value used to set the formatted string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-633">Ustawia ciąg sformatowany określonego ciągu wejściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-633">Sets the formatted string to the specified input string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-634">
            <see langword="true" /> Jeśli wszystkie znaki pomyślnie zostały ustawione; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-634">
              <see langword="true" /> if all the characters were successfully set; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-635"><xref:System.ComponentModel.MaskedTextProvider.Set%2A> Metody usuwa istniejącą zawartość elementu sformatowany ciąg znaków, a następnie stosuje maski przed `input` ciąg, aby zaktualizować zawartość sformatowanego ciągu.</span><span class="sxs-lookup"><span data-stu-id="80402-635">The <xref:System.ComponentModel.MaskedTextProvider.Set%2A> method clears the existing contents of the formatted string and then applies the mask against the `input` string to update the contents of the formatted string.</span></span>  
  
 <span data-ttu-id="80402-636">Poniższe warunki są traktowane jako błędy.</span><span class="sxs-lookup"><span data-stu-id="80402-636">The following conditions are considered errors.</span></span> <span data-ttu-id="80402-637">Gdy wystąpi błąd, ciąg sformatowany pozostanie niezmieniona i <xref:System.ComponentModel.MaskedTextProvider.Set%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="80402-637">When an error occurs, the formatted string remains unaltered and <xref:System.ComponentModel.MaskedTextProvider.Set%2A> returns `false`.</span></span>  
  
-   <span data-ttu-id="80402-638">Nie ma wystarczającej liczby pozycji można edytować w sformatowanego ciągu do przechowywania zawartości ciąg zastępczy.</span><span class="sxs-lookup"><span data-stu-id="80402-638">There are not enough editable positions in the formatted string to hold the contents of the replacement string.</span></span>  
  
-   <span data-ttu-id="80402-639">Jedna z wartości znak zastępczy, jest nieprawidłowy, ponieważ nie jest drukowania, lub jest niezgodny z jej odpowiadającego mu elementu maski.</span><span class="sxs-lookup"><span data-stu-id="80402-639">One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="80402-640">
            <paramref name="input" /> Parametr jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-640">The <paramref name="input" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public bool Set (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Set(string input, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Set (input As String, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Set(System::String ^ input, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Set : string *  *  -&gt; bool" Usage="maskedTextProvider.Set (input, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="80402-641">
            <see cref="T:System.String" /> Wartość używana do ustawiania sformatowanego ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-641">The <see cref="T:System.String" /> value used to set the formatted string.</span>
          </span>
        </param>
        <param name="testPosition">
          <span data-ttu-id="80402-642">W przypadku powodzenia liczona od zera pozycja ciągu w formacie, na którym rzeczywiście została ustawiona po ostatnim znaku; w przeciwnym razie pierwszy pozycji, których działanie nie powiodło się.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-642">If successful, the zero-based position in the formatted string where the last character was actually set; otherwise, the first position where the operation failed.</span>
          </span>
          <span data-ttu-id="80402-643">Parametr wyjściowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-643">An output parameter.</span>
          </span>
        </param>
        <param name="resultHint">
          <span data-ttu-id="80402-644">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> krótkiej formie opisujący wynik operacji set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-644">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the set operation.</span>
          </span>
          <span data-ttu-id="80402-645">Parametr wyjściowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-645">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-646">Ustawia ciąg sformatowany do określonego ciągu wejściowego, a następnie generuje usuwania pozycji i informacje opisowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-646">Sets the formatted string to the specified input string, and then outputs the removal position and descriptive information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-647">
            <see langword="true" /> Jeśli wszystkie znaki pomyślnie zostały ustawione; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-647">
              <see langword="true" /> if all the characters were successfully set; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-648"><xref:System.ComponentModel.MaskedTextProvider.Set%2A> Metody usuwa istniejącą zawartość elementu sformatowany ciąg znaków, a następnie stosuje maski przed `input` ciąg, aby zaktualizować zawartość sformatowanego ciągu.</span><span class="sxs-lookup"><span data-stu-id="80402-648">The <xref:System.ComponentModel.MaskedTextProvider.Set%2A> method clears the existing contents of the formatted string and then applies the mask against the `input` string to update the contents of the formatted string.</span></span>  
  
 <span data-ttu-id="80402-649">Poniższe warunki są traktowane jako błędy.</span><span class="sxs-lookup"><span data-stu-id="80402-649">The following conditions are considered errors.</span></span> <span data-ttu-id="80402-650">Gdy wystąpi błąd, ciąg sformatowany pozostanie niezmieniona i <xref:System.ComponentModel.MaskedTextProvider.Set%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="80402-650">When an error occurs, the formatted string remains unaltered and <xref:System.ComponentModel.MaskedTextProvider.Set%2A> returns `false`.</span></span>  
  
-   <span data-ttu-id="80402-651">Nie ma wystarczającej liczby pozycji można edytować w sformatowanego ciągu do przechowywania zawartości ciąg zastępczy.</span><span class="sxs-lookup"><span data-stu-id="80402-651">There are not enough editable positions in the formatted string to hold the contents of the replacement string.</span></span>  
  
-   <span data-ttu-id="80402-652">Jedna z wartości znak zastępczy, jest nieprawidłowy, ponieważ nie jest drukowania, lub jest niezgodny z jej odpowiadającego mu elementu maski.</span><span class="sxs-lookup"><span data-stu-id="80402-652">One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</span></span>  
  
 <span data-ttu-id="80402-653">Ta wersja <xref:System.ComponentModel.MaskedTextProvider.Set%2A> zawiera dwa parametry dodatkowe dane wyjściowe, aby przekazać więcej informacji na temat operacji metody.</span><span class="sxs-lookup"><span data-stu-id="80402-653">This version of <xref:System.ComponentModel.MaskedTextProvider.Set%2A> provides two additional output parameters to convey more information about the operation of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="80402-654">
            <paramref name="input" /> Parametr jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-654">The <paramref name="input" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      </Docs>
    </Member>
    <Member MemberName="SkipLiterals">
      <MemberSignature Language="C#" Value="public bool SkipLiterals { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipLiterals" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipLiterals As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SkipLiterals { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SkipLiterals : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.SkipLiterals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80402-655">Pobiera lub ustawia wartość wskazującą, czy pozycje znak maski mogą zostać zastąpione przez ich takie same wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-655">Gets or sets a value indicating whether literal character positions in the mask can be overwritten by their same values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80402-656">
            <see langword="true" /> Zezwalaj na literały ma zostać dodana z powrotem; w przeciwnym razie <see langword="false" /> uniemożliwia użytkownikowi Zastąp znaki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-656">
              <see langword="true" /> to allow literals to be added back; otherwise, <see langword="false" /> to not allow the user to overwrite literal characters.</span>
          </span>
          <span data-ttu-id="80402-657">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-657">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-658">Maska wprowadzania może zawierać znaków literału i edytować.</span><span class="sxs-lookup"><span data-stu-id="80402-658">Input masks can contain literal and editable characters.</span></span> <span data-ttu-id="80402-659">Jeśli jest podejmowana próba, Dodaj znak wejściowy miejsce zajmowane przez literału, wartości maski <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> właściwość określa wynik.</span><span class="sxs-lookup"><span data-stu-id="80402-659">If an attempt is made to add an input character to the position in a mask occupied by a literal, the value of the <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> property determines the result.</span></span>  
  
-   <span data-ttu-id="80402-660">Jeśli ta właściwość jest `true`, jest prawidłową Zastąp taką samą wartość literału podczas dodawania wprowadzanie znaków.</span><span class="sxs-lookup"><span data-stu-id="80402-660">If this property is `true`, it is valid to overwrite a literal with the same value when adding input characters.</span></span> <span data-ttu-id="80402-661">Na przykład wartość znaku ukośnika, `'/'`, można go dodać do trzeciego pozycji maski `"00/00/000"`.</span><span class="sxs-lookup"><span data-stu-id="80402-661">For example, a forward slash character value, `'/'`, could be added to the third position of the mask `"00/00/000"`.</span></span>  
  
-   <span data-ttu-id="80402-662">Jeśli ta właściwość jest `false`, nie jest prawidłową można przypisać wartości do pozycji maska zajmowane przez znak.</span><span class="sxs-lookup"><span data-stu-id="80402-662">If this property is `false`, it is not valid to assign any value to a mask position occupied by a literal character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.SkipLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
      </Docs>
    </Member>
    <Member MemberName="ToDisplayString">
      <MemberSignature Language="C#" Value="public string ToDisplayString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToDisplayString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToDisplayString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToDisplayString();" />
      <MemberSignature Language="F#" Value="member this.ToDisplayString : unit -&gt; string" Usage="maskedTextProvider.ToDisplayString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="80402-663">Zwraca ciąg sformatowany w postaci wyświetlanej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-663">Returns the formatted string in a displayable form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-664">Sformatowany <see cref="T:System.String" /> zawierającą monity i literały maski.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-664">The formatted <see cref="T:System.String" /> that includes prompts and mask literals.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-665"><xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> Metody zawsze zawiera znaki monitu i literału w zwracanej wartości, niezależnie od wartości <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> lub <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="80402-665">The <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> method will always include prompt and literal characters in the return value, regardless of the value of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> or <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties.</span></span> <span data-ttu-id="80402-666">Ta metoda zawsze spowoduje wyświetlenie znaków hasła, jeśli <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> właściwość ma ustawioną wartość znaków innych niż `null`.</span><span class="sxs-lookup"><span data-stu-id="80402-666">This method will always display password characters if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a character value other than `null`.</span></span>  
  
 <span data-ttu-id="80402-667"><xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> jest najczęściej używany do uzyskania ciąg wyświetlany w elementach interfejsu skojarzonego użytkownika, takich jak <xref:System.Windows.Forms.MaskedTextBox>.</span><span class="sxs-lookup"><span data-stu-id="80402-667"><xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> is commonly used to obtain the string to display in associated user interface elements, such as <xref:System.Windows.Forms.MaskedTextBox>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="80402-668">Zwraca ciąg sformatowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-668">Returns the formatted string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="maskedTextProvider.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="80402-669">Zwraca sformatowany ciąg, który zawiera wszystkie wartości przypisanej znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-669">Returns the formatted string that includes all the assigned character values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-670">Sformatowany <see cref="T:System.String" /> zawierającą wszystkie wartości przypisanej znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-670">The formatted <see cref="T:System.String" /> that includes all the assigned character values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-671">Ta wersja przeciążone <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> metoda zawiera monity i literały zgodnie z bieżącymi wartościami <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> i <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> właściwości, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="80402-671">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively.</span></span> <span data-ttu-id="80402-672">Zawsze zwróci oryginalnego wprowadzanie znaków ignorowanie wartość <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="80402-672">It will always return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="80402-673">Ponieważ ta metoda ujawnia informacje, które zwykle jest chroniony przez znaków hasła w interfejsie użytkownika, należy używać z najwyższą ostrożność Aby uniknąć przypadkowego ujawnienia danych poufnych użytkownika.</span><span class="sxs-lookup"><span data-stu-id="80402-673">Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool ignorePasswordChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool ignorePasswordChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (ignorePasswordChar As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool ignorePasswordChar);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool -&gt; string" Usage="maskedTextProvider.ToString ignorePasswordChar" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ignorePasswordChar" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ignorePasswordChar">
          <span data-ttu-id="80402-674">
            <see langword="true" /> Aby przywrócić znakom można edytować; w przeciwnym razie <see langword="false" /> z informacją, że <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> właściwości ma zostać wdrożona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-674">
              <see langword="true" /> to return the actual editable characters; otherwise, <see langword="false" /> to indicate that the <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> property is to be honored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-675">Zwraca ciąg sformatowany, opcjonalnie tym znaków hasła.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-675">Returns the formatted string, optionally including password characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-676">Sformatowany <see cref="T:System.String" /> zawierającą literały monity i opcjonalnie znaków hasła.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-676">The formatted <see cref="T:System.String" /> that includes literals, prompts, and optionally password characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-677">Ta wersja przeciążone <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> metoda zawiera monity i literały zgodnie z bieżącymi wartościami <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> i <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> właściwości, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="80402-677">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively.</span></span> <span data-ttu-id="80402-678">Jeśli `ignorePasswordChar` parametr jest `true`, zwróci oryginalnego wprowadzanie znaków ignorowanie wartość <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="80402-678">If the `ignorePasswordChar` parameter is `true`, it will return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span> <span data-ttu-id="80402-679">Jeśli ten parametr ma `false`, zostanie użyty do ukrywania danych wejściowych użytkownika można edytować, jeśli znak hasła <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> wartość właściwości jest równa wartości innych niż `null`.</span><span class="sxs-lookup"><span data-stu-id="80402-679">If this parameter is `false`, it will use the password character to obscure editable user input if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a value other than `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="80402-680">Ponieważ ta metoda potencjalnie ujawnia informacje, które zwykle jest chroniony przez znaków hasła w interfejsie użytkownika, należy używać z najwyższą ostrożność Aby uniknąć przypadkowego ujawnienia danych poufnych użytkownika.</span><span class="sxs-lookup"><span data-stu-id="80402-680">Because this method potentially reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool includePrompt, bool includeLiterals);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool includePrompt, bool includeLiterals) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (includePrompt As Boolean, includeLiterals As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool includePrompt, bool includeLiterals);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool * bool -&gt; string" Usage="maskedTextProvider.ToString (includePrompt, includeLiterals)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrompt" Type="System.Boolean" />
        <Parameter Name="includeLiterals" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrompt">
          <span data-ttu-id="80402-681">
            <see langword="true" /> Aby uwzględnić znaki monitu w ciągu zwracanego; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-681">
              <see langword="true" /> to include prompt characters in the return string; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="includeLiterals">
          <span data-ttu-id="80402-682">
            <see langword="true" /> Aby uwzględnić znaki w ciągu zwracanego; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-682">
              <see langword="true" /> to include literal characters in the return string; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-683">Zwraca ciąg sformatowany, opcjonalnie tym Monituj i literał znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-683">Returns the formatted string, optionally including prompt and literal characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-684">Sformatowany <see cref="T:System.String" /> zawierającą wszystkie znak przypisanej wartości i opcjonalnie zawiera literały i wyświetla monit o.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-684">The formatted <see cref="T:System.String" /> that includes all the assigned character values and optionally includes literals and prompts.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-685">Ta wersja przeciążone <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> metoda zawiera literały według wartości i wyświetla monit `IncludePrompt` i `IncludeLiterals` parametry, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="80402-685">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method includes prompts and literals according to the values of the `IncludePrompt` and `IncludeLiterals` parameters, respectively.</span></span> <span data-ttu-id="80402-686">Zwróć uwagę, że te parametry zastąpienie wartości <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="80402-686">Notice that these parameters override the values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A><xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties.</span></span> <span data-ttu-id="80402-687">Ta metoda zawsze zwraca oryginalnego wprowadzanie znaków ignorowanie wartość <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="80402-687">This method will always return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="80402-688">Ponieważ ta metoda ujawnia informacje, które zwykle jest chroniony przez znaków hasła w interfejsie użytkownika, należy używać z najwyższą ostrożność Aby uniknąć przypadkowego ujawnienia danych poufnych użytkownika.</span><span class="sxs-lookup"><span data-stu-id="80402-688">Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (int startPosition, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(int32 startPosition, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (startPosition As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(int startPosition, int length);" />
      <MemberSignature Language="F#" Value="override this.ToString : int * int -&gt; string" Usage="maskedTextProvider.ToString (startPosition, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startPosition">
          <span data-ttu-id="80402-689">Liczony od zera pozycja w ciąg sformatowany którym rozpoczyna się dane wyjściowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-689">The zero-based position in the formatted string where the output begins.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="80402-690">Liczba znaków do zwrócenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-690">The number of characters to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-691">Zwraca podciąg sformatowanego ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-691">Returns a substring of the formatted string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-692">W przypadku powodzenia podciąg sformatowany <see cref="T:System.String" />, która obejmuje wszystkie wartości przypisanej znaków; w przeciwnym razie <see cref="F:System.String.Empty" /> ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-692">If successful, a substring of the formatted <see cref="T:System.String" />, which includes all the assigned character values; otherwise the <see cref="F:System.String.Empty" /> string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-693">Ta wersja przeciążone <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> metoda zwraca ciąg sformatowany ciąg znaków, zaczynając od pozycji `startPos` i tym kolejne liczby znaków określonych przez `length` parametru.</span><span class="sxs-lookup"><span data-stu-id="80402-693">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter.</span></span> <span data-ttu-id="80402-694">Zwracany ciąg zawiera monity i literały zgodnie z bieżącymi wartościami <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> i <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> właściwości, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="80402-694">The returned string includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively.</span></span> <span data-ttu-id="80402-695">Zwracany ciąg będzie zawierał oryginalnego wprowadzanie znaków; <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> właściwość zawsze jest ignorowana.</span><span class="sxs-lookup"><span data-stu-id="80402-695">The return string will contain the original input characters; the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is always ignored.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="80402-696">Ponieważ ta metoda ujawnia informacje, które zwykle jest chroniony przez znaków hasła w interfejsie użytkownika, należy używać z najwyższą ostrożność Aby uniknąć przypadkowego ujawnienia danych poufnych użytkownika.</span><span class="sxs-lookup"><span data-stu-id="80402-696">Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 <span data-ttu-id="80402-697"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> w przypadku niezgodności w parametrach wejściowych, wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="80402-697"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:</span></span>  
  
-   <span data-ttu-id="80402-698">Jeśli `startPos` jest mniejsza od zera, pozycja początkowa jest ustawiony na zero.</span><span class="sxs-lookup"><span data-stu-id="80402-698">If `startPos` is less than zero, the starting position is set to zero.</span></span>  
  
-   <span data-ttu-id="80402-699">Jeśli `startPos` jest większa niż lub równa rzeczywiste <xref:System.ComponentModel.MaskedTextProvider.Length%2A> sformatowanego ciągu <xref:System.String.Empty> zwrócony ciąg.</span><span class="sxs-lookup"><span data-stu-id="80402-699">If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned.</span></span>  
  
-   <span data-ttu-id="80402-700">Jeśli `length` jest większa niż liczba pozostałych znaków ostatnich znaków pozycję początkową, tylko pozostałe są zwracane.</span><span class="sxs-lookup"><span data-stu-id="80402-700">If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned.</span></span>  
  
-   <span data-ttu-id="80402-701">Jeśli `length` jest mniejsza niż lub równa zero, <xref:System.String.Empty> zwrócony ciąg.</span><span class="sxs-lookup"><span data-stu-id="80402-701">If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool ignorePasswordChar, int startPosition, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool ignorePasswordChar, int32 startPosition, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (ignorePasswordChar As Boolean, startPosition As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool ignorePasswordChar, int startPosition, int length);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool * int * int -&gt; string" Usage="maskedTextProvider.ToString (ignorePasswordChar, startPosition, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ignorePasswordChar" Type="System.Boolean" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ignorePasswordChar">
          <span data-ttu-id="80402-702">
            <see langword="true" /> Aby przywrócić znakom można edytować; w przeciwnym razie <see langword="false" /> z informacją, że <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> właściwości ma zostać wdrożona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-702">
              <see langword="true" /> to return the actual editable characters; otherwise, <see langword="false" /> to indicate that the <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> property is to be honored.</span>
          </span>
        </param>
        <param name="startPosition">
          <span data-ttu-id="80402-703">Liczony od zera pozycja w ciąg sformatowany którym rozpoczyna się dane wyjściowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-703">The zero-based position in the formatted string where the output begins.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="80402-704">Liczba znaków do zwrócenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-704">The number of characters to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-705">Zwraca ciąg sformatowany ciąg znaków, opcjonalnie tym znaków hasła.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-705">Returns a substring of the formatted string, optionally including password characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-706">W przypadku powodzenia podciąg sformatowany <see cref="T:System.String" />, w tym literały monity i opcjonalnie znaków hasła; w przeciwnym razie <see cref="F:System.String.Empty" /> ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-706">If successful, a substring of the formatted <see cref="T:System.String" />, which includes literals, prompts, and optionally password characters; otherwise the <see cref="F:System.String.Empty" /> string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-707">Ta wersja przeciążone <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> metoda zwraca ciąg sformatowany ciąg znaków, zaczynając od pozycji `startPos` i tym kolejne liczby znaków określonych przez `length` parametru.</span><span class="sxs-lookup"><span data-stu-id="80402-707">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter.</span></span> <span data-ttu-id="80402-708">Zwracany ciąg zawiera monity i literały zgodnie z bieżącymi wartościami <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> i <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> właściwości, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="80402-708">The returned string includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively.</span></span> <span data-ttu-id="80402-709">Jeśli `ignorePasswordChar` parametr jest `true`, zwróci oryginalnego wprowadzanie znaków ignorowanie wartość <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="80402-709">If the `ignorePasswordChar` parameter is `true`, it will return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span> <span data-ttu-id="80402-710">Jeśli ten parametr ma `false`, zostanie użyty do ukrywania danych wejściowych użytkownika można edytować, jeśli znak hasła <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> wartość właściwości jest równa wartości innych niż `null`.</span><span class="sxs-lookup"><span data-stu-id="80402-710">If this parameter is `false`, it will use the password character to obscure editable user input if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a value other than `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="80402-711">Ponieważ ta metoda potencjalnie ujawnia informacje, które zwykle jest chroniony przez znaków hasła w interfejsie użytkownika, należy używać z najwyższą ostrożność Aby uniknąć przypadkowego ujawnienia danych poufnych użytkownika.</span><span class="sxs-lookup"><span data-stu-id="80402-711">Because this method potentially reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 <span data-ttu-id="80402-712"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> w przypadku niezgodności w parametrach wejściowych, wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="80402-712"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:</span></span>  
  
-   <span data-ttu-id="80402-713">Jeśli `startPos` jest mniejsza od zera, pozycja początkowa jest ustawiony na zero.</span><span class="sxs-lookup"><span data-stu-id="80402-713">If `startPos` is less than zero, the starting position is set to zero.</span></span>  
  
-   <span data-ttu-id="80402-714">Jeśli `startPos` jest większa niż lub równa rzeczywiste <xref:System.ComponentModel.MaskedTextProvider.Length%2A> sformatowanego ciągu <xref:System.String.Empty> zwrócony ciąg.</span><span class="sxs-lookup"><span data-stu-id="80402-714">If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned.</span></span>  
  
-   <span data-ttu-id="80402-715">Jeśli `length` jest większa niż liczba pozostałych znaków ostatnich znaków pozycję początkową, tylko pozostałe są zwracane.</span><span class="sxs-lookup"><span data-stu-id="80402-715">If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned.</span></span>  
  
-   <span data-ttu-id="80402-716">Jeśli `length` jest mniejsza niż lub równa zero, <xref:System.String.Empty> zwrócony ciąg.</span><span class="sxs-lookup"><span data-stu-id="80402-716">If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool includePrompt, bool includeLiterals, int startPosition, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool includePrompt, bool includeLiterals, int32 startPosition, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (includePrompt As Boolean, includeLiterals As Boolean, startPosition As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool includePrompt, bool includeLiterals, int startPosition, int length);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool * bool * int * int -&gt; string" Usage="maskedTextProvider.ToString (includePrompt, includeLiterals, startPosition, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrompt" Type="System.Boolean" />
        <Parameter Name="includeLiterals" Type="System.Boolean" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="includePrompt">
          <span data-ttu-id="80402-717">
            <see langword="true" /> Aby uwzględnić znaki monitu w ciągu zwracanego; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-717">
              <see langword="true" /> to include prompt characters in the return string; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="includeLiterals">
          <span data-ttu-id="80402-718">
            <see langword="true" /> Aby uwzględnić znaki w ciągu zwracanego; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-718">
              <see langword="true" /> to include literal characters in the return string; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="startPosition">
          <span data-ttu-id="80402-719">Liczony od zera pozycja w ciąg sformatowany którym rozpoczyna się dane wyjściowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-719">The zero-based position in the formatted string where the output begins.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="80402-720">Liczba znaków do zwrócenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-720">The number of characters to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-721">Zwraca ciąg sformatowany ciąg znaków, opcjonalnie tym Monituj i literał znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-721">Returns a substring of the formatted string, optionally including prompt and literal characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-722">W przypadku powodzenia podciąg sformatowany <see cref="T:System.String" />, zawierający wszystkie znak przypisanej wartości i opcjonalnie zawiera literały i monity; w przeciwnym razie <see cref="F:System.String.Empty" /> ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-722">If successful, a substring of the formatted <see cref="T:System.String" />, which includes all the assigned character values and optionally includes literals and prompts; otherwise the <see cref="F:System.String.Empty" /> string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-723">Ta wersja przeciążone <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> metoda zwraca ciąg sformatowany ciąg znaków, zaczynając od pozycji `startPos` i tym kolejne liczby znaków określonych przez `length` parametru.</span><span class="sxs-lookup"><span data-stu-id="80402-723">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter.</span></span> <span data-ttu-id="80402-724">Zwracany ciąg zawiera literały według wartości i wyświetla monit `IncludePrompt` i `IncludeLiterals` parametry, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="80402-724">The return string includes prompts and literals according to the values of the `IncludePrompt` and `IncludeLiterals` parameters, respectively.</span></span> <span data-ttu-id="80402-725">Zwróć uwagę, że te parametry zastąpienie wartości <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="80402-725">Notice that these parameters override the values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A><xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties.</span></span> <span data-ttu-id="80402-726">Ta metoda zawsze zwraca oryginalnego wprowadzanie znaków ignorowanie wartość <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="80402-726">This method will always return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="80402-727">Ponieważ ta metoda ujawnia informacje, które zwykle jest chroniony przez znaków hasła w interfejsie użytkownika, należy używać z najwyższą ostrożność Aby uniknąć przypadkowego ujawnienia danych poufnych użytkownika.</span><span class="sxs-lookup"><span data-stu-id="80402-727">Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 <span data-ttu-id="80402-728"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> w przypadku niezgodności w parametrach wejściowych, wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="80402-728"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:</span></span>  
  
-   <span data-ttu-id="80402-729">Jeśli `startPos` jest mniejsza od zera, pozycja początkowa jest ustawiony na zero.</span><span class="sxs-lookup"><span data-stu-id="80402-729">If `startPos` is less than zero, the starting position is set to zero.</span></span>  
  
-   <span data-ttu-id="80402-730">Jeśli `startPos` jest większa niż lub równa rzeczywiste <xref:System.ComponentModel.MaskedTextProvider.Length%2A> sformatowanego ciągu <xref:System.String.Empty> zwrócony ciąg.</span><span class="sxs-lookup"><span data-stu-id="80402-730">If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned.</span></span>  
  
-   <span data-ttu-id="80402-731">Jeśli `length` jest większa niż liczba pozostałych znaków ostatnich znaków pozycję początkową, tylko pozostałe są zwracane.</span><span class="sxs-lookup"><span data-stu-id="80402-731">If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned.</span></span>  
  
-   <span data-ttu-id="80402-732">Jeśli `length` jest mniejsza niż lub równa zero, <xref:System.String.Empty> zwrócony ciąg.</span><span class="sxs-lookup"><span data-stu-id="80402-732">If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool ignorePasswordChar, bool includePrompt, bool includeLiterals, int startPosition, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool ignorePasswordChar, bool includePrompt, bool includeLiterals, int32 startPosition, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (ignorePasswordChar As Boolean, includePrompt As Boolean, includeLiterals As Boolean, startPosition As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool ignorePasswordChar, bool includePrompt, bool includeLiterals, int startPosition, int length);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool * bool * bool * int * int -&gt; string" Usage="maskedTextProvider.ToString (ignorePasswordChar, includePrompt, includeLiterals, startPosition, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ignorePasswordChar" Type="System.Boolean" />
        <Parameter Name="includePrompt" Type="System.Boolean" />
        <Parameter Name="includeLiterals" Type="System.Boolean" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ignorePasswordChar">
          <span data-ttu-id="80402-733">
            <see langword="true" /> Aby przywrócić znakom można edytować; w przeciwnym razie <see langword="false" /> z informacją, że <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> właściwości ma zostać wdrożona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-733">
              <see langword="true" /> to return the actual editable characters; otherwise, <see langword="false" /> to indicate that the <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> property is to be honored.</span>
          </span>
        </param>
        <param name="includePrompt">
          <span data-ttu-id="80402-734">
            <see langword="true" /> Aby uwzględnić znaki monitu w ciągu zwracanego; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-734">
              <see langword="true" /> to include prompt characters in the return string; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="includeLiterals">
          <span data-ttu-id="80402-735">
            <see langword="true" /> Aby zwrócić Literały ciągu zwracanego; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-735">
              <see langword="true" /> to return literal characters in the return string; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="startPosition">
          <span data-ttu-id="80402-736">Liczony od zera pozycja w ciąg sformatowany którym rozpoczyna się dane wyjściowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-736">The zero-based position in the formatted string where the output begins.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="80402-737">Liczba znaków do zwrócenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-737">The number of characters to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-738">Zwraca ciąg sformatowany ciąg znaków, opcjonalnie w tym wierszu, literal, a hasło znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-738">Returns a substring of the formatted string, optionally including prompt, literal, and password characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-739">W przypadku powodzenia podciąg sformatowany <see cref="T:System.String" />, zawierający wszystkie przypisanej znak wartości i opcjonalnie zawiera literały, monity i znaków hasła; w przeciwnym razie <see cref="F:System.String.Empty" /> ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-739">If successful, a substring of the formatted <see cref="T:System.String" />, which includes all the assigned character values and optionally includes literals, prompts, and password characters; otherwise the <see cref="F:System.String.Empty" /> string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-740">Ta wersja przeciążone <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> metoda zwraca ciąg sformatowany ciąg znaków, zaczynając od pozycji `startPos` i tym kolejne liczby znaków określonych przez `length` parametru.</span><span class="sxs-lookup"><span data-stu-id="80402-740">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter.</span></span> <span data-ttu-id="80402-741">Zwracany ciąg zawiera literały według wartości i wyświetla monit `IncludePrompt` i `IncludeLiterals` parametry, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="80402-741">The return string includes prompts and literals according to the values of the `IncludePrompt` and `IncludeLiterals` parameters, respectively.</span></span> <span data-ttu-id="80402-742">Zwróć uwagę, że te parametry zastąpienie wartości <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> i <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="80402-742">Notice that these parameters override the values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and  <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties.</span></span> <span data-ttu-id="80402-743">Jeśli `ignorePasswordChar` parametr jest `true`, zwróci oryginalnego wprowadzanie znaków ignorowanie wartość <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="80402-743">If the `ignorePasswordChar` parameter is `true`, it will return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span> <span data-ttu-id="80402-744">Jeśli ten parametr ma `false`, zostanie użyty do ukrywania danych wejściowych użytkownika można edytować, jeśli znak hasła <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> wartość właściwości jest równa wartości innych niż `null`.</span><span class="sxs-lookup"><span data-stu-id="80402-744">If this parameter is `false`, it will use the password character to obscure editable user input if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a value other than `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="80402-745">Ponieważ ta metoda potencjalnie ujawnia informacje, które zwykle jest chroniony przez znaków hasła w interfejsie użytkownika, należy używać z najwyższą ostrożność Aby uniknąć przypadkowego ujawnienia danych poufnych użytkownika.</span><span class="sxs-lookup"><span data-stu-id="80402-745">Because this method potentially reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 <span data-ttu-id="80402-746"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> w przypadku niezgodności w parametrach wejściowych, wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="80402-746"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:</span></span>  
  
-   <span data-ttu-id="80402-747">Jeśli `startPos` jest mniejsza od zera, pozycja początkowa jest ustawiony na zero.</span><span class="sxs-lookup"><span data-stu-id="80402-747">If `startPos` is less than zero, the starting position is set to zero.</span></span>  
  
-   <span data-ttu-id="80402-748">Jeśli `startPos` jest większa niż lub równa rzeczywiste <xref:System.ComponentModel.MaskedTextProvider.Length%2A> sformatowanego ciągu <xref:System.String.Empty> zwrócony ciąg.</span><span class="sxs-lookup"><span data-stu-id="80402-748">If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned.</span></span>  
  
-   <span data-ttu-id="80402-749">Jeśli `length` jest większa niż liczba pozostałych znaków ostatnich znaków pozycję początkową, tylko pozostałe są zwracane.</span><span class="sxs-lookup"><span data-stu-id="80402-749">If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned.</span></span>  
  
-   <span data-ttu-id="80402-750">Jeśli `length` jest mniejsza niż lub równa zero, <xref:System.String.Empty> zwrócony ciąg.</span><span class="sxs-lookup"><span data-stu-id="80402-750">If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="VerifyChar">
      <MemberSignature Language="C#" Value="public bool VerifyChar (char input, int position, out System.ComponentModel.MaskedTextResultHint hint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyChar(char input, int32 position, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; hint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyChar (input As Char, position As Integer, ByRef hint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyChar(char input, int position, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % hint);" />
      <MemberSignature Language="F#" Value="member this.VerifyChar : char * int *  -&gt; bool" Usage="maskedTextProvider.VerifyChar (input, position, hint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="hint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="80402-751">
            <see cref="T:System.Char" /> Wartość do sprawdzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-751">The <see cref="T:System.Char" /> value to test.</span>
          </span>
        </param>
        <param name="position">
          <span data-ttu-id="80402-752">Pozycja w masce do testowania znak wejściowy przed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-752">The position in the mask to test the input character against.</span>
          </span>
        </param>
        <param name="hint">
          <span data-ttu-id="80402-753">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> opisujący krótkiej formie wyniku operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-753">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span>
          </span>
          <span data-ttu-id="80402-754">Parametr wyjściowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-754">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-755">Sprawdza, czy określony znak może pomyślnie ustawiono na określonej pozycji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-755">Tests whether the specified character could be set successfully at the specified position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-756">
            <see langword="true" /> Jeśli określony znak jest nieprawidłowa dla określonej pozycji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-756">
              <see langword="true" /> if the specified character is valid for the specified position; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-757"><xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A> Metoda sprawdza, czy wartość pojedynczy znak reprezentuje prawidłową wartość wejściową w określonej pozycji w ciągu sformatowana.</span><span class="sxs-lookup"><span data-stu-id="80402-757">The <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A> method tests whether a single character value represents valid input at the specified position in the formatted string.</span></span> <span data-ttu-id="80402-758">Ta metoda zwróci `false` z następujących powodów:</span><span class="sxs-lookup"><span data-stu-id="80402-758">This method will return `false` for the following reasons:</span></span>  
  
-   <span data-ttu-id="80402-759">`pos` Parametrów jest mniejsza niż zero lub większa niż <xref:System.ComponentModel.MaskedTextProvider.Length%2A> z <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>.</span><span class="sxs-lookup"><span data-stu-id="80402-759">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>.</span></span>  
  
-   <span data-ttu-id="80402-760">Znak `input` nie jest prawidłowym znakiem wejściowych, na podstawie <xref:System.ComponentModel.MaskedTextProvider.IsValidInputChar%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="80402-760">The character `input` is not a valid input character, as determined by the <xref:System.ComponentModel.MaskedTextProvider.IsValidInputChar%2A> method.</span></span>  
  
-   <span data-ttu-id="80402-761">`input` Nie jest zgodny z elementem maski w określonej pozycji `pos`.</span><span class="sxs-lookup"><span data-stu-id="80402-761">The `input` is not compatible with the mask element at the specified position, `pos`.</span></span>  
  
 <span data-ttu-id="80402-762">Ostatni warunek może zależeć od bieżącej wartości <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>, <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>, <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> i <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="80402-762">The last condition may depend on the current value of the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>, <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>, <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> and <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> properties.</span></span>  
  
 <span data-ttu-id="80402-763">Aby przetestować cały ciąg wejściowy przed maski, użyj jednej z <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> metody zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="80402-763">To test an entire input string against the mask, use one of the <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> methods instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="VerifyEscapeChar">
      <MemberSignature Language="C#" Value="public bool VerifyEscapeChar (char input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyEscapeChar(char input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyEscapeChar (input As Char, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyEscapeChar(char input, int position);" />
      <MemberSignature Language="F#" Value="member this.VerifyEscapeChar : char * int -&gt; bool" Usage="maskedTextProvider.VerifyEscapeChar (input, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="80402-764">
            <see cref="T:System.Char" /> Wartość do sprawdzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-764">The <see cref="T:System.Char" /> value to test.</span>
          </span>
        </param>
        <param name="position">
          <span data-ttu-id="80402-765">Pozycja w masce do testowania znak wejściowy przed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-765">The position in the mask to test the input character against.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-766">Sprawdza, czy określony znak może użyć znaków ucieczki w określonej pozycji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-766">Tests whether the specified character would be escaped at the specified position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-767">
            <see langword="true" /> Jeśli określony znak może użyć znaków ucieczki w określonej pozycji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-767">
              <see langword="true" /> if the specified character would be escaped at the specified position; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-768">Znak jest określany jako *wpisywany* Jeśli jest ona prawidłową wartość wejściową, ale nie jest przypisany do tej pozycji w ciągu sformatowana.</span><span class="sxs-lookup"><span data-stu-id="80402-768">A character is said to be *escaped* if it is valid input, but is not assigned to that position in the formatted string.</span></span> <span data-ttu-id="80402-769">Znaki ucieczki spadek znaków na następujące trzy kategorie:</span><span class="sxs-lookup"><span data-stu-id="80402-769">Escaped characters fall into the following three categories:</span></span>  
  
-   <span data-ttu-id="80402-770">Znaki monitu są anulowane, jeśli <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> jest właściwość `true`.</span><span class="sxs-lookup"><span data-stu-id="80402-770">Prompt characters are escaped if the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> property is `true`.</span></span>  
  
-   <span data-ttu-id="80402-771">Wprowadzanie znaków będą miały zmienione znaczenie, jeśli mają taką samą wartość jak literał maski, a <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> jest właściwość `true`.</span><span class="sxs-lookup"><span data-stu-id="80402-771">Input characters are escaped if they have the same value as the literal in the mask, and if the <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> property is `true`.</span></span>  
  
-   <span data-ttu-id="80402-772">Spacje są anulowane, jeśli <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> jest właściwość `true`.</span><span class="sxs-lookup"><span data-stu-id="80402-772">Space characters are escaped if the <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="80402-773"><xref:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar%2A> Metoda również zwraca `false` Jeśli `pos` parametrów jest mniejsza niż zero lub większa niż <xref:System.ComponentModel.MaskedTextProvider.Length%2A> z <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>.</span><span class="sxs-lookup"><span data-stu-id="80402-773">The <xref:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar%2A> method will also return `false` if the `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
      </Docs>
    </Member>
    <MemberGroup MemberName="VerifyString">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="80402-774">Sprawdza, czy można pomyślnie ustawiono określonego ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-774">Tests whether the specified string could be set successfully.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="VerifyString">
      <MemberSignature Language="C#" Value="public bool VerifyString (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyString(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.VerifyString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyString (input As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyString(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.VerifyString : string -&gt; bool" Usage="maskedTextProvider.VerifyString input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="80402-775">
            <see cref="T:System.String" /> Wartość do sprawdzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-775">The <see cref="T:System.String" /> value to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-776">Sprawdza, czy można pomyślnie ustawiono określonego ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-776">Tests whether the specified string could be set successfully.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-777">
            <see langword="true" /> Jeśli określony ciąg reprezentuje prawidłową wartość wejściową; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-777">
              <see langword="true" /> if the specified string represents valid input; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-778"><xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> Stosuje `input` ciągu maski, zmieniając faktycznie sformatowany ciąg, aby przetestować czy `input` będzie ważny w odpowiedniej <xref:System.ComponentModel.MaskedTextProvider.Set%2A> operacji.</span><span class="sxs-lookup"><span data-stu-id="80402-778">The <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> applies the `input` string against the mask, without actually changing the formatted string, to test whether `input` would be valid in a corresponding <xref:System.ComponentModel.MaskedTextProvider.Set%2A> operation.</span></span> <span data-ttu-id="80402-779">Ta metoda zwraca również wartość `true` Jeśli dane wejściowe są `null` lub ma zerową długość.</span><span class="sxs-lookup"><span data-stu-id="80402-779">This method also returns `true` if input is `null` or has zero length.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
      </Docs>
    </Member>
    <Member MemberName="VerifyString">
      <MemberSignature Language="C#" Value="public bool VerifyString (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyString(string input, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyString (input As String, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyString(System::String ^ input, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.VerifyString : string *  *  -&gt; bool" Usage="maskedTextProvider.VerifyString (input, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="80402-780">
            <see cref="T:System.String" /> Wartość do sprawdzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-780">The <see cref="T:System.String" /> value to test.</span>
          </span>
        </param>
        <param name="testPosition">
          <span data-ttu-id="80402-781">W przypadku powodzenia liczony od zera pozycja ostatni znak faktycznie przetestowane; w przeciwnym razie pierwszy pozycji, których nie powiodło się uruchomienie testu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-781">If successful, the zero-based position of the last character actually tested; otherwise, the first position where the test failed.</span>
          </span>
          <span data-ttu-id="80402-782">Parametr wyjściowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-782">An output parameter.</span>
          </span>
        </param>
        <param name="resultHint">
          <span data-ttu-id="80402-783">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> krótkiej formie opisujący wynik operacji testu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-783">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the test operation.</span>
          </span>
          <span data-ttu-id="80402-784">Parametr wyjściowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-784">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80402-785">Sprawdza, czy określony ciąg można ustawić pomyślnie, a następnie generuje pozycji i informacje opisowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-785">Tests whether the specified string could be set successfully, and then outputs position and descriptive information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80402-786">
            <see langword="true" /> Jeśli określony ciąg reprezentuje prawidłową wartość wejściową; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80402-786">
              <see langword="true" /> if the specified string represents valid input; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80402-787"><xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> Stosuje `input` ciągu maski, zmieniając faktycznie sformatowany ciąg, aby przetestować czy `input` będzie ważny w odpowiedniej <xref:System.ComponentModel.MaskedTextProvider.Set%2A> operacji.</span><span class="sxs-lookup"><span data-stu-id="80402-787">The <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> applies the `input` string against the mask, without actually changing the formatted string, to test whether `input` would be valid in a corresponding <xref:System.ComponentModel.MaskedTextProvider.Set%2A> operation.</span></span> <span data-ttu-id="80402-788">Ta metoda zwraca również wartość `true` Jeśli dane wejściowe są `null` lub ma zerową długość.</span><span class="sxs-lookup"><span data-stu-id="80402-788">This method also returns `true` if input is `null` or has zero length.</span></span>  
  
 <span data-ttu-id="80402-789">Ta wersja <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> zawiera dwa parametry dodatkowe dane wyjściowe, aby przekazać więcej informacji na temat operacji metody.</span><span class="sxs-lookup"><span data-stu-id="80402-789">This version of <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> provides two additional output parameters to convey more information about the operation of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
      </Docs>
    </Member>
  </Members>
</Type>