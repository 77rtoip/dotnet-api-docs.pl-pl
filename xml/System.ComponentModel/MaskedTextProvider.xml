<Type Name="MaskedTextProvider" FullName="System.ComponentModel.MaskedTextProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b2b61558f32d7a2c5995390f3f245e752463c5be" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69327154" /></Metadata><TypeSignature Language="C#" Value="public class MaskedTextProvider : ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MaskedTextProvider extends System.Object implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.MaskedTextProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class MaskedTextProvider&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MaskedTextProvider : ICloneable" />
  <TypeSignature Language="F#" Value="type MaskedTextProvider = class&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="2d5f1-101">Reprezentuje usługę analizy masek, która może być używana przez dowolną liczbę kontrolek obsługujących maskowanie, takich jak <see cref="T:System.Windows.Forms.MaskedTextBox" /> kontrolka.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-101">Represents a mask-parsing service that can be used by any number of controls that support masking, such as the <see cref="T:System.Windows.Forms.MaskedTextBox" /> control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-102"><xref:System.Windows.Forms.MaskedTextBox> Kontrolka zawiera maskę składającą się z znaków literału i elementów formatowania, które sprawdza wszystkie dane wejściowe użytkownika.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-102">The <xref:System.Windows.Forms.MaskedTextBox> control contains a mask, composed of literal characters and formatting elements, that it tests all user input against.</span></span> <span data-ttu-id="2d5f1-103">Zamiast trwałego kojarzenia określonego aparatu analizy masek z programem <xref:System.Windows.Forms.MaskedTextBox>, Windows Forms udostępnia go jako oddzielną usługę reprezentowanej <xref:System.ComponentModel.MaskedTextProvider> przez klasę, która definiuje składnię języka maskowania omówionego w dokumentacji programu <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> właściwość.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-103">Instead of permanently associating a specific mask-parsing engine with <xref:System.Windows.Forms.MaskedTextBox>, Windows Forms provides it as a separate service, represented by the <xref:System.ComponentModel.MaskedTextProvider> class, which defines the syntax of the masking language discussed in the documentation for the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property.</span></span>  
  
 <span data-ttu-id="2d5f1-104">Wiele elementów członkowskich <xref:System.Windows.Forms.MaskedTextBox> klasy odwołuje się do ich implementacji do elementów członkowskich <xref:System.ComponentModel.MaskedTextProvider>o podobnej nazwie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-104">Many of the members of the <xref:System.Windows.Forms.MaskedTextBox> class refer their implementation to similarly named members of the associated <xref:System.ComponentModel.MaskedTextProvider>.</span></span> <span data-ttu-id="2d5f1-105">Na przykład <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A?displayProperty=nameWithType> <xref:System.ComponentModel.MaskedTextProvider> Właściwość <xref:System.Windows.Forms.MaskedTextBox> klasy<xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> odwołuje się do wszystkich elementów dostępu do klasy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-105">For example, the <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A?displayProperty=nameWithType> property of the <xref:System.Windows.Forms.MaskedTextBox> class refers all access to the <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> of the <xref:System.ComponentModel.MaskedTextProvider> class.</span></span>  
  
 <span data-ttu-id="2d5f1-106">Aparat analizy masek używany przez <xref:System.ComponentModel.MaskedTextProvider> program jest modelowany po zamaskowanej kontrolce edycji zawartej w Microsoft Visual Basic w wersji 6.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-106">The mask-parsing engine used by <xref:System.ComponentModel.MaskedTextProvider> is modeled after the Masked Edit control included in Microsoft Visual Basic version 6.</span></span> <span data-ttu-id="2d5f1-107">Jego język maskujący został opisany w dokumentacji <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-107">Its masking language is described in the documentation for the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property.</span></span>  
  
 <span data-ttu-id="2d5f1-108">Następujące trzy unikatowe ciągi są związane z <xref:System.ComponentModel.MaskedTextProvider> klasą.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-108">The following three distinct strings are involved with the <xref:System.ComponentModel.MaskedTextProvider> class.</span></span>  
  
|<span data-ttu-id="2d5f1-109">Nazwa ciągu</span><span class="sxs-lookup"><span data-stu-id="2d5f1-109">String name</span></span>|<span data-ttu-id="2d5f1-110">Opis</span><span class="sxs-lookup"><span data-stu-id="2d5f1-110">Description</span></span>|  
|-----------------|-----------------|  
|<span data-ttu-id="2d5f1-111">Wprowadź znak lub ciąg</span><span class="sxs-lookup"><span data-stu-id="2d5f1-111">Input character or string</span></span>|<span data-ttu-id="2d5f1-112">Reprezentuje znaki używane jako dane wejściowe, względem których jest stosowana maska.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-112">Represents the characters used as input that the mask is applied against.</span></span> <span data-ttu-id="2d5f1-113">W rzeczywistości ciąg wejściowy może składać się z wielu operacji <xref:System.ComponentModel.MaskedTextProvider.Add%2A>wejścia, takich jak <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>,, i <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-113">In actuality, the input string may be composed of multiple input operations, including <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, and <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>.</span></span> <span data-ttu-id="2d5f1-114">W związku z tym nie można uzyskać dostępu do ciągu wejściowego bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-114">Therefore, the input string cannot be accessed directly.</span></span> <span data-ttu-id="2d5f1-115">Jednak aspekty obsługi ciągów wejściowych są <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> dostępne za pomocą właściwości i <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>, i <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> .</span><span class="sxs-lookup"><span data-stu-id="2d5f1-115">However, aspects of the input string handling are available though the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> and <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>, and <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> properties.</span></span>|  
|<span data-ttu-id="2d5f1-116">Bitowa</span><span class="sxs-lookup"><span data-stu-id="2d5f1-116">Mask</span></span>|<span data-ttu-id="2d5f1-117">Przedstawia maskę formatowania danych wejściowych służącą do przekształcania ciągu wejściowego w sformatowany ciąg.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-117">Represents the input formatting mask used to transform the input string into the formatted string.</span></span> <span data-ttu-id="2d5f1-118">Ten ciąg jest ustawiany w <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> i uzyskuje dostęp głównie za <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> pośrednictwem właściwości.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-118">This string is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> and accessed primarily though the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property.</span></span> <span data-ttu-id="2d5f1-119">Właściwości maski są również dostępne za pomocą innych elementów członkowskich, takich jak <xref:System.ComponentModel.MaskedTextProvider.Length%2A>właściwości, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>i. <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A></span><span class="sxs-lookup"><span data-stu-id="2d5f1-119">Characteristics of the mask are also available through other members, such as the <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>, and <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> properties.</span></span>|  
|<span data-ttu-id="2d5f1-120">Sformatowany ciąg</span><span class="sxs-lookup"><span data-stu-id="2d5f1-120">Formatted string</span></span>|<span data-ttu-id="2d5f1-121">Reprezentuje ciąg, który powstaje, gdy pełna maska zostanie zastosowana do ciągu wejściowego.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-121">Represents the string that results when the full mask is applied to the input string.</span></span> <span data-ttu-id="2d5f1-122">W sformatowanym ciągu można zbadać wiele elementów członkowskich <xref:System.ComponentModel.MaskedTextProvider.Item%2A>klasy, w tym <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>, <xref:System.ComponentModel.MaskedTextProvider.Length%2A>,, <xref:System.ComponentModel.MaskedTextProvider.MaskFull%2A> <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>,, i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-122">The formatted string can be queried with many members of the class, including <xref:System.ComponentModel.MaskedTextProvider.Item%2A>, <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskFull%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A>, <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>, and so on.</span></span> <span data-ttu-id="2d5f1-123">Pełna wartość sformatowanego ciągu jest dostępna <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> w metodach i. <xref:System.ComponentModel.MaskedTextProvider.ToString%2A></span><span class="sxs-lookup"><span data-stu-id="2d5f1-123">The full value of the formatted string is available from the <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> methods.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="2d5f1-124">Ciąg wejściowy może reprezentować bezpośrednie dane wejściowe użytkownika, tak jak w <xref:System.Windows.Forms.MaskedTextBox>przypadku lub mogą być generowane przez inne procesy, które nie są bezpośrednio skojarzone z operacjami wejścia/wyjścia użytkownika.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-124">The input string may represent direct user input, as in the case of the <xref:System.Windows.Forms.MaskedTextBox>, or may be generated by other processes not directly associated with user input/output operations.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.MaskedTextBox" />
    <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskedTextProvider" />
    <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d5f1-125">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.MaskedTextProvider" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-125">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider mask" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mask"><span data-ttu-id="2d5f1-126"><see cref="T:System.String" /> Reprezentujący maskę wejściową.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-126">A <see cref="T:System.String" /> that represents the input mask.</span></span></param>
        <summary><span data-ttu-id="2d5f1-127">Inicjuje nowe wystąpienie <see cref="T:System.ComponentModel.MaskedTextProvider" /> klasy przy użyciu określonej maski.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-127">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-128">Użycie tego konstruktora jest dokładnie równoważne z następującym wywołaniem <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> konstruktora:</span><span class="sxs-lookup"><span data-stu-id="2d5f1-128">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , null, true, '_', '\0', false)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, bool restrictToAscii);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, bool restrictToAscii) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, restrictToAscii As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, bool restrictToAscii);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * bool -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, restrictToAscii)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="restrictToAscii" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask"><span data-ttu-id="2d5f1-129"><see cref="T:System.String" /> Reprezentujący maskę wejściową.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-129">A <see cref="T:System.String" /> that represents the input mask.</span></span></param>
        <param name="restrictToAscii"><span data-ttu-id="2d5f1-130"><see langword="true" />Aby ograniczyć dane wejściowe do znaków zgodnych ze standardem ASCII; w <see langword="false" /> przeciwnym razie zezwolić na cały zestaw Unicode.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-130"><see langword="true" /> to restrict input to ASCII-compatible characters; otherwise <see langword="false" /> to allow the entire Unicode set.</span></span></param>
        <summary><span data-ttu-id="2d5f1-131">Inicjuje nowe wystąpienie <see cref="T:System.ComponentModel.MaskedTextProvider" /> klasy przy użyciu określonej maski i wartości ograniczenia ASCII.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-131">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask and ASCII restriction value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-132">Użycie tego konstruktora jest dokładnie równoważne z następującym wywołaniem <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> konstruktora:</span><span class="sxs-lookup"><span data-stu-id="2d5f1-132">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , null, true, '_', '\0', restrictToASCII)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * System.Globalization.CultureInfo -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, culture)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="mask"><span data-ttu-id="2d5f1-133"><see cref="T:System.String" /> Reprezentujący maskę wejściową.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-133">A <see cref="T:System.String" /> that represents the input mask.</span></span></param>
        <param name="culture"><span data-ttu-id="2d5f1-134"><see cref="T:System.Globalization.CultureInfo" /> , Który służy do ustawiania znaków separatora zależnego od regionu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-134">A <see cref="T:System.Globalization.CultureInfo" /> that is used to set region-sensitive separator characters.</span></span></param>
        <summary><span data-ttu-id="2d5f1-135">Inicjuje nowe wystąpienie <see cref="T:System.ComponentModel.MaskedTextProvider" /> klasy przy użyciu określonej maski i kultury.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-135">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask and culture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-136">Użycie tego konstruktora jest dokładnie równoważne z następującym wywołaniem <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> konstruktora:</span><span class="sxs-lookup"><span data-stu-id="2d5f1-136">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , culture, true, '_', '\0', false)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Culture" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, char passwordChar, bool allowPromptAsInput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, char passwordChar, bool allowPromptAsInput) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Char,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, passwordChar As Char, allowPromptAsInput As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, char passwordChar, bool allowPromptAsInput);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * char * bool -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, passwordChar, allowPromptAsInput)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="passwordChar" Type="System.Char" />
        <Parameter Name="allowPromptAsInput" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask"><span data-ttu-id="2d5f1-137"><see cref="T:System.String" /> Reprezentujący maskę wejściową.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-137">A <see cref="T:System.String" /> that represents the input mask.</span></span></param>
        <param name="passwordChar"><span data-ttu-id="2d5f1-138">Element <see cref="T:System.Char" /> , który będzie wyświetlany dla znaków wprowadzonych w ciągu hasła.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-138">A <see cref="T:System.Char" /> that will be displayed for characters entered into a password string.</span></span></param>
        <param name="allowPromptAsInput"><span data-ttu-id="2d5f1-139"><see langword="true" />Aby zezwolić na znak monitu jako dane wejściowe; w <see langword="false" />przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-139"><see langword="true" /> to allow the prompt character as input; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2d5f1-140">Inicjuje nowe wystąpienie <see cref="T:System.ComponentModel.MaskedTextProvider" /> klasy przy użyciu określonej maski, znaku hasła i wartości użycia monitu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-140">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask, password character, and prompt usage value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-141">Użycie tego konstruktora jest dokładnie równoważne z następującym wywołaniem <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> konstruktora:</span><span class="sxs-lookup"><span data-stu-id="2d5f1-141">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , null, allowPromptAsInput, '_', passwordChar, false)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, bool restrictToAscii);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, class System.Globalization.CultureInfo culture, bool restrictToAscii) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, culture As CultureInfo, restrictToAscii As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, System::Globalization::CultureInfo ^ culture, bool restrictToAscii);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * System.Globalization.CultureInfo * bool -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, culture, restrictToAscii)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="restrictToAscii" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask"><span data-ttu-id="2d5f1-142"><see cref="T:System.String" /> Reprezentujący maskę wejściową.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-142">A <see cref="T:System.String" /> that represents the input mask.</span></span></param>
        <param name="culture"><span data-ttu-id="2d5f1-143"><see cref="T:System.Globalization.CultureInfo" /> , Który służy do ustawiania znaków separatora zależnego od regionu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-143">A <see cref="T:System.Globalization.CultureInfo" /> that is used to set region-sensitive separator characters.</span></span></param>
        <param name="restrictToAscii"><span data-ttu-id="2d5f1-144"><see langword="true" />Aby ograniczyć dane wejściowe do znaków zgodnych ze standardem ASCII; w <see langword="false" /> przeciwnym razie zezwolić na cały zestaw Unicode.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-144"><see langword="true" /> to restrict input to ASCII-compatible characters; otherwise <see langword="false" /> to allow the entire Unicode set.</span></span></param>
        <summary><span data-ttu-id="2d5f1-145">Inicjuje nowe wystąpienie <see cref="T:System.ComponentModel.MaskedTextProvider" /> klasy przy użyciu określonych wartości ograniczeń maska, kultura i ASCII.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-145">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask, culture, and ASCII restriction value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-146">Użycie tego konstruktora jest dokładnie równoważne z następującym wywołaniem <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> konstruktora:</span><span class="sxs-lookup"><span data-stu-id="2d5f1-146">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , culture, true, '_', '\0', restrictToAscii)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Culture" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, char passwordChar, bool allowPromptAsInput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, class System.Globalization.CultureInfo culture, char passwordChar, bool allowPromptAsInput) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, culture As CultureInfo, passwordChar As Char, allowPromptAsInput As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, System::Globalization::CultureInfo ^ culture, char passwordChar, bool allowPromptAsInput);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * System.Globalization.CultureInfo * char * bool -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, culture, passwordChar, allowPromptAsInput)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="passwordChar" Type="System.Char" />
        <Parameter Name="allowPromptAsInput" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask"><span data-ttu-id="2d5f1-147"><see cref="T:System.String" /> Reprezentujący maskę wejściową.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-147">A <see cref="T:System.String" /> that represents the input mask.</span></span></param>
        <param name="culture"><span data-ttu-id="2d5f1-148"><see cref="T:System.Globalization.CultureInfo" /> , Który służy do ustawiania znaków separatora zależnego od regionu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-148">A <see cref="T:System.Globalization.CultureInfo" /> that is used to set region-sensitive separator characters.</span></span></param>
        <param name="passwordChar"><span data-ttu-id="2d5f1-149">Element <see cref="T:System.Char" /> , który będzie wyświetlany dla znaków wprowadzonych w ciągu hasła.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-149">A <see cref="T:System.Char" /> that will be displayed for characters entered into a password string.</span></span></param>
        <param name="allowPromptAsInput"><span data-ttu-id="2d5f1-150"><see langword="true" />Aby zezwolić na znak monitu jako dane wejściowe; w <see langword="false" />przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-150"><see langword="true" /> to allow the prompt character as input; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2d5f1-151">Inicjuje nowe wystąpienie <see cref="T:System.ComponentModel.MaskedTextProvider" /> klasy przy użyciu określonej maski, kultury, znaku hasła i wartości użycia monitu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-151">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask, culture, password character, and prompt usage value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-152">Użycie tego konstruktora jest dokładnie równoważne z następującym wywołaniem <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> konstruktora:</span><span class="sxs-lookup"><span data-stu-id="2d5f1-152">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , culture, allowPromptAsInput, '_', passwordChar, false)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Culture" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, bool allowPromptAsInput, char promptChar, char passwordChar, bool restrictToAscii);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, class System.Globalization.CultureInfo culture, bool allowPromptAsInput, char promptChar, char passwordChar, bool restrictToAscii) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, culture As CultureInfo, allowPromptAsInput As Boolean, promptChar As Char, passwordChar As Char, restrictToAscii As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, System::Globalization::CultureInfo ^ culture, bool allowPromptAsInput, char promptChar, char passwordChar, bool restrictToAscii);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * System.Globalization.CultureInfo * bool * char * char * bool -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, culture, allowPromptAsInput, promptChar, passwordChar, restrictToAscii)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="allowPromptAsInput" Type="System.Boolean" />
        <Parameter Name="promptChar" Type="System.Char" />
        <Parameter Name="passwordChar" Type="System.Char" />
        <Parameter Name="restrictToAscii" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask"><span data-ttu-id="2d5f1-153"><see cref="T:System.String" /> Reprezentujący maskę wejściową.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-153">A <see cref="T:System.String" /> that represents the input mask.</span></span></param>
        <param name="culture"><span data-ttu-id="2d5f1-154"><see cref="T:System.Globalization.CultureInfo" /> , Który służy do ustawiania znaków separatora zależnego od regionu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-154">A <see cref="T:System.Globalization.CultureInfo" /> that is used to set region-sensitive separator characters.</span></span></param>
        <param name="allowPromptAsInput"><span data-ttu-id="2d5f1-155"><see cref="T:System.Boolean" /> Wartość określająca, czy znak monitu powinien być dozwolony jako prawidłowy znak wejściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-155">A <see cref="T:System.Boolean" /> value that specifies whether the prompt character should be allowed as a valid input character.</span></span></param>
        <param name="promptChar"><span data-ttu-id="2d5f1-156">Element <see cref="T:System.Char" /> , który będzie wyświetlany jako symbol zastępczy dla danych wejściowych użytkownika.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-156">A <see cref="T:System.Char" /> that will be displayed as a placeholder for user input.</span></span></param>
        <param name="passwordChar"><span data-ttu-id="2d5f1-157">Element <see cref="T:System.Char" /> , który będzie wyświetlany dla znaków wprowadzonych w ciągu hasła.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-157">A <see cref="T:System.Char" /> that will be displayed for characters entered into a password string.</span></span></param>
        <param name="restrictToAscii"><span data-ttu-id="2d5f1-158"><see langword="true" />Aby ograniczyć dane wejściowe do znaków zgodnych ze standardem ASCII; w <see langword="false" /> przeciwnym razie zezwolić na cały zestaw Unicode.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-158"><see langword="true" /> to restrict input to ASCII-compatible characters; otherwise <see langword="false" /> to allow the entire Unicode set.</span></span></param>
        <summary><span data-ttu-id="2d5f1-159">Inicjuje nowe wystąpienie <see cref="T:System.ComponentModel.MaskedTextProvider" /> klasy przy użyciu określonej maski, kultury, wartości użycia monitu, znaku monitu, znaku hasła oraz wartości ograniczenia ASCII.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-159">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask, culture, prompt usage value, prompt character, password character, and ASCII restriction value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-160">Ten konstruktor reprezentuje najbardziej ogólny format przeciążony.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-160">This constructor represents the most general overloaded form.</span></span> <span data-ttu-id="2d5f1-161">Parametr musi być zgodny z językiem maskowania zdefiniowanym <xref:System.ComponentModel.MaskedTextProvider> przez klasę, <xref:System.Windows.Forms.MaskedTextBox.Mask%2A?displayProperty=nameWithType> która jest szczegółowa <xref:System.Windows.Forms.MaskedTextBox> we właściwości klasy. `mask`</span><span class="sxs-lookup"><span data-stu-id="2d5f1-161">The `mask` parameter must conform to the masking language defined by the <xref:System.ComponentModel.MaskedTextProvider> class, which is detailed in the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A?displayProperty=nameWithType> property of the <xref:System.Windows.Forms.MaskedTextBox> class.</span></span>  
  
 <span data-ttu-id="2d5f1-162">Ponieważ nie można zbadać kultur neutralnych dla informacji specyficznych dla kultury, <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> Konstruktor <xref:System.Globalization.CultureInfo.GetCultures%2A> użyje metody, aby wyszukać pierwszą kulturę nieneutralną, która zostanie użyta do określenia odpowiednich znaków separatora.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-162">Because neutral cultures cannot be queried for culture-specific information, the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor will use the <xref:System.Globalization.CultureInfo.GetCultures%2A> method to search for the first non-neutral culture to use to determine the proper separator characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2d5f1-163">Parametr maski ma <see langword="null" /> wartość lub <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-163">The mask parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span>  
  
<span data-ttu-id="2d5f1-164">—lub—</span><span class="sxs-lookup"><span data-stu-id="2d5f1-164">-or-</span></span> 
<span data-ttu-id="2d5f1-165">Maska zawiera jeden lub więcej znaków, które nie są drukowalne.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-165">The mask contains one or more non-printable characters.</span></span></exception>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.Clone" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Culture" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d5f1-166">Dodaje znak wejściowy lub ciąg wejściowy do sformatowanego ciągu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-166">Adds an input character or input string to the formatted string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (char input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Add(char input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Add(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Add(char input);" />
      <MemberSignature Language="F#" Value="member this.Add : char -&gt; bool" Usage="maskedTextProvider.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="2d5f1-167"><see cref="T:System.Char" /> Wartość, która ma zostać dołączona do sformatowanego ciągu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-167">A <see cref="T:System.Char" /> value to be appended to the formatted string.</span></span></param>
        <summary><span data-ttu-id="2d5f1-168">Dodaje określony znak wejściowy do końca sformatowanego ciągu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-168">Adds the specified input character to the end of the formatted string.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-169"><see langword="true" />Jeśli znak wejściowy został pomyślnie dodany; w <see langword="false" />przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-169"><see langword="true" /> if the input character was added successfully; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-170">Metoda dodaje wartość znakudo<xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> pierwszego dostępnego położenia w sformatowanym ciągu po pozycji, która została ostatnio przypisana, która jest reprezentowana przez właściwość. `input` <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29></span><span class="sxs-lookup"><span data-stu-id="2d5f1-170">The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29> method adds the `input` character value to the first available position in the formatted string after the position that was last assigned, which is represented by the <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> property.</span></span> <span data-ttu-id="2d5f1-171">Ta metoda zakończy się niepowodzeniem z jednego z następujących powodów:</span><span class="sxs-lookup"><span data-stu-id="2d5f1-171">This method will fail for any of the following reasons:</span></span>  
  
-   <span data-ttu-id="2d5f1-172">Wartość `input`wejściowa nie może być drukowana lub nie pasuje do odpowiadającego jej elementu maski.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-172">The input value, `input`, is not printable, or it does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="2d5f1-173">W sformatowanym ciągu nie ma żadnych dostępnych pozycji edycji lub nie ma żadnych dostępnych pozycji edycji po ostatnim przypisanym położeniu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-173">There are zero available edit positions in the formatted string, or there are no available edit positions after the last assigned position.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Add(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Add(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Add : string -&gt; bool" Usage="maskedTextProvider.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="2d5f1-174"><see cref="T:System.String" /> Zawierająca wartości znakowe, które mają być dołączane do sformatowanego ciągu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-174">A <see cref="T:System.String" /> containing character values to be appended to the formatted string.</span></span></param>
        <summary><span data-ttu-id="2d5f1-175">Dodaje znaki w określonym ciągu wejściowym do końca sformatowanego ciągu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-175">Adds the characters in the specified input string to the end of the formatted string.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-176"><see langword="true" />Jeśli wszystkie znaki z ciągu wejściowego zostały pomyślnie dodane; w <see langword="false" /> przeciwnym razie, aby wskazać, że żadne znaki nie zostały dodane.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-176"><see langword="true" /> if all the characters from the input string were added successfully; otherwise <see langword="false" /> to indicate that no characters were added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-177">Metoda dodaje znaki `input` z ciągu do sformatowanego ciągu, zaczynając od pierwszego dostępnego położenia po <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>. <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29></span><span class="sxs-lookup"><span data-stu-id="2d5f1-177">The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29> method adds the characters from the `input` string to the formatted string, starting with the first available position after <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>.</span></span> <span data-ttu-id="2d5f1-178">Ta metoda zakończy się niepowodzeniem z jednego z następujących powodów:</span><span class="sxs-lookup"><span data-stu-id="2d5f1-178">This method will fail for any of the following reasons:</span></span>  
  
-   <span data-ttu-id="2d5f1-179">Dowolnych znaków w wartości `input`wejściowej,,,, nie można drukować lub wartość wejściowa nie jest zgodna z odpowiadającym jej elementem maski.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-179">Any of the characters in the input value, `input`, are not printable, or the input value does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="2d5f1-180">Za mało dostępnych pozycji edycji w ciągu sformatowanym po ostatnim przypisanym położeniu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-180">There are not enough available edit positions in the formatted string after the last assigned position.</span></span>  
  
 <span data-ttu-id="2d5f1-181">Jeśli ta metoda nie powiedzie się, żadne dodatkowe operacje nie są `false`wprowadzane i metoda zwraca.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-181">If this method fails, no additions are made and the method returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2d5f1-182">Parametr ma wartość <see langword="null" />. <paramref name="input" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-182">The <paramref name="input" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (char input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Add(char input, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As Char, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Add(char input, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Add : char *  *  -&gt; bool" Usage="maskedTextProvider.Add (input, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="2d5f1-183"><see cref="T:System.Char" /> Wartość, która ma zostać dołączona do sformatowanego ciągu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-183">A <see cref="T:System.Char" /> value to be appended to the formatted string.</span></span></param>
        <param name="testPosition"><span data-ttu-id="2d5f1-184">Pozycja od zera w sformatowanym ciągu, w którym podjęto próbę dodania znaku.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-184">The zero-based position in the formatted string where the attempt was made to add the character.</span></span> <span data-ttu-id="2d5f1-185">Parametr wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-185">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="2d5f1-186">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> , który zwięzłie opisuje wynik operacji.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-186">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span></span> <span data-ttu-id="2d5f1-187">Parametr wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-187">An output parameter.</span></span></param>
        <summary><span data-ttu-id="2d5f1-188">Dodaje określony znak wejściowy do końca sformatowanego ciągu, a następnie wyprowadza informacje o pozycji i opisie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-188">Adds the specified input character to the end of the formatted string, and then outputs position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-189"><see langword="true" />Jeśli znak wejściowy został pomyślnie dodany; w <see langword="false" />przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-189"><see langword="true" /> if the input character was added successfully; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-190">Metoda próbuje `input` dodać wartość znaku do pierwszego dostępnego położenia w sformatowanym ciągu po pozycji, która została ostatnio przypisana, <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> która jest reprezentowana przez właściwość. <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29></span><span class="sxs-lookup"><span data-stu-id="2d5f1-190">The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method attempts to add the `input` character value to the first available position in the formatted string after the position that was last assigned, which is represented by the <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> property.</span></span> <span data-ttu-id="2d5f1-191">Ta metoda zakończy się niepowodzeniem, jeśli wszystkie dostępne pozycje są przed ostatnim przypisanym pozycją.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-191">This method will fail if all available positions are before the last assigned position.</span></span> <span data-ttu-id="2d5f1-192">Ta metoda zakończy się niepowodzeniem z jednego z następujących powodów:</span><span class="sxs-lookup"><span data-stu-id="2d5f1-192">This method will fail for any of the following reasons:</span></span>  
  
-   <span data-ttu-id="2d5f1-193">Wartość `input`wejściowa nie może być drukowana lub nie pasuje do odpowiadającego jej elementu maski.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-193">The input value, `input`, is not printable, or it does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="2d5f1-194">W sformatowanym ciągu nie ma żadnych dostępnych pozycji edycji lub nie ma żadnych dostępnych pozycji edycji po ostatnim przypisanym położeniu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-194">There are zero available edit positions in the formatted string, or there are no available edit positions after the last assigned position.</span></span>  
  
 <span data-ttu-id="2d5f1-195">Ta metoda działa tak samo, jak przesłonięta wersja przy <xref:System.Char> użyciu jednego <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29>parametru, z tą różnicą, że wyprowadza dodatkowe informacje.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-195">This method functions the same as the overridden version taking a single <xref:System.Char> parameter, <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29>, except that it outputs additional information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Add(string input, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As String, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Add(System::String ^ input, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Add : string *  *  -&gt; bool" Usage="maskedTextProvider.Add (input, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="2d5f1-196"><see cref="T:System.String" /> Zawierająca wartości znakowe, które mają być dołączane do sformatowanego ciągu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-196">A <see cref="T:System.String" /> containing character values to be appended to the formatted string.</span></span></param>
        <param name="testPosition"><span data-ttu-id="2d5f1-197">Pozycja od zera w sformatowanym ciągu, w którym podjęto próbę dodania znaku.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-197">The zero-based position in the formatted string where the attempt was made to add the character.</span></span> <span data-ttu-id="2d5f1-198">Parametr wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-198">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="2d5f1-199">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> , który zwięzłie opisuje wynik operacji.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-199">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span></span> <span data-ttu-id="2d5f1-200">Parametr wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-200">An output parameter.</span></span></param>
        <summary><span data-ttu-id="2d5f1-201">Dodaje znaki w określonym ciągu wejściowym do końca sformatowanego ciągu, a następnie wyprowadza pozycję i informacje opisowe.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-201">Adds the characters in the specified input string to the end of the formatted string, and then outputs position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-202"><see langword="true" />Jeśli wszystkie znaki z ciągu wejściowego zostały pomyślnie dodane; w <see langword="false" /> przeciwnym razie, aby wskazać, że żadne znaki nie zostały dodane.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-202"><see langword="true" /> if all the characters from the input string were added successfully; otherwise <see langword="false" /> to indicate that no characters were added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-203">Metoda dodaje znaki `input` z ciągu do sformatowanego ciągu, zaczynając od pierwszego dostępnego położenia po <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>. <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29></span><span class="sxs-lookup"><span data-stu-id="2d5f1-203">The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method adds the characters from the `input` string to the formatted string, starting with the first available position after <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>.</span></span> <span data-ttu-id="2d5f1-204">Ta metoda zakończy się niepowodzeniem z jednego z następujących powodów:</span><span class="sxs-lookup"><span data-stu-id="2d5f1-204">This method will fail for any of the following reasons:</span></span>  
  
-   <span data-ttu-id="2d5f1-205">Dowolnych znaków w wartości `input`wejściowej,,,, nie można drukować lub wartość wejściowa nie jest zgodna z odpowiadającym jej elementem maski.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-205">Any of the characters in the input value, `input`, are not printable, or the input value does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="2d5f1-206">Za mało dostępnych pozycji edycji w ciągu sformatowanym po ostatnim przypisanym położeniu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-206">There are not enough available edit positions in the formatted string after the last assigned position.</span></span>  
  
 <span data-ttu-id="2d5f1-207">Jeśli ta metoda nie powiedzie się, żadne dodatkowe operacje nie są `false`wprowadzane i metoda zwraca.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-207">If this method fails, no additions are made and the method returns `false`.</span></span>  
  
 <span data-ttu-id="2d5f1-208">Ta metoda działa tak samo, jak przesłonięta wersja przy <xref:System.String> użyciu jednego <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29>parametru, z tą różnicą, że wyprowadza dodatkowe informacje.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-208">This method functions the same as the overridden version taking a single <xref:System.String> parameter, <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29>, except that it outputs additional information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="AllowPromptAsInput">
      <MemberSignature Language="C#" Value="public bool AllowPromptAsInput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPromptAsInput" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowPromptAsInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowPromptAsInput { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowPromptAsInput : bool" Usage="System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d5f1-209">Pobiera wartość wskazującą, czy znak monitu powinien być traktowany jako prawidłowy znak wejściowy, czy nie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-209">Gets a value indicating whether the prompt character should be treated as a valid input character or not.</span></span></summary>
        <value><span data-ttu-id="2d5f1-210"><see langword="true" />Jeśli użytkownik może wejść <see cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" /> do kontrolki; w przeciwnym razie,. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-210"><see langword="true" /> if the user can enter <see cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" /> into the control; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2d5f1-211">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-211">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-212">Wartość właściwości jest ustawiana <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> w konstruktorze. <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A></span><span class="sxs-lookup"><span data-stu-id="2d5f1-212">The <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> property's value is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="2d5f1-213">Nawet jeśli <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> jest `true`, znak monitu musi być prawidłowy dla bieżącej lokalizacji w masce, aby można ją było zaakceptować.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-213">Even when <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> is `true`, the prompt character must be valid for the current location in the mask in order to be accepted.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName="AsciiOnly">
      <MemberSignature Language="C#" Value="public bool AsciiOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AsciiOnly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsciiOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AsciiOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AsciiOnly : bool" Usage="System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d5f1-214">Pobiera wartość wskazującą, czy maska akceptuje znaki spoza zestawu znaków ASCII.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-214">Gets a value indicating whether the mask accepts characters outside of the ASCII character set.</span></span></summary>
        <value><span data-ttu-id="2d5f1-215"><see langword="true" />w przypadku zaakceptowania tylko kodu ASCII; <see langword="false" /> Jeśli<see cref="T:System.ComponentModel.MaskedTextProvider" /> może akceptować dowolny dowolny znak Unicode.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-215"><see langword="true" /> if only ASCII is accepted; <see langword="false" /> if <see cref="T:System.ComponentModel.MaskedTextProvider" /> can accept any arbitrary Unicode character.</span></span> <span data-ttu-id="2d5f1-216">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-216">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-217">Wartość właściwości jest ustawiana <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> w konstruktorze. <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A></span><span class="sxs-lookup"><span data-stu-id="2d5f1-217">The <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> property's value is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="2d5f1-218">Jeśli `true` program<xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> ograniczy dane wejściowe użytkownika do zestawu znaków ASCII.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-218">If `true`, <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> restricts user input to the ASCII character set.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AsciiOnly" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName="AssignedEditPositionCount">
      <MemberSignature Language="C#" Value="public int AssignedEditPositionCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AssignedEditPositionCount" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssignedEditPositionCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AssignedEditPositionCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AssignedEditPositionCount : int" Usage="System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d5f1-219">Pobiera liczbę edytowalnych pozycji znaków, do których pomyślnie przypisano wartość wejściową.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-219">Gets the number of editable character positions that have already been successfully assigned an input value.</span></span></summary>
        <value><span data-ttu-id="2d5f1-220"><see cref="T:System.Int32" /> Zawierający liczbę edytowalnych pozycji znaku w masce wejściowej, do której przypisano już wartość znaku w ciągu sformatowanym.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-220">An <see cref="T:System.Int32" /> containing the number of editable character positions in the input mask that have already been assigned a character value in the formatted string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-221">Całkowita liczba edytowalnych pozycji znaku reprezentowanej przez <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> właściwość powinna być równa sumie <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> właściwości i.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-221">The total number of editable character positions, represented by the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> property, should equal the sum of the <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> and the <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="AvailableEditPositionCount">
      <MemberSignature Language="C#" Value="public int AvailableEditPositionCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AvailableEditPositionCount" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailableEditPositionCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AvailableEditPositionCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AvailableEditPositionCount : int" Usage="System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d5f1-222">Pobiera liczbę edytowalnych pozycji znaku w masce wejściowej, do której nie została jeszcze przypisana wartość wejściowa.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-222">Gets the number of editable character positions in the input mask that have not yet been assigned an input value.</span></span></summary>
        <value><span data-ttu-id="2d5f1-223"><see cref="T:System.Int32" /> Zawierający liczbę edytowalnych pozycji znaków, do których nie została jeszcze przypisana wartość znaku.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-223">An <see cref="T:System.Int32" /> containing the number of editable character positions that not yet been assigned a character value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-224">Całkowita liczba edytowalnych pozycji znaku reprezentowanej przez <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> właściwość powinna być równa sumie <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> właściwości i.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-224">The total number of editable character positions, represented by the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> property, should equal the sum of the <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> and the <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Clear">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d5f1-225">Czyści wszystkie znaki wejściowe z sformatowanego ciągu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-225">Clears all the input characters from the formatted string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="maskedTextProvider.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2d5f1-226">Czyści wszystkie edytowalne znaki wejściowe z sformatowanego ciągu, zastępując je znakami monitu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-226">Clears all the editable input characters from the formatted string, replacing them with prompt characters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-227"><xref:System.ComponentModel.MaskedTextProvider.Clear> Metoda ponownie inicjuje sformatowany ciąg, wstawiając znak monitu do wszystkich pozycji edytowalnych.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-227">The <xref:System.ComponentModel.MaskedTextProvider.Clear> method reinitializes the formatted string, inserting the prompt character into all editable positions.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear (out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear([out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Clear(System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear (ByRef resultHint As MaskedTextResultHint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear([Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Clear :  -&gt; unit" Usage="maskedTextProvider.Clear resultHint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="resultHint"><span data-ttu-id="2d5f1-228">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> , który zwięzłie opisuje wynik operacji.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-228">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span></span> <span data-ttu-id="2d5f1-229">Parametr wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-229">An output parameter.</span></span></param>
        <summary><span data-ttu-id="2d5f1-230">Czyści wszystkie edytowalne znaki wejściowe z sformatowanego ciągu, zastępując je znakami monitu, a następnie wyprowadza informacje opisowe.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-230">Clears all the editable input characters from the formatted string, replacing them with prompt characters, and then outputs descriptive information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-231"><xref:System.ComponentModel.MaskedTextProvider.Clear%28System.ComponentModel.MaskedTextResultHint%40%29> Metoda ponownie inicjuje sformatowany ciąg, wstawiając znak monitu do wszystkich pozycji edytowalnych.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-231">The <xref:System.ComponentModel.MaskedTextProvider.Clear%28System.ComponentModel.MaskedTextResultHint%40%29> method reinitializes the formatted string, inserting the prompt character into all editable positions.</span></span> <span data-ttu-id="2d5f1-232">Funkcja IT jest równoważna z przesłoniętą wersją, która nie <xref:System.ComponentModel.MaskedTextProvider.Clear>przyjmuje żadnych parametrów, z tą różnicą, że wyprowadza dodatkowe informacje.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-232">It functions equivalently to the overridden version that takes no parameters, <xref:System.ComponentModel.MaskedTextProvider.Clear>, except it outputs additional information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="maskedTextProvider.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2d5f1-233">Tworzy kopię bieżącego <see cref="T:System.ComponentModel.MaskedTextProvider" />elementu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-233">Creates a copy of the current <see cref="T:System.ComponentModel.MaskedTextProvider" />.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-234">Obiekt <see cref="T:System.ComponentModel.MaskedTextProvider" /> tworzony przez tę metodę, rzutowany jako obiekt.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-234">The <see cref="T:System.ComponentModel.MaskedTextProvider" /> object this method creates, cast as an object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-235">Metoda zwraca nową kopię bieżącego <xref:System.ComponentModel.MaskedTextProvider>elementu. <xref:System.ComponentModel.MaskedTextProvider.Clone%2A></span><span class="sxs-lookup"><span data-stu-id="2d5f1-235">The <xref:System.ComponentModel.MaskedTextProvider.Clone%2A> method returns a new copy of the current <xref:System.ComponentModel.MaskedTextProvider>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.#ctor" />
        <altmember cref="T:System.ICloneable" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.Culture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo" Usage="System.ComponentModel.MaskedTextProvider.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d5f1-236">Pobiera kulturę, która określa wartość lokalizowalnych separatorów i symboli zastępczych w masce wejściowej.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-236">Gets the culture that determines the value of the localizable separators and placeholders in the input mask.</span></span></summary>
        <value><span data-ttu-id="2d5f1-237"><see cref="T:System.Globalization.CultureInfo" /> Zawierający informacje o kulturze skojarzone z maską wejściową.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-237">A <see cref="T:System.Globalization.CultureInfo" /> containing the culture information associated with the input mask.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-238">Właściwość jest ustawiana <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> w konstruktorze. <xref:System.ComponentModel.MaskedTextProvider.Culture%2A></span><span class="sxs-lookup"><span data-stu-id="2d5f1-238">The <xref:System.ComponentModel.MaskedTextProvider.Culture%2A> property is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Culture" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName="DefaultPasswordChar">
      <MemberSignature Language="C#" Value="public static char DefaultPasswordChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property char DefaultPasswordChar" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultPasswordChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property char DefaultPasswordChar { char get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultPasswordChar : char" Usage="System.ComponentModel.MaskedTextProvider.DefaultPasswordChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d5f1-239">Pobiera domyślny znak hasła używany do ukrywania danych wejściowych użytkownika.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-239">Gets the default password character used obscure user input.</span></span></summary>
        <value><span data-ttu-id="2d5f1-240"><see cref="T:System.Char" /> Reprezentuje domyślny znak hasła.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-240">A <see cref="T:System.Char" /> that represents the default password character.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-241">Właściwość jest zdefiniowana <xref:System.ComponentModel.MaskedTextProvider> w klasie jako znak gwiazdki (\*). <xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A></span><span class="sxs-lookup"><span data-stu-id="2d5f1-241">The <xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> property is defined in the <xref:System.ComponentModel.MaskedTextProvider> class to be the asterisk character (\*).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IsPassword" />
      </Docs>
    </Member>
    <Member MemberName="EditPositionCount">
      <MemberSignature Language="C#" Value="public int EditPositionCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditPositionCount" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditPositionCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EditPositionCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.EditPositionCount : int" Usage="System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d5f1-242">Pobiera liczbę edytowalnych pozycji w sformatowanym ciągu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-242">Gets the number of editable positions in the formatted string.</span></span></summary>
        <value><span data-ttu-id="2d5f1-243"><see cref="T:System.Int32" /> Zawierający liczbę pozycji edytowalnych w formatowanym ciągu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-243">An <see cref="T:System.Int32" /> containing the number of editable positions in the formatted string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-244">Całkowita liczba edytowalnych pozycji znaku reprezentowanej przez <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> właściwość musi być równa sumie <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> właściwości i.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-244">The total number of editable character positions, represented by the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> property, must equal the sum of the <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> and the <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> properties.</span></span> <span data-ttu-id="2d5f1-245">Ta wartość obejmuje zarówno wymagane, jak i opcjonalne znaki edytowalne.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-245">This value includes both the required and the optional editable characters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="EditPositions">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator EditPositions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator EditPositions" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditPositions As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IEnumerator ^ EditPositions { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditPositions : System.Collections.IEnumerator" Usage="System.ComponentModel.MaskedTextProvider.EditPositions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d5f1-246">Pobiera nowo utworzony moduł wyliczający dla pozycji edytowalnych w sformatowanym ciągu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-246">Gets a newly created enumerator for the editable positions in the formatted string.</span></span></summary>
        <value><span data-ttu-id="2d5f1-247"><see cref="T:System.Collections.IEnumerator" /> Obsługuje Wyliczenie na pozycji edytowalnych w sformatowanym ciągu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-247">An <see cref="T:System.Collections.IEnumerator" /> that supports enumeration over the editable positions in the formatted string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-248">Na każdym dostępie <xref:System.ComponentModel.MaskedTextProvider.EditPositions%2A> do właściwości jest tworzona <xref:System.Collections.IEnumerator> tymczasowa kolekcja pozycji edytowalnych.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-248">On every access of the <xref:System.ComponentModel.MaskedTextProvider.EditPositions%2A> property, a temporary collection of editable positions is created that the retrieved <xref:System.Collections.IEnumerator> operates on.</span></span>  
  
 <span data-ttu-id="2d5f1-249">Ta kolekcja jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-249">This collection is read-only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindAssignedEditPositionFrom">
      <MemberSignature Language="C#" Value="public int FindAssignedEditPositionFrom (int position, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindAssignedEditPositionFrom(int32 position, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAssignedEditPositionFrom (position As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindAssignedEditPositionFrom(int position, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindAssignedEditPositionFrom : int * bool -&gt; int" Usage="maskedTextProvider.FindAssignedEditPositionFrom (position, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="2d5f1-250">Pozycja od zera w sformatowanym ciągu, aby rozpocząć wyszukiwanie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-250">The zero-based position in the formatted string to start the search.</span></span></param>
        <param name="direction"><span data-ttu-id="2d5f1-251">Wskazujący kierunek wyszukiwania — <see langword="true" /> do wyszukiwania w przód lub <see langword="false" /> do wyszukiwania wstecznego. <see cref="T:System.Boolean" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-251">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span></span></param>
        <summary><span data-ttu-id="2d5f1-252">Zwraca pozycję pierwszej przypisanej pozycji edytowalnej po podanej pozycji przy użyciu określonego kierunku wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-252">Returns the position of the first assigned editable position after the specified position using the specified search direction.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-253">Jeśli to <see cref="T:System.Int32" /> się powiedzie, oznacza to, że wystąpiła pozycja od zera do pierwszej przypisanej pozycji edytowalnej; w przeciwnym razie <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-253">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first assigned editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-254">Sformatowany ciąg składa się z edytowalnych znaków i literałów skopiowanych z maski.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-254">The formatted string is composed of editable characters and literals copied from the mask.</span></span> <span data-ttu-id="2d5f1-255">Edytowalne pozycje znaku będą zajęte przez znak monitu skopiowany z maski, jeśli są nieprzypisane lub z prawidłowym znakiem wejściowym, jeśli przypisano dane wejściowe.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-255">The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.</span></span>  
  
 <span data-ttu-id="2d5f1-256"><xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> Metoda jest używana do wyszukiwania pierwszego przypisanego znaku po określonej pozycji i kierunku wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-256">The <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> method is used to search for the first assigned character after a specified position and search direction.</span></span> <span data-ttu-id="2d5f1-257">Wynik można następnie przesłać jako parametr do <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indeksatora w celu uzyskania przypisanej wartości w tym miejscu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-257">The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the assigned value at this position.</span></span>  
  
 <span data-ttu-id="2d5f1-258">Metody <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> i<xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> są uzupełnieniem tej metody.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-258">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> methods are complements of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindAssignedEditPositionInRange">
      <MemberSignature Language="C#" Value="public int FindAssignedEditPositionInRange (int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindAssignedEditPositionInRange(int32 startPosition, int32 endPosition, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAssignedEditPositionInRange (startPosition As Integer, endPosition As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindAssignedEditPositionInRange(int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindAssignedEditPositionInRange : int * int * bool -&gt; int" Usage="maskedTextProvider.FindAssignedEditPositionInRange (startPosition, endPosition, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPosition"><span data-ttu-id="2d5f1-259">Pozycja od zera w sformatowanym ciągu, w którym rozpocznie się wyszukiwanie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-259">The zero-based position in the formatted string where the search starts.</span></span></param>
        <param name="endPosition"><span data-ttu-id="2d5f1-260">Pozycja od zera w sformatowanym ciągu, w którym ma się zakończyć wyszukiwanie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-260">The zero-based position in the formatted string where the search ends.</span></span></param>
        <param name="direction"><span data-ttu-id="2d5f1-261">Wskazujący kierunek wyszukiwania — <see langword="true" /> do wyszukiwania w przód lub <see langword="false" /> do wyszukiwania wstecznego. <see cref="T:System.Boolean" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-261">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span></span></param>
        <summary><span data-ttu-id="2d5f1-262">Zwraca pozycję pierwszej przypisanej pozycji do edycji między określonymi pozycjami przy użyciu określonego kierunku wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-262">Returns the position of the first assigned editable position between the specified positions using the specified search direction.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-263">Jeśli to <see cref="T:System.Int32" /> się powiedzie, oznacza to, że wystąpiła pozycja od zera do pierwszej przypisanej pozycji edytowalnej; w przeciwnym razie <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-263">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first assigned editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-264">Sformatowany ciąg składa się z edytowalnych znaków i literałów skopiowanych z maski.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-264">The formatted string is composed of editable characters and literals copied from the mask.</span></span> <span data-ttu-id="2d5f1-265">Edytowalne pozycje znaku będą zajęte przez znak monitu skopiowany z maski, jeśli są nieprzypisane lub z prawidłowym znakiem wejściowym, jeśli przypisano dane wejściowe.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-265">The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.</span></span>  
  
 <span data-ttu-id="2d5f1-266"><xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> Metoda jest używana do wyszukiwania pierwszego przypisanego znaku między dwoma określonymi położeniami, włącznie z zastosowaniem określonego kierunku wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-266">The <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> method is used to search for the first assigned character between two specified positions, inclusive, using the specified search direction.</span></span> <span data-ttu-id="2d5f1-267">Wynik można następnie przesłać jako parametr do <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indeksatora w celu uzyskania przypisanej wartości w tym miejscu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-267">The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the assigned value at this position.</span></span>  
  
 <span data-ttu-id="2d5f1-268">Metody <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> i<xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> są uzupełnieniem tej metody.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-268">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> methods are complements of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindEditPositionFrom">
      <MemberSignature Language="C#" Value="public int FindEditPositionFrom (int position, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindEditPositionFrom(int32 position, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindEditPositionFrom (position As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindEditPositionFrom(int position, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindEditPositionFrom : int * bool -&gt; int" Usage="maskedTextProvider.FindEditPositionFrom (position, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="2d5f1-269">Pozycja od zera w sformatowanym ciągu, aby rozpocząć wyszukiwanie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-269">The zero-based position in the formatted string to start the search.</span></span></param>
        <param name="direction"><span data-ttu-id="2d5f1-270">Wskazujący kierunek wyszukiwania — <see langword="true" /> do wyszukiwania w przód lub <see langword="false" /> do wyszukiwania wstecznego. <see cref="T:System.Boolean" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-270">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span></span></param>
        <summary><span data-ttu-id="2d5f1-271">Zwraca pozycję pierwszej pozycji edytowalnej po podanej pozycji przy użyciu określonego kierunku wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-271">Returns the position of the first editable position after the specified position using the specified search direction.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-272">Jeśli to <see cref="T:System.Int32" /> się powiedzie, oznacza to, że wystąpiła pozycja od zera w pierwszej <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />pozycji edytowalnej; w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-272">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-273"><xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> Metoda jest używana do wyszukania kolejnej przypisanej lub nieprzypisanej pozycji edytowalnej w sformatowanym ciągu po określonym położeniu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-273">The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> method is used to search for the next assigned or unassigned editable position in the formatted string after the specified position.</span></span>  
  
 <span data-ttu-id="2d5f1-274"><xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> Metoda jest uzupełnieniem tej metody.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-274">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> method is the complement of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindEditPositionInRange">
      <MemberSignature Language="C#" Value="public int FindEditPositionInRange (int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindEditPositionInRange(int32 startPosition, int32 endPosition, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindEditPositionInRange (startPosition As Integer, endPosition As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindEditPositionInRange(int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindEditPositionInRange : int * int * bool -&gt; int" Usage="maskedTextProvider.FindEditPositionInRange (startPosition, endPosition, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPosition"><span data-ttu-id="2d5f1-275">Pozycja od zera w sformatowanym ciągu, w którym rozpocznie się wyszukiwanie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-275">The zero-based position in the formatted string where the search starts.</span></span></param>
        <param name="endPosition"><span data-ttu-id="2d5f1-276">Pozycja od zera w sformatowanym ciągu, w którym ma się zakończyć wyszukiwanie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-276">The zero-based position in the formatted string where the search ends.</span></span></param>
        <param name="direction"><span data-ttu-id="2d5f1-277">Wskazujący kierunek wyszukiwania — <see langword="true" /> do wyszukiwania w przód lub <see langword="false" /> do wyszukiwania wstecznego. <see cref="T:System.Boolean" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-277">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span></span></param>
        <summary><span data-ttu-id="2d5f1-278">Zwraca pozycję pierwszej pozycji edytowalnej między określonymi pozycjami przy użyciu określonego kierunku wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-278">Returns the position of the first editable position between the specified positions using the specified search direction.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-279">Jeśli to <see cref="T:System.Int32" /> się powiedzie, oznacza to, że wystąpiła pozycja od zera w pierwszej <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />pozycji edytowalnej; w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-279">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-280"><xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A> Metoda jest używana do wyszukiwania pierwszego znaku edytowalnego między dwoma określonymi położeniami, włącznie z zastosowaniem określonego kierunku wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-280">The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A> method is used to search for the first editable character between two specified positions, inclusive, using the specified search direction.</span></span> <span data-ttu-id="2d5f1-281">Wynik można następnie przesłać jako parametr do <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indeksatora w celu uzyskania przypisanej wartości w tym miejscu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-281">The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the assigned value at this position.</span></span>  
  
 <span data-ttu-id="2d5f1-282"><xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> Metoda jest uzupełnieniem tej metody.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-282">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> method is the complement of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindNonEditPositionFrom">
      <MemberSignature Language="C#" Value="public int FindNonEditPositionFrom (int position, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindNonEditPositionFrom(int32 position, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNonEditPositionFrom (position As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindNonEditPositionFrom(int position, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindNonEditPositionFrom : int * bool -&gt; int" Usage="maskedTextProvider.FindNonEditPositionFrom (position, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="2d5f1-283">Pozycja od zera w sformatowanym ciągu, aby rozpocząć wyszukiwanie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-283">The zero-based position in the formatted string to start the search.</span></span></param>
        <param name="direction"><span data-ttu-id="2d5f1-284">Wskazujący kierunek wyszukiwania — <see langword="true" /> do wyszukiwania w przód lub <see langword="false" /> do wyszukiwania wstecznego. <see cref="T:System.Boolean" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-284">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span></span></param>
        <summary><span data-ttu-id="2d5f1-285">Zwraca pozycję pierwszej nieedytowalnej pozycji po podanej pozycji przy użyciu określonego kierunku wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-285">Returns the position of the first non-editable position after the specified position using the specified search direction.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-286">Jeśli to <see cref="T:System.Int32" /> się powiedzie, reprezentuje pozycję od zera w pierwszej pozycji literału; w przeciwnym <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />razie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-286">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first literal position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-287"><xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> Metoda jest używana do wyszukiwania następnego znaku literału w sformatowanym ciągu po określonym położeniu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-287">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> method is used to search for the next literal character in the formatted string after the specified position.</span></span> <span data-ttu-id="2d5f1-288">Wynik może następnie zostać przesłany jako parametr do <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indeksatora w celu uzyskania wartości literału w tym położeniu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-288">The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the literal value at this position.</span></span>  
  
 <span data-ttu-id="2d5f1-289"><xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> Metoda jest uzupełnieniem tej metody.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-289">The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> method is the complement of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindNonEditPositionInRange">
      <MemberSignature Language="C#" Value="public int FindNonEditPositionInRange (int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindNonEditPositionInRange(int32 startPosition, int32 endPosition, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNonEditPositionInRange (startPosition As Integer, endPosition As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindNonEditPositionInRange(int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindNonEditPositionInRange : int * int * bool -&gt; int" Usage="maskedTextProvider.FindNonEditPositionInRange (startPosition, endPosition, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPosition"><span data-ttu-id="2d5f1-290">Pozycja od zera w sformatowanym ciągu, w którym rozpocznie się wyszukiwanie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-290">The zero-based position in the formatted string where the search starts.</span></span></param>
        <param name="endPosition"><span data-ttu-id="2d5f1-291">Pozycja od zera w sformatowanym ciągu, w którym ma się zakończyć wyszukiwanie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-291">The zero-based position in the formatted string where the search ends.</span></span></param>
        <param name="direction"><span data-ttu-id="2d5f1-292">Wskazujący kierunek wyszukiwania — <see langword="true" /> do wyszukiwania w przód lub <see langword="false" /> do wyszukiwania wstecznego. <see cref="T:System.Boolean" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-292">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span></span></param>
        <summary><span data-ttu-id="2d5f1-293">Zwraca pozycję pierwszej nieedytowalnej pozycji między określonymi położeniami przy użyciu określonego kierunku wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-293">Returns the position of the first non-editable position between the specified positions using the specified search direction.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-294">Jeśli to <see cref="T:System.Int32" /> się powiedzie, reprezentuje pozycję od zera w pierwszej pozycji literału; w przeciwnym <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />razie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-294">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first literal position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-295"><xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> Metoda jest używana do wyszukiwania pierwszego znaku literału między dwoma określonymi położeniami, włącznie z zastosowaniem określonego kierunku wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-295">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> method is used to search for the first literal character between two specified positions, inclusive, using the specified search direction.</span></span> <span data-ttu-id="2d5f1-296">Wynik może następnie zostać przesłany jako parametr do <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indeksatora w celu uzyskania wartości literału w tym położeniu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-296">The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the literal value at this position.</span></span>  
  
 <span data-ttu-id="2d5f1-297"><xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A> Metoda jest uzupełnieniem tej metody.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-297">The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A> method is the complement of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindUnassignedEditPositionFrom">
      <MemberSignature Language="C#" Value="public int FindUnassignedEditPositionFrom (int position, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindUnassignedEditPositionFrom(int32 position, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindUnassignedEditPositionFrom (position As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindUnassignedEditPositionFrom(int position, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindUnassignedEditPositionFrom : int * bool -&gt; int" Usage="maskedTextProvider.FindUnassignedEditPositionFrom (position, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="2d5f1-298">Pozycja od zera w sformatowanym ciągu, aby rozpocząć wyszukiwanie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-298">The zero-based position in the formatted string to start the search.</span></span></param>
        <param name="direction"><span data-ttu-id="2d5f1-299">Wskazujący kierunek wyszukiwania — <see langword="true" /> do wyszukiwania w przód lub <see langword="false" /> do wyszukiwania wstecznego. <see cref="T:System.Boolean" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-299">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span></span></param>
        <summary><span data-ttu-id="2d5f1-300">Zwraca pozycję pierwszej nieprzypisanej pozycji edytowalnej po podanej pozycji przy użyciu określonego kierunku wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-300">Returns the position of the first unassigned editable position after the specified position using the specified search direction.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-301">Jeśli to <see cref="T:System.Int32" /> się powiedzie, oznacza to, że wystąpiła pozycja od zera pierwszej nieprzypisanej <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />pozycji edytowalnej; w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-301">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first unassigned editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-302">Sformatowany ciąg składa się z edytowalnych znaków i literałów skopiowanych z maski.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-302">The formatted string is composed of editable characters and literals copied from the mask.</span></span> <span data-ttu-id="2d5f1-303">Edytowalne pozycje znaku będą zajęte przez znak monitu skopiowany z maski, jeśli są nieprzypisane lub z prawidłowym znakiem wejściowym, jeśli przypisano dane wejściowe.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-303">The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.</span></span>  
  
 <span data-ttu-id="2d5f1-304"><xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> Metoda jest używana do wyszukania pierwszego nieprzypisanego znaku po określonej pozycji i kierunku wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-304">The <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> method is used to search for the first unassigned character after a specified position and search direction.</span></span> <span data-ttu-id="2d5f1-305">Znak monitu powinien zajmować tę pozycję.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-305">The prompt character should occupy this position.</span></span>  
  
 <span data-ttu-id="2d5f1-306">Metody <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> i<xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> są uzupełnieniem tej metody.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-306">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> methods are complements of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindUnassignedEditPositionInRange">
      <MemberSignature Language="C#" Value="public int FindUnassignedEditPositionInRange (int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindUnassignedEditPositionInRange(int32 startPosition, int32 endPosition, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindUnassignedEditPositionInRange (startPosition As Integer, endPosition As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindUnassignedEditPositionInRange(int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindUnassignedEditPositionInRange : int * int * bool -&gt; int" Usage="maskedTextProvider.FindUnassignedEditPositionInRange (startPosition, endPosition, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPosition"><span data-ttu-id="2d5f1-307">Pozycja od zera w sformatowanym ciągu, w którym rozpocznie się wyszukiwanie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-307">The zero-based position in the formatted string where the search starts.</span></span></param>
        <param name="endPosition"><span data-ttu-id="2d5f1-308">Pozycja od zera w sformatowanym ciągu, w którym ma się zakończyć wyszukiwanie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-308">The zero-based position in the formatted string where the search ends.</span></span></param>
        <param name="direction"><span data-ttu-id="2d5f1-309">Wskazujący kierunek wyszukiwania — <see langword="true" /> do wyszukiwania w przód lub <see langword="false" /> do wyszukiwania wstecznego. <see cref="T:System.Boolean" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-309">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span></span></param>
        <summary><span data-ttu-id="2d5f1-310">Zwraca pozycję pierwszej nieprzypisanej pozycji do edycji między określonymi pozycjami przy użyciu określonego kierunku wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-310">Returns the position of the first unassigned editable position between the specified positions using the specified search direction.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-311">Jeśli to <see cref="T:System.Int32" /> się powiedzie, oznacza to, że wystąpiła pozycja od zera pierwszej nieprzypisanej <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />pozycji edytowalnej; w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-311">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first unassigned editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-312">Sformatowany ciąg składa się z edytowalnych znaków i literałów skopiowanych z maski.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-312">The formatted string is composed of editable characters and literals copied from the mask.</span></span> <span data-ttu-id="2d5f1-313">Edytowalne pozycje znaku będą zajęte przez znak monitu skopiowany z maski, jeśli są nieprzypisane lub z prawidłowym znakiem wejściowym, jeśli przypisano dane wejściowe.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-313">The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.</span></span>  
  
 <span data-ttu-id="2d5f1-314"><xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> Metoda jest używana do wyszukiwania pierwszego nieprzypisanego znaku między dwoma określonymi położeniami, włącznie z zastosowaniem określonego kierunku wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-314">The <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> method is used to search for the first unassigned character between two specified positions, inclusive, using the specified search direction.</span></span> <span data-ttu-id="2d5f1-315">Znak monitu powinien zajmować tę pozycję.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-315">The prompt character should occupy this position.</span></span>  
  
 <span data-ttu-id="2d5f1-316">Metody <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> i<xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> są uzupełnieniem tej metody.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-316">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> methods are complements of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetOperationResultFromHint">
      <MemberSignature Language="C#" Value="public static bool GetOperationResultFromHint (System.ComponentModel.MaskedTextResultHint hint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetOperationResultFromHint(valuetype System.ComponentModel.MaskedTextResultHint hint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetOperationResultFromHint (hint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetOperationResultFromHint(System::ComponentModel::MaskedTextResultHint hint);" />
      <MemberSignature Language="F#" Value="static member GetOperationResultFromHint : System.ComponentModel.MaskedTextResultHint -&gt; bool" Usage="System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint hint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hint" Type="System.ComponentModel.MaskedTextResultHint" />
      </Parameters>
      <Docs>
        <param name="hint"><span data-ttu-id="2d5f1-317"><see cref="T:System.ComponentModel.MaskedTextResultHint" /> Wartość zwykle uzyskana jako parametr wyjściowy z poprzedniej operacji.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-317">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> value typically obtained as an output parameter from a previous operation.</span></span></param>
        <summary><span data-ttu-id="2d5f1-318">Określa, czy określony <see cref="T:System.ComponentModel.MaskedTextResultHint" /> oznacza powodzenie lub niepowodzenie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-318">Determines whether the specified <see cref="T:System.ComponentModel.MaskedTextResultHint" /> denotes success or failure.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-319"><see langword="true" />Jeśli określona <see cref="T:System.ComponentModel.MaskedTextResultHint" /> wartość reprezentuje powodzenie; <see langword="false" /> w przeciwnym razie reprezentuje błąd.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-319"><see langword="true" /> if the specified <see cref="T:System.ComponentModel.MaskedTextResultHint" /> value represents a success; otherwise, <see langword="false" /> if it represents failure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-320"><xref:System.ComponentModel.MaskedTextProvider> Następujące metody klasy zawierają parametr typu <xref:System.ComponentModel.MaskedTextProvider.Remove%2A> <xref:System.ComponentModel.MaskedTextProvider.Add%2A> <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> <xref:System.ComponentModel.MaskedTextProvider.Clear%2A> <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, który jest używany do wyprowadzania informacji o działaniu metody:,,,, <xref:System.ComponentModel.MaskedTextResultHint> , <xref:System.ComponentModel.MaskedTextProvider.Set%2A>, <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A>i .<xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A></span><span class="sxs-lookup"><span data-stu-id="2d5f1-320">The following methods of the <xref:System.ComponentModel.MaskedTextProvider> class contain a parameter of type <xref:System.ComponentModel.MaskedTextResultHint> that is used to output information about the operation of the method: <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Clear%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>, <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>, <xref:System.ComponentModel.MaskedTextProvider.Set%2A>, <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A>, and <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>.</span></span> <span data-ttu-id="2d5f1-321">Metoda interpretuje tę wartość i zwraca wartość logiczną wskazującą, <xref:System.ComponentModel.MaskedTextResultHint> czy została zasygnalizowania, że operacja była sukcesem lub niepowodzeniem. <xref:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint%2A></span><span class="sxs-lookup"><span data-stu-id="2d5f1-321">The <xref:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint%2A> method interprets this value and returns a Boolean value that indicates whether the <xref:System.ComponentModel.MaskedTextResultHint> has signaled that the operation was a success or failure.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.MaskedTextResultHint" />
      </Docs>
    </Member>
    <Member MemberName="IncludeLiterals">
      <MemberSignature Language="C#" Value="public bool IncludeLiterals { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeLiterals" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeLiterals As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeLiterals { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeLiterals : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d5f1-322">Pobiera lub ustawia wartość wskazującą, czy znaki literału w masce wejściowej powinny być zawarte w sformatowanym ciągu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-322">Gets or sets a value that indicates whether literal characters in the input mask should be included in the formatted string.</span></span></summary>
        <value><span data-ttu-id="2d5f1-323"><see langword="true" />Jeśli są uwzględniane literały; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-323"><see langword="true" /> if literals are included; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2d5f1-324">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-324">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-325">Właściwości <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> i <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> określają, czy znaki monitu i literału pojawiają się podczas wywoływania metody.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-325">The <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties will determine whether prompt and literal characters appear when calling the <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method.</span></span> <span data-ttu-id="2d5f1-326">Po ustawieniu obu tych właściwości na `false`, przeanalizowany ciąg będzie reprezentował tylko znaki wprowadzone przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-326">By setting both of these properties to `false`, the parsed string will represent only the characters entered by the user.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <Member MemberName="IncludePrompt">
      <MemberSignature Language="C#" Value="public bool IncludePrompt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludePrompt" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludePrompt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludePrompt { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludePrompt : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.IncludePrompt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d5f1-327">Pobiera lub ustawia wartość wskazującą, czy <see cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" /> jest używana do reprezentowania braku danych wejściowych użytkownika podczas wyświetlania sformatowanego ciągu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-327">Gets or sets a value indicating whether <see cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" /> is used to represent the absence of user input when displaying the formatted string.</span></span></summary>
        <value><span data-ttu-id="2d5f1-328"><see langword="true" />Jeśli znak monitu jest używany do reprezentowania pozycji, w których nie podano danych wejściowych użytkownika; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-328"><see langword="true" /> if the prompt character is used to represent the positions where no user input was provided; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2d5f1-329">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-329">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-330">Właściwości <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> i <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> określają, czy znaki monitu i literału pojawiają się podczas wywoływania metody.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-330">The <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties will determine whether prompt and literal characters appear when calling the <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method.</span></span> <span data-ttu-id="2d5f1-331">Po ustawieniu obu tych właściwości na `false`, przeanalizowany ciąg będzie reprezentował tylko znaki wprowadzone przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-331">By setting both of these properties to `false`, the parsed string will represent only the characters entered by the user.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InsertAt">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d5f1-332">Wstawia znak lub ciąg w określonym miejscu w formacie ciągu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-332">Inserts a character or string at a specific position within the formatted string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public bool InsertAt (char input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InsertAt(char input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAt (input As Char, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InsertAt(char input, int position);" />
      <MemberSignature Language="F#" Value="member this.InsertAt : char * int -&gt; bool" Usage="maskedTextProvider.InsertAt (input, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="2d5f1-333"><see cref="T:System.Char" /> Do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-333">The <see cref="T:System.Char" /> to be inserted.</span></span></param>
        <param name="position"><span data-ttu-id="2d5f1-334">Pozycja od zera w sformatowanym ciągu, aby wstawić znak.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-334">The zero-based position in the formatted string to insert the character.</span></span></param>
        <summary><span data-ttu-id="2d5f1-335">Wstawia określony znak w podanej pozycji w sformatowanym ciągu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-335">Inserts the specified character at the specified position within the formatted string.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-336"><see langword="true" />Jeśli wstawianie zakończyło się pomyślnie; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-336"><see langword="true" /> if the insertion was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-337">Metoda wstawia znak do pierwszej pozycji edycji, który jest określony `pos` przez parametr. <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A></span><span class="sxs-lookup"><span data-stu-id="2d5f1-337">The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts a character into the first edit position at or beyond that specified by the `pos` parameter.</span></span> <span data-ttu-id="2d5f1-338">Ta metoda przesunie wszystkie istniejące znaki po punkcie wstawiania przez jedną pozycję, aby zwolnić miejsce dla wstawionego `input` znaku.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-338">This method will shift all existing characters after the insertion point over by one position to make room for the inserted `input` character.</span></span> <span data-ttu-id="2d5f1-339">W przypadku wystąpienia jednego z następujących błędów Wstawianie nie jest wykonywane, a metoda zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-339">If one of the following errors occurs, the insertion is not performed, and the method returns `false`.</span></span>  
  
-   <span data-ttu-id="2d5f1-340">Wartość parametru jest mniejsza od zera lub większa <xref:System.ComponentModel.MaskedTextProvider.Length%2A> od sformatowanego ciągu. `pos`</span><span class="sxs-lookup"><span data-stu-id="2d5f1-340">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="2d5f1-341">Nie znaleziono znaku edytowalnego w sformatowanym ciągu znajdującym się w określonym położeniu `pos`lub poza nim.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-341">An editable character was not found in the formatted string at or beyond the specified position, `pos`.</span></span>  
  
-   <span data-ttu-id="2d5f1-342">Znak wstawiania,, `input`nie jest prawidłowym znakiem wejściowym, ponieważ nie można go wydrukować lub nie pasuje do odpowiadającego mu elementu maski.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-342">The insertion character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="2d5f1-343">Brak dostępnych pozycji z prawej strony punktu wstawiania, tak aby nie można było przesunąć istniejących znaków.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-343">There are no available positions to the right of the insertion point, so that existing characters cannot be shifted.</span></span>  
  
-   <span data-ttu-id="2d5f1-344">Przesunięcie istniejących znaków spowodowałoby naruszenie maski.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-344">Shifting the existing characters would produce a violation of the mask.</span></span>  
  
 <span data-ttu-id="2d5f1-345">Pusty `input` ciąg nie spowoduje zmiany w sformatowanym ciągu, ale zwróci `true`wartość.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-345">An empty `input` string will cause no change in the formatted string, but will return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public bool InsertAt (string input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InsertAt(string input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAt (input As String, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InsertAt(System::String ^ input, int position);" />
      <MemberSignature Language="F#" Value="member this.InsertAt : string * int -&gt; bool" Usage="maskedTextProvider.InsertAt (input, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="2d5f1-346"><see cref="T:System.String" /> Do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-346">The <see cref="T:System.String" /> to be inserted.</span></span></param>
        <param name="position"><span data-ttu-id="2d5f1-347">Pozycja od zera w sformatowanym ciągu, aby wstawić ciąg wejściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-347">The zero-based position in the formatted string to insert the input string.</span></span></param>
        <summary><span data-ttu-id="2d5f1-348">Wstawia określony ciąg w określonym położeniu w sformatowanym ciągu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-348">Inserts the specified string at a specified position within the formatted string.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-349"><see langword="true" />Jeśli wstawianie zakończyło się pomyślnie; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-349"><see langword="true" /> if the insertion was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-350">Metoda wstawia każdy znak `input` z ciągu do pozycji edycji znajdujących się na pozycji `pos` i poza. <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A></span><span class="sxs-lookup"><span data-stu-id="2d5f1-350">The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts each character from the `input` string into the edit positions located at position `pos` and beyond.</span></span> <span data-ttu-id="2d5f1-351">Ta metoda przesunie wszystkie istniejące znaki po punkcie wstawiania przez jedną pozycję dla każdego wstawionego znaku.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-351">This method will shift all existing characters after the insertion point over by one position for each inserted character.</span></span> <span data-ttu-id="2d5f1-352">Jeśli wystąpi jeden z następujących błędów, wstawianie nie jest wykonywane, a metoda zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-352">If one of the following errors occurs, no insertion is performed, and the method returns `false`.</span></span>  
  
-   <span data-ttu-id="2d5f1-353">Wartość parametru jest mniejsza od zera lub większa <xref:System.ComponentModel.MaskedTextProvider.Length%2A> od sformatowanego ciągu. `pos`</span><span class="sxs-lookup"><span data-stu-id="2d5f1-353">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="2d5f1-354">Nie ma wystarczającej liczby edytowalnych znaków w sformatowanym ciągu w określonym położeniu `pos`lub poza nim, aby wstawić wszystkie znaki `input` z ciągu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-354">Not enough editable characters exist in the formatted string at or beyond the specified position, `pos`, to insert all of the characters from the `input` string.</span></span>  
  
-   <span data-ttu-id="2d5f1-355">Jeden lub więcej znaków wstawiania nie jest prawidłowym znakiem wejściowym, ponieważ nie są drukowalne lub nie pasują do odpowiadającego im elementu maski.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-355">One or more of the insertion characters are not a valid input character because they are not printable or do not match their corresponding mask element.</span></span>  
  
-   <span data-ttu-id="2d5f1-356">Nie ma wystarczającej liczby dostępnych pozycji z prawej strony punktu wstawiania, aby nie można było przesunąć istniejących znaków.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-356">There are not enough available positions to the right of the insertion point, so that existing characters cannot be shifted.</span></span>  
  
-   <span data-ttu-id="2d5f1-357">Przesunięcie istniejących znaków spowodowałoby naruszenie maski.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-357">Shifting the existing characters would produce a violation of the mask.</span></span> <span data-ttu-id="2d5f1-358">Należy zauważyć, że przesunięcie odbywa się podczas wstawiania każdego pojedynczego znaku.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-358">Note that this shifting occurs during the insertion of each individual character.</span></span>  
  
 <span data-ttu-id="2d5f1-359">Pusty `input` ciąg nie spowoduje zmiany w sformatowanym ciągu, ale zwróci `true`wartość.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-359">An empty `input` string will cause no change in the formatted string, but will return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2d5f1-360">Parametr ma wartość <see langword="null" />. <paramref name="input" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-360">The <paramref name="input" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public bool InsertAt (char input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InsertAt(char input, int32 position, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAt (input As Char, position As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InsertAt(char input, int position, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.InsertAt : char * int *  *  -&gt; bool" Usage="maskedTextProvider.InsertAt (input, position, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="2d5f1-361"><see cref="T:System.Char" /> Do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-361">The <see cref="T:System.Char" /> to be inserted.</span></span></param>
        <param name="position"><span data-ttu-id="2d5f1-362">Pozycja od zera w sformatowanym ciągu, aby wstawić znak.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-362">The zero-based position in the formatted string to insert the character.</span></span></param>
        <param name="testPosition"><span data-ttu-id="2d5f1-363">Jeśli metoda zakończy się pomyślnie, ostatnią pozycją, w której został wstawiony znak; w przeciwnym razie pierwsze miejsce, w którym nie powiodła się Wstawianie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-363">If the method is successful, the last position where a character was inserted; otherwise, the first position where the insertion failed.</span></span> <span data-ttu-id="2d5f1-364">Parametr wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-364">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="2d5f1-365">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> , który zwięzłie opisuje wynik operacji wstawiania.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-365">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the insertion operation.</span></span> <span data-ttu-id="2d5f1-366">Parametr wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-366">An output parameter.</span></span></param>
        <summary><span data-ttu-id="2d5f1-367">Wstawia określony znak w podanej pozycji w sformatowanym ciągu, zwracając ostatnią pozycję wstawienia i stan operacji.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-367">Inserts the specified character at the specified position within the formatted string, returning the last insertion position and the status of the operation.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-368"><see langword="true" />Jeśli wstawianie zakończyło się pomyślnie; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-368"><see langword="true" /> if the insertion was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-369">Metoda wstawia znak do pierwszej pozycji edycji, który jest określony `pos` przez parametr. <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A></span><span class="sxs-lookup"><span data-stu-id="2d5f1-369">The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts a character into the first edit position at or beyond that specified by the `pos` parameter.</span></span> <span data-ttu-id="2d5f1-370">Ta metoda przesunie wszystkie istniejące znaki po punkcie wstawiania przez jedną pozycję, aby zwolnić miejsce dla wstawionego `input` znaku.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-370">This method will shift all existing characters after the insertion point over by one position to make room for the inserted `input` character.</span></span> <span data-ttu-id="2d5f1-371">W przypadku wystąpienia jednego z następujących błędów Wstawianie nie jest wykonywane, a metoda zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-371">If one of the following errors occurs, the insertion is not performed, and the method returns `false`.</span></span>  
  
-   <span data-ttu-id="2d5f1-372">Wartość parametru jest mniejsza od zera lub większa <xref:System.ComponentModel.MaskedTextProvider.Length%2A> od sformatowanego ciągu. `pos`</span><span class="sxs-lookup"><span data-stu-id="2d5f1-372">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="2d5f1-373">Nie znaleziono znaku edytowalnego w sformatowanym ciągu znajdującym się w określonym położeniu `pos`lub poza nim.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-373">An editable character was not found in the formatted string at or beyond the specified position, `pos`.</span></span>  
  
-   <span data-ttu-id="2d5f1-374">Znak wstawiania,, `input`nie jest prawidłowym znakiem wejściowym, ponieważ nie można go wydrukować lub nie pasuje do odpowiadającego mu elementu maski.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-374">The insertion character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="2d5f1-375">Brak dostępnych pozycji z prawej strony punktu wstawiania, tak aby nie można było przesunąć istniejących znaków.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-375">There are no available positions to the right of the insertion point, so that existing characters cannot be shifted.</span></span>  
  
-   <span data-ttu-id="2d5f1-376">Przesunięcie istniejących znaków spowodowałoby naruszenie maski.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-376">Shifting the existing characters would produce a violation of the mask.</span></span>  
  
 <span data-ttu-id="2d5f1-377">Pusty `input` ciąg nie spowoduje zmiany w sformatowanym ciągu, ale zwróci `true`wartość.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-377">An empty `input` string will cause no change in the formatted string, but will return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public bool InsertAt (string input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InsertAt(string input, int32 position, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAt (input As String, position As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InsertAt(System::String ^ input, int position, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.InsertAt : string * int *  *  -&gt; bool" Usage="maskedTextProvider.InsertAt (input, position, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="2d5f1-378"><see cref="T:System.String" /> Do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-378">The <see cref="T:System.String" /> to be inserted.</span></span></param>
        <param name="position"><span data-ttu-id="2d5f1-379">Pozycja od zera w sformatowanym ciągu, aby wstawić ciąg wejściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-379">The zero-based position in the formatted string to insert the input string.</span></span></param>
        <param name="testPosition"><span data-ttu-id="2d5f1-380">Jeśli metoda zakończy się pomyślnie, ostatnią pozycją, w której został wstawiony znak; w przeciwnym razie pierwsze miejsce, w którym nie powiodła się Wstawianie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-380">If the method is successful, the last position where a character was inserted; otherwise, the first position where the insertion failed.</span></span> <span data-ttu-id="2d5f1-381">Parametr wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-381">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="2d5f1-382">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> , który zwięzłie opisuje wynik operacji wstawiania.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-382">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the insertion operation.</span></span> <span data-ttu-id="2d5f1-383">Parametr wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-383">An output parameter.</span></span></param>
        <summary><span data-ttu-id="2d5f1-384">Wstawia określony ciąg w określonym położeniu w sformatowanym ciągu, zwracając ostatnią pozycję wstawienia i stan operacji.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-384">Inserts the specified string at a specified position within the formatted string, returning the last insertion position and the status of the operation.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-385"><see langword="true" />Jeśli wstawianie zakończyło się pomyślnie; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-385"><see langword="true" /> if the insertion was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-386">Metoda wstawia każdy znak `input` z ciągu do pozycji edycji znajdujących się na pozycji `pos` i poza. <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A></span><span class="sxs-lookup"><span data-stu-id="2d5f1-386">The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts each character from the `input` string into the edit positions located at position `pos` and beyond.</span></span> <span data-ttu-id="2d5f1-387">Ta metoda przesunie wszystkie istniejące znaki po punkcie wstawiania przez jedną pozycję dla każdego wstawionego znaku.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-387">This method will shift all existing characters after the insertion point over by one position for each inserted character.</span></span> <span data-ttu-id="2d5f1-388">Jeśli wystąpi jeden z następujących błędów, wstawianie nie jest wykonywane, a metoda zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-388">If one of the following errors occurs, no insertion is performed, and the method returns `false`.</span></span>  
  
-   <span data-ttu-id="2d5f1-389">Wartość parametru jest mniejsza od zera lub większa <xref:System.ComponentModel.MaskedTextProvider.Length%2A> od sformatowanego ciągu. `pos`</span><span class="sxs-lookup"><span data-stu-id="2d5f1-389">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="2d5f1-390">Nie ma wystarczającej liczby edytowalnych znaków w sformatowanym ciągu w określonym położeniu `pos`lub poza nim, aby wstawić wszystkie znaki `input` z ciągu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-390">Not enough editable characters exist in the formatted string at or beyond the specified position, `pos`, to insert all of the characters from the `input` string.</span></span>  
  
-   <span data-ttu-id="2d5f1-391">Jeden lub więcej znaków wstawiania nie jest prawidłowym znakiem wejściowym, ponieważ nie są drukowalne lub nie pasują do odpowiadającego im elementu maski.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-391">One or more of the insertion characters are not a valid input character because they are not printable or do not match their corresponding mask element.</span></span>  
  
-   <span data-ttu-id="2d5f1-392">Nie ma wystarczającej liczby dostępnych pozycji z prawej strony punktu wstawiania, aby nie można było przesunąć istniejących znaków.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-392">There are not enough available positions to the right of the insertion point, so that existing characters cannot be shifted.</span></span>  
  
-   <span data-ttu-id="2d5f1-393">Przesunięcie istniejących znaków spowodowałoby naruszenie maski.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-393">Shifting the existing characters would produce a violation of the mask.</span></span> <span data-ttu-id="2d5f1-394">Należy zauważyć, że przesunięcie odbywa się podczas wstawiania każdego pojedynczego znaku.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-394">Note that this shifting occurs during the insertion of each individual character.</span></span>  
  
 <span data-ttu-id="2d5f1-395">Pusty `input` ciąg nie spowoduje zmiany w sformatowanym ciągu, ale zwróci `true`wartość.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-395">An empty `input` string will cause no change in the formatted string, but will return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2d5f1-396">Parametr ma wartość <see langword="null" />. <paramref name="input" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-396">The <paramref name="input" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="InvalidIndex">
      <MemberSignature Language="C#" Value="public static int InvalidIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 InvalidIndex" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvalidIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int InvalidIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.InvalidIndex : int" Usage="System.ComponentModel.MaskedTextProvider.InvalidIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d5f1-397">Pobiera górną granicę zakresu nieprawidłowych indeksów.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-397">Gets the upper bound of the range of invalid indexes.</span></span></summary>
        <value><span data-ttu-id="2d5f1-398">Wartość reprezentująca największy nieprawidłowy indeks określony przez implementację dostawcy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-398">A value representing the largest invalid index, as determined by the provider implementation.</span></span> <span data-ttu-id="2d5f1-399">Na przykład, jeśli najniższy prawidłowy indeks to 0, ta właściwość zwróci wartość-1.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-399">For example, if the lowest valid index is 0, this property will return -1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-400">Właściwość służy do reprezentowania wyniku, który jest nieprawidłowy dla operacji indeksowania, takich <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> jak metoda. <xref:System.ComponentModel.MaskedTextProvider.InvalidIndex%2A></span><span class="sxs-lookup"><span data-stu-id="2d5f1-400">The <xref:System.ComponentModel.MaskedTextProvider.InvalidIndex%2A> property is used to represent a result that is not valid for indexing operations, such as the <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> method.</span></span>  
  
 <span data-ttu-id="2d5f1-401">W przypadku użycia dostawcy lub zaimplementowania własnego elementu należy użyć tej właściwości, aby zdecydować, czy indeks jest nieprawidłowy, a nie z czytelną wiedzą o nieprawidłowych wartościach.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-401">When you use the provider or implement your own, you should use this property to decide if an index is invalid, rather than hard-coding knowledge of invalid values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsAvailablePosition">
      <MemberSignature Language="C#" Value="public bool IsAvailablePosition (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAvailablePosition(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAvailablePosition (position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAvailablePosition(int position);" />
      <MemberSignature Language="F#" Value="member this.IsAvailablePosition : int -&gt; bool" Usage="maskedTextProvider.IsAvailablePosition position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="2d5f1-402">Pozycja od zera w masce do przetestowania.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-402">The zero-based position in the mask to test.</span></span></param>
        <summary><span data-ttu-id="2d5f1-403">Określa, czy określone położenie jest dostępne do przypisania.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-403">Determines whether the specified position is available for assignment.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-404"><see langword="true" />Jeśli określona pozycja w sformatowanym ciągu jest edytowalna i nie została jeszcze przypisana. w <see langword="false" />przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-404"><see langword="true" /> if the specified position in the formatted string is editable and has not been assigned to yet; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-405"><xref:System.ComponentModel.MaskedTextProvider.IsAvailablePosition%2A> Metoda zwraca`true` tylko wtedy, gdy spełnione są wszystkie następujące warunki:</span><span class="sxs-lookup"><span data-stu-id="2d5f1-405">The <xref:System.ComponentModel.MaskedTextProvider.IsAvailablePosition%2A> method returns `true` only if all of the following conditions are true:</span></span>  
  
-   <span data-ttu-id="2d5f1-406">Parametr znajduje się w granicach sformatowanego ciągu; oznacza to, że jego wartość jest większa lub równa zero i mniejsza <xref:System.ComponentModel.MaskedTextProvider.Length%2A> od sformatowanego ciągu. `pos`</span><span class="sxs-lookup"><span data-stu-id="2d5f1-406">The `pos` parameter is within the bounds of the formatted string; that is, its value is greater than or equal to zero and less than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="2d5f1-407">Określona pozycja jest znakiem edytowalnym.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-407">The specified position is an editable character.</span></span>  
  
-   <span data-ttu-id="2d5f1-408">Znak nie został już przypisany do tego położenia.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-408">A character has not already been assigned to this position.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsEditPosition">
      <MemberSignature Language="C#" Value="public bool IsEditPosition (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEditPosition(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEditPosition (position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEditPosition(int position);" />
      <MemberSignature Language="F#" Value="member this.IsEditPosition : int -&gt; bool" Usage="maskedTextProvider.IsEditPosition position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="2d5f1-409">Pozycja od zera w masce do przetestowania.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-409">The zero-based position in the mask to test.</span></span></param>
        <summary><span data-ttu-id="2d5f1-410">Określa, czy podaną pozycję można edytować.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-410">Determines whether the specified position is editable.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-411"><see langword="true" />Jeśli określona pozycja w sformatowanym ciągu jest edytowalna; w <see langword="false" />przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-411"><see langword="true" /> if the specified position in the formatted string is editable; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-412"><xref:System.ComponentModel.MaskedTextProvider.IsEditPosition%2A> Metoda zwraca`true` tylko wtedy, gdy oba z następujących warunków są spełnione:</span><span class="sxs-lookup"><span data-stu-id="2d5f1-412">The <xref:System.ComponentModel.MaskedTextProvider.IsEditPosition%2A> method returns `true` only if both of the following conditions are true:</span></span>  
  
-   <span data-ttu-id="2d5f1-413">Parametr znajduje się w granicach sformatowanego ciągu; oznacza to, że jego wartość jest większa lub równa zero i mniejsza <xref:System.ComponentModel.MaskedTextProvider.Length%2A> od sformatowanego ciągu. `pos`</span><span class="sxs-lookup"><span data-stu-id="2d5f1-413">The `pos` parameter is within the bounds of the formatted string; that is, its value is greater than or equal to zero and less than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="2d5f1-414">Określona pozycja jest znakiem edytowalnym.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-414">The specified position is an editable character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsPassword">
      <MemberSignature Language="C#" Value="public bool IsPassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPassword" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.IsPassword" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPassword As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPassword { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsPassword : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.IsPassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d5f1-415">Pobiera lub ustawia wartość określającą, czy należy zastosować ochronę hasłem do sformatowanego ciągu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-415">Gets or sets a value that determines whether password protection should be applied to the formatted string.</span></span></summary>
        <value><span data-ttu-id="2d5f1-416"><see langword="true" />Jeśli ciąg wejściowy ma być traktowany jako ciąg hasła; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-416"><see langword="true" /> if the input string is to be treated as a password string; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2d5f1-417">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-417">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-418">Ochronę hasłem można zainicjować przy użyciu jednego z następujących dwóch sposobów:</span><span class="sxs-lookup"><span data-stu-id="2d5f1-418">Password protection can be initiated using one of the following two ways:</span></span>  
  
-   <span data-ttu-id="2d5f1-419">Ustawianie właściwości na`null` wartość niebędącą wartością. <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A></span><span class="sxs-lookup"><span data-stu-id="2d5f1-419">Setting the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property to a non-`null` value.</span></span>  
  
-   <span data-ttu-id="2d5f1-420">Ustawienie właściwości na `true` ,która<xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> również ustawia Właściwośćnawartość.<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> <xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A></span><span class="sxs-lookup"><span data-stu-id="2d5f1-420">Setting the <xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A> property to `true`, which also sets the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property to the <xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> value.</span></span>  
  
 <span data-ttu-id="2d5f1-421"><xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A>jest używana przez <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> metody i <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> do określenia, czy należy ujawniać rzeczywiste znaki wejściowe, czy zasłaniać je <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>za pomocą.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-421"><xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A> is used by the <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> methods to determine whether to reveal the actual input characters or obscure them with <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <Member MemberName="IsValidInputChar">
      <MemberSignature Language="C#" Value="public static bool IsValidInputChar (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidInputChar(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidInputChar (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidInputChar(char c);" />
      <MemberSignature Language="F#" Value="static member IsValidInputChar : char -&gt; bool" Usage="System.ComponentModel.MaskedTextProvider.IsValidInputChar c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="2d5f1-422"><see cref="T:System.Char" /> Wartość do przetestowania.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-422">The <see cref="T:System.Char" /> value to test.</span></span></param>
        <summary><span data-ttu-id="2d5f1-423">Określa, czy określony znak jest prawidłowym znakiem wejściowym.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-423">Determines whether the specified character is a valid input character.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-424"><see langword="true" />Jeśli określony znak zawiera prawidłową wartość wejściową; w <see langword="false" />przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-424"><see langword="true" /> if the specified character contains a valid input value; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-425">Prawidłowe znaki wejściowe obejmują wszystkie znaki drukowalne, takie jak litery, cyfry, znaki interpunkcyjne, symbole i znak spacji.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-425">Valid input characters include all printable characters, which include letters, digits, punctuation, symbols and the space character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
      </Docs>
    </Member>
    <Member MemberName="IsValidMaskChar">
      <MemberSignature Language="C#" Value="public static bool IsValidMaskChar (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidMaskChar(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidMaskChar (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidMaskChar(char c);" />
      <MemberSignature Language="F#" Value="static member IsValidMaskChar : char -&gt; bool" Usage="System.ComponentModel.MaskedTextProvider.IsValidMaskChar c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="2d5f1-426"><see cref="T:System.Char" /> Wartość do przetestowania.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-426">The <see cref="T:System.Char" /> value to test.</span></span></param>
        <summary><span data-ttu-id="2d5f1-427">Określa, czy określony znak jest prawidłowym znakiem maski.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-427">Determines whether the specified character is a valid mask character.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-428"><see langword="true" />Jeśli określony znak zawiera prawidłową wartość maski; w <see langword="false" />przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-428"><see langword="true" /> if the specified character contains a valid mask value; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-429">Prawidłowe znaki maski obejmują wszystkie drukowalne znaki, takie jak litery, cyfry, znaki interpunkcyjne, symbole i znak spacji.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-429">Valid mask characters include all printable characters, which include letters, digits, punctuation, symbols and the space character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName="IsValidPasswordChar">
      <MemberSignature Language="C#" Value="public static bool IsValidPasswordChar (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidPasswordChar(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidPasswordChar (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidPasswordChar(char c);" />
      <MemberSignature Language="F#" Value="static member IsValidPasswordChar : char -&gt; bool" Usage="System.ComponentModel.MaskedTextProvider.IsValidPasswordChar c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="2d5f1-430"><see cref="T:System.Char" /> Wartość do przetestowania.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-430">The <see cref="T:System.Char" /> value to test.</span></span></param>
        <summary><span data-ttu-id="2d5f1-431">Określa, czy określony znak jest prawidłowym znakiem hasła.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-431">Determines whether the specified character is a valid password character.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-432"><see langword="true" />Jeśli określony znak zawiera prawidłową wartość hasła; w <see langword="false" />przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-432"><see langword="true" /> if the specified character contains a valid password value; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-433">Prawidłowe znaki hasła obejmują wszystkie znaki drukowalne i znak null, które są używane do wyłączania funkcji hasła.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-433">Valid password characters include all printable characters and the null character, which is used to disable password functionality.</span></span> <span data-ttu-id="2d5f1-434">Znaki drukowalne zawierają litery, cyfry, znaki interpunkcyjne, symbole i znak spacji.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-434">Printable characters include letters, digits, punctuation, symbols and the space character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IsPassword" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public char this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char default[int] { char get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : char" Usage="System.ComponentModel.MaskedTextProvider.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2d5f1-435">Indeks (liczony od zera) elementu do pobrania.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-435">A zero-based index of the element to retrieve.</span></span></param>
        <summary><span data-ttu-id="2d5f1-436">Pobiera element w określonym położeniu w sformatowanym ciągu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-436">Gets the element at the specified position in the formatted string.</span></span></summary>
        <value><span data-ttu-id="2d5f1-437"><see cref="T:System.Char" /> Na określonej pozycji w sformatowanym ciągu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-437">The <see cref="T:System.Char" /> at the specified position in the formatted string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-438">Właściwość jest standardowym indeksatorem <xref:System.ComponentModel.MaskedTextProvider> dla klasy. <xref:System.ComponentModel.MaskedTextProvider.Item%2A></span><span class="sxs-lookup"><span data-stu-id="2d5f1-438">The <xref:System.ComponentModel.MaskedTextProvider.Item%2A> property is the standard indexer for the <xref:System.ComponentModel.MaskedTextProvider> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="2d5f1-439"><paramref name="index" />jest mniejsza od zera lub większa lub równa <see cref="P:System.ComponentModel.MaskedTextProvider.Length" /> wartości maski.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-439"><paramref name="index" /> is less than zero or greater than or equal to the <see cref="P:System.ComponentModel.MaskedTextProvider.Length" /> of the mask.</span></span></exception>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
      </Docs>
    </Member>
    <Member MemberName="LastAssignedPosition">
      <MemberSignature Language="C#" Value="public int LastAssignedPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LastAssignedPosition" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastAssignedPosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LastAssignedPosition { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LastAssignedPosition : int" Usage="System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d5f1-440">Pobiera indeks w masce po prawej stronie znaku wejściowego, który został przypisany do maski.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-440">Gets the index in the mask of the rightmost input character that has been assigned to the mask.</span></span></summary>
        <value><span data-ttu-id="2d5f1-441">Jeśli do maski jest przypisany co najmniej jeden znak wejściowy, <see cref="T:System.Int32" /> zawierający indeks przypisanej do prawej pozycji; w przeciwnym razie, jeśli żadna pozycja nie została <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />przypisana.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-441">If at least one input character has been assigned to the mask, an <see cref="T:System.Int32" /> containing the index of rightmost assigned position; otherwise, if no position has been assigned, <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-442"><xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> Właściwość reprezentuje miejsce do edycji w masce względem pochodzenia, do którego przypisano znak wejściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-442">The <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> property represents the farthest edit position in the mask, relative to the origin, that has been assigned an input character.</span></span> <span data-ttu-id="2d5f1-443">W przypadku języków odczytanych od lewej do prawej (LTR), takich jak angielski, jest to przypisana do prawej pozycji pozycja; w przypadku języków odczytywanych od prawej do lewej (RTL) będzie to pozycja z lewej strony.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-443">For languages read left-to-right (LTR), such as English, this is the rightmost assigned position; for languages read right-to-left (RTL), this would be the leftmost position.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.ComponentModel.MaskedTextProvider.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d5f1-444">Pobiera długość maski, Brak znaków modyfikatora maski.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-444">Gets the length of the mask, absent any mask modifier characters.</span></span></summary>
        <value><span data-ttu-id="2d5f1-445"><see cref="T:System.Int32" /> Zawierający liczbę pozycji w masce, z wyłączeniem znaków, które modyfikują wprowadzanie maski.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-445">An <see cref="T:System.Int32" /> containing the number of positions in the mask, excluding characters that modify mask input.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-446"><xref:System.ComponentModel.MaskedTextProvider.Length%2A> Właściwość reprezentuje łączną liczbę znaków w masce, w tym literał i znaki edytowalne.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-446">The <xref:System.ComponentModel.MaskedTextProvider.Length%2A> property represents the total number of characters in the mask, including both the literal and editable characters.</span></span> <span data-ttu-id="2d5f1-447">Liczbę znaków literału można określić przez odjęcie wartości elementu <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> <xref:System.ComponentModel.MaskedTextProvider.Length%2A>od.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-447">The number of literal characters can be determined by subtracting the value of the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> from the <xref:System.ComponentModel.MaskedTextProvider.Length%2A>.</span></span>  
  
 <span data-ttu-id="2d5f1-448"><xref:System.ComponentModel.MaskedTextProvider.Length%2A>opisuje także Długość sformatowanego ciągu, w tym znaki wejściowe, literały i znaki monitu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-448"><xref:System.ComponentModel.MaskedTextProvider.Length%2A> also describes the length of the formatted string, including input characters, literals, and prompt characters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      </Docs>
    </Member>
    <Member MemberName="Mask">
      <MemberSignature Language="C#" Value="public string Mask { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Mask" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.Mask" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mask As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Mask { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Mask : string" Usage="System.ComponentModel.MaskedTextProvider.Mask" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d5f1-449">Pobiera maskę wejściową.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-449">Gets the input mask.</span></span></summary>
        <value><span data-ttu-id="2d5f1-450">A <see cref="T:System.String" /> zawiera pełną maskę.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-450">A <see cref="T:System.String" /> containing the full mask.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-451">Właściwość jest ustawiana <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> w konstruktorze. <xref:System.ComponentModel.MaskedTextProvider.Mask%2A></span><span class="sxs-lookup"><span data-stu-id="2d5f1-451">The <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.</span></span> <span data-ttu-id="2d5f1-452">Ta maska musi zawierać tylko prawidłowe znaki zdefiniowane przez język maskowania.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-452">This mask must contain only valid characters as defined by the masking language.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.#ctor" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.MaskFull" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.MaskCompleted" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.Clone" />
      </Docs>
    </Member>
    <Member MemberName="MaskCompleted">
      <MemberSignature Language="C#" Value="public bool MaskCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaskCompleted" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.MaskCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaskCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MaskCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.MaskCompleted : bool" Usage="System.ComponentModel.MaskedTextProvider.MaskCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d5f1-453">Pobiera wartość wskazującą, czy wszystkie wymagane dane wejściowe zostały wprowadzone do sformatowanego ciągu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-453">Gets a value indicating whether all required inputs have been entered into the formatted string.</span></span></summary>
        <value><span data-ttu-id="2d5f1-454"><see langword="true" />Jeśli wszystkie wymagane dane wejściowe zostały wprowadzone do maski; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-454"><see langword="true" /> if all required input has been entered into the mask; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-455"><xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> Właściwość sprawdza tylko wymagane elementy wejściowe.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-455">The <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> property checks only required input elements.</span></span> <span data-ttu-id="2d5f1-456">Aby określić, czy wszystkie wymagane i opcjonalne elementy wejściowe zostały wprowadzone, należy zamiast <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A?displayProperty=nameWithType> tego użyć właściwości <xref:System.Windows.Forms.MaskedTextBox> klasy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-456">To determine whether all required and optional input elements have been entered, use the <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A?displayProperty=nameWithType> property of the <xref:System.Windows.Forms.MaskedTextBox> class instead.</span></span>  
  
 <span data-ttu-id="2d5f1-457">Bieżąca wartość <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> właściwości określa, które elementy formatowania są uważane za wymagane i które są opcjonalne.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-457">The current value of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property determines which formatting elements are considered required and which are optional.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskCompleted" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.MaskFull" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      </Docs>
    </Member>
    <Member MemberName="MaskFull">
      <MemberSignature Language="C#" Value="public bool MaskFull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaskFull" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.MaskFull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaskFull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MaskFull { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.MaskFull : bool" Usage="System.ComponentModel.MaskedTextProvider.MaskFull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d5f1-458">Pobiera wartość wskazującą, czy wszystkie wymagane i opcjonalne dane wejściowe zostały wprowadzone do sformatowanego ciągu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-458">Gets a value indicating whether all required and optional inputs have been entered into the formatted string.</span></span></summary>
        <value><span data-ttu-id="2d5f1-459"><see langword="true" />Jeśli wprowadzono wszystkie wymagane i opcjonalne dane wejściowe; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-459"><see langword="true" /> if all required and optional inputs have been entered; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-460">Aby sprawdzić, czy wprowadzono tylko wymagane elementy wejściowe, użyj <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-460">To verify if only required input elements have been entered, use the <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> property instead.</span></span> <span data-ttu-id="2d5f1-461">Bieżąca wartość <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> właściwości określa, które elementy formatowania są uważane za wymagane i które są opcjonalne.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-461">The current value of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property determines which formatting elements are considered required and which are optional.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskFull" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.MaskCompleted" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      </Docs>
    </Member>
    <Member MemberName="PasswordChar">
      <MemberSignature Language="C#" Value="public char PasswordChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PasswordChar" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      <MemberSignature Language="VB.NET" Value="Public Property PasswordChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PasswordChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.PasswordChar : char with get, set" Usage="System.ComponentModel.MaskedTextProvider.PasswordChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d5f1-462">Pobiera lub ustawia znak, który ma zostać zastąpiony dla rzeczywistych znaków wejściowych.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-462">Gets or sets the character to be substituted for the actual input characters.</span></span></summary>
        <value><span data-ttu-id="2d5f1-463"><see cref="T:System.Char" /> Wartość używana jako znak hasła.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-463">The <see cref="T:System.Char" /> value used as the password character.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-464">W przypadku poufnych danych wejściowych użytkownika powszechną procedurą jest ukrycie rzeczywistych informacji wprowadzonych przez użytkownika podczas operacji wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-464">For sensitive user input, it is common practice to conceal the actual information entered by the user during output operations.</span></span> <span data-ttu-id="2d5f1-465">Jeśli właściwość jest ustawiona na`null` nieznakowe, metody wyjściowe, takie jak <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> i <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> , będą zasłaniać znaki wejściowe z określonym znakiem hasła. <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A></span><span class="sxs-lookup"><span data-stu-id="2d5f1-465">If the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a non-`null` character, output methods such as <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> will obscure the input characters with the specified password character.</span></span> <span data-ttu-id="2d5f1-466">Ustawienie tej właściwości na `null` wartość spowoduje wyłączenie funkcji ochrony haseł.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-466">Setting this property to `null` will disable password protection functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2d5f1-467">Znak hasła określony podczas ustawiania tej właściwości jest taki sam jak w przypadku bieżącego znaku <see cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />monitu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-467">The password character specified when setting this property is the same as the current prompt character, <see cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />.</span></span> <span data-ttu-id="2d5f1-468">Te dwa muszą być różne.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-468">The two are required to be different.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2d5f1-469">Znak określony podczas ustawiania tej właściwości nie jest prawidłowym znakiem hasła określonym przez <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> metodę.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-469">The character specified when setting this property is not a valid password character, as determined by the <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> method.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IsPassword" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <Member MemberName="PromptChar">
      <MemberSignature Language="C#" Value="public char PromptChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PromptChar" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
      <MemberSignature Language="VB.NET" Value="Public Property PromptChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PromptChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.PromptChar : char with get, set" Usage="System.ComponentModel.MaskedTextProvider.PromptChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d5f1-470">Pobiera lub ustawia znak używany do reprezentowania braku danych wejściowych użytkownika dla wszystkich dostępnych pozycji edycji.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-470">Gets or sets the character used to represent the absence of user input for all available edit positions.</span></span></summary>
        <value><span data-ttu-id="2d5f1-471">Znak używany do monitowania użytkownika o dane wejściowe.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-471">The character used to prompt the user for input.</span></span> <span data-ttu-id="2d5f1-472">Wartość domyślna to podkreślenie (_).</span><span class="sxs-lookup"><span data-stu-id="2d5f1-472">The default is an underscore (_).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-473">Właściwość reprezentuje znak monitu, który jest używany <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> przez metody i <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> do reprezentowania bieżącego stanu sformatowanego ciągu wejściowego. <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A></span><span class="sxs-lookup"><span data-stu-id="2d5f1-473">The <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> property represents the prompt character that is used by the <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> methods to represent the current state of the formatted input string.</span></span> <span data-ttu-id="2d5f1-474">Znak monitu jest umieszczany w pozycji edytowalnych, do których nie została jeszcze przypisana wartość wejściowa.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-474">A prompt character is placed in editable positions that have not yet been assigned an input value.</span></span> <span data-ttu-id="2d5f1-475">Niektóre wersje <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> metody również zależą od wartości <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-475">Some versions of the <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method also depend on the value of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2d5f1-476">Znak monitu określony podczas ustawiania tej właściwości jest taki sam jak bieżący znak <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />hasła.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-476">The prompt character specified when setting this property is the same as the current password character, <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />.</span></span> <span data-ttu-id="2d5f1-477">Te dwa muszą być różne.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-477">The two are required to be different.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2d5f1-478">Znak określony podczas ustawiania tej właściwości nie jest prawidłowym znakiem hasła określonym przez <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> metodę.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-478">The character specified when setting this property is not a valid password character, as determined by the <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> method.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d5f1-479">Usuwa ostatni przypisany znak z sformatowanego ciągu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-479">Removes the last assigned character from the formatted string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove();" />
      <MemberSignature Language="F#" Value="member this.Remove : unit -&gt; bool" Usage="maskedTextProvider.Remove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2d5f1-480">Usuwa ostatni przypisany znak z sformatowanego ciągu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-480">Removes the last assigned character from the formatted string.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-481"><see langword="true" />Jeśli znak został pomyślnie usunięty; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-481"><see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-482">Metoda <xref:System.ComponentModel.MaskedTextProvider.Remove%2A> nie działa, jeśli nie ma jeszcze żadnych znaków przypisanych do maski.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-482">The <xref:System.ComponentModel.MaskedTextProvider.Remove%2A> method has no effect if there are no characters assigned to the mask yet.</span></span>  
  
 <span data-ttu-id="2d5f1-483">Po usunięciu ostatniego przypisanego znaku z sformatowanego ciągu, edytowalny znak maski jest resetowany dla tej pozycji, co pozwala na kolejne dane wejściowe.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-483">When the last assigned character is removed from the formatted string, the editable mask character is reset for that position, allowing subsequent input.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove([out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove([Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Remove :  *  -&gt; bool" Usage="maskedTextProvider.Remove (testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="testPosition"><span data-ttu-id="2d5f1-484">Pozycja od zera w sformatowanym ciągu, w którym znak został rzeczywiście usunięty.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-484">The zero-based position in the formatted string where the character was actually removed.</span></span> <span data-ttu-id="2d5f1-485">Parametr wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-485">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="2d5f1-486">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> , który zwięzłie opisuje wynik operacji.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-486">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span></span> <span data-ttu-id="2d5f1-487">Parametr wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-487">An output parameter.</span></span></param>
        <summary><span data-ttu-id="2d5f1-488">Usuwa ostatni przypisany znak z sformatowanego ciągu, a następnie wyprowadza pozycję usunięcia i informacje opisowe.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-488">Removes the last assigned character from the formatted string, and then outputs the removal position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-489"><see langword="true" />Jeśli znak został pomyślnie usunięty; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-489"><see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-490">Metoda <xref:System.ComponentModel.MaskedTextProvider.Remove%2A> nie działa, jeśli nie ma jeszcze żadnych znaków przypisanych do maski.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-490">The <xref:System.ComponentModel.MaskedTextProvider.Remove%2A> method has no effect if there are no characters assigned to the mask yet.</span></span>  
  
 <span data-ttu-id="2d5f1-491">Po usunięciu ostatniego przypisanego znaku z sformatowanego ciągu, edytowalny znak maski jest resetowany dla tej pozycji, co pozwala na kolejne dane wejściowe.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-491">When the last assigned character is removed from the formatted string, the editable mask character is reset for that position, allowing subsequent input.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveAt">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d5f1-492">Usuwa jeden lub więcej przypisanych znaków z sformatowanego ciągu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-492">Removes one or more assigned characters from the formatted string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public bool RemoveAt (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAt(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAt (position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAt(int position);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; bool" Usage="maskedTextProvider.RemoveAt position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="2d5f1-493">Pozycja od zera przypisanego znaku do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-493">The zero-based position of the assigned character to remove.</span></span></param>
        <summary><span data-ttu-id="2d5f1-494">Usuwa przypisany znak z podanej pozycji z sformatowanego ciągu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-494">Removes the assigned character at the specified position from the formatted string.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-495"><see langword="true" />Jeśli znak został pomyślnie usunięty; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-495"><see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-496">Metoda <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> nie działa, jeśli nie ma żadnych przypisanych znaków w określonym położeniu usuwania.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-496">The <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> method has no effect if there are no assigned characters at the removal position specified.</span></span> <span data-ttu-id="2d5f1-497">Ta metoda nie ma wpływ na znaki literału.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-497">Literal characters are not affected by this method.</span></span>  
  
 <span data-ttu-id="2d5f1-498">Po usunięciu znaku pozostałe znaki umieszczone w masce zostaną przesunięte w lewo, aby wypełnić przerwy utworzoną przez usunięcie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-498">When a character is removed, the remaining higher-positioned characters in the mask will shift to the left to fill in the gap created by the removal.</span></span> <span data-ttu-id="2d5f1-499">Pozycje opuszczone są resetowane dla danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-499">Vacated positions are reset for input.</span></span> <span data-ttu-id="2d5f1-500">Jeśli przenoszenie znaków jest uniemożliwione przez definicję maski, nie następuje usunięcie i <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> zwraca. `false`</span><span class="sxs-lookup"><span data-stu-id="2d5f1-500">If movement of the characters is prevented by the mask definition, no removal occurs, and <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="2d5f1-501">To wywołanie metody jest dokładnie równoważne następującej wywołaniu przeciążonej <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%28System.Int32%2CSystem.Int32%29> wersji:</span><span class="sxs-lookup"><span data-stu-id="2d5f1-501">This method call is exactly equivalent to the following call to the overloaded <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%28System.Int32%2CSystem.Int32%29> version:</span></span>  
  
 `RemoveAt(pos, pos);`  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public bool RemoveAt (int startPosition, int endPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAt(int32 startPosition, int32 endPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAt (startPosition As Integer, endPosition As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAt(int startPosition, int endPosition);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int * int -&gt; bool" Usage="maskedTextProvider.RemoveAt (startPosition, endPosition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startPosition"><span data-ttu-id="2d5f1-502">Indeks (liczony od zera) pierwszego przypisanego znaku do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-502">The zero-based index of the first assigned character to remove.</span></span></param>
        <param name="endPosition"><span data-ttu-id="2d5f1-503">Indeks (liczony od zera) ostatniego przypisanego znaku do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-503">The zero-based index of the last assigned character to remove.</span></span></param>
        <summary><span data-ttu-id="2d5f1-504">Usuwa przypisane znaki między określonymi pozycjami z sformatowanego ciągu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-504">Removes the assigned characters between the specified positions from the formatted string.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-505"><see langword="true" />Jeśli znak został pomyślnie usunięty; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-505"><see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-506">Metoda <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> nie działa, jeśli nie ma żadnych przypisanych znaków w określonych pozycjach usuwania.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-506">The <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> method has no effect if there are no assigned characters at the removal positions specified.</span></span>  
  
 <span data-ttu-id="2d5f1-507">Po usunięciu znaku pozostałe znaki umieszczone w masce zostaną przesunięte w lewo, aby wypełnić przerwy utworzoną przez usunięcie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-507">When a character is removed, the remaining higher-positioned characters in the mask will shift to the left to fill in the gap created by the removal.</span></span> <span data-ttu-id="2d5f1-508">Pozycje opuszczone są resetowane dla danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-508">Vacated positions are reset for input.</span></span> <span data-ttu-id="2d5f1-509">Jeśli przenoszenie znaków jest uniemożliwione przez definicję maski, nie następuje usunięcie i <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> zwraca. `false`</span><span class="sxs-lookup"><span data-stu-id="2d5f1-509">If movement of the characters is prevented by the mask definition, no removal occurs, and <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public bool RemoveAt (int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAt(int32 startPosition, int32 endPosition, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAt (startPosition As Integer, endPosition As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAt(int startPosition, int endPosition, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int * int *  *  -&gt; bool" Usage="maskedTextProvider.RemoveAt (startPosition, endPosition, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="startPosition"><span data-ttu-id="2d5f1-510">Indeks (liczony od zera) pierwszego przypisanego znaku do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-510">The zero-based index of the first assigned character to remove.</span></span></param>
        <param name="endPosition"><span data-ttu-id="2d5f1-511">Indeks (liczony od zera) ostatniego przypisanego znaku do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-511">The zero-based index of the last assigned character to remove.</span></span></param>
        <param name="testPosition"><span data-ttu-id="2d5f1-512">Jeśli to się powiedzie, pozycja od zera w sformatowanym ciągu, w którym znaki zostały faktycznie usunięte; w przeciwnym razie, pierwsze miejsce, w którym operacja nie powiodła się.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-512">If successful, the zero-based position in the formatted string of where the characters were actually removed; otherwise, the first position where the operation failed.</span></span> <span data-ttu-id="2d5f1-513">Parametr wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-513">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="2d5f1-514">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> , który zwięzłie opisuje wynik operacji.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-514">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span></span> <span data-ttu-id="2d5f1-515">Parametr wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-515">An output parameter.</span></span></param>
        <summary><span data-ttu-id="2d5f1-516">Usuwa przypisane znaki między określonymi pozycjami z sformatowanego ciągu, a następnie wyprowadza pozycję usunięcia i informacje opisowe.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-516">Removes the assigned characters between the specified positions from the formatted string, and then outputs the removal position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-517"><see langword="true" />Jeśli znak został pomyślnie usunięty; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-517"><see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-518">Metoda <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> nie działa, jeśli nie ma żadnych przypisanych znaków w określonych pozycjach usuwania.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-518">The <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> method has no effect if there are no assigned characters at the removal positions specified.</span></span>  
  
 <span data-ttu-id="2d5f1-519">Po usunięciu znaku pozostałe znaki umieszczone w masce zostaną przesunięte w lewo, aby wypełnić przerwy utworzoną przez usunięcie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-519">When a character is removed, the remaining higher-positioned characters in the mask will shift to the left to fill in the gap created by the removal.</span></span> <span data-ttu-id="2d5f1-520">Pozycje opuszczone są resetowane dla danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-520">Vacated positions are reset for input.</span></span> <span data-ttu-id="2d5f1-521">Jeśli przenoszenie znaków jest uniemożliwione przez definicję maski, nie następuje usunięcie i <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> zwraca. `false`</span><span class="sxs-lookup"><span data-stu-id="2d5f1-521">If movement of the characters is prevented by the mask definition, no removal occurs, and <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="2d5f1-522">Ta wersja programu <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> zawiera dwa dodatkowe parametry wyjściowe umożliwiające przekazanie większej ilości informacji na temat operacji.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-522">This version of <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> provides two additional output parameters to convey more information about the operation of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Replace">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d5f1-523">Zamienia jeden lub więcej edytowalnych znaków w sformatowanym ciągu z określonymi znakami.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-523">Replaces one or more editable characters in the formatted string with the specified characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (char input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(char input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As Char, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(char input, int position);" />
      <MemberSignature Language="F#" Value="member this.Replace : char * int -&gt; bool" Usage="maskedTextProvider.Replace (input, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="2d5f1-524"><see cref="T:System.Char" /> Wartość, która zastąpi istniejącą wartość.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-524">The <see cref="T:System.Char" /> value that replaces the existing value.</span></span></param>
        <param name="position"><span data-ttu-id="2d5f1-525">Pozycja od zera, aby wyszukać pierwszy znak edytowalny, który ma zostać zamieniony.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-525">The zero-based position to search for the first editable character to replace.</span></span></param>
        <summary><span data-ttu-id="2d5f1-526">Zamienia pojedynczy znak na lub poza określoną pozycję o określoną wartość znaku.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-526">Replaces a single character at or beyond the specified position with the specified character value.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-527"><see langword="true" />Jeśli znak został pomyślnie zastąpiony; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-527"><see langword="true" /> if the character was successfully replaced; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-528">Metoda wyszukuje pierwsze miejsce edytowalne w sformatowanym ciągu na określonej `pos`pozycji lub poza nią. <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%29></span><span class="sxs-lookup"><span data-stu-id="2d5f1-528">The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%29> method searches for the first editable position in the formatted string at or beyond the specified position, `pos`.</span></span> <span data-ttu-id="2d5f1-529">Jeśli zostanie znaleziony, wartość pozycji edytowalnej jest zmieniana na określony znak, `input`.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-529">If one is found, the value of the editable position is changed to the specified character, `input`.</span></span> <span data-ttu-id="2d5f1-530">Dowolny z następujących warunków spowoduje błąd, który powoduje, że zastąpienie nie zostanie wykonane i wartość `false` , która ma zostać zwrócona:</span><span class="sxs-lookup"><span data-stu-id="2d5f1-530">Any of the following conditions will result in an error that causes no replacement to be performed and a value of `false` to be returned:</span></span>  
  
-   <span data-ttu-id="2d5f1-531">Wartość parametru jest mniejsza od zera lub większa <xref:System.ComponentModel.MaskedTextProvider.Length%2A> od sformatowanego ciągu. `pos`</span><span class="sxs-lookup"><span data-stu-id="2d5f1-531">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="2d5f1-532">Nie znaleziono znaku edytowalnego w sformatowanym ciągu znajdującym się w określonym położeniu `pos`lub poza nim.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-532">An editable character was not found in the formatted string at or beyond the specified position, `pos`.</span></span>  
  
-   <span data-ttu-id="2d5f1-533">Znak zastępczy nie `input`jest prawidłowym znakiem wejściowym, ponieważ nie można go wydrukować lub nie pasuje do odpowiadającego mu elementu maski.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-533">The replacement character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (string input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(string input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(System::String ^ input, int position);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * int -&gt; bool" Usage="maskedTextProvider.Replace (input, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="2d5f1-534"><see cref="T:System.String" /> Wartość służąca do zastępowania istniejących znaków do edycji.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-534">The <see cref="T:System.String" /> value used to replace the existing editable characters.</span></span></param>
        <param name="position"><span data-ttu-id="2d5f1-535">Pozycja od zera, aby wyszukać pierwszy znak edytowalny, który ma zostać zamieniony.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-535">The zero-based position to search for the first editable character to replace.</span></span></param>
        <summary><span data-ttu-id="2d5f1-536">Zamienia zakres edytowalnych znaków, zaczynając od określonej pozycji z określonym ciągiem.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-536">Replaces a range of editable characters starting at the specified position with the specified string.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-537"><see langword="true" />Jeśli wszystkie znaki zostały pomyślnie zastąpione; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-537"><see langword="true" /> if all the characters were successfully replaced; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-538">Metoda wyszukuje pierwsze miejsce edytowalne na określonej `pos`pozycji lub poza nią. <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29></span><span class="sxs-lookup"><span data-stu-id="2d5f1-538">The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29> method searches for the first editable position at or beyond the specified position, `pos`.</span></span> <span data-ttu-id="2d5f1-539">Przy założeniu, że po tym momencie jest wystarczająca możliwość edytowalnych pozycji, istniejące wartości znakowe są zamieniane jeden do jednego z zawartością parametru `input`zastępczego ciągu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-539">Operating under the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, `input`.</span></span>  
  
 <span data-ttu-id="2d5f1-540">Poniższe warunki są uznawane za błędy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-540">The following conditions are considered errors.</span></span> <span data-ttu-id="2d5f1-541">Gdy wystąpi błąd, nie następuje zamiana i <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-541">When an error occurs, no replacement occurs and <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29> returns `false`.</span></span>  
  
-   <span data-ttu-id="2d5f1-542">Wartość parametru jest mniejsza od zera lub większa <xref:System.ComponentModel.MaskedTextProvider.Length%2A> od sformatowanego ciągu. `pos`</span><span class="sxs-lookup"><span data-stu-id="2d5f1-542">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="2d5f1-543">W sformatowanym ciągu nie ma wystarczającej liczby edytowalnych pozycji do przechowywania zawartości ciągu zamiennego.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-543">There are not enough editable positions in the formatted string to hold the contents of the replacement string.</span></span>  
  
-   <span data-ttu-id="2d5f1-544">Jedna z wartości znaków zastępczych jest nieprawidłowa, ponieważ nie jest drukowana lub nie pasuje do odpowiadającego jej elementu maski.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-544">One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2d5f1-545">Parametr ma wartość <see langword="null" />. <paramref name="input" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-545">The <paramref name="input" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (char input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(char input, int32 position, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As Char, position As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(char input, int position, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Replace : char * int *  *  -&gt; bool" Usage="maskedTextProvider.Replace (input, position, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="2d5f1-546"><see cref="T:System.Char" /> Wartość, która zastąpi istniejącą wartość.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-546">The <see cref="T:System.Char" /> value that replaces the existing value.</span></span></param>
        <param name="position"><span data-ttu-id="2d5f1-547">Pozycja od zera, aby wyszukać pierwszy znak edytowalny, który ma zostać zamieniony.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-547">The zero-based position to search for the first editable character to replace.</span></span></param>
        <param name="testPosition"><span data-ttu-id="2d5f1-548">Jeśli to się powiedzie, pozycja od zera w sformatowanym ciągu, w którym ostatni znak został faktycznie zastąpiony; w przeciwnym razie, pierwsze miejsce, w którym operacja nie powiodła się.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-548">If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</span></span> <span data-ttu-id="2d5f1-549">Parametr wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-549">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="2d5f1-550">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> , który zwięzłie opisuje wynik operacji zamiany.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-550">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the replacement operation.</span></span> <span data-ttu-id="2d5f1-551">Parametr wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-551">An output parameter.</span></span></param>
        <summary><span data-ttu-id="2d5f1-552">Zastępuje pojedynczy znak znajdujący się w określonej pozycji lub poza nią określoną wartością znaku, a następnie wyprowadza pozycję usunięcia i informacje opisowe.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-552">Replaces a single character at or beyond the specified position with the specified character value, and then outputs the removal position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-553"><see langword="true" />Jeśli znak został pomyślnie zastąpiony; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-553"><see langword="true" /> if the character was successfully replaced; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-554">Metoda wyszukuje pierwsze miejsce edytowalne w sformatowanym ciągu na określonej `pos`pozycji lub poza nią. <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29></span><span class="sxs-lookup"><span data-stu-id="2d5f1-554">The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method searches for the first editable position in the formatted string at or beyond the specified position, `pos`.</span></span> <span data-ttu-id="2d5f1-555">Jeśli zostanie znaleziony, wartość pozycji edytowalnej jest zmieniana na określony znak, `input`.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-555">If one is found, the value of the editable position is changed to the specified character, `input`.</span></span> <span data-ttu-id="2d5f1-556">Dowolny z poniższych warunków spowoduje wystąpienie błędu, który powoduje, że zastąpienie nie zostanie wykonane i wartość `false` , która ma zostać zwrócona:</span><span class="sxs-lookup"><span data-stu-id="2d5f1-556">Any of the following conditions will result in an error condition that causes no replacement to be performed and a value of `false` to be returned:</span></span>  
  
-   <span data-ttu-id="2d5f1-557">Wartość parametru jest mniejsza od zera lub większa <xref:System.ComponentModel.MaskedTextProvider.Length%2A> od sformatowanego ciągu. `pos`</span><span class="sxs-lookup"><span data-stu-id="2d5f1-557">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="2d5f1-558">Nie znaleziono znaku edytowalnego w sformatowanym ciągu znajdującym się w określonym położeniu `pos`lub poza nim.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-558">An editable character was not found in the formatted string at or beyond the specified position, `pos`.</span></span>  
  
-   <span data-ttu-id="2d5f1-559">Znak zastępczy nie `input`jest prawidłowym znakiem wejściowym, ponieważ nie można go wydrukować lub nie pasuje do odpowiadającego mu elementu maski.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-559">The replacement character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.</span></span>  
  
 <span data-ttu-id="2d5f1-560">Oprócz wartości zwracanej ta metoda ma dwa parametry wyjściowe umożliwiające dostarczenie dodatkowych informacji na temat operacji zastępczej.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-560">In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (string input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(string input, int32 position, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, position As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(System::String ^ input, int position, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * int *  *  -&gt; bool" Usage="maskedTextProvider.Replace (input, position, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="2d5f1-561"><see cref="T:System.String" /> Wartość służąca do zastępowania istniejących znaków do edycji.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-561">The <see cref="T:System.String" /> value used to replace the existing editable characters.</span></span></param>
        <param name="position"><span data-ttu-id="2d5f1-562">Pozycja od zera, aby wyszukać pierwszy znak edytowalny, który ma zostać zamieniony.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-562">The zero-based position to search for the first editable character to replace.</span></span></param>
        <param name="testPosition"><span data-ttu-id="2d5f1-563">Jeśli to się powiedzie, pozycja od zera w sformatowanym ciągu, w którym ostatni znak został faktycznie zastąpiony; w przeciwnym razie, pierwsze miejsce, w którym operacja nie powiodła się.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-563">If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</span></span> <span data-ttu-id="2d5f1-564">Parametr wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-564">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="2d5f1-565">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> , który zwięzłie opisuje wynik operacji zamiany.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-565">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the replacement operation.</span></span> <span data-ttu-id="2d5f1-566">Parametr wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-566">An output parameter.</span></span></param>
        <summary><span data-ttu-id="2d5f1-567">Zastępuje zakres edytowalnych znaków, zaczynając od określonej pozycji o określonym ciągu, a następnie wyprowadza pozycję usunięcia i informacje opisowe.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-567">Replaces a range of editable characters starting at the specified position with the specified string, and then outputs the removal position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-568"><see langword="true" />Jeśli wszystkie znaki zostały pomyślnie zastąpione; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-568"><see langword="true" /> if all the characters were successfully replaced; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-569">Metoda wyszukuje pierwsze miejsce edytowalne na określonej `pos`pozycji lub poza nią. <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29></span><span class="sxs-lookup"><span data-stu-id="2d5f1-569">The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method searches for the first editable position at or beyond the specified position, `pos`.</span></span> <span data-ttu-id="2d5f1-570">Przy założeniu, że po tym momencie jest wystarczająca możliwość edytowalnych pozycji, istniejące wartości znakowe są zamieniane jeden na jeden z zawartością parametru `input`zastępczego ciągu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-570">Operating on the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, `input`.</span></span>  
  
 <span data-ttu-id="2d5f1-571">Poniższe warunki są uznawane za błędy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-571">The following conditions are considered errors.</span></span> <span data-ttu-id="2d5f1-572">Gdy wystąpi błąd, nie następuje zamiana i <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-572">When an error occurs, no replacement occurs and <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> returns `false`.</span></span>  
  
-   <span data-ttu-id="2d5f1-573">Wartość parametru jest mniejsza od zera lub większa <xref:System.ComponentModel.MaskedTextProvider.Length%2A> od sformatowanego ciągu. `pos`</span><span class="sxs-lookup"><span data-stu-id="2d5f1-573">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="2d5f1-574">W sformatowanym ciągu nie ma wystarczającej liczby edytowalnych pozycji do przechowywania zawartości ciągu zamiennego.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-574">There are not enough editable positions in the formatted string to hold the contents of the replacement string.</span></span>  
  
-   <span data-ttu-id="2d5f1-575">Jedna z wartości znaków zastępczych jest nieprawidłowa, ponieważ nie jest drukowana lub nie pasuje do odpowiadającego jej elementu maski.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-575">One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</span></span>  
  
 <span data-ttu-id="2d5f1-576">Oprócz wartości zwracanej ta metoda ma dwa parametry wyjściowe umożliwiające dostarczenie dodatkowych informacji na temat operacji zastępczej.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-576">In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (char input, int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(char input, int32 startPosition, int32 endPosition, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As Char, startPosition As Integer, endPosition As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(char input, int startPosition, int endPosition, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Replace : char * int * int *  *  -&gt; bool" Usage="maskedTextProvider.Replace (input, startPosition, endPosition, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="2d5f1-577"><see cref="T:System.Char" /> Wartość, która zastąpi istniejącą wartość.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-577">The <see cref="T:System.Char" /> value that replaces the existing value.</span></span></param>
        <param name="startPosition"><span data-ttu-id="2d5f1-578">Pozycja od zera w sformatowanym ciągu, w którym rozpocznie się zamienianie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-578">The zero-based position in the formatted string where the replacement starts.</span></span></param>
        <param name="endPosition"><span data-ttu-id="2d5f1-579">Pozycja od zera w sformatowanym ciągu, w którym następuje zastąpienie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-579">The zero-based position in the formatted string where the replacement ends.</span></span></param>
        <param name="testPosition"><span data-ttu-id="2d5f1-580">Jeśli to się powiedzie, pozycja od zera w sformatowanym ciągu, w którym ostatni znak został faktycznie zastąpiony; w przeciwnym razie, pierwsze miejsce, w którym operacja nie powiodła się.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-580">If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</span></span> <span data-ttu-id="2d5f1-581">Parametr wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-581">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="2d5f1-582">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> , który zwięzłie opisuje wynik operacji zamiany.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-582">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the replacement operation.</span></span> <span data-ttu-id="2d5f1-583">Parametr wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-583">An output parameter.</span></span></param>
        <summary><span data-ttu-id="2d5f1-584">Zamienia pojedynczy znak między określonymi pozycjami początkowymi i końcowymi o określoną wartość znaku, a następnie wyprowadza pozycję usunięcia i informacje opisowe.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-584">Replaces a single character between the specified starting and ending positions with the specified character value, and then outputs the removal position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-585"><see langword="true" />Jeśli znak został pomyślnie zastąpiony; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-585"><see langword="true" /> if the character was successfully replaced; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-586"><xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> Metoda wyszukuje pierwszą edytowalną pozycję w sformatowanym ciągu między określonymi pozycjami początkowymi i końcowymi.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-586">The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method searches for the first editable position in the formatted string between the specified starting and ending positions.</span></span> <span data-ttu-id="2d5f1-587">Jeśli zostanie znaleziony, wartość pozycji edytowalnej jest zmieniana na określony znak, `input`.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-587">If one is found, the value of the editable position is changed to the specified character, `input`.</span></span> <span data-ttu-id="2d5f1-588">Dowolny z poniższych warunków spowoduje wystąpienie błędu, który powoduje, że zastąpienie nie zostanie wykonane i wartość `false` , która ma zostać zwrócona:</span><span class="sxs-lookup"><span data-stu-id="2d5f1-588">Any of the following conditions will result in an error condition that causes no replacement to be performed and a value of `false` to be returned:</span></span>  
  
-   <span data-ttu-id="2d5f1-589">Parametr `startPos` lub`endPos` wskazuje przed początkiem sformatowanego ciągu lub poza jego końcem.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-589">The `startPos` or `endPos` parameters point before the start of the formatted string or beyond its end.</span></span>  
  
-   <span data-ttu-id="2d5f1-590">W określonym interwale nie znaleziono znaku edytowalnego.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-590">An editable character was not found in the specified interval.</span></span>  
  
-   <span data-ttu-id="2d5f1-591">Znak zastępczy nie `input`jest prawidłowym znakiem wejściowym, ponieważ nie można go wydrukować lub nie pasuje do odpowiadającego mu elementu maski.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-591">The replacement character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.</span></span>  
  
 <span data-ttu-id="2d5f1-592">Oprócz wartości zwracanej ta metoda ma dwa parametry wyjściowe umożliwiające dostarczenie dodatkowych informacji na temat operacji zastępczej.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-592">In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (string input, int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(string input, int32 startPosition, int32 endPosition, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, startPosition As Integer, endPosition As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(System::String ^ input, int startPosition, int endPosition, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * int * int *  *  -&gt; bool" Usage="maskedTextProvider.Replace (input, startPosition, endPosition, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="2d5f1-593"><see cref="T:System.String" /> Wartość służąca do zastępowania istniejących znaków do edycji.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-593">The <see cref="T:System.String" /> value used to replace the existing editable characters.</span></span></param>
        <param name="startPosition"><span data-ttu-id="2d5f1-594">Pozycja od zera w sformatowanym ciągu, w którym rozpocznie się zamienianie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-594">The zero-based position in the formatted string where the replacement starts.</span></span></param>
        <param name="endPosition"><span data-ttu-id="2d5f1-595">Pozycja od zera w sformatowanym ciągu, w którym następuje zastąpienie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-595">The zero-based position in the formatted string where the replacement ends.</span></span></param>
        <param name="testPosition"><span data-ttu-id="2d5f1-596">Jeśli to się powiedzie, pozycja od zera w sformatowanym ciągu, w którym ostatni znak został faktycznie zastąpiony; w przeciwnym razie, pierwsze miejsce, w którym operacja nie powiodła się.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-596">If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</span></span> <span data-ttu-id="2d5f1-597">Parametr wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-597">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="2d5f1-598">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> , który zwięzłie opisuje wynik operacji zamiany.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-598">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the replacement operation.</span></span> <span data-ttu-id="2d5f1-599">Parametr wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-599">An output parameter.</span></span></param>
        <summary><span data-ttu-id="2d5f1-600">Zastępuje zakres edytowalnych znaków między określonymi pozycjami początkowymi i końcowymi z określonym ciągiem, a następnie wyprowadza pozycję usunięcia i informacje opisowe.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-600">Replaces a range of editable characters between the specified starting and ending positions with the specified string, and then outputs the removal position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-601"><see langword="true" />Jeśli wszystkie znaki zostały pomyślnie zastąpione; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-601"><see langword="true" /> if all the characters were successfully replaced; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-602"><xref:System.ComponentModel.MaskedTextProvider.Replace%2A> Metoda wyszukuje pierwszą edytowalną pozycję w sformatowanym ciągu między określonymi pozycjami początkowymi i końcowymi.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-602">The <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> method searches for the first editable position in the formatted string between the specified starting and ending positions.</span></span> <span data-ttu-id="2d5f1-603">Przy założeniu, że po tym momencie jest wystarczająca możliwość edytowalnych pozycji, istniejące wartości znakowe są zamieniane jeden na jeden z zawartością parametru `input`zastępczego ciągu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-603">Operating on the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, `input`.</span></span>  
  
 <span data-ttu-id="2d5f1-604">Poniższe warunki są uznawane za błędy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-604">The following conditions are considered errors.</span></span> <span data-ttu-id="2d5f1-605">Gdy wystąpi błąd, nie następuje zamiana i <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-605">When an error occurs, no replacement occurs and <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> returns `false`.</span></span>  
  
-   <span data-ttu-id="2d5f1-606">Parametr `startPos` lub`endPos` wskazuje przed początkiem sformatowanego ciągu lub poza jego końcem.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-606">The `startPos` or `endPos` parameters point before the start of the formatted string or beyond its end.</span></span>  
  
-   <span data-ttu-id="2d5f1-607">W sformatowanym ciągu nie ma wystarczającej liczby edytowalnych pozycji do przechowywania zawartości ciągu zamiennego.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-607">There are not enough editable positions in the formatted string to hold the contents of the replacement string.</span></span>  
  
-   <span data-ttu-id="2d5f1-608">Jedna z wartości znaków zastępczych jest nieprawidłowa, ponieważ nie jest drukowana lub nie pasuje do odpowiadającego jej elementu maski.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-608">One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</span></span>  
  
 <span data-ttu-id="2d5f1-609">Oprócz wartości zwracanej ta metoda ma dwa parametry wyjściowe umożliwiające dostarczenie dodatkowych informacji na temat operacji zastępczej.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-609">In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="ResetOnPrompt">
      <MemberSignature Language="C#" Value="public bool ResetOnPrompt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResetOnPrompt" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
      <MemberSignature Language="VB.NET" Value="Public Property ResetOnPrompt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ResetOnPrompt { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ResetOnPrompt : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d5f1-610">Pobiera lub ustawia wartość określającą sposób obsługi znaku wejściowego, który pasuje do znaku monitu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-610">Gets or sets a value that determines how an input character that matches the prompt character should be handled.</span></span></summary>
        <value><span data-ttu-id="2d5f1-611"><see langword="true" />Jeśli znak monitu wprowadzony jako dane wejściowe powoduje, że aktualna pozycja edytowalna w masce ma zostać zresetowana; w przeciwnym <see langword="false" /> razie, aby wskazać, że znak monitu ma być przetwarzany jako normalny znak wejściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-611"><see langword="true" /> if the prompt character entered as input causes the current editable position in the mask to be reset; otherwise, <see langword="false" /> to indicate that the prompt character is to be processed as a normal input character.</span></span> <span data-ttu-id="2d5f1-612">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-612">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-613"><xref:System.ComponentModel.MaskedTextProvider>może traktować dwie kategorie znaków, tępy i znaki monitu w specjalny sposób.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-613"><xref:System.ComponentModel.MaskedTextProvider> can treat two categories of characters, paces and prompt characters, in a special manner.</span></span> <span data-ttu-id="2d5f1-614">Zwykle każdy znak wejściowy będzie testowany względem maski i został zaakceptowany lub odrzucony.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-614">Normally, each input character will be tested against the mask and either accepted or rejected.</span></span> <span data-ttu-id="2d5f1-615">Działając na założeniu, że <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> właściwość jest ustawiona na wartość inną niż `null`, a następnie ustawienie <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> właściwości na `true` spowoduje przetworzenie specjalnego przetwarzania dla znaku monitu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-615">Operating on the assumption that the <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> property is set to a value other than `null`, then setting the <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> property to `true` will result in special processing for the prompt character.</span></span> <span data-ttu-id="2d5f1-616">Po dodaniu znaku monitu spowoduje to wyczyszczenie bieżącego położenia znaku maski i bieżące położenie, które ma być zaawansowane, do następnego znaku edytowalnego.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-616">When a prompt character is added, it causes the current mask character position to be cleared and the current position to be advanced to the next editable character.</span></span>  
  
 <span data-ttu-id="2d5f1-617"><xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>ma pierwszeństwo przed <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> właściwością, zgodnie z opisem w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-617"><xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> takes precedence over the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> property as described in the following table.</span></span>  
  
|<xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>|<xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>|<span data-ttu-id="2d5f1-618">Zachowanie rezultatowe</span><span class="sxs-lookup"><span data-stu-id="2d5f1-618">Resulting behavior</span></span>|  
|---------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------|  
|`true`|`true`|<span data-ttu-id="2d5f1-619">Znak monitu może zostać dodany i powoduje zresetowanie bieżącej pozycji maski.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-619">The prompt character can be added and it causes the current mask position to be reset.</span></span> <span data-ttu-id="2d5f1-620">Domyślnie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-620">The default.</span></span>|  
|`true`|`false`|<span data-ttu-id="2d5f1-621">Znak monitu może zostać dodany i powoduje zresetowanie bieżącej pozycji maski.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-621">The prompt character can be added and it causes the current mask position to be reset.</span></span>|  
|`false`|`true`|<span data-ttu-id="2d5f1-622">Znak monitu jest przetwarzany jako normalny znak wejściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-622">The prompt character is processed as a normal input character.</span></span>|  
|`false`|`false`|<span data-ttu-id="2d5f1-623">Znak monitu jest nieprawidłowy i metody, które próbują dodać znak, zakończą się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-623">The prompt character is not valid and methods attempting to add the character will fail.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ResetOnPrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.Clear" />
      </Docs>
    </Member>
    <Member MemberName="ResetOnSpace">
      <MemberSignature Language="C#" Value="public bool ResetOnSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResetOnSpace" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
      <MemberSignature Language="VB.NET" Value="Public Property ResetOnSpace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ResetOnSpace { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ResetOnSpace : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d5f1-624">Pobiera lub ustawia wartość określającą, jak ma być obsługiwany znak wejściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-624">Gets or sets a value that determines how a space input character should be handled.</span></span></summary>
        <value><span data-ttu-id="2d5f1-625"><see langword="true" />Jeśli znak wprowadzania miejsca powoduje zresetowanie bieżącej pozycji do edycji w masce; w przeciwnym <see langword="false" /> razie, aby wskazać, że ma być przetwarzany jako normalny znak wejściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-625"><see langword="true" /> if the space input character causes the current editable position in the mask to be reset; otherwise, <see langword="false" /> to indicate that it is to be processed as a normal input character.</span></span> <span data-ttu-id="2d5f1-626">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-626">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-627"><xref:System.ComponentModel.MaskedTextProvider>może traktować dwie kategorie znaków, spacje i znaki monitu w specjalny sposób.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-627"><xref:System.ComponentModel.MaskedTextProvider> can treat two categories of characters, spaces and prompt characters, in a special manner.</span></span> <span data-ttu-id="2d5f1-628">Zwykle każdy znak wejściowy będzie testowany względem maski i został zaakceptowany lub odrzucony.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-628">Normally, each input character will be tested against the mask and either accepted or rejected.</span></span> <span data-ttu-id="2d5f1-629">Ustawienie właściwości na `true` spowoduje, że bieżąca pozycja znaku maski jest czyszczona, a bieżące położenie jest zaawansowane do następnego znaku edytowalnego. <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A></span><span class="sxs-lookup"><span data-stu-id="2d5f1-629">Setting the <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> property to `true` will result in the current mask character position being cleared and the current position being advanced to the next editable character.</span></span>  
  
 <span data-ttu-id="2d5f1-630"><xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A>jest przydatne podczas przypisywania tekstu, który został zapisany z wyjątkiem monitu, gdzie monit jest zastępowany spacją.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-630"><xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> is useful when assigning text that was saved excluding the prompt, where the prompt is replaced with a space.</span></span> <span data-ttu-id="2d5f1-631">Przed przywróceniem tego ciągu, ustawienie <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> `true` spowoduje zresetowanie znaków monitu w miejscach zajmowanych przez spacje w ciągu wejściowym.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-631">Before restoring such a string, setting <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> to `true` will reset the prompt characters at the positions occupied by spaces in the input string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ResetOnSpace" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.Clear" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Set">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d5f1-632">Ustawia ciąg sformatowany na określony ciąg wejściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-632">Sets the formatted string to the specified input string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public bool Set (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Set(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Set(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Set (input As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Set(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Set : string -&gt; bool" Usage="maskedTextProvider.Set input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="2d5f1-633"><see cref="T:System.String" /> Wartość użyta do ustawienia sformatowanego ciągu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-633">The <see cref="T:System.String" /> value used to set the formatted string.</span></span></param>
        <summary><span data-ttu-id="2d5f1-634">Ustawia ciąg sformatowany na określony ciąg wejściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-634">Sets the formatted string to the specified input string.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-635"><see langword="true" />Jeśli wszystkie znaki zostały pomyślnie ustawione; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-635"><see langword="true" /> if all the characters were successfully set; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-636">Metoda czyści istniejącą zawartość sformatowanego ciągu, a następnie stosuje maskę `input` względem ciągu, aby zaktualizować zawartość sformatowanego ciągu. <xref:System.ComponentModel.MaskedTextProvider.Set%2A></span><span class="sxs-lookup"><span data-stu-id="2d5f1-636">The <xref:System.ComponentModel.MaskedTextProvider.Set%2A> method clears the existing contents of the formatted string and then applies the mask against the `input` string to update the contents of the formatted string.</span></span>  
  
 <span data-ttu-id="2d5f1-637">Poniższe warunki są uznawane za błędy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-637">The following conditions are considered errors.</span></span> <span data-ttu-id="2d5f1-638">Gdy wystąpi błąd, sformatowany ciąg pozostaje niezmieniony i <xref:System.ComponentModel.MaskedTextProvider.Set%2A> zwraca. `false`</span><span class="sxs-lookup"><span data-stu-id="2d5f1-638">When an error occurs, the formatted string remains unaltered and <xref:System.ComponentModel.MaskedTextProvider.Set%2A> returns `false`.</span></span>  
  
-   <span data-ttu-id="2d5f1-639">W sformatowanym ciągu nie ma wystarczającej liczby edytowalnych pozycji do przechowywania zawartości ciągu zamiennego.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-639">There are not enough editable positions in the formatted string to hold the contents of the replacement string.</span></span>  
  
-   <span data-ttu-id="2d5f1-640">Jedna z wartości znaków zastępczych jest nieprawidłowa, ponieważ nie jest drukowana lub nie pasuje do odpowiadającego jej elementu maski.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-640">One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2d5f1-641">Parametr ma wartość <see langword="null" />. <paramref name="input" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-641">The <paramref name="input" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public bool Set (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Set(string input, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Set (input As String, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Set(System::String ^ input, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Set : string *  *  -&gt; bool" Usage="maskedTextProvider.Set (input, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="2d5f1-642"><see cref="T:System.String" /> Wartość użyta do ustawienia sformatowanego ciągu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-642">The <see cref="T:System.String" /> value used to set the formatted string.</span></span></param>
        <param name="testPosition"><span data-ttu-id="2d5f1-643">Jeśli to się powiedzie, pozycja od zera w sformatowanym ciągu, w którym został faktycznie ustawiony ostatni znak; w przeciwnym razie, pierwsze miejsce, w którym operacja nie powiodła się.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-643">If successful, the zero-based position in the formatted string where the last character was actually set; otherwise, the first position where the operation failed.</span></span> <span data-ttu-id="2d5f1-644">Parametr wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-644">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="2d5f1-645">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> , który zwięzłie opisuje wynik operacji ustawiania.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-645">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the set operation.</span></span> <span data-ttu-id="2d5f1-646">Parametr wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-646">An output parameter.</span></span></param>
        <summary><span data-ttu-id="2d5f1-647">Ustawia ciąg sformatowany na określony ciąg wejściowy, a następnie wyprowadza pozycję usunięcia i informacje opisowe.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-647">Sets the formatted string to the specified input string, and then outputs the removal position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-648"><see langword="true" />Jeśli wszystkie znaki zostały pomyślnie ustawione; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-648"><see langword="true" /> if all the characters were successfully set; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-649">Metoda czyści istniejącą zawartość sformatowanego ciągu, a następnie stosuje maskę `input` względem ciągu, aby zaktualizować zawartość sformatowanego ciągu. <xref:System.ComponentModel.MaskedTextProvider.Set%2A></span><span class="sxs-lookup"><span data-stu-id="2d5f1-649">The <xref:System.ComponentModel.MaskedTextProvider.Set%2A> method clears the existing contents of the formatted string and then applies the mask against the `input` string to update the contents of the formatted string.</span></span>  
  
 <span data-ttu-id="2d5f1-650">Poniższe warunki są uznawane za błędy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-650">The following conditions are considered errors.</span></span> <span data-ttu-id="2d5f1-651">Gdy wystąpi błąd, sformatowany ciąg pozostaje niezmieniony i <xref:System.ComponentModel.MaskedTextProvider.Set%2A> zwraca. `false`</span><span class="sxs-lookup"><span data-stu-id="2d5f1-651">When an error occurs, the formatted string remains unaltered and <xref:System.ComponentModel.MaskedTextProvider.Set%2A> returns `false`.</span></span>  
  
-   <span data-ttu-id="2d5f1-652">W sformatowanym ciągu nie ma wystarczającej liczby edytowalnych pozycji do przechowywania zawartości ciągu zamiennego.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-652">There are not enough editable positions in the formatted string to hold the contents of the replacement string.</span></span>  
  
-   <span data-ttu-id="2d5f1-653">Jedna z wartości znaków zastępczych jest nieprawidłowa, ponieważ nie jest drukowana lub nie pasuje do odpowiadającego jej elementu maski.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-653">One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</span></span>  
  
 <span data-ttu-id="2d5f1-654">Ta wersja programu <xref:System.ComponentModel.MaskedTextProvider.Set%2A> zawiera dwa dodatkowe parametry wyjściowe umożliwiające przekazanie większej ilości informacji na temat operacji.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-654">This version of <xref:System.ComponentModel.MaskedTextProvider.Set%2A> provides two additional output parameters to convey more information about the operation of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2d5f1-655">Parametr ma wartość <see langword="null" />. <paramref name="input" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-655">The <paramref name="input" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      </Docs>
    </Member>
    <Member MemberName="SkipLiterals">
      <MemberSignature Language="C#" Value="public bool SkipLiterals { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipLiterals" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipLiterals As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SkipLiterals { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SkipLiterals : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.SkipLiterals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d5f1-656">Pobiera lub ustawia wartość wskazującą, czy pozycje znaku literału w masce mogą zostać zastąpione przez ich te same wartości.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-656">Gets or sets a value indicating whether literal character positions in the mask can be overwritten by their same values.</span></span></summary>
        <value><span data-ttu-id="2d5f1-657"><see langword="true" />Aby zezwolić na dodawanie literałów; w przeciwnym <see langword="false" /> razie, aby nie zezwalać użytkownikowi na zastępowanie znaków literału.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-657"><see langword="true" /> to allow literals to be added back; otherwise, <see langword="false" /> to not allow the user to overwrite literal characters.</span></span> <span data-ttu-id="2d5f1-658">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-658">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-659">Maski wejściowe mogą zawierać literały i znaki edytowalne.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-659">Input masks can contain literal and editable characters.</span></span> <span data-ttu-id="2d5f1-660">Jeśli podjęto próbę dodania znaku wejściowego do pozycji w masce, która jest zajęta przez literał, wartość <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> właściwości określa wynik.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-660">If an attempt is made to add an input character to the position in a mask occupied by a literal, the value of the <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> property determines the result.</span></span>  
  
-   <span data-ttu-id="2d5f1-661">Jeśli ta właściwość ma `true`wartość, jest ona prawidłowa, aby zastąpić literał o tej samej wartości przy dodawaniu znaków wejściowych.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-661">If this property is `true`, it is valid to overwrite a literal with the same value when adding input characters.</span></span> <span data-ttu-id="2d5f1-662">Na przykład wartość znaku ukośnika odwrotnego, `'/'`można dodać do trzeciego położenia maski. `"00/00/000"`</span><span class="sxs-lookup"><span data-stu-id="2d5f1-662">For example, a forward slash character value, `'/'`, could be added to the third position of the mask `"00/00/000"`.</span></span>  
  
-   <span data-ttu-id="2d5f1-663">Jeśli ta właściwość jest `false`, nie można przypisać żadnej wartości do pozycji maski, która jest zajęta przez znak literału.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-663">If this property is `false`, it is not valid to assign any value to a mask position occupied by a literal character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.SkipLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
      </Docs>
    </Member>
    <Member MemberName="ToDisplayString">
      <MemberSignature Language="C#" Value="public string ToDisplayString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToDisplayString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToDisplayString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToDisplayString();" />
      <MemberSignature Language="F#" Value="member this.ToDisplayString : unit -&gt; string" Usage="maskedTextProvider.ToDisplayString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2d5f1-664">Zwraca sformatowany ciąg w postaci, w której jest do odtworzenia.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-664">Returns the formatted string in a displayable form.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-665">Sformatowany <see cref="T:System.String" /> , który zawiera znaki i literały maski.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-665">The formatted <see cref="T:System.String" /> that includes prompts and mask literals.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-666">Metoda zawsze będzie zawierać monit i znaki literału w zwracanej wartości, niezależnie od wartości <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> właściwości lub <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>. <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A></span><span class="sxs-lookup"><span data-stu-id="2d5f1-666">The <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> method will always include prompt and literal characters in the return value, regardless of the value of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> or <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties.</span></span> <span data-ttu-id="2d5f1-667">Ta metoda będzie zawsze wyświetlała znaki hasła, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> Jeśli właściwość jest ustawiona na wartość znaku inną niż `null`.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-667">This method will always display password characters if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a character value other than `null`.</span></span>  
  
 <span data-ttu-id="2d5f1-668"><xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A>jest często używany do uzyskiwania ciągu do wyświetlania w elementach skojarzonych z interfejsem użytkownika, <xref:System.Windows.Forms.MaskedTextBox>takich jak.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-668"><xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> is commonly used to obtain the string to display in associated user interface elements, such as <xref:System.Windows.Forms.MaskedTextBox>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d5f1-669">Zwraca sformatowany ciąg.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-669">Returns the formatted string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="maskedTextProvider.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2d5f1-670">Zwraca sformatowany ciąg, który zawiera wszystkie przypisane wartości znaków.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-670">Returns the formatted string that includes all the assigned character values.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-671">Sformatowana <see cref="T:System.String" /> , która zawiera wszystkie przypisane wartości znaków.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-671">The formatted <see cref="T:System.String" /> that includes all the assigned character values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-672">Ta wersja przeciążonej <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> metody obejmuje odpowiednio polecenia i literały zgodnie z bieżącymi wartościami <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> właściwości i <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> .</span><span class="sxs-lookup"><span data-stu-id="2d5f1-672">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively.</span></span> <span data-ttu-id="2d5f1-673">Zawsze zwróci oryginalne znaki wejściowe, ignorując wartość <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-673">It will always return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2d5f1-674">Ponieważ ta metoda ujawnia informacje, które są zwykle chronione w interfejsie użytkownika przez znaki hasła, powinno być używane z największą ostrożnością, aby uniknąć przypadkowego ujawnienia poufnych danych użytkownika.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-674">Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool ignorePasswordChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool ignorePasswordChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (ignorePasswordChar As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool ignorePasswordChar);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool -&gt; string" Usage="maskedTextProvider.ToString ignorePasswordChar" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ignorePasswordChar" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ignorePasswordChar"><span data-ttu-id="2d5f1-675"><see langword="true" />Aby zwrócić rzeczywiste znaki edytowalne; w przeciwnym <see langword="false" /> razie, aby wskazać <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> , że właściwość ma być honorna.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-675"><see langword="true" /> to return the actual editable characters; otherwise, <see langword="false" /> to indicate that the <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> property is to be honored.</span></span></param>
        <summary><span data-ttu-id="2d5f1-676">Zwraca sformatowany ciąg, opcjonalnie uwzględniając znaki hasła.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-676">Returns the formatted string, optionally including password characters.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-677">Sformatowana <see cref="T:System.String" /> , która zawiera literały, znaki i opcjonalnie hasła.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-677">The formatted <see cref="T:System.String" /> that includes literals, prompts, and optionally password characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-678">Ta wersja przeciążonej <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> metody obejmuje odpowiednio polecenia i literały zgodnie z bieżącymi wartościami <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> właściwości i <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> .</span><span class="sxs-lookup"><span data-stu-id="2d5f1-678">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively.</span></span> <span data-ttu-id="2d5f1-679">Jeśli parametr jest `true`, zwróci oryginalne znaki wejściowe, ignorując wartość <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> właściwości. `ignorePasswordChar`</span><span class="sxs-lookup"><span data-stu-id="2d5f1-679">If the `ignorePasswordChar` parameter is `true`, it will return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span> <span data-ttu-id="2d5f1-680">Jeśli ten parametr ma `false`wartość, użyje znaku hasła, aby zaciemnienie edytowalnych danych wejściowych użytkownika <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> , jeśli właściwość jest ustawiona na inną niż `null`.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-680">If this parameter is `false`, it will use the password character to obscure editable user input if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a value other than `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2d5f1-681">Ponieważ ta metoda potencjalnie ujawnia informacje, które są zwykle chronione w interfejsie użytkownika za pomocą znaków hasła, powinno być używane z największą ostrożnością, aby uniknąć przypadkowego ujawnienia poufnych danych użytkownika.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-681">Because this method potentially reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool includePrompt, bool includeLiterals);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool includePrompt, bool includeLiterals) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (includePrompt As Boolean, includeLiterals As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool includePrompt, bool includeLiterals);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool * bool -&gt; string" Usage="maskedTextProvider.ToString (includePrompt, includeLiterals)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrompt" Type="System.Boolean" />
        <Parameter Name="includeLiterals" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrompt"><span data-ttu-id="2d5f1-682"><see langword="true" />Aby uwzględnić znaki monitu w zwracanym ciągu; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-682"><see langword="true" /> to include prompt characters in the return string; otherwise, <see langword="false" />.</span></span></param>
        <param name="includeLiterals"><span data-ttu-id="2d5f1-683"><see langword="true" />Aby uwzględnić znaki literału w zwracanym ciągu; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-683"><see langword="true" /> to include literal characters in the return string; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2d5f1-684">Zwraca sformatowany ciąg, opcjonalnie uwzględniając monit i znaki literału.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-684">Returns the formatted string, optionally including prompt and literal characters.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-685">Sformatowany <see cref="T:System.String" /> , który zawiera wszystkie przypisane wartości znaków i opcjonalnie zawiera literały i polecenia.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-685">The formatted <see cref="T:System.String" /> that includes all the assigned character values and optionally includes literals and prompts.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-686">Ta wersja przeciążonej <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> metody obejmuje odpowiednio polecenia i literały zgodnie z wartościami `IncludePrompt` parametrów i `IncludeLiterals` .</span><span class="sxs-lookup"><span data-stu-id="2d5f1-686">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method includes prompts and literals according to the values of the `IncludePrompt` and `IncludeLiterals` parameters, respectively.</span></span> <span data-ttu-id="2d5f1-687">Zwróć uwagę, że te parametry zastępują wartości <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-687">Notice that these parameters override the values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A><xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties.</span></span> <span data-ttu-id="2d5f1-688">Ta metoda zawsze zwróci oryginalne znaki wejściowe, ignorując wartość <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-688">This method will always return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2d5f1-689">Ponieważ ta metoda ujawnia informacje, które są zwykle chronione w interfejsie użytkownika przez znaki hasła, powinno być używane z największą ostrożnością, aby uniknąć przypadkowego ujawnienia poufnych danych użytkownika.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-689">Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (int startPosition, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(int32 startPosition, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (startPosition As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(int startPosition, int length);" />
      <MemberSignature Language="F#" Value="override this.ToString : int * int -&gt; string" Usage="maskedTextProvider.ToString (startPosition, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startPosition"><span data-ttu-id="2d5f1-690">Pozycja od zera w sformatowanym ciągu, w którym rozpoczyna się wyjście.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-690">The zero-based position in the formatted string where the output begins.</span></span></param>
        <param name="length"><span data-ttu-id="2d5f1-691">Liczba znaków do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-691">The number of characters to return.</span></span></param>
        <summary><span data-ttu-id="2d5f1-692">Zwraca podciąg sformatowanego ciągu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-692">Returns a substring of the formatted string.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-693">Jeśli to się powiedzie, podciąg sformatowanego <see cref="T:System.String" />, który zawiera wszystkie przypisane wartości znaków; <see cref="F:System.String.Empty" /> w przeciwnym razie ciąg.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-693">If successful, a substring of the formatted <see cref="T:System.String" />, which includes all the assigned character values; otherwise the <see cref="F:System.String.Empty" /> string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-694">Ta wersja przeciążonej <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> metody zwraca podciąg sformatowanego ciągu, rozpoczynając od pozycji `startPos` i uwzględniając kolejną liczbę znaków określoną przez `length` parametr.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-694">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter.</span></span> <span data-ttu-id="2d5f1-695">Zwrócony ciąg zawiera polecenia i literały odpowiednio do bieżących wartości <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> właściwości i. <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A></span><span class="sxs-lookup"><span data-stu-id="2d5f1-695">The returned string includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively.</span></span> <span data-ttu-id="2d5f1-696">Ciąg zwracany będzie zawierać oryginalne znaki wejściowe; <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> właściwość jest zawsze ignorowana.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-696">The return string will contain the original input characters; the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is always ignored.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2d5f1-697">Ponieważ ta metoda ujawnia informacje, które są zwykle chronione w interfejsie użytkownika przez znaki hasła, powinno być używane z największą ostrożnością, aby uniknąć przypadkowego ujawnienia poufnych danych użytkownika.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-697">Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 <span data-ttu-id="2d5f1-698"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A>wykonuje następujące akcje w przypadku niezgodności w parametrach wejściowych:</span><span class="sxs-lookup"><span data-stu-id="2d5f1-698"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:</span></span>  
  
-   <span data-ttu-id="2d5f1-699">Jeśli `startPos` jest mniejsza od zera, pozycja początkowa jest ustawiona na zero.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-699">If `startPos` is less than zero, the starting position is set to zero.</span></span>  
  
-   <span data-ttu-id="2d5f1-700">Jeśli `startPos` jest większa lub równa wartości rzeczywistej <xref:System.ComponentModel.MaskedTextProvider.Length%2A> sformatowanego ciągu, <xref:System.String.Empty> zwracany jest ciąg.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-700">If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned.</span></span>  
  
-   <span data-ttu-id="2d5f1-701">Jeśli `length` jest większa niż pozostała liczba znaków poza pozycją początkową, zwracane są tylko pozostałe znaki.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-701">If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned.</span></span>  
  
-   <span data-ttu-id="2d5f1-702">Jeśli `length` jest mniejsza lub równa zero <xref:System.String.Empty> , zwracany jest ciąg.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-702">If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool ignorePasswordChar, int startPosition, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool ignorePasswordChar, int32 startPosition, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (ignorePasswordChar As Boolean, startPosition As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool ignorePasswordChar, int startPosition, int length);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool * int * int -&gt; string" Usage="maskedTextProvider.ToString (ignorePasswordChar, startPosition, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ignorePasswordChar" Type="System.Boolean" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ignorePasswordChar"><span data-ttu-id="2d5f1-703"><see langword="true" />Aby zwrócić rzeczywiste znaki edytowalne; w przeciwnym <see langword="false" /> razie, aby wskazać <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> , że właściwość ma być honorna.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-703"><see langword="true" /> to return the actual editable characters; otherwise, <see langword="false" /> to indicate that the <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> property is to be honored.</span></span></param>
        <param name="startPosition"><span data-ttu-id="2d5f1-704">Pozycja od zera w sformatowanym ciągu, w którym rozpoczyna się wyjście.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-704">The zero-based position in the formatted string where the output begins.</span></span></param>
        <param name="length"><span data-ttu-id="2d5f1-705">Liczba znaków do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-705">The number of characters to return.</span></span></param>
        <summary><span data-ttu-id="2d5f1-706">Zwraca podciąg ciągu sformatowanego, opcjonalnie dołączając znaki hasła.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-706">Returns a substring of the formatted string, optionally including password characters.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-707">Jeśli to się powiedzie, podciąg sformatowanego <see cref="T:System.String" />, który obejmuje literały, polecenia i opcjonalnie znaki hasła; <see cref="F:System.String.Empty" /> w przeciwnym razie ciąg.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-707">If successful, a substring of the formatted <see cref="T:System.String" />, which includes literals, prompts, and optionally password characters; otherwise the <see cref="F:System.String.Empty" /> string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-708">Ta wersja przeciążonej <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> metody zwraca podciąg sformatowanego ciągu, rozpoczynając od pozycji `startPos` i uwzględniając kolejną liczbę znaków określoną przez `length` parametr.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-708">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter.</span></span> <span data-ttu-id="2d5f1-709">Zwrócony ciąg zawiera polecenia i literały odpowiednio do bieżących wartości <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> właściwości i. <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A></span><span class="sxs-lookup"><span data-stu-id="2d5f1-709">The returned string includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively.</span></span> <span data-ttu-id="2d5f1-710">Jeśli parametr jest `true`, zwróci oryginalne znaki wejściowe, ignorując wartość <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> właściwości. `ignorePasswordChar`</span><span class="sxs-lookup"><span data-stu-id="2d5f1-710">If the `ignorePasswordChar` parameter is `true`, it will return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span> <span data-ttu-id="2d5f1-711">Jeśli ten parametr ma `false`wartość, użyje znaku hasła, aby zaciemnienie edytowalnych danych wejściowych użytkownika <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> , jeśli właściwość jest ustawiona na inną niż `null`.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-711">If this parameter is `false`, it will use the password character to obscure editable user input if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a value other than `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2d5f1-712">Ponieważ ta metoda potencjalnie ujawnia informacje, które są zwykle chronione w interfejsie użytkownika za pomocą znaków hasła, powinno być używane z największą ostrożnością, aby uniknąć przypadkowego ujawnienia poufnych danych użytkownika.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-712">Because this method potentially reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 <span data-ttu-id="2d5f1-713"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A>wykonuje następujące akcje w przypadku niezgodności w parametrach wejściowych:</span><span class="sxs-lookup"><span data-stu-id="2d5f1-713"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:</span></span>  
  
-   <span data-ttu-id="2d5f1-714">Jeśli `startPos` jest mniejsza od zera, pozycja początkowa jest ustawiona na zero.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-714">If `startPos` is less than zero, the starting position is set to zero.</span></span>  
  
-   <span data-ttu-id="2d5f1-715">Jeśli `startPos` jest większa lub równa wartości rzeczywistej <xref:System.ComponentModel.MaskedTextProvider.Length%2A> sformatowanego ciągu, <xref:System.String.Empty> zwracany jest ciąg.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-715">If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned.</span></span>  
  
-   <span data-ttu-id="2d5f1-716">Jeśli `length` jest większa niż pozostała liczba znaków poza pozycją początkową, zwracane są tylko pozostałe znaki.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-716">If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned.</span></span>  
  
-   <span data-ttu-id="2d5f1-717">Jeśli `length` jest mniejsza lub równa zero <xref:System.String.Empty> , zwracany jest ciąg.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-717">If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool includePrompt, bool includeLiterals, int startPosition, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool includePrompt, bool includeLiterals, int32 startPosition, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (includePrompt As Boolean, includeLiterals As Boolean, startPosition As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool includePrompt, bool includeLiterals, int startPosition, int length);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool * bool * int * int -&gt; string" Usage="maskedTextProvider.ToString (includePrompt, includeLiterals, startPosition, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrompt" Type="System.Boolean" />
        <Parameter Name="includeLiterals" Type="System.Boolean" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="includePrompt"><span data-ttu-id="2d5f1-718"><see langword="true" />Aby uwzględnić znaki monitu w zwracanym ciągu; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-718"><see langword="true" /> to include prompt characters in the return string; otherwise, <see langword="false" />.</span></span></param>
        <param name="includeLiterals"><span data-ttu-id="2d5f1-719"><see langword="true" />Aby uwzględnić znaki literału w zwracanym ciągu; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-719"><see langword="true" /> to include literal characters in the return string; otherwise, <see langword="false" />.</span></span></param>
        <param name="startPosition"><span data-ttu-id="2d5f1-720">Pozycja od zera w sformatowanym ciągu, w którym rozpoczyna się wyjście.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-720">The zero-based position in the formatted string where the output begins.</span></span></param>
        <param name="length"><span data-ttu-id="2d5f1-721">Liczba znaków do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-721">The number of characters to return.</span></span></param>
        <summary><span data-ttu-id="2d5f1-722">Zwraca podciąg sformatowanego ciągu, opcjonalnie uwzględniając monit i znaki literału.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-722">Returns a substring of the formatted string, optionally including prompt and literal characters.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-723">Jeśli to się powiedzie, podciąg sformatowanego <see cref="T:System.String" />, który zawiera wszystkie przypisane wartości znaków i opcjonalnie zawiera literały i znaki tekstowe; <see cref="F:System.String.Empty" /> w przeciwnym razie ciąg.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-723">If successful, a substring of the formatted <see cref="T:System.String" />, which includes all the assigned character values and optionally includes literals and prompts; otherwise the <see cref="F:System.String.Empty" /> string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-724">Ta wersja przeciążonej <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> metody zwraca podciąg sformatowanego ciągu, rozpoczynając od pozycji `startPos` i uwzględniając kolejną liczbę znaków określoną przez `length` parametr.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-724">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter.</span></span> <span data-ttu-id="2d5f1-725">Ciąg zwracany zawiera polecenia i literały odpowiednio do wartości `IncludePrompt` parametrów i. `IncludeLiterals`</span><span class="sxs-lookup"><span data-stu-id="2d5f1-725">The return string includes prompts and literals according to the values of the `IncludePrompt` and `IncludeLiterals` parameters, respectively.</span></span> <span data-ttu-id="2d5f1-726">Zwróć uwagę, że te parametry zastępują wartości <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-726">Notice that these parameters override the values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A><xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties.</span></span> <span data-ttu-id="2d5f1-727">Ta metoda zawsze zwróci oryginalne znaki wejściowe, ignorując wartość <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-727">This method will always return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2d5f1-728">Ponieważ ta metoda ujawnia informacje, które są zwykle chronione w interfejsie użytkownika przez znaki hasła, powinno być używane z największą ostrożnością, aby uniknąć przypadkowego ujawnienia poufnych danych użytkownika.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-728">Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 <span data-ttu-id="2d5f1-729"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A>wykonuje następujące akcje w przypadku niezgodności w parametrach wejściowych:</span><span class="sxs-lookup"><span data-stu-id="2d5f1-729"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:</span></span>  
  
-   <span data-ttu-id="2d5f1-730">Jeśli `startPos` jest mniejsza od zera, pozycja początkowa jest ustawiona na zero.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-730">If `startPos` is less than zero, the starting position is set to zero.</span></span>  
  
-   <span data-ttu-id="2d5f1-731">Jeśli `startPos` jest większa lub równa wartości rzeczywistej <xref:System.ComponentModel.MaskedTextProvider.Length%2A> sformatowanego ciągu, <xref:System.String.Empty> zwracany jest ciąg.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-731">If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned.</span></span>  
  
-   <span data-ttu-id="2d5f1-732">Jeśli `length` jest większa niż pozostała liczba znaków poza pozycją początkową, zwracane są tylko pozostałe znaki.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-732">If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned.</span></span>  
  
-   <span data-ttu-id="2d5f1-733">Jeśli `length` jest mniejsza lub równa zero <xref:System.String.Empty> , zwracany jest ciąg.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-733">If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool ignorePasswordChar, bool includePrompt, bool includeLiterals, int startPosition, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool ignorePasswordChar, bool includePrompt, bool includeLiterals, int32 startPosition, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (ignorePasswordChar As Boolean, includePrompt As Boolean, includeLiterals As Boolean, startPosition As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool ignorePasswordChar, bool includePrompt, bool includeLiterals, int startPosition, int length);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool * bool * bool * int * int -&gt; string" Usage="maskedTextProvider.ToString (ignorePasswordChar, includePrompt, includeLiterals, startPosition, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ignorePasswordChar" Type="System.Boolean" />
        <Parameter Name="includePrompt" Type="System.Boolean" />
        <Parameter Name="includeLiterals" Type="System.Boolean" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ignorePasswordChar"><span data-ttu-id="2d5f1-734"><see langword="true" />Aby zwrócić rzeczywiste znaki edytowalne; w przeciwnym <see langword="false" /> razie, aby wskazać <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> , że właściwość ma być honorna.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-734"><see langword="true" /> to return the actual editable characters; otherwise, <see langword="false" /> to indicate that the <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> property is to be honored.</span></span></param>
        <param name="includePrompt"><span data-ttu-id="2d5f1-735"><see langword="true" />Aby uwzględnić znaki monitu w zwracanym ciągu; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-735"><see langword="true" /> to include prompt characters in the return string; otherwise, <see langword="false" />.</span></span></param>
        <param name="includeLiterals"><span data-ttu-id="2d5f1-736"><see langword="true" />Aby zwrócić znaki literału w zwracanym ciągu; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-736"><see langword="true" /> to return literal characters in the return string; otherwise, <see langword="false" />.</span></span></param>
        <param name="startPosition"><span data-ttu-id="2d5f1-737">Pozycja od zera w sformatowanym ciągu, w którym rozpoczyna się wyjście.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-737">The zero-based position in the formatted string where the output begins.</span></span></param>
        <param name="length"><span data-ttu-id="2d5f1-738">Liczba znaków do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-738">The number of characters to return.</span></span></param>
        <summary><span data-ttu-id="2d5f1-739">Zwraca podciąg sformatowanego ciągu, opcjonalnie uwzględniając znaki monitu, literału i hasła.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-739">Returns a substring of the formatted string, optionally including prompt, literal, and password characters.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-740">Jeśli to się powiedzie, podciąg sformatowanego <see cref="T:System.String" />, który zawiera wszystkie przypisane wartości znaków i opcjonalnie zawiera literały, polecenia i hasła; <see cref="F:System.String.Empty" /> w przeciwnym razie ciąg.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-740">If successful, a substring of the formatted <see cref="T:System.String" />, which includes all the assigned character values and optionally includes literals, prompts, and password characters; otherwise the <see cref="F:System.String.Empty" /> string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-741">Ta wersja przeciążonej <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> metody zwraca podciąg sformatowanego ciągu, rozpoczynając od pozycji `startPos` i uwzględniając kolejną liczbę znaków określoną przez `length` parametr.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-741">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter.</span></span> <span data-ttu-id="2d5f1-742">Ciąg zwracany zawiera polecenia i literały odpowiednio do wartości `IncludePrompt` parametrów i. `IncludeLiterals`</span><span class="sxs-lookup"><span data-stu-id="2d5f1-742">The return string includes prompts and literals according to the values of the `IncludePrompt` and `IncludeLiterals` parameters, respectively.</span></span> <span data-ttu-id="2d5f1-743">Zwróć uwagę, że te parametry zastępują wartości <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> właściwości <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> i.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-743">Notice that these parameters override the values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and  <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties.</span></span> <span data-ttu-id="2d5f1-744">Jeśli parametr jest `true`, zwróci oryginalne znaki wejściowe, ignorując wartość <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> właściwości. `ignorePasswordChar`</span><span class="sxs-lookup"><span data-stu-id="2d5f1-744">If the `ignorePasswordChar` parameter is `true`, it will return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span> <span data-ttu-id="2d5f1-745">Jeśli ten parametr ma `false`wartość, użyje znaku hasła, aby zaciemnienie edytowalnych danych wejściowych użytkownika <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> , jeśli właściwość jest ustawiona na inną niż `null`.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-745">If this parameter is `false`, it will use the password character to obscure editable user input if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a value other than `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2d5f1-746">Ponieważ ta metoda potencjalnie ujawnia informacje, które są zwykle chronione w interfejsie użytkownika za pomocą znaków hasła, powinno być używane z największą ostrożnością, aby uniknąć przypadkowego ujawnienia poufnych danych użytkownika.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-746">Because this method potentially reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 <span data-ttu-id="2d5f1-747"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A>wykonuje następujące akcje w przypadku niezgodności w parametrach wejściowych:</span><span class="sxs-lookup"><span data-stu-id="2d5f1-747"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:</span></span>  
  
-   <span data-ttu-id="2d5f1-748">Jeśli `startPos` jest mniejsza od zera, pozycja początkowa jest ustawiona na zero.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-748">If `startPos` is less than zero, the starting position is set to zero.</span></span>  
  
-   <span data-ttu-id="2d5f1-749">Jeśli `startPos` jest większa lub równa wartości rzeczywistej <xref:System.ComponentModel.MaskedTextProvider.Length%2A> sformatowanego ciągu, <xref:System.String.Empty> zwracany jest ciąg.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-749">If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned.</span></span>  
  
-   <span data-ttu-id="2d5f1-750">Jeśli `length` jest większa niż pozostała liczba znaków poza pozycją początkową, zwracane są tylko pozostałe znaki.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-750">If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned.</span></span>  
  
-   <span data-ttu-id="2d5f1-751">Jeśli `length` jest mniejsza lub równa zero <xref:System.String.Empty> , zwracany jest ciąg.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-751">If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="VerifyChar">
      <MemberSignature Language="C#" Value="public bool VerifyChar (char input, int position, out System.ComponentModel.MaskedTextResultHint hint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyChar(char input, int32 position, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; hint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyChar (input As Char, position As Integer, ByRef hint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyChar(char input, int position, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % hint);" />
      <MemberSignature Language="F#" Value="member this.VerifyChar : char * int *  -&gt; bool" Usage="maskedTextProvider.VerifyChar (input, position, hint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="hint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="2d5f1-752"><see cref="T:System.Char" /> Wartość do przetestowania.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-752">The <see cref="T:System.Char" /> value to test.</span></span></param>
        <param name="position"><span data-ttu-id="2d5f1-753">Pozycja w masce, dla której ma zostać przetestowany znak wejściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-753">The position in the mask to test the input character against.</span></span></param>
        <param name="hint"><span data-ttu-id="2d5f1-754">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> , który zwięzłie opisuje wynik operacji.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-754">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span></span> <span data-ttu-id="2d5f1-755">Parametr wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-755">An output parameter.</span></span></param>
        <summary><span data-ttu-id="2d5f1-756">Testuje, czy określony znak można ustawić pomyślnie na określonej pozycji.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-756">Tests whether the specified character could be set successfully at the specified position.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-757"><see langword="true" />Jeśli określony znak jest prawidłowy dla określonej pozycji; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-757"><see langword="true" /> if the specified character is valid for the specified position; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-758">Metoda <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A> sprawdza, czy pojedynczy znak reprezentuje prawidłowe dane wejściowe w podanej pozycji w sformatowanym ciągu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-758">The <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A> method tests whether a single character value represents valid input at the specified position in the formatted string.</span></span> <span data-ttu-id="2d5f1-759">Ta metoda zwróci `false` następujące przyczyny:</span><span class="sxs-lookup"><span data-stu-id="2d5f1-759">This method will return `false` for the following reasons:</span></span>  
  
-   <span data-ttu-id="2d5f1-760">Wartość parametru jest mniejsza od zera lub większa <xref:System.ComponentModel.MaskedTextProvider.Length%2A> od <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>wartości. `pos`</span><span class="sxs-lookup"><span data-stu-id="2d5f1-760">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>.</span></span>  
  
-   <span data-ttu-id="2d5f1-761">Znak `input` nie jest prawidłowym znakiem wejściowym, określonym <xref:System.ComponentModel.MaskedTextProvider.IsValidInputChar%2A> przez metodę.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-761">The character `input` is not a valid input character, as determined by the <xref:System.ComponentModel.MaskedTextProvider.IsValidInputChar%2A> method.</span></span>  
  
-   <span data-ttu-id="2d5f1-762">Element nie `pos`jest zgodny z maską w podanej pozycji. `input`</span><span class="sxs-lookup"><span data-stu-id="2d5f1-762">The `input` is not compatible with the mask element at the specified position, `pos`.</span></span>  
  
 <span data-ttu-id="2d5f1-763">Ostatni warunek <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>może zależeć od bieżącej wartości właściwości, <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>, <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> i <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> .</span><span class="sxs-lookup"><span data-stu-id="2d5f1-763">The last condition may depend on the current value of the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>, <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>, <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> and <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> properties.</span></span>  
  
 <span data-ttu-id="2d5f1-764">Aby przetestować cały ciąg wejściowy dla maski, zamiast tego użyj jednej z <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> metod.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-764">To test an entire input string against the mask, use one of the <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> methods instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="VerifyEscapeChar">
      <MemberSignature Language="C#" Value="public bool VerifyEscapeChar (char input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyEscapeChar(char input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyEscapeChar (input As Char, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyEscapeChar(char input, int position);" />
      <MemberSignature Language="F#" Value="member this.VerifyEscapeChar : char * int -&gt; bool" Usage="maskedTextProvider.VerifyEscapeChar (input, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="2d5f1-765"><see cref="T:System.Char" /> Wartość do przetestowania.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-765">The <see cref="T:System.Char" /> value to test.</span></span></param>
        <param name="position"><span data-ttu-id="2d5f1-766">Pozycja w masce, dla której ma zostać przetestowany znak wejściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-766">The position in the mask to test the input character against.</span></span></param>
        <summary><span data-ttu-id="2d5f1-767">Testuje, czy określony znak zostanie zmieniony na określonej pozycji.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-767">Tests whether the specified character would be escaped at the specified position.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-768"><see langword="true" />Jeśli określony znak zostanie zmieniony na określonej pozycji; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-768"><see langword="true" /> if the specified character would be escaped at the specified position; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-769">Znak jest określany jako *ucieczki* , jeśli jest prawidłowym wejściem, ale nie jest przypisany do tej pozycji w sformatowanym ciągu.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-769">A character is said to be *escaped* if it is valid input, but is not assigned to that position in the formatted string.</span></span> <span data-ttu-id="2d5f1-770">Znaki ucieczki należą do następujących trzech kategorii:</span><span class="sxs-lookup"><span data-stu-id="2d5f1-770">Escaped characters fall into the following three categories:</span></span>  
  
-   <span data-ttu-id="2d5f1-771">Znaki monitu są wyprowadzane, <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> Jeśli właściwość `true`jest.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-771">Prompt characters are escaped if the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> property is `true`.</span></span>  
  
-   <span data-ttu-id="2d5f1-772">Znaki wejściowe są wyprowadzane, jeśli mają taką samą wartość jak literał w masce, i jeśli <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> właściwość jest. `true`</span><span class="sxs-lookup"><span data-stu-id="2d5f1-772">Input characters are escaped if they have the same value as the literal in the mask, and if the <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> property is `true`.</span></span>  
  
-   <span data-ttu-id="2d5f1-773">W przypadku, <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> gdy właściwość jest `true`.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-773">Space characters are escaped if the <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="2d5f1-774">Metoda <xref:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar%2A> zostanie również zwrócona `false` , jeśli `pos` parametr <xref:System.ComponentModel.MaskedTextProvider.Length%2A> jest mniejszy <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>od zera lub większy od.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-774">The <xref:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar%2A> method will also return `false` if the `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
      </Docs>
    </Member>
    <MemberGroup MemberName="VerifyString">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d5f1-775">Testuje, czy określony ciąg można ustawić pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-775">Tests whether the specified string could be set successfully.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="VerifyString">
      <MemberSignature Language="C#" Value="public bool VerifyString (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyString(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.VerifyString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyString (input As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyString(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.VerifyString : string -&gt; bool" Usage="maskedTextProvider.VerifyString input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="2d5f1-776"><see cref="T:System.String" /> Wartość do przetestowania.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-776">The <see cref="T:System.String" /> value to test.</span></span></param>
        <summary><span data-ttu-id="2d5f1-777">Testuje, czy określony ciąg można ustawić pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-777">Tests whether the specified string could be set successfully.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-778"><see langword="true" />Jeśli określony ciąg reprezentuje prawidłowe dane wejściowe; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-778"><see langword="true" /> if the specified string represents valid input; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-779">Stosuje ciąg z maską bez zmieniania sformatowanego ciągu, aby `input` sprawdzić, czy będzie on prawidłowy w odpowiedniej <xref:System.ComponentModel.MaskedTextProvider.Set%2A> operacji. `input` <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A></span><span class="sxs-lookup"><span data-stu-id="2d5f1-779">The <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> applies the `input` string against the mask, without actually changing the formatted string, to test whether `input` would be valid in a corresponding <xref:System.ComponentModel.MaskedTextProvider.Set%2A> operation.</span></span> <span data-ttu-id="2d5f1-780">Ta metoda zwraca również `true` wartość `null` , jeśli dane wejściowe mają wartość lub ma zerową długość.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-780">This method also returns `true` if input is `null` or has zero length.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
      </Docs>
    </Member>
    <Member MemberName="VerifyString">
      <MemberSignature Language="C#" Value="public bool VerifyString (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyString(string input, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyString (input As String, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyString(System::String ^ input, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.VerifyString : string *  *  -&gt; bool" Usage="maskedTextProvider.VerifyString (input, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="2d5f1-781"><see cref="T:System.String" /> Wartość do przetestowania.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-781">The <see cref="T:System.String" /> value to test.</span></span></param>
        <param name="testPosition"><span data-ttu-id="2d5f1-782">Jeśli to się powiedzie, pozycja od zera ostatniego znaku rzeczywiście przetestowana; w przeciwnym razie, pierwsze miejsce, w którym test zakończył się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-782">If successful, the zero-based position of the last character actually tested; otherwise, the first position where the test failed.</span></span> <span data-ttu-id="2d5f1-783">Parametr wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-783">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="2d5f1-784">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> , który zwięzłie opisuje wynik operacji testowej.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-784">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the test operation.</span></span> <span data-ttu-id="2d5f1-785">Parametr wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-785">An output parameter.</span></span></param>
        <summary><span data-ttu-id="2d5f1-786">Testuje, czy określony ciąg można ustawić pomyślnie, a następnie dane wyjściowe dotyczące pozycji i opisów.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-786">Tests whether the specified string could be set successfully, and then outputs position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="2d5f1-787"><see langword="true" />Jeśli określony ciąg reprezentuje prawidłowe dane wejściowe; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2d5f1-787"><see langword="true" /> if the specified string represents valid input; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5f1-788">Stosuje ciąg z maską bez zmieniania sformatowanego ciągu, aby `input` sprawdzić, czy będzie on prawidłowy w odpowiedniej <xref:System.ComponentModel.MaskedTextProvider.Set%2A> operacji. `input` <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A></span><span class="sxs-lookup"><span data-stu-id="2d5f1-788">The <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> applies the `input` string against the mask, without actually changing the formatted string, to test whether `input` would be valid in a corresponding <xref:System.ComponentModel.MaskedTextProvider.Set%2A> operation.</span></span> <span data-ttu-id="2d5f1-789">Ta metoda zwraca również `true` wartość `null` , jeśli dane wejściowe mają wartość lub ma zerową długość.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-789">This method also returns `true` if input is `null` or has zero length.</span></span>  
  
 <span data-ttu-id="2d5f1-790">Ta wersja programu <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> zawiera dwa dodatkowe parametry wyjściowe umożliwiające przekazanie większej ilości informacji na temat operacji.</span><span class="sxs-lookup"><span data-stu-id="2d5f1-790">This version of <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> provides two additional output parameters to convey more information about the operation of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
      </Docs>
    </Member>
  </Members>
</Type>
