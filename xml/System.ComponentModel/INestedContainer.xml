<Type Name="INestedContainer" FullName="System.ComponentModel.INestedContainer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7d9fab358cba335e216c768e3199b45a1530ac4a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69346943" /></Metadata><TypeSignature Language="C#" Value="public interface INestedContainer : IDisposable, System.ComponentModel.IContainer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INestedContainer implements class System.ComponentModel.IContainer, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.INestedContainer" />
  <TypeSignature Language="VB.NET" Value="Public Interface INestedContainer&#xA;Implements IContainer, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class INestedContainer : IDisposable, System::ComponentModel::IContainer" />
  <TypeSignature Language="F#" Value="type INestedContainer = interface&#xA;    interface IContainer&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Oferuje funkcje dla zagnieżdżonych kontenerów, które logicznie zawierają zero lub więcej innych składników i są własnością składnika nadrzędnego.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Interfejs dodaje koncepcję składnika będącego właścicielem <xref:System.ComponentModel.IContainer> do interfejsu. <xref:System.ComponentModel.INestedContainer> Zagnieżdżony kontener to obiekt, który logicznie, ale niekoniecznie jest wizualny, zawiera zero lub więcej składników podrzędnych i należy do pewnego składnika nadrzędnego. W celu zawierania wizualizacji składnik będący właścicielem jest często innym kontenerem.  
  
 Zagnieżdżone kontenery umożliwiają projektowanie sekcji kontrolki, bez konieczności jawnej serializowanej zmiennej składowej lub niestandardowego serializatora dla każdej kontrolki. Zamiast tego Projektant formularzy zachowuje jeden główny kontener komponentów. Każda lokacja składnika może mieć zagnieżdżony kontener, który zapewnia miejsce do umieszczania dodatkowych składników. Gdy składnik znajduje się w kontenerze zagnieżdżonym, otrzymana nazwa jest kombinacją danej nazwy i jej nazwy składnika będącego właścicielem. Ponadto składniki dodane do kontenera zagnieżdżonego mają pełny dostęp do usług kontenera nadrzędnego, a zagnieżdżony kontener zapewnia takie samo zachowanie elementu nadrzędnego w odniesieniu do dodawania nowych składników. Zagnieżdżony kontener utworzy projektanta dla każdego zawartego w nim składnika, co umożliwia obsługę czasu projektowania. Ponieważ serializowane kodu standardowego nie są zgodne z zagnieżdżonymi kontenerami, te składniki są serializowane tylko w przypadku, gdy ścieżka do nich może zostać uzyskana poprzez przeprowadzenie podzielenia składników w kontenerze podstawowym.  
  
 Kontenery zagnieżdżone można znaleźć, wykonując zapytania dotyczące lokacji składnika dla usług typu <xref:System.ComponentModel.INestedContainer>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.NestedContainer" />
    <altmember cref="T:System.ComponentModel.ContainerFilterService" />
    <altmember cref="M:System.ComponentModel.NestedContainer.GetService(System.Type)" />
  </Docs>
  <Members>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent Owner" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.INestedContainer.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ Owner { System::ComponentModel::IComponent ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.ComponentModel.IComponent" Usage="System.ComponentModel.INestedContainer.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera składnik będący właścicielem dla zagnieżdżonego kontenera.</summary>
        <value>Do <see cref="T:System.ComponentModel.IComponent" /> którego należy kontener zagnieżdżony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Składnik będący właścicielem jest cechą odróżniającą zagnieżdżone kontenery od zwykłych kontenerów.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IComponent" />
        <altmember cref="T:System.ComponentModel.IContainer" />
        <altmember cref="P:System.ComponentModel.NestedContainer.Owner" />
      </Docs>
    </Member>
  </Members>
</Type>
