<Type Name="INestedContainer" FullName="System.ComponentModel.INestedContainer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ff0f65452bcbb199e88e5693fd7dec10ef6cdccf" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63897272" /></Metadata><TypeSignature Language="C#" Value="public interface INestedContainer : IDisposable, System.ComponentModel.IContainer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INestedContainer implements class System.ComponentModel.IContainer, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.INestedContainer" />
  <TypeSignature Language="VB.NET" Value="Public Interface INestedContainer&#xA;Implements IContainer, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class INestedContainer : IDisposable, System::ComponentModel::IContainer" />
  <TypeSignature Language="F#" Value="type INestedContainer = interface&#xA;    interface IContainer&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Oferuje funkcję dla zagnieżdżone kontenery, które logicznie zawiera zero lub więcej składników i są własnością składnika nadrzędnego.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.INestedContainer> Interfejsu dodaje koncepcji będącego składnikiem do <xref:System.ComponentModel.IContainer> interfejsu. Kontener zagnieżdżony jest obiektem, który logicznie, ale nie zawsze wizualnie zawiera zero lub więcej elementów podrzędnych i jest własnością niektóre składnika nadrzędnego. Zawieranie visual składnika będąca właścicielem jest często innego kontenera.  
  
 Zagnieżdżone kontenery zezwala na sekcje formantu, który ma być designable, bez konieczności jawnego członka Zserializowany zmiennej lub niestandardowy serializator dla każdego formantu podrzędnego. Zamiast tego projektanta formularzy utrzymuje jeden kontener główny składników. Każdy składnik lokacji może być zagnieżdżony kontener, który zapewnia miejsce do umieszczenia dodatkowe składniki. Składnik jest zlokalizowany w kontenerze zagnieżdżonych, nazwa, otrzymywanych jest kombinacją jego imię i nazwę jej właścicielem składnika. Ponadto składniki dodane do kontenera zagnieżdżone mają pełny dostęp do usług kontenera nadrzędnego, a zagnieżdżone kontener zawiera takie samo zachowanie elementu nadrzędnego w odniesieniu do dodawania nowych składników. Spowoduje to utworzenie zagnieżdżonych kontenerów projektanta dla każdego składnika, które zawiera, umożliwiając stosowanie obsługi w czasie projektowania. Funkcja serializatory standardowy kod na zagnieżdżone kontenery, te składniki są serializowane tylko, jeśli ścieżka do nich można uzyskać przez zalet składników w podstawowym kontenerem.  
  
 Zagnieżdżone kontenery można znaleźć, badając składnika witryny dla usług o typie <xref:System.ComponentModel.INestedContainer>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.NestedContainer" />
    <altmember cref="T:System.ComponentModel.ContainerFilterService" />
    <altmember cref="M:System.ComponentModel.NestedContainer.GetService(System.Type)" />
  </Docs>
  <Members>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent Owner" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.INestedContainer.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ Owner { System::ComponentModel::IComponent ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.ComponentModel.IComponent" Usage="System.ComponentModel.INestedContainer.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera składnik będący właścicielem dla zagnieżdżonych kontenera.</summary>
        <value><see cref="T:System.ComponentModel.IComponent" /> , Który jest właścicielem zagnieżdżonych kontenerów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Będący właścicielem składnik to cecha odróżniające zagnieżdżone kontenery z zwykłych kontenerów.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IComponent" />
        <altmember cref="T:System.ComponentModel.IContainer" />
        <altmember cref="P:System.ComponentModel.NestedContainer.Owner" />
      </Docs>
    </Member>
  </Members>
</Type>