<Type Name="ReadOnlyAttribute" FullName="System.ComponentModel.ReadOnlyAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e0fe9619d6da9b81c370913f73b22d483943c7e8" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69345909" /></Metadata><TypeSignature Language="C#" Value="public sealed class ReadOnlyAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ReadOnlyAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ReadOnlyAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ReadOnlyAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReadOnlyAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ReadOnlyAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-3.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.All)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c9f4d-101">Określa, czy właściwość, z którą jest powiązany ten atrybut, jest tylko do odczytu, czy do odczytu i zapisu.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-101">Specifies whether the property this attribute is bound to is read-only or read/write.</span></span> <span data-ttu-id="c9f4d-102">Ta klasa nie może być dziedziczona</span><span class="sxs-lookup"><span data-stu-id="c9f4d-102">This class cannot be inherited</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9f4d-103">Elementy członkowskie, które są oznaczone <xref:System.ComponentModel.ReadOnlyAttribute> za pomocą `true` zestawu lub nie mają `Set` metody, nie mogą być zmienione.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-103">Members that are marked with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `true` or that do not have a `Set` method cannot be changed.</span></span> <span data-ttu-id="c9f4d-104">Elementy członkowskie, które nie mają tego atrybutu lub są oznaczone za pomocą <xref:System.ComponentModel.ReadOnlyAttribute> zestawu jako `false` są do odczytu/zapisu i mogą być zmieniane.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-104">Members that do not have this attribute or that are marked with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `false` are read/write, and they can be changed.</span></span> <span data-ttu-id="c9f4d-105">Wartość domyślna to <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-105">The default is <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c9f4d-106"><xref:System.ComponentModel.PropertyDescriptor> Klasa wymusza<xref:System.ComponentModel.ReadOnlyAttribute> w środowisku projektowym i w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-106">The <xref:System.ComponentModel.PropertyDescriptor> class enforces the <xref:System.ComponentModel.ReadOnlyAttribute> in the design environment and at run time.</span></span> <span data-ttu-id="c9f4d-107">Po oznaczeniu właściwości <xref:System.ComponentModel.ReadOnlyAttribute> zestawem do `true`, wartość tego atrybutu jest ustawiana na stałą składową <xref:System.ComponentModel.ReadOnlyAttribute.Yes>.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-107">When you mark a property with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.ReadOnlyAttribute.Yes>.</span></span> <span data-ttu-id="c9f4d-108">Dla właściwości oznaczonej <xref:System.ComponentModel.ReadOnlyAttribute> ustawieniem na `false`, wartość jest <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-108">For a property marked with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `false`, the value is <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span></span> <span data-ttu-id="c9f4d-109">W związku z tym, jeśli chcesz sprawdzić wartość tego atrybutu w kodzie, musisz określić atrybut jako <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType> lub. <xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c9f4d-109">Therefore, when you want to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType> or <xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="c9f4d-110">Aby uzyskać więcej informacji, zobacz [atrybuty](~/docs/standard/attributes/index.md).</span><span class="sxs-lookup"><span data-stu-id="c9f4d-110">For more information, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9f4d-111">Poniższy przykład kodu oznacza właściwość jako tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-111">The following code example marks a property as read-only.</span></span>  
  
 [!code-cpp[Classic ReadOnlyAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ReadOnlyAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic ReadOnlyAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c9f4d-112">Następny przykład kodu pokazuje, jak sprawdzić wartość <xref:System.ComponentModel.ReadOnlyAttribute> dla. `MyProperty`</span><span class="sxs-lookup"><span data-stu-id="c9f4d-112">The next code example shows how to check the value of the <xref:System.ComponentModel.ReadOnlyAttribute> for `MyProperty`.</span></span> <span data-ttu-id="c9f4d-113">Najpierw kod pobiera <xref:System.ComponentModel.PropertyDescriptorCollection> wszystkie właściwości obiektu.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-113">First, the code gets a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object.</span></span> <span data-ttu-id="c9f4d-114">Następnie indeksuje do, <xref:System.ComponentModel.PropertyDescriptorCollection> Aby uzyskać. `MyProperty`</span><span class="sxs-lookup"><span data-stu-id="c9f4d-114">Next, it indexes into the <xref:System.ComponentModel.PropertyDescriptorCollection> to get `MyProperty`.</span></span> <span data-ttu-id="c9f4d-115">Następnie zwraca atrybuty dla tej właściwości i zapisuje je w zmiennej atrybutów.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-115">Then it returns the attributes for this property and saves them in the attributes variable.</span></span>  
  
 <span data-ttu-id="c9f4d-116">W przykładzie przedstawiono dwa różne sposoby sprawdzania wartości <xref:System.ComponentModel.ReadOnlyAttribute>.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-116">The example presents two different ways of checking the value of the <xref:System.ComponentModel.ReadOnlyAttribute>.</span></span> <span data-ttu-id="c9f4d-117">W drugim fragmencie kodu, przykład wywołuje <xref:System.ComponentModel.ReadOnlyAttribute.Equals%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-117">In the second code fragment, the example calls the <xref:System.ComponentModel.ReadOnlyAttribute.Equals%2A> method.</span></span> <span data-ttu-id="c9f4d-118">W ostatnim fragmencie kodu, w przykładzie używa <xref:System.ComponentModel.ReadOnlyAttribute.IsReadOnly%2A> właściwości do sprawdzenia wartości.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-118">In the last code fragment, the example uses the <xref:System.ComponentModel.ReadOnlyAttribute.IsReadOnly%2A> property to check the value.</span></span>  
  
 [!code-cpp[Classic ReadOnlyAttribute Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/CPP/source.cpp#2)]
 [!code-csharp[Classic ReadOnlyAttribute Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/CS/source.cs#2)]
 [!code-vb[Classic ReadOnlyAttribute Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/VB/source.vb#2)]  
  
 <span data-ttu-id="c9f4d-119">Jeśli klasa została oznaczona przy użyciu <xref:System.ComponentModel.ReadOnlyAttribute>, użyj następującego przykładowego kodu, aby sprawdzić wartość.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-119">If you marked a class with the <xref:System.ComponentModel.ReadOnlyAttribute>, use the following code example to check the value.</span></span>  
  
 [!code-cpp[Classic ReadOnlyAttribute Example#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/CPP/source.cpp#3)]
 [!code-csharp[Classic ReadOnlyAttribute Example#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/CS/source.cs#3)]
 [!code-vb[Classic ReadOnlyAttribute Example#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/VB/source.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
    <altmember cref="T:System.ComponentModel.AttributeCollection" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReadOnlyAttribute (bool isReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool isReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ReadOnlyAttribute.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (isReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReadOnlyAttribute(bool isReadOnly);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.ReadOnlyAttribute : bool -&gt; System.ComponentModel.ReadOnlyAttribute" Usage="new System.ComponentModel.ReadOnlyAttribute isReadOnly" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="isReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isReadOnly"><span data-ttu-id="c9f4d-120"><see langword="true" />Aby pokazać, że właściwość, z którą jest powiązany ten atrybut, jest tylko do odczytu; <see langword="false" /> , aby pokazać, że właściwość jest odczytywana/zapisu.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-120"><see langword="true" /> to show that the property this attribute is bound to is read-only; <see langword="false" /> to show that the property is read/write.</span></span></param>
        <summary><span data-ttu-id="c9f4d-121">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.ReadOnlyAttribute" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-121">Initializes a new instance of the <see cref="T:System.ComponentModel.ReadOnlyAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9f4d-122">Elementy członkowskie, które są oznaczone <xref:System.ComponentModel.ReadOnlyAttribute> za pomocą `true` zestawu lub nie mają `Set` metody, nie mogą być zmienione.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-122">Members that are marked with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `true` or that do not have a `Set` method cannot be changed.</span></span> <span data-ttu-id="c9f4d-123">Elementy członkowskie, które nie mają tego atrybutu lub są oznaczone za pomocą <xref:System.ComponentModel.ReadOnlyAttribute> zestawu jako `false` są do odczytu/zapisu i mogą być zmieniane.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-123">Members that do not have this attribute or that are marked with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `false` are read/write, and they can be changed.</span></span> <span data-ttu-id="c9f4d-124">Wartość domyślna to <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-124">The default is <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9f4d-125">Po oznaczeniu właściwości <xref:System.ComponentModel.ReadOnlyAttribute> zestawem do `true`, wartość tego atrybutu jest ustawiana na stałą składową <xref:System.ComponentModel.ReadOnlyAttribute.Yes>.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-125">When you mark a property with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.ReadOnlyAttribute.Yes>.</span></span> <span data-ttu-id="c9f4d-126">Dla właściwości oznaczonej <xref:System.ComponentModel.ReadOnlyAttribute> ustawieniem na `false`, wartość jest <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-126">For a property marked with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `false`, the value is <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span></span> <span data-ttu-id="c9f4d-127">W związku z tym, jeśli chcesz sprawdzić wartość tego atrybutu w kodzie, musisz określić atrybut jako <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType> lub. <xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c9f4d-127">Therefore, when you want to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType> or <xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9f4d-128">Poniższy przykład kodu oznacza właściwość jako tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-128">The following code example marks a property as read-only.</span></span> <span data-ttu-id="c9f4d-129">Ten kod tworzy nowy <xref:System.ComponentModel.ReadOnlyAttribute>, ustawia jego wartość na <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType>i wiąże go z właściwością.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-129">This code creates a new <xref:System.ComponentModel.ReadOnlyAttribute>, sets its value to <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType>, and binds it to the property.</span></span>  
  
 [!code-cpp[Classic ReadOnlyAttribute.ReadOnlyAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ReadOnlyAttribute.ReadOnlyAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ReadOnlyAttribute.ReadOnlyAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ReadOnlyAttribute.ReadOnlyAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic ReadOnlyAttribute.ReadOnlyAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ReadOnlyAttribute.ReadOnlyAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ReadOnlyAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.ReadOnlyAttribute Default;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.ReadOnlyAttribute Default" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.ReadOnlyAttribute.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Default As ReadOnlyAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::ComponentModel::ReadOnlyAttribute ^ Default;" />
      <MemberSignature Language="F#" Value=" staticval mutable Default : System.ComponentModel.ReadOnlyAttribute" Usage="System.ComponentModel.ReadOnlyAttribute.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ReadOnlyAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9f4d-130">Określa wartość domyślną dla <see cref="T:System.ComponentModel.ReadOnlyAttribute" />, <see cref="F:System.ComponentModel.ReadOnlyAttribute.No" /> czyli (czyli właściwość, z którą jest powiązany ten atrybut jest odczyt/zapis).</span><span class="sxs-lookup"><span data-stu-id="c9f4d-130">Specifies the default value for the <see cref="T:System.ComponentModel.ReadOnlyAttribute" />, which is <see cref="F:System.ComponentModel.ReadOnlyAttribute.No" /> (that is, the property this attribute is bound to is read/write).</span></span> <span data-ttu-id="c9f4d-131">To <see langword="static" /> pole jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-131">This <see langword="static" /> field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9f4d-132">Po oznaczeniu właściwości tą wartością ten atrybut jest ustawiany na stałą składową <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-132">When you mark a property with this value, this attribute is set to the constant member <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span></span> <span data-ttu-id="c9f4d-133">W związku z tym, jeśli chcesz sprawdzić, czy atrybut jest ustawiony na tę wartość w kodzie, musisz określić atrybut jako <xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-133">Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ReadOnlyAttribute" />
        <altmember cref="F:System.ComponentModel.ReadOnlyAttribute.Yes" />
        <altmember cref="F:System.ComponentModel.ReadOnlyAttribute.No" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ReadOnlyAttribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="readOnlyAttribute.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c9f4d-134">Inny obiekt do porównania.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-134">Another object to compare to.</span></span></param>
        <summary><span data-ttu-id="c9f4d-135">Wskazuje, czy to wystąpienie i określony obiekt są równe.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-135">Indicates whether this instance and a specified object are equal.</span></span></summary>
        <returns><span data-ttu-id="c9f4d-136"><see langword="true" />Jeśli <paramref name="value" /> jest równe temu wystąpieniu; w przeciwnym razie <see langword="false" />,.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-136"><see langword="true" /> if <paramref name="value" /> is equal to this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ReadOnlyAttribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="readOnlyAttribute.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9f4d-137">Zwraca kod skrótu dla tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-137">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="c9f4d-138">Kod skrótu dla bieżącego <see cref="T:System.ComponentModel.ReadOnlyAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-138">A hash code for the current <see cref="T:System.ComponentModel.ReadOnlyAttribute" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultAttribute">
      <MemberSignature Language="C#" Value="public override bool IsDefaultAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefaultAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ReadOnlyAttribute.IsDefaultAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefaultAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefaultAttribute();" />
      <MemberSignature Language="F#" Value="override this.IsDefaultAttribute : unit -&gt; bool" Usage="readOnlyAttribute.IsDefaultAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9f4d-139">Określa, czy ten atrybut jest wartością domyślną.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-139">Determines if this attribute is the default.</span></span></summary>
        <returns><span data-ttu-id="c9f4d-140"><see langword="true" />Jeśli atrybut jest wartością domyślną dla tej klasy atrybutów; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="c9f4d-140"><see langword="true" /> if the attribute is the default value for this attribute class; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ReadOnlyAttribute.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.ComponentModel.ReadOnlyAttribute.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9f4d-141">Pobiera wartość wskazującą, czy właściwość, z którą jest powiązany ten atrybut, jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-141">Gets a value indicating whether the property this attribute is bound to is read-only.</span></span></summary>
        <value><span data-ttu-id="c9f4d-142"><see langword="true" />Jeśli właściwość, z którą jest powiązany ten atrybut, jest tylko do odczytu; <see langword="false" /> Jeśli właściwość jest do odczytu/zapisu.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-142"><see langword="true" /> if the property this attribute is bound to is read-only; <see langword="false" /> if the property is read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c9f4d-143">Poniższy przykład kodu sprawdza, czy `MyProperty` jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-143">The following code example checks to see whether `MyProperty` is read-only.</span></span> <span data-ttu-id="c9f4d-144">Najpierw kod pobiera atrybuty dla `MyProperty` , wykonując następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="c9f4d-144">First, the code gets the attributes for `MyProperty` by doing the following:</span></span>  
  
-   <span data-ttu-id="c9f4d-145"><xref:System.ComponentModel.PropertyDescriptorCollection> Pobieranie z wszystkimi właściwościami obiektu.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-145">Retrieving a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object.</span></span>  
  
-   <span data-ttu-id="c9f4d-146">Indeksowanie do pobrania `MyProperty`. <xref:System.ComponentModel.PropertyDescriptorCollection></span><span class="sxs-lookup"><span data-stu-id="c9f4d-146">Indexing into the <xref:System.ComponentModel.PropertyDescriptorCollection> to get `MyProperty`.</span></span>  
  
-   <span data-ttu-id="c9f4d-147">Zapisywanie atrybutów dla tej właściwości w zmiennej atrybutów.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-147">Saving the attributes for this property in the attributes variable.</span></span>  
  
 <span data-ttu-id="c9f4d-148">Następnie kod jest ustawiany `myAttribute` na wartość <xref:System.ComponentModel.ReadOnlyAttribute> w <xref:System.ComponentModel.AttributeCollection> i sprawdza, czy właściwość jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-148">Then the code sets `myAttribute` to the value of the <xref:System.ComponentModel.ReadOnlyAttribute> in the <xref:System.ComponentModel.AttributeCollection> and checks whether the property is read-only.</span></span>  
  
 [!code-cpp[Classic ReadOnlyAttribute.IsReadOnly Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ReadOnlyAttribute.IsReadOnly Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ReadOnlyAttribute.IsReadOnly Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ReadOnlyAttribute.IsReadOnly Example/CS/source.cs#1)]
 [!code-vb[Classic ReadOnlyAttribute.IsReadOnly Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ReadOnlyAttribute.IsReadOnly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ReadOnlyAttribute" />
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.AttributeCollection" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
      </Docs>
    </Member>
    <Member MemberName="No">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.ReadOnlyAttribute No;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.ReadOnlyAttribute No" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.ReadOnlyAttribute.No" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly No As ReadOnlyAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::ComponentModel::ReadOnlyAttribute ^ No;" />
      <MemberSignature Language="F#" Value=" staticval mutable No : System.ComponentModel.ReadOnlyAttribute" Usage="System.ComponentModel.ReadOnlyAttribute.No" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ReadOnlyAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9f4d-149">Określa, że właściwość, z którą jest powiązany ten atrybut jest odczytywany/zapisu i można ją modyfikować.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-149">Specifies that the property this attribute is bound to is read/write and can be modified.</span></span> <span data-ttu-id="c9f4d-150">To <see langword="static" /> pole jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-150">This <see langword="static" /> field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9f4d-151">To pole jest ustawieniem domyślnym dla tego atrybutu.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-151">This field is the default setting for this attribute.</span></span>  
  
 <span data-ttu-id="c9f4d-152">Po oznaczeniu właściwości <xref:System.ComponentModel.ReadOnlyAttribute> zestawem do `false`, wartość tego atrybutu jest ustawiana na stałą składową <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-152">When you mark a property with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `false`, the value of this attribute is set to the constant member <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span></span> <span data-ttu-id="c9f4d-153">W związku z tym, jeśli chcesz sprawdzić, czy atrybut jest ustawiony na tę wartość w kodzie, musisz określić atrybut jako <xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-153">Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ReadOnlyAttribute" />
        <altmember cref="F:System.ComponentModel.ReadOnlyAttribute.Yes" />
      </Docs>
    </Member>
    <Member MemberName="Yes">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.ReadOnlyAttribute Yes;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.ReadOnlyAttribute Yes" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.ReadOnlyAttribute.Yes" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Yes As ReadOnlyAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::ComponentModel::ReadOnlyAttribute ^ Yes;" />
      <MemberSignature Language="F#" Value=" staticval mutable Yes : System.ComponentModel.ReadOnlyAttribute" Usage="System.ComponentModel.ReadOnlyAttribute.Yes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ReadOnlyAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9f4d-154">Określa, że właściwość, z którą jest powiązany ten atrybut, jest tylko do odczytu i nie można jej modyfikować w Eksploratorze serwera.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-154">Specifies that the property this attribute is bound to is read-only and cannot be modified in the server explorer.</span></span> <span data-ttu-id="c9f4d-155">To <see langword="static" /> pole jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-155">This <see langword="static" /> field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9f4d-156">Po oznaczeniu właściwości <xref:System.ComponentModel.ReadOnlyAttribute> zestawem do `true`, wartość tego atrybutu jest ustawiana na stałą składową <xref:System.ComponentModel.ReadOnlyAttribute.Yes>.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-156">When you mark a property with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.ReadOnlyAttribute.Yes>.</span></span> <span data-ttu-id="c9f4d-157">W związku z tym, jeśli chcesz sprawdzić, czy atrybut jest ustawiony na tę wartość w kodzie, musisz określić atrybut jako <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c9f4d-157">Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ReadOnlyAttribute" />
        <altmember cref="F:System.ComponentModel.ReadOnlyAttribute.No" />
      </Docs>
    </Member>
  </Members>
</Type>
