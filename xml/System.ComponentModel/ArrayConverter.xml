<Type Name="ArrayConverter" FullName="System.ComponentModel.ArrayConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="826bb3e0c1aeb7d5094516e5e9ace021d632d7a9" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30440178" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ArrayConverter : System.ComponentModel.CollectionConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ArrayConverter extends System.ComponentModel.CollectionConverter" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ArrayConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class ArrayConverter&#xA;Inherits CollectionConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ArrayConverter : System::ComponentModel::CollectionConverter" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CollectionConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia konwertera typów, aby przekonwertować <see cref="T:System.Array" /> do i z różnych innych reprezentacje obiektów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat konwertery typu, zobacz <xref:System.ComponentModel.TypeConverter> klasa podstawowa i [porady: implementacji konwertera typów](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).  
  
> [!NOTE]
>  Nigdy nie należy tworzyć wystąpienia <xref:System.ComponentModel.ArrayConverter> klasy. Zamiast tego wywołać <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> metody <xref:System.ComponentModel.TypeDescriptor> klasy. Aby uzyskać więcej informacji, zobacz przykłady w <xref:System.ComponentModel.TypeConverter> klasy podstawowej.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArrayConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ArrayConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArrayConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.ArrayConverter" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ArrayConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</param>
        <param name="culture">Kultura, do którego <c>wartość</c> zostanie przekonwertowany.</param>
        <param name="value">
          <see cref="T:System.Object" /> Do przekonwertowania.</param>
        <param name="destinationType">
          <see cref="T:System.Type" /> Można przekonwertować wartości na.</param>
        <summary>Konwertuje obiekt podanej wartości na typ docelowy.</summary>
        <returns>
          <see cref="T:System.Object" /> Reprezentujący wartość przekonwertowana.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konwerter można przekonwertować na ciąg tablicy.  
  
 `context` Parametru można wyodrębnić dodatkowe informacje o środowisku konwerter jest wywoływany z. Może to być `null`, dlatego należy zawsze sprawdzić. Ponadto może zwrócić właściwości obiektu context `null`.  
  
> [!NOTE]
>  Wynik przekonwertowanego będą wyświetlane w przeglądarce właściwości. Na przykład, jeśli tablicy znaków są konwertowane na ciąg, będzie wyświetlana jako `char[] array`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="destinationType" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Nie można wykonać konwersji.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ArrayConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</param>
        <param name="value">
          <see cref="T:System.Object" /> Określająca typ tablicy można pobrać właściwości.</param>
        <param name="attributes">Tablica typu <see cref="T:System.Attribute" /> który będzie używany jako filtr.</param>
        <summary>Pobiera kolekcję właściwości dla typu tablicy określona przez parametr wartości.</summary>
        <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> z właściwościami, które są dostępne dla tablicy lub <see langword="null" /> , jeśli nie ma żadnych właściwości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `context` Parametru można wyodrębnić dodatkowe informacje o środowisku konwerter jest wywoływany z. Może to być `null`, dlatego należy zawsze sprawdzić. Ponadto może zwrócić właściwości obiektu context `null`.  
  
 Tablica atrybutów będzie służyć do filtrowania tablicy. `attributes` Parametr mogą określać różnych <xref:System.Type> i <xref:System.Attribute> obiektów. Filtrowanie jest definiowana za pomocą następujących reguł:  
  
-   A <xref:System.Type> będzie traktowany jako symbolu wieloznacznego, będzie odpowiadała dowolnej właściwości, która ma <xref:System.Type> w jego zestaw atrybutów.  
  
-   Jeśli nie ma właściwości <xref:System.Attribute> do tej samej klasy właściwość nie będą uwzględniane w zwróconej tablicy.  
  
-   Jeśli ten atrybut jest wystąpieniem <xref:System.Attribute>, właściwość musi być dokładnego dopasowania lub jej nie będą uwzględniane w tablicy zwracane.  
  
-   Jeśli <xref:System.Attribute> zostało określone wystąpienie i jest właściwością domyślną, zostanie uwzględniona w zwróconej tablicy nawet jeśli żadne wystąpienie elementu <xref:System.Attribute> we właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public override bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ArrayConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPropertiesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetPropertiesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</param>
        <summary>Pobiera wartość wskazującą, czy ten obiekt obsługuje właściwości.</summary>
        <returns>
          <see langword="true" /> Ponieważ <see cref="M:System.ComponentModel.ArrayConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" /> powinna być wywoływana, aby znaleźć właściwości tego obiektu. Ta metoda nie zwraca <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `context` Parametru można wyodrębnić dodatkowe informacje o środowisku konwerter jest wywoływany z. Może to być `null`, dlatego należy zawsze sprawdzić. Ponadto może zwrócić właściwości obiektu context `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>