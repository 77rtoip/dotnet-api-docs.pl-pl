<Type Name="PropertyDescriptor" FullName="System.ComponentModel.PropertyDescriptor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="35d7ebde15030c1e31d18a34bcc6ab5cabe6c767" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36701063" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PropertyDescriptor : System.ComponentModel.MemberDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PropertyDescriptor extends System.ComponentModel.MemberDescriptor" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.PropertyDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PropertyDescriptor&#xA;Inherits MemberDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyDescriptor abstract : System::ComponentModel::MemberDescriptor" />
  <TypeSignature Language="F#" Value="type PropertyDescriptor = class&#xA;    inherit MemberDescriptor" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.MemberDescriptor</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ccc07-101">Udostępnia abstrakcję właściwości dla klasy.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ccc07-101">Provides an abstraction of a property on a class.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc07-102">Opis właściwości składa się z nazwy, jego atrybuty klasy składnika skojarzonego z właściwości i typ właściwości.</span><span class="sxs-lookup"><span data-stu-id="ccc07-102">A description of a property consists of a name, its attributes, the component class that the property is associated with, and the type of the property.</span></span>  
  
 <span data-ttu-id="ccc07-103"><xref:System.ComponentModel.PropertyDescriptor> udostępnia następujące metody i właściwości:</span><span class="sxs-lookup"><span data-stu-id="ccc07-103"><xref:System.ComponentModel.PropertyDescriptor> provides the following properties and methods:</span></span>  
  
-   <span data-ttu-id="ccc07-104"><xref:System.ComponentModel.PropertyDescriptor.Converter%2A> zawiera <xref:System.ComponentModel.TypeConverter> dla tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="ccc07-104"><xref:System.ComponentModel.PropertyDescriptor.Converter%2A> contains the <xref:System.ComponentModel.TypeConverter> for this property.</span></span>  
  
-   <span data-ttu-id="ccc07-105"><xref:System.ComponentModel.PropertyDescriptor.IsLocalizable%2A> Wskazuje, czy ta właściwość powinna być lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="ccc07-105"><xref:System.ComponentModel.PropertyDescriptor.IsLocalizable%2A> indicates whether this property should be localized.</span></span>  
  
-   <span data-ttu-id="ccc07-106"><xref:System.ComponentModel.PropertyDescriptor.GetEditor%2A> Zwraca edytora określonego typu.</span><span class="sxs-lookup"><span data-stu-id="ccc07-106"><xref:System.ComponentModel.PropertyDescriptor.GetEditor%2A> returns an editor of the specified type.</span></span>  
  
 <span data-ttu-id="ccc07-107"><xref:System.ComponentModel.PropertyDescriptor> dostępne są także następujące `abstract` właściwości i metody:</span><span class="sxs-lookup"><span data-stu-id="ccc07-107"><xref:System.ComponentModel.PropertyDescriptor> also provides the following `abstract` properties and methods:</span></span>  
  
-   <span data-ttu-id="ccc07-108"><xref:System.ComponentModel.PropertyDescriptor.ComponentType%2A> zawiera typ składnika, który jest powiązany tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="ccc07-108"><xref:System.ComponentModel.PropertyDescriptor.ComponentType%2A> contains the type of component this property is bound to.</span></span>  
  
-   <span data-ttu-id="ccc07-109"><xref:System.ComponentModel.PropertyDescriptor.IsReadOnly%2A> Wskazuje, czy ta właściwość jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="ccc07-109"><xref:System.ComponentModel.PropertyDescriptor.IsReadOnly%2A> indicates whether this property is read-only.</span></span>  
  
-   <span data-ttu-id="ccc07-110"><xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> Pobiera typ właściwości.</span><span class="sxs-lookup"><span data-stu-id="ccc07-110"><xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> gets the type of the property.</span></span>  
  
-   <span data-ttu-id="ccc07-111"><xref:System.ComponentModel.PropertyDescriptor.CanResetValue%2A> Wskazuje, czy składnik Resetowanie zmienia wartość składnika.</span><span class="sxs-lookup"><span data-stu-id="ccc07-111"><xref:System.ComponentModel.PropertyDescriptor.CanResetValue%2A> indicates whether resetting the component changes the value of the component.</span></span>  
  
-   <span data-ttu-id="ccc07-112"><xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> Zwraca bieżącą wartość właściwości składnika.</span><span class="sxs-lookup"><span data-stu-id="ccc07-112"><xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> returns the current value of the property on a component.</span></span>  
  
-   <span data-ttu-id="ccc07-113"><xref:System.ComponentModel.PropertyDescriptor.ResetValue%2A> Resetuje wartości dla tej właściwości składnika.</span><span class="sxs-lookup"><span data-stu-id="ccc07-113"><xref:System.ComponentModel.PropertyDescriptor.ResetValue%2A> resets the value for this property of the component.</span></span>  
  
-   <span data-ttu-id="ccc07-114"><xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> Ustawia wartość składnika innej wartości.</span><span class="sxs-lookup"><span data-stu-id="ccc07-114"><xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> sets the value of the component to a different value.</span></span>  
  
-   <span data-ttu-id="ccc07-115"><xref:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue%2A> Wskazuje, czy wartość tej właściwości musi być utrwalona.</span><span class="sxs-lookup"><span data-stu-id="ccc07-115"><xref:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue%2A> indicates whether the value of this property needs to be persisted.</span></span>  
  
 <span data-ttu-id="ccc07-116">Zazwyczaj `abstract` elementy członkowskie są implementowane za pośrednictwem odbicia.</span><span class="sxs-lookup"><span data-stu-id="ccc07-116">Typically, the `abstract` members are implemented through reflection.</span></span> <span data-ttu-id="ccc07-117">Aby uzyskać więcej informacji na temat odbicia, zobacz Tematy w [odbicia](~/docs/framework/reflection-and-codedom/reflection.md).</span><span class="sxs-lookup"><span data-stu-id="ccc07-117">For more information about reflection, see the topics in [Reflection](~/docs/framework/reflection-and-codedom/reflection.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccc07-118">Poniższy przykładowy kod jest oparty na przykład w <xref:System.ComponentModel.PropertyDescriptorCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="ccc07-118">The following code example is built upon the example in the <xref:System.ComponentModel.PropertyDescriptorCollection> class.</span></span> <span data-ttu-id="ccc07-119">Wyświetla informacje (kategorii, opis, nazwa wyświetlana) tekst przycisku w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="ccc07-119">It prints the information (category, description, display name) of the text of a button in a text box.</span></span> <span data-ttu-id="ccc07-120">Przy założeniu, że `button1` i `textbox1` zostały utworzone w formularzu.</span><span class="sxs-lookup"><span data-stu-id="ccc07-120">It assumes that `button1` and `textbox1` have been instantiated on a form.</span></span>  
  
 [!code-cpp[PropertyDescriptor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/PropertyDescriptor/CPP/propertydescriptor.cpp#1)]
 [!code-csharp[PropertyDescriptor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/PropertyDescriptor/CS/propertydescriptor.cs#1)]
 [!code-vb[PropertyDescriptor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PropertyDescriptor/VB/propertydescriptor.vb#1)]  
  
 <span data-ttu-id="ccc07-121">Poniższy przykład kodu pokazuje, jak do zaimplementowania deskryptora właściwości niestandardowej, która zawiera tylko do odczytu otokę właściwości.</span><span class="sxs-lookup"><span data-stu-id="ccc07-121">The following code example shows how to implement a custom property descriptor that provides a read-only wrapper around a property.</span></span> <span data-ttu-id="ccc07-122">`SerializeReadOnlyPropertyDescriptor` Jest używany w Projektancie niestandardowe, aby zapewniać deskryptora właściwości tylko do odczytu dla formantu <xref:System.Windows.Forms.Control.Size%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="ccc07-122">The `SerializeReadOnlyPropertyDescriptor` is used in a custom designer to provide a read-only property descriptor for the control's <xref:System.Windows.Forms.Control.Size%2A> property.</span></span>  
  
 [!code-csharp[System.ComponentModel.PropertyDescriptor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/CS/SerializeReadOnlyPropertyDescriptor.cs#1)]
 [!code-vb[System.ComponentModel.PropertyDescriptor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/VB/SerializeReadOnlyPropertyDescriptor.vb#1)]  
  
 <span data-ttu-id="ccc07-123">W poniższych przykładach kodu pokazano sposób użycia `SerializeReadOnlyPropertyDescriptor` w Projektancie niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="ccc07-123">The following code examples show how to use the `SerializeReadOnlyPropertyDescriptor` in a custom designer.</span></span>  
  
 [!code-csharp[System.ComponentModel.PropertyDescriptor#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/CS/DemoControlDesigner.cs#10)]
 [!code-vb[System.ComponentModel.PropertyDescriptor#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/VB/DemoControlDesigner.vb#10)]  
[!code-csharp[System.ComponentModel.PropertyDescriptor#100](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/CS/DemoControl.cs#100)]
[!code-vb[System.ComponentModel.PropertyDescriptor#100](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/VB/DemoControl.vb#100)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.MemberDescriptor" />
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.ComponentModel.DefaultValueAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ccc07-124">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.PropertyDescriptor" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-124">Initializes a new instance of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PropertyDescriptor (System.ComponentModel.MemberDescriptor descr);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.MemberDescriptor descr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (descr As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PropertyDescriptor(System::ComponentModel::MemberDescriptor ^ descr);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.PropertyDescriptor : System.ComponentModel.MemberDescriptor -&gt; System.ComponentModel.PropertyDescriptor" Usage="new System.ComponentModel.PropertyDescriptor descr" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="descr" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="descr">
          <span data-ttu-id="ccc07-125">A <see cref="T:System.ComponentModel.MemberDescriptor" /> zawiera nazwę właściwości i jego atrybuty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-125">A <see cref="T:System.ComponentModel.MemberDescriptor" /> that contains the name of the property and its attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccc07-126">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.PropertyDescriptor" /> klasy o nazwie i atrybutów w określonym <see cref="T:System.ComponentModel.MemberDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-126">Initializes a new instance of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> class with the name and attributes in the specified <see cref="T:System.ComponentModel.MemberDescriptor" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PropertyDescriptor (System.ComponentModel.MemberDescriptor descr, Attribute[] attrs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.MemberDescriptor descr, class System.Attribute[] attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (descr As MemberDescriptor, attrs As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PropertyDescriptor(System::ComponentModel::MemberDescriptor ^ descr, cli::array &lt;Attribute ^&gt; ^ attrs);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.PropertyDescriptor : System.ComponentModel.MemberDescriptor * Attribute[] -&gt; System.ComponentModel.PropertyDescriptor" Usage="new System.ComponentModel.PropertyDescriptor (descr, attrs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="descr" Type="System.ComponentModel.MemberDescriptor" />
        <Parameter Name="attrs" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="descr">
          <span data-ttu-id="ccc07-127">A <see cref="T:System.ComponentModel.MemberDescriptor" /> zawierającą nazwę elementu członkowskiego i jego atrybuty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-127">A <see cref="T:System.ComponentModel.MemberDescriptor" /> containing the name of the member and its attributes.</span>
          </span>
        </param>
        <param name="attrs">
          <span data-ttu-id="ccc07-128">
            <see cref="T:System.Attribute" /> Tablica zawierająca atrybuty chcesz powiązać z właściwością.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-128">An <see cref="T:System.Attribute" /> array containing the attributes you want to associate with the property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccc07-129">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.PropertyDescriptor" /> klasy o nazwie w określonym <see cref="T:System.ComponentModel.MemberDescriptor" /> oraz atrybutów w obu <see cref="T:System.ComponentModel.MemberDescriptor" /> i <see cref="T:System.Attribute" /> tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-129">Initializes a new instance of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> class with the name in the specified <see cref="T:System.ComponentModel.MemberDescriptor" /> and the attributes in both the <see cref="T:System.ComponentModel.MemberDescriptor" /> and the <see cref="T:System.Attribute" /> array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc07-130">Ten konstruktor dołącza atrybuty w <xref:System.Attribute> tablicy w atrybutach w <xref:System.ComponentModel.MemberDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="ccc07-130">This constructor appends the attributes in the <xref:System.Attribute> array to the attributes in the <xref:System.ComponentModel.MemberDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PropertyDescriptor (string name, Attribute[] attrs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string name, class System.Attribute[] attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (name As String, attrs As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PropertyDescriptor(System::String ^ name, cli::array &lt;Attribute ^&gt; ^ attrs);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.PropertyDescriptor : string * Attribute[] -&gt; System.ComponentModel.PropertyDescriptor" Usage="new System.ComponentModel.PropertyDescriptor (name, attrs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attrs" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ccc07-131">Nazwa właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-131">The name of the property.</span>
          </span>
        </param>
        <param name="attrs">
          <span data-ttu-id="ccc07-132">Tablica typu <see cref="T:System.Attribute" /> zawiera atrybuty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-132">An array of type <see cref="T:System.Attribute" /> that contains the property attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccc07-133">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.PropertyDescriptor" /> klasy z określoną nazwą oraz atrybutami.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-133">Initializes a new instance of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> class with the specified name and attributes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="AddValueChanged">
      <MemberSignature Language="C#" Value="public virtual void AddValueChanged (object component, EventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddValueChanged(object component, class System.EventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddValueChanged (component As Object, handler As EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddValueChanged(System::Object ^ component, EventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member AddValueChanged : obj * EventHandler -&gt; unit&#xA;override this.AddValueChanged : obj * EventHandler -&gt; unit" Usage="propertyDescriptor.AddValueChanged (component, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="handler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="ccc07-134">Element, aby dodać obsługę programu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-134">The component to add the handler for.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ccc07-135">Delegat do dodania jako odbiornik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-135">The delegate to add as a listener.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccc07-136">Umożliwia inne obiekty, aby otrzymać powiadomienie, gdy ta właściwość ulegnie zmianie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-136">Enables other objects to be notified when this property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ccc07-137">
            <paramref name="component" /> lub <paramref name="handler" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-137">
              <paramref name="component" /> or <paramref name="handler" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanResetValue">
      <MemberSignature Language="C#" Value="public abstract bool CanResetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanResetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CanResetValue (component As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool CanResetValue(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="abstract member CanResetValue : obj -&gt; bool" Usage="propertyDescriptor.CanResetValue component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="ccc07-138">Składnik, aby sprawdzić możliwość resetowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-138">The component to test for reset capability.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccc07-139">W przypadku przesłonięcia w klasie pochodnej zwraca czy Resetowanie obiektu zmienia jego wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-139">When overridden in a derived class, returns whether resetting an object changes its value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccc07-140">
            <see langword="true" /> Resetowanie składnika zmienia się wartość; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-140">
              <see langword="true" /> if resetting the component changes its value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc07-141">Zwykle ta metoda jest implementowane za pośrednictwem odbicia.</span><span class="sxs-lookup"><span data-stu-id="ccc07-141">Typically, this method is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ccc07-142">
            <para>W przypadku przesłonięcia w klasie pochodnej, ta metoda sprawdza <see cref="T:System.ComponentModel.DefaultValueAttribute" />. Jeśli zostanie znaleziony, porównuje wartości atrybutu z bieżącej wartości właściwości. Zwraca <see langword="true" /> gdy wartością domyślną jest niezgodny bieżącej wartości właściwości. Jeśli ta metoda nie może znaleźć <see cref="T:System.ComponentModel.DefaultValueAttribute" />, wygląda na to dla metody "ShouldPersistMyProperty", który należy wdrożyć samodzielnie. Jeśli to zostanie znaleziony, <see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /> zwraca zwraca "ShouldPersistMyProperty". W przeciwnym razie wygląda dla metody "ResetMyProperty", który należy wdrożyć samodzielnie. Jeśli to zostanie znaleziony, <see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /> zwraca <see langword="true" />. Nie można znaleźć <see cref="T:System.ComponentModel.DefaultValueAttribute" />, zwraca metodę "ShouldPersistMyProperty" lub "ResetMyProperty" metodę, a następnie go <see langword="false" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-142">
              <para>When overridden in a derived class, this method looks for a <see cref="T:System.ComponentModel.DefaultValueAttribute" />. If it finds one, it compares the value of the attribute with the property's current value. It returns <see langword="true" /> when the default value does not match the property's current value. If this method cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" />, it looks for a "ShouldPersistMyProperty" method that you need to implement yourself. If this is found, <see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /> returns what "ShouldPersistMyProperty" returns. Otherwise, it looks for a "ResetMyProperty" method that you need to implement yourself. If this is found, <see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /> returns <see langword="true" />. If it cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" />, a "ShouldPersistMyProperty" method, or a "ResetMyProperty" method, then it returns <see langword="false" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="ComponentType">
      <MemberSignature Language="C#" Value="public abstract Type ComponentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ComponentType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.ComponentType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ComponentType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ComponentType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ComponentType : Type" Usage="System.ComponentModel.PropertyDescriptor.ComponentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ccc07-143">W przypadku przesłonięcia w klasie pochodnej pobiera typ składnika, który jest powiązany tej właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-143">When overridden in a derived class, gets the type of the component this property is bound to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ccc07-144">A <see cref="T:System.Type" /> reprezentujący typ składnika, ta właściwość jest powiązana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-144">A <see cref="T:System.Type" /> that represents the type of component this property is bound to.</span>
          </span>
          <span data-ttu-id="ccc07-145">Gdy <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> lub <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> metody są wywoływane, określony obiekt może być wystąpienia tego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-145">When the <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> or <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> methods are invoked, the object specified might be an instance of this type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc07-146">Zwykle ta właściwość jest implementowany przez odbicie.</span><span class="sxs-lookup"><span data-stu-id="ccc07-146">Typically, this property is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Converter">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.TypeConverter Converter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.TypeConverter Converter" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.Converter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Converter As TypeConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::TypeConverter ^ Converter { System::ComponentModel::TypeConverter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Converter : System.ComponentModel.TypeConverter" Usage="System.ComponentModel.PropertyDescriptor.Converter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ccc07-147">Pobiera konwerter typu dla tej właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-147">Gets the type converter for this property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ccc07-148">A <see cref="T:System.ComponentModel.TypeConverter" /> używany do przekonwertowania <see cref="T:System.Type" /> tej właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-148">A <see cref="T:System.ComponentModel.TypeConverter" /> that is used to convert the <see cref="T:System.Type" /> of this property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected object CreateInstance (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object CreateInstance(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ CreateInstance(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.CreateInstance : Type -&gt; obj" Usage="propertyDescriptor.CreateInstance type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="ccc07-149">A <see cref="T:System.Type" /> reprezentujący typ do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-149">A <see cref="T:System.Type" /> that represents the type to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccc07-150">Tworzy wystąpienie określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-150">Creates an instance of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccc07-151">Nowe wystąpienie typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-151">A new instance of the type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc07-152"><xref:System.ComponentModel.PropertyDescriptor.CreateInstance%2A> Wyszukuje konstruktora przyjmującego określonego typu.</span><span class="sxs-lookup"><span data-stu-id="ccc07-152"><xref:System.ComponentModel.PropertyDescriptor.CreateInstance%2A> looks for a constructor that takes the specified type.</span></span> <span data-ttu-id="ccc07-153">W przypadku odnalezienia konstruktora, typ właściwości jest przekazywana.</span><span class="sxs-lookup"><span data-stu-id="ccc07-153">If it finds a constructor, the type of the property is passed in.</span></span>  
  
 <span data-ttu-id="ccc07-154">Konwertery i edytory ta metoda umożliwia utworzenie wersji składnika.</span><span class="sxs-lookup"><span data-stu-id="ccc07-154">Converters and editors use this method to create versions of a component.</span></span> <span data-ttu-id="ccc07-155">Ta metoda zapewnia jeden składnik zostanie ponownie dla więcej niż jednego typu.</span><span class="sxs-lookup"><span data-stu-id="ccc07-155">This method enables a single component to be reused for more than one type.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="ccc07-156">Aby uzyskać dostęp do elementów członkowskich klasy prywatnych i metadanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-156">for access to private class members and metadata.</span>
          </span>
          <span data-ttu-id="ccc07-157">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-157">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="T:System.Drawing.Design.UITypeEditor" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="propertyDescriptor.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="ccc07-158">Obiekt do porównania z tym <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-158">The object to compare to this <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccc07-159">Porównuje to z innym obiektem, aby sprawdzić, czy są równoważne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-159">Compares this to another object to see if they are equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccc07-160">
            <see langword="true" /> Jeśli wartości są równoważne; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-160">
              <see langword="true" /> if the values are equivalent; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillAttributes">
      <MemberSignature Language="C#" Value="protected override void FillAttributes (System.Collections.IList attributeList);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void FillAttributes(class System.Collections.IList attributeList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub FillAttributes (attributeList As IList)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void FillAttributes(System::Collections::IList ^ attributeList);" />
      <MemberSignature Language="F#" Value="override this.FillAttributes : System.Collections.IList -&gt; unit" Usage="propertyDescriptor.FillAttributes attributeList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeList" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="attributeList">
          <span data-ttu-id="ccc07-161">
            <see cref="T:System.Collections.IList" /> Który zawiera listę atrybutów w klasie nadrzędnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-161">An <see cref="T:System.Collections.IList" /> that lists the attributes in the parent class.</span>
          </span>
          <span data-ttu-id="ccc07-162">Początkowo jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-162">Initially, this is empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccc07-163">Dodaje atrybuty <see cref="T:System.ComponentModel.PropertyDescriptor" /> określoną listę atrybutów w klasie nadrzędnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-163">Adds the attributes of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> to the specified list of attributes in the parent class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc07-164">Zduplikowane atrybuty ostatnią dodany do listy zostaną zachowane.</span><span class="sxs-lookup"><span data-stu-id="ccc07-164">For duplicate attributes, the last one added to the list will be kept.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ccc07-165">Zwraca <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-165">Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetChildProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetChildProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetChildProperties" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildProperties () As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetChildProperties();" />
      <MemberSignature Language="F#" Value="member this.GetChildProperties : unit -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="propertyDescriptor.GetChildProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ccc07-166">Zwraca domyślne <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-166">Returns the default <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccc07-167">Kolekcja deskryptorów właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-167">A collection of property descriptor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc07-168">Ta metoda przekazuje `null` dla obu `instance` parametru i `filter` parametru.</span><span class="sxs-lookup"><span data-stu-id="ccc07-168">This method passes `null` for both the `instance` parameter and the `filter` parameter.</span></span>  
  
 <span data-ttu-id="ccc07-169">Właściwości `instance` parametru może się różnić od właściwości klasy, ponieważ kontenera można dodawać lub usuwać właściwości, jeśli `instance` parametru jest ulokowany.</span><span class="sxs-lookup"><span data-stu-id="ccc07-169">The properties for the `instance` parameter can differ from the properties of a class, because the container can add or remove properties if the `instance` parameter is sited.</span></span>  
  
 <span data-ttu-id="ccc07-170">`filter` Parametru można mieszać <xref:System.Type> i <xref:System.Attribute> obiektów.</span><span class="sxs-lookup"><span data-stu-id="ccc07-170">The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="ccc07-171">Filtrowanie jest definiowana za pomocą następujących reguł:</span><span class="sxs-lookup"><span data-stu-id="ccc07-171">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="ccc07-172">A <xref:System.Type> obiektu jest traktowana jako symbol wieloznaczny; odpowiada żadnej właściwości, która ma <xref:System.Type> w jego zestaw atrybutów.</span><span class="sxs-lookup"><span data-stu-id="ccc07-172">A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="ccc07-173">Jeśli nie ma właściwości <xref:System.Attribute> do tej samej klasy właściwość nie będą uwzględniane w zwróconej tablicy.</span><span class="sxs-lookup"><span data-stu-id="ccc07-173">If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.</span></span>  
  
-   <span data-ttu-id="ccc07-174">Jeśli ten atrybut jest wystąpieniem <xref:System.Attribute>, właściwość musi być dokładnego dopasowania do uwzględnienia w zwróconej tablicy.</span><span class="sxs-lookup"><span data-stu-id="ccc07-174">If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.</span></span>  
  
-   <span data-ttu-id="ccc07-175">Jeśli określisz <xref:System.Attribute> i jest właściwością domyślną, zostanie uwzględniona w tablicy zwrócone, nawet jeśli żadne wystąpienie elementu <xref:System.Attribute> we właściwości.</span><span class="sxs-lookup"><span data-stu-id="ccc07-175">If you specify an <xref:System.Attribute> and it is the default property, it will be included in the returned array, even if there is no instance of <xref:System.Attribute> in the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="GetChildProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetChildProperties (Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetChildProperties(class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildProperties (filter As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetChildProperties(cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="member this.GetChildProperties : Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="propertyDescriptor.GetChildProperties filter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="ccc07-176">Tablica typu <see cref="T:System.Attribute" /> do użycia jako filtr.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-176">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccc07-177">Zwraca <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> przy użyciu określonej tablicy atrybutów jako filtr.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-177">Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> using a specified array of attributes as a filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccc07-178">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> z właściwościami, które jest zgodny z określonym atrybutem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-178">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the specified attributes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc07-179">Ta metoda przekazuje `null` dla `instance` parametru.</span><span class="sxs-lookup"><span data-stu-id="ccc07-179">This method passes `null` for the `instance` parameter.</span></span>  
  
 <span data-ttu-id="ccc07-180">Właściwości `instance` parametru może się różnić od właściwości klasy, ponieważ lokacji można dodać lub usunąć właściwości, jeśli `instance` parametru jest ulokowany.</span><span class="sxs-lookup"><span data-stu-id="ccc07-180">The properties for the `instance` parameter can differ from the properties of a class, because the site can add or remove properties if the `instance` parameter is sited.</span></span>  
  
 <span data-ttu-id="ccc07-181">`filter` Parametru można mieszać <xref:System.Type> i <xref:System.Attribute> obiektów.</span><span class="sxs-lookup"><span data-stu-id="ccc07-181">The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="ccc07-182">Filtrowanie jest definiowana za pomocą następujących reguł:</span><span class="sxs-lookup"><span data-stu-id="ccc07-182">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="ccc07-183">A <xref:System.Type> obiektu jest traktowana jako symbol wieloznaczny; odpowiada żadnej właściwości, która ma <xref:System.Type> w jego zestaw atrybutów.</span><span class="sxs-lookup"><span data-stu-id="ccc07-183">A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="ccc07-184">Jeśli nie ma właściwości <xref:System.Attribute> do tej samej klasy właściwość nie będą uwzględniane w zwróconej tablicy.</span><span class="sxs-lookup"><span data-stu-id="ccc07-184">If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.</span></span>  
  
-   <span data-ttu-id="ccc07-185">Jeśli ten atrybut jest wystąpieniem <xref:System.Attribute>, właściwość musi być dokładnego dopasowania do uwzględnienia w zwróconej tablicy.</span><span class="sxs-lookup"><span data-stu-id="ccc07-185">If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.</span></span>  
  
-   <span data-ttu-id="ccc07-186">Jeśli określisz <xref:System.Attribute> wystąpienia, a jest właściwością domyślną, zostanie uwzględniona w zwróconej tablicy nawet jeśli żadne wystąpienie elementu <xref:System.Attribute> we właściwości.</span><span class="sxs-lookup"><span data-stu-id="ccc07-186">If you specify an <xref:System.Attribute> instance and it is the default property, it will be included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="GetChildProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetChildProperties (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetChildProperties(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildProperties (instance As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetChildProperties(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="member this.GetChildProperties : obj -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="propertyDescriptor.GetChildProperties instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="ccc07-187">Składnik można pobrać właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-187">A component to get the properties for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccc07-188">Zwraca <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> dla danego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-188">Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> for a given object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccc07-189">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> z właściwości dla określonego składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-189">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc07-190">Ta metoda przekazuje `null` dla `filter` parametru.</span><span class="sxs-lookup"><span data-stu-id="ccc07-190">This method passes `null` for the `filter` parameter.</span></span>  
  
 <span data-ttu-id="ccc07-191">Właściwości `instance` parametru może się różnić od właściwości klasy, ponieważ lokacji można dodać lub usunąć właściwości, jeśli `instance` parametru jest ulokowany.</span><span class="sxs-lookup"><span data-stu-id="ccc07-191">The properties for the `instance` parameter can differ from the properties of a class, because the site can add or remove properties if the `instance` parameter is sited.</span></span>  
  
 <span data-ttu-id="ccc07-192">`filter` Parametru można mieszać <xref:System.Type> i <xref:System.Attribute> obiektów.</span><span class="sxs-lookup"><span data-stu-id="ccc07-192">The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="ccc07-193">Filtrowanie jest definiowana za pomocą następujących reguł:</span><span class="sxs-lookup"><span data-stu-id="ccc07-193">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="ccc07-194">A <xref:System.Type> obiektu jest traktowana jako symbol wieloznaczny; odpowiada żadnej właściwości, która ma <xref:System.Type> w jego zestaw atrybutów.</span><span class="sxs-lookup"><span data-stu-id="ccc07-194">A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="ccc07-195">Jeśli nie ma właściwości <xref:System.Attribute> do tej samej klasy właściwość nie będą uwzględniane w zwróconej tablicy.</span><span class="sxs-lookup"><span data-stu-id="ccc07-195">If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.</span></span>  
  
-   <span data-ttu-id="ccc07-196">Jeśli ten atrybut jest wystąpieniem <xref:System.Attribute>, właściwość musi być dokładnego dopasowania do uwzględnienia w zwróconej tablicy.</span><span class="sxs-lookup"><span data-stu-id="ccc07-196">If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.</span></span>  
  
-   <span data-ttu-id="ccc07-197">Jeśli określisz <xref:System.Attribute> wystąpienia, a jest właściwością domyślną, zostanie uwzględniona w zwróconej tablicy nawet jeśli żadne wystąpienie elementu <xref:System.Attribute> we właściwości.</span><span class="sxs-lookup"><span data-stu-id="ccc07-197">If you specify an <xref:System.Attribute> instance and it is the default property, it will be included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="GetChildProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetChildProperties (object instance, Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetChildProperties(object instance, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChildProperties (instance As Object, filter As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetChildProperties(System::Object ^ instance, cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="abstract member GetChildProperties : obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetChildProperties : obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="propertyDescriptor.GetChildProperties (instance, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="ccc07-198">Składnik można pobrać właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-198">A component to get the properties for.</span>
          </span>
        </param>
        <param name="filter">
          <span data-ttu-id="ccc07-199">Tablica typu <see cref="T:System.Attribute" /> do użycia jako filtr.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-199">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccc07-200">Zwraca <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> dla danego obiektu przy użyciu określonej tablicy atrybutów jako filtr.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-200">Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> for a given object using a specified array of attributes as a filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccc07-201">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> z właściwościami, spełniających określone atrybuty dla określonego składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-201">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the specified attributes for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc07-202">Właściwości `instance` parametru może się różnić od właściwości klasy, ponieważ lokacji można dodać lub usunąć właściwości, jeśli `instance` parametru jest ulokowany.</span><span class="sxs-lookup"><span data-stu-id="ccc07-202">The properties for the `instance` parameter can differ from the properties of a class, because the site can add or remove properties if the `instance` parameter is sited.</span></span>  
  
 <span data-ttu-id="ccc07-203">`filter` Parametru można mieszać <xref:System.Type> i <xref:System.Attribute> obiektów.</span><span class="sxs-lookup"><span data-stu-id="ccc07-203">The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="ccc07-204">Filtrowanie jest definiowana za pomocą następujących reguł:</span><span class="sxs-lookup"><span data-stu-id="ccc07-204">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="ccc07-205">A <xref:System.Type> obiektu jest traktowana jako symbol wieloznaczny; odpowiada żadnej właściwości, która ma <xref:System.Type> w jego zestaw atrybutów.</span><span class="sxs-lookup"><span data-stu-id="ccc07-205">A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="ccc07-206">Jeśli nie ma właściwości <xref:System.Attribute> do tej samej klasy właściwość nie będą uwzględniane w zwróconej tablicy.</span><span class="sxs-lookup"><span data-stu-id="ccc07-206">If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.</span></span>  
  
-   <span data-ttu-id="ccc07-207">Jeśli ten atrybut jest wystąpieniem <xref:System.Attribute>, właściwość musi być dokładnego dopasowania do uwzględnienia w zwróconej tablicy.</span><span class="sxs-lookup"><span data-stu-id="ccc07-207">If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.</span></span>  
  
-   <span data-ttu-id="ccc07-208">Jeśli określisz <xref:System.Attribute> wystąpienia, a jest właściwością domyślną, zostanie uwzględniona w zwróconej tablicy nawet jeśli żadne wystąpienie elementu <xref:System.Attribute> we właściwości.</span><span class="sxs-lookup"><span data-stu-id="ccc07-208">If you specify an <xref:System.Attribute> instance and it is the default property, it will be included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
 <span data-ttu-id="ccc07-209">Ogólnie rzecz biorąc, implementując, w którym ma zostać zwrócony właściwości podrzędnej <xref:System.ComponentModel.TypeConverter.GetProperties%2A> członkiem <xref:System.ComponentModel.TypeConverter> zwracane z tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="ccc07-209">Generally, child properties should be returned by implementing the <xref:System.ComponentModel.TypeConverter.GetProperties%2A> member of the <xref:System.ComponentModel.TypeConverter> returned from this property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public virtual object GetEditor (Type editorBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetEditor(class System.Type editorBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEditor (editorBaseType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetEditor(Type ^ editorBaseType);" />
      <MemberSignature Language="F#" Value="abstract member GetEditor : Type -&gt; obj&#xA;override this.GetEditor : Type -&gt; obj" Usage="propertyDescriptor.GetEditor editorBaseType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="editorBaseType">
          <span data-ttu-id="ccc07-210">Typ podstawowy edytor, który jest używany w celu rozróżnienia wielu edytory, które obsługuje właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-210">The base type of editor, which is used to differentiate between multiple editors that a property supports.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccc07-211">Pobiera edytora określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-211">Gets an editor of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccc07-212">Wystąpienie typu żądanego Edytor lub <see langword="null" /> Jeśli nie można odnaleźć edytora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-212">An instance of the requested editor type, or <see langword="null" /> if an editor cannot be found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="propertyDescriptor.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ccc07-213">Zwraca wartość skrótu dla tego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-213">Returns the hash code for this object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccc07-214">Wartość skrótu dla tego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-214">The hash code for this object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInvocationTarget">
      <MemberSignature Language="C#" Value="protected override object GetInvocationTarget (Type type, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object GetInvocationTarget(class System.Type type, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ GetInvocationTarget(Type ^ type, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="override this.GetInvocationTarget : Type * obj -&gt; obj" Usage="propertyDescriptor.GetInvocationTarget (type, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="ccc07-215">
            <see cref="T:System.Type" /> Wywołania obiektu docelowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-215">The <see cref="T:System.Type" /> of the invocation target.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="ccc07-216">Potencjalne obiekt docelowy wywołania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-216">The potential invocation target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccc07-217">Ta metoda zwraca obiekt, który ma zostać użyty podczas wywoływania elementów członkowskich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-217">This method returns the object that should be used during invocation of members.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccc07-218">
            <see cref="T:System.Object" /> Która powinna być używana podczas wywoływania elementów członkowskich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-218">The <see cref="T:System.Object" /> that should be used during invocation of members.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc07-219">Zazwyczaj zwracana wartość jest taka sama jak `instance` przekazany.</span><span class="sxs-lookup"><span data-stu-id="ccc07-219">Typically, the return value will be the same as the `instance` passed in.</span></span> <span data-ttu-id="ccc07-220">Jeśli obiekt innym ktoś skojarzony z tym wystąpieniem, czy wystąpienie jest deskryptora typu niestandardowego <xref:System.ComponentModel.PropertyDescriptor.GetInvocationTarget%2A> metoda może zwracać różne wartości.</span><span class="sxs-lookup"><span data-stu-id="ccc07-220">If someone associated another object with this instance, or if the instance is a custom type descriptor, the <xref:System.ComponentModel.PropertyDescriptor.GetInvocationTarget%2A> method may return a different value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeFromName">
      <MemberSignature Language="C#" Value="protected Type GetTypeFromName (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Type GetTypeFromName(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetTypeFromName (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Type ^ GetTypeFromName(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="member this.GetTypeFromName : string -&gt; Type" Usage="propertyDescriptor.GetTypeFromName typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="ccc07-221">Nazwa kwalifikowana zestawu typ do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-221">The assembly-qualified name of the type to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccc07-222">Zwraca typ za pomocą jego nazwy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-222">Returns a type using its name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccc07-223">A <see cref="T:System.Type" /> odpowiadającej nazwie danego typu lub <see langword="null" /> Jeśli nie można odnaleźć dopasowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-223">A <see cref="T:System.Type" /> that matches the given type name, or <see langword="null" /> if a match cannot be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc07-224">Aby znaleźć odpowiedniego typu, ta metoda sprawdza najpierw zestawu typu tego <xref:System.ComponentModel.PropertyDescriptor> odwołania.</span><span class="sxs-lookup"><span data-stu-id="ccc07-224">To find the appropriate type, this method first checks the assembly of the type that this <xref:System.ComponentModel.PropertyDescriptor> references.</span></span> <span data-ttu-id="ccc07-225">Jeśli nie znajdzie typ w zestawie, wywołuje metodę <xref:System.Type.GetType%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccc07-225">If it does not find the type in the assembly, it calls <xref:System.Type.GetType%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public abstract object GetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetValue (component As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetValue(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : obj -&gt; obj" Usage="propertyDescriptor.GetValue component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="ccc07-226">Składnik razem z właściwością, dla którego można pobrać wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-226">The component with the property for which to retrieve the value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccc07-227">W przypadku przesłonięcia w klasie pochodnej pobiera bieżącą wartość właściwości składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-227">When overridden in a derived class, gets the current value of the property on a component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccc07-228">Wartość właściwości dla danego składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-228">The value of a property for a given component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc07-229">Zwykle ta metoda jest implementowane za pośrednictwem odbicia.</span><span class="sxs-lookup"><span data-stu-id="ccc07-229">Typically, this method is implemented through reflection.</span></span>  
  
 <span data-ttu-id="ccc07-230">Ta metoda automatycznie wywołuje metodę zmiany przed <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A>i po zmienić metodę, <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A>, z <xref:System.ComponentModel.Design.IComponentChangeService>.</span><span class="sxs-lookup"><span data-stu-id="ccc07-230">This method automatically calls the pre-change method, <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A>, and post-change method, <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A>, of the <xref:System.ComponentModel.Design.IComponentChangeService>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ccc07-231">
            <para>Aby zastąpić tę metodę, pobiera bieżącą wartość właściwości przez wywołanie metody "GetMyProperty", który należy wdrożyć. Wystąpił wyjątek w tej metodzie powinien przechodzić.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-231">
              <para>When you override this method, it gets the current value of the property by invoking a "GetMyProperty" method that you need to implement. An exception in that method should pass through.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetValueChangedHandler">
      <MemberSignature Language="C#" Value="protected internal EventHandler GetValueChangedHandler (object component);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.EventHandler GetValueChangedHandler(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function GetValueChangedHandler (component As Object) As EventHandler" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; EventHandler ^ GetValueChangedHandler(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="member this.GetValueChangedHandler : obj -&gt; EventHandler" Usage="propertyDescriptor.GetValueChangedHandler component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="ccc07-232">Składnik, dla którego można pobrać procedury obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-232">The component for which to retrieve event handlers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccc07-233">Pobiera bieżący zestaw <c>ValueChanged</c> programy obsługi zdarzeń dla określonego składnika</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-233">Retrieves the current set of <c>ValueChanged</c> event handlers for a specific component</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccc07-234">A łączyć program obsługi zdarzeń multiemisji, lub <see langword="null" /> Jeśli nie obsługi zdarzeń nie ma obecnie przypisanych do <paramref name="component" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-234">A combined multicast event handler, or <see langword="null" /> if no event handlers are currently assigned to <paramref name="component" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocalizable">
      <MemberSignature Language="C#" Value="public virtual bool IsLocalizable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocalizable" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.IsLocalizable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsLocalizable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsLocalizable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLocalizable : bool" Usage="System.ComponentModel.PropertyDescriptor.IsLocalizable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ccc07-235">Pobiera wartość wskazującą, czy ta właściwość powinna być lokalizowany, jak określono w <see cref="T:System.ComponentModel.LocalizableAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-235">Gets a value indicating whether this property should be localized, as specified in the <see cref="T:System.ComponentModel.LocalizableAttribute" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ccc07-236">
            <see langword="true" /> Jeśli element członkowski jest oznaczony atrybutem <see cref="T:System.ComponentModel.LocalizableAttribute" /> ustawioną <see langword="true" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-236">
              <see langword="true" /> if the member is marked with the <see cref="T:System.ComponentModel.LocalizableAttribute" /> set to <see langword="true" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc07-237">Jeśli właściwość jest oznaczona atrybutem <xref:System.ComponentModel.LocalizableAttribute> ustawioną `true` i używane w wizualnego projektanta, jego wartości są zapisywane w pliku zasobów.</span><span class="sxs-lookup"><span data-stu-id="ccc07-237">When a property is marked with the <xref:System.ComponentModel.LocalizableAttribute> set to `true` and used in a visual designer, its values are saved in a resource file.</span></span> <span data-ttu-id="ccc07-238">Pliki zasobów nie są używane, jeśli oznaczyć właściwości z atrybutem, a następnie ustaw właściwości w kodzie.</span><span class="sxs-lookup"><span data-stu-id="ccc07-238">If you mark a property with the attribute and then set the property in code, resource files are not used.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.LocalizableAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public abstract bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.ComponentModel.PropertyDescriptor.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ccc07-239">W przypadku przesłonięcia w klasie pochodnej pobiera wartość wskazującą, czy ta właściwość jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-239">When overridden in a derived class, gets a value indicating whether this property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ccc07-240">
            <see langword="true" /> Jeśli właściwość jest tylko do odczytu. w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-240">
              <see langword="true" /> if the property is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.ReadOnlyAttribute" />
      </Docs>
    </Member>
    <Member MemberName="OnValueChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnValueChanged (object component, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValueChanged(object component, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValueChanged (component As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValueChanged(System::Object ^ component, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnValueChanged : obj * EventArgs -&gt; unit&#xA;override this.OnValueChanged : obj * EventArgs -&gt; unit" Usage="propertyDescriptor.OnValueChanged (component, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="ccc07-241">Obiekt, który wywołuje zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-241">The object that raises the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="ccc07-242">
            <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-242">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccc07-243">Zgłasza <c>ValueChanged</c> zdarzeń, który zostanie wdrożony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-243">Raises the <c>ValueChanged</c> event that you implemented.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc07-244">Tę metodę należy wywoływać w implementacji deskryptora właściwości, gdy zmieniono wartość właściwości.</span><span class="sxs-lookup"><span data-stu-id="ccc07-244">This method should be called by your property descriptor implementation when the property value has changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public abstract Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ PropertyType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyType : Type" Usage="System.ComponentModel.PropertyDescriptor.PropertyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ccc07-245">W przypadku przesłonięcia w klasie pochodnej pobiera typ właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-245">When overridden in a derived class, gets the type of the property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ccc07-246">A <see cref="T:System.Type" /> reprezentujący typ właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-246">A <see cref="T:System.Type" /> that represents the type of the property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc07-247">Zwykle ta właściwość jest implementowany przez odbicie.</span><span class="sxs-lookup"><span data-stu-id="ccc07-247">Typically, this property is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveValueChanged">
      <MemberSignature Language="C#" Value="public virtual void RemoveValueChanged (object component, EventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveValueChanged(object component, class System.EventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveValueChanged (component As Object, handler As EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveValueChanged(System::Object ^ component, EventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member RemoveValueChanged : obj * EventHandler -&gt; unit&#xA;override this.RemoveValueChanged : obj * EventHandler -&gt; unit" Usage="propertyDescriptor.RemoveValueChanged (component, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="handler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="ccc07-248">Składnik do usunięcia programu obsługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-248">The component to remove the handler for.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ccc07-249">Delegat, aby usunąć jako odbiornik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-249">The delegate to remove as a listener.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccc07-250">Umożliwia inne obiekty, aby otrzymać powiadomienie, gdy ta właściwość ulegnie zmianie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-250">Enables other objects to be notified when this property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ccc07-251">
            <paramref name="component" /> lub <paramref name="handler" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-251">
              <paramref name="component" /> or <paramref name="handler" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResetValue">
      <MemberSignature Language="C#" Value="public abstract void ResetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ResetValue (component As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ResetValue(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="abstract member ResetValue : obj -&gt; unit" Usage="propertyDescriptor.ResetValue component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="ccc07-252">Składnik z wartością właściwości, która ma być zresetowane do wartości domyślnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-252">The component with the property value that is to be reset to the default value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccc07-253">W przypadku przesłonięcia w klasie pochodnej resetuje wartości dla tej właściwości składnika do wartości domyślnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-253">When overridden in a derived class, resets the value for this property of the component to the default value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc07-254">Zwykle ta metoda jest implementowane za pośrednictwem odbicia.</span><span class="sxs-lookup"><span data-stu-id="ccc07-254">Typically, this method is implemented through reflection.</span></span>  
  
 <span data-ttu-id="ccc07-255">Ta metoda określa wartość, aby zresetować właściwość w następującej kolejności:</span><span class="sxs-lookup"><span data-stu-id="ccc07-255">This method determines the value to reset the property to in the following order of precedence:</span></span>  
  
1.  <span data-ttu-id="ccc07-256">Brak przesłanianej właściwości dla tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="ccc07-256">There is a shadowed property for this property.</span></span>  
  
2.  <span data-ttu-id="ccc07-257">Brak <xref:System.ComponentModel.DefaultValueAttribute> dla tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="ccc07-257">There is a <xref:System.ComponentModel.DefaultValueAttribute> for this property.</span></span>  
  
3.  <span data-ttu-id="ccc07-258">Brak metody "ResetMyProperty", która jest zaimplementowana, gdzie "MyProperty" jest nazwą właściwości, które przekazujesz do niego.</span><span class="sxs-lookup"><span data-stu-id="ccc07-258">There is a "ResetMyProperty" method that you have implemented, where "MyProperty" is the name of the property you pass to it.</span></span>  
  
 <span data-ttu-id="ccc07-259">Ta metoda tworzy <xref:System.ComponentModel.Design.DesignerTransaction> automatycznie w następującej kolejności:</span><span class="sxs-lookup"><span data-stu-id="ccc07-259">This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> automatically in the following order:</span></span>  
  
1.  <span data-ttu-id="ccc07-260">Wywołania metody <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType> metody, aby utworzyć nową <xref:System.ComponentModel.Design.DesignerTransaction> do reprezentowania zmiany.</span><span class="sxs-lookup"><span data-stu-id="ccc07-260">The method calls the <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType> method to create a new <xref:System.ComponentModel.Design.DesignerTransaction> to represent the changes.</span></span>  
  
2.  <span data-ttu-id="ccc07-261">Wywołania metody <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType> metody, aby wskazać, że transakcja została rozpoczęta, a zmiany nastąpić.</span><span class="sxs-lookup"><span data-stu-id="ccc07-261">The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType> method to indicate that the transaction has begun and the changes are about to occur.</span></span>  
  
3.  <span data-ttu-id="ccc07-262">Metoda resetuje właściwości do wartości ustalonej według kolejności sprawdzanie, czy ta metoda.</span><span class="sxs-lookup"><span data-stu-id="ccc07-262">The method resets the property to the value determined by this method's checking order.</span></span>  
  
4.  <span data-ttu-id="ccc07-263">Wywołania metody <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType> metody, aby wskazać, czy wystąpiły zmiany.</span><span class="sxs-lookup"><span data-stu-id="ccc07-263">The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType> method to indicate that the changes have occurred.</span></span>  
  
5.  <span data-ttu-id="ccc07-264">Wywołania metody <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType> aby wskazać, że transakcja jest ukończona.</span><span class="sxs-lookup"><span data-stu-id="ccc07-264">The method calls <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType> to indicate that the transaction is completed.</span></span>  
  
 <span data-ttu-id="ccc07-265">Transakcja ma na celu obsługuje `Undo` i `Redo` funkcji.</span><span class="sxs-lookup"><span data-stu-id="ccc07-265">The purpose of the transaction is to support `Undo` and `Redo` functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ccc07-266">
            <para>W przypadku przesłonięcia w klasie pochodnej, ta metoda sprawdza <see cref="T:System.ComponentModel.DefaultValueAttribute" />. Jeśli zostanie znaleziony, ustawia wartości właściwości do <see cref="T:System.ComponentModel.DefaultValueAttribute" /> go odnaleźć. Jeśli ta metoda nie może znaleźć <see cref="T:System.ComponentModel.DefaultValueAttribute" />, wygląda na to dla metody "ResetMyProperty", która należy do implementacji. Jeśli to zostanie znaleziony, <see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /> metoda wywołuje go. Jeśli <see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /> nie można odnaleźć <see cref="T:System.ComponentModel.DefaultValueAttribute" /> lub metody "ResetMyProperty", który zostanie wdrożony, nie wykonuje operację.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-266">
              <para>When overridden in a derived class, this method looks for a <see cref="T:System.ComponentModel.DefaultValueAttribute" />. If it finds one, it sets the value of the property to the <see cref="T:System.ComponentModel.DefaultValueAttribute" /> it found. If this method cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" />, it looks for a "ResetMyProperty" method that you need to implement. If this is found, the <see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /> method invokes it. If <see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /> cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" /> or a "ResetMyProperty" method that you implemented, it does not perform an operation.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="SerializationVisibility">
      <MemberSignature Language="C#" Value="public System.ComponentModel.DesignerSerializationVisibility SerializationVisibility { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.DesignerSerializationVisibility SerializationVisibility" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.SerializationVisibility" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializationVisibility As DesignerSerializationVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::DesignerSerializationVisibility SerializationVisibility { System::ComponentModel::DesignerSerializationVisibility get(); };" />
      <MemberSignature Language="F#" Value="member this.SerializationVisibility : System.ComponentModel.DesignerSerializationVisibility" Usage="System.ComponentModel.PropertyDescriptor.SerializationVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DesignerSerializationVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ccc07-267">Pobiera wartość wskazującą, czy ta właściwość powinny być serializowane, jak określono w <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-267">Gets a value indicating whether this property should be serialized, as specified in the <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ccc07-268">Jeden z <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> wartości wyliczenia, które określa, czy ta właściwość powinny być serializowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-268">One of the <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> enumeration values that specifies whether this property should be serialized.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" />
        <altmember cref="T:System.ComponentModel.DesignerSerializationVisibility" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public abstract void SetValue (object component, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object component, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetValue (component As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetValue(System::Object ^ component, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : obj * obj -&gt; unit" Usage="propertyDescriptor.SetValue (component, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="ccc07-269">Składnik, należy ustawić wartość właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-269">The component with the property value that is to be set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ccc07-270">Nowa wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-270">The new value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccc07-271">W przypadku przesłonięcia w klasie pochodnej, ustawia wartość składnika innej wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-271">When overridden in a derived class, sets the value of the component to a different value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc07-272">Zwykle ta metoda jest implementowane za pośrednictwem odbicia.</span><span class="sxs-lookup"><span data-stu-id="ccc07-272">Typically, this method is implemented through reflection.</span></span>  
  
 <span data-ttu-id="ccc07-273">Ta metoda tworzy <xref:System.ComponentModel.Design.DesignerTransaction> automatycznie w następującej kolejności:</span><span class="sxs-lookup"><span data-stu-id="ccc07-273">This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> automatically in the following order:</span></span>  
  
1.  <span data-ttu-id="ccc07-274">Wywołania metody <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType> metody, aby utworzyć nową <xref:System.ComponentModel.Design.DesignerTransaction> do reprezentowania zmiany.</span><span class="sxs-lookup"><span data-stu-id="ccc07-274">The method calls the <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType> method to create a new <xref:System.ComponentModel.Design.DesignerTransaction> to represent the changes.</span></span>  
  
2.  <span data-ttu-id="ccc07-275">Wywołania metody <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType> metody, aby wskazać, że transakcja została rozpoczęta, a zmiany nastąpić.</span><span class="sxs-lookup"><span data-stu-id="ccc07-275">The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType> method to indicate that the transaction has begun and the changes are about to occur.</span></span>  
  
3.  <span data-ttu-id="ccc07-276">Metoda resetuje właściwości do wartości ustalonej według kolejności sprawdzanie, czy ta metoda.</span><span class="sxs-lookup"><span data-stu-id="ccc07-276">The method resets the property to the value determined by this method's checking order.</span></span>  
  
4.  <span data-ttu-id="ccc07-277">Wywołania metody <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType> metody, aby wskazać, czy wystąpiły zmiany.</span><span class="sxs-lookup"><span data-stu-id="ccc07-277">The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType> method to indicate that the changes have occurred.</span></span>  
  
5.  <span data-ttu-id="ccc07-278">Wywołania metody <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType> aby wskazać, że transakcja została zakończona.</span><span class="sxs-lookup"><span data-stu-id="ccc07-278">The method calls <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType> to indicate that the transaction is complete.</span></span>  
  
 <span data-ttu-id="ccc07-279">Transakcja ma na celu obsługuje `Undo` i `Redo` funkcji.</span><span class="sxs-lookup"><span data-stu-id="ccc07-279">The purpose of the transaction is to support `Undo` and `Redo` functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ccc07-280">
            <para>Aby zastąpić tę metodę, ustala wartość właściwości za pomocą odpowiedniej metody "SetMyProperty", który należy wdrożyć. Jeśli określona wartość nie jest prawidłowy, składnik powinien zgłosić wyjątek, który jest przekazywany w górę. Właściwość należy zaprojektować tak, aby metody "GetMyProperty", (tj. zostało zaimplementowane) zgodnie z metodą "SetMyProperty" zwraca wartość przekazano, gdy metoda "SetMyProperty" zgłosiła wyjątek.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-280">
              <para>When you override this method, it should set the value of the property by invoking the appropriate "SetMyProperty" method that you need to implement. If the value specified is not valid, the component should throw an exception, which is passed up. You should design the property so that a "GetMyProperty" method (that you have implemented) following a "SetMyProperty" method returns the value passed in when the "SetMyProperty" method does not throw an exception.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValue">
      <MemberSignature Language="C#" Value="public abstract bool ShouldSerializeValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldSerializeValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ShouldSerializeValue (component As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool ShouldSerializeValue(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeValue : obj -&gt; bool" Usage="propertyDescriptor.ShouldSerializeValue component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="ccc07-281">Składnik razem z właściwością badane trwałości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-281">The component with the property to be examined for persistence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccc07-282">W przypadku przesłonięcia w klasie pochodnej, określa wartość wskazującą, czy wartość tej właściwości musi być utrwalona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-282">When overridden in a derived class, determines a value indicating whether the value of this property needs to be persisted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccc07-283">
            <see langword="true" /> Jeśli właściwość powinna zostać utrwalony; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-283">
              <see langword="true" /> if the property should be persisted; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc07-284">Zwykle ta metoda jest implementowane za pośrednictwem odbicia.</span><span class="sxs-lookup"><span data-stu-id="ccc07-284">Typically, this method is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ccc07-285">
            <para>W przypadku przesłonięcia w klasie pochodnej, ta metoda zwraca <see langword="true" /> Jeśli bieżąca wartość właściwości jest inna niż wartość domyślną. Przy pierwszym wyszukiwanie szuka wartość domyślną <see cref="T:System.ComponentModel.DefaultValueAttribute" />. Jeśli metoda znajdzie się ten atrybut, porównuje wartości atrybutu z bieżącej wartości właściwości. Jeśli ta metoda nie może znaleźć <see cref="T:System.ComponentModel.DefaultValueAttribute" />, wygląda na to dla metody "ShouldSerializeMyProperty", która należy do implementacji. Jeśli okaże się <see cref="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)" /> wywołuje go. Jeśli ta metoda nie może znaleźć <see cref="T:System.ComponentModel.DefaultValueAttribute" /> lub metodzie "ShouldSerializeMyProperty", nie można utworzyć optymalizacji i zwraca <see langword="true" />. <block subset="none" type="note"><para><see cref="T:System.ComponentModel.Design.ComponentDesigner" /> Klasa implementuje logiki specjalne serializacji dla składników odziedziczonych. Aby uzyskać więcej informacji, zobacz <see cref="T:System.ComponentModel.Design.ComponentDesigner" />. </para></block></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-285">
              <para>When overridden in a derived class, this method returns <see langword="true" /> if the current value of the property is different from its default value. It looks for a default value by first looking for a <see cref="T:System.ComponentModel.DefaultValueAttribute" />. If the method finds this attribute, it compares the value of the attribute with the property's current value. If this method cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" />, it looks for a "ShouldSerializeMyProperty" method that you need to implement. If it is found, <see cref="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)" /> invokes it. If this method cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" /> or a "ShouldSerializeMyProperty" method, it cannot create optimizations and it returns <see langword="true" />. <block subset="none" type="note"><para> The <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> class implements special serialization logic for inherited components. For more information, see <see cref="T:System.ComponentModel.Design.ComponentDesigner" />. </para></block></para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
      </Docs>
    </Member>
    <Member MemberName="SupportsChangeEvents">
      <MemberSignature Language="C#" Value="public virtual bool SupportsChangeEvents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsChangeEvents" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsChangeEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsChangeEvents { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsChangeEvents : bool" Usage="System.ComponentModel.PropertyDescriptor.SupportsChangeEvents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ccc07-286">Pobiera wartość wskazującą, czy powiadomienia o zmianie wartości dla tej właściwości mogą pochodzić od poza deskryptora właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-286">Gets a value indicating whether value change notifications for this property may originate from outside the property descriptor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ccc07-287">
            <see langword="true" /> Jeśli powiadomienia o zmianie wartości mogą pochodzić od poza deskryptora właściwości; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc07-287">
              <see langword="true" /> if value change notifications may originate from outside the property descriptor; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc07-288"><xref:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents%2A> Właściwość wskazuje, czy powiadomienia o zmianie wartości dla tej właściwości mogą pochodzić od poza deskryptora właściwości, takie jak ze składnika, lub czy powiadomienia będą pochodzić wyłącznie od bezpośrednie wywołania <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="ccc07-288">The <xref:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents%2A> property indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to the <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> method.</span></span> <span data-ttu-id="ccc07-289">Na przykład mogą wdrożyć składnik <xref:System.ComponentModel.INotifyPropertyChanged> interfejsu lub mogą mieć jawnego `name.Changed` zdarzeń dla tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="ccc07-289">For example, the component may implement the <xref:System.ComponentModel.INotifyPropertyChanged> interface, or may have an explicit `name.Changed` event for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>