<Type Name="PropertyDescriptor" FullName="System.ComponentModel.PropertyDescriptor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e3bb3099bb34704ef8c5392628794c99b8ea8645" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69326894" /></Metadata><TypeSignature Language="C#" Value="public abstract class PropertyDescriptor : System.ComponentModel.MemberDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PropertyDescriptor extends System.ComponentModel.MemberDescriptor" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.PropertyDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PropertyDescriptor&#xA;Inherits MemberDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyDescriptor abstract : System::ComponentModel::MemberDescriptor" />
  <TypeSignature Language="F#" Value="type PropertyDescriptor = class&#xA;    inherit MemberDescriptor" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.MemberDescriptor</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="51115-101">Zapewnia abstrakcję właściwości klasy.</span><span class="sxs-lookup"><span data-stu-id="51115-101">Provides an abstraction of a property on a class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51115-102">Opis właściwości składa się z nazwy, jej atrybutów, klasy składnika, z którą skojarzona jest właściwość, i typu właściwości.</span><span class="sxs-lookup"><span data-stu-id="51115-102">A description of a property consists of a name, its attributes, the component class that the property is associated with, and the type of the property.</span></span>  
  
 <span data-ttu-id="51115-103"><xref:System.ComponentModel.PropertyDescriptor>zapewnia następujące właściwości i metody:</span><span class="sxs-lookup"><span data-stu-id="51115-103"><xref:System.ComponentModel.PropertyDescriptor> provides the following properties and methods:</span></span>  
  
-   <span data-ttu-id="51115-104"><xref:System.ComponentModel.PropertyDescriptor.Converter%2A>zawiera właściwość <xref:System.ComponentModel.TypeConverter> dla tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="51115-104"><xref:System.ComponentModel.PropertyDescriptor.Converter%2A> contains the <xref:System.ComponentModel.TypeConverter> for this property.</span></span>  
  
-   <span data-ttu-id="51115-105"><xref:System.ComponentModel.PropertyDescriptor.IsLocalizable%2A>wskazuje, czy ta właściwość powinna być zlokalizowana.</span><span class="sxs-lookup"><span data-stu-id="51115-105"><xref:System.ComponentModel.PropertyDescriptor.IsLocalizable%2A> indicates whether this property should be localized.</span></span>  
  
-   <span data-ttu-id="51115-106"><xref:System.ComponentModel.PropertyDescriptor.GetEditor%2A>zwraca Edytor określonego typu.</span><span class="sxs-lookup"><span data-stu-id="51115-106"><xref:System.ComponentModel.PropertyDescriptor.GetEditor%2A> returns an editor of the specified type.</span></span>  
  
 <span data-ttu-id="51115-107"><xref:System.ComponentModel.PropertyDescriptor>dostępne są również następujące `abstract` właściwości i metody:</span><span class="sxs-lookup"><span data-stu-id="51115-107"><xref:System.ComponentModel.PropertyDescriptor> also provides the following `abstract` properties and methods:</span></span>  
  
-   <span data-ttu-id="51115-108"><xref:System.ComponentModel.PropertyDescriptor.ComponentType%2A>zawiera typ składnika, z którym jest powiązana ta właściwość.</span><span class="sxs-lookup"><span data-stu-id="51115-108"><xref:System.ComponentModel.PropertyDescriptor.ComponentType%2A> contains the type of component this property is bound to.</span></span>  
  
-   <span data-ttu-id="51115-109"><xref:System.ComponentModel.PropertyDescriptor.IsReadOnly%2A>wskazuje, czy ta właściwość jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="51115-109"><xref:System.ComponentModel.PropertyDescriptor.IsReadOnly%2A> indicates whether this property is read-only.</span></span>  
  
-   <span data-ttu-id="51115-110"><xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A>Pobiera typ właściwości.</span><span class="sxs-lookup"><span data-stu-id="51115-110"><xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> gets the type of the property.</span></span>  
  
-   <span data-ttu-id="51115-111"><xref:System.ComponentModel.PropertyDescriptor.CanResetValue%2A>wskazuje, czy Resetowanie składnika powoduje zmianę wartości składnika.</span><span class="sxs-lookup"><span data-stu-id="51115-111"><xref:System.ComponentModel.PropertyDescriptor.CanResetValue%2A> indicates whether resetting the component changes the value of the component.</span></span>  
  
-   <span data-ttu-id="51115-112"><xref:System.ComponentModel.PropertyDescriptor.GetValue%2A>zwraca bieżącą wartość właściwości składnika.</span><span class="sxs-lookup"><span data-stu-id="51115-112"><xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> returns the current value of the property on a component.</span></span>  
  
-   <span data-ttu-id="51115-113"><xref:System.ComponentModel.PropertyDescriptor.ResetValue%2A>Resetuje wartość tej właściwości składnika.</span><span class="sxs-lookup"><span data-stu-id="51115-113"><xref:System.ComponentModel.PropertyDescriptor.ResetValue%2A> resets the value for this property of the component.</span></span>  
  
-   <span data-ttu-id="51115-114"><xref:System.ComponentModel.PropertyDescriptor.SetValue%2A>ustawia wartość składnika na inną wartość.</span><span class="sxs-lookup"><span data-stu-id="51115-114"><xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> sets the value of the component to a different value.</span></span>  
  
-   <span data-ttu-id="51115-115"><xref:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue%2A>wskazuje, czy wartość tej właściwości musi być utrwalona.</span><span class="sxs-lookup"><span data-stu-id="51115-115"><xref:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue%2A> indicates whether the value of this property needs to be persisted.</span></span>  
  
 <span data-ttu-id="51115-116">`abstract` Zazwyczaj elementy członkowskie są implementowane za pomocą odbicia.</span><span class="sxs-lookup"><span data-stu-id="51115-116">Typically, the `abstract` members are implemented through reflection.</span></span> <span data-ttu-id="51115-117">Aby uzyskać więcej informacji na temat odbicia, zobacz [](~/docs/framework/reflection-and-codedom/reflection.md)tematy w obszarze odbicie.</span><span class="sxs-lookup"><span data-stu-id="51115-117">For more information about reflection, see the topics in [Reflection](~/docs/framework/reflection-and-codedom/reflection.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51115-118">Poniższy przykład kodu jest skompilowany w przypadku przykładu w <xref:System.ComponentModel.PropertyDescriptorCollection> klasie.</span><span class="sxs-lookup"><span data-stu-id="51115-118">The following code example is built upon the example in the <xref:System.ComponentModel.PropertyDescriptorCollection> class.</span></span> <span data-ttu-id="51115-119">Drukuje informacje (kategoria, opis, nazwa wyświetlana) tekstu przycisku w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="51115-119">It prints the information (category, description, display name) of the text of a button in a text box.</span></span> <span data-ttu-id="51115-120">Przyjęto założenie `textbox1` , że `button1` i zostały utworzone na formularzu.</span><span class="sxs-lookup"><span data-stu-id="51115-120">It assumes that `button1` and `textbox1` have been instantiated on a form.</span></span>  
  
 [!code-cpp[PropertyDescriptor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/PropertyDescriptor/CPP/propertydescriptor.cpp#1)]
 [!code-csharp[PropertyDescriptor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/PropertyDescriptor/CS/propertydescriptor.cs#1)]
 [!code-vb[PropertyDescriptor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PropertyDescriptor/VB/propertydescriptor.vb#1)]  
  
 <span data-ttu-id="51115-121">Poniższy przykład kodu pokazuje, jak zaimplementować niestandardowy deskryptor właściwości, który udostępnia otokę tylko do odczytu wokół właściwości.</span><span class="sxs-lookup"><span data-stu-id="51115-121">The following code example shows how to implement a custom property descriptor that provides a read-only wrapper around a property.</span></span> <span data-ttu-id="51115-122">Jest używany w projektancie niestandardowym w celu udostępnienia deskryptora właściwości tylko do odczytu dla <xref:System.Windows.Forms.Control.Size%2A> właściwości kontrolki. `SerializeReadOnlyPropertyDescriptor`</span><span class="sxs-lookup"><span data-stu-id="51115-122">The `SerializeReadOnlyPropertyDescriptor` is used in a custom designer to provide a read-only property descriptor for the control's <xref:System.Windows.Forms.Control.Size%2A> property.</span></span>  
  
 [!code-csharp[System.ComponentModel.PropertyDescriptor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/CS/SerializeReadOnlyPropertyDescriptor.cs#1)]
 [!code-vb[System.ComponentModel.PropertyDescriptor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/VB/SerializeReadOnlyPropertyDescriptor.vb#1)]  
  
 <span data-ttu-id="51115-123">Poniższy przykład kodu przedstawia sposób korzystania z `SerializeReadOnlyPropertyDescriptor` programu w projektancie niestandardowym.</span><span class="sxs-lookup"><span data-stu-id="51115-123">The following code examples show how to use the `SerializeReadOnlyPropertyDescriptor` in a custom designer.</span></span>  
  
 [!code-csharp[System.ComponentModel.PropertyDescriptor#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/CS/DemoControlDesigner.cs#10)]
 [!code-vb[System.ComponentModel.PropertyDescriptor#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/VB/DemoControlDesigner.vb#10)]  
[!code-csharp[System.ComponentModel.PropertyDescriptor#100](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/CS/DemoControl.cs#100)]
[!code-vb[System.ComponentModel.PropertyDescriptor#100](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/VB/DemoControl.vb#100)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.MemberDescriptor" />
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.ComponentModel.DefaultValueAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="51115-124">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.PropertyDescriptor" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="51115-124">Initializes a new instance of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PropertyDescriptor (System.ComponentModel.MemberDescriptor descr);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.MemberDescriptor descr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (descr As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PropertyDescriptor(System::ComponentModel::MemberDescriptor ^ descr);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.PropertyDescriptor : System.ComponentModel.MemberDescriptor -&gt; System.ComponentModel.PropertyDescriptor" Usage="new System.ComponentModel.PropertyDescriptor descr" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="descr" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="descr"><span data-ttu-id="51115-125">A <see cref="T:System.ComponentModel.MemberDescriptor" /> , który zawiera nazwę właściwości i jej atrybuty.</span><span class="sxs-lookup"><span data-stu-id="51115-125">A <see cref="T:System.ComponentModel.MemberDescriptor" /> that contains the name of the property and its attributes.</span></span></param>
        <summary><span data-ttu-id="51115-126">Inicjuje nowe wystąpienie <see cref="T:System.ComponentModel.PropertyDescriptor" /> klasy z nazwą i atrybutami w określonym <see cref="T:System.ComponentModel.MemberDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="51115-126">Initializes a new instance of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> class with the name and attributes in the specified <see cref="T:System.ComponentModel.MemberDescriptor" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PropertyDescriptor (System.ComponentModel.MemberDescriptor descr, Attribute[] attrs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.MemberDescriptor descr, class System.Attribute[] attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (descr As MemberDescriptor, attrs As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PropertyDescriptor(System::ComponentModel::MemberDescriptor ^ descr, cli::array &lt;Attribute ^&gt; ^ attrs);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.PropertyDescriptor : System.ComponentModel.MemberDescriptor * Attribute[] -&gt; System.ComponentModel.PropertyDescriptor" Usage="new System.ComponentModel.PropertyDescriptor (descr, attrs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="descr" Type="System.ComponentModel.MemberDescriptor" />
        <Parameter Name="attrs" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="descr"><span data-ttu-id="51115-127">A <see cref="T:System.ComponentModel.MemberDescriptor" /> zawiera nazwę elementu członkowskiego i jego atrybuty.</span><span class="sxs-lookup"><span data-stu-id="51115-127">A <see cref="T:System.ComponentModel.MemberDescriptor" /> containing the name of the member and its attributes.</span></span></param>
        <param name="attrs"><span data-ttu-id="51115-128"><see cref="T:System.Attribute" /> Tablica zawierająca atrybuty, które mają zostać skojarzone z właściwością.</span><span class="sxs-lookup"><span data-stu-id="51115-128">An <see cref="T:System.Attribute" /> array containing the attributes you want to associate with the property.</span></span></param>
        <summary><span data-ttu-id="51115-129">Inicjuje nowe wystąpienie <see cref="T:System.ComponentModel.PropertyDescriptor" /> klasy z nazwą w określonym <see cref="T:System.ComponentModel.MemberDescriptor" /> i atrybutami <see cref="T:System.Attribute" /> w <see cref="T:System.ComponentModel.MemberDescriptor" /> i tablicy.</span><span class="sxs-lookup"><span data-stu-id="51115-129">Initializes a new instance of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> class with the name in the specified <see cref="T:System.ComponentModel.MemberDescriptor" /> and the attributes in both the <see cref="T:System.ComponentModel.MemberDescriptor" /> and the <see cref="T:System.Attribute" /> array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51115-130">Ten konstruktor dołącza atrybuty <xref:System.Attribute> tablicy do atrybutów <xref:System.ComponentModel.MemberDescriptor>w.</span><span class="sxs-lookup"><span data-stu-id="51115-130">This constructor appends the attributes in the <xref:System.Attribute> array to the attributes in the <xref:System.ComponentModel.MemberDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PropertyDescriptor (string name, Attribute[] attrs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string name, class System.Attribute[] attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (name As String, attrs As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PropertyDescriptor(System::String ^ name, cli::array &lt;Attribute ^&gt; ^ attrs);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.PropertyDescriptor : string * Attribute[] -&gt; System.ComponentModel.PropertyDescriptor" Usage="new System.ComponentModel.PropertyDescriptor (name, attrs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attrs" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="51115-131">Nazwa właściwości.</span><span class="sxs-lookup"><span data-stu-id="51115-131">The name of the property.</span></span></param>
        <param name="attrs"><span data-ttu-id="51115-132">Tablica typu <see cref="T:System.Attribute" /> , który zawiera atrybuty właściwości.</span><span class="sxs-lookup"><span data-stu-id="51115-132">An array of type <see cref="T:System.Attribute" /> that contains the property attributes.</span></span></param>
        <summary><span data-ttu-id="51115-133">Inicjuje nowe wystąpienie <see cref="T:System.ComponentModel.PropertyDescriptor" /> klasy z określoną nazwą i atrybutami.</span><span class="sxs-lookup"><span data-stu-id="51115-133">Initializes a new instance of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> class with the specified name and attributes.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="AddValueChanged">
      <MemberSignature Language="C#" Value="public virtual void AddValueChanged (object component, EventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddValueChanged(object component, class System.EventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddValueChanged (component As Object, handler As EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddValueChanged(System::Object ^ component, EventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member AddValueChanged : obj * EventHandler -&gt; unit&#xA;override this.AddValueChanged : obj * EventHandler -&gt; unit" Usage="propertyDescriptor.AddValueChanged (component, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="handler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="51115-134">Składnik, dla którego ma zostać dodana procedura obsługi.</span><span class="sxs-lookup"><span data-stu-id="51115-134">The component to add the handler for.</span></span></param>
        <param name="handler"><span data-ttu-id="51115-135">Delegat, który ma zostać dodany jako odbiornik.</span><span class="sxs-lookup"><span data-stu-id="51115-135">The delegate to add as a listener.</span></span></param>
        <summary><span data-ttu-id="51115-136">Umożliwia powiadamianie innych obiektów, gdy ta właściwość ulegnie zmianie.</span><span class="sxs-lookup"><span data-stu-id="51115-136">Enables other objects to be notified when this property changes.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51115-137"><paramref name="component" />lub <paramref name="handler" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="51115-137"><paramref name="component" /> or <paramref name="handler" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanResetValue">
      <MemberSignature Language="C#" Value="public abstract bool CanResetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanResetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CanResetValue (component As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool CanResetValue(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="abstract member CanResetValue : obj -&gt; bool" Usage="propertyDescriptor.CanResetValue component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="51115-138">Składnik, który ma zostać przetestowany pod kątem możliwości resetowania.</span><span class="sxs-lookup"><span data-stu-id="51115-138">The component to test for reset capability.</span></span></param>
        <summary><span data-ttu-id="51115-139">Gdy jest zastępowany w klasie pochodnej, zwraca czy Resetowanie obiektu zmienia jego wartość.</span><span class="sxs-lookup"><span data-stu-id="51115-139">When overridden in a derived class, returns whether resetting an object changes its value.</span></span></summary>
        <returns><span data-ttu-id="51115-140"><see langword="true" />Jeśli Resetowanie składnika zmieni jego wartość, w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="51115-140"><see langword="true" /> if resetting the component changes its value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51115-141">Zazwyczaj ta metoda jest implementowana poprzez odbicie.</span><span class="sxs-lookup"><span data-stu-id="51115-141">Typically, this method is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="51115-142">Gdy jest zastępowany w klasie pochodnej, ta metoda szuka <see cref="T:System.ComponentModel.DefaultValueAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="51115-142">When overridden in a derived class, this method looks for a <see cref="T:System.ComponentModel.DefaultValueAttribute" />.</span></span> <span data-ttu-id="51115-143">Jeśli zostanie znaleziony, porównuje wartość atrybutu z bieżącą wartością właściwości.</span><span class="sxs-lookup"><span data-stu-id="51115-143">If it finds one, it compares the value of the attribute with the property's current value.</span></span> <span data-ttu-id="51115-144">Zwraca <see langword="true" /> , gdy wartość domyślna nie jest zgodna z bieżącą wartością właściwości.</span><span class="sxs-lookup"><span data-stu-id="51115-144">It returns <see langword="true" /> when the default value does not match the property's current value.</span></span> <span data-ttu-id="51115-145">Jeśli ta metoda nie może znaleźć <see cref="T:System.ComponentModel.DefaultValueAttribute" />, szuka metody "ShouldPersistMyProperty", która jest wymagana do zaimplementowania siebie.</span><span class="sxs-lookup"><span data-stu-id="51115-145">If this method cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" />, it looks for a "ShouldPersistMyProperty" method that you need to implement yourself.</span></span> <span data-ttu-id="51115-146">Jeśli zostanie znalezione, <see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /> zwraca wartość zwracaną przez "ShouldPersistMyProperty".</span><span class="sxs-lookup"><span data-stu-id="51115-146">If this is found, <see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /> returns what "ShouldPersistMyProperty" returns.</span></span> <span data-ttu-id="51115-147">W przeciwnym razie szuka metody "ResetMyProperty", która jest wymagana do zaimplementowania siebie.</span><span class="sxs-lookup"><span data-stu-id="51115-147">Otherwise, it looks for a "ResetMyProperty" method that you need to implement yourself.</span></span> <span data-ttu-id="51115-148">Jeśli zostanie znalezione, <see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /> zwraca. <see langword="true" /></span><span class="sxs-lookup"><span data-stu-id="51115-148">If this is found, <see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /> returns <see langword="true" />.</span></span> <span data-ttu-id="51115-149">Jeśli nie można znaleźć <see cref="T:System.ComponentModel.DefaultValueAttribute" />, Metoda "ShouldPersistMyProperty" lub "ResetMyProperty", a następnie zwraca wartość. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="51115-149">If it cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" />, a "ShouldPersistMyProperty" method, or a "ResetMyProperty" method, then it returns <see langword="false" />.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="ComponentType">
      <MemberSignature Language="C#" Value="public abstract Type ComponentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ComponentType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.ComponentType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ComponentType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ComponentType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ComponentType : Type" Usage="System.ComponentModel.PropertyDescriptor.ComponentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51115-150">Gdy jest zastępowany w klasie pochodnej, pobiera typ składnika, z którym jest powiązana ta właściwość.</span><span class="sxs-lookup"><span data-stu-id="51115-150">When overridden in a derived class, gets the type of the component this property is bound to.</span></span></summary>
        <value><span data-ttu-id="51115-151">Reprezentuje typ składnika, z którym jest powiązana ta właściwość. <see cref="T:System.Type" /></span><span class="sxs-lookup"><span data-stu-id="51115-151">A <see cref="T:System.Type" /> that represents the type of component this property is bound to.</span></span> <span data-ttu-id="51115-152">Gdy są wywoływane <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> metody lub,określonyobiektmożebyćwystąpieniemtegotypu.<see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /></span><span class="sxs-lookup"><span data-stu-id="51115-152">When the <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> or <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> methods are invoked, the object specified might be an instance of this type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51115-153">Zazwyczaj ta właściwość jest implementowana poprzez odbicie.</span><span class="sxs-lookup"><span data-stu-id="51115-153">Typically, this property is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Converter">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.TypeConverter Converter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.TypeConverter Converter" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.Converter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Converter As TypeConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::TypeConverter ^ Converter { System::ComponentModel::TypeConverter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Converter : System.ComponentModel.TypeConverter" Usage="System.ComponentModel.PropertyDescriptor.Converter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51115-154">Pobiera konwerter typu dla tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="51115-154">Gets the type converter for this property.</span></span></summary>
        <value><span data-ttu-id="51115-155">, Który jest używany do <see cref="T:System.Type" /> konwersji tej właściwości. <see cref="T:System.ComponentModel.TypeConverter" /></span><span class="sxs-lookup"><span data-stu-id="51115-155">A <see cref="T:System.ComponentModel.TypeConverter" /> that is used to convert the <see cref="T:System.Type" /> of this property.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected object CreateInstance (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object CreateInstance(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ CreateInstance(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.CreateInstance : Type -&gt; obj" Usage="propertyDescriptor.CreateInstance type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="51115-156">Reprezentuje typ, który ma zostać utworzony. <see cref="T:System.Type" /></span><span class="sxs-lookup"><span data-stu-id="51115-156">A <see cref="T:System.Type" /> that represents the type to create.</span></span></param>
        <summary><span data-ttu-id="51115-157">Tworzy wystąpienie określonego typu.</span><span class="sxs-lookup"><span data-stu-id="51115-157">Creates an instance of the specified type.</span></span></summary>
        <returns><span data-ttu-id="51115-158">Nowe wystąpienie typu.</span><span class="sxs-lookup"><span data-stu-id="51115-158">A new instance of the type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51115-159"><xref:System.ComponentModel.PropertyDescriptor.CreateInstance%2A>szuka konstruktora, który przyjmuje określony typ.</span><span class="sxs-lookup"><span data-stu-id="51115-159"><xref:System.ComponentModel.PropertyDescriptor.CreateInstance%2A> looks for a constructor that takes the specified type.</span></span> <span data-ttu-id="51115-160">W przypadku znalezienia konstruktora, typ właściwości jest przenoszona.</span><span class="sxs-lookup"><span data-stu-id="51115-160">If it finds a constructor, the type of the property is passed in.</span></span>  
  
 <span data-ttu-id="51115-161">Konwertery i edytory używają tej metody do tworzenia wersji składnika.</span><span class="sxs-lookup"><span data-stu-id="51115-161">Converters and editors use this method to create versions of a component.</span></span> <span data-ttu-id="51115-162">Ta metoda umożliwia ponownie użycie pojedynczego składnika dla więcej niż jednego typu.</span><span class="sxs-lookup"><span data-stu-id="51115-162">This method enables a single component to be reused for more than one type.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="51115-163">w celu uzyskania dostępu do prywatnych składowych i metadanych klas.</span><span class="sxs-lookup"><span data-stu-id="51115-163">for access to private class members and metadata.</span></span> <span data-ttu-id="51115-164">Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="51115-164">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="T:System.Drawing.Design.UITypeEditor" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="propertyDescriptor.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="51115-165">Obiekt, który ma zostać porównany <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="51115-165">The object to compare to this <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span></span></param>
        <summary><span data-ttu-id="51115-166">Porównuje to z innym obiektem, aby sprawdzić, czy są one równoważne.</span><span class="sxs-lookup"><span data-stu-id="51115-166">Compares this to another object to see if they are equivalent.</span></span></summary>
        <returns><span data-ttu-id="51115-167"><see langword="true" />Jeśli wartości są równoważne; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="51115-167"><see langword="true" /> if the values are equivalent; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillAttributes">
      <MemberSignature Language="C#" Value="protected override void FillAttributes (System.Collections.IList attributeList);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void FillAttributes(class System.Collections.IList attributeList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub FillAttributes (attributeList As IList)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void FillAttributes(System::Collections::IList ^ attributeList);" />
      <MemberSignature Language="F#" Value="override this.FillAttributes : System.Collections.IList -&gt; unit" Usage="propertyDescriptor.FillAttributes attributeList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeList" Type="System.Collections.IList" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="attributeList"><span data-ttu-id="51115-168"><see cref="T:System.Collections.IList" /> , Który wyświetla listę atrybutów w klasie nadrzędnej.</span><span class="sxs-lookup"><span data-stu-id="51115-168">An <see cref="T:System.Collections.IList" /> that lists the attributes in the parent class.</span></span> <span data-ttu-id="51115-169">Początkowo jest to puste.</span><span class="sxs-lookup"><span data-stu-id="51115-169">Initially, this is empty.</span></span></param>
        <summary><span data-ttu-id="51115-170">Dodaje atrybuty <see cref="T:System.ComponentModel.PropertyDescriptor" /> do określonej listy atrybutów w klasie nadrzędnej.</span><span class="sxs-lookup"><span data-stu-id="51115-170">Adds the attributes of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> to the specified list of attributes in the parent class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51115-171">W przypadku zduplikowanych atrybutów, ostatnia dodana do listy zostanie zachowana.</span><span class="sxs-lookup"><span data-stu-id="51115-171">For duplicate attributes, the last one added to the list will be kept.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="51115-172">Zwraca wartość <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</span><span class="sxs-lookup"><span data-stu-id="51115-172">Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetChildProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetChildProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetChildProperties" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildProperties () As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetChildProperties();" />
      <MemberSignature Language="F#" Value="member this.GetChildProperties : unit -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="propertyDescriptor.GetChildProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51115-173">Zwraca wartość domyślną <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</span><span class="sxs-lookup"><span data-stu-id="51115-173">Returns the default <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</span></span></summary>
        <returns><span data-ttu-id="51115-174">Kolekcja deskryptora właściwości.</span><span class="sxs-lookup"><span data-stu-id="51115-174">A collection of property descriptor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51115-175">Ta metoda przekazuje `null` `instance` parametr i `filter` parametr.</span><span class="sxs-lookup"><span data-stu-id="51115-175">This method passes `null` for both the `instance` parameter and the `filter` parameter.</span></span>  
  
 <span data-ttu-id="51115-176">Właściwości `instance` parametru mogą się różnić od właściwości klasy, ponieważ kontener może dodawać lub usuwać właściwości, `instance` Jeśli parametr jest zlokalizowany.</span><span class="sxs-lookup"><span data-stu-id="51115-176">The properties for the `instance` parameter can differ from the properties of a class, because the container can add or remove properties if the `instance` parameter is sited.</span></span>  
  
 <span data-ttu-id="51115-177">Parametr może mieszać <xref:System.Type> i<xref:System.Attribute>obiekty. `filter`</span><span class="sxs-lookup"><span data-stu-id="51115-177">The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="51115-178">Filtrowanie jest zdefiniowane przy użyciu następujących reguł:</span><span class="sxs-lookup"><span data-stu-id="51115-178">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="51115-179">Obiekt jest traktowany jako symbol wieloznaczny; pasuje do dowolnej właściwości, <xref:System.Type> która ma w jej zestawie atrybutów. <xref:System.Type></span><span class="sxs-lookup"><span data-stu-id="51115-179">A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="51115-180">Jeśli właściwość nie ma <xref:System.Attribute> tej samej klasy, właściwość nie zostanie uwzględniona w zwracanej tablicy.</span><span class="sxs-lookup"><span data-stu-id="51115-180">If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.</span></span>  
  
-   <span data-ttu-id="51115-181">Jeśli atrybut jest wystąpieniem <xref:System.Attribute>, właściwość musi być dokładnym dopasowaniem do uwzględnienia w zwracanej tablicy.</span><span class="sxs-lookup"><span data-stu-id="51115-181">If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.</span></span>  
  
-   <span data-ttu-id="51115-182">Jeśli określisz <xref:System.Attribute> i jest to właściwość domyślna, zostanie ona uwzględniona w zwracanej tablicy, nawet jeśli nie ma żadnego <xref:System.Attribute> wystąpienia właściwości.</span><span class="sxs-lookup"><span data-stu-id="51115-182">If you specify an <xref:System.Attribute> and it is the default property, it will be included in the returned array, even if there is no instance of <xref:System.Attribute> in the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="GetChildProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetChildProperties (Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetChildProperties(class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildProperties (filter As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetChildProperties(cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="member this.GetChildProperties : Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="propertyDescriptor.GetChildProperties filter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="filter"><span data-ttu-id="51115-183">Tablica typu <see cref="T:System.Attribute" /> do użycia jako filtr.</span><span class="sxs-lookup"><span data-stu-id="51115-183">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span></span></param>
        <summary><span data-ttu-id="51115-184"><see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> Zwraca przy użyciu określonej tablicy atrybutów jako filtr.</span><span class="sxs-lookup"><span data-stu-id="51115-184">Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> using a specified array of attributes as a filter.</span></span></summary>
        <returns><span data-ttu-id="51115-185"><see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> Z właściwościami, które pasują do określonych atrybutów.</span><span class="sxs-lookup"><span data-stu-id="51115-185">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the specified attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51115-186">Ta metoda przekazuje `null` `instance` parametr.</span><span class="sxs-lookup"><span data-stu-id="51115-186">This method passes `null` for the `instance` parameter.</span></span>  
  
 <span data-ttu-id="51115-187">Właściwości `instance` parametru mogą się różnić od właściwości klasy, ponieważ lokacja może dodawać lub usuwać właściwości, `instance` Jeśli parametr jest zlokalizowany.</span><span class="sxs-lookup"><span data-stu-id="51115-187">The properties for the `instance` parameter can differ from the properties of a class, because the site can add or remove properties if the `instance` parameter is sited.</span></span>  
  
 <span data-ttu-id="51115-188">Parametr może mieszać <xref:System.Type> i<xref:System.Attribute>obiekty. `filter`</span><span class="sxs-lookup"><span data-stu-id="51115-188">The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="51115-189">Filtrowanie jest zdefiniowane przy użyciu następujących reguł:</span><span class="sxs-lookup"><span data-stu-id="51115-189">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="51115-190">Obiekt jest traktowany jako symbol wieloznaczny; pasuje do dowolnej właściwości, <xref:System.Type> która ma w jej zestawie atrybutów. <xref:System.Type></span><span class="sxs-lookup"><span data-stu-id="51115-190">A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="51115-191">Jeśli właściwość nie ma <xref:System.Attribute> tej samej klasy, właściwość nie zostanie uwzględniona w zwracanej tablicy.</span><span class="sxs-lookup"><span data-stu-id="51115-191">If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.</span></span>  
  
-   <span data-ttu-id="51115-192">Jeśli atrybut jest wystąpieniem <xref:System.Attribute>, właściwość musi być dokładnym dopasowaniem do uwzględnienia w zwracanej tablicy.</span><span class="sxs-lookup"><span data-stu-id="51115-192">If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.</span></span>  
  
-   <span data-ttu-id="51115-193">Jeśli określisz <xref:System.Attribute> wystąpienie i jest to właściwość domyślna, zostanie ona uwzględniona w zwracanej tablicy, nawet jeśli nie ma żadnego wystąpienia <xref:System.Attribute> właściwości.</span><span class="sxs-lookup"><span data-stu-id="51115-193">If you specify an <xref:System.Attribute> instance and it is the default property, it will be included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="GetChildProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetChildProperties (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetChildProperties(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildProperties (instance As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetChildProperties(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="member this.GetChildProperties : obj -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="propertyDescriptor.GetChildProperties instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="51115-194">Składnik, dla którego mają zostać pobrane właściwości.</span><span class="sxs-lookup"><span data-stu-id="51115-194">A component to get the properties for.</span></span></param>
        <summary><span data-ttu-id="51115-195"><see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> Zwraca dla danego obiektu.</span><span class="sxs-lookup"><span data-stu-id="51115-195">Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> for a given object.</span></span></summary>
        <returns><span data-ttu-id="51115-196"><see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> Z właściwościami dla określonego składnika.</span><span class="sxs-lookup"><span data-stu-id="51115-196">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51115-197">Ta metoda przekazuje `null` `filter` parametr.</span><span class="sxs-lookup"><span data-stu-id="51115-197">This method passes `null` for the `filter` parameter.</span></span>  
  
 <span data-ttu-id="51115-198">Właściwości `instance` parametru mogą się różnić od właściwości klasy, ponieważ lokacja może dodawać lub usuwać właściwości, `instance` Jeśli parametr jest zlokalizowany.</span><span class="sxs-lookup"><span data-stu-id="51115-198">The properties for the `instance` parameter can differ from the properties of a class, because the site can add or remove properties if the `instance` parameter is sited.</span></span>  
  
 <span data-ttu-id="51115-199">Parametr może mieszać <xref:System.Type> i<xref:System.Attribute>obiekty. `filter`</span><span class="sxs-lookup"><span data-stu-id="51115-199">The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="51115-200">Filtrowanie jest zdefiniowane przy użyciu następujących reguł:</span><span class="sxs-lookup"><span data-stu-id="51115-200">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="51115-201">Obiekt jest traktowany jako symbol wieloznaczny; pasuje do dowolnej właściwości, <xref:System.Type> która ma w jej zestawie atrybutów. <xref:System.Type></span><span class="sxs-lookup"><span data-stu-id="51115-201">A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="51115-202">Jeśli właściwość nie ma <xref:System.Attribute> tej samej klasy, właściwość nie zostanie uwzględniona w zwracanej tablicy.</span><span class="sxs-lookup"><span data-stu-id="51115-202">If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.</span></span>  
  
-   <span data-ttu-id="51115-203">Jeśli atrybut jest wystąpieniem <xref:System.Attribute>, właściwość musi być dokładnym dopasowaniem do uwzględnienia w zwracanej tablicy.</span><span class="sxs-lookup"><span data-stu-id="51115-203">If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.</span></span>  
  
-   <span data-ttu-id="51115-204">Jeśli określisz <xref:System.Attribute> wystąpienie i jest to właściwość domyślna, zostanie ona uwzględniona w zwracanej tablicy, nawet jeśli nie ma żadnego wystąpienia <xref:System.Attribute> właściwości.</span><span class="sxs-lookup"><span data-stu-id="51115-204">If you specify an <xref:System.Attribute> instance and it is the default property, it will be included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="GetChildProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetChildProperties (object instance, Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetChildProperties(object instance, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChildProperties (instance As Object, filter As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetChildProperties(System::Object ^ instance, cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="abstract member GetChildProperties : obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetChildProperties : obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="propertyDescriptor.GetChildProperties (instance, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="51115-205">Składnik, dla którego mają zostać pobrane właściwości.</span><span class="sxs-lookup"><span data-stu-id="51115-205">A component to get the properties for.</span></span></param>
        <param name="filter"><span data-ttu-id="51115-206">Tablica typu <see cref="T:System.Attribute" /> do użycia jako filtr.</span><span class="sxs-lookup"><span data-stu-id="51115-206">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span></span></param>
        <summary><span data-ttu-id="51115-207"><see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> Zwraca dla danego obiektu, używając określonej tablicy atrybutów jako filtru.</span><span class="sxs-lookup"><span data-stu-id="51115-207">Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> for a given object using a specified array of attributes as a filter.</span></span></summary>
        <returns><span data-ttu-id="51115-208"><see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> Z właściwościami, które pasują do określonych atrybutów dla określonego składnika.</span><span class="sxs-lookup"><span data-stu-id="51115-208">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the specified attributes for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51115-209">Właściwości `instance` parametru mogą się różnić od właściwości klasy, ponieważ lokacja może dodawać lub usuwać właściwości, `instance` Jeśli parametr jest zlokalizowany.</span><span class="sxs-lookup"><span data-stu-id="51115-209">The properties for the `instance` parameter can differ from the properties of a class, because the site can add or remove properties if the `instance` parameter is sited.</span></span>  
  
 <span data-ttu-id="51115-210">Parametr może mieszać <xref:System.Type> i<xref:System.Attribute>obiekty. `filter`</span><span class="sxs-lookup"><span data-stu-id="51115-210">The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="51115-211">Filtrowanie jest zdefiniowane przy użyciu następujących reguł:</span><span class="sxs-lookup"><span data-stu-id="51115-211">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="51115-212">Obiekt jest traktowany jako symbol wieloznaczny; pasuje do dowolnej właściwości, <xref:System.Type> która ma w jej zestawie atrybutów. <xref:System.Type></span><span class="sxs-lookup"><span data-stu-id="51115-212">A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="51115-213">Jeśli właściwość nie ma <xref:System.Attribute> tej samej klasy, właściwość nie zostanie uwzględniona w zwracanej tablicy.</span><span class="sxs-lookup"><span data-stu-id="51115-213">If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.</span></span>  
  
-   <span data-ttu-id="51115-214">Jeśli atrybut jest wystąpieniem <xref:System.Attribute>, właściwość musi być dokładnym dopasowaniem do uwzględnienia w zwracanej tablicy.</span><span class="sxs-lookup"><span data-stu-id="51115-214">If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.</span></span>  
  
-   <span data-ttu-id="51115-215">Jeśli określisz <xref:System.Attribute> wystąpienie i jest to właściwość domyślna, zostanie ona uwzględniona w zwracanej tablicy, nawet jeśli nie ma żadnego wystąpienia <xref:System.Attribute> właściwości.</span><span class="sxs-lookup"><span data-stu-id="51115-215">If you specify an <xref:System.Attribute> instance and it is the default property, it will be included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
 <span data-ttu-id="51115-216">Ogólnie rzecz biorąc, właściwości podrzędne powinny być zwracane przez <xref:System.ComponentModel.TypeConverter.GetProperties%2A> implementację elementu <xref:System.ComponentModel.TypeConverter> Członkowskiego zwracanej z tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="51115-216">Generally, child properties should be returned by implementing the <xref:System.ComponentModel.TypeConverter.GetProperties%2A> member of the <xref:System.ComponentModel.TypeConverter> returned from this property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public virtual object GetEditor (Type editorBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetEditor(class System.Type editorBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEditor (editorBaseType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetEditor(Type ^ editorBaseType);" />
      <MemberSignature Language="F#" Value="abstract member GetEditor : Type -&gt; obj&#xA;override this.GetEditor : Type -&gt; obj" Usage="propertyDescriptor.GetEditor editorBaseType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="editorBaseType"><span data-ttu-id="51115-217">Typ podstawowy edytora, który jest używany do odróżnienia między wieloma edytorami obsługiwanymi przez właściwość.</span><span class="sxs-lookup"><span data-stu-id="51115-217">The base type of editor, which is used to differentiate between multiple editors that a property supports.</span></span></param>
        <summary><span data-ttu-id="51115-218">Pobiera Edytor określonego typu.</span><span class="sxs-lookup"><span data-stu-id="51115-218">Gets an editor of the specified type.</span></span></summary>
        <returns><span data-ttu-id="51115-219">Wystąpienie żądanego typu edytora lub <see langword="null" /> nie można odnaleźć edytora.</span><span class="sxs-lookup"><span data-stu-id="51115-219">An instance of the requested editor type, or <see langword="null" /> if an editor cannot be found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="propertyDescriptor.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51115-220">Zwraca kod skrótu dla tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="51115-220">Returns the hash code for this object.</span></span></summary>
        <returns><span data-ttu-id="51115-221">Kod skrótu dla tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="51115-221">The hash code for this object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInvocationTarget">
      <MemberSignature Language="C#" Value="protected override object GetInvocationTarget (Type type, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object GetInvocationTarget(class System.Type type, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ GetInvocationTarget(Type ^ type, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="override this.GetInvocationTarget : Type * obj -&gt; obj" Usage="propertyDescriptor.GetInvocationTarget (type, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="instance" Type="System.Object" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="51115-222"><see cref="T:System.Type" /> Obiekt docelowy wywołania.</span><span class="sxs-lookup"><span data-stu-id="51115-222">The <see cref="T:System.Type" /> of the invocation target.</span></span></param>
        <param name="instance"><span data-ttu-id="51115-223">Potencjalny obiekt docelowy wywołania.</span><span class="sxs-lookup"><span data-stu-id="51115-223">The potential invocation target.</span></span></param>
        <summary><span data-ttu-id="51115-224">Ta metoda zwraca obiekt, który powinien być używany podczas wywoływania elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="51115-224">This method returns the object that should be used during invocation of members.</span></span></summary>
        <returns><span data-ttu-id="51115-225"><see cref="T:System.Object" /> , Który powinien być używany podczas wywoływania elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="51115-225">The <see cref="T:System.Object" /> that should be used during invocation of members.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51115-226">Zazwyczaj wartość zwracana będzie taka sama jak `instance` w przekazaniu.</span><span class="sxs-lookup"><span data-stu-id="51115-226">Typically, the return value will be the same as the `instance` passed in.</span></span> <span data-ttu-id="51115-227">Jeśli ktoś skojarzył inny obiekt z tym wystąpieniem lub jeśli wystąpienie jest deskryptorem typu niestandardowego, <xref:System.ComponentModel.PropertyDescriptor.GetInvocationTarget%2A> Metoda może zwrócić inną wartość.</span><span class="sxs-lookup"><span data-stu-id="51115-227">If someone associated another object with this instance, or if the instance is a custom type descriptor, the <xref:System.ComponentModel.PropertyDescriptor.GetInvocationTarget%2A> method may return a different value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeFromName">
      <MemberSignature Language="C#" Value="protected Type GetTypeFromName (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Type GetTypeFromName(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetTypeFromName (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Type ^ GetTypeFromName(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="member this.GetTypeFromName : string -&gt; Type" Usage="propertyDescriptor.GetTypeFromName typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="51115-228">Kwalifikowana dla zestawu nazwa typu do pobrania.</span><span class="sxs-lookup"><span data-stu-id="51115-228">The assembly-qualified name of the type to retrieve.</span></span></param>
        <summary><span data-ttu-id="51115-229">Zwraca typ przy użyciu jego nazwy.</span><span class="sxs-lookup"><span data-stu-id="51115-229">Returns a type using its name.</span></span></summary>
        <returns><span data-ttu-id="51115-230">Jest <see cref="T:System.Type" /> to zgodne z podaną nazwą typu lub <see langword="null" /> Jeśli nie można znaleźć dopasowania.</span><span class="sxs-lookup"><span data-stu-id="51115-230">A <see cref="T:System.Type" /> that matches the given type name, or <see langword="null" /> if a match cannot be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51115-231">Aby znaleźć odpowiedni typ, ta metoda najpierw sprawdza zestaw typu, który to <xref:System.ComponentModel.PropertyDescriptor> odwołanie.</span><span class="sxs-lookup"><span data-stu-id="51115-231">To find the appropriate type, this method first checks the assembly of the type that this <xref:System.ComponentModel.PropertyDescriptor> references.</span></span> <span data-ttu-id="51115-232">Jeśli nie znajdzie typu w zestawie, wywołuje <xref:System.Type.GetType%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="51115-232">If it does not find the type in the assembly, it calls <xref:System.Type.GetType%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public abstract object GetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetValue (component As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetValue(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : obj -&gt; obj" Usage="propertyDescriptor.GetValue component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="51115-233">Składnik z właściwością, dla której ma zostać pobrana wartość.</span><span class="sxs-lookup"><span data-stu-id="51115-233">The component with the property for which to retrieve the value.</span></span></param>
        <summary><span data-ttu-id="51115-234">Gdy jest zastępowany w klasie pochodnej, pobiera bieżącą wartość właściwości w składniku.</span><span class="sxs-lookup"><span data-stu-id="51115-234">When overridden in a derived class, gets the current value of the property on a component.</span></span></summary>
        <returns><span data-ttu-id="51115-235">Wartość właściwości danego składnika.</span><span class="sxs-lookup"><span data-stu-id="51115-235">The value of a property for a given component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51115-236">Zazwyczaj ta metoda jest implementowana poprzez odbicie.</span><span class="sxs-lookup"><span data-stu-id="51115-236">Typically, this method is implemented through reflection.</span></span>  
  
 <span data-ttu-id="51115-237">Ta metoda automatycznie wywołuje metodę prezmiany, <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A>i metodę po zmianie, <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A>, z <xref:System.ComponentModel.Design.IComponentChangeService>.</span><span class="sxs-lookup"><span data-stu-id="51115-237">This method automatically calls the pre-change method, <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A>, and post-change method, <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A>, of the <xref:System.ComponentModel.Design.IComponentChangeService>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="51115-238">Podczas przesłonięcia tej metody pobiera bieżącą wartość właściwości przez wywołanie metody "GetMyProperty", która ma być zaimplementowana.</span><span class="sxs-lookup"><span data-stu-id="51115-238">When you override this method, it gets the current value of the property by invoking a "GetMyProperty" method that you need to implement.</span></span> <span data-ttu-id="51115-239">Wyjątek w tej metodzie powinien przechodzić przez.</span><span class="sxs-lookup"><span data-stu-id="51115-239">An exception in that method should pass through.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetValueChangedHandler">
      <MemberSignature Language="C#" Value="protected internal EventHandler GetValueChangedHandler (object component);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.EventHandler GetValueChangedHandler(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function GetValueChangedHandler (component As Object) As EventHandler" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; EventHandler ^ GetValueChangedHandler(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="member this.GetValueChangedHandler : obj -&gt; EventHandler" Usage="propertyDescriptor.GetValueChangedHandler component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="51115-240">Składnik, dla którego mają zostać pobrane programy obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="51115-240">The component for which to retrieve event handlers.</span></span></param>
        <summary><span data-ttu-id="51115-241">Pobiera bieżący zestaw programów obsługi zdarzeń <c>ValueChanged</c> dla określonego składnika</span><span class="sxs-lookup"><span data-stu-id="51115-241">Retrieves the current set of <c>ValueChanged</c> event handlers for a specific component</span></span></summary>
        <returns><span data-ttu-id="51115-242">Połączony program obsługi zdarzeń multiemisji lub <see langword="null" /> w przypadku, gdy żadne programy obsługi zdarzeń nie są obecnie przypisane do. <paramref name="component" /></span><span class="sxs-lookup"><span data-stu-id="51115-242">A combined multicast event handler, or <see langword="null" /> if no event handlers are currently assigned to <paramref name="component" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocalizable">
      <MemberSignature Language="C#" Value="public virtual bool IsLocalizable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocalizable" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.IsLocalizable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsLocalizable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsLocalizable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLocalizable : bool" Usage="System.ComponentModel.PropertyDescriptor.IsLocalizable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51115-243">Pobiera wartość wskazującą, czy ta właściwość powinna być zlokalizowana, zgodnie z <see cref="T:System.ComponentModel.LocalizableAttribute" />opisem w.</span><span class="sxs-lookup"><span data-stu-id="51115-243">Gets a value indicating whether this property should be localized, as specified in the <see cref="T:System.ComponentModel.LocalizableAttribute" />.</span></span></summary>
        <value><span data-ttu-id="51115-244"><see langword="true" />Jeśli element członkowski jest oznaczony z <see cref="T:System.ComponentModel.LocalizableAttribute" /> ustawioną na <see langword="true" />; w przeciwnym razie,. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="51115-244"><see langword="true" /> if the member is marked with the <see cref="T:System.ComponentModel.LocalizableAttribute" /> set to <see langword="true" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51115-245">Gdy właściwość jest oznaczona z <xref:System.ComponentModel.LocalizableAttribute> zestawem na `true` i użyta w projektancie wizualizacji, jego wartości są zapisywane w pliku zasobów.</span><span class="sxs-lookup"><span data-stu-id="51115-245">When a property is marked with the <xref:System.ComponentModel.LocalizableAttribute> set to `true` and used in a visual designer, its values are saved in a resource file.</span></span> <span data-ttu-id="51115-246">Jeśli oznaczesz Właściwość atrybutem, a następnie ustawisz właściwość w kodzie, pliki zasobów nie będą używane.</span><span class="sxs-lookup"><span data-stu-id="51115-246">If you mark a property with the attribute and then set the property in code, resource files are not used.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.LocalizableAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public abstract bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.ComponentModel.PropertyDescriptor.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51115-247">Gdy jest zastępowany w klasie pochodnej, pobiera wartość wskazującą, czy ta właściwość jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="51115-247">When overridden in a derived class, gets a value indicating whether this property is read-only.</span></span></summary>
        <value><span data-ttu-id="51115-248"><see langword="true" />Jeśli właściwość jest tylko do odczytu; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="51115-248"><see langword="true" /> if the property is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.ReadOnlyAttribute" />
      </Docs>
    </Member>
    <Member MemberName="OnValueChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnValueChanged (object component, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValueChanged(object component, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValueChanged (component As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValueChanged(System::Object ^ component, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnValueChanged : obj * EventArgs -&gt; unit&#xA;override this.OnValueChanged : obj * EventArgs -&gt; unit" Usage="propertyDescriptor.OnValueChanged (component, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="51115-249">Obiekt, który wywołuje zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="51115-249">The object that raises the event.</span></span></param>
        <param name="e"><span data-ttu-id="51115-250"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="51115-250">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="51115-251">Wywołuje zaimplementowane zdarzenie <c>ValueChanged</c> .</span><span class="sxs-lookup"><span data-stu-id="51115-251">Raises the <c>ValueChanged</c> event that you implemented.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51115-252">Ta metoda powinna być wywoływana przez implementację deskryptora właściwości, gdy wartość właściwości została zmieniona.</span><span class="sxs-lookup"><span data-stu-id="51115-252">This method should be called by your property descriptor implementation when the property value has changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public abstract Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ PropertyType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyType : Type" Usage="System.ComponentModel.PropertyDescriptor.PropertyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51115-253">Gdy jest zastępowany w klasie pochodnej, pobiera typ właściwości.</span><span class="sxs-lookup"><span data-stu-id="51115-253">When overridden in a derived class, gets the type of the property.</span></span></summary>
        <value><span data-ttu-id="51115-254"><see cref="T:System.Type" /> Reprezentujący typ właściwości.</span><span class="sxs-lookup"><span data-stu-id="51115-254">A <see cref="T:System.Type" /> that represents the type of the property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51115-255">Zazwyczaj ta właściwość jest implementowana poprzez odbicie.</span><span class="sxs-lookup"><span data-stu-id="51115-255">Typically, this property is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveValueChanged">
      <MemberSignature Language="C#" Value="public virtual void RemoveValueChanged (object component, EventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveValueChanged(object component, class System.EventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveValueChanged (component As Object, handler As EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveValueChanged(System::Object ^ component, EventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member RemoveValueChanged : obj * EventHandler -&gt; unit&#xA;override this.RemoveValueChanged : obj * EventHandler -&gt; unit" Usage="propertyDescriptor.RemoveValueChanged (component, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="handler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="51115-256">Składnik służący do usuwania programu obsługi dla.</span><span class="sxs-lookup"><span data-stu-id="51115-256">The component to remove the handler for.</span></span></param>
        <param name="handler"><span data-ttu-id="51115-257">Delegat do usunięcia jako odbiornik.</span><span class="sxs-lookup"><span data-stu-id="51115-257">The delegate to remove as a listener.</span></span></param>
        <summary><span data-ttu-id="51115-258">Umożliwia powiadamianie innych obiektów, gdy ta właściwość ulegnie zmianie.</span><span class="sxs-lookup"><span data-stu-id="51115-258">Enables other objects to be notified when this property changes.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51115-259"><paramref name="component" />lub <paramref name="handler" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="51115-259"><paramref name="component" /> or <paramref name="handler" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResetValue">
      <MemberSignature Language="C#" Value="public abstract void ResetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ResetValue (component As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ResetValue(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="abstract member ResetValue : obj -&gt; unit" Usage="propertyDescriptor.ResetValue component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="51115-260">Składnik z wartością właściwości, która ma zostać przywrócona do wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="51115-260">The component with the property value that is to be reset to the default value.</span></span></param>
        <summary><span data-ttu-id="51115-261">Gdy jest zastępowany w klasie pochodnej, resetuje wartość tej właściwości składnika do wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="51115-261">When overridden in a derived class, resets the value for this property of the component to the default value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51115-262">Zazwyczaj ta metoda jest implementowana poprzez odbicie.</span><span class="sxs-lookup"><span data-stu-id="51115-262">Typically, this method is implemented through reflection.</span></span>  
  
 <span data-ttu-id="51115-263">Ta metoda określa wartość resetowania właściwości do wartości w następującej kolejności:</span><span class="sxs-lookup"><span data-stu-id="51115-263">This method determines the value to reset the property to in the following order of precedence:</span></span>  
  
1.  <span data-ttu-id="51115-264">Istnieje właściwość shadowd dla tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="51115-264">There is a shadowed property for this property.</span></span>  
  
2.  <span data-ttu-id="51115-265"><xref:System.ComponentModel.DefaultValueAttribute> Istnieje dla tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="51115-265">There is a <xref:System.ComponentModel.DefaultValueAttribute> for this property.</span></span>  
  
3.  <span data-ttu-id="51115-266">Zaimplementowano metodę "ResetMyProperty", gdzie "noproperty" jest nazwą przekazanej do niej właściwości.</span><span class="sxs-lookup"><span data-stu-id="51115-266">There is a "ResetMyProperty" method that you have implemented, where "MyProperty" is the name of the property you pass to it.</span></span>  
  
 <span data-ttu-id="51115-267">Ta metoda tworzy <xref:System.ComponentModel.Design.DesignerTransaction> automatycznie w następującej kolejności:</span><span class="sxs-lookup"><span data-stu-id="51115-267">This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> automatically in the following order:</span></span>  
  
1.  <span data-ttu-id="51115-268">Metoda wywołuje <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType> metodę w celu utworzenia nowej <xref:System.ComponentModel.Design.DesignerTransaction> do reprezentowania zmian.</span><span class="sxs-lookup"><span data-stu-id="51115-268">The method calls the <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType> method to create a new <xref:System.ComponentModel.Design.DesignerTransaction> to represent the changes.</span></span>  
  
2.  <span data-ttu-id="51115-269">Metoda wywołuje <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType> metodę w celu wskazania, że transakcja została rozpoczęta i zmiany zostaną wykonane.</span><span class="sxs-lookup"><span data-stu-id="51115-269">The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType> method to indicate that the transaction has begun and the changes are about to occur.</span></span>  
  
3.  <span data-ttu-id="51115-270">Metoda resetuje właściwość do wartości ustalonej przez kolejność sprawdzania tej metody.</span><span class="sxs-lookup"><span data-stu-id="51115-270">The method resets the property to the value determined by this method's checking order.</span></span>  
  
4.  <span data-ttu-id="51115-271">Metoda wywołuje <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType> metodę w celu wskazania, że zmiany zostały wprowadzone.</span><span class="sxs-lookup"><span data-stu-id="51115-271">The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType> method to indicate that the changes have occurred.</span></span>  
  
5.  <span data-ttu-id="51115-272">Metoda wywołuje <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType> , aby wskazać, że transakcja została ukończona.</span><span class="sxs-lookup"><span data-stu-id="51115-272">The method calls <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType> to indicate that the transaction is completed.</span></span>  
  
 <span data-ttu-id="51115-273">Celem transakcji jest wsparcie `Undo` i `Redo` funkcjonalność.</span><span class="sxs-lookup"><span data-stu-id="51115-273">The purpose of the transaction is to support `Undo` and `Redo` functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="51115-274">Gdy jest zastępowany w klasie pochodnej, ta metoda szuka <see cref="T:System.ComponentModel.DefaultValueAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="51115-274">When overridden in a derived class, this method looks for a <see cref="T:System.ComponentModel.DefaultValueAttribute" />.</span></span> <span data-ttu-id="51115-275">Jeśli znajdzie, ustawia wartość właściwości na <see cref="T:System.ComponentModel.DefaultValueAttribute" /> znalezioną.</span><span class="sxs-lookup"><span data-stu-id="51115-275">If it finds one, it sets the value of the property to the <see cref="T:System.ComponentModel.DefaultValueAttribute" /> it found.</span></span> <span data-ttu-id="51115-276">Jeśli ta metoda nie może znaleźć <see cref="T:System.ComponentModel.DefaultValueAttribute" />, szuka metody "ResetMyProperty", która ma być zaimplementowana.</span><span class="sxs-lookup"><span data-stu-id="51115-276">If this method cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" />, it looks for a "ResetMyProperty" method that you need to implement.</span></span> <span data-ttu-id="51115-277">W <see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /> przypadku znalezienia tej metody metoda wywołuje ją.</span><span class="sxs-lookup"><span data-stu-id="51115-277">If this is found, the <see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /> method invokes it.</span></span> <span data-ttu-id="51115-278">Jeśli <see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /> nie można <see cref="T:System.ComponentModel.DefaultValueAttribute" /> znaleźć metody lub "ResetMyProperty", która została zaimplementowana, nie wykonuje operacji.</span><span class="sxs-lookup"><span data-stu-id="51115-278">If <see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /> cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" /> or a "ResetMyProperty" method that you implemented, it does not perform an operation.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="SerializationVisibility">
      <MemberSignature Language="C#" Value="public System.ComponentModel.DesignerSerializationVisibility SerializationVisibility { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.DesignerSerializationVisibility SerializationVisibility" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.SerializationVisibility" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializationVisibility As DesignerSerializationVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::DesignerSerializationVisibility SerializationVisibility { System::ComponentModel::DesignerSerializationVisibility get(); };" />
      <MemberSignature Language="F#" Value="member this.SerializationVisibility : System.ComponentModel.DesignerSerializationVisibility" Usage="System.ComponentModel.PropertyDescriptor.SerializationVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DesignerSerializationVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51115-279">Pobiera wartość wskazującą, czy ta właściwość powinna być serializowana, jak określono w <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="51115-279">Gets a value indicating whether this property should be serialized, as specified in the <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" />.</span></span></summary>
        <value><span data-ttu-id="51115-280">Jedna z <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> wartości wyliczenia, która określa, czy ta właściwość powinna być serializowana.</span><span class="sxs-lookup"><span data-stu-id="51115-280">One of the <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> enumeration values that specifies whether this property should be serialized.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" />
        <altmember cref="T:System.ComponentModel.DesignerSerializationVisibility" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public abstract void SetValue (object component, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object component, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetValue (component As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetValue(System::Object ^ component, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : obj * obj -&gt; unit" Usage="propertyDescriptor.SetValue (component, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="51115-281">Składnik z wartością właściwości, która ma zostać ustawiona.</span><span class="sxs-lookup"><span data-stu-id="51115-281">The component with the property value that is to be set.</span></span></param>
        <param name="value"><span data-ttu-id="51115-282">Nowa wartość.</span><span class="sxs-lookup"><span data-stu-id="51115-282">The new value.</span></span></param>
        <summary><span data-ttu-id="51115-283">Gdy jest zastępowany w klasie pochodnej, ustawia wartość składnika na inną wartość.</span><span class="sxs-lookup"><span data-stu-id="51115-283">When overridden in a derived class, sets the value of the component to a different value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51115-284">Zazwyczaj ta metoda jest implementowana poprzez odbicie.</span><span class="sxs-lookup"><span data-stu-id="51115-284">Typically, this method is implemented through reflection.</span></span>  
  
 <span data-ttu-id="51115-285">Ta metoda tworzy <xref:System.ComponentModel.Design.DesignerTransaction> automatycznie w następującej kolejności:</span><span class="sxs-lookup"><span data-stu-id="51115-285">This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> automatically in the following order:</span></span>  
  
1.  <span data-ttu-id="51115-286">Metoda wywołuje <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType> metodę w celu utworzenia nowej <xref:System.ComponentModel.Design.DesignerTransaction> do reprezentowania zmian.</span><span class="sxs-lookup"><span data-stu-id="51115-286">The method calls the <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType> method to create a new <xref:System.ComponentModel.Design.DesignerTransaction> to represent the changes.</span></span>  
  
2.  <span data-ttu-id="51115-287">Metoda wywołuje <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType> metodę w celu wskazania, że transakcja została rozpoczęta i zmiany zostaną wykonane.</span><span class="sxs-lookup"><span data-stu-id="51115-287">The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType> method to indicate that the transaction has begun and the changes are about to occur.</span></span>  
  
3.  <span data-ttu-id="51115-288">Metoda resetuje właściwość do wartości ustalonej przez kolejność sprawdzania tej metody.</span><span class="sxs-lookup"><span data-stu-id="51115-288">The method resets the property to the value determined by this method's checking order.</span></span>  
  
4.  <span data-ttu-id="51115-289">Metoda wywołuje <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType> metodę w celu wskazania, że zmiany zostały wprowadzone.</span><span class="sxs-lookup"><span data-stu-id="51115-289">The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType> method to indicate that the changes have occurred.</span></span>  
  
5.  <span data-ttu-id="51115-290">Metoda wywołuje <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType> , aby wskazać, że transakcja została ukończona.</span><span class="sxs-lookup"><span data-stu-id="51115-290">The method calls <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType> to indicate that the transaction is complete.</span></span>  
  
 <span data-ttu-id="51115-291">Celem transakcji jest wsparcie `Undo` i `Redo` funkcjonalność.</span><span class="sxs-lookup"><span data-stu-id="51115-291">The purpose of the transaction is to support `Undo` and `Redo` functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="51115-292">Podczas zastępowania tej metody należy ustawić wartość właściwości przez wywołanie odpowiedniej metody "SetMyProperty", która ma być zaimplementowana.</span><span class="sxs-lookup"><span data-stu-id="51115-292">When you override this method, it should set the value of the property by invoking the appropriate "SetMyProperty" method that you need to implement.</span></span> <span data-ttu-id="51115-293">Jeśli określona wartość nie jest prawidłowa, składnik powinien zgłosić wyjątek, który jest przekazywać.</span><span class="sxs-lookup"><span data-stu-id="51115-293">If the value specified is not valid, the component should throw an exception, which is passed up.</span></span> <span data-ttu-id="51115-294">Należy zaprojektować Właściwość tak, aby Metoda "GetMyProperty" (zaimplementowana) była zgodna z metodą "SetMyProperty", zwracająca wartość przekazaną, gdy metoda "SetMyProperty" nie zgłasza wyjątku.</span><span class="sxs-lookup"><span data-stu-id="51115-294">You should design the property so that a "GetMyProperty" method (that you have implemented) following a "SetMyProperty" method returns the value passed in when the "SetMyProperty" method does not throw an exception.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValue">
      <MemberSignature Language="C#" Value="public abstract bool ShouldSerializeValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldSerializeValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ShouldSerializeValue (component As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool ShouldSerializeValue(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeValue : obj -&gt; bool" Usage="propertyDescriptor.ShouldSerializeValue component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="51115-295">Składnik zawierający właściwość, która ma zostać zbadana pod kątem trwałości.</span><span class="sxs-lookup"><span data-stu-id="51115-295">The component with the property to be examined for persistence.</span></span></param>
        <summary><span data-ttu-id="51115-296">Gdy jest zastępowany w klasie pochodnej, określa wartość wskazującą, czy wartość tej właściwości musi być utrwalona.</span><span class="sxs-lookup"><span data-stu-id="51115-296">When overridden in a derived class, determines a value indicating whether the value of this property needs to be persisted.</span></span></summary>
        <returns><span data-ttu-id="51115-297"><see langword="true" />Jeśli właściwość powinna być utrwalona; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="51115-297"><see langword="true" /> if the property should be persisted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51115-298">Zazwyczaj ta metoda jest implementowana poprzez odbicie.</span><span class="sxs-lookup"><span data-stu-id="51115-298">Typically, this method is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="51115-299">Gdy jest zastępowany w klasie pochodnej, ta metoda <see langword="true" /> zwraca wartość, jeśli bieżąca wartość właściwości różni się od wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="51115-299">When overridden in a derived class, this method returns <see langword="true" /> if the current value of the property is different from its default value.</span></span> <span data-ttu-id="51115-300">Szuka ona wartości domyślnej, najpierw szukając <see cref="T:System.ComponentModel.DefaultValueAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="51115-300">It looks for a default value by first looking for a <see cref="T:System.ComponentModel.DefaultValueAttribute" />.</span></span> <span data-ttu-id="51115-301">Jeśli metoda odnajdzie ten atrybut, porównuje wartość atrybutu z bieżącą wartością właściwości.</span><span class="sxs-lookup"><span data-stu-id="51115-301">If the method finds this attribute, it compares the value of the attribute with the property's current value.</span></span> <span data-ttu-id="51115-302">Jeśli ta metoda nie może znaleźć <see cref="T:System.ComponentModel.DefaultValueAttribute" />, szuka metody "ShouldSerializeMyProperty", która ma być zaimplementowana.</span><span class="sxs-lookup"><span data-stu-id="51115-302">If this method cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" />, it looks for a "ShouldSerializeMyProperty" method that you need to implement.</span></span> <span data-ttu-id="51115-303">Jeśli zostanie znaleziona, <see cref="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)" /> wywołuje ją.</span><span class="sxs-lookup"><span data-stu-id="51115-303">If it is found, <see cref="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)" /> invokes it.</span></span> <span data-ttu-id="51115-304">Jeśli ta metoda nie może znaleźć <see cref="T:System.ComponentModel.DefaultValueAttribute" /> metody lub "ShouldSerializeMyProperty", nie można utworzyć optymalizacji i zwraca wartość. <see langword="true" /></span><span class="sxs-lookup"><span data-stu-id="51115-304">If this method cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" /> or a "ShouldSerializeMyProperty" method, it cannot create optimizations and it returns <see langword="true" />.</span></span>
 
 <block subset="none" type="note"><para>  
 <span data-ttu-id="51115-305"><see cref="T:System.ComponentModel.Design.ComponentDesigner" /> Klasa implementuje specjalną logikę serializacji dla dziedziczonych składników.</span><span class="sxs-lookup"><span data-stu-id="51115-305">The <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> class implements special serialization logic for inherited components.</span></span> <span data-ttu-id="51115-306">Aby uzyskać więcej informacji, zobacz <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</span><span class="sxs-lookup"><span data-stu-id="51115-306">For more information, see <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</span></span>  
</para></block></para></block>
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
      </Docs>
    </Member>
    <Member MemberName="SupportsChangeEvents">
      <MemberSignature Language="C#" Value="public virtual bool SupportsChangeEvents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsChangeEvents" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsChangeEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsChangeEvents { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsChangeEvents : bool" Usage="System.ComponentModel.PropertyDescriptor.SupportsChangeEvents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51115-307">Pobiera wartość wskazującą, czy powiadomienia o zmianie wartości dla tej właściwości mogą pochodzić spoza deskryptora właściwości.</span><span class="sxs-lookup"><span data-stu-id="51115-307">Gets a value indicating whether value change notifications for this property may originate from outside the property descriptor.</span></span></summary>
        <value><span data-ttu-id="51115-308"><see langword="true" />Jeśli powiadomienia o zmianie wartości mogą pochodzić spoza deskryptora właściwości; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="51115-308"><see langword="true" /> if value change notifications may originate from outside the property descriptor; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51115-309"><xref:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents%2A> Właściwość wskazuje, czy powiadomienia o zmianach wartości dla tej właściwości mogą pochodzić spoza deskryptora właściwości, takiego jak ze składnika, lub czy powiadomienia będą pochodzić tylko z bezpośrednich wywołań wykonanych do <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> Metoda.</span><span class="sxs-lookup"><span data-stu-id="51115-309">The <xref:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents%2A> property indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to the <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> method.</span></span> <span data-ttu-id="51115-310">Na przykład składnik może zaimplementować <xref:System.ComponentModel.INotifyPropertyChanged> interfejs lub może mieć jawne `name.Changed` zdarzenie dla tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="51115-310">For example, the component may implement the <xref:System.ComponentModel.INotifyPropertyChanged> interface, or may have an explicit `name.Changed` event for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
