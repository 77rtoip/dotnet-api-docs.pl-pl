<Type Name="Container" FullName="System.ComponentModel.Container">
  <TypeSignature Language="C#" Value="public class Container : IDisposable, System.ComponentModel.IContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Container extends System.Object implements class System.ComponentModel.IContainer, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Container" />
  <TypeSignature Language="VB.NET" Value="Public Class Container&#xA;Implements IContainer, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Container : IDisposable, System::ComponentModel::IContainer" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="b201c-101">Hermetyzuje zero lub więcej składników.</span><span class="sxs-lookup"><span data-stu-id="b201c-101">Encapsulates zero or more components.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b201c-102"><xref:System.ComponentModel.Container> Klasy jest domyślna implementacja dla <xref:System.ComponentModel.IContainer> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="b201c-102">The <xref:System.ComponentModel.Container> class is the default implementation for the <xref:System.ComponentModel.IContainer> interface.</span></span>  
  
 <span data-ttu-id="b201c-103">Kontenery to obiekty, które hermetyzują i śledzenie zero lub więcej składników.</span><span class="sxs-lookup"><span data-stu-id="b201c-103">Containers are objects that encapsulate and track zero or more components.</span></span> <span data-ttu-id="b201c-104">W tym kontekście zawierania odwołuje się do logicznego zawierania, nie visual zawierania.</span><span class="sxs-lookup"><span data-stu-id="b201c-104">In this context, containment refers to logical containment, not visual containment.</span></span> <span data-ttu-id="b201c-105">Można użyć składników i kontenery w różnych scenariuszy, w tym scenariuszy, które są visual i nie visual.</span><span class="sxs-lookup"><span data-stu-id="b201c-105">You can use components and containers in a variety of scenarios, including scenarios that are both visual and not visual.</span></span>  
  
 <span data-ttu-id="b201c-106">Składniki w kontenerze są śledzone na liście pierwszy w, FIFO, określające kolejność elementów w kontenerze.</span><span class="sxs-lookup"><span data-stu-id="b201c-106">The components in a container are tracked in a first-in, first-out list, which also defines the order of the components within the container.</span></span> <span data-ttu-id="b201c-107">Dodane składniki są dołączane do końca listy.</span><span class="sxs-lookup"><span data-stu-id="b201c-107">Added components are appended to the end of the list.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.IContainer" />
    <altmember cref="T:System.ComponentModel.IComponent" />
    <altmember cref="T:System.ComponentModel.Component" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Container ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Container.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Container();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b201c-108">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Container" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="b201c-108">Initializes a new instance of the <see cref="T:System.ComponentModel.Container" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b201c-109">Dodaje <see cref="T:System.ComponentModel.Component" /> do <see cref="T:System.ComponentModel.Container" />.</span><span class="sxs-lookup"><span data-stu-id="b201c-109">Adds a <see cref="T:System.ComponentModel.Component" /> to the <see cref="T:System.ComponentModel.Container" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="b201c-110">Składnik do dodania.</span><span class="sxs-lookup"><span data-stu-id="b201c-110">The component to add.</span></span></param>
        <summary><span data-ttu-id="b201c-111">Dodaje określony <see cref="T:System.ComponentModel.Component" /> do <see cref="T:System.ComponentModel.Container" />.</span><span class="sxs-lookup"><span data-stu-id="b201c-111">Adds the specified <see cref="T:System.ComponentModel.Component" /> to the <see cref="T:System.ComponentModel.Container" />.</span></span> <span data-ttu-id="b201c-112">Składnik nie ma nazwy.</span><span class="sxs-lookup"><span data-stu-id="b201c-112">The component is unnamed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b201c-113">Metoda ta może być zastąpiona przez klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="b201c-113">This method can be overridden by a derived class.</span></span>  
  
 <span data-ttu-id="b201c-114">Nowe <xref:System.ComponentModel.Component> zostanie dodany na końcu listy.</span><span class="sxs-lookup"><span data-stu-id="b201c-114">The new <xref:System.ComponentModel.Component> is added to the end of the list.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b201c-115"><paramref name="component" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b201c-115"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (System.ComponentModel.IComponent component, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.ComponentModel.IComponent component, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (component As IComponent, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::ComponentModel::IComponent ^ component, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="b201c-116">Składnik do dodania.</span><span class="sxs-lookup"><span data-stu-id="b201c-116">The component to add.</span></span></param>
        <param name="name"><span data-ttu-id="b201c-117">Nazwa unikatowy, bez uwzględniania wielkości liter, które można przypisać do składnika.</span><span class="sxs-lookup"><span data-stu-id="b201c-117">The unique, case-insensitive name to assign to the component.</span></span>  
  
 <span data-ttu-id="b201c-118">—lub—</span><span class="sxs-lookup"><span data-stu-id="b201c-118">-or-</span></span>  
  
 <span data-ttu-id="b201c-119"><see langword="null" />, dlatego składnika bez nazwy.</span><span class="sxs-lookup"><span data-stu-id="b201c-119"><see langword="null" />, which leaves the component unnamed.</span></span></param>
        <summary><span data-ttu-id="b201c-120">Dodaje określony <see cref="T:System.ComponentModel.Component" /> do <see cref="T:System.ComponentModel.Container" /> i przypisuje mu nazwę.</span><span class="sxs-lookup"><span data-stu-id="b201c-120">Adds the specified <see cref="T:System.ComponentModel.Component" /> to the <see cref="T:System.ComponentModel.Container" /> and assigns it a name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b201c-121">Metoda ta może być zastąpiona przez klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="b201c-121">This method can be overridden by a derived class.</span></span>  
  
 <span data-ttu-id="b201c-122">Nowe <xref:System.ComponentModel.Component> zostanie dodany na końcu listy.</span><span class="sxs-lookup"><span data-stu-id="b201c-122">The new <xref:System.ComponentModel.Component> is added to the end of the list.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b201c-123"><paramref name="component" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b201c-123"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b201c-124"><paramref name="name" /> nie jest unikatowa.</span><span class="sxs-lookup"><span data-stu-id="b201c-124"><paramref name="name" /> is not unique.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="Components">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ComponentCollection Components { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ComponentCollection Components" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Container.Components" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Components As ComponentCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ComponentCollection ^ Components { System::ComponentModel::ComponentCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IContainer.Components</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ComponentCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b201c-125">Pobiera wszystkie składniki w <see cref="T:System.ComponentModel.Container" />.</span><span class="sxs-lookup"><span data-stu-id="b201c-125">Gets all the components in the <see cref="T:System.ComponentModel.Container" />.</span></span></summary>
        <value><span data-ttu-id="b201c-126">Kolekcja, która zawiera składniki <see cref="T:System.ComponentModel.Container" />.</span><span class="sxs-lookup"><span data-stu-id="b201c-126">A collection that contains the components in the <see cref="T:System.ComponentModel.Container" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b201c-127">Metoda ta może być zastąpiona przez klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="b201c-127">This method can be overridden by a derived class.</span></span>  
  
 <span data-ttu-id="b201c-128">Składniki w kolekcji są przechowywane w tej samej kolejności, ponieważ zostały one dodane do <xref:System.ComponentModel.Container>.</span><span class="sxs-lookup"><span data-stu-id="b201c-128">The components in the collection are stored in the same order as they were added to the <xref:System.ComponentModel.Container>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSite">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.ISite CreateSite (System.ComponentModel.IComponent component, string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ComponentModel.ISite CreateSite(class System.ComponentModel.IComponent component, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateSite (component As IComponent, name As String) As ISite" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ComponentModel::ISite ^ CreateSite(System::ComponentModel::IComponent ^ component, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="b201c-129"><see cref="T:System.ComponentModel.IComponent" /> Można utworzyć witrynę sieci.</span><span class="sxs-lookup"><span data-stu-id="b201c-129">The <see cref="T:System.ComponentModel.IComponent" /> to create a site for.</span></span></param>
        <param name="name"><span data-ttu-id="b201c-130">Nazwę można przypisać do <c>składnika</c>, lub <see langword="null" /> Aby pominąć nazwę przypisania.</span><span class="sxs-lookup"><span data-stu-id="b201c-130">The name to assign to <c>component</c>, or <see langword="null" /> to skip the name assignment.</span></span></param>
        <summary><span data-ttu-id="b201c-131">Tworzy witrynę <see cref="T:System.ComponentModel.ISite" /> dla danego <see cref="T:System.ComponentModel.IComponent" /> i przypisanie do lokacji podanej nazwie.</span><span class="sxs-lookup"><span data-stu-id="b201c-131">Creates a site <see cref="T:System.ComponentModel.ISite" /> for the given <see cref="T:System.ComponentModel.IComponent" /> and assigns the given name to the site.</span></span></summary>
        <returns><span data-ttu-id="b201c-132">Nowo utworzona witryna.</span><span class="sxs-lookup"><span data-stu-id="b201c-132">The newly created site.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b201c-133">Jeśli `name` parametr jest `null`, <xref:System.ComponentModel.IComponent> jest dodawany do <xref:System.ComponentModel.Container> bez nazwę identyfikującą.</span><span class="sxs-lookup"><span data-stu-id="b201c-133">If the `name` parameter is `null`, the <xref:System.ComponentModel.IComponent> is added to the <xref:System.ComponentModel.Container> without an identifying name.</span></span>  
  
 <span data-ttu-id="b201c-134">Metoda ta może być zastąpiona przez klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="b201c-134">This method can be overridden by a derived class.</span></span> <span data-ttu-id="b201c-135">Implementacje, które należy zastąpić <xref:System.ComponentModel.Container.CreateSite%2A> metody zapewniają implementacja niestandardowa za pośrednictwem klasy, która implementuje <xref:System.ComponentModel.ISite> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="b201c-135">Implementers that need to override the <xref:System.ComponentModel.Container.CreateSite%2A> method can provide a custom implementation through a class that implements the <xref:System.ComponentModel.ISite> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b201c-136">Zwalnia zasoby używane przez <see cref="T:System.ComponentModel.Container" />.</span><span class="sxs-lookup"><span data-stu-id="b201c-136">Releases the resources used by the <see cref="T:System.ComponentModel.Container" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Container.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b201c-137">Zwalnia wszelkie zasoby używane przez <see cref="T:System.ComponentModel.Container" />.</span><span class="sxs-lookup"><span data-stu-id="b201c-137">Releases all resources used by the <see cref="T:System.ComponentModel.Container" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b201c-138">Wywołanie <xref:System.ComponentModel.Container.Dispose%2A> po zakończeniu przy użyciu <xref:System.ComponentModel.Container>.</span><span class="sxs-lookup"><span data-stu-id="b201c-138">Call <xref:System.ComponentModel.Container.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Container>.</span></span> <span data-ttu-id="b201c-139"><xref:System.ComponentModel.Container.Dispose%2A> Pozostawia metody <xref:System.ComponentModel.Container> w stanie uniemożliwiającym jego używanie.</span><span class="sxs-lookup"><span data-stu-id="b201c-139">The <xref:System.ComponentModel.Container.Dispose%2A> method leaves the <xref:System.ComponentModel.Container> in an unusable state.</span></span> <span data-ttu-id="b201c-140">Po wywołaniu <xref:System.ComponentModel.Container.Dispose%2A>, konieczne jest zwolnienie wszystkich odwołań do <xref:System.ComponentModel.Container> , moduł zbierający elementy bezużyteczne mógł odzyskać pamięć który <xref:System.ComponentModel.Container> klasy.</span><span class="sxs-lookup"><span data-stu-id="b201c-140">After calling <xref:System.ComponentModel.Container.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Container> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Container> was occupying.</span></span> <span data-ttu-id="b201c-141">Aby uzyskać więcej informacji, zobacz [czyszczenie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i [implementacja metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="b201c-141">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b201c-142">Wywoływanie zawsze <xref:System.ComponentModel.Container.Dispose%2A> przed zwolnieniem ostatniego odwołania do <xref:System.ComponentModel.Container>.</span><span class="sxs-lookup"><span data-stu-id="b201c-142">Always call <xref:System.ComponentModel.Container.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Container>.</span></span> <span data-ttu-id="b201c-143">W przeciwnym razie używa zasobów nie zostanie zwolniona do wywołania modułu zbierającego elementy bezużyteczne <xref:System.ComponentModel.Container> obiektu `Finalize` metody.</span><span class="sxs-lookup"><span data-stu-id="b201c-143">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Container> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Container.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="b201c-144"><see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko zasoby niezarządzane.</span><span class="sxs-lookup"><span data-stu-id="b201c-144"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="b201c-145">Zwalnia zasoby niezarządzane używane przez <see cref="T:System.ComponentModel.Container" />i opcjonalnie zwalnia zasoby zarządzane.</span><span class="sxs-lookup"><span data-stu-id="b201c-145">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Container" />, and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b201c-146">Ta metoda jest wywoływana przez metodę publiczną `Dispose` — metoda i <xref:System.Object.Finalize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="b201c-146">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="b201c-147">`Dispose` wywołuje chronioną metodę `Dispose(Boolean)` metody z `disposing` ustawiono parametr `true`.</span><span class="sxs-lookup"><span data-stu-id="b201c-147">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="b201c-148"><xref:System.Object.Finalize%2A> wywołuje `Dispose` z `disposing` ustawioną `false`.</span><span class="sxs-lookup"><span data-stu-id="b201c-148"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="b201c-149">Gdy `disposing` parametr ma wartość true, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane przez to <xref:System.ComponentModel.Container> odwołania.</span><span class="sxs-lookup"><span data-stu-id="b201c-149">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Container> references.</span></span> <span data-ttu-id="b201c-150">Ta metoda wywołuje `Dispose` metody każdego odwołuje się do obiektu.</span><span class="sxs-lookup"><span data-stu-id="b201c-150">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b201c-151"><see langword="Dispose" /> można wywoływać wielokrotnie przez inne obiekty.</span><span class="sxs-lookup"><span data-stu-id="b201c-151"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="b201c-152">W przypadku przesłaniania <see langword="Dispose(Boolean)" /> należy uważać, aby nie odwołują się obiekty, które zostały wcześniej zlikwidowane w wywołaniu wcześniejszych <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="b201c-152">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="b201c-153">Aby uzyskać więcej informacji na temat sposobu wdrażania <see langword="Dispose(Boolean)" />, zobacz [implementacja metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="b201c-153">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="b201c-154">Aby uzyskać więcej informacji na temat <see langword="Dispose" /> i <see cref="M:System.Object.Finalize" />, zobacz [czyszczenie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i [przesłaniania metody Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span><span class="sxs-lookup"><span data-stu-id="b201c-154">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Container ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Container.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Container ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b201c-155">Zwalnia zasoby niezarządzane, a następnie wykonuje inne operacje oczyszczania przed <see cref="T:System.ComponentModel.Container" /> jest odzyskana przez wyrzucanie elementów bezużytecznych.</span><span class="sxs-lookup"><span data-stu-id="b201c-155">Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.ComponentModel.Container" /> is reclaimed by garbage collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b201c-156">Ta metoda zastępuje <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="b201c-156">This method overrides <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="b201c-157">Kod aplikacji nie powinny wywoływać tej metody; obiekt `Finalize` metoda jest wywoływana automatycznie podczas wyrzucania elementów bezużytecznych, chyba że finalizacji przez moduł garbage collector została wyłączona przez wywołanie do <xref:System.GC.SuppressFinalize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="b201c-157">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.</span></span>  
  
 <span data-ttu-id="b201c-158">Aby uzyskać więcej informacji, zobacz [metody Finalize i destruktory](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [czyszczenie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md), i [przesłaniania metody Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span><span class="sxs-lookup"><span data-stu-id="b201c-158">For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected virtual object GetService (Type service);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetService(class System.Type service) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Container.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetService (service As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetService(Type ^ service);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="service"><span data-ttu-id="b201c-159"><see cref="T:System.Type" /> Usługi do pobrania.</span><span class="sxs-lookup"><span data-stu-id="b201c-159">The <see cref="T:System.Type" /> of the service to retrieve.</span></span></param>
        <summary><span data-ttu-id="b201c-160">Pobiera obiekt usługi określonego typu, jeśli jest dostępna.</span><span class="sxs-lookup"><span data-stu-id="b201c-160">Gets the service object of the specified type, if it is available.</span></span></summary>
        <returns><span data-ttu-id="b201c-161"><see cref="T:System.Object" /> Wykonania żądanej usługi lub <see langword="null" /> Jeśli usługi nie można rozpoznać.</span><span class="sxs-lookup"><span data-stu-id="b201c-161">An <see cref="T:System.Object" /> implementing the requested service, or <see langword="null" /> if the service cannot be resolved.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b201c-162">Domyślna implementacja tej metody zwraca bieżące wystąpienie klasy, jeśli `service` jest <xref:System.ComponentModel.IContainer>; w przeciwnym razie zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="b201c-162">The default implementation of this method returns the current instance of the class if `service` is an <xref:System.ComponentModel.IContainer>; otherwise, it returns `null`.</span></span> <span data-ttu-id="b201c-163">Mogą przesłaniać tę metodę do implementacji niestandardowych do zwrócenia obiekt usługi.</span><span class="sxs-lookup"><span data-stu-id="b201c-163">You can override this method to provide a custom implementation to return a service object.</span></span> <span data-ttu-id="b201c-164">Aby uzyskać więcej informacji, zobacz <xref:System.IServiceProvider.GetService%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="b201c-164">For more information, see the <xref:System.IServiceProvider.GetService%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IContainer.Remove(System.ComponentModel.IComponent)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="b201c-165">Składnik do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="b201c-165">The component to remove.</span></span></param>
        <summary><span data-ttu-id="b201c-166">Usuwa składnika z <see cref="T:System.ComponentModel.Container" />.</span><span class="sxs-lookup"><span data-stu-id="b201c-166">Removes a component from the <see cref="T:System.ComponentModel.Container" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b201c-167">Metoda ta może być zastąpiona przez klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="b201c-167">This method can be overridden by a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveWithoutUnsiting">
      <MemberSignature Language="C#" Value="protected void RemoveWithoutUnsiting (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveWithoutUnsiting(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Container.RemoveWithoutUnsiting(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RemoveWithoutUnsiting (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RemoveWithoutUnsiting(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="b201c-168">Składnik do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="b201c-168">The component to remove.</span></span></param>
        <summary><span data-ttu-id="b201c-169">Usuwa składnika z <see cref="T:System.ComponentModel.Container" /> bez ustawienia <see cref="P:System.ComponentModel.IComponent.Site" /> do <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b201c-169">Removes a component from the <see cref="T:System.ComponentModel.Container" /> without setting <see cref="P:System.ComponentModel.IComponent.Site" /> to <see langword="null" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b201c-170"><xref:System.ComponentModel.Container.RemoveWithoutUnsiting%2A> Metody czyści witryny w zwykły sposób, ale nie ustawia składnika <xref:System.ComponentModel.IComponent.Site%2A> właściwości `null`.</span><span class="sxs-lookup"><span data-stu-id="b201c-170">The <xref:System.ComponentModel.Container.RemoveWithoutUnsiting%2A> method cleans up the site as usual, but it does not set the component's <xref:System.ComponentModel.IComponent.Site%2A> property to `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="ValidateName">
      <MemberSignature Language="C#" Value="protected virtual void ValidateName (System.ComponentModel.IComponent component, string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateName(class System.ComponentModel.IComponent component, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateName (component As IComponent, name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateName(System::ComponentModel::IComponent ^ component, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="b201c-171">Składnik o nazwie.</span><span class="sxs-lookup"><span data-stu-id="b201c-171">The named component.</span></span></param>
        <param name="name"><span data-ttu-id="b201c-172">Nazwa składnika do sprawdzania poprawności.</span><span class="sxs-lookup"><span data-stu-id="b201c-172">The component name to validate.</span></span></param>
        <summary><span data-ttu-id="b201c-173">Określa, czy nazwa składnika jest unikatowa dla tego kontenera.</span><span class="sxs-lookup"><span data-stu-id="b201c-173">Determines whether the component name is unique for this container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b201c-174"><xref:System.ComponentModel.Container.ValidateName%2A> Metoda jest wywoływana przez <xref:System.ComponentModel.Container.Add%2A> metodę, aby określić, czy nazwa `component` dodawany jest unikatowa dla tego <xref:System.ComponentModel.Container>.</span><span class="sxs-lookup"><span data-stu-id="b201c-174">The <xref:System.ComponentModel.Container.ValidateName%2A> method is called by the <xref:System.ComponentModel.Container.Add%2A> method to determine if the name of the `component` being added is unique for this <xref:System.ComponentModel.Container>.</span></span> <span data-ttu-id="b201c-175">Jeśli `name` parametr nie jest `null` i nie jest unikatowa, <xref:System.ArgumentException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="b201c-175">If the `name` parameter is not `null` and is not unique, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b201c-176"><paramref name="component" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b201c-176"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b201c-177"><paramref name="name" /> nie jest unikatowa.</span><span class="sxs-lookup"><span data-stu-id="b201c-177"><paramref name="name" /> is not unique.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>