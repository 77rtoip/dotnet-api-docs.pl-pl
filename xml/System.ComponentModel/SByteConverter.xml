<Type Name="SByteConverter" FullName="System.ComponentModel.SByteConverter">
  <TypeSignature Language="C#" Value="public class SByteConverter : System.ComponentModel.BaseNumberConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SByteConverter extends System.ComponentModel.BaseNumberConverter" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.SByteConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class SByteConverter&#xA;Inherits BaseNumberConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class SByteConverter : System::ComponentModel::BaseNumberConverter" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.BaseNumberConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9d278-101">Udostępnia konwertera typów na konwertowanie obiektów 8-bitową liczbę całkowitą bez znaku z ciągu.</span><span class="sxs-lookup"><span data-stu-id="9d278-101">Provides a type converter to convert 8-bit unsigned integer objects to and from a string.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d278-102">Ten konwerter można konwertować obiekt 8-bitową liczbę całkowitą bez znaku, do i z ciągu.</span><span class="sxs-lookup"><span data-stu-id="9d278-102">This converter can convert only an 8-bit unsigned integer object to and from a string.</span></span>  
  
 <span data-ttu-id="9d278-103"><xref:System.SByte> Typ wartości reprezentuje liczb całkowitych z wartościami, począwszy od ujemna 128 do 127 dodatnią.</span><span class="sxs-lookup"><span data-stu-id="9d278-103">The <xref:System.SByte> value type represents integers with values ranging from negative 128 to positive 127.</span></span> <span data-ttu-id="9d278-104">Ten typ danych nie jest obsługiwany w języku Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="9d278-104">This data type is not supported in Visual Basic.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9d278-105">Nigdy nie należy tworzyć wystąpienia <xref:System.ComponentModel.SByteConverter>.</span><span class="sxs-lookup"><span data-stu-id="9d278-105">You should never create an instance of <xref:System.ComponentModel.SByteConverter>.</span></span> <span data-ttu-id="9d278-106">Zamiast tego wywołać <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> metody <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="9d278-106">Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="9d278-107">Aby uzyskać więcej informacji, zobacz przykłady w <xref:System.ComponentModel.TypeConverter> klasa podstawowa i [porady: implementacji konwertera typów](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).</span><span class="sxs-lookup"><span data-stu-id="9d278-107">For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d278-108">Poniższy przykład konwertuje zmiennej typu <xref:System.SByte> do ciągu i na odwrót.</span><span class="sxs-lookup"><span data-stu-id="9d278-108">The following sample converts a variable of type <xref:System.SByte> to a string, and vice versa.</span></span>  
  
 [!code-cpp[Converters#18](~/samples/snippets/cpp/VS_Snippets_Winforms/Converters/CPP/converters.cpp#18)]
 [!code-csharp[Converters#18](~/samples/snippets/csharp/VS_Snippets_Winforms/Converters/CS/converters.cs#18)]
 [!code-vb[Converters#18](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Converters/VB/converters.vb#18)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SByteConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.SByteConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SByteConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9d278-109">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.SByteConverter" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="9d278-109">Initializes a new instance of the <see cref="T:System.ComponentModel.SByteConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>