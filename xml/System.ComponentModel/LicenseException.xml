<Type Name="LicenseException" FullName="System.ComponentModel.LicenseException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="02d01fc30d6a08984d80ebdca869f331e6b1b4c6" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36701917" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LicenseException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit LicenseException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.LicenseException" />
  <TypeSignature Language="VB.NET" Value="Public Class LicenseException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class LicenseException : SystemException" />
  <TypeSignature Language="F#" Value="type LicenseException = class&#xA;    inherit SystemException" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje wyjątek, jeśli składnik nie może mieć przyznaną licencję.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.LicenseManager.Validate%2A?displayProperty=nameWithType> Metoda zgłasza <xref:System.ComponentModel.LicenseException> Jeśli składnik nie można uzyskać prawidłowej licencji. Dzieje się tak, gdy składnik albo nie ma licencji, lub jest licencjonowana, ale nie można udzielić prawidłowej licencji.  
  
 Aby uzyskać więcej informacji dotyczących licencji, zobacz [porady: składniki licencji i formanty](http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57).  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób catch <xref:System.ComponentModel.LicenseException> i interpretować jego zawartości. W przykładzie aplikacja wywołuje <xref:System.ComponentModel.LicenseManager.Validate%2A> metoda <xref:System.Windows.Forms.Form?displayProperty=nameWithType> nie jest licencjonowany. Po przechwytywanie wyjątku, próbki pobiera odpowiedni komunikat o błędzie, rodzaj składnika, który nie uzyskał licencję, ślad stosu i pochodzenia wyjątek.  
  
 W tym przykładzie wymaga określonej <xref:System.ComponentModel.LicenseProvider> przez oznaczenie <xref:System.Windows.Forms.Form?displayProperty=nameWithType> z <xref:System.ComponentModel.LicenseProviderAttribute> atrybutu. Aby uzyskać więcej informacji, jak to zrobić, zobacz <xref:System.ComponentModel.LicenseManager> klasy.  
  
 [!code-cpp[LicenseException#1](~/samples/snippets/cpp/VS_Snippets_Winforms/LicenseException/CPP/licenseex.cpp#1)]
 [!code-csharp[LicenseException#1](~/samples/snippets/csharp/VS_Snippets_Winforms/LicenseException/CS/licenseex.cs#1)]
 [!code-vb[LicenseException#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/LicenseException/VB/licenseex.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.License" />
    <altmember cref="T:System.ComponentModel.LicenseContext" />
    <altmember cref="T:System.ComponentModel.LicenseManager" />
    <altmember cref="T:System.ComponentModel.LicenseProvider" />
    <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
    <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
    <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.LicenseException" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LicenseException (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseException.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LicenseException(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.LicenseException : Type -&gt; System.ComponentModel.LicenseException" Usage="new System.ComponentModel.LicenseException type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">A <see cref="T:System.Type" /> reprezentujący typ składnika, który nie uzyskał licencji.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.LicenseException" /> klasy dla typu składnika odmowa licencji.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LicenseException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; LicenseException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.LicenseException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.ComponentModel.LicenseException" Usage="new System.ComponentModel.LicenseException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> Służący do deserializacji.</param>
        <param name="context">Lokalizacja docelowa służący do deserializacji.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.LicenseException" /> klasy z danym <see cref="T:System.Runtime.Serialization.SerializationInfo" /> i <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LicenseException (Type type, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LicenseException(Type ^ type, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.LicenseException : Type * obj -&gt; System.ComponentModel.LicenseException" Usage="new System.ComponentModel.LicenseException (type, instance)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">A <see cref="T:System.Type" /> reprezentujący typ składnika, który nie uzyskał licencji.</param>
        <param name="instance">Wystąpienie składnika, który nie uzyskał licencji.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.LicenseException" /> klasy typu oraz wystąpienie składnika odmowa licencji.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LicenseException (Type type, object instance, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, object instance, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LicenseException(Type ^ type, System::Object ^ instance, System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.LicenseException : Type * obj * string -&gt; System.ComponentModel.LicenseException" Usage="new System.ComponentModel.LicenseException (type, instance, message)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">A <see cref="T:System.Type" /> reprezentujący typ składnika, który nie uzyskał licencji.</param>
        <param name="instance">Wystąpienie składnika, który nie uzyskał licencji.</param>
        <param name="message">Komunikat o wyjątku do wyświetlenia.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.LicenseException" /> klasy typu oraz wystąpienie składnika odmowa licencji, wraz z komunikat do wyświetlenia.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LicenseException (Type type, object instance, string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, object instance, string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LicenseException(Type ^ type, System::Object ^ instance, System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.LicenseException : Type * obj * string * Exception -&gt; System.ComponentModel.LicenseException" Usage="new System.ComponentModel.LicenseException (type, instance, message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="type">A <see cref="T:System.Type" /> reprezentujący typ składnika, który nie uzyskał licencji.</param>
        <param name="instance">Wystąpienie składnika, który nie uzyskał licencji.</param>
        <param name="message">Komunikat o wyjątku do wyświetlenia.</param>
        <param name="innerException">
          <see cref="T:System.Exception" /> Reprezentujący pierwotny wyjątek.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.LicenseException" /> klasy typu oraz wystąpienie składnika odmowa licencji, wraz z komunikat do wyświetlenia i oryginalnego wyjątek.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="licenseException.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> Służący do deserializacji.</param>
        <param name="context">Lokalizacja docelowa służący do deserializacji.</param>
        <summary>Ustawia <see cref="T:System.Runtime.Serialization.SerializationInfo" /> informacje o wyjątku.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="info" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LicensedType">
      <MemberSignature Language="C#" Value="public Type LicensedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type LicensedType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.LicenseException.LicensedType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LicensedType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ LicensedType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LicensedType : Type" Usage="System.ComponentModel.LicenseException.LicensedType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ składnika, który nie uzyskał licencji.</summary>
        <value>A <see cref="T:System.Type" /> reprezentujący typ składnika, który nie uzyskał licencji.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
  </Members>
</Type>