<Type Name="PropertyChangedEventManager" FullName="System.ComponentModel.PropertyChangedEventManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6aae41e7944e7d685cc2eef3a014b5ba8653ed9b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30443196" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PropertyChangedEventManager : System.Windows.WeakEventManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PropertyChangedEventManager extends System.Windows.WeakEventManager" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.PropertyChangedEventManager" />
  <TypeSignature Language="VB.NET" Value="Public Class PropertyChangedEventManager&#xA;Inherits WeakEventManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyChangedEventManager : System::Windows::WeakEventManager" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.WeakEventManager</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="7e682-101">Udostępnia <see cref="T:System.Windows.WeakEventManager" /> implementacji, dzięki czemu można dołączyć odbiorników dla za pomocą wzorca "odbiornik zdarzeń słabe" <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> zdarzeń.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7e682-101">Provides a <see cref="T:System.Windows.WeakEventManager" /> implementation so that you can use the "weak event listener" pattern to attach listeners for the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e682-102">Aby mogła być odbiorników w tym wzorcu, musi implementować obiektów odbiornika <xref:System.Windows.IWeakEventListener>.</span><span class="sxs-lookup"><span data-stu-id="7e682-102">In order to be listeners in this pattern, your listener objects must implement <xref:System.Windows.IWeakEventListener>.</span></span> <span data-ttu-id="7e682-103">Nie musisz wdrożyć <xref:System.Windows.IWeakEventListener> dla klasy, który jest źródłem zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="7e682-103">You do not need to implement <xref:System.Windows.IWeakEventListener> on the class that is the source of the events.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.IWeakEventListener" />
  </Docs>
  <Members>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public static void AddHandler (System.ComponentModel.INotifyPropertyChanged source, EventHandler&lt;System.ComponentModel.PropertyChangedEventArgs&gt; handler, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddHandler(class System.ComponentModel.INotifyPropertyChanged source, class System.EventHandler`1&lt;class System.ComponentModel.PropertyChangedEventArgs&gt; handler, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.AddHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddHandler (source As INotifyPropertyChanged, handler As EventHandler(Of PropertyChangedEventArgs), propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddHandler(System::ComponentModel::INotifyPropertyChanged ^ source, EventHandler&lt;System::ComponentModel::PropertyChangedEventArgs ^&gt; ^ handler, System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ComponentModel.INotifyPropertyChanged" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.ComponentModel.PropertyChangedEventArgs&gt;" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="7e682-104">Źródłowego obiektu, który generuje <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e682-104">The source object that the raises the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="7e682-105">Delegat, który obsługuje <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e682-105">The delegate that handles the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="7e682-106">Nazwa właściwości, która istnieje na <c>źródła</c> umożliwiającego nasłuchiwania zmian.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e682-106">The name of the property that exists on <c>source</c> upon which to listen for changes.</span>
          </span>
          <span data-ttu-id="7e682-107">Wartość <see cref="F:System.String.Empty" /> wskazująca "żadnej właściwości".</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e682-107">Set to <see cref="F:System.String.Empty" /> to indicate "any property".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e682-108">Dodaje obsługi określonego zdarzenia, który jest wywoływany, gdy określonego źródła, podnosi <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> zdarzenia dla określonej właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e682-108">Adds the specified event handler, which is called when specified source raises the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event for the specified property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e682-109">Ta metoda służy do określania obsługi zdarzenia chcesz użyć do subskrybowania <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged> zdarzeń...</span><span class="sxs-lookup"><span data-stu-id="7e682-109">Use this method to specify the event handler you want to use to subscribe to the <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged> event..</span></span>  <span data-ttu-id="7e682-110">Gdy ta metoda obiektu odbiornika nie muszą implementować <xref:System.Windows.IWeakEventListener> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="7e682-110">When you use this method, your listener object does not need to implement the <xref:System.Windows.IWeakEventListener> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7e682-111">
            <paramref name="handler" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e682-111">
              <paramref name="handler" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7e682-112">Więcej niż jednej metody jest skojarzony z <paramref name="handler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e682-112">More than one method is associated with <paramref name="handler" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddListener">
      <MemberSignature Language="C#" Value="public static void AddListener (System.ComponentModel.INotifyPropertyChanged source, System.Windows.IWeakEventListener listener, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddListener(class System.ComponentModel.INotifyPropertyChanged source, class System.Windows.IWeakEventListener listener, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.AddListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddListener (source As INotifyPropertyChanged, listener As IWeakEventListener, propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddListener(System::ComponentModel::INotifyPropertyChanged ^ source, System::Windows::IWeakEventListener ^ listener, System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ComponentModel.INotifyPropertyChanged" />
        <Parameter Name="listener" Type="System.Windows.IWeakEventListener" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="7e682-113">Obiekt ze zdarzeniem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e682-113">The object with the event.</span>
          </span>
        </param>
        <param name="listener">
          <span data-ttu-id="7e682-114">Obiekt do dodania jako odbiornik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e682-114">The object to add as a listener.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="7e682-115">Nazwa właściwości, która istnieje na <c>źródła</c> umożliwiającego nasłuchiwania zmian.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e682-115">The name of the property that exists on <c>source</c> upon which to listen for changes.</span>
          </span>
          <span data-ttu-id="7e682-116">Wartość <see cref="F:System.String.Empty" /> wskazująca "żadnej właściwości".</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e682-116">Set to <see cref="F:System.String.Empty" /> to indicate "any property".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e682-117">Dodaje określony odbiornik do listy odbiorników w określonym źródle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e682-117">Adds the specified listener to the list of listeners on the specified source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.IWeakEventListener" />
      </Docs>
    </Member>
    <Member MemberName="NewListenerList">
      <MemberSignature Language="C#" Value="protected override System.Windows.WeakEventManager.ListenerList NewListenerList ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.WeakEventManager/ListenerList NewListenerList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.NewListenerList" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function NewListenerList () As WeakEventManager.ListenerList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WeakEventManager+ListenerList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7e682-118">Zwraca nowy obiekt, który zawiera odbiorników do <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e682-118">Returns a new object to contain listeners to the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7e682-119">Nowy obiekt, który zawiera odbiorników do <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e682-119">A new object to contain listeners to the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Purge">
      <MemberSignature Language="C#" Value="protected override bool Purge (object source, object data, bool purgeAll);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool Purge(object source, object data, bool purgeAll) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.Purge(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Purge (source As Object, data As Object, purgeAll As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool Purge(System::Object ^ source, System::Object ^ data, bool purgeAll);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="purgeAll" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="7e682-120">Obiekt źródłowy, aby usunąć wszystkie odbiorników z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e682-120">Source object to remove all listeners from.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="7e682-121">Dane do przeczyszczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e682-121">The data to purge.</span>
          </span>
          <span data-ttu-id="7e682-122">To powinien być <see cref="T:System.Collections.Specialized.HybridDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e682-122">This is expected to be a <see cref="T:System.Collections.Specialized.HybridDictionary" />.</span>
          </span>
        </param>
        <param name="purgeAll">
          <span data-ttu-id="7e682-123">Ustaw <see langword="true" /> zatrzymać nasłuchiwania i aby całkowicie usunąć wszystkie dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e682-123">Set to <see langword="true" /> to stop listening and to completely remove all data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e682-124">Usuwa odbiorników, które nie są już aktywne dla podanego źródła danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e682-124">Removes listeners that are no longer active from the data for the provided source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7e682-125">
            <see langword="true" /> Jeśli niektóre wpisy zostały usunięte; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e682-125">
              <see langword="true" /> if some entries were removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.IWeakEventListener" />
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveHandler (System.ComponentModel.INotifyPropertyChanged source, EventHandler&lt;System.ComponentModel.PropertyChangedEventArgs&gt; handler, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveHandler(class System.ComponentModel.INotifyPropertyChanged source, class System.EventHandler`1&lt;class System.ComponentModel.PropertyChangedEventArgs&gt; handler, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.RemoveHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveHandler (source As INotifyPropertyChanged, handler As EventHandler(Of PropertyChangedEventArgs), propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveHandler(System::ComponentModel::INotifyPropertyChanged ^ source, EventHandler&lt;System::ComponentModel::PropertyChangedEventArgs ^&gt; ^ handler, System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ComponentModel.INotifyPropertyChanged" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.ComponentModel.PropertyChangedEventArgs&gt;" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="7e682-126">Źródłowego obiektu, który generuje <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e682-126">The source object that the raises the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="7e682-127">Delegat, który obsługuje <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e682-127">The delegate that handles the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="7e682-128">Nazwa właściwości, która istnieje na <c>źródła</c> po której należy zakończyć nasłuchiwanie zmian.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e682-128">The name of the property that exists on <c>source</c> upon which to stop listening for changes.</span>
          </span>
          <span data-ttu-id="7e682-129">Wartość <see cref="F:System.String.Empty" /> wskazująca "żadnej właściwości".</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e682-129">Set to <see cref="F:System.String.Empty" /> to indicate "any property".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e682-130">Usuwa obsługi określonego zdarzenia pochodzących z określonego źródła.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e682-130">Removes the specified event handler from the specified source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7e682-131">
            <paramref name="handler" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e682-131">
              <paramref name="handler" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7e682-132">Więcej niż jednej metody jest skojarzony z <paramref name="handler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e682-132">More than one method is associated with <paramref name="handler" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveListener">
      <MemberSignature Language="C#" Value="public static void RemoveListener (System.ComponentModel.INotifyPropertyChanged source, System.Windows.IWeakEventListener listener, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveListener(class System.ComponentModel.INotifyPropertyChanged source, class System.Windows.IWeakEventListener listener, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.RemoveListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveListener (source As INotifyPropertyChanged, listener As IWeakEventListener, propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveListener(System::ComponentModel::INotifyPropertyChanged ^ source, System::Windows::IWeakEventListener ^ listener, System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ComponentModel.INotifyPropertyChanged" />
        <Parameter Name="listener" Type="System.Windows.IWeakEventListener" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="7e682-133">Aby usunąć odbiornik z obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e682-133">The object to remove the listener from.</span>
          </span>
        </param>
        <param name="listener">
          <span data-ttu-id="7e682-134">Odbiornik do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e682-134">The listener to remove.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="7e682-135">Nazwa właściwości, która istnieje na <c>źródła</c> po której należy zakończyć nasłuchiwanie zmian.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e682-135">The name of the property that exists on <c>source</c> upon which to stop listening for changes.</span>
          </span>
          <span data-ttu-id="7e682-136">Wartość <see cref="F:System.String.Empty" /> wskazująca "żadnej właściwości".</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e682-136">Set to <see cref="F:System.String.Empty" /> to indicate "any property".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e682-137">Usuwa określony odbiornik z listy odbiorników dla podanego źródła.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e682-137">Removes the specified listener from the list of listeners on the provided source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.IWeakEventListener" />
      </Docs>
    </Member>
    <Member MemberName="StartListening">
      <MemberSignature Language="C#" Value="protected override void StartListening (object source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void StartListening(object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.StartListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub StartListening (source As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void StartListening(System::Object ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="7e682-138">Obiekt, na którym należy rozpocząć nasłuchiwania dla <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e682-138">The object on which to start listening for <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e682-139">Rozpoczyna nasłuchiwanie <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> zdarzenia dla podanego źródła.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e682-139">Begins listening for the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event on the provided source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e682-140">Nie określono właściwości; Po rozpoczęciu Menedżer zdarzeń ma wszystkie właściwości w źródle <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged> powiadomień włączone.</span><span class="sxs-lookup"><span data-stu-id="7e682-140">This does not specify a property; once the event manager is started, all properties on the source will have <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged> notification enabled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.IWeakEventListener" />
      </Docs>
    </Member>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="protected override void StopListening (object source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void StopListening(object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.StopListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub StopListening (source As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void StopListening(System::Object ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="7e682-141">Obiekt źródłowy, na której należy zakończyć nasłuchiwanie <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e682-141">The source object on which to stop listening for <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e682-142">Zatrzymuje nasłuchiwanie <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> zdarzenia dla podanego źródła.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e682-142">Stops listening for the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event on the provided source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.IWeakEventListener" />
      </Docs>
    </Member>
  </Members>
</Type>