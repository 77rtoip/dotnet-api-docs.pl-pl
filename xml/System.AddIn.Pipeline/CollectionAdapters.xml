<Type Name="CollectionAdapters" FullName="System.AddIn.Pipeline.CollectionAdapters">
  <TypeSignature Language="C#" Value="public static class CollectionAdapters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CollectionAdapters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Pipeline.CollectionAdapters" />
  <TypeSignature Language="VB.NET" Value="Public Class CollectionAdapters" />
  <TypeSignature Language="C++ CLI" Value="public ref class CollectionAdapters abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="88fca-101">Umożliwia kolekcje do przekazania między dodatek, a jej aplikację hosta.</span><span class="sxs-lookup"><span data-stu-id="88fca-101">Enables collections to be passed between an add-in and its host application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88fca-102">Ta klasa dostarcza metody, które umożliwiają <xref:System.Collections.Generic.IList%601> kolekcji ma zostać przekonwertowane na <xref:System.AddIn.Contract.IListContract%601> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="88fca-102">This class provides methods that enable an <xref:System.Collections.Generic.IList%601> collection to be converted to a <xref:System.AddIn.Contract.IListContract%601> collection.</span></span> <span data-ttu-id="88fca-103"><xref:System.AddIn.Contract.IListContract%601> Kolekcji jest przekazywane przez granica izolacji i konwertowana z powrotem do <xref:System.Collections.Generic.IList%601> kolekcji, która służy lub w aplikacji hosta.</span><span class="sxs-lookup"><span data-stu-id="88fca-103">The <xref:System.AddIn.Contract.IListContract%601> collection is passed across the isolation boundary and converted back to an <xref:System.Collections.Generic.IList%601> collection that the add-in or the host application can use.</span></span>  
  
 <span data-ttu-id="88fca-104">Obiekty w kolekcjach muszą być wykonywane zdalnie.</span><span class="sxs-lookup"><span data-stu-id="88fca-104">Objects in collections must be remotable.</span></span> <span data-ttu-id="88fca-105">Aby uzyskać więcej informacji na temat typów obiektów, które mogą upłynąć, zobacz [kontrakty, widoków i kart](http://msdn.microsoft.com/library/a6460173-9507-4b87-8c07-d4ee245d715c).</span><span class="sxs-lookup"><span data-stu-id="88fca-105">For more information about the object types that you can pass, see [Contracts, Views, and Adapters](http://msdn.microsoft.com/library/a6460173-9507-4b87-8c07-d4ee245d715c).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ToIList&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;T&gt; ToIList&lt;T&gt; (System.AddIn.Contract.IListContract&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;!!T&gt; ToIList&lt;T&gt;(class System.AddIn.Contract.IListContract`1&lt;!!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``1(System.AddIn.Contract.IListContract{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToIList(Of T) (collection As IListContract(Of T)) As IList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Generic::IList&lt;T&gt; ^ ToIList(System::AddIn::Contract::IListContract&lt;T&gt; ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="System.AddIn.Contract.IListContract&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="88fca-106">Typ obiektów, które znajdują się na liście.</span><span class="sxs-lookup"><span data-stu-id="88fca-106">The type of objects that are contained in the list.</span></span> <span data-ttu-id="88fca-107"><c>T</c> muszą podlegać serializacji.</span><span class="sxs-lookup"><span data-stu-id="88fca-107"><c>T</c> must be serializable.</span></span></typeparam>
        <param name="collection"><span data-ttu-id="88fca-108">Kolekcja z drugiej stronie potoku.</span><span class="sxs-lookup"><span data-stu-id="88fca-108">The collection from the other side of the pipeline.</span></span></param>
        <summary><span data-ttu-id="88fca-109">Konwertuje określony <see cref="T:System.AddIn.Contract.IListContract`1" /> kolekcji <see cref="T:System.Collections.Generic.IList`1" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="88fca-109">Converts the specified <see cref="T:System.AddIn.Contract.IListContract`1" /> collection to an <see cref="T:System.Collections.Generic.IList`1" /> collection.</span></span></summary>
        <returns><span data-ttu-id="88fca-110">Kolekcja przekonwertowany.</span><span class="sxs-lookup"><span data-stu-id="88fca-110">The converted collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88fca-111">Aplikacja hosta lub Dodaj służy zwróconego <xref:System.Collections.Generic.IList%601> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="88fca-111">The host application or add-in can use the returned <xref:System.Collections.Generic.IList%601> collection.</span></span> <span data-ttu-id="88fca-112"><xref:System.Collections.Generic.IList%601> Kolekcji mają okres istnienia tokenu do zdalnego <xref:System.AddIn.Contract.IListContract%601> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="88fca-112">The <xref:System.Collections.Generic.IList%601> collection will have a lifetime token for the remote <xref:System.AddIn.Contract.IListContract%601> collection.</span></span>  
  
 <span data-ttu-id="88fca-113">Przeciążenie tej metody należy używać tylko wtedy, gdy zawartość <xref:System.AddIn.Contract.IListContract%601> możliwy do serializacji typów, które mogą zostać przekazane bezpośrednio do dodatku i hosta (a nie typy, które muszą być dostosowywane do widoków).</span><span class="sxs-lookup"><span data-stu-id="88fca-113">You should use this method overload only when the contents of the <xref:System.AddIn.Contract.IListContract%601> are serializable types that can be passed directly to the add-in and host (rather than types that must be adapted into views).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88fca-114">Poniższy przykład implementuje segment potoku karty po stronie hosta, zgodnie z opisem [wskazówki: przekazywanie kolekcje między hostami i dodatki](http://msdn.microsoft.com/library/b532c604-548e-4fab-b11c-377257dd0ee5). Przykład dostosowuje niestandardowego `ProcessBooks` metody wykonując <xref:System.AddIn.Contract.IListContract%601> kolekcji przekazywane z dodatku, konwersja na <xref:System.Collections.Generic.IList%601> kolekcji, które umożliwiają aplikacji hosta.</span><span class="sxs-lookup"><span data-stu-id="88fca-114">The following example implements a host-side adapter pipeline segment as described [Walkthrough: Passing Collections Between Hosts and Add-Ins](http://msdn.microsoft.com/library/b532c604-548e-4fab-b11c-377257dd0ee5). The example adapts the custom `ProcessBooks` method by taking the <xref:System.AddIn.Contract.IListContract%601> collection passed from the add-in and converting it to an <xref:System.Collections.Generic.IList%601> collection, which the host application can then use.</span></span>  
  
 [!code-csharp[AddInCollectionPipelineAddInSideAdapter#3](~/samples/snippets/csharp/VS_Snippets_CLR/AddInCollectionPipelineAddInSideAdapter/cs/LibraryManagerViewToContractAddInAdapter.cs#3)]
 [!code-vb[AddInCollectionPipelineAddInSideAdapter#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AddInCollectionPipelineAddInSideAdapter/vb/LibraryManagerViewToContractAddInAdapter.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToIList&lt;TContract,TView&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;TView&gt; ToIList&lt;TContract,TView&gt; (System.AddIn.Contract.IListContract&lt;TContract&gt; collection, Converter&lt;TContract,TView&gt; contractViewAdapter, Converter&lt;TView,TContract&gt; viewContractAdapter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;!!TView&gt; ToIList&lt;TContract, TView&gt;(class System.AddIn.Contract.IListContract`1&lt;!!TContract&gt; collection, class System.Converter`2&lt;!!TContract, !!TView&gt; contractViewAdapter, class System.Converter`2&lt;!!TView, !!TContract&gt; viewContractAdapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``2(System.AddIn.Contract.IListContract{``0},System.Converter{``0,``1},System.Converter{``1,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToIList(Of TContract, TView) (collection As IListContract(Of TContract), contractViewAdapter As Converter(Of TContract, TView), viewContractAdapter As Converter(Of TView, TContract)) As IList(Of TView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TContract, typename TView&gt;&#xA; static System::Collections::Generic::IList&lt;TView&gt; ^ ToIList(System::AddIn::Contract::IListContract&lt;TContract&gt; ^ collection, Converter&lt;TContract, TView&gt; ^ contractViewAdapter, Converter&lt;TView, TContract&gt; ^ viewContractAdapter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;TView&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContract" />
        <TypeParameter Name="TView" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="System.AddIn.Contract.IListContract&lt;TContract&gt;" />
        <Parameter Name="contractViewAdapter" Type="System.Converter&lt;TContract,TView&gt;" />
        <Parameter Name="viewContractAdapter" Type="System.Converter&lt;TView,TContract&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TContract"><span data-ttu-id="88fca-115">Typ, który definiuje kontrakt dla obiektów typu przekazywanie <c>TView</c> granicy izolacji.</span><span class="sxs-lookup"><span data-stu-id="88fca-115">The type that defines the contract for passing objects of type <c>TView</c> across the isolation boundary.</span></span></typeparam>
        <typeparam name="TView"><span data-ttu-id="88fca-116">Typ, który definiuje widoku obiektów na liście.</span><span class="sxs-lookup"><span data-stu-id="88fca-116">The type that defines the view of the objects in the list.</span></span></typeparam>
        <param name="collection"><span data-ttu-id="88fca-117">Kolekcja do przekazania do drugiej stronie potoku.</span><span class="sxs-lookup"><span data-stu-id="88fca-117">The collection to pass to the other side of the pipeline.</span></span></param>
        <param name="contractViewAdapter"><span data-ttu-id="88fca-118">Konwerter, który dostosowuje się od typu zdefiniowanego w umowie na typ oczekiwany w widoku danych.</span><span class="sxs-lookup"><span data-stu-id="88fca-118">A converter that adapts the data from the type defined in the contract to the type expected in the view.</span></span></param>
        <param name="viewContractAdapter"><span data-ttu-id="88fca-119">Konwerter, który dostosowuje danych od typu zdefiniowanego w widoku na typ oczekiwany przez umowy.</span><span class="sxs-lookup"><span data-stu-id="88fca-119">A converter that adapts the data from the type defined in the view to the type expected by the contract.</span></span></param>
        <summary><span data-ttu-id="88fca-120">Konwertuje określoną <see cref="T:System.AddIn.Contract.IListContract`1" /> kolekcji <see cref="T:System.Collections.Generic.IList`1" /> kolekcji za pomocą konwertera kart.</span><span class="sxs-lookup"><span data-stu-id="88fca-120">Converts a specified <see cref="T:System.AddIn.Contract.IListContract`1" /> collection to an <see cref="T:System.Collections.Generic.IList`1" /> collection by using converter adapters.</span></span></summary>
        <returns><span data-ttu-id="88fca-121">Kolekcja przekonwertowany.</span><span class="sxs-lookup"><span data-stu-id="88fca-121">The converted collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88fca-122">To przeciążenie metody dla <xref:System.AddIn.Contract.IListContract%601> kolekcje, które zawierają typy, które muszą zostać dostosowane, zanim mogą zostać przekazane do dodatku lub hosta (a nie do serializacji typów prostych, które mogą zostać przekazane bezpośrednio).</span><span class="sxs-lookup"><span data-stu-id="88fca-122">Use this method overload for <xref:System.AddIn.Contract.IListContract%601> collections that contain types that must be adapted before they can be passed to the add-in or host (rather than simple serializable types that can be passed directly).</span></span> <span data-ttu-id="88fca-123">Aplikacja hosta lub Dodaj służy zwróconego <xref:System.Collections.Generic.IList%601> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="88fca-123">The host application or add-in can use the returned <xref:System.Collections.Generic.IList%601> collection.</span></span> <span data-ttu-id="88fca-124">Jej okres istnienia tokenu do zdalnego <xref:System.AddIn.Contract.IListContract%601>.</span><span class="sxs-lookup"><span data-stu-id="88fca-124">It will have a lifetime token for the remote <xref:System.AddIn.Contract.IListContract%601>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToIListContract&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.IListContract&lt;T&gt; ToIListContract&lt;T&gt; (System.Collections.Generic.IList&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Contract.IListContract`1&lt;!!T&gt; ToIListContract&lt;T&gt;(class System.Collections.Generic.IList`1&lt;!!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``1(System.Collections.Generic.IList{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToIListContract(Of T) (collection As IList(Of T)) As IListContract(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::AddIn::Contract::IListContract&lt;T&gt; ^ ToIListContract(System::Collections::Generic::IList&lt;T&gt; ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IListContract&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IList&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="88fca-125">Typ obiektów, które znajdują się na liście.</span><span class="sxs-lookup"><span data-stu-id="88fca-125">The type of objects that are contained in the list.</span></span> <span data-ttu-id="88fca-126"><c>T</c> muszą podlegać serializacji.</span><span class="sxs-lookup"><span data-stu-id="88fca-126"><c>T</c> must be serializable.</span></span></typeparam>
        <param name="collection"><span data-ttu-id="88fca-127">Kolekcja do konwersji.</span><span class="sxs-lookup"><span data-stu-id="88fca-127">The collection to convert.</span></span></param>
        <summary><span data-ttu-id="88fca-128">Konwertuje określoną <see cref="T:System.Collections.Generic.IList`1" /> kolekcji <see cref="T:System.AddIn.Contract.IListContract`1" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="88fca-128">Converts a specified <see cref="T:System.Collections.Generic.IList`1" /> collection to an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <returns><span data-ttu-id="88fca-129">Kolekcja przekonwertowany.</span><span class="sxs-lookup"><span data-stu-id="88fca-129">The converted collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88fca-130"><xref:System.AddIn.Contract.IListContract%601> Kolekcji można zorganizować granicy izolacji między dodatek, a jej aplikację hosta.</span><span class="sxs-lookup"><span data-stu-id="88fca-130">The <xref:System.AddIn.Contract.IListContract%601> collection can be marshaled across the isolation boundary between the add-in and its host application.</span></span>  
  
 <span data-ttu-id="88fca-131">Przeciążenie tej metody należy używać tylko wtedy, gdy zawartość <xref:System.Collections.Generic.IList%601> kolekcji jest możliwy do serializacji typy, które mogą zostać przekazane bezpośrednio do kontraktu (zamiast typów, które muszą być dostosowywane do umów).</span><span class="sxs-lookup"><span data-stu-id="88fca-131">You should use this method overload only when the contents of the <xref:System.Collections.Generic.IList%601> collection are serializable types that can be passed directly to the contract (rather than types that must be adapted into contracts).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88fca-132">Poniższy przykład implementuje klasy, która definiuje segmentów potoku karty po stronie dodatku.</span><span class="sxs-lookup"><span data-stu-id="88fca-132">The following example implements the class that defines an add-in side adapter pipeline segment.</span></span> <span data-ttu-id="88fca-133">Dostosowuje go niestandardowego `ProcessBooks` metody wykonując <xref:System.Collections.Generic.IList%601> kolekcji przekazywane z segmentem dodatku widoku i konwersja na <xref:System.AddIn.Contract.IListContract%601> kolekcji, które mogą być przekazywane granicy izolacji na hoście.</span><span class="sxs-lookup"><span data-stu-id="88fca-133">It adapts the custom `ProcessBooks` method by taking the <xref:System.Collections.Generic.IList%601> collection passed from the add-in view segment and converting it to an <xref:System.AddIn.Contract.IListContract%601> collection that can be marshaled across the isolation boundary to the host.</span></span>  
  
 [!code-csharp[AddInCollectionPipelineHostSideAdapter#4](~/samples/snippets/csharp/VS_Snippets_CLR/AddInCollectionPipelineHostSideAdapter/cs/LibraryManagerContractToViewHostAdapter.cs#4)]
 [!code-vb[AddInCollectionPipelineHostSideAdapter#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/AddInCollectionPipelineHostSideAdapter/vb/LibraryManagerContractToViewHostAdapter.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToIListContract&lt;TView,TContract&gt;">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.IListContract&lt;TContract&gt; ToIListContract&lt;TView,TContract&gt; (System.Collections.Generic.IList&lt;TView&gt; collection, Converter&lt;TView,TContract&gt; viewContractAdapter, Converter&lt;TContract,TView&gt; contractViewAdapter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Contract.IListContract`1&lt;!!TContract&gt; ToIListContract&lt;TView, TContract&gt;(class System.Collections.Generic.IList`1&lt;!!TView&gt; collection, class System.Converter`2&lt;!!TView, !!TContract&gt; viewContractAdapter, class System.Converter`2&lt;!!TContract, !!TView&gt; contractViewAdapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``2(System.Collections.Generic.IList{``0},System.Converter{``0,``1},System.Converter{``1,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToIListContract(Of TView, TContract) (collection As IList(Of TView), viewContractAdapter As Converter(Of TView, TContract), contractViewAdapter As Converter(Of TContract, TView)) As IListContract(Of TContract)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TView, typename TContract&gt;&#xA; static System::AddIn::Contract::IListContract&lt;TContract&gt; ^ ToIListContract(System::Collections::Generic::IList&lt;TView&gt; ^ collection, Converter&lt;TView, TContract&gt; ^ viewContractAdapter, Converter&lt;TContract, TView&gt; ^ contractViewAdapter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IListContract&lt;TContract&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TView" />
        <TypeParameter Name="TContract" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IList&lt;TView&gt;" />
        <Parameter Name="viewContractAdapter" Type="System.Converter&lt;TView,TContract&gt;" />
        <Parameter Name="contractViewAdapter" Type="System.Converter&lt;TContract,TView&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TView"><span data-ttu-id="88fca-134">Typ, który definiuje widoku obiektów na liście.</span><span class="sxs-lookup"><span data-stu-id="88fca-134">The type that defines the view of the objects in the list.</span></span></typeparam>
        <typeparam name="TContract"><span data-ttu-id="88fca-135">Typ, który definiuje kontrakt dla obiektów typu przekazywanie <c>TView</c> granicy izolacji.</span><span class="sxs-lookup"><span data-stu-id="88fca-135">The type that defines the contract for passing objects of type <c>TView</c> across the isolation boundary.</span></span></typeparam>
        <param name="collection"><span data-ttu-id="88fca-136">Kolekcja do konwersji.</span><span class="sxs-lookup"><span data-stu-id="88fca-136">The collection to convert.</span></span></param>
        <param name="viewContractAdapter"><span data-ttu-id="88fca-137">Konwerter, który dostosowuje danych od typu zdefiniowanego w widoku na typ oczekiwany przez umowy.</span><span class="sxs-lookup"><span data-stu-id="88fca-137">A converter that adapts the data from the type defined in the view to the type expected by the contract.</span></span></param>
        <param name="contractViewAdapter"><span data-ttu-id="88fca-138">Konwerter, który dostosowuje się od typu zdefiniowanego w umowie na typ oczekiwany w widoku danych.</span><span class="sxs-lookup"><span data-stu-id="88fca-138">A converter that adapts the data from the type defined in the contract to the type expected in the view.</span></span></param>
        <summary><span data-ttu-id="88fca-139">Konwertuje określoną <see cref="T:System.Collections.Generic.IList`1" /> kolekcji <see cref="T:System.AddIn.Contract.IListContract`1" /> kolekcji za pomocą konwertera kart.</span><span class="sxs-lookup"><span data-stu-id="88fca-139">Converts a specified <see cref="T:System.Collections.Generic.IList`1" /> collection to an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection by using converter adapters.</span></span></summary>
        <returns><span data-ttu-id="88fca-140">Kolekcja przekonwertowany.</span><span class="sxs-lookup"><span data-stu-id="88fca-140">The converted collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88fca-141">To przeciążenie metody dla <xref:System.Collections.Generic.IList%601> kolekcje, które zawierają typy, które musi być dostosowywane w umowach przed mogą zostać przekazane do kontraktu (a nie do serializacji typów prostych, które mogą zostać przekazane bezpośrednio).</span><span class="sxs-lookup"><span data-stu-id="88fca-141">Use this method overload for <xref:System.Collections.Generic.IList%601> collections that contain types that must be adapted into contracts before they can be passed to the contract (rather than simple serializable types that can be passed directly).</span></span> <span data-ttu-id="88fca-142"><xref:System.AddIn.Contract.IListContract%601> Kolekcji można zorganizować granicy izolacji między dodatek, a jej aplikację hosta.</span><span class="sxs-lookup"><span data-stu-id="88fca-142">The <xref:System.AddIn.Contract.IListContract%601> collection can be marshaled across the isolation boundary between an add-in and its host application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>