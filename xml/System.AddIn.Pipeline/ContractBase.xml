<Type Name="ContractBase" FullName="System.AddIn.Pipeline.ContractBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="43d41edffa963b0c0c415eb919497d8cdba1eb31" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69337054" /></Metadata><TypeSignature Language="C#" Value="public class ContractBase : MarshalByRefObject, System.AddIn.Contract.IContract, System.Runtime.Remoting.Lifetime.ISponsor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContractBase extends System.MarshalByRefObject implements class System.AddIn.Contract.IContract, class System.Runtime.Remoting.Lifetime.ISponsor" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Pipeline.ContractBase" />
  <TypeSignature Language="VB.NET" Value="Public Class ContractBase&#xA;Inherits MarshalByRefObject&#xA;Implements IContract, ISponsor" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContractBase : MarshalByRefObject, System::AddIn::Contract::IContract, System::Runtime::Remoting::Lifetime::ISponsor" />
  <TypeSignature Language="F#" Value="type ContractBase = class&#xA;    inherit MarshalByRefObject&#xA;    interface IContract&#xA;    interface ISponsor" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Lifetime.ISponsor</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="2c2a7-101">Zapewnia domyślną implementację <see cref="T:System.AddIn.Contract.IContract" /> elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="2c2a7-101">Provides a default implementation of <see cref="T:System.AddIn.Contract.IContract" /> members.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c2a7-102">Kontrakty definiują typy i metody używane przez hosta i dodatek.</span><span class="sxs-lookup"><span data-stu-id="2c2a7-102">Contracts define the types and methods used by the host and the add-in.</span></span> <span data-ttu-id="2c2a7-103">Wszystkie kontrakty muszą pochodzić <xref:System.AddIn.Contract.IContract>od.</span><span class="sxs-lookup"><span data-stu-id="2c2a7-103">All contracts must derive from <xref:System.AddIn.Contract.IContract>.</span></span> <span data-ttu-id="2c2a7-104">Ta klasa udostępnia domyślną implementację <xref:System.AddIn.Contract.IContract> elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="2c2a7-104">This class provides the default implementation of <xref:System.AddIn.Contract.IContract> members.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/8dd45b02-7218-40f9-857d-40d7b98b850b"><span data-ttu-id="2c2a7-105">Dodatki i rozszerzalność</span><span class="sxs-lookup"><span data-stu-id="2c2a7-105">Add-Ins and Extensibility</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContractBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContractBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2c2a7-106">Inicjuje nowe wystąpienie klasy <see cref="T:System.AddIn.Pipeline.ContractBase" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="2c2a7-106">Initializes a new instance of the <see cref="T:System.AddIn.Pipeline.ContractBase" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcquireLifetimeToken">
      <MemberSignature Language="C#" Value="public int AcquireLifetimeToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 AcquireLifetimeToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.AcquireLifetimeToken" />
      <MemberSignature Language="VB.NET" Value="Public Function AcquireLifetimeToken () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int AcquireLifetimeToken();" />
      <MemberSignature Language="F#" Value="abstract member AcquireLifetimeToken : unit -&gt; int&#xA;override this.AcquireLifetimeToken : unit -&gt; int" Usage="contractBase.AcquireLifetimeToken " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.AddIn.Contract.IContract.AcquireLifetimeToken</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2c2a7-107">Uzyskuje token okresu istnienia.</span><span class="sxs-lookup"><span data-stu-id="2c2a7-107">Obtains a lifetime token.</span></span></summary>
        <returns><span data-ttu-id="2c2a7-108">Liczba Losowa, która identyfikuje token.</span><span class="sxs-lookup"><span data-stu-id="2c2a7-108">A random number that identifies a token.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2c2a7-109">Wszystkie poprzednio pobrane tokeny zostały odwołane.</span><span class="sxs-lookup"><span data-stu-id="2c2a7-109">All previously acquired tokens have been revoked.</span></span>  <span data-ttu-id="2c2a7-110">Żadne dalsze tokeny nie są dostępne.</span><span class="sxs-lookup"><span data-stu-id="2c2a7-110">No further tokens are available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRemoteHashCode">
      <MemberSignature Language="C#" Value="public virtual int GetRemoteHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetRemoteHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.GetRemoteHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRemoteHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetRemoteHashCode();" />
      <MemberSignature Language="F#" Value="abstract member GetRemoteHashCode : unit -&gt; int&#xA;override this.GetRemoteHashCode : unit -&gt; int" Usage="contractBase.GetRemoteHashCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.AddIn.Contract.IContract.GetRemoteHashCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2c2a7-111">Pobiera kod skrótu dla bieżącego <see cref="T:System.AddIn.Pipeline.ContractBase" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="2c2a7-111">Gets the hash code for the current <see cref="T:System.AddIn.Pipeline.ContractBase" /> object.</span></span></summary>
        <returns><span data-ttu-id="2c2a7-112">Kod skrótu dla bieżącego <see cref="T:System.AddIn.Pipeline.ContractBase" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="2c2a7-112">A hash code for the current <see cref="T:System.AddIn.Pipeline.ContractBase" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFinalRevoke">
      <MemberSignature Language="C#" Value="protected virtual void OnFinalRevoke ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFinalRevoke() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.OnFinalRevoke" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFinalRevoke ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFinalRevoke();" />
      <MemberSignature Language="F#" Value="abstract member OnFinalRevoke : unit -&gt; unit&#xA;override this.OnFinalRevoke : unit -&gt; unit" Usage="contractBase.OnFinalRevoke " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2c2a7-113">Gdy jest zastępowany na karcie dodatku, zwalnia zasoby natywne przechowywane przez adapter.</span><span class="sxs-lookup"><span data-stu-id="2c2a7-113">When overridden in an add-in-side adapter, releases native resources held by the adapter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c2a7-114">Ta metoda jest wywoływana przez system w przypadku odwołania wszystkich tokenów okresu istnienia uzyskanych z bieżącego <xref:System.AddIn.Pipeline.ContractBase> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="2c2a7-114">This method is called by the system when all the lifetime tokens that have been acquired from the current <xref:System.AddIn.Pipeline.ContractBase> instance have been revoked.</span></span> <span data-ttu-id="2c2a7-115">Użyj tej metody, aby wyczyścić wszystkie zasoby natywne przechowywane przez adapter i aby sygnalizować dostosowane widoki, które powinny być takie same.</span><span class="sxs-lookup"><span data-stu-id="2c2a7-115">Use this method to clean up any native resources held by the adapter, and to signal to the adapted views that they should do the same.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContract">
      <MemberSignature Language="C#" Value="public virtual System.AddIn.Contract.IContract QueryContract (string contractIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.IContract QueryContract(string contractIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.QueryContract(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QueryContract (contractIdentifier As String) As IContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::AddIn::Contract::IContract ^ QueryContract(System::String ^ contractIdentifier);" />
      <MemberSignature Language="F#" Value="abstract member QueryContract : string -&gt; System.AddIn.Contract.IContract&#xA;override this.QueryContract : string -&gt; System.AddIn.Contract.IContract" Usage="contractBase.QueryContract contractIdentifier" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.AddIn.Contract.IContract.QueryContract(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contractIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractIdentifier"><span data-ttu-id="2c2a7-116">Pełna nazwa kontraktu wraz z jego nazwą zestawu.</span><span class="sxs-lookup"><span data-stu-id="2c2a7-116">The full name of the contract, including its assembly name.</span></span></param>
        <summary><span data-ttu-id="2c2a7-117">Odzwierciedla wystąpienie kontraktu i zwraca <see langword="this" /> wskaźnik, jeśli bieżący obiekt implementuje ten kontrakt.</span><span class="sxs-lookup"><span data-stu-id="2c2a7-117">Reflects over the instance of a contract and returns the <see langword="this" /> pointer if the current object implements that contract.</span></span></summary>
        <returns><span data-ttu-id="2c2a7-118">Wskaźnik do interfejsu lub<see langword="null" /> , jeśli kontrakt nie jest zaimplementowany. <see cref="T:System.AddIn.Contract.IContract" /> <see langword="this" /></span><span class="sxs-lookup"><span data-stu-id="2c2a7-118">The <see langword="this" /> pointer to an <see cref="T:System.AddIn.Contract.IContract" /> interface, or <see langword="null" /> if the contract is not implemented.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c2a7-119">Tę metodę można zastąpić.</span><span class="sxs-lookup"><span data-stu-id="2c2a7-119">This method can be overridden.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2c2a7-120"><paramref name="contractIdentifier" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2c2a7-120"><paramref name="contractIdentifier" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoteEquals">
      <MemberSignature Language="C#" Value="public virtual bool RemoteEquals (System.AddIn.Contract.IContract contract);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoteEquals(class System.AddIn.Contract.IContract contract) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.RemoteEquals(System.AddIn.Contract.IContract)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoteEquals (contract As IContract) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool RemoteEquals(System::AddIn::Contract::IContract ^ contract);" />
      <MemberSignature Language="F#" Value="abstract member RemoteEquals : System.AddIn.Contract.IContract -&gt; bool&#xA;override this.RemoteEquals : System.AddIn.Contract.IContract -&gt; bool" Usage="contractBase.RemoteEquals contract" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.AddIn.Contract.IContract.RemoteEquals(System.AddIn.Contract.IContract)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.AddIn.Contract.IContract" />
      </Parameters>
      <Docs>
        <param name="contract"><span data-ttu-id="2c2a7-121">Obiekt, który ma zostać przetestowany pod kątem równości ze zdalnym obiektem.</span><span class="sxs-lookup"><span data-stu-id="2c2a7-121">The object to test for equality with the remote object.</span></span></param>
        <summary><span data-ttu-id="2c2a7-122">Porównuje obiekt ze zdalnym obiektem dla równości.</span><span class="sxs-lookup"><span data-stu-id="2c2a7-122">Compares an object with a remote object for equality.</span></span></summary>
        <returns><span data-ttu-id="2c2a7-123"><see langword="true" />Jeśli obiekt jest równy obiektowi zdalnemu; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2c2a7-123"><see langword="true" /> if the object is equal to the remote object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteToString">
      <MemberSignature Language="C#" Value="public virtual string RemoteToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string RemoteToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.RemoteToString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoteToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ RemoteToString();" />
      <MemberSignature Language="F#" Value="abstract member RemoteToString : unit -&gt; string&#xA;override this.RemoteToString : unit -&gt; string" Usage="contractBase.RemoteToString " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.AddIn.Contract.IContract.RemoteToString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2c2a7-124">Pobiera ciąg, który identyfikuje obiekt zdalny.</span><span class="sxs-lookup"><span data-stu-id="2c2a7-124">Gets a string that identifies a remote object.</span></span></summary>
        <returns><span data-ttu-id="2c2a7-125">Ciąg, który identyfikuje obiekt zdalny.</span><span class="sxs-lookup"><span data-stu-id="2c2a7-125">A string that identifies the remote object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Renewal">
      <MemberSignature Language="C#" Value="public TimeSpan Renewal (System.Runtime.Remoting.Lifetime.ILease lease);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TimeSpan Renewal(class System.Runtime.Remoting.Lifetime.ILease lease) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.Renewal(System.Runtime.Remoting.Lifetime.ILease)" />
      <MemberSignature Language="VB.NET" Value="Public Function Renewal (lease As ILease) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TimeSpan Renewal(System::Runtime::Remoting::Lifetime::ILease ^ lease);" />
      <MemberSignature Language="F#" Value="abstract member Renewal : System.Runtime.Remoting.Lifetime.ILease -&gt; TimeSpan&#xA;override this.Renewal : System.Runtime.Remoting.Lifetime.ILease -&gt; TimeSpan" Usage="contractBase.Renewal lease" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Lifetime.ISponsor.Renewal(System.Runtime.Remoting.Lifetime.ILease)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lease" Type="System.Runtime.Remoting.Lifetime.ILease" />
      </Parameters>
      <Docs>
        <param name="lease"><span data-ttu-id="2c2a7-126">Obiekt dzierżawy okresu istnienia używany przez usługę czas trwania komunikacji zdalnej.</span><span class="sxs-lookup"><span data-stu-id="2c2a7-126">The lifetime lease object that is used by the remoting lifetime service.</span></span></param>
        <summary><span data-ttu-id="2c2a7-127">Wnioskuje klienta sponsorowania o odnowienie dzierżawy dla określonego obiektu.</span><span class="sxs-lookup"><span data-stu-id="2c2a7-127">Requests a sponsoring client to renew the lease for the specified object.</span></span></summary>
        <returns><span data-ttu-id="2c2a7-128">Odnowiona dzierżawa.</span><span class="sxs-lookup"><span data-stu-id="2c2a7-128">The renewed lease.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2c2a7-129"><paramref name="lease" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2c2a7-129"><paramref name="lease" /> is <see langword="null" />.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="2c2a7-130">aby uzyskać pełne zaufanie dla bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="2c2a7-130">for full trust for the immediate caller.</span></span> <span data-ttu-id="2c2a7-131">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="2c2a7-131">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="RevokeLifetimeToken">
      <MemberSignature Language="C#" Value="public void RevokeLifetimeToken (int token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RevokeLifetimeToken(int32 token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.RevokeLifetimeToken(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RevokeLifetimeToken (token As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RevokeLifetimeToken(int token);" />
      <MemberSignature Language="F#" Value="abstract member RevokeLifetimeToken : int -&gt; unit&#xA;override this.RevokeLifetimeToken : int -&gt; unit" Usage="contractBase.RevokeLifetimeToken token" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.AddIn.Contract.IContract.RevokeLifetimeToken(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="2c2a7-132">Numer tokenu.</span><span class="sxs-lookup"><span data-stu-id="2c2a7-132">The token number.</span></span></param>
        <summary><span data-ttu-id="2c2a7-133">Usuwa określony token z listy zaległych tokenów okresu istnienia.</span><span class="sxs-lookup"><span data-stu-id="2c2a7-133">Removes the specified token from the list of outstanding lifetime tokens.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c2a7-134">Jeśli token nie znajduje się na liście zaległych tokenów istnienia, ta metoda zgłasza <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="2c2a7-134">If the token is not in the list of outstanding lifetime tokens, this method throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2c2a7-135"><paramref name="token" />nie znajduje się na liście zaległych tokenów okresu istnienia.</span><span class="sxs-lookup"><span data-stu-id="2c2a7-135"><paramref name="token" /> is not found in the list of outstanding lifetime tokens.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
