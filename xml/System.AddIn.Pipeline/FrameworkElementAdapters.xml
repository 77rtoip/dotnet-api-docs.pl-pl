<Type Name="FrameworkElementAdapters" FullName="System.AddIn.Pipeline.FrameworkElementAdapters">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4e3f5f9a2cf8d810ccd1e3c5b6394bea9e9da66f" />
    <Meta Name="ms.sourcegitcommit" Value="f9e3295b6cc303a611a73a84c4b27f9da792ad0d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/26/2018" />
    <Meta Name="ms.locfileid" Value="31907602" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class FrameworkElementAdapters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FrameworkElementAdapters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Pipeline.FrameworkElementAdapters" />
  <TypeSignature Language="VB.NET" Value="Public Class FrameworkElementAdapters" />
  <TypeSignature Language="C++ CLI" Value="public ref class FrameworkElementAdapters abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.AddIn.Pipeline.FrameworkElementAdapters" /> jest używany przez dodatki Windows Presentation Foundation (WPF) do konwersji między <see cref="T:System.Windows.FrameworkElement" /> i <see cref="T:System.AddIn.Contract.INativeHandleContract" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
Windows Presentation Foundation (WPF) rozszerza model dodatku .NET Framework umożliwia WPF UI przekazywane między hosta aplikacji i dodatków. WPF wymaga UI WPF który są przekazywane albo bezpośrednio lub pośrednio pochodzi od <xref:System.Windows.FrameworkElement>. Jednak dodatków i hosta aplikacje są zazwyczaj uruchamiane w innej aplikacji domeny i są w związku z tym, rozdzielone przez granicę izolacji. Z tego powodu modelu dodatku .NET Framework wymaga typów, które są przekazywane przez granica izolacji, być może być zastosowana zdalnie. Typem może być zastosowana zdalnie odpowiada jednej z następujących czynności:  
  
-   Implementuje <xref:System.Runtime.Serialization.ISerializable> interfejsu.  
  
-   Ma <xref:System.SerializableAttribute> atrybut zastosowany.  
  
-   Pochodną <xref:System.MarshalByRefObject> klasy.  
  
 <xref:System.Windows.FrameworkElement> nie jest wykonywane zdalnie i musi zostać skonwertowany do typu może być zastosowana zdalnie przed przekazaniem granicy izolacji między dodatek i aplikacji hosta. W tym celu należy wywołać statycznych <xref:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter%2A> metodę, aby przekonwertować <xref:System.Windows.FrameworkElement> na wystąpienie może być zastosowana zdalnie <xref:System.AddIn.Contract.INativeHandleContract>.  
  
 Raz <xref:System.AddIn.Contract.INativeHandleContract> jest przekazywany w granicy izolacji musi zostać skonwertowany do typu, który można wyświetlić w aplikacji hosta lub dodatek. W tym przypadku statycznych <xref:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter%2A> metoda jest wywoływana, aby przekonwertować <xref:System.AddIn.Contract.INativeHandleContract> do <xref:System.Windows.FrameworkElement>.  
  
 Aby uzyskać bardziej szczegółowe specyfikacji dodatki WPF, zobacz [omówienie Add-Ins WPF](~/docs/framework/wpf/app-development/wpf-add-ins-overview.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ContractToViewAdapter">
      <MemberSignature Language="C#" Value="public static System.Windows.FrameworkElement ContractToViewAdapter (System.AddIn.Contract.INativeHandleContract nativeHandleContract);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.FrameworkElement ContractToViewAdapter(class System.AddIn.Contract.INativeHandleContract nativeHandleContract) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter(System.AddIn.Contract.INativeHandleContract)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContractToViewAdapter (nativeHandleContract As INativeHandleContract) As FrameworkElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::FrameworkElement ^ ContractToViewAdapter(System::AddIn::Contract::INativeHandleContract ^ nativeHandleContract);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FrameworkElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nativeHandleContract" Type="System.AddIn.Contract.INativeHandleContract" />
      </Parameters>
      <Docs>
        <param name="nativeHandleContract">
          <see cref="T:System.AddIn.Contract.INativeHandleContract" /> Przekazany granicy izolacji między aplikacją hosta a dodatku.</param>
        <summary>Zwraca <see cref="T:System.Windows.FrameworkElement" /> który została przekonwertowana z <see cref="T:System.AddIn.Contract.INativeHandleContract" />.</summary>
        <returns>A <see cref="T:System.Windows.FrameworkElement" /> który pojawi się z hostem aplikacji albo dodatku, w zależności od kierunku, w którym [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] są przekazywane między nimi.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter(System.Windows.FrameworkElement)" />
      </Docs>
    </Member>
    <Member MemberName="ViewToContractAdapter">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.INativeHandleContract ViewToContractAdapter (System.Windows.FrameworkElement root);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Contract.INativeHandleContract ViewToContractAdapter(class System.Windows.FrameworkElement root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ViewToContractAdapter (root As FrameworkElement) As INativeHandleContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::AddIn::Contract::INativeHandleContract ^ ViewToContractAdapter(System::Windows::FrameworkElement ^ root);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.INativeHandleContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="root">
          <see cref="T:System.Windows.FrameworkElement" /> Przekazywane między aplikacji hosta i Dodaj w granicy izolacji.</param>
        <summary>Zwraca <see cref="T:System.AddIn.Contract.INativeHandleContract" /> który została przekonwertowana z <see cref="T:System.Windows.FrameworkElement" />.</summary>
        <returns>
          <see cref="T:System.AddIn.Contract.INativeHandleContract" /> Przekazanego z aplikacji hosta lub dodatek, w zależności od kierunku, w którym [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] są przekazywane między nimi.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="root" /> nie jest elementem głównym drzewa elementów.</exception>
        <altmember cref="M:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter(System.AddIn.Contract.INativeHandleContract)" />
      </Docs>
    </Member>
  </Members>
</Type>